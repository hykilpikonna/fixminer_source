INS ExpressionStatement@@Assignment:create|=processAuthorization(securityDomain,model,applicationPolicy) @TO@ MethodDeclaration@@private, ApplicationPolicy, MethodName:createApplicationPolicy, String securityDomain, final ModelNode model,  @AT@ 10931 @LENGTH@ 72
---INS Assignment@@create|=processAuthorization(securityDomain,model,applicationPolicy) @TO@ ExpressionStatement@@Assignment:create|=processAuthorization(securityDomain,model,applicationPolicy) @AT@ 10931 @LENGTH@ 71
------INS SimpleName@@create @TO@ Assignment@@create|=processAuthorization(securityDomain,model,applicationPolicy) @AT@ 10931 @LENGTH@ 6
------INS Operator@@|= @TO@ Assignment@@create|=processAuthorization(securityDomain,model,applicationPolicy) @AT@ 10937 @LENGTH@ 2
------INS MethodInvocation@@processAuthorization(securityDomain,model,applicationPolicy) @TO@ Assignment@@create|=processAuthorization(securityDomain,model,applicationPolicy) @AT@ 10941 @LENGTH@ 61
---------INS SimpleName@@MethodName:processAuthorization:[securityDomain, model, applicationPolicy] @TO@ MethodInvocation@@processAuthorization(securityDomain,model,applicationPolicy) @AT@ 10941 @LENGTH@ 61
------------INS SimpleName@@securityDomain @TO@ SimpleName@@MethodName:processAuthorization:[securityDomain, model, applicationPolicy] @AT@ 10962 @LENGTH@ 14
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:processAuthorization:[securityDomain, model, applicationPolicy] @AT@ 10978 @LENGTH@ 5
------------INS SimpleName@@applicationPolicy @TO@ SimpleName@@MethodName:processAuthorization:[securityDomain, model, applicationPolicy] @AT@ 10984 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupInclude(reader.getLocation()) @AT@ 17968 @LENGTH@ 82
---UPD MethodInvocation@@HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupInclude(reader.getLocation()) @AT@ 17968 @LENGTH@ 81
------UPD SimpleName@@MethodName:warnIgnoringSocketBindingGroupIgnore:[reader.getLocation()] @TO@ MethodName:warnIgnoringSocketBindingGroupInclude:[reader.getLocation()] @AT@ 17991 @LENGTH@ 58


UPD Block@@ThenBody:{  final SimpleSecurityManager securityManager=ejbComponent.getSecurityManager();  if (!securityManager.isCallerInRole(ejbComponent.getSecurityMetaData().getSecurityRoles(),allowedRoles.toArray(new String[allowedRoles.size()]))) {    throw MESSAGES.invocationOfMethodNotAllowed(invokedMethod,ejbComponent.getComponentName());  }} @TO@ ThenBody:{  final SimpleSecurityManager securityManager=ejbComponent.getSecurityManager();  final EJBSecurityMetaData ejbSecurityMetaData=ejbComponent.getSecurityMetaData();  if (!securityManager.isCallerInRole(ejbSecurityMetaData.getSecurityRoles(),ejbSecurityMetaData.getSecurityRoleLinks(),allowedRoles.toArray(new String[allowedRoles.size()]))) {    throw MESSAGES.invocationOfMethodNotAllowed(invokedMethod,ejbComponent.getComponentName());  }} @AT@ 4292 @LENGTH@ 474
---UPD IfStatement@@if (!securityManager.isCallerInRole(ejbComponent.getSecurityMetaData().getSecurityRoles(),allowedRoles.toArray(new String[allowedRoles.size()]))) {  throw MESSAGES.invocationOfMethodNotAllowed(invokedMethod,ejbComponent.getComponentName());} @TO@ if (!securityManager.isCallerInRole(ejbSecurityMetaData.getSecurityRoles(),ejbSecurityMetaData.getSecurityRoleLinks(),allowedRoles.toArray(new String[allowedRoles.size()]))) {  throw MESSAGES.invocationOfMethodNotAllowed(invokedMethod,ejbComponent.getComponentName());} @AT@ 4474 @LENGTH@ 278
------UPD PrefixExpression@@!securityManager.isCallerInRole(ejbComponent.getSecurityMetaData().getSecurityRoles(),allowedRoles.toArray(new String[allowedRoles.size()])) @TO@ !securityManager.isCallerInRole(ejbSecurityMetaData.getSecurityRoles(),ejbSecurityMetaData.getSecurityRoleLinks(),allowedRoles.toArray(new String[allowedRoles.size()])) @AT@ 4478 @LENGTH@ 141
---------UPD MethodInvocation@@securityManager.isCallerInRole(ejbComponent.getSecurityMetaData().getSecurityRoles(),allowedRoles.toArray(new String[allowedRoles.size()])) @TO@ securityManager.isCallerInRole(ejbSecurityMetaData.getSecurityRoles(),ejbSecurityMetaData.getSecurityRoleLinks(),allowedRoles.toArray(new String[allowedRoles.size()])) @AT@ 4479 @LENGTH@ 140
------------UPD SimpleName@@MethodName:isCallerInRole:[ejbComponent.getSecurityMetaData().getSecurityRoles(), allowedRoles.toArray(new String[allowedRoles.size()])] @TO@ MethodName:isCallerInRole:[ejbSecurityMetaData.getSecurityRoles(), ejbSecurityMetaData.getSecurityRoleLinks(), allowedRoles.toArray(new String[allowedRoles.size()])] @AT@ 4495 @LENGTH@ 124
---------------UPD MethodInvocation@@ejbComponent.getSecurityMetaData().getSecurityRoles() @TO@ ejbSecurityMetaData.getSecurityRoles() @AT@ 4510 @LENGTH@ 53
------------------DEL MethodInvocation@@MethodName:getSecurityMetaData:[] @AT@ 4510 @LENGTH@ 34
------------------UPD SimpleName@@Name:ejbComponent @TO@ Name:ejbSecurityMetaData @AT@ 4510 @LENGTH@ 12
---------------INS MethodInvocation@@ejbSecurityMetaData.getSecurityRoleLinks() @TO@ SimpleName@@MethodName:isCallerInRole:[ejbComponent.getSecurityMetaData().getSecurityRoles(), allowedRoles.toArray(new String[allowedRoles.size()])] @AT@ 4651 @LENGTH@ 42
------------------INS SimpleName@@Name:ejbSecurityMetaData @TO@ MethodInvocation@@ejbSecurityMetaData.getSecurityRoleLinks() @AT@ 4651 @LENGTH@ 19
------------------INS SimpleName@@MethodName:getSecurityRoleLinks:[] @TO@ MethodInvocation@@ejbSecurityMetaData.getSecurityRoleLinks() @AT@ 4671 @LENGTH@ 22
---INS VariableDeclarationStatement@@final EJBSecurityMetaData ejbSecurityMetaData=ejbComponent.getSecurityMetaData(); @TO@ Block@@ThenBody:{  final SimpleSecurityManager securityManager=ejbComponent.getSecurityManager();  if (!securityManager.isCallerInRole(ejbComponent.getSecurityMetaData().getSecurityRoles(),allowedRoles.toArray(new String[allowedRoles.size()]))) {    throw MESSAGES.invocationOfMethodNotAllowed(invokedMethod,ejbComponent.getComponentName());  }} @AT@ 4475 @LENGTH@ 83
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final EJBSecurityMetaData ejbSecurityMetaData=ejbComponent.getSecurityMetaData(); @AT@ 4475 @LENGTH@ 5
------INS SimpleType@@EJBSecurityMetaData @TO@ VariableDeclarationStatement@@final EJBSecurityMetaData ejbSecurityMetaData=ejbComponent.getSecurityMetaData(); @AT@ 4481 @LENGTH@ 19
------INS VariableDeclarationFragment@@ejbSecurityMetaData=ejbComponent.getSecurityMetaData() @TO@ VariableDeclarationStatement@@final EJBSecurityMetaData ejbSecurityMetaData=ejbComponent.getSecurityMetaData(); @AT@ 4501 @LENGTH@ 56
---------INS SimpleName@@ejbSecurityMetaData @TO@ VariableDeclarationFragment@@ejbSecurityMetaData=ejbComponent.getSecurityMetaData() @AT@ 4501 @LENGTH@ 19
---------INS MethodInvocation@@ejbComponent.getSecurityMetaData() @TO@ VariableDeclarationFragment@@ejbSecurityMetaData=ejbComponent.getSecurityMetaData() @AT@ 4523 @LENGTH@ 34
------------INS SimpleName@@Name:ejbComponent @TO@ MethodInvocation@@ejbComponent.getSecurityMetaData() @AT@ 4523 @LENGTH@ 12
------------INS SimpleName@@MethodName:getSecurityMetaData:[] @TO@ MethodInvocation@@ejbComponent.getSecurityMetaData() @AT@ 4536 @LENGTH@ 21


UPD IfStatement@@if (expected == null) {  actual=ExchangeHelper.getMandatoryInBody(exchange);  assertEquals("in body of: " + exchange,expected,actual);} else {  actual=ExchangeHelper.getMandatoryInBody(exchange,expected.getClass());} @TO@ if (expected == null) {  actual=exchange.getIn().getMandatoryBody();  assertEquals("in body of: " + exchange,expected,actual);} else {  actual=exchange.getIn().getMandatoryBody(expected.getClass());} @AT@ 6335 @LENGTH@ 274
---UPD Block@@ThenBody:{  actual=ExchangeHelper.getMandatoryInBody(exchange);  assertEquals("in body of: " + exchange,expected,actual);} @TO@ ThenBody:{  actual=exchange.getIn().getMandatoryBody();  assertEquals("in body of: " + exchange,expected,actual);} @AT@ 6357 @LENGTH@ 148
------UPD ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryInBody(exchange) @TO@ Assignment:actual=exchange.getIn().getMandatoryBody() @AT@ 6371 @LENGTH@ 53
---------UPD Assignment@@actual=ExchangeHelper.getMandatoryInBody(exchange) @TO@ actual=exchange.getIn().getMandatoryBody() @AT@ 6371 @LENGTH@ 52
------------UPD MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange) @TO@ exchange.getIn().getMandatoryBody() @AT@ 6380 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange) @AT@ 6380 @LENGTH@ 16
---------------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 6380 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:getMandatoryInBody:[exchange] @TO@ MethodName:getMandatoryBody:[] @AT@ 6395 @LENGTH@ 28
------------------DEL SimpleName@@exchange @AT@ 6414 @LENGTH@ 8
---UPD Block@@ElseBody:{  actual=ExchangeHelper.getMandatoryInBody(exchange,expected.getClass());} @TO@ ElseBody:{  actual=exchange.getIn().getMandatoryBody(expected.getClass());} @AT@ 6511 @LENGTH@ 98
------UPD ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryInBody(exchange,expected.getClass()) @TO@ Assignment:actual=exchange.getIn().getMandatoryBody(expected.getClass()) @AT@ 6525 @LENGTH@ 74
---------UPD Assignment@@actual=ExchangeHelper.getMandatoryInBody(exchange,expected.getClass()) @TO@ actual=exchange.getIn().getMandatoryBody(expected.getClass()) @AT@ 6525 @LENGTH@ 73
------------UPD MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,expected.getClass()) @TO@ exchange.getIn().getMandatoryBody(expected.getClass()) @AT@ 6534 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,expected.getClass()) @AT@ 6526 @LENGTH@ 16
---------------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 6534 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:getMandatoryInBody:[exchange, expected.getClass()] @TO@ MethodName:getMandatoryBody:[expected.getClass()] @AT@ 6549 @LENGTH@ 49
------------------DEL SimpleName@@exchange @AT@ 6568 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 1738 @LENGTH@ 33
---DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 1738 @LENGTH@ 32
------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 1738 @LENGTH@ 32
---------DEL StringLiteral@@"activemq-data" @AT@ 1754 @LENGTH@ 15


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId,  @AT@ 6345 @LENGTH@ 1061
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient,  @AT@ 6404 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 6404 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 6410 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 6417 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new MapConfiguration(new HashMap()) @TO@ ClassInstanceCreation:new MapConfiguration(new HashMap<String,Object>()) @AT@ 1242 @LENGTH@ 43
---UPD ClassInstanceCreation@@MapConfiguration[new HashMap()] @TO@ MapConfiguration[new HashMap<String,Object>()] @AT@ 1249 @LENGTH@ 35
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 1270 @LENGTH@ 13
---------DEL SimpleType@@HashMap @AT@ 1274 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1288 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1288 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1296 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1304 @LENGTH@ 6


UPD MethodDeclaration@@public, static, void, MethodName:afterClass,  @TO@ public, static, void, MethodName:afterClass, Exception,  @AT@ 4915 @LENGTH@ 225
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, void, MethodName:afterClass,  @AT@ 4954 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getModelControllerClient().close() @TO@ MethodDeclaration@@public, static, void, MethodName:afterClass,  @AT@ 5160 @LENGTH@ 35
------INS MethodInvocation@@getModelControllerClient().close() @TO@ ExpressionStatement@@MethodInvocation:getModelControllerClient().close() @AT@ 5160 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:getModelControllerClient:[] @TO@ MethodInvocation@@getModelControllerClient().close() @AT@ 5160 @LENGTH@ 26
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@getModelControllerClient().close() @AT@ 5187 @LENGTH@ 7


UPD TypeDeclaration@@[public]CreateContainerChildMetadata, CreateContainerBasicMetadata @TO@ [public]CreateContainerChildMetadata, CreateContainerBasicMetadata<CreateContainerChildOptions> @AT@ 661 @LENGTH@ 82
---INS ParameterizedType@@CreateContainerBasicMetadata<CreateContainerChildOptions> @TO@ TypeDeclaration@@[public]CreateContainerChildMetadata, CreateContainerBasicMetadata @AT@ 711 @LENGTH@ 57
------INS SimpleType@@CreateContainerBasicMetadata @TO@ ParameterizedType@@CreateContainerBasicMetadata<CreateContainerChildOptions> @AT@ 711 @LENGTH@ 28
------INS SimpleType@@CreateContainerChildOptions @TO@ ParameterizedType@@CreateContainerBasicMetadata<CreateContainerChildOptions> @AT@ 740 @LENGTH@ 27
---DEL SimpleType@@CreateContainerBasicMetadata @AT@ 711 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:deleteAll,  @TO@ TypeDeclaration@@[@org.springframework.stereotype.Repository, @Transactional(readOnly=true), public]SimpleJpaRepository, [JpaRepository<T,ID>, JpaSpecificationExecutor<T>] @AT@ 5536 @LENGTH@ 85
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:deleteAll,  @AT@ 5536 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:deleteAll,  @AT@ 5543 @LENGTH@ 4
---INS SimpleName@@MethodName:deleteAll @TO@ MethodDeclaration@@public, void, MethodName:deleteAll,  @AT@ 5548 @LENGTH@ 9
---INS EnhancedForStatement@@for (T element : findAll()) {  delete(element);} @TO@ MethodDeclaration@@public, void, MethodName:deleteAll,  @AT@ 5565 @LENGTH@ 53
------INS SingleVariableDeclaration@@T element @TO@ EnhancedForStatement@@for (T element : findAll()) {  delete(element);} @AT@ 5570 @LENGTH@ 9
---------INS SimpleType@@T @TO@ SingleVariableDeclaration@@T element @AT@ 5570 @LENGTH@ 1
---------INS SimpleName@@element @TO@ SingleVariableDeclaration@@T element @AT@ 5572 @LENGTH@ 7
------INS MethodInvocation@@MethodName:findAll:[] @TO@ EnhancedForStatement@@for (T element : findAll()) {  delete(element);} @AT@ 5582 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:delete(element) @TO@ EnhancedForStatement@@for (T element : findAll()) {  delete(element);} @AT@ 5598 @LENGTH@ 16
---------INS MethodInvocation@@delete(element) @TO@ ExpressionStatement@@MethodInvocation:delete(element) @AT@ 5598 @LENGTH@ 15
------------INS SimpleName@@MethodName:delete:[element] @TO@ MethodInvocation@@delete(element) @AT@ 5598 @LENGTH@ 15
---------------INS SimpleName@@element @TO@ SimpleName@@MethodName:delete:[element] @AT@ 5605 @LENGTH@ 7


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3150 @LENGTH@ 105
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3150 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3157 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3164 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:InstrumentationProcessor.this.toString() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3193 @LENGTH@ 48
------INS MethodInvocation@@InstrumentationProcessor.this.toString() @TO@ ReturnStatement@@MethodInvocation:InstrumentationProcessor.this.toString() @AT@ 3200 @LENGTH@ 40
---------INS ThisExpression@@this @TO@ MethodInvocation@@InstrumentationProcessor.this.toString() @AT@ 3200 @LENGTH@ 29
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@InstrumentationProcessor.this.toString() @AT@ 3230 @LENGTH@ 10


UPD TryStatement@@try {  converter.convertTo(PurchaseOrder.class,is);} catch (RuntimeCamelException e) {  assertTrue(e.getCause() instanceof UnmarshalException);} @TO@ try {  converter.convertTo(PurchaseOrder.class,is);  fail("Should have thrown exception");} catch (TypeConversionException e) {} @AT@ 3527 @LENGTH@ 185
---UPD CatchClause@@catch (RuntimeCamelException e) {  assertTrue(e.getCause() instanceof UnmarshalException);} @TO@ catch (TypeConversionException e) {} @AT@ 3601 @LENGTH@ 111
------UPD SingleVariableDeclaration@@RuntimeCamelException e @TO@ TypeConversionException e @AT@ 3608 @LENGTH@ 23
---------UPD SimpleType@@RuntimeCamelException @TO@ TypeConversionException @AT@ 3608 @LENGTH@ 21
------DEL ExpressionStatement@@MethodInvocation:assertTrue(e.getCause() instanceof UnmarshalException) @AT@ 3647 @LENGTH@ 55
---------DEL MethodInvocation@@assertTrue(e.getCause() instanceof UnmarshalException) @AT@ 3647 @LENGTH@ 54
------------DEL SimpleName@@MethodName:assertTrue:[e.getCause() instanceof UnmarshalException] @AT@ 3647 @LENGTH@ 54
---------------DEL InstanceofExpression@@e.getCause() instanceof UnmarshalException @AT@ 3658 @LENGTH@ 42
------------------DEL MethodInvocation@@e.getCause() @AT@ 3658 @LENGTH@ 12
---------------------DEL SimpleName@@Name:e @AT@ 3658 @LENGTH@ 1
---------------------DEL SimpleName@@MethodName:getCause:[] @AT@ 3660 @LENGTH@ 10
------------------DEL Instanceof@@instanceof @AT@ 3671 @LENGTH@ 10
------------------DEL SimpleType@@UnmarshalException @AT@ 3682 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @TO@ TryStatement@@try {  converter.convertTo(PurchaseOrder.class,is);} catch (RuntimeCamelException e) {  assertTrue(e.getCause() instanceof UnmarshalException);} @AT@ 3652 @LENGTH@ 37
------INS MethodInvocation@@fail("Should have thrown exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @AT@ 3652 @LENGTH@ 36
---------INS SimpleName@@MethodName:fail:["Should have thrown exception"] @TO@ MethodInvocation@@fail("Should have thrown exception") @AT@ 3652 @LENGTH@ 36
------------INS StringLiteral@@"Should have thrown exception" @TO@ SimpleName@@MethodName:fail:["Should have thrown exception"] @AT@ 3657 @LENGTH@ 30


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:ConfirmationChoice, ConsoleWrapper theConsole, final String message, final String prompt, final State yesState, final State noState,  @AT@ 2237 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2241 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2241 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2241 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2252 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2264 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2268 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2274 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2288 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2294 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2294 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2303 @LENGTH@ 20


UPD Block@@ThenBody:{  config.setSsl(true);  final ModelNode ssl=model.get(SSL_CONFIGURATION_PATH.getKeyValuePair());  ModelNode keyAlias=KEY_ALIAS.resolveModelAttribute(context,ssl);  ModelNode password=PASSWORD.resolveModelAttribute(context,ssl);  if (keyAlias.isDefined()) {    config.setSslKeyAlias(keyAlias.asString());  }  if (password.isDefined()) {    config.setSslTrustStorePassword(password.asString());    config.setSslKeyStorePassword(password.asString());  }  if (ssl.has(CommonAttributes.CERTIFICATE_KEY_FILE)) {    config.setSslKeyStore(CERTIFICATE_KEY_FILE.resolveModelAttribute(context,ssl).asString());  }  if (ssl.has(CommonAttributes.CIPHER_SUITE)) {    config.setSslCiphers(CIPHER_SUITE.resolveModelAttribute(context,ssl).asString());  }  if (ssl.has(CommonAttributes.PROTOCOL)) {    config.setSslProtocol(PROTOCOL.resolveModelAttribute(context,ssl).asString());  }  if (ssl.has(CommonAttributes.CA_CERTIFICATE_FILE)) {    config.setSslTrustStore(CA_CERTIFICATE_FILE.resolveModelAttribute(context,ssl).asString());  }  if (ssl.has(CommonAttributes.CA_REVOCATION_URL)) {    config.setSslCrlFile(CA_REVOCATION_URL.resolveModelAttribute(context,ssl).asString());  }} @TO@ ThenBody:{  config.setSsl(true);  final ModelNode ssl=model.get(SSL_CONFIGURATION_PATH.getKeyValuePair());  ModelNode keyAlias=KEY_ALIAS.resolveModelAttribute(context,ssl);  ModelNode password=PASSWORD.resolveModelAttribute(context,ssl);  if (keyAlias.isDefined()) {    config.setSslKeyAlias(keyAlias.asString());  }  if (password.isDefined()) {    config.setSslTrustStorePassword(password.asString());    config.setSslKeyStorePassword(password.asString());  }  if (ssl.hasDefined(CommonAttributes.CERTIFICATE_KEY_FILE)) {    config.setSslKeyStore(CERTIFICATE_KEY_FILE.resolveModelAttribute(context,ssl).asString());  }  if (ssl.hasDefined(CommonAttributes.CIPHER_SUITE)) {    config.setSslCiphers(CIPHER_SUITE.resolveModelAttribute(context,ssl).asString());  }  if (ssl.hasDefined(CommonAttributes.PROTOCOL)) {    config.setSslProtocol(PROTOCOL.resolveModelAttribute(context,ssl).asString());  }  if (ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)) {    config.setSslTrustStore(CA_CERTIFICATE_FILE.resolveModelAttribute(context,ssl).asString());  }  if (ssl.hasDefined(CommonAttributes.CA_REVOCATION_URL)) {    config.setSslCrlFile(CA_REVOCATION_URL.resolveModelAttribute(context,ssl).asString());  }} @AT@ 6776 @LENGTH@ 1526
---UPD IfStatement@@if (ssl.has(CommonAttributes.CERTIFICATE_KEY_FILE)) {  config.setSslKeyStore(CERTIFICATE_KEY_FILE.resolveModelAttribute(context,ssl).asString());} @TO@ if (ssl.hasDefined(CommonAttributes.CERTIFICATE_KEY_FILE)) {  config.setSslKeyStore(CERTIFICATE_KEY_FILE.resolveModelAttribute(context,ssl).asString());} @AT@ 7413 @LENGTH@ 175
------UPD MethodInvocation@@ssl.has(CommonAttributes.CERTIFICATE_KEY_FILE) @TO@ ssl.hasDefined(CommonAttributes.CERTIFICATE_KEY_FILE) @AT@ 7417 @LENGTH@ 46
---------UPD SimpleName@@MethodName:has:[CommonAttributes.CERTIFICATE_KEY_FILE] @TO@ MethodName:hasDefined:[CommonAttributes.CERTIFICATE_KEY_FILE] @AT@ 7421 @LENGTH@ 42
---UPD IfStatement@@if (ssl.has(CommonAttributes.CIPHER_SUITE)) {  config.setSslCiphers(CIPHER_SUITE.resolveModelAttribute(context,ssl).asString());} @TO@ if (ssl.hasDefined(CommonAttributes.CIPHER_SUITE)) {  config.setSslCiphers(CIPHER_SUITE.resolveModelAttribute(context,ssl).asString());} @AT@ 7601 @LENGTH@ 158
------UPD MethodInvocation@@ssl.has(CommonAttributes.CIPHER_SUITE) @TO@ ssl.hasDefined(CommonAttributes.CIPHER_SUITE) @AT@ 7605 @LENGTH@ 38
---------UPD SimpleName@@MethodName:has:[CommonAttributes.CIPHER_SUITE] @TO@ MethodName:hasDefined:[CommonAttributes.CIPHER_SUITE] @AT@ 7609 @LENGTH@ 34
---UPD IfStatement@@if (ssl.has(CommonAttributes.PROTOCOL)) {  config.setSslProtocol(PROTOCOL.resolveModelAttribute(context,ssl).asString());} @TO@ if (ssl.hasDefined(CommonAttributes.PROTOCOL)) {  config.setSslProtocol(PROTOCOL.resolveModelAttribute(context,ssl).asString());} @AT@ 7772 @LENGTH@ 151
------UPD MethodInvocation@@ssl.has(CommonAttributes.PROTOCOL) @TO@ ssl.hasDefined(CommonAttributes.PROTOCOL) @AT@ 7776 @LENGTH@ 34
---------UPD SimpleName@@MethodName:has:[CommonAttributes.PROTOCOL] @TO@ MethodName:hasDefined:[CommonAttributes.PROTOCOL] @AT@ 7780 @LENGTH@ 30
---UPD IfStatement@@if (ssl.has(CommonAttributes.CA_CERTIFICATE_FILE)) {  config.setSslTrustStore(CA_CERTIFICATE_FILE.resolveModelAttribute(context,ssl).asString());} @TO@ if (ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)) {  config.setSslTrustStore(CA_CERTIFICATE_FILE.resolveModelAttribute(context,ssl).asString());} @AT@ 7936 @LENGTH@ 175
------UPD MethodInvocation@@ssl.has(CommonAttributes.CA_CERTIFICATE_FILE) @TO@ ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE) @AT@ 7940 @LENGTH@ 45
---------UPD SimpleName@@MethodName:has:[CommonAttributes.CA_CERTIFICATE_FILE] @TO@ MethodName:hasDefined:[CommonAttributes.CA_CERTIFICATE_FILE] @AT@ 7944 @LENGTH@ 41
---UPD IfStatement@@if (ssl.has(CommonAttributes.CA_REVOCATION_URL)) {  config.setSslCrlFile(CA_REVOCATION_URL.resolveModelAttribute(context,ssl).asString());} @TO@ if (ssl.hasDefined(CommonAttributes.CA_REVOCATION_URL)) {  config.setSslCrlFile(CA_REVOCATION_URL.resolveModelAttribute(context,ssl).asString());} @AT@ 8124 @LENGTH@ 168
------UPD MethodInvocation@@ssl.has(CommonAttributes.CA_REVOCATION_URL) @TO@ ssl.hasDefined(CommonAttributes.CA_REVOCATION_URL) @AT@ 8128 @LENGTH@ 43
---------UPD SimpleName@@MethodName:has:[CommonAttributes.CA_REVOCATION_URL] @TO@ MethodName:hasDefined:[CommonAttributes.CA_REVOCATION_URL] @AT@ 8132 @LENGTH@ 39


INS TryStatement@@try {  modcluster.enableContext(contexthost.webhost,contexthost.webcontext);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2413 @LENGTH@ 338
---MOV ExpressionStatement@@MethodInvocation:modcluster.enableContext(contexthost.webhost,contexthost.webcontext) @TO@ TryStatement@@try {  modcluster.enableContext(contexthost.webhost,contexthost.webcontext);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2346 @LENGTH@ 70
---INS CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @TO@ TryStatement@@try {  modcluster.enableContext(contexthost.webhost,contexthost.webcontext);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2536 @LENGTH@ 215
------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2542 @LENGTH@ 26
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2542 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2567 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2596 @LENGTH@ 133
---------INS ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))) @AT@ 2602 @LENGTH@ 126
------------INS New@@new @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2602 @LENGTH@ 3
------------INS SimpleType@@OperationFailedException @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2606 @LENGTH@ 24
------------INS MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2631 @LENGTH@ 96
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @AT@ 2631 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2631 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2635 @LENGTH@ 9
---------------INS SimpleName@@MethodName:set:[MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)] @TO@ MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @AT@ 2647 @LENGTH@ 80
------------------INS MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @TO@ SimpleName@@MethodName:set:[MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)] @AT@ 2651 @LENGTH@ 75
---------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @AT@ 2651 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @TO@ MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @AT@ 2660 @LENGTH@ 66
------------------------INS QualifiedName@@contexthost.webhost @TO@ SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @AT@ 2682 @LENGTH@ 19
---------------------------INS SimpleName@@contexthost @TO@ QualifiedName@@contexthost.webhost @AT@ 2682 @LENGTH@ 11
---------------------------INS SimpleName@@webhost @TO@ QualifiedName@@contexthost.webhost @AT@ 2694 @LENGTH@ 7
------------------------INS QualifiedName@@contexthost.webcontext @TO@ SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @AT@ 2703 @LENGTH@ 22
---------------------------INS SimpleName@@contexthost @TO@ QualifiedName@@contexthost.webcontext @AT@ 2703 @LENGTH@ 11
---------------------------INS SimpleName@@webcontext @TO@ QualifiedName@@contexthost.webcontext @AT@ 2715 @LENGTH@ 10


INS FieldDeclaration@@String, [INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED="CamelInterceptSendToEndpointWhenMatched"] @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 8348 @LENGTH@ 91
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED="CamelInterceptSendToEndpointWhenMatched"] @AT@ 8348 @LENGTH@ 6
---INS VariableDeclarationFragment@@INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED="CamelInterceptSendToEndpointWhenMatched" @TO@ FieldDeclaration@@String, [INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED="CamelInterceptSendToEndpointWhenMatched"] @AT@ 8355 @LENGTH@ 83
------INS SimpleName@@INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED @TO@ VariableDeclarationFragment@@INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED="CamelInterceptSendToEndpointWhenMatched" @AT@ 8355 @LENGTH@ 39
------INS StringLiteral@@"CamelInterceptSendToEndpointWhenMatched" @TO@ VariableDeclarationFragment@@INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED="CamelInterceptSendToEndpointWhenMatched" @AT@ 8397 @LENGTH@ 41


INS MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @TO@ TypeDeclaration@@[@XmlAccessorType(XmlAccessType.PROPERTY), public, abstract]ProcessorDefinition, OptionalIdentifiedDefinition[Block] @AT@ 26545 @LENGTH@ 59
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 26545 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 26555 @LENGTH@ 4
---INS SimpleName@@MethodName:preCreateProcessor @TO@ MethodDeclaration@@protected, void, MethodName:preCreateProcessor,  @AT@ 26560 @LENGTH@ 18


UPD MethodDeclaration@@void, MethodName:createPost, Integer groupId, String title, String summary,  @TO@ URI, MethodName:createPost, Integer groupId, String title, String summary,  @AT@ 2911 @LENGTH@ 58
---DEL PrimitiveType@@void @AT@ 2906 @LENGTH@ 4
---INS SimpleType@@URI @TO@ MethodDeclaration@@void, MethodName:createPost, Integer groupId, String title, String summary,  @AT@ 2974 @LENGTH@ 3


UPD IfStatement@@if (loopbackAddress.getScopeId() > 0) {  assertEquals(loopbackAddress,criteria.isAcceptable(loopbackInterface,loopbackAddress));} else {  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ if (loopbackAddress.getScopeId() > 0) {  assertEquals(loopbackAddress,criteria.isAcceptable(loopbackInterface,loopbackAddress));} else {  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @AT@ 3895 @LENGTH@ 325
---UPD Block@@ElseBody:{  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ ThenBody:{  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4052 @LENGTH@ 168
---INS Block@@ElseBody:{  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @TO@ IfStatement@@if (loopbackAddress.getScopeId() > 0) {  assertEquals(loopbackAddress,criteria.isAcceptable(loopbackInterface,loopbackAddress));} else {  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4077 @LENGTH@ 368
------INS VariableDeclarationStatement@@InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress); @TO@ Block@@ElseBody:{  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @AT@ 4091 @LENGTH@ 78
---------INS SimpleType@@InetAddress @TO@ VariableDeclarationStatement@@InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress); @AT@ 4091 @LENGTH@ 11
---------INS VariableDeclarationFragment@@match=criteria.isAcceptable(loopbackInterface,loopbackAddress) @TO@ VariableDeclarationStatement@@InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress); @AT@ 4103 @LENGTH@ 65
------------INS SimpleName@@match @TO@ VariableDeclarationFragment@@match=criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4103 @LENGTH@ 5
------------INS MethodInvocation@@criteria.isAcceptable(loopbackInterface,loopbackAddress) @TO@ VariableDeclarationFragment@@match=criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4111 @LENGTH@ 57
---------------INS SimpleName@@Name:criteria @TO@ MethodInvocation@@criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4111 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isAcceptable:[loopbackInterface, loopbackAddress] @TO@ MethodInvocation@@criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4120 @LENGTH@ 48
------------------INS SimpleName@@loopbackInterface @TO@ SimpleName@@MethodName:isAcceptable:[loopbackInterface, loopbackAddress] @AT@ 4133 @LENGTH@ 17
------------------INS SimpleName@@loopbackAddress @TO@ SimpleName@@MethodName:isAcceptable:[loopbackInterface, loopbackAddress] @AT@ 4152 @LENGTH@ 15
------INS IfStatement@@if (!loopbackAddress.equals(match)) {  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ Block@@ElseBody:{  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @AT@ 4182 @LENGTH@ 253
---------MOV Block@@ElseBody:{  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ IfStatement@@if (!loopbackAddress.equals(match)) {  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4052 @LENGTH@ 168
------------UPD ExpressionStatement@@MethodInvocation:assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress)) @TO@ MethodInvocation:assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress)) @AT@ 4140 @LENGTH@ 70
---------------UPD MethodInvocation@@assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress)) @TO@ assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress)) @AT@ 4140 @LENGTH@ 69
------------------UPD SimpleName@@MethodName:assertNull:[criteria.isAcceptable(loopbackInterface,loopbackAddress)] @TO@ MethodName:assertNull:[match + " is invalid", criteria.isAcceptable(loopbackInterface,loopbackAddress)] @AT@ 4140 @LENGTH@ 69
---------------------INS InfixExpression@@match + " is invalid" @TO@ SimpleName@@MethodName:assertNull:[criteria.isAcceptable(loopbackInterface,loopbackAddress)] @AT@ 4339 @LENGTH@ 21
------------------------INS SimpleName@@match @TO@ InfixExpression@@match + " is invalid" @AT@ 4339 @LENGTH@ 5
------------------------INS Operator@@+ @TO@ InfixExpression@@match + " is invalid" @AT@ 4344 @LENGTH@ 1
------------------------INS StringLiteral@@" is invalid" @TO@ InfixExpression@@match + " is invalid" @AT@ 4347 @LENGTH@ 13
---------INS PrefixExpression@@!loopbackAddress.equals(match) @TO@ IfStatement@@if (!loopbackAddress.equals(match)) {  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4186 @LENGTH@ 30
------------INS Operator@@! @TO@ PrefixExpression@@!loopbackAddress.equals(match) @AT@ 4186 @LENGTH@ 1
------------INS MethodInvocation@@loopbackAddress.equals(match) @TO@ PrefixExpression@@!loopbackAddress.equals(match) @AT@ 4187 @LENGTH@ 29
---------------INS SimpleName@@Name:loopbackAddress @TO@ MethodInvocation@@loopbackAddress.equals(match) @AT@ 4187 @LENGTH@ 15
---------------INS SimpleName@@MethodName:equals:[match] @TO@ MethodInvocation@@loopbackAddress.equals(match) @AT@ 4203 @LENGTH@ 13
------------------INS SimpleName@@match @TO@ SimpleName@@MethodName:equals:[match] @AT@ 4210 @LENGTH@ 5


INS TryStatement@@try {  delay=calculateDelay(exchange);  if (delay <= 0) {    log.trace("No delay for exchangeId: {}",exchange.getExchangeId());    return super.process(exchange,callback);  }} catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 4017 @LENGTH@ 425
---INS ExpressionStatement@@Assignment:delay=calculateDelay(exchange) @TO@ TryStatement@@try {  delay=calculateDelay(exchange);  if (delay <= 0) {    log.trace("No delay for exchangeId: {}",exchange.getExchangeId());    return super.process(exchange,callback);  }} catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4035 @LENGTH@ 33
------INS Assignment@@delay=calculateDelay(exchange) @TO@ ExpressionStatement@@Assignment:delay=calculateDelay(exchange) @AT@ 4035 @LENGTH@ 32
---------MOV MethodInvocation@@calculateDelay(exchange) @TO@ Assignment@@delay=calculateDelay(exchange) @AT@ 4010 @LENGTH@ 24
---------INS SimpleName@@delay @TO@ Assignment@@delay=calculateDelay(exchange) @AT@ 4035 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@delay=calculateDelay(exchange) @AT@ 4040 @LENGTH@ 1
---MOV IfStatement@@if (delay <= 0) {  log.trace("No delay for exchangeId: {}",exchange.getExchangeId());  return super.process(exchange,callback);} @TO@ TryStatement@@try {  delay=calculateDelay(exchange);  if (delay <= 0) {    log.trace("No delay for exchangeId: {}",exchange.getExchangeId());    return super.process(exchange,callback);  }} catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4044 @LENGTH@ 207
---INS CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @TO@ TryStatement@@try {  delay=calculateDelay(exchange);  if (delay <= 0) {    log.trace("No delay for exchangeId: {}",exchange.getExchangeId());    return super.process(exchange,callback);  }} catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4315 @LENGTH@ 127
------INS SingleVariableDeclaration@@Throwable e @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4322 @LENGTH@ 11
---------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable e @AT@ 4322 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Throwable e @AT@ 4332 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:exchange.setException(e) @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4349 @LENGTH@ 25
---------INS MethodInvocation@@exchange.setException(e) @TO@ ExpressionStatement@@MethodInvocation:exchange.setException(e) @AT@ 4349 @LENGTH@ 24
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setException(e) @AT@ 4349 @LENGTH@ 8
------------INS SimpleName@@MethodName:setException:[e] @TO@ MethodInvocation@@exchange.setException(e) @AT@ 4358 @LENGTH@ 15
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:setException:[e] @AT@ 4371 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4387 @LENGTH@ 20
---------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 4387 @LENGTH@ 19
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 4387 @LENGTH@ 8
------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 4396 @LENGTH@ 10
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 4401 @LENGTH@ 4
------INS ReturnStatement@@BooleanLiteral:true @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4420 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4427 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingMongoConverterUnitTests,  @AT@ 28752 @LENGTH@ 429
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28752 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28759 @LENGTH@ 4
---INS SimpleName@@MethodName:convertsSetToBasicDBList @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28764 @LENGTH@ 24
---INS VariableDeclarationStatement@@Address address=new Address(); @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28796 @LENGTH@ 32
------INS SimpleType@@Address @TO@ VariableDeclarationStatement@@Address address=new Address(); @AT@ 28796 @LENGTH@ 7
------INS VariableDeclarationFragment@@address=new Address() @TO@ VariableDeclarationStatement@@Address address=new Address(); @AT@ 28804 @LENGTH@ 23
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=new Address() @AT@ 28804 @LENGTH@ 7
---------INS ClassInstanceCreation@@Address[] @TO@ VariableDeclarationFragment@@address=new Address() @AT@ 28814 @LENGTH@ 13
------------INS New@@new @TO@ ClassInstanceCreation@@Address[] @AT@ 28814 @LENGTH@ 3
------------INS SimpleType@@Address @TO@ ClassInstanceCreation@@Address[] @AT@ 28818 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:address.city="London" @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28831 @LENGTH@ 24
------INS Assignment@@address.city="London" @TO@ ExpressionStatement@@Assignment:address.city="London" @AT@ 28831 @LENGTH@ 23
---------INS QualifiedName@@address.city @TO@ Assignment@@address.city="London" @AT@ 28831 @LENGTH@ 12
------------INS SimpleName@@address @TO@ QualifiedName@@address.city @AT@ 28831 @LENGTH@ 7
------------INS SimpleName@@city @TO@ QualifiedName@@address.city @AT@ 28839 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@address.city="London" @AT@ 28843 @LENGTH@ 1
---------INS StringLiteral@@"London" @TO@ Assignment@@address.city="London" @AT@ 28846 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:address.street="Foo" @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28858 @LENGTH@ 23
------INS Assignment@@address.street="Foo" @TO@ ExpressionStatement@@Assignment:address.street="Foo" @AT@ 28858 @LENGTH@ 22
---------INS QualifiedName@@address.street @TO@ Assignment@@address.street="Foo" @AT@ 28858 @LENGTH@ 14
------------INS SimpleName@@address @TO@ QualifiedName@@address.street @AT@ 28858 @LENGTH@ 7
------------INS SimpleName@@street @TO@ QualifiedName@@address.street @AT@ 28866 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@address.street="Foo" @AT@ 28872 @LENGTH@ 1
---------INS StringLiteral@@"Foo" @TO@ Assignment@@address.street="Foo" @AT@ 28875 @LENGTH@ 5
---INS VariableDeclarationStatement@@Object result=converter.convertToMongoType(Collections.singleton(address)); @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28885 @LENGTH@ 77
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=converter.convertToMongoType(Collections.singleton(address)); @AT@ 28885 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=converter.convertToMongoType(Collections.singleton(address)) @TO@ VariableDeclarationStatement@@Object result=converter.convertToMongoType(Collections.singleton(address)); @AT@ 28892 @LENGTH@ 69
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=converter.convertToMongoType(Collections.singleton(address)) @AT@ 28892 @LENGTH@ 6
---------INS MethodInvocation@@converter.convertToMongoType(Collections.singleton(address)) @TO@ VariableDeclarationFragment@@result=converter.convertToMongoType(Collections.singleton(address)) @AT@ 28901 @LENGTH@ 60
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convertToMongoType(Collections.singleton(address)) @AT@ 28901 @LENGTH@ 9
------------INS SimpleName@@MethodName:convertToMongoType:[Collections.singleton(address)] @TO@ MethodInvocation@@converter.convertToMongoType(Collections.singleton(address)) @AT@ 28911 @LENGTH@ 50
---------------INS MethodInvocation@@Collections.singleton(address) @TO@ SimpleName@@MethodName:convertToMongoType:[Collections.singleton(address)] @AT@ 28930 @LENGTH@ 30
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(address) @AT@ 28930 @LENGTH@ 11
------------------INS SimpleName@@MethodName:singleton:[address] @TO@ MethodInvocation@@Collections.singleton(address) @AT@ 28942 @LENGTH@ 18
---------------------INS SimpleName@@address @TO@ SimpleName@@MethodName:singleton:[address] @AT@ 28952 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(result,is(BasicDBList.class)) @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 28965 @LENGTH@ 42
------INS MethodInvocation@@assertThat(result,is(BasicDBList.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,is(BasicDBList.class)) @AT@ 28965 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertThat:[result, is(BasicDBList.class)] @TO@ MethodInvocation@@assertThat(result,is(BasicDBList.class)) @AT@ 28965 @LENGTH@ 41
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, is(BasicDBList.class)] @AT@ 28976 @LENGTH@ 6
------------INS MethodInvocation@@is(BasicDBList.class) @TO@ SimpleName@@MethodName:assertThat:[result, is(BasicDBList.class)] @AT@ 28984 @LENGTH@ 21
---------------INS SimpleName@@MethodName:is:[BasicDBList.class] @TO@ MethodInvocation@@is(BasicDBList.class) @AT@ 28984 @LENGTH@ 21
------------------INS TypeLiteral@@BasicDBList.class @TO@ SimpleName@@MethodName:is:[BasicDBList.class] @AT@ 28987 @LENGTH@ 17
---------------INS SimpleName@@MethodName:is:[BasicDBList.class] @TO@ MethodInvocation@@is(BasicDBList.class) @AT@ 28984 @LENGTH@ 21
------------------INS TypeLiteral@@BasicDBList.class @TO@ SimpleName@@MethodName:is:[BasicDBList.class] @AT@ 28987 @LENGTH@ 17
---INS VariableDeclarationStatement@@Set<?> readResult=converter.read(Set.class,(BasicDBList)result); @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 29011 @LENGTH@ 68
------INS ParameterizedType@@Set<?> @TO@ VariableDeclarationStatement@@Set<?> readResult=converter.read(Set.class,(BasicDBList)result); @AT@ 29011 @LENGTH@ 6
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<?> @AT@ 29011 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Set<?> @AT@ 29015 @LENGTH@ 1
------INS VariableDeclarationFragment@@readResult=converter.read(Set.class,(BasicDBList)result) @TO@ VariableDeclarationStatement@@Set<?> readResult=converter.read(Set.class,(BasicDBList)result); @AT@ 29018 @LENGTH@ 60
---------INS SimpleName@@readResult @TO@ VariableDeclarationFragment@@readResult=converter.read(Set.class,(BasicDBList)result) @AT@ 29018 @LENGTH@ 10
---------INS MethodInvocation@@converter.read(Set.class,(BasicDBList)result) @TO@ VariableDeclarationFragment@@readResult=converter.read(Set.class,(BasicDBList)result) @AT@ 29031 @LENGTH@ 47
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.read(Set.class,(BasicDBList)result) @AT@ 29031 @LENGTH@ 9
------------INS SimpleName@@MethodName:read:[Set.class, (BasicDBList)result] @TO@ MethodInvocation@@converter.read(Set.class,(BasicDBList)result) @AT@ 29041 @LENGTH@ 37
---------------INS TypeLiteral@@Set.class @TO@ SimpleName@@MethodName:read:[Set.class, (BasicDBList)result] @AT@ 29046 @LENGTH@ 9
---------------INS CastExpression@@(BasicDBList)result @TO@ SimpleName@@MethodName:read:[Set.class, (BasicDBList)result] @AT@ 29057 @LENGTH@ 20
------------------INS SimpleType@@BasicDBList @TO@ CastExpression@@(BasicDBList)result @AT@ 29058 @LENGTH@ 11
------------------INS SimpleName@@result @TO@ CastExpression@@(BasicDBList)result @AT@ 29071 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(readResult.size(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 29082 @LENGTH@ 37
------INS MethodInvocation@@assertThat(readResult.size(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(readResult.size(),is(1)) @AT@ 29082 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertThat:[readResult.size(), is(1)] @TO@ MethodInvocation@@assertThat(readResult.size(),is(1)) @AT@ 29082 @LENGTH@ 36
------------INS MethodInvocation@@readResult.size() @TO@ SimpleName@@MethodName:assertThat:[readResult.size(), is(1)] @AT@ 29093 @LENGTH@ 17
---------------INS SimpleName@@Name:readResult @TO@ MethodInvocation@@readResult.size() @AT@ 29093 @LENGTH@ 10
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@readResult.size() @AT@ 29104 @LENGTH@ 6
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[readResult.size(), is(1)] @AT@ 29112 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 29112 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 29115 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 29112 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 29115 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(readResult.iterator().next(),is(Map.class)) @TO@ MethodDeclaration@@public, void, MethodName:convertsSetToBasicDBList,  @AT@ 29122 @LENGTH@ 56
------INS MethodInvocation@@assertThat(readResult.iterator().next(),is(Map.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(readResult.iterator().next(),is(Map.class)) @AT@ 29122 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertThat:[readResult.iterator().next(), is(Map.class)] @TO@ MethodInvocation@@assertThat(readResult.iterator().next(),is(Map.class)) @AT@ 29122 @LENGTH@ 55
------------INS MethodInvocation@@readResult.iterator().next() @TO@ SimpleName@@MethodName:assertThat:[readResult.iterator().next(), is(Map.class)] @AT@ 29133 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@readResult.iterator().next() @AT@ 29133 @LENGTH@ 21
---------------INS SimpleName@@Name:readResult @TO@ MethodInvocation@@readResult.iterator().next() @AT@ 29133 @LENGTH@ 10
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@readResult.iterator().next() @AT@ 29155 @LENGTH@ 6
------------INS MethodInvocation@@is(Map.class) @TO@ SimpleName@@MethodName:assertThat:[readResult.iterator().next(), is(Map.class)] @AT@ 29163 @LENGTH@ 13
---------------INS SimpleName@@MethodName:is:[Map.class] @TO@ MethodInvocation@@is(Map.class) @AT@ 29163 @LENGTH@ 13
------------------INS TypeLiteral@@Map.class @TO@ SimpleName@@MethodName:is:[Map.class] @AT@ 29166 @LENGTH@ 9


UPD IfStatement@@if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9806 @LENGTH@ 2290
---UPD Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9844 @LENGTH@ 2252
------INS IfStatement@@if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11473 @LENGTH@ 760
---------INS InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @TO@ IfStatement@@if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11477 @LENGTH@ 69
------------INS MethodInvocation@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @TO@ InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @AT@ 11477 @LENGTH@ 61
---------------INS SimpleName@@Name:overrideRegistration @TO@ MethodInvocation@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @AT@ 11477 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getSubModel:[PathAddress.pathAddress(pe)] @TO@ MethodInvocation@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @AT@ 11498 @LENGTH@ 40
------------------INS MethodInvocation@@PathAddress.pathAddress(pe) @TO@ SimpleName@@MethodName:getSubModel:[PathAddress.pathAddress(pe)] @AT@ 11510 @LENGTH@ 27
---------------------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(pe) @AT@ 11510 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:pathAddress:[pe] @TO@ MethodInvocation@@PathAddress.pathAddress(pe) @AT@ 11522 @LENGTH@ 15
------------------------INS SimpleName@@pe @TO@ SimpleName@@MethodName:pathAddress:[pe] @AT@ 11534 @LENGTH@ 2
------------INS Operator@@== @TO@ InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @AT@ 11538 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @AT@ 11542 @LENGTH@ 4
---------INS Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ IfStatement@@if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11548 @LENGTH@ 685
------------MOV VariableDeclarationStatement@@ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider); @TO@ Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11473 @LENGTH@ 125
------------MOV EnhancedForStatement@@for (String statName : poolStats.getNames()) {  subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));} @TO@ Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11635 @LENGTH@ 225
------------MOV ExpressionStatement@@MethodInvocation:subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false) @TO@ Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11897 @LENGTH@ 165


INS MethodDeclaration@@String, MethodName:transitiveDependencies,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 99389 @LENGTH@ 25
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:transitiveDependencies,  @AT@ 99382 @LENGTH@ 6
---INS SimpleName@@MethodName:transitiveDependencies @TO@ MethodDeclaration@@String, MethodName:transitiveDependencies,  @AT@ 99389 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:assertTrue(resource.get(name).isDefined()) @TO@ MethodInvocation:assertTrue(name + " is not defined",resource.get(name).isDefined()) @AT@ 11156 @LENGTH@ 43
---UPD MethodInvocation@@assertTrue(resource.get(name).isDefined()) @TO@ assertTrue(name + " is not defined",resource.get(name).isDefined()) @AT@ 11156 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertTrue:[resource.get(name).isDefined()] @TO@ MethodName:assertTrue:[name + " is not defined", resource.get(name).isDefined()] @AT@ 11156 @LENGTH@ 42
---------INS InfixExpression@@name + " is not defined" @TO@ SimpleName@@MethodName:assertTrue:[resource.get(name).isDefined()] @AT@ 11167 @LENGTH@ 24
------------INS SimpleName@@name @TO@ InfixExpression@@name + " is not defined" @AT@ 11167 @LENGTH@ 4
------------INS Operator@@+ @TO@ InfixExpression@@name + " is not defined" @AT@ 11171 @LENGTH@ 1
------------INS StringLiteral@@" is not defined" @TO@ InfixExpression@@name + " is not defined" @AT@ 11174 @LENGTH@ 17


UPD IfStatement@@if (finalResponse != null) {  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }} else {  ControllerLogger.SERVER_MANAGEMENT_LOGGER.noFinalProxyOutcomeReceived(operation.get(OP),operation.get(OP_ADDR),proxyController.getProxyNodeAddress().toModelNode());} @TO@ if (finalResponse != null) {  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }  if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {    context.getServerResults().set(finalResponse.get(SERVER_GROUPS));  }} else {  ControllerLogger.SERVER_MANAGEMENT_LOGGER.noFinalProxyOutcomeReceived(operation.get(OP),operation.get(OP_ADDR),proxyController.getProxyNodeAddress().toModelNode());} @AT@ 5507 @LENGTH@ 786
---UPD Block@@ThenBody:{  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }} @TO@ ThenBody:{  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }  if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {    context.getServerResults().set(finalResponse.get(SERVER_GROUPS));  }} @AT@ 5534 @LENGTH@ 485
------INS IfStatement@@if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @TO@ Block@@ThenBody:{  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }} @AT@ 6114 @LENGTH@ 202
---------INS InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @TO@ IfStatement@@if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @AT@ 6118 @LENGTH@ 91
------------INS InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @AT@ 6118 @LENGTH@ 55
---------------INS MethodInvocation@@context.getProcessType() @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 6118 @LENGTH@ 24
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType() @AT@ 6118 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType() @AT@ 6126 @LENGTH@ 16
---------------INS Operator@@== @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 6142 @LENGTH@ 2
---------------INS QualifiedName@@ProcessType.HOST_CONTROLLER @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 6146 @LENGTH@ 27
------------------INS SimpleName@@ProcessType @TO@ QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 6146 @LENGTH@ 11
------------------INS SimpleName@@HOST_CONTROLLER @TO@ QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 6158 @LENGTH@ 15
------------INS Operator@@&& @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @AT@ 6173 @LENGTH@ 2
------------INS MethodInvocation@@finalResponse.has(SERVER_GROUPS) @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @AT@ 6177 @LENGTH@ 32
---------------INS SimpleName@@Name:finalResponse @TO@ MethodInvocation@@finalResponse.has(SERVER_GROUPS) @AT@ 6177 @LENGTH@ 13
---------------INS SimpleName@@MethodName:has:[SERVER_GROUPS] @TO@ MethodInvocation@@finalResponse.has(SERVER_GROUPS) @AT@ 6191 @LENGTH@ 18
------------------INS SimpleName@@SERVER_GROUPS @TO@ SimpleName@@MethodName:has:[SERVER_GROUPS] @AT@ 6195 @LENGTH@ 13
---------INS Block@@ThenBody:{  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @TO@ IfStatement@@if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @AT@ 6211 @LENGTH@ 105
------------INS ExpressionStatement@@MethodInvocation:context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @TO@ Block@@ThenBody:{  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @AT@ 6233 @LENGTH@ 65
---------------INS MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @TO@ ExpressionStatement@@MethodInvocation:context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6233 @LENGTH@ 64
------------------INS MethodInvocation@@MethodName:getServerResults:[] @TO@ MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6233 @LENGTH@ 26
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6233 @LENGTH@ 7
------------------INS SimpleName@@MethodName:set:[finalResponse.get(SERVER_GROUPS)] @TO@ MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6260 @LENGTH@ 37
---------------------INS MethodInvocation@@finalResponse.get(SERVER_GROUPS) @TO@ SimpleName@@MethodName:set:[finalResponse.get(SERVER_GROUPS)] @AT@ 6264 @LENGTH@ 32
------------------------INS SimpleName@@Name:finalResponse @TO@ MethodInvocation@@finalResponse.get(SERVER_GROUPS) @AT@ 6264 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:get:[SERVER_GROUPS] @TO@ MethodInvocation@@finalResponse.get(SERVER_GROUPS) @AT@ 6278 @LENGTH@ 18
---------------------------INS SimpleName@@SERVER_GROUPS @TO@ SimpleName@@MethodName:get:[SERVER_GROUPS] @AT@ 6282 @LENGTH@ 13


INS IfStatement@@if (!found.isAlive()) {  found.start();} else {  System.err.println("Container " + container + " is already started");} @TO@ MethodDeclaration@@protected, Object, MethodName:doExecute, Exception,  @AT@ 1447 @LENGTH@ 159
---INS PrefixExpression@@!found.isAlive() @TO@ IfStatement@@if (!found.isAlive()) {  found.start();} else {  System.err.println("Container " + container + " is already started");} @AT@ 1451 @LENGTH@ 16
------INS Operator@@! @TO@ PrefixExpression@@!found.isAlive() @AT@ 1451 @LENGTH@ 1
------INS MethodInvocation@@found.isAlive() @TO@ PrefixExpression@@!found.isAlive() @AT@ 1452 @LENGTH@ 15
---------INS SimpleName@@Name:found @TO@ MethodInvocation@@found.isAlive() @AT@ 1452 @LENGTH@ 5
---------INS SimpleName@@MethodName:isAlive:[] @TO@ MethodInvocation@@found.isAlive() @AT@ 1458 @LENGTH@ 9
---INS Block@@ThenBody:{  found.start();} @TO@ IfStatement@@if (!found.isAlive()) {  found.start();} else {  System.err.println("Container " + container + " is already started");} @AT@ 1469 @LENGTH@ 38
------MOV ExpressionStatement@@MethodInvocation:found.start() @TO@ Block@@ThenBody:{  found.start();} @AT@ 1447 @LENGTH@ 14
---INS Block@@ElseBody:{  System.err.println("Container " + container + " is already started");} @TO@ IfStatement@@if (!found.isAlive()) {  found.start();} else {  System.err.println("Container " + container + " is already started");} @AT@ 1513 @LENGTH@ 93
------INS ExpressionStatement@@MethodInvocation:System.err.println("Container " + container + " is already started") @TO@ Block@@ElseBody:{  System.err.println("Container " + container + " is already started");} @AT@ 1527 @LENGTH@ 69
---------INS MethodInvocation@@System.err.println("Container " + container + " is already started") @TO@ ExpressionStatement@@MethodInvocation:System.err.println("Container " + container + " is already started") @AT@ 1527 @LENGTH@ 68
------------INS QualifiedName@@Name:System.err @TO@ MethodInvocation@@System.err.println("Container " + container + " is already started") @AT@ 1527 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:["Container " + container + " is already started"] @TO@ MethodInvocation@@System.err.println("Container " + container + " is already started") @AT@ 1538 @LENGTH@ 57
---------------INS InfixExpression@@"Container " + container + " is already started" @TO@ SimpleName@@MethodName:println:["Container " + container + " is already started"] @AT@ 1546 @LENGTH@ 48
------------------INS StringLiteral@@"Container " @TO@ InfixExpression@@"Container " + container + " is already started" @AT@ 1546 @LENGTH@ 12
------------------INS Operator@@+ @TO@ InfixExpression@@"Container " + container + " is already started" @AT@ 1558 @LENGTH@ 1
------------------INS SimpleName@@container @TO@ InfixExpression@@"Container " + container + " is already started" @AT@ 1561 @LENGTH@ 9
------------------INS StringLiteral@@" is already started" @TO@ InfixExpression@@"Container " + container + " is already started" @AT@ 1573 @LENGTH@ 21


UPD MethodDeclaration@@public, Transceiver, MethodName:createTranceiver, Exception,  @TO@ public, Transceiver, MethodName:createTransceiver, Exception,  @AT@ 1159 @LENGTH@ 262
---UPD SimpleName@@MethodName:createTranceiver @TO@ MethodName:createTransceiver @AT@ 1178 @LENGTH@ 16


UPD VariableDeclarationStatement@@String text=ExchangeHelper.getMandatoryOutBody(response,String.class); @TO@ String text=response.getOut().getMandatoryBody(String.class); @AT@ 2251 @LENGTH@ 73
---UPD VariableDeclarationFragment@@text=ExchangeHelper.getMandatoryOutBody(response,String.class) @TO@ text=response.getOut().getMandatoryBody(String.class) @AT@ 2258 @LENGTH@ 65
------UPD MethodInvocation@@ExchangeHelper.getMandatoryOutBody(response,String.class) @TO@ response.getOut().getMandatoryBody(String.class) @AT@ 2265 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryOutBody(response,String.class) @AT@ 2220 @LENGTH@ 17
---------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:response @AT@ 2265 @LENGTH@ 14
---------UPD SimpleName@@MethodName:getMandatoryOutBody:[response, String.class] @TO@ MethodName:getMandatoryBody:[String.class] @AT@ 2280 @LENGTH@ 43
------------DEL SimpleName@@response @AT@ 2300 @LENGTH@ 8


UPD IfStatement@@if (context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class) {  final Object other=context.getParameters()[0];  if (other == null) {    return false;  }  final Class<?> proxyType=componentView.getProxyClass();  return proxyType.isAssignableFrom(other.getClass());} else if (context.getMethod().getName().equals("hashCode")) {  return componentView.hashCode();} else {  return context.proceed();} @TO@ if ((context.getMethod().getName().equals("equals")) || context.getMethod().getName().equals("isIdentical")) {  final Object other=context.getParameters()[0];  if (other == null) {    return false;  }  final Class<?> proxyType=componentView.getProxyClass();  return proxyType.isAssignableFrom(other.getClass());} else if (context.getMethod().getName().equals("hashCode")) {  return componentView.hashCode();} else {  return context.proceed();} @AT@ 2345 @LENGTH@ 723
---UPD InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @TO@ (context.getMethod().getName().equals("equals")) || context.getMethod().getName().equals("isIdentical") @AT@ 2349 @LENGTH@ 145
------DEL InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 @AT@ 2349 @LENGTH@ 83
---------DEL InfixExpression@@context.getParameters().length == 1 @AT@ 2399 @LENGTH@ 33
------------DEL FieldAccess@@context.getParameters().length @AT@ 2399 @LENGTH@ 30
---------------DEL MethodInvocation@@context.getParameters() @AT@ 2399 @LENGTH@ 23
------------------DEL SimpleName@@Name:context @AT@ 2399 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getParameters:[] @AT@ 2407 @LENGTH@ 15
---------------DEL SimpleName@@length @AT@ 2423 @LENGTH@ 6
------------DEL Operator@@== @AT@ 2429 @LENGTH@ 2
------------DEL NumberLiteral@@1 @AT@ 2431 @LENGTH@ 1
------INS ParenthesizedExpression@@(context.getMethod().getName().equals("equals")) @TO@ InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2349 @LENGTH@ 48
---------MOV MethodInvocation@@context.getMethod().getName().equals("equals") @TO@ ParenthesizedExpression@@(context.getMethod().getName().equals("equals")) @AT@ 2349 @LENGTH@ 46
------MOV Operator@@&& @TO@ InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2395 @LENGTH@ 2
------INS MethodInvocation@@context.getMethod().getName().equals("isIdentical") @TO@ InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2421 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2421 @LENGTH@ 29
---------MOV MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2436 @LENGTH@ 19
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2436 @LENGTH@ 7
---------MOV SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2456 @LENGTH@ 19
------------INS StringLiteral@@"isIdentical" @TO@ SimpleName@@MethodName:getParameterTypes:[] @AT@ 2458 @LENGTH@ 13
------DEL Operator@@&& @AT@ 2432 @LENGTH@ 2
------DEL InfixExpression@@context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2436 @LENGTH@ 58
---------DEL ArrayAccess@@context.getMethod().getParameterTypes()[0] @AT@ 2436 @LENGTH@ 42
------------DEL MethodInvocation@@context.getMethod().getParameterTypes() @AT@ 2436 @LENGTH@ 39
------------DEL NumberLiteral@@0 @AT@ 2476 @LENGTH@ 1
---------DEL Operator@@== @AT@ 2478 @LENGTH@ 2
---------DEL TypeLiteral@@Object.class @AT@ 2482 @LENGTH@ 12


UPD IfStatement@@if (store.hasDefined(ModelKeys.PROPERTIES)) {  for (  Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {    writer.writeStartElement(Element.PROPERTY.getLocalName());    writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());    writer.writeCharacters(property.getValue().asString());    writer.writeEndElement();  }} @TO@ if (store.hasDefined(ModelKeys.PROPERTY)) {  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    writer.writeStartElement(Element.PROPERTY.getLocalName());    writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());    Property complexValue=property.getValue().asProperty();    writer.writeCharacters(complexValue.getValue().asString());    writer.writeEndElement();  }} @AT@ 18054 @LENGTH@ 436
---UPD MethodInvocation@@store.hasDefined(ModelKeys.PROPERTIES) @TO@ store.hasDefined(ModelKeys.PROPERTY) @AT@ 18058 @LENGTH@ 38
------UPD SimpleName@@MethodName:hasDefined:[ModelKeys.PROPERTIES] @TO@ MethodName:hasDefined:[ModelKeys.PROPERTY] @AT@ 18064 @LENGTH@ 32
---------UPD QualifiedName@@ModelKeys.PROPERTIES @TO@ ModelKeys.PROPERTY @AT@ 18075 @LENGTH@ 20
------------UPD SimpleName@@PROPERTIES @TO@ PROPERTY @AT@ 18085 @LENGTH@ 10
---UPD Block@@ThenBody:{  for (  Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {    writer.writeStartElement(Element.PROPERTY.getLocalName());    writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());    writer.writeCharacters(property.getValue().asString());    writer.writeEndElement();  }} @TO@ ThenBody:{  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    writer.writeStartElement(Element.PROPERTY.getLocalName());    writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());    Property complexValue=property.getValue().asProperty();    writer.writeCharacters(complexValue.getValue().asString());    writer.writeEndElement();  }} @AT@ 18098 @LENGTH@ 392
------UPD EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {  writer.writeStartElement(Element.PROPERTY.getLocalName());  writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());  writer.writeCharacters(property.getValue().asString());  writer.writeEndElement();} @TO@ for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  writer.writeStartElement(Element.PROPERTY.getLocalName());  writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());  Property complexValue=property.getValue().asProperty();  writer.writeCharacters(complexValue.getValue().asString());  writer.writeEndElement();} @AT@ 18112 @LENGTH@ 368
---------UPD MethodInvocation@@store.get(ModelKeys.PROPERTIES).asPropertyList() @TO@ store.get(ModelKeys.PROPERTY).asPropertyList() @AT@ 18136 @LENGTH@ 48
------------UPD MethodInvocation@@MethodName:get:[ModelKeys.PROPERTIES] @TO@ MethodName:get:[ModelKeys.PROPERTY] @AT@ 18136 @LENGTH@ 31
---------------UPD QualifiedName@@ModelKeys.PROPERTIES @TO@ ModelKeys.PROPERTY @AT@ 18146 @LENGTH@ 20
------------------UPD SimpleName@@PROPERTIES @TO@ PROPERTY @AT@ 18156 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:writer.writeCharacters(property.getValue().asString()) @TO@ MethodInvocation:writer.writeCharacters(complexValue.getValue().asString()) @AT@ 18369 @LENGTH@ 55
------------UPD MethodInvocation@@writer.writeCharacters(property.getValue().asString()) @TO@ writer.writeCharacters(complexValue.getValue().asString()) @AT@ 18369 @LENGTH@ 54
---------------UPD SimpleName@@MethodName:writeCharacters:[property.getValue().asString()] @TO@ MethodName:writeCharacters:[complexValue.getValue().asString()] @AT@ 18376 @LENGTH@ 47
------------------UPD MethodInvocation@@property.getValue().asString() @TO@ complexValue.getValue().asString() @AT@ 18392 @LENGTH@ 30
---------------------UPD SimpleName@@Name:property @TO@ Name:complexValue @AT@ 18392 @LENGTH@ 8
---------INS VariableDeclarationStatement@@Property complexValue=property.getValue().asProperty(); @TO@ EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {  writer.writeStartElement(Element.PROPERTY.getLocalName());  writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName());  writer.writeCharacters(property.getValue().asString());  writer.writeEndElement();} @AT@ 18526 @LENGTH@ 57
------------INS SimpleType@@Property @TO@ VariableDeclarationStatement@@Property complexValue=property.getValue().asProperty(); @AT@ 18526 @LENGTH@ 8
------------INS VariableDeclarationFragment@@complexValue=property.getValue().asProperty() @TO@ VariableDeclarationStatement@@Property complexValue=property.getValue().asProperty(); @AT@ 18535 @LENGTH@ 47
---------------INS SimpleName@@complexValue @TO@ VariableDeclarationFragment@@complexValue=property.getValue().asProperty() @AT@ 18535 @LENGTH@ 12
---------------INS MethodInvocation@@property.getValue().asProperty() @TO@ VariableDeclarationFragment@@complexValue=property.getValue().asProperty() @AT@ 18550 @LENGTH@ 32
------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@property.getValue().asProperty() @AT@ 18550 @LENGTH@ 19
------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getValue().asProperty() @AT@ 18550 @LENGTH@ 8
------------------INS SimpleName@@MethodName:asProperty:[] @TO@ MethodInvocation@@property.getValue().asProperty() @AT@ 18570 @LENGTH@ 12


INS TryStatement@@try {  modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2405 @LENGTH@ 354
---MOV ExpressionStatement@@MethodInvocation:modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime) @TO@ TryStatement@@try {  modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2338 @LENGTH@ 90
---INS CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @TO@ TryStatement@@try {  modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2544 @LENGTH@ 215
------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2550 @LENGTH@ 26
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2550 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2575 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2604 @LENGTH@ 133
---------INS ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))) @AT@ 2610 @LENGTH@ 126
------------INS New@@new @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2610 @LENGTH@ 3
------------INS SimpleType@@OperationFailedException @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2614 @LENGTH@ 24
------------INS MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2639 @LENGTH@ 96
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @AT@ 2639 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2639 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2643 @LENGTH@ 9
---------------INS SimpleName@@MethodName:set:[MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)] @TO@ MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @AT@ 2655 @LENGTH@ 80
------------------INS MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @TO@ SimpleName@@MethodName:set:[MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)] @AT@ 2659 @LENGTH@ 75
---------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @AT@ 2659 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @TO@ MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @AT@ 2668 @LENGTH@ 66
------------------------INS QualifiedName@@contexthost.webhost @TO@ SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @AT@ 2690 @LENGTH@ 19
---------------------------INS SimpleName@@contexthost @TO@ QualifiedName@@contexthost.webhost @AT@ 2690 @LENGTH@ 11
---------------------------INS SimpleName@@webhost @TO@ QualifiedName@@contexthost.webhost @AT@ 2702 @LENGTH@ 7
------------------------INS QualifiedName@@contexthost.webcontext @TO@ SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @AT@ 2711 @LENGTH@ 22
---------------------------INS SimpleName@@contexthost @TO@ QualifiedName@@contexthost.webcontext @AT@ 2711 @LENGTH@ 11
---------------------------INS SimpleName@@webcontext @TO@ QualifiedName@@contexthost.webcontext @AT@ 2723 @LENGTH@ 10


INS IfStatement@@if (loadOnStartup != null) {  this.loadOnStartup=loadOnStartup;  try {    setLoadOnStartupInt(Integer.parseInt(loadOnStartup));  } catch (  NumberFormatException e) {    setLoadOnStartupInt(0);  }} @TO@ MethodDeclaration@@public, void, MethodName:setLoadOnStartup, String loadOnStartup,  @AT@ 3615 @LENGTH@ 283
---INS InfixExpression@@loadOnStartup != null @TO@ IfStatement@@if (loadOnStartup != null) {  this.loadOnStartup=loadOnStartup;  try {    setLoadOnStartupInt(Integer.parseInt(loadOnStartup));  } catch (  NumberFormatException e) {    setLoadOnStartupInt(0);  }} @AT@ 3619 @LENGTH@ 21
------INS SimpleName@@loadOnStartup @TO@ InfixExpression@@loadOnStartup != null @AT@ 3619 @LENGTH@ 13
------INS Operator@@!= @TO@ InfixExpression@@loadOnStartup != null @AT@ 3632 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@loadOnStartup != null @AT@ 3636 @LENGTH@ 4
---INS Block@@ThenBody:{  this.loadOnStartup=loadOnStartup;  try {    setLoadOnStartupInt(Integer.parseInt(loadOnStartup));  } catch (  NumberFormatException e) {    setLoadOnStartupInt(0);  }} @TO@ IfStatement@@if (loadOnStartup != null) {  this.loadOnStartup=loadOnStartup;  try {    setLoadOnStartupInt(Integer.parseInt(loadOnStartup));  } catch (  NumberFormatException e) {    setLoadOnStartupInt(0);  }} @AT@ 3642 @LENGTH@ 256
------MOV ExpressionStatement@@Assignment:this.loadOnStartup=loadOnStartup @TO@ Block@@ThenBody:{  this.loadOnStartup=loadOnStartup;  try {    setLoadOnStartupInt(Integer.parseInt(loadOnStartup));  } catch (  NumberFormatException e) {    setLoadOnStartupInt(0);  }} @AT@ 3615 @LENGTH@ 35
------MOV TryStatement@@try {  setLoadOnStartupInt(Integer.parseInt(loadOnStartup));} catch (NumberFormatException e) {  setLoadOnStartupInt(0);} @TO@ Block@@ThenBody:{  this.loadOnStartup=loadOnStartup;  try {    setLoadOnStartupInt(Integer.parseInt(loadOnStartup));  } catch (  NumberFormatException e) {    setLoadOnStartupInt(0);  }} @AT@ 3660 @LENGTH@ 165


INS MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @TO@ TypeDeclaration@@[public]StatelessSessionBeanObjectViewConfigurator, SessionBeanObjectViewConfigurator @AT@ 1959 @LENGTH@ 345
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1959 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1969 @LENGTH@ 4
---INS SimpleName@@MethodName:handleIsIdenticalMethod @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1974 @LENGTH@ 23
---INS SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1998 @LENGTH@ 51
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 1998 @LENGTH@ 5
------INS SimpleType@@ComponentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2004 @LENGTH@ 22
------INS SimpleName@@componentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2027 @LENGTH@ 22
---INS SingleVariableDeclaration@@final ViewConfiguration configuration @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 2051 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2051 @LENGTH@ 5
------INS SimpleType@@ViewConfiguration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2057 @LENGTH@ 17
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2075 @LENGTH@ 13
---INS SingleVariableDeclaration@@final DeploymentReflectionIndex index @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 2090 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2090 @LENGTH@ 5
------INS SimpleType@@DeploymentReflectionIndex @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2096 @LENGTH@ 25
------INS SimpleName@@index @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2122 @LENGTH@ 5
---INS SingleVariableDeclaration@@final Method method @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 2129 @LENGTH@ 19
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Method method @AT@ 2129 @LENGTH@ 5
------INS SimpleType@@Method @TO@ SingleVariableDeclaration@@final Method method @AT@ 2135 @LENGTH@ 6
------INS SimpleName@@method @TO@ SingleVariableDeclaration@@final Method method @AT@ 2142 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,ComponentTypeIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 2160 @LENGTH@ 138
------INS MethodInvocation@@configuration.addClientInterceptor(method,ComponentTypeIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @TO@ ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,ComponentTypeIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @AT@ 2160 @LENGTH@ 137
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addClientInterceptor(method,ComponentTypeIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @AT@ 2160 @LENGTH@ 13
---------INS SimpleName@@MethodName:addClientInterceptor:[method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @TO@ MethodInvocation@@configuration.addClientInterceptor(method,ComponentTypeIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @AT@ 2174 @LENGTH@ 123
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @AT@ 2195 @LENGTH@ 6
------------INS QualifiedName@@ComponentTypeIdentityInterceptorFactory.INSTANCE @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @AT@ 2203 @LENGTH@ 48
---------------INS SimpleName@@ComponentTypeIdentityInterceptorFactory @TO@ QualifiedName@@ComponentTypeIdentityInterceptorFactory.INSTANCE @AT@ 2203 @LENGTH@ 39
---------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@ComponentTypeIdentityInterceptorFactory.INSTANCE @AT@ 2243 @LENGTH@ 8
------------INS QualifiedName@@InterceptorOrder.Client.EJB_EQUALS_HASHCODE @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @AT@ 2253 @LENGTH@ 43
---------------INS QualifiedName@@InterceptorOrder.Client @TO@ QualifiedName@@InterceptorOrder.Client.EJB_EQUALS_HASHCODE @AT@ 2253 @LENGTH@ 23
------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2253 @LENGTH@ 16
------------------INS SimpleName@@Client @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2270 @LENGTH@ 6
---------------INS SimpleName@@EJB_EQUALS_HASHCODE @TO@ QualifiedName@@InterceptorOrder.Client.EJB_EQUALS_HASHCODE @AT@ 2277 @LENGTH@ 19


DEL FieldDeclaration@@public, static, final, InterceptorFactory, [HASH_CODE=new ImmediateInterceptorFactory(new Interceptor(){
  @Override public Object processInvocation(  final InterceptorContext context) throws Exception {
    final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class);
    return instance.getPrimaryKey().hashCode();
  }
}
)] @AT@ 2028 @LENGTH@ 423
---DEL Modifier@@public @AT@ 2028 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2035 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2042 @LENGTH@ 5
---DEL SimpleType@@InterceptorFactory @AT@ 2048 @LENGTH@ 18
---DEL VariableDeclarationFragment@@HASH_CODE=new ImmediateInterceptorFactory(new Interceptor(){
  @Override public Object processInvocation(  final InterceptorContext context) throws Exception {
    final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class);
    return instance.getPrimaryKey().hashCode();
  }
}
) @AT@ 2067 @LENGTH@ 383
------DEL SimpleName@@HASH_CODE @AT@ 2067 @LENGTH@ 9
------DEL ClassInstanceCreation@@ImmediateInterceptorFactory[new Interceptor(){
  @Override public Object processInvocation(  final InterceptorContext context) throws Exception {
    final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class);
    return instance.getPrimaryKey().hashCode();
  }
}
] @AT@ 2079 @LENGTH@ 371
---------DEL New@@new @AT@ 2079 @LENGTH@ 3
---------DEL SimpleType@@ImmediateInterceptorFactory @AT@ 2083 @LENGTH@ 27
---------DEL ClassInstanceCreation@@Interceptor[] @AT@ 2111 @LENGTH@ 338
------------DEL New@@new @AT@ 2111 @LENGTH@ 3
------------DEL SimpleType@@Interceptor @AT@ 2115 @LENGTH@ 11
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2129 @LENGTH@ 320
---------------DEL MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 2157 @LENGTH@ 286
------------------DEL Modifier@@public @AT@ 2157 @LENGTH@ 6
------------------DEL SimpleType@@Object @AT@ 2164 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:processInvocation @AT@ 2171 @LENGTH@ 17
------------------DEL SingleVariableDeclaration@@final InterceptorContext context @AT@ 2189 @LENGTH@ 32
---------------------DEL Modifier@@final @AT@ 2189 @LENGTH@ 5
---------------------DEL SimpleType@@InterceptorContext @AT@ 2195 @LENGTH@ 18
---------------------DEL SimpleName@@context @AT@ 2214 @LENGTH@ 7
------------------DEL SimpleType@@Exception @AT@ 2230 @LENGTH@ 9
------------------DEL VariableDeclarationStatement@@final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class); @AT@ 2254 @LENGTH@ 123
---------------------DEL Modifier@@final @AT@ 2254 @LENGTH@ 5
---------------------DEL SimpleType@@EntityBeanComponentInstance @AT@ 2260 @LENGTH@ 27
---------------------DEL VariableDeclarationFragment@@instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2288 @LENGTH@ 88
------------------------DEL SimpleName@@instance @AT@ 2288 @LENGTH@ 8
------------------------DEL CastExpression@@(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2299 @LENGTH@ 77
---------------------------DEL SimpleType@@EntityBeanComponentInstance @AT@ 2300 @LENGTH@ 27
---------------------------DEL MethodInvocation@@context.getPrivateData(ComponentInstance.class) @AT@ 2329 @LENGTH@ 47
------------------------------DEL SimpleName@@Name:context @AT@ 2329 @LENGTH@ 7
------------------------------DEL SimpleName@@MethodName:getPrivateData:[ComponentInstance.class] @AT@ 2337 @LENGTH@ 39
---------------------------------DEL TypeLiteral@@ComponentInstance.class @AT@ 2352 @LENGTH@ 23
------------------DEL ReturnStatement@@MethodInvocation:instance.getPrimaryKey().hashCode() @AT@ 2390 @LENGTH@ 43
---------------------DEL MethodInvocation@@instance.getPrimaryKey().hashCode() @AT@ 2397 @LENGTH@ 35
------------------------DEL MethodInvocation@@MethodName:getPrimaryKey:[] @AT@ 2397 @LENGTH@ 24
------------------------DEL SimpleName@@Name:instance @AT@ 2397 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:hashCode:[] @AT@ 2422 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 2126 @LENGTH@ 33
---DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 2126 @LENGTH@ 32
------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 2126 @LENGTH@ 32
---------DEL StringLiteral@@"activemq-data" @AT@ 2142 @LENGTH@ 15


INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@private, SessionType, MethodName:determineSessionType, final String ejbClass, final CompositeIndex compositeIndex,  @AT@ 13321 @LENGTH@ 12
---INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 13328 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:assertThat((Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator"),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:testNoBeanFactory, Exception,  @AT@ 2725 @LENGTH@ 92
---INS MethodInvocation@@assertThat((Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator"),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat((Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator"),is(false)) @AT@ 2725 @LENGTH@ 91
------INS SimpleName@@MethodName:assertThat:[(Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator"), is(false)] @TO@ MethodInvocation@@assertThat((Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator"),is(false)) @AT@ 2725 @LENGTH@ 91
---------INS CastExpression@@(Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator") @TO@ SimpleName@@MethodName:assertThat:[(Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator"), is(false)] @AT@ 2736 @LENGTH@ 68
------------INS SimpleType@@Boolean @TO@ CastExpression@@(Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator") @AT@ 2737 @LENGTH@ 7
------------INS MethodInvocation@@ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator") @TO@ CastExpression@@(Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator") @AT@ 2746 @LENGTH@ 58
---------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator") @AT@ 2746 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getField:[cfb, "useBeanFactoryLocator"] @TO@ MethodInvocation@@ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator") @AT@ 2766 @LENGTH@ 38
------------------INS SimpleName@@cfb @TO@ SimpleName@@MethodName:getField:[cfb, "useBeanFactoryLocator"] @AT@ 2775 @LENGTH@ 3
------------------INS StringLiteral@@"useBeanFactoryLocator" @TO@ SimpleName@@MethodName:getField:[cfb, "useBeanFactoryLocator"] @AT@ 2780 @LENGTH@ 23
---------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[(Boolean)ReflectionTestUtils.getField(cfb,"useBeanFactoryLocator"), is(false)] @AT@ 2806 @LENGTH@ 9
------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 2806 @LENGTH@ 9
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 2809 @LENGTH@ 5
------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 2806 @LENGTH@ 9
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 2809 @LENGTH@ 5


UPD IfStatement@@if (serdes.containsKey(name)) {  throw new RuntimeException("double registering serde " + name);} @TO@ if (serdes.containsKey(name)) {  LOG.warn("double registering serde " + name);  return;} @AT@ 2999 @LENGTH@ 107
---UPD Block@@ThenBody:{  throw new RuntimeException("double registering serde " + name);} @TO@ ThenBody:{  LOG.warn("double registering serde " + name);  return;} @AT@ 3029 @LENGTH@ 77
------DEL ThrowStatement@@ClassInstanceCreation:new RuntimeException("double registering serde " + name) @AT@ 3037 @LENGTH@ 63
---------DEL ClassInstanceCreation@@RuntimeException["double registering serde " + name] @AT@ 3043 @LENGTH@ 56
------------DEL New@@new @AT@ 3043 @LENGTH@ 3
------------DEL SimpleType@@RuntimeException @AT@ 3047 @LENGTH@ 16
------------DEL InfixExpression@@"double registering serde " + name @AT@ 3064 @LENGTH@ 34
------INS ExpressionStatement@@MethodInvocation:LOG.warn("double registering serde " + name) @TO@ Block@@ThenBody:{  throw new RuntimeException("double registering serde " + name);} @AT@ 3202 @LENGTH@ 45
---------INS MethodInvocation@@LOG.warn("double registering serde " + name) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("double registering serde " + name) @AT@ 3202 @LENGTH@ 44
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("double registering serde " + name) @AT@ 3202 @LENGTH@ 3
------------INS SimpleName@@MethodName:warn:["double registering serde " + name] @TO@ MethodInvocation@@LOG.warn("double registering serde " + name) @AT@ 3206 @LENGTH@ 40
---------------INS InfixExpression@@"double registering serde " + name @TO@ SimpleName@@MethodName:warn:["double registering serde " + name] @AT@ 3211 @LENGTH@ 34
------------------MOV StringLiteral@@"double registering serde " @TO@ InfixExpression@@"double registering serde " + name @AT@ 3064 @LENGTH@ 27
------------------MOV Operator@@+ @TO@ InfixExpression@@"double registering serde " + name @AT@ 3091 @LENGTH@ 1
------------------MOV SimpleName@@name @TO@ InfixExpression@@"double registering serde " + name @AT@ 3094 @LENGTH@ 4
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  throw new RuntimeException("double registering serde " + name);} @AT@ 3254 @LENGTH@ 7


UPD EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @TO@ for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  final StringBuilder missing=new StringBuilder();  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }  } else {    missing.append(MESSAGES.transitiveDependencies());  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @AT@ 4120 @LENGTH@ 1128
---UPD IfStatement@@if (!immediatelyUnavailable.isEmpty()) {  final StringBuilder missing=new StringBuilder();  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @TO@ if (!immediatelyUnavailable.isEmpty()) {  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }} else {  missing.append(MESSAGES.transitiveDependencies());} @AT@ 4593 @LENGTH@ 641
------UPD Block@@ThenBody:{  final StringBuilder missing=new StringBuilder();  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @TO@ ThenBody:{  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }} @AT@ 4632 @LENGTH@ 602
------INS Block@@ElseBody:{  missing.append(MESSAGES.transitiveDependencies());} @TO@ IfStatement@@if (!immediatelyUnavailable.isEmpty()) {  final StringBuilder missing=new StringBuilder();  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @AT@ 5099 @LENGTH@ 536
---------INS ExpressionStatement@@MethodInvocation:missing.append(MESSAGES.transitiveDependencies()) @TO@ Block@@ElseBody:{  missing.append(MESSAGES.transitiveDependencies());} @AT@ 5567 @LENGTH@ 50
------------INS MethodInvocation@@missing.append(MESSAGES.transitiveDependencies()) @TO@ ExpressionStatement@@MethodInvocation:missing.append(MESSAGES.transitiveDependencies()) @AT@ 5567 @LENGTH@ 49
---------------INS SimpleName@@Name:missing @TO@ MethodInvocation@@missing.append(MESSAGES.transitiveDependencies()) @AT@ 5567 @LENGTH@ 7
---------------INS SimpleName@@MethodName:append:[MESSAGES.transitiveDependencies()] @TO@ MethodInvocation@@missing.append(MESSAGES.transitiveDependencies()) @AT@ 5575 @LENGTH@ 41
------------------INS MethodInvocation@@MESSAGES.transitiveDependencies() @TO@ SimpleName@@MethodName:append:[MESSAGES.transitiveDependencies()] @AT@ 5582 @LENGTH@ 33
---------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.transitiveDependencies() @AT@ 5582 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:transitiveDependencies:[] @TO@ MethodInvocation@@MESSAGES.transitiveDependencies() @AT@ 5591 @LENGTH@ 24
---MOV VariableDeclarationStatement@@final StringBuilder missing=new StringBuilder(); @TO@ EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @AT@ 4654 @LENGTH@ 50
---MOV ExpressionStatement@@MethodInvocation:problem.append(" ").append(MESSAGES.servicesMissing(missing)) @TO@ EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @AT@ 5097 @LENGTH@ 62
---MOV ExpressionStatement@@MethodInvocation:problemList.add(problem.toString()) @TO@ EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @AT@ 5180 @LENGTH@ 36


INS TryStatement@@try {  SecurityTest.createSecurityDomain("mydomain",false);} catch (Exception e) {} @TO@ MethodDeclaration@@public, static, Archive, MethodName:createDeployment,  @AT@ 2786 @LENGTH@ 183
---INS ExpressionStatement@@MethodInvocation:SecurityTest.createSecurityDomain("mydomain",false) @TO@ TryStatement@@try {  SecurityTest.createSecurityDomain("mydomain",false);} catch (Exception e) {} @AT@ 2852 @LENGTH@ 53
------INS MethodInvocation@@SecurityTest.createSecurityDomain("mydomain",false) @TO@ ExpressionStatement@@MethodInvocation:SecurityTest.createSecurityDomain("mydomain",false) @AT@ 2852 @LENGTH@ 52
---------INS SimpleName@@Name:SecurityTest @TO@ MethodInvocation@@SecurityTest.createSecurityDomain("mydomain",false) @AT@ 2852 @LENGTH@ 12
---------INS SimpleName@@MethodName:createSecurityDomain:["mydomain", false] @TO@ MethodInvocation@@SecurityTest.createSecurityDomain("mydomain",false) @AT@ 2865 @LENGTH@ 39
------------INS StringLiteral@@"mydomain" @TO@ SimpleName@@MethodName:createSecurityDomain:["mydomain", false] @AT@ 2886 @LENGTH@ 10
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createSecurityDomain:["mydomain", false] @AT@ 2898 @LENGTH@ 5
---INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  SecurityTest.createSecurityDomain("mydomain",false);} catch (Exception e) {} @AT@ 2916 @LENGTH@ 53
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 2923 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2923 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2933 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:testReadAttribute, IOException,  @TO@ public, void, MethodName:testReadAttribute, IOException, MgmtOperationException,  @AT@ 2806 @LENGTH@ 571
---INS SimpleType@@MgmtOperationException @TO@ MethodDeclaration@@public, void, MethodName:testReadAttribute, IOException,  @AT@ 2935 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2223 @LENGTH@ 245
---INS MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @AT@ 2223 @LENGTH@ 244
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @AT@ 2223 @LENGTH@ 7
------INS SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
] @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @AT@ 2231 @LENGTH@ 236
---------INS ClassInstanceCreation@@OperationContext.RollbackHandler[] @TO@ SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
] @AT@ 2244 @LENGTH@ 222
------------INS New@@new @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 2244 @LENGTH@ 3
------------INS SimpleType@@OperationContext.RollbackHandler @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 2248 @LENGTH@ 32
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 2283 @LENGTH@ 183
---------------INS MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2319 @LENGTH@ 137
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2319 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2326 @LENGTH@ 4
------------------INS SimpleName@@MethodName:handleRollback @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2331 @LENGTH@ 14
------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2346 @LENGTH@ 24
---------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2346 @LENGTH@ 16
---------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2363 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2372 @LENGTH@ 19
---------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2372 @LENGTH@ 9
---------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2382 @LENGTH@ 9
------------------INS ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2411 @LENGTH@ 31
---------------------INS MethodInvocation@@context.revertReloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @AT@ 2411 @LENGTH@ 30
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.revertReloadRequired() @AT@ 2411 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:revertReloadRequired:[] @TO@ MethodInvocation@@context.revertReloadRequired() @AT@ 2419 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2984 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2984 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2992 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3005 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3005 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3005 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3022 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3038 @LENGTH@ 21


UPD FieldDeclaration@@EjbLogger, [EJB3_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.ejb3")] @TO@ EjbLogger, [EJB3_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.as.ejb3")] @AT@ 3727 @LENGTH@ 83
---UPD VariableDeclarationFragment@@EJB3_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.ejb3") @TO@ EJB3_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.as.ejb3") @AT@ 3737 @LENGTH@ 72
------UPD MethodInvocation@@Logger.getMessageLogger(EjbLogger.class,"org.jboss.ejb3") @TO@ Logger.getMessageLogger(EjbLogger.class,"org.jboss.as.ejb3") @AT@ 3751 @LENGTH@ 58
---------UPD SimpleName@@MethodName:getMessageLogger:[EjbLogger.class, "org.jboss.ejb3"] @TO@ MethodName:getMessageLogger:[EjbLogger.class, "org.jboss.as.ejb3"] @AT@ 3758 @LENGTH@ 51
------------UPD StringLiteral@@"org.jboss.ejb3" @TO@ "org.jboss.as.ejb3" @AT@ 3792 @LENGTH@ 16


UPD FieldDeclaration@@public, static, final, DomainRemoteFileRequestAndHandler, [INSTANCE=new DomainRemoteFileRequestAndHandler(MAPPER)] @TO@ public, static, final, DomainRemoteFileRequestAndHandler, [INSTANCE=new DomainRemoteFileRequestAndHandler(null)] @AT@ 2011 @LENGTH@ 111
---UPD VariableDeclarationFragment@@INSTANCE=new DomainRemoteFileRequestAndHandler(MAPPER) @TO@ INSTANCE=new DomainRemoteFileRequestAndHandler(null) @AT@ 2065 @LENGTH@ 56
------UPD ClassInstanceCreation@@DomainRemoteFileRequestAndHandler[MAPPER] @TO@ DomainRemoteFileRequestAndHandler[null] @AT@ 2076 @LENGTH@ 45
---------DEL SimpleName@@MAPPER @AT@ 2114 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@DomainRemoteFileRequestAndHandler[MAPPER] @AT@ 2153 @LENGTH@ 4


UPD IfStatement@@if (parent == null && url != null) {  URI uri=new URI(url);  type=uri.getScheme();  if ("child".equals(type)) {    parent=uri.getHost();  }} @TO@ if (url != null) {  URI uri=new URI(url);  type=uri.getScheme();  if ("child".equals(type)) {    parent=uri.getHost();  }} @AT@ 2234 @LENGTH@ 212
---DEL InfixExpression@@parent == null && url != null @AT@ 2238 @LENGTH@ 29
------DEL InfixExpression@@parent == null @AT@ 2238 @LENGTH@ 14
---------DEL SimpleName@@parent @AT@ 2238 @LENGTH@ 6
---------DEL Operator@@== @AT@ 2244 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2248 @LENGTH@ 4
------DEL Operator@@&& @AT@ 2252 @LENGTH@ 2
------DEL InfixExpression@@url != null @AT@ 2256 @LENGTH@ 11
---INS InfixExpression@@url != null @TO@ IfStatement@@if (parent == null && url != null) {  URI uri=new URI(url);  type=uri.getScheme();  if ("child".equals(type)) {    parent=uri.getHost();  }} @AT@ 2238 @LENGTH@ 11
------MOV SimpleName@@url @TO@ InfixExpression@@url != null @AT@ 2256 @LENGTH@ 3
------MOV Operator@@!= @TO@ InfixExpression@@url != null @AT@ 2259 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@url != null @AT@ 2263 @LENGTH@ 4


UPD FieldDeclaration@@private, static, Map<String,SecurityRealm>, [realms=new HashMap<String,SecurityRealm>()] @TO@ private, static, ConcurrentMap<String,SecurityRealm>, [realms=new ConcurrentHashMap<String,SecurityRealm>(2,0.75f,2)] @AT@ 1641 @LENGTH@ 88
---UPD ParameterizedType@@Map<String,SecurityRealm> @TO@ ConcurrentMap<String,SecurityRealm> @AT@ 1656 @LENGTH@ 26
------UPD SimpleType@@Map @TO@ ConcurrentMap @AT@ 1656 @LENGTH@ 3
---UPD VariableDeclarationFragment@@realms=new HashMap<String,SecurityRealm>() @TO@ realms=new ConcurrentHashMap<String,SecurityRealm>(2,0.75f,2) @AT@ 1683 @LENGTH@ 45
------UPD ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @TO@ ConcurrentHashMap<String,SecurityRealm>[2, 0.75f, 2] @AT@ 1692 @LENGTH@ 36
---------UPD ParameterizedType@@HashMap<String,SecurityRealm> @TO@ ConcurrentHashMap<String,SecurityRealm> @AT@ 1696 @LENGTH@ 30
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 1696 @LENGTH@ 7
---------INS NumberLiteral@@2 @TO@ ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @AT@ 1837 @LENGTH@ 1
---------INS NumberLiteral@@0.75f @TO@ ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @AT@ 1840 @LENGTH@ 5
---------INS NumberLiteral@@2 @TO@ ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @AT@ 1847 @LENGTH@ 1


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1983 @LENGTH@ 167
---DEL Modifier@@protected @AT@ 1983 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1993 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 2001 @LENGTH@ 15
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 2017 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 2017 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 2034 @LENGTH@ 7
---DEL ReturnStatement@@InfixExpression:context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2053 @LENGTH@ 91
------DEL InfixExpression@@context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2060 @LENGTH@ 83
---------DEL MethodInvocation@@context.isNormalServer() @AT@ 2060 @LENGTH@ 24
------------DEL SimpleName@@Name:context @AT@ 2060 @LENGTH@ 7
------------DEL SimpleName@@MethodName:isNormalServer:[] @AT@ 2068 @LENGTH@ 16
---------DEL Operator@@|| @AT@ 2084 @LENGTH@ 2
---------DEL InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2088 @LENGTH@ 55
------------DEL MethodInvocation@@context.getProcessType() @AT@ 2088 @LENGTH@ 24
---------------DEL SimpleName@@Name:context @AT@ 2088 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getProcessType:[] @AT@ 2096 @LENGTH@ 16
------------DEL Operator@@== @AT@ 2112 @LENGTH@ 2
------------DEL QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 2116 @LENGTH@ 27
---------------DEL SimpleName@@ProcessType @AT@ 2116 @LENGTH@ 11
---------------DEL SimpleName@@HOST_CONTROLLER @AT@ 2128 @LENGTH@ 15


UPD MethodDeclaration@@void, MethodName:insert, E entry,  @TO@ Set<K>, MethodName:insert, E entry,  @AT@ 2591 @LENGTH@ 16
---DEL PrimitiveType@@void @AT@ 2586 @LENGTH@ 4
---INS ParameterizedType@@Set<K> @TO@ MethodDeclaration@@void, MethodName:insert, E entry,  @AT@ 2702 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<K> @AT@ 2702 @LENGTH@ 3
------INS SimpleType@@K @TO@ ParameterizedType@@Set<K> @AT@ 2706 @LENGTH@ 1


INS MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @TO@ TypeDeclaration@@[public]MetaStoreUtils,  @AT@ 34765 @LENGTH@ 299
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @AT@ 34765 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @AT@ 34772 @LENGTH@ 6
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @AT@ 34779 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 34779 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 34785 @LENGTH@ 1
---INS SimpleName@@MethodName:getClass @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @AT@ 34788 @LENGTH@ 8
---INS SingleVariableDeclaration@@String rawStoreClassName @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @AT@ 34797 @LENGTH@ 24
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String rawStoreClassName @AT@ 34797 @LENGTH@ 6
------INS SimpleName@@rawStoreClassName @TO@ SingleVariableDeclaration@@String rawStoreClassName @AT@ 34804 @LENGTH@ 17
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @AT@ 34836 @LENGTH@ 13
---INS TryStatement@@try {  return Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader());} catch (ClassNotFoundException e) {  throw new MetaException(rawStoreClassName + " class not found");} @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:getClass, String rawStoreClassName, MetaException,  @AT@ 34856 @LENGTH@ 204
------INS ReturnStatement@@MethodInvocation:Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader()) @TO@ TryStatement@@try {  return Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader());} catch (ClassNotFoundException e) {  throw new MetaException(rawStoreClassName + " class not found");} @AT@ 34868 @LENGTH@ 74
---------INS MethodInvocation@@Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader()) @TO@ ReturnStatement@@MethodInvocation:Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader()) @AT@ 34875 @LENGTH@ 66
------------INS SimpleName@@Name:Class @TO@ MethodInvocation@@Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader()) @AT@ 34875 @LENGTH@ 5
------------INS SimpleName@@MethodName:forName:[rawStoreClassName, true, JavaUtils.getClassLoader()] @TO@ MethodInvocation@@Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader()) @AT@ 34881 @LENGTH@ 60
---------------INS SimpleName@@rawStoreClassName @TO@ SimpleName@@MethodName:forName:[rawStoreClassName, true, JavaUtils.getClassLoader()] @AT@ 34889 @LENGTH@ 17
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:forName:[rawStoreClassName, true, JavaUtils.getClassLoader()] @AT@ 34908 @LENGTH@ 4
---------------INS MethodInvocation@@JavaUtils.getClassLoader() @TO@ SimpleName@@MethodName:forName:[rawStoreClassName, true, JavaUtils.getClassLoader()] @AT@ 34914 @LENGTH@ 26
------------------INS SimpleName@@Name:JavaUtils @TO@ MethodInvocation@@JavaUtils.getClassLoader() @AT@ 34914 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@JavaUtils.getClassLoader() @AT@ 34924 @LENGTH@ 16
------INS CatchClause@@catch (ClassNotFoundException e) {  throw new MetaException(rawStoreClassName + " class not found");} @TO@ TryStatement@@try {  return Class.forName(rawStoreClassName,true,JavaUtils.getClassLoader());} catch (ClassNotFoundException e) {  throw new MetaException(rawStoreClassName + " class not found");} @AT@ 34949 @LENGTH@ 111
---------INS SingleVariableDeclaration@@ClassNotFoundException e @TO@ CatchClause@@catch (ClassNotFoundException e) {  throw new MetaException(rawStoreClassName + " class not found");} @AT@ 34956 @LENGTH@ 24
------------INS SimpleType@@ClassNotFoundException @TO@ SingleVariableDeclaration@@ClassNotFoundException e @AT@ 34956 @LENGTH@ 22
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ClassNotFoundException e @AT@ 34979 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new MetaException(rawStoreClassName + " class not found") @TO@ CatchClause@@catch (ClassNotFoundException e) {  throw new MetaException(rawStoreClassName + " class not found");} @AT@ 34990 @LENGTH@ 64
------------INS ClassInstanceCreation@@MetaException[rawStoreClassName + " class not found"] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException(rawStoreClassName + " class not found") @AT@ 34996 @LENGTH@ 57
---------------INS New@@new @TO@ ClassInstanceCreation@@MetaException[rawStoreClassName + " class not found"] @AT@ 34996 @LENGTH@ 3
---------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException[rawStoreClassName + " class not found"] @AT@ 35000 @LENGTH@ 13
---------------INS InfixExpression@@rawStoreClassName + " class not found" @TO@ ClassInstanceCreation@@MetaException[rawStoreClassName + " class not found"] @AT@ 35014 @LENGTH@ 38
------------------INS SimpleName@@rawStoreClassName @TO@ InfixExpression@@rawStoreClassName + " class not found" @AT@ 35014 @LENGTH@ 17
------------------INS Operator@@+ @TO@ InfixExpression@@rawStoreClassName + " class not found" @AT@ 35031 @LENGTH@ 1
------------------INS StringLiteral@@" class not found" @TO@ InfixExpression@@rawStoreClassName + " class not found" @AT@ 35034 @LENGTH@ 18


INS MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineLocalInterfaceFromLocalHome, final String localHomeClass, final String beanName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]EjbMessages,  @AT@ 88987 @LENGTH@ 97
---INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineLocalInterfaceFromLocalHome, final String localHomeClass, final String beanName,  @AT@ 88953 @LENGTH@ 33
---INS SimpleName@@MethodName:couldNotDetermineLocalInterfaceFromLocalHome @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineLocalInterfaceFromLocalHome, final String localHomeClass, final String beanName,  @AT@ 88987 @LENGTH@ 44
---INS SingleVariableDeclaration@@final String localHomeClass @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineLocalInterfaceFromLocalHome, final String localHomeClass, final String beanName,  @AT@ 89032 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String localHomeClass @AT@ 89032 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String localHomeClass @AT@ 89038 @LENGTH@ 6
------INS SimpleName@@localHomeClass @TO@ SingleVariableDeclaration@@final String localHomeClass @AT@ 89045 @LENGTH@ 14
---INS SingleVariableDeclaration@@final String beanName @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineLocalInterfaceFromLocalHome, final String localHomeClass, final String beanName,  @AT@ 89061 @LENGTH@ 21
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String beanName @AT@ 89061 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String beanName @AT@ 89067 @LENGTH@ 6
------INS SimpleName@@beanName @TO@ SingleVariableDeclaration@@final String beanName @AT@ 89074 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:war.setWebXML(ClusteredWebAbstractCase.class.getPackage(),"web.xml") @TO@ MethodInvocation:war.setWebXML(ClusteredWebSimpleTestCase.class.getPackage(),"web.xml") @AT@ 4114 @LENGTH@ 70
---UPD MethodInvocation@@war.setWebXML(ClusteredWebAbstractCase.class.getPackage(),"web.xml") @TO@ war.setWebXML(ClusteredWebSimpleTestCase.class.getPackage(),"web.xml") @AT@ 4114 @LENGTH@ 69
------UPD SimpleName@@MethodName:setWebXML:[ClusteredWebAbstractCase.class.getPackage(), "web.xml"] @TO@ MethodName:setWebXML:[ClusteredWebSimpleTestCase.class.getPackage(), "web.xml"] @AT@ 4118 @LENGTH@ 65
---------UPD MethodInvocation@@ClusteredWebAbstractCase.class.getPackage() @TO@ ClusteredWebSimpleTestCase.class.getPackage() @AT@ 4128 @LENGTH@ 43
------------UPD TypeLiteral@@ClusteredWebAbstractCase.class @TO@ ClusteredWebSimpleTestCase.class @AT@ 4128 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:builder.append("and username=" + userAuthentication.getName()) @TO@ MethodInvocation:builder.append(" and username=" + userAuthentication.getName()) @AT@ 2744 @LENGTH@ 63
---UPD MethodInvocation@@builder.append("and username=" + userAuthentication.getName()) @TO@ builder.append(" and username=" + userAuthentication.getName()) @AT@ 2744 @LENGTH@ 62
------UPD SimpleName@@MethodName:append:["and username=" + userAuthentication.getName()] @TO@ MethodName:append:[" and username=" + userAuthentication.getName()] @AT@ 2752 @LENGTH@ 54
---------UPD InfixExpression@@"and username=" + userAuthentication.getName() @TO@ " and username=" + userAuthentication.getName() @AT@ 2759 @LENGTH@ 46
------------UPD StringLiteral@@"and username=" @TO@ " and username=" @AT@ 2759 @LENGTH@ 15


UPD TypeDeclaration@@[public]JmsClientTestCase,  @TO@ [@RunWith(Arquillian.class), @RunAsClient, public]JmsClientTestCase,  @AT@ 2308 @LENGTH@ 4837
---INS SingleMemberAnnotation@@@RunWith(Arquillian.class) @TO@ TypeDeclaration@@[public]JmsClientTestCase,  @AT@ 2448 @LENGTH@ 26
---INS MarkerAnnotation@@@RunAsClient @TO@ TypeDeclaration@@[public]JmsClientTestCase,  @AT@ 2475 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new BufferedInputStream(new FileInputStream((File)file.getFile())) @TO@ MethodInvocation:IOHelper.buffered(new FileInputStream((File)file.getFile())) @AT@ 2611 @LENGTH@ 75
---DEL ClassInstanceCreation@@BufferedInputStream[new FileInputStream((File)file.getFile())] @AT@ 2618 @LENGTH@ 67
------DEL New@@new @AT@ 2618 @LENGTH@ 3
------DEL SimpleType@@BufferedInputStream @AT@ 2622 @LENGTH@ 19
---INS MethodInvocation@@IOHelper.buffered(new FileInputStream((File)file.getFile())) @TO@ ReturnStatement@@ClassInstanceCreation:new BufferedInputStream(new FileInputStream((File)file.getFile())) @AT@ 2621 @LENGTH@ 61
------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream((File)file.getFile())) @AT@ 2621 @LENGTH@ 8
------INS SimpleName@@MethodName:buffered:[new FileInputStream((File)file.getFile())] @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream((File)file.getFile())) @AT@ 2630 @LENGTH@ 52
---------MOV ClassInstanceCreation@@FileInputStream[(File)file.getFile()] @TO@ SimpleName@@MethodName:buffered:[new FileInputStream((File)file.getFile())] @AT@ 2642 @LENGTH@ 42


UPD VariableDeclarationStatement@@NoTypeConversionAvailableException cause=assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause()); @TO@ TypeConversionException cause=assertIsInstanceOf(TypeConversionException.class,e.getCause()); @AT@ 2208 @LENGTH@ 118
---UPD SimpleType@@NoTypeConversionAvailableException @TO@ TypeConversionException @AT@ 2208 @LENGTH@ 34
---UPD VariableDeclarationFragment@@cause=assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause()) @TO@ cause=assertIsInstanceOf(TypeConversionException.class,e.getCause()) @AT@ 2243 @LENGTH@ 82
------UPD MethodInvocation@@assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause()) @TO@ assertIsInstanceOf(TypeConversionException.class,e.getCause()) @AT@ 2251 @LENGTH@ 74
---------UPD SimpleName@@MethodName:assertIsInstanceOf:[NoTypeConversionAvailableException.class, e.getCause()] @TO@ MethodName:assertIsInstanceOf:[TypeConversionException.class, e.getCause()] @AT@ 2251 @LENGTH@ 74
------------UPD TypeLiteral@@NoTypeConversionAvailableException.class @TO@ TypeConversionException.class @AT@ 2270 @LENGTH@ 40


UPD MethodDeclaration@@public, voidMethodName:CxfRsBlueprintEndpoint, CamelContext camelContext, AbstractJAXRSFactoryBean bean,  @TO@ public, voidMethodName:CxfRsBlueprintEndpoint, Component comp, AbstractJAXRSFactoryBean bean,  @AT@ 1682 @LENGTH@ 346
---UPD SingleVariableDeclaration@@CamelContext camelContext @TO@ Component comp @AT@ 1712 @LENGTH@ 25
------UPD SimpleType@@CamelContext @TO@ Component @AT@ 1712 @LENGTH@ 12
------UPD SimpleName@@camelContext @TO@ comp @AT@ 1725 @LENGTH@ 12
---UPD SuperConstructorInvocation@@super(bean.getAddress(),camelContext);
 @TO@ super(bean.getAddress(),comp);
 @AT@ 1780 @LENGTH@ 39
------UPD SimpleName@@camelContext @TO@ comp @AT@ 1805 @LENGTH@ 12


UPD Block@@ElseBody:{  if (overrideStyle) {    AnsiEscapeCode.decorate(path);  } else {    AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN);  }  shellPrompt=AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW);} @TO@ ElseBody:{  final String decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN);  shellPrompt=decoratedPath + AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW);} @AT@ 20886 @LENGTH@ 440
---INS VariableDeclarationStatement@@final String decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN); @TO@ Block@@ElseBody:{  if (overrideStyle) {    AnsiEscapeCode.decorate(path);  } else {    AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN);  }  shellPrompt=AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW);} @AT@ 20833 @LENGTH@ 180
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN); @AT@ 20833 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN); @AT@ 20839 @LENGTH@ 6
------INS VariableDeclarationFragment@@decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @TO@ VariableDeclarationStatement@@final String decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN); @AT@ 20846 @LENGTH@ 166
---------INS SimpleName@@decoratedPath @TO@ VariableDeclarationFragment@@decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @AT@ 20846 @LENGTH@ 13
---------INS ConditionalExpression@@overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @TO@ VariableDeclarationFragment@@decoratedPath=overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @AT@ 20862 @LENGTH@ 150
------------INS SimpleName@@overrideStyle @TO@ ConditionalExpression@@overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @AT@ 20862 @LENGTH@ 13
------------MOV MethodInvocation@@AnsiEscapeCode.decorate(path) @TO@ ConditionalExpression@@overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @AT@ 20986 @LENGTH@ 29
------------MOV MethodInvocation@@AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @TO@ ConditionalExpression@@overrideStyle ? AnsiEscapeCode.decorate(path) : AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @AT@ 21117 @LENGTH@ 53
---DEL IfStatement@@if (overrideStyle) {  AnsiEscapeCode.decorate(path);} else {  AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN);} @AT@ 20904 @LENGTH@ 285
------DEL SimpleName@@overrideStyle @AT@ 20908 @LENGTH@ 13
------DEL Block@@ThenBody:{  AnsiEscapeCode.decorate(path);} @AT@ 20923 @LENGTH@ 111
---------DEL ExpressionStatement@@MethodInvocation:AnsiEscapeCode.decorate(path) @AT@ 20986 @LENGTH@ 30
------DEL Block@@ElseBody:{  AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN);} @AT@ 21056 @LENGTH@ 133
---------DEL ExpressionStatement@@MethodInvocation:AnsiEscapeCode.decorate(path,AnsiEscapeCode.FG_CYAN) @AT@ 21117 @LENGTH@ 54
---UPD ExpressionStatement@@Assignment:shellPrompt=AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @TO@ Assignment:shellPrompt=decoratedPath + AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @AT@ 21206 @LENGTH@ 106
------UPD Assignment@@shellPrompt=AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @TO@ shellPrompt=decoratedPath + AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @AT@ 21206 @LENGTH@ 105
---------INS InfixExpression@@decoratedPath + AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @TO@ Assignment@@shellPrompt=AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @AT@ 21044 @LENGTH@ 139
------------INS SimpleName@@decoratedPath @TO@ InfixExpression@@decoratedPath + AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @AT@ 21044 @LENGTH@ 13
------------INS Operator@@+ @TO@ InfixExpression@@decoratedPath + AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @AT@ 21057 @LENGTH@ 1
------------MOV MethodInvocation@@AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @TO@ InfixExpression@@decoratedPath + AnsiEscapeCode.decorate(" " + ROO_PROMPT,AnsiEscapeCode.FG_YELLOW) @AT@ 21220 @LENGTH@ 91


UPD TypeDeclaration@@[@Ignore("[AS7-3556] Replace mocked subsystem model tests with functional tests"), public]OSGiCapabilityAddRemoveTestCase, ResourceAddRemoveTestBase @TO@ [public]OSGiCapabilityAddRemoveTestCase, ResourceAddRemoveTestBase @AT@ 1586 @LENGTH@ 3117
---DEL SingleMemberAnnotation@@@Ignore("[AS7-3556] Replace mocked subsystem model tests with functional tests") @AT@ 1586 @LENGTH@ 80


UPD ReturnStatement@@MethodInvocation:child.getAbsolutePath().substring(parent.getAbsolutePath().length()) @TO@ MethodInvocation:child.getAbsolutePath().substring(parent.getAbsolutePath().length() + 1) @AT@ 12540 @LENGTH@ 76
---UPD MethodInvocation@@child.getAbsolutePath().substring(parent.getAbsolutePath().length()) @TO@ child.getAbsolutePath().substring(parent.getAbsolutePath().length() + 1) @AT@ 12547 @LENGTH@ 68
------UPD SimpleName@@MethodName:substring:[parent.getAbsolutePath().length()] @TO@ MethodName:substring:[parent.getAbsolutePath().length() + 1] @AT@ 12571 @LENGTH@ 44
---------INS InfixExpression@@parent.getAbsolutePath().length() + 1 @TO@ SimpleName@@MethodName:substring:[parent.getAbsolutePath().length()] @AT@ 12581 @LENGTH@ 35
------------INS MethodInvocation@@parent.getAbsolutePath().length() @TO@ InfixExpression@@parent.getAbsolutePath().length() + 1 @AT@ 12581 @LENGTH@ 33
---------------MOV MethodInvocation@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12581 @LENGTH@ 24
---------------MOV SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12581 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12606 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@parent.getAbsolutePath().length() + 1 @AT@ 12614 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@parent.getAbsolutePath().length() + 1 @AT@ 12615 @LENGTH@ 1
---------DEL MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12581 @LENGTH@ 33


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ProxyInfo %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ProxyInfo %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2048 @LENGTH@ 1286
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ProxyInfo %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2052 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2052 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2052 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2060 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2076 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2080 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2080 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2080 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2107 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2080 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2114 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2125 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2125 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2143 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2148 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2150 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 2052 @LENGTH@ 24


UPD MethodDeclaration@@voidMethodName:CmpEntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, Map<Method,Interceptor> methodInterceptors, final Interceptor relationshipInterceptor, final InterceptorFactoryContext interceptorContext,  @TO@ voidMethodName:CmpEntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, Map<Method,Interceptor> methodInterceptors, final Interceptor relationshipInterceptor,  @AT@ 2129 @LENGTH@ 482
---DEL SingleVariableDeclaration@@final InterceptorFactoryContext interceptorContext @AT@ 2380 @LENGTH@ 50
------DEL Modifier@@final @AT@ 2380 @LENGTH@ 5
------DEL SimpleType@@InterceptorFactoryContext @AT@ 2386 @LENGTH@ 25
------DEL SimpleName@@interceptorContext @AT@ 2412 @LENGTH@ 18
---UPD SuperConstructorInvocation@@super(component,instanceReference,preDestroyInterceptor,methodInterceptors,interceptorContext);
 @TO@ super(component,instanceReference,preDestroyInterceptor,methodInterceptors);
 @AT@ 2442 @LENGTH@ 99
------DEL SimpleName@@interceptorContext @AT@ 2521 @LENGTH@ 18


UPD VariableDeclarationStatement@@InputStream is=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class); @TO@ InputStream is=exchange.getIn().getMandatoryBody(InputStream.class); @AT@ 1728 @LENGTH@ 80
---UPD VariableDeclarationFragment@@is=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ is=exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 1740 @LENGTH@ 67
------UPD MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 1745 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @AT@ 1700 @LENGTH@ 16
---------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 1745 @LENGTH@ 14
---------UPD SimpleName@@MethodName:getMandatoryInBody:[exchange, InputStream.class] @TO@ MethodName:getMandatoryBody:[InputStream.class] @AT@ 1760 @LENGTH@ 47
------------DEL SimpleName@@exchange @AT@ 1779 @LENGTH@ 8


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1637 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1637 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1647 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1655 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1671 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1671 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1677 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1694 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1713 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1720 @LENGTH@ 4


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1805 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1805 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1815 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1823 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1839 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1839 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1845 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1862 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1881 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1888 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:System.out.println("loopback = " + loopbackAddress) @TO@ MethodInvocation:System.out.println("loopback: " + loopbackInterface + " "+ loopbackAddress) @AT@ 2402 @LENGTH@ 52
---UPD MethodInvocation@@System.out.println("loopback = " + loopbackAddress) @TO@ System.out.println("loopback: " + loopbackInterface + " "+ loopbackAddress) @AT@ 2402 @LENGTH@ 51
------UPD SimpleName@@MethodName:println:["loopback = " + loopbackAddress] @TO@ MethodName:println:["loopback: " + loopbackInterface + " "+ loopbackAddress] @AT@ 2413 @LENGTH@ 40
---------UPD InfixExpression@@"loopback = " + loopbackAddress @TO@ "loopback: " + loopbackInterface + " "+ loopbackAddress @AT@ 2421 @LENGTH@ 31
------------UPD StringLiteral@@"loopback = " @TO@ "loopback: " @AT@ 2421 @LENGTH@ 13
------------INS SimpleName@@loopbackInterface @TO@ InfixExpression@@"loopback = " + loopbackAddress @AT@ 2436 @LENGTH@ 17
------------INS StringLiteral@@" " @TO@ InfixExpression@@"loopback = " + loopbackAddress @AT@ 2456 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:os.write(("E\n").getBytes()) @TO@ MethodInvocation:os.write("E\n".getBytes()) @AT@ 9618 @LENGTH@ 29
---UPD MethodInvocation@@os.write(("E\n").getBytes()) @TO@ os.write("E\n".getBytes()) @AT@ 9618 @LENGTH@ 28
------UPD SimpleName@@MethodName:write:[("E\n").getBytes()] @TO@ MethodName:write:["E\n".getBytes()] @AT@ 9621 @LENGTH@ 25
---------UPD MethodInvocation@@("E\n").getBytes() @TO@ "E\n".getBytes() @AT@ 9627 @LENGTH@ 18
------------DEL ParenthesizedExpression@@("E\n") @AT@ 9627 @LENGTH@ 7
---------------DEL StringLiteral@@"E\n" @AT@ 9628 @LENGTH@ 5
------------INS StringLiteral@@"E\n" @TO@ MethodInvocation@@("E\n").getBytes() @AT@ 9627 @LENGTH@ 5


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2122 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2276 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2311 @LENGTH@ 86
------INS MethodInvocation@@ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2311 @LENGTH@ 85
---------INS QualifiedName@@Name:ScheduledThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2311 @LENGTH@ 31
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2343 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2358 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2367 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2378 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2385 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2391 @LENGTH@ 4


UPD VariableDeclarationStatement@@String preEstablishedRedirectUri=element.getAttribute("preEstablished-redirect-uri"); @TO@ String preEstablishedRedirectUri=element.getAttribute("pre-established-redirect-uri"); @AT@ 3889 @LENGTH@ 87
---UPD VariableDeclarationFragment@@preEstablishedRedirectUri=element.getAttribute("preEstablished-redirect-uri") @TO@ preEstablishedRedirectUri=element.getAttribute("pre-established-redirect-uri") @AT@ 3896 @LENGTH@ 79
------UPD MethodInvocation@@element.getAttribute("preEstablished-redirect-uri") @TO@ element.getAttribute("pre-established-redirect-uri") @AT@ 3924 @LENGTH@ 51
---------UPD SimpleName@@MethodName:getAttribute:["preEstablished-redirect-uri"] @TO@ MethodName:getAttribute:["pre-established-redirect-uri"] @AT@ 3932 @LENGTH@ 43
------------UPD StringLiteral@@"preEstablished-redirect-uri" @TO@ "pre-established-redirect-uri" @AT@ 3945 @LENGTH@ 29


UPD IfStatement@@if (previousInvocationNodeName.equals("node-udp-0")) {  this.deployer.undeploy(DEPLOYMENT_1);  this.container.stop(CONTAINER_1);  container1Stopped=true;} else {  this.deployer.undeploy(DEPLOYMENT_2);  this.container.stop(CONTAINER_2);  container2Stopped=true;} @TO@ if (previousInvocationNodeName.equals(NODE_1)) {  this.deployer.undeploy(DEPLOYMENT_1);  this.container.stop(CONTAINER_1);  container1Stopped=true;} else {  this.deployer.undeploy(DEPLOYMENT_2);  this.container.stop(CONTAINER_2);  container2Stopped=true;} @AT@ 6709 @LENGTH@ 381
---UPD MethodInvocation@@previousInvocationNodeName.equals("node-udp-0") @TO@ previousInvocationNodeName.equals(NODE_1) @AT@ 6713 @LENGTH@ 47
------UPD SimpleName@@MethodName:equals:["node-udp-0"] @TO@ MethodName:equals:[NODE_1] @AT@ 6740 @LENGTH@ 20
---------INS SimpleName@@NODE_1 @TO@ SimpleName@@MethodName:equals:["node-udp-0"] @AT@ 5956 @LENGTH@ 6
---------DEL StringLiteral@@"node-udp-0" @AT@ 6747 @LENGTH@ 12


UPD MethodDeclaration@@RuntimeException, MethodName:viewNotFound, String viewClass, String ejbName,  @TO@ IllegalStateException, MethodName:viewNotFound, String viewClass, String ejbName,  @AT@ 20395 @LENGTH@ 47
---UPD SimpleType@@RuntimeException @TO@ IllegalStateException @AT@ 20378 @LENGTH@ 16


UPD MethodDeclaration@@public, voidMethodName:CxfRsSpringEndpoint, CamelContext context, AbstractJAXRSFactoryBean bean, Exception,  @TO@ public, voidMethodName:CxfRsSpringEndpoint, Component component, AbstractJAXRSFactoryBean bean, Exception,  @AT@ 1606 @LENGTH@ 175
---UPD SingleVariableDeclaration@@CamelContext context @TO@ Component component @AT@ 1633 @LENGTH@ 20
------UPD SimpleType@@CamelContext @TO@ Component @AT@ 1633 @LENGTH@ 12
------UPD SimpleName@@context @TO@ component @AT@ 1646 @LENGTH@ 7
---UPD SuperConstructorInvocation@@super(bean.getAddress(),context);
 @TO@ super(bean.getAddress(),component);
 @AT@ 1713 @LENGTH@ 34
------UPD SimpleName@@context @TO@ component @AT@ 1738 @LENGTH@ 7


UPD IfStatement@@if (!options.getJvmOpts().contains("-Xmx")) {  jvmOptsBuilder.append("-Xmx512m");} @TO@ if (options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx")) {  jvmOptsBuilder.append("-Xmx512m");} @AT@ 2758 @LENGTH@ 118
---INS InfixExpression@@options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx") @TO@ IfStatement@@if (!options.getJvmOpts().contains("-Xmx")) {  jvmOptsBuilder.append("-Xmx512m");} @AT@ 2762 @LENGTH@ 70
------MOV PrefixExpression@@!options.getJvmOpts().contains("-Xmx") @TO@ InfixExpression@@options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx") @AT@ 2762 @LENGTH@ 38
------INS InfixExpression@@options.getJvmOpts() == null @TO@ InfixExpression@@options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx") @AT@ 2762 @LENGTH@ 28
---------INS MethodInvocation@@options.getJvmOpts() @TO@ InfixExpression@@options.getJvmOpts() == null @AT@ 2762 @LENGTH@ 20
------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getJvmOpts() @AT@ 2762 @LENGTH@ 7
------------INS SimpleName@@MethodName:getJvmOpts:[] @TO@ MethodInvocation@@options.getJvmOpts() @AT@ 2770 @LENGTH@ 12
---------INS Operator@@== @TO@ InfixExpression@@options.getJvmOpts() == null @AT@ 2782 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@options.getJvmOpts() == null @AT@ 2786 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx") @AT@ 2790 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 4123 @LENGTH@ 1112
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 4182 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4182 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4188 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4195 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:hosts.registerReadWriteAttribute(Constants.DEFAULT_WEB_MODULE,null,new WriteAttributeHandlers.StringLengthValidatingHandler(1,true),Storage.CONFIGURATION) @TO@ MethodInvocation:hosts.registerReadWriteAttribute(Constants.DEFAULT_WEB_MODULE,null,WriteDefaultWebModule.INSTANCE,Storage.CONFIGURATION) @AT@ 10225 @LENGTH@ 159
---UPD MethodInvocation@@hosts.registerReadWriteAttribute(Constants.DEFAULT_WEB_MODULE,null,new WriteAttributeHandlers.StringLengthValidatingHandler(1,true),Storage.CONFIGURATION) @TO@ hosts.registerReadWriteAttribute(Constants.DEFAULT_WEB_MODULE,null,WriteDefaultWebModule.INSTANCE,Storage.CONFIGURATION) @AT@ 10225 @LENGTH@ 158
------UPD SimpleName@@MethodName:registerReadWriteAttribute:[Constants.DEFAULT_WEB_MODULE, null, new WriteAttributeHandlers.StringLengthValidatingHandler(1,true), Storage.CONFIGURATION] @TO@ MethodName:registerReadWriteAttribute:[Constants.DEFAULT_WEB_MODULE, null, WriteDefaultWebModule.INSTANCE, Storage.CONFIGURATION] @AT@ 10231 @LENGTH@ 152
---------INS QualifiedName@@WriteDefaultWebModule.INSTANCE @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[Constants.DEFAULT_WEB_MODULE, null, new WriteAttributeHandlers.StringLengthValidatingHandler(1,true), Storage.CONFIGURATION] @AT@ 10286 @LENGTH@ 30
------------INS SimpleName@@WriteDefaultWebModule @TO@ QualifiedName@@WriteDefaultWebModule.INSTANCE @AT@ 10286 @LENGTH@ 21
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@WriteDefaultWebModule.INSTANCE @AT@ 10308 @LENGTH@ 8
---------DEL ClassInstanceCreation@@WriteAttributeHandlers.StringLengthValidatingHandler[1, true] @AT@ 10294 @LENGTH@ 65
------------DEL New@@new @AT@ 10294 @LENGTH@ 3
------------DEL SimpleType@@WriteAttributeHandlers.StringLengthValidatingHandler @AT@ 10298 @LENGTH@ 52
------------DEL NumberLiteral@@1 @AT@ 10351 @LENGTH@ 1
------------DEL BooleanLiteral@@true @AT@ 10354 @LENGTH@ 4


UPD CatchClause@@catch (NoTypeConversionAvailableException e) {} @TO@ catch (TypeConversionException e) {} @AT@ 1897 @LENGTH@ 80
---UPD SingleVariableDeclaration@@NoTypeConversionAvailableException e @TO@ TypeConversionException e @AT@ 1904 @LENGTH@ 36
------UPD SimpleType@@NoTypeConversionAvailableException @TO@ TypeConversionException @AT@ 1904 @LENGTH@ 34


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1948 @LENGTH@ 167
---DEL Modifier@@protected @AT@ 1948 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1958 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1966 @LENGTH@ 15
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 1982 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 1982 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1999 @LENGTH@ 7
---DEL ReturnStatement@@InfixExpression:context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2018 @LENGTH@ 91
------DEL InfixExpression@@context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2025 @LENGTH@ 83
---------DEL MethodInvocation@@context.isNormalServer() @AT@ 2025 @LENGTH@ 24
------------DEL SimpleName@@Name:context @AT@ 2025 @LENGTH@ 7
------------DEL SimpleName@@MethodName:isNormalServer:[] @AT@ 2033 @LENGTH@ 16
---------DEL Operator@@|| @AT@ 2049 @LENGTH@ 2
---------DEL InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2053 @LENGTH@ 55
------------DEL MethodInvocation@@context.getProcessType() @AT@ 2053 @LENGTH@ 24
---------------DEL SimpleName@@Name:context @AT@ 2053 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getProcessType:[] @AT@ 2061 @LENGTH@ 16
------------DEL Operator@@== @AT@ 2077 @LENGTH@ 2
------------DEL QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 2081 @LENGTH@ 27
---------------DEL SimpleName@@ProcessType @AT@ 2081 @LENGTH@ 11
---------------DEL SimpleName@@HOST_CONTROLLER @AT@ 2093 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertEquals(null,SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class)) @TO@ MethodInvocation:SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class) @AT@ 2002 @LENGTH@ 96


UPD SuperConstructorInvocation@@super("Insufficent permission for this operation.");
 @TO@ super("Insufficient permission for this operation.");
 @AT@ 1136 @LENGTH@ 52
---UPD StringLiteral@@"Insufficent permission for this operation." @TO@ "Insufficient permission for this operation." @AT@ 1142 @LENGTH@ 44


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]ToStringTypeConverter, [TypeConverter] @AT@ 2916 @LENGTH@ 186
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2916 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2927 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2929 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2942 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2942 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2942 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2948 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2951 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2957 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2957 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2964 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2981 @LENGTH@ 115
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2999 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3006 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3006 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3016 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3022 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 3040 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3047 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3047 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3057 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3074 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3081 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).set(entry.getKey(),entry.getValue()) @TO@ MethodInvocation:addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).add(entry.getKey(),entry.getValue()) @AT@ 3537 @LENGTH@ 101
---UPD MethodInvocation@@addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).set(entry.getKey(),entry.getValue()) @TO@ addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).add(entry.getKey(),entry.getValue()) @AT@ 3537 @LENGTH@ 100
------UPD SimpleName@@MethodName:set:[entry.getKey(), entry.getValue()] @TO@ MethodName:add:[entry.getKey(), entry.getValue()] @AT@ 3600 @LENGTH@ 37


DEL IfStatement@@if (endpoint != null) {  if (!uri.getScheme().equals("remote")) {    throw MESSAGES.invalidUrl("remote");  }} else {  if (!uriScheme.equals(uri.getScheme())) {    throw MESSAGES.unmatchedScheme(uriScheme,uri);  }} @AT@ 9574 @LENGTH@ 404
---DEL InfixExpression@@endpoint != null @AT@ 9578 @LENGTH@ 16
------DEL SimpleName@@endpoint @AT@ 9578 @LENGTH@ 8
------DEL Operator@@!= @AT@ 9586 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 9590 @LENGTH@ 4
---DEL Block@@ThenBody:{  if (!uri.getScheme().equals("remote")) {    throw MESSAGES.invalidUrl("remote");  }} @AT@ 9595 @LENGTH@ 218
------DEL IfStatement@@if (!uri.getScheme().equals("remote")) {  throw MESSAGES.invalidUrl("remote");} @AT@ 9684 @LENGTH@ 115
---------DEL PrefixExpression@@!uri.getScheme().equals("remote") @AT@ 9688 @LENGTH@ 33
------------DEL Operator@@! @AT@ 9688 @LENGTH@ 1
------------DEL MethodInvocation@@uri.getScheme().equals("remote") @AT@ 9689 @LENGTH@ 32
---------------DEL MethodInvocation@@MethodName:getScheme:[] @AT@ 9689 @LENGTH@ 15
---------------DEL SimpleName@@Name:uri @AT@ 9689 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:equals:["remote"] @AT@ 9705 @LENGTH@ 16
------------------DEL StringLiteral@@"remote" @AT@ 9712 @LENGTH@ 8
---------DEL Block@@ThenBody:{  throw MESSAGES.invalidUrl("remote");} @AT@ 9723 @LENGTH@ 76
------------DEL ThrowStatement@@MethodInvocation:MESSAGES.invalidUrl("remote") @AT@ 9745 @LENGTH@ 36
---------------DEL MethodInvocation@@MESSAGES.invalidUrl("remote") @AT@ 9751 @LENGTH@ 29
------------------DEL SimpleName@@Name:MESSAGES @AT@ 9751 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:invalidUrl:["remote"] @AT@ 9760 @LENGTH@ 20
---------------------DEL StringLiteral@@"remote" @AT@ 9771 @LENGTH@ 8
---DEL Block@@ElseBody:{  if (!uriScheme.equals(uri.getScheme())) {    throw MESSAGES.unmatchedScheme(uriScheme,uri);  }} @AT@ 9819 @LENGTH@ 159
------DEL IfStatement@@if (!uriScheme.equals(uri.getScheme())) {  throw MESSAGES.unmatchedScheme(uriScheme,uri);} @AT@ 9837 @LENGTH@ 127
---------DEL PrefixExpression@@!uriScheme.equals(uri.getScheme()) @AT@ 9841 @LENGTH@ 34
------------DEL Operator@@! @AT@ 9841 @LENGTH@ 1
------------DEL MethodInvocation@@uriScheme.equals(uri.getScheme()) @AT@ 9842 @LENGTH@ 33
---------------DEL SimpleName@@Name:uriScheme @AT@ 9842 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:equals:[uri.getScheme()] @AT@ 9852 @LENGTH@ 23
------------------DEL MethodInvocation@@uri.getScheme() @AT@ 9859 @LENGTH@ 15
---------------------DEL SimpleName@@Name:uri @AT@ 9859 @LENGTH@ 3
---------------------DEL SimpleName@@MethodName:getScheme:[] @AT@ 9863 @LENGTH@ 11
---------DEL Block@@ThenBody:{  throw MESSAGES.unmatchedScheme(uriScheme,uri);} @AT@ 9877 @LENGTH@ 87
------------DEL ThrowStatement@@MethodInvocation:MESSAGES.unmatchedScheme(uriScheme,uri) @AT@ 9899 @LENGTH@ 47
---------------DEL MethodInvocation@@MESSAGES.unmatchedScheme(uriScheme,uri) @AT@ 9905 @LENGTH@ 40
------------------DEL SimpleName@@Name:MESSAGES @AT@ 9905 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:unmatchedScheme:[uriScheme, uri] @AT@ 9914 @LENGTH@ 31
---------------------DEL SimpleName@@uriScheme @AT@ 9930 @LENGTH@ 9
---------------------DEL SimpleName@@uri @AT@ 9941 @LENGTH@ 3


UPD TryStatement@@try {  return context.proceed();}  finally {  instance.setRemoved(true);} @TO@ try {  return context.proceed();}  finally {  instance.setRemoved(true);  instance.removeAllTimers();} @AT@ 2095 @LENGTH@ 112
---UPD Block@@FinallyBody:{  instance.setRemoved(true);} @TO@ FinallyBody:{  instance.setRemoved(true);  instance.removeAllTimers();} @AT@ 2157 @LENGTH@ 50
------INS ExpressionStatement@@MethodInvocation:instance.removeAllTimers() @TO@ Block@@FinallyBody:{  instance.setRemoved(true);} @AT@ 2210 @LENGTH@ 27
---------INS MethodInvocation@@instance.removeAllTimers() @TO@ ExpressionStatement@@MethodInvocation:instance.removeAllTimers() @AT@ 2210 @LENGTH@ 26
------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.removeAllTimers() @AT@ 2210 @LENGTH@ 8
------------INS SimpleName@@MethodName:removeAllTimers:[] @TO@ MethodInvocation@@instance.removeAllTimers() @AT@ 2219 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2305 @LENGTH@ 182
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2364 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2364 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2370 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2377 @LENGTH@ 11


MOV MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model,  @TO@ TypeDeclaration@@[public]RootLoggerRemove, AbstractRemoveStepHandler @AT@ 1846 @LENGTH@ 156


INS MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @TO@ TypeDeclaration@@[public]ManagementRequestContext,  @AT@ 2370 @LENGTH@ 57
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2365 @LENGTH@ 4
---INS SimpleName@@MethodName:executeAsync @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2370 @LENGTH@ 12
---INS SingleVariableDeclaration@@final AsyncTask<A> task @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2383 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2383 @LENGTH@ 5
------INS ParameterizedType@@AsyncTask<A> @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2389 @LENGTH@ 12
---------INS SimpleType@@AsyncTask @TO@ ParameterizedType@@AsyncTask<A> @AT@ 2389 @LENGTH@ 9
---------INS SimpleType@@A @TO@ ParameterizedType@@AsyncTask<A> @AT@ 2399 @LENGTH@ 1
------INS SimpleName@@task @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2402 @LENGTH@ 4
---INS SingleVariableDeclaration@@Executor executor @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2408 @LENGTH@ 17
------INS SimpleType@@Executor @TO@ SingleVariableDeclaration@@Executor executor @AT@ 2408 @LENGTH@ 8
------INS SimpleName@@executor @TO@ SingleVariableDeclaration@@Executor executor @AT@ 2417 @LENGTH@ 8


UPD ExpressionStatement@@ClassInstanceCreation:new MagicNumberFileFilter(new byte[]{0},0) @TO@ ClassInstanceCreation:new MagicNumberFileFilter(new byte[]{0},-1) @AT@ 45731 @LENGTH@ 44
---UPD ClassInstanceCreation@@MagicNumberFileFilter[new byte[]{0}, 0] @TO@ MagicNumberFileFilter[new byte[]{0}, -1] @AT@ 45731 @LENGTH@ 43
------INS PrefixExpression@@-1 @TO@ ClassInstanceCreation@@MagicNumberFileFilter[new byte[]{0}, 0] @AT@ 45772 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 45772 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 45773 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 45772 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:endpoint=new QuickfixjEndpoint(engine,uri,getCamelContext()) @TO@ Assignment:endpoint=new QuickfixjEndpoint(engine,uri,this) @AT@ 3230 @LENGTH@ 65
---UPD Assignment@@endpoint=new QuickfixjEndpoint(engine,uri,getCamelContext()) @TO@ endpoint=new QuickfixjEndpoint(engine,uri,this) @AT@ 3230 @LENGTH@ 64
------UPD ClassInstanceCreation@@QuickfixjEndpoint[engine, uri, getCamelContext()] @TO@ QuickfixjEndpoint[engine, uri, this] @AT@ 3241 @LENGTH@ 53
---------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 3276 @LENGTH@ 17
---------INS ThisExpression@@this @TO@ ClassInstanceCreation@@QuickfixjEndpoint[engine, uri, getCamelContext()] @AT@ 3276 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:log.warn("We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!") @TO@ MethodInvocation:ControllerLogger.ROOT_LOGGER.transformerNotFound(subsystemName,major,minor) @AT@ 3204 @LENGTH@ 126
---UPD MethodInvocation@@log.warn("We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!") @TO@ ControllerLogger.ROOT_LOGGER.transformerNotFound(subsystemName,major,minor) @AT@ 3204 @LENGTH@ 125
------INS QualifiedName@@Name:ControllerLogger.ROOT_LOGGER @TO@ MethodInvocation@@log.warn("We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!") @AT@ 3169 @LENGTH@ 28
------DEL SimpleName@@Name:log @AT@ 3204 @LENGTH@ 3
------UPD SimpleName@@MethodName:warn:["We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!"] @TO@ MethodName:transformerNotFound:[subsystemName, major, minor] @AT@ 3208 @LENGTH@ 121
---------DEL InfixExpression@@"We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!" @AT@ 3213 @LENGTH@ 115
------------DEL StringLiteral@@"We have no transformer for subsystem: " @AT@ 3213 @LENGTH@ 40
------------DEL Operator@@+ @AT@ 3253 @LENGTH@ 1
------------DEL SimpleName@@subsystemName @AT@ 3256 @LENGTH@ 13
------------DEL StringLiteral@@"-" @AT@ 3272 @LENGTH@ 3
------------DEL SimpleName@@major @AT@ 3278 @LENGTH@ 5
------------DEL StringLiteral@@"." @AT@ 3286 @LENGTH@ 3
------------DEL SimpleName@@minor @AT@ 3292 @LENGTH@ 5
------------DEL StringLiteral@@" model transfer can break!" @AT@ 3300 @LENGTH@ 28
---------INS SimpleName@@subsystemName @TO@ SimpleName@@MethodName:warn:["We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!"] @AT@ 3218 @LENGTH@ 13
---------INS SimpleName@@major @TO@ SimpleName@@MethodName:warn:["We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!"] @AT@ 3233 @LENGTH@ 5
---------INS SimpleName@@minor @TO@ SimpleName@@MethodName:warn:["We have no transformer for subsystem: " + subsystemName + "-"+ major+ "."+ minor+ " model transfer can break!"] @AT@ 3240 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello,World",order2) @TO@ MethodInvocation:assertEquals("B",order2) @AT@ 2709 @LENGTH@ 36
---UPD MethodInvocation@@assertEquals("Hello,World",order2) @TO@ assertEquals("B",order2) @AT@ 2709 @LENGTH@ 35
------UPD SimpleName@@MethodName:assertEquals:["Hello,World", order2] @TO@ MethodName:assertEquals:["B", order2] @AT@ 2709 @LENGTH@ 35
---------UPD StringLiteral@@"Hello,World" @TO@ "B" @AT@ 2722 @LENGTH@ 13


UPD VariableDeclarationStatement@@final Interceptor interceptor=new StatefulSessionSynchronizationInterceptor(); @TO@ final Interceptor interceptor=new StatefulSessionSynchronizationInterceptor(true); @AT@ 2679 @LENGTH@ 80
---UPD VariableDeclarationFragment@@interceptor=new StatefulSessionSynchronizationInterceptor() @TO@ interceptor=new StatefulSessionSynchronizationInterceptor(true) @AT@ 2697 @LENGTH@ 61
------UPD ClassInstanceCreation@@StatefulSessionSynchronizationInterceptor[] @TO@ StatefulSessionSynchronizationInterceptor[true] @AT@ 2711 @LENGTH@ 47
---------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@StatefulSessionSynchronizationInterceptor[] @AT@ 2757 @LENGTH@ 4


UPD IfStatement@@if (!isEmpty(beanName)) {  valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName);} else {  valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName);} @TO@ if (!isEmpty(beanName)) {  valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName,deploymentUnit);} else {  valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName,deploymentUnit);} @AT@ 9605 @LENGTH@ 270
---UPD Block@@ThenBody:{  valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName);} @TO@ ThenBody:{  valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName,deploymentUnit);} @AT@ 9629 @LENGTH@ 125
------UPD ExpressionStatement@@Assignment:valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName) @TO@ Assignment:valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName,deploymentUnit) @AT@ 9643 @LENGTH@ 101
---------UPD Assignment@@valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName) @TO@ valueSource=ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName,deploymentUnit) @AT@ 9643 @LENGTH@ 100
------------UPD Assignment@@ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName) @TO@ ejbInjectionSource=new EjbInjectionSource(beanName,beanInterface,localContextName,deploymentUnit) @AT@ 9657 @LENGTH@ 86
---------------UPD ClassInstanceCreation@@EjbInjectionSource[beanName, beanInterface, localContextName] @TO@ EjbInjectionSource[beanName, beanInterface, localContextName, deploymentUnit] @AT@ 9678 @LENGTH@ 65
------------------INS SimpleName@@deploymentUnit @TO@ ClassInstanceCreation@@EjbInjectionSource[beanName, beanInterface, localContextName] @AT@ 9744 @LENGTH@ 14
---UPD Block@@ElseBody:{  valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName);} @TO@ ElseBody:{  valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName,deploymentUnit);} @AT@ 9760 @LENGTH@ 115
------UPD ExpressionStatement@@Assignment:valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName) @TO@ Assignment:valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName,deploymentUnit) @AT@ 9774 @LENGTH@ 91
---------UPD Assignment@@valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName) @TO@ valueSource=ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName,deploymentUnit) @AT@ 9774 @LENGTH@ 90
------------UPD Assignment@@ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName) @TO@ ejbInjectionSource=new EjbInjectionSource(beanInterface,localContextName,deploymentUnit) @AT@ 9788 @LENGTH@ 76
---------------UPD ClassInstanceCreation@@EjbInjectionSource[beanInterface, localContextName] @TO@ EjbInjectionSource[beanInterface, localContextName, deploymentUnit] @AT@ 9809 @LENGTH@ 55
------------------INS SimpleName@@deploymentUnit @TO@ ClassInstanceCreation@@EjbInjectionSource[beanInterface, localContextName] @AT@ 9881 @LENGTH@ 14


INS MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @TO@ TypeDeclaration@@[public, final]ManagementChannelHandler, AbstractMessageHandler[ManagementChannelAssociation] @AT@ 3270 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3270 @LENGTH@ 6
---INS PrimitiveType@@long @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3277 @LENGTH@ 4
---INS SimpleName@@MethodName:getLastMessageReceivedTime @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3282 @LENGTH@ 26
---INS ReturnStatement@@MethodInvocation:receiver.getLastMessageTime() @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3321 @LENGTH@ 37
------INS MethodInvocation@@receiver.getLastMessageTime() @TO@ ReturnStatement@@MethodInvocation:receiver.getLastMessageTime() @AT@ 3328 @LENGTH@ 29
---------INS SimpleName@@Name:receiver @TO@ MethodInvocation@@receiver.getLastMessageTime() @AT@ 3328 @LENGTH@ 8
---------INS SimpleName@@MethodName:getLastMessageTime:[] @TO@ MethodInvocation@@receiver.getLastMessageTime() @AT@ 3337 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:context.isNormalServer() @TO@ BooleanLiteral:true @AT@ 7335 @LENGTH@ 32
---DEL MethodInvocation@@context.isNormalServer() @AT@ 7342 @LENGTH@ 24
------DEL SimpleName@@Name:context @AT@ 7342 @LENGTH@ 7
------DEL SimpleName@@MethodName:isNormalServer:[] @AT@ 7350 @LENGTH@ 16
---INS BooleanLiteral@@true @TO@ ReturnStatement@@MethodInvocation:context.isNormalServer() @AT@ 7342 @LENGTH@ 4


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PromptNewUserState, ConsoleWrapper theConsole, final StateValues stateValues,  @AT@ 2093 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2097 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2097 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2097 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2108 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2120 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2124 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2130 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2144 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2150 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2150 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2159 @LENGTH@ 20


UPD ReturnStatement@@ClassInstanceCreation:new DistributedCacheManager<T>(manager,new AtomicMapCache<String,Object,Object>(sessionCache),jvmRouteRegistry,this.lockManager.getOptionalValue(),storage,batchingManager,this.invoker) @TO@ ClassInstanceCreation:new DistributedCacheManager<T>(manager,new AtomicMapCache<String,Object,Object>(sessionCache),jvmRouteRegistry,this.lockManager.getOptionalValue(),storage,batchingManager,this.invoker,this.affinityFactory) @AT@ 5936 @LENGTH@ 200
---UPD ClassInstanceCreation@@DistributedCacheManager<T>[manager, new AtomicMapCache<String,Object,Object>(sessionCache), jvmRouteRegistry, this.lockManager.getOptionalValue(), storage, batchingManager, this.invoker] @TO@ DistributedCacheManager<T>[manager, new AtomicMapCache<String,Object,Object>(sessionCache), jvmRouteRegistry, this.lockManager.getOptionalValue(), storage, batchingManager, this.invoker, this.affinityFactory] @AT@ 5943 @LENGTH@ 192
------INS FieldAccess@@this.affinityFactory @TO@ ClassInstanceCreation@@DistributedCacheManager<T>[manager, new AtomicMapCache<String,Object,Object>(sessionCache), jvmRouteRegistry, this.lockManager.getOptionalValue(), storage, batchingManager, this.invoker] @AT@ 6469 @LENGTH@ 20
---------INS ThisExpression@@this @TO@ FieldAccess@@this.affinityFactory @AT@ 6469 @LENGTH@ 4
---------INS SimpleName@@affinityFactory @TO@ FieldAccess@@this.affinityFactory @AT@ 6474 @LENGTH@ 15


UPD MethodDeclaration@@public, Cache<K,V>, MethodName:createCache, String beanName, StatefulObjectFactory<V> factory, PassivationManager<K,V> passivationManager, StatefulTimeoutInfo timeout,  @TO@ public, Cache<K,V>, MethodName:createCache, String beanName, IdentifierFactory<K> identifierFactory, StatefulObjectFactory<V> factory, PassivationManager<K,V> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 2246 @LENGTH@ 433
---INS SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @TO@ MethodDeclaration@@public, Cache<K,V>, MethodName:createCache, String beanName, StatefulObjectFactory<V> factory, PassivationManager<K,V> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 2344 @LENGTH@ 38
------INS ParameterizedType@@IdentifierFactory<K> @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 2344 @LENGTH@ 20
---------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2344 @LENGTH@ 17
---------INS SimpleType@@K @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2362 @LENGTH@ 1
------INS SimpleName@@identifierFactory @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 2365 @LENGTH@ 17
---UPD VariableDeclarationStatement@@NonPassivatingBackingCacheImpl<K,V> backingCache=new NonPassivatingBackingCacheImpl<K,V>(factory,Executors.defaultThreadFactory(),timeout,this.environment); @TO@ NonPassivatingBackingCacheImpl<K,V> backingCache=new NonPassivatingBackingCacheImpl<K,V>(identifierFactory,factory,Executors.defaultThreadFactory(),timeout,this.environment); @AT@ 2412 @LENGTH@ 163
------UPD VariableDeclarationFragment@@backingCache=new NonPassivatingBackingCacheImpl<K,V>(factory,Executors.defaultThreadFactory(),timeout,this.environment) @TO@ backingCache=new NonPassivatingBackingCacheImpl<K,V>(identifierFactory,factory,Executors.defaultThreadFactory(),timeout,this.environment) @AT@ 2449 @LENGTH@ 125
---------UPD ClassInstanceCreation@@NonPassivatingBackingCacheImpl<K,V>[factory, Executors.defaultThreadFactory(), timeout, this.environment] @TO@ NonPassivatingBackingCacheImpl<K,V>[identifierFactory, factory, Executors.defaultThreadFactory(), timeout, this.environment] @AT@ 2464 @LENGTH@ 110
------------INS SimpleName@@identifierFactory @TO@ ClassInstanceCreation@@NonPassivatingBackingCacheImpl<K,V>[factory, Executors.defaultThreadFactory(), timeout, this.environment] @AT@ 2595 @LENGTH@ 17


UPD ReturnStatement@@ClassInstanceCreation:new ErrorState(null,MESSAGES.passwordMisMatch(),this) @TO@ ClassInstanceCreation:new ErrorState(theConsole,MESSAGES.passwordMisMatch(),this) @AT@ 2719 @LENGTH@ 63
---UPD ClassInstanceCreation@@ErrorState[null, MESSAGES.passwordMisMatch(), this] @TO@ ErrorState[theConsole, MESSAGES.passwordMisMatch(), this] @AT@ 2726 @LENGTH@ 55
------DEL NullLiteral@@null @AT@ 2741 @LENGTH@ 4
------INS SimpleName@@theConsole @TO@ ClassInstanceCreation@@ErrorState[null, MESSAGES.passwordMisMatch(), this] @AT@ 2847 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:op.get(REPLY_PROPERTIES,TYPE).set(ModelType.STRING) @TO@ MethodDeclaration@@static, ModelNode, MethodName:getExportNativeConfigurationDescription, Locale locale,  @AT@ 10858 @LENGTH@ 53
---INS MethodInvocation@@op.get(REPLY_PROPERTIES,TYPE).set(ModelType.STRING) @TO@ ExpressionStatement@@MethodInvocation:op.get(REPLY_PROPERTIES,TYPE).set(ModelType.STRING) @AT@ 10858 @LENGTH@ 52
------INS MethodInvocation@@MethodName:get:[REPLY_PROPERTIES, TYPE] @TO@ MethodInvocation@@op.get(REPLY_PROPERTIES,TYPE).set(ModelType.STRING) @AT@ 10858 @LENGTH@ 30
---------INS SimpleName@@REPLY_PROPERTIES @TO@ MethodInvocation@@MethodName:get:[REPLY_PROPERTIES, TYPE] @AT@ 10865 @LENGTH@ 16
---------INS SimpleName@@TYPE @TO@ MethodInvocation@@MethodName:get:[REPLY_PROPERTIES, TYPE] @AT@ 10883 @LENGTH@ 4
------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.get(REPLY_PROPERTIES,TYPE).set(ModelType.STRING) @AT@ 10858 @LENGTH@ 2
------INS SimpleName@@MethodName:set:[ModelType.STRING] @TO@ MethodInvocation@@op.get(REPLY_PROPERTIES,TYPE).set(ModelType.STRING) @AT@ 10889 @LENGTH@ 21
---------INS QualifiedName@@ModelType.STRING @TO@ SimpleName@@MethodName:set:[ModelType.STRING] @AT@ 10893 @LENGTH@ 16
------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 10893 @LENGTH@ 9
------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 10903 @LENGTH@ 6


UPD VariableDeclarationStatement@@byte[] decoded=Base64Encoder.decode(encoded).getBytes(macRomanCharSet); @TO@ byte[] decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet); @AT@ 18156 @LENGTH@ 73
---UPD VariableDeclarationFragment@@decoded=Base64Encoder.decode(encoded).getBytes(macRomanCharSet) @TO@ decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet) @AT@ 18163 @LENGTH@ 65
------UPD MethodInvocation@@Base64Encoder.decode(encoded).getBytes(macRomanCharSet) @TO@ Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet) @AT@ 18173 @LENGTH@ 55
---------UPD SimpleName@@MethodName:getBytes:[macRomanCharSet] @TO@ MethodName:getBytes:[Base64Encoder.macRomanCharSet] @AT@ 18203 @LENGTH@ 25
------------INS QualifiedName@@Base64Encoder.macRomanCharSet @TO@ SimpleName@@MethodName:getBytes:[macRomanCharSet] @AT@ 18133 @LENGTH@ 29
---------------INS SimpleName@@Base64Encoder @TO@ QualifiedName@@Base64Encoder.macRomanCharSet @AT@ 18133 @LENGTH@ 13
---------------INS SimpleName@@macRomanCharSet @TO@ QualifiedName@@Base64Encoder.macRomanCharSet @AT@ 18147 @LENGTH@ 15
------------DEL SimpleName@@macRomanCharSet @AT@ 18212 @LENGTH@ 15


UPD VariableDeclarationStatement@@List<ModelNode> stacks=node.get(LOGIN_MODULE_STACK).asList(); @TO@ List<Property> stacks=node.get(LOGIN_MODULE_STACK).asPropertyList(); @AT@ 15911 @LENGTH@ 64
---UPD ParameterizedType@@List<ModelNode> @TO@ List<Property> @AT@ 15911 @LENGTH@ 16
------UPD SimpleType@@ModelNode @TO@ Property @AT@ 15917 @LENGTH@ 9
---UPD VariableDeclarationFragment@@stacks=node.get(LOGIN_MODULE_STACK).asList() @TO@ stacks=node.get(LOGIN_MODULE_STACK).asPropertyList() @AT@ 15928 @LENGTH@ 46
------UPD MethodInvocation@@node.get(LOGIN_MODULE_STACK).asList() @TO@ node.get(LOGIN_MODULE_STACK).asPropertyList() @AT@ 15937 @LENGTH@ 37
---------UPD SimpleName@@MethodName:asList:[] @TO@ MethodName:asPropertyList:[] @AT@ 15966 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:ExtensionContextImpl.this.registerSubsystem(name) @TO@ MethodInvocation:ExtensionContextImpl.this.doRegisterSubsystem(name) @AT@ 19578 @LENGTH@ 57
---UPD MethodInvocation@@ExtensionContextImpl.this.registerSubsystem(name) @TO@ ExtensionContextImpl.this.doRegisterSubsystem(name) @AT@ 19585 @LENGTH@ 49
------UPD SimpleName@@MethodName:registerSubsystem:[name] @TO@ MethodName:doRegisterSubsystem:[name] @AT@ 19611 @LENGTH@ 23


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 5520 @LENGTH@ 91
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 5582 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 5582 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 5588 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 5595 @LENGTH@ 11


UPD VariableDeclarationStatement@@final StandardAnalyzer analyzer=new StandardAnalyzer(Version.LUCENE_30); @TO@ final StandardAnalyzer analyzer=new StandardAnalyzer(Version.LUCENE_35); @AT@ 2201 @LENGTH@ 74
---UPD VariableDeclarationFragment@@analyzer=new StandardAnalyzer(Version.LUCENE_30) @TO@ analyzer=new StandardAnalyzer(Version.LUCENE_35) @AT@ 2224 @LENGTH@ 50
------UPD ClassInstanceCreation@@StandardAnalyzer[Version.LUCENE_30] @TO@ StandardAnalyzer[Version.LUCENE_35] @AT@ 2235 @LENGTH@ 39
---------UPD QualifiedName@@Version.LUCENE_30 @TO@ Version.LUCENE_35 @AT@ 2256 @LENGTH@ 17
------------UPD SimpleName@@LUCENE_30 @TO@ LUCENE_35 @AT@ 2264 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:endpoint.getClientToken(parameters) @TO@ ClassInstanceCreation:new AuthorizationRequest(parameters) @AT@ 2629 @LENGTH@ 43
---INS ClassInstanceCreation@@AuthorizationRequest[parameters] @TO@ ReturnStatement@@MethodInvocation:endpoint.getClientToken(parameters) @AT@ 2636 @LENGTH@ 36
------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest[parameters] @AT@ 2636 @LENGTH@ 3
------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest[parameters] @AT@ 2640 @LENGTH@ 20
------INS SimpleName@@parameters @TO@ ClassInstanceCreation@@AuthorizationRequest[parameters] @AT@ 2661 @LENGTH@ 10
---DEL MethodInvocation@@endpoint.getClientToken(parameters) @AT@ 2636 @LENGTH@ 35
------DEL SimpleName@@Name:endpoint @AT@ 2636 @LENGTH@ 8
------DEL SimpleName@@MethodName:getClientToken:[parameters] @AT@ 2645 @LENGTH@ 26
---------DEL SimpleName@@parameters @AT@ 2660 @LENGTH@ 10


DEL MethodDeclaration@@String, MethodName:subjectAssociationFilter,  @AT@ 5922 @LENGTH@ 27
---DEL SimpleType@@String @AT@ 5915 @LENGTH@ 6
---DEL SimpleName@@MethodName:subjectAssociationFilter @AT@ 5922 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:context.removeService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queue.getName())) @TO@ MethodInvocation:context.removeService(MessagingServices.getQueueBaseServiceName(hqServiceName).append(queue.getName())) @AT@ 4033 @LENGTH@ 126
---UPD MethodInvocation@@context.removeService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queue.getName())) @TO@ context.removeService(MessagingServices.getQueueBaseServiceName(hqServiceName).append(queue.getName())) @AT@ 4033 @LENGTH@ 125
------UPD SimpleName@@MethodName:removeService:[hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queue.getName())] @TO@ MethodName:removeService:[MessagingServices.getQueueBaseServiceName(hqServiceName).append(queue.getName())] @AT@ 4041 @LENGTH@ 117
---------UPD MethodInvocation@@hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queue.getName()) @TO@ MessagingServices.getQueueBaseServiceName(hqServiceName).append(queue.getName()) @AT@ 4055 @LENGTH@ 102
------------UPD MethodInvocation@@MethodName:append:[MessagingServices.getQueueBaseServiceName(hqServiceName)] @TO@ MethodName:getQueueBaseServiceName:[hqServiceName] @AT@ 4055 @LENGTH@ 78
---------------INS SimpleName@@hqServiceName @TO@ MethodInvocation@@MethodName:append:[MessagingServices.getQueueBaseServiceName(hqServiceName)] @AT@ 4075 @LENGTH@ 13
---------------DEL MethodInvocation@@MessagingServices.getQueueBaseServiceName(hqServiceName) @AT@ 4076 @LENGTH@ 56
------------------DEL SimpleName@@Name:MessagingServices @AT@ 4076 @LENGTH@ 17
------------------DEL SimpleName@@MethodName:getQueueBaseServiceName:[hqServiceName] @AT@ 4094 @LENGTH@ 38
---------------------DEL SimpleName@@hqServiceName @AT@ 4118 @LENGTH@ 13
------------UPD SimpleName@@Name:hqServiceName @TO@ Name:MessagingServices @AT@ 4055 @LENGTH@ 13


DEL ExpressionStatement@@MethodInvocation:this.converters.add(UUIDToBinaryConverter.INSTANCE) @AT@ 4425 @LENGTH@ 52
---DEL MethodInvocation@@this.converters.add(UUIDToBinaryConverter.INSTANCE) @AT@ 4425 @LENGTH@ 51
------DEL FieldAccess@@this.converters @AT@ 4425 @LENGTH@ 15
---------DEL ThisExpression@@this @AT@ 4425 @LENGTH@ 4
---------DEL SimpleName@@converters @AT@ 4430 @LENGTH@ 10
------DEL SimpleName@@MethodName:add:[UUIDToBinaryConverter.INSTANCE] @AT@ 4441 @LENGTH@ 35
---------DEL QualifiedName@@UUIDToBinaryConverter.INSTANCE @AT@ 4445 @LENGTH@ 30
------------DEL SimpleName@@UUIDToBinaryConverter @AT@ 4445 @LENGTH@ 21
------------DEL SimpleName@@INSTANCE @AT@ 4467 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3548 @LENGTH@ 394
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3636 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3636 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3642 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3649 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:System.err.println(executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @TO@ MethodInvocation:System.err.println(executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @AT@ 5174 @LENGTH@ 238
---UPD MethodInvocation@@System.err.println(executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @TO@ System.err.println(executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @AT@ 5174 @LENGTH@ 237
------UPD SimpleName@@MethodName:println:[executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)] @TO@ MethodName:println:[executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)] @AT@ 5185 @LENGTH@ 226
---------UPD MethodInvocation@@executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false) @TO@ executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false) @AT@ 5193 @LENGTH@ 217
------------UPD SimpleName@@MethodName:executeCommand:[String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user), 10 * 60000L, false] @TO@ MethodName:executeCommand:[String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user), 10 * 60000L, false] @AT@ 5193 @LENGTH@ 217
---------------UPD MethodInvocation@@String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user) @TO@ String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user) @AT@ 5208 @LENGTH@ 181
------------------UPD SimpleName@@MethodName:format:["fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1", image, location, group, user] @TO@ MethodName:format:["fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1", image, location, group, user] @AT@ 5215 @LENGTH@ 174
---------------------UPD StringLiteral@@"fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1" @TO@ "fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1" @AT@ 5222 @LENGTH@ 136


UPD ExpressionStatement@@MethodInvocation:parseDeployments(reader,address,namespace,list,true) @TO@ MethodInvocation:parseDeployments(reader,address,namespace,list,EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED),EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED)) @AT@ 15411 @LENGTH@ 57
---UPD MethodInvocation@@parseDeployments(reader,address,namespace,list,true) @TO@ parseDeployments(reader,address,namespace,list,EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED),EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED)) @AT@ 15411 @LENGTH@ 56
------UPD SimpleName@@MethodName:parseDeployments:[reader, address, namespace, list, true] @TO@ MethodName:parseDeployments:[reader, address, namespace, list, EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED), EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED)] @AT@ 15411 @LENGTH@ 56
---------DEL BooleanLiteral@@true @AT@ 15462 @LENGTH@ 4
---------INS MethodInvocation@@EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED) @TO@ SimpleName@@MethodName:parseDeployments:[reader, address, namespace, list, true] @AT@ 15617 @LENGTH@ 69
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED) @AT@ 15617 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @TO@ MethodInvocation@@EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED) @AT@ 15625 @LENGTH@ 61
---------------INS QualifiedName@@Attribute.NAME @TO@ SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @AT@ 15628 @LENGTH@ 14
------------------INS SimpleName@@Attribute @TO@ QualifiedName@@Attribute.NAME @AT@ 15628 @LENGTH@ 9
------------------INS SimpleName@@NAME @TO@ QualifiedName@@Attribute.NAME @AT@ 15638 @LENGTH@ 4
---------------INS QualifiedName@@Attribute.RUNTIME_NAME @TO@ SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @AT@ 15644 @LENGTH@ 22
------------------INS SimpleName@@Attribute @TO@ QualifiedName@@Attribute.RUNTIME_NAME @AT@ 15644 @LENGTH@ 9
------------------INS SimpleName@@RUNTIME_NAME @TO@ QualifiedName@@Attribute.RUNTIME_NAME @AT@ 15654 @LENGTH@ 12
---------------INS QualifiedName@@Attribute.ENABLED @TO@ SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @AT@ 15668 @LENGTH@ 17
------------------INS SimpleName@@Attribute @TO@ QualifiedName@@Attribute.ENABLED @AT@ 15668 @LENGTH@ 9
------------------INS SimpleName@@ENABLED @TO@ QualifiedName@@Attribute.ENABLED @AT@ 15678 @LENGTH@ 7
---------INS MethodInvocation@@EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED) @TO@ SimpleName@@MethodName:parseDeployments:[reader, address, namespace, list, true] @AT@ 15708 @LENGTH@ 68
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED) @AT@ 15708 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @TO@ MethodInvocation@@EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED) @AT@ 15716 @LENGTH@ 60
---------------INS QualifiedName@@Element.CONTENT @TO@ SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @AT@ 15719 @LENGTH@ 15
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.CONTENT @AT@ 15719 @LENGTH@ 7
------------------INS SimpleName@@CONTENT @TO@ QualifiedName@@Element.CONTENT @AT@ 15727 @LENGTH@ 7
---------------INS QualifiedName@@Element.FS_ARCHIVE @TO@ SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @AT@ 15736 @LENGTH@ 18
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.FS_ARCHIVE @AT@ 15736 @LENGTH@ 7
------------------INS SimpleName@@FS_ARCHIVE @TO@ QualifiedName@@Element.FS_ARCHIVE @AT@ 15744 @LENGTH@ 10
---------------INS QualifiedName@@Element.FS_EXPLODED @TO@ SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @AT@ 15756 @LENGTH@ 19
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.FS_EXPLODED @AT@ 15756 @LENGTH@ 7
------------------INS SimpleName@@FS_EXPLODED @TO@ QualifiedName@@Element.FS_EXPLODED @AT@ 15764 @LENGTH@ 11


UPD Block@@ThenBody:{  PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));  final String queueName=address.getLastElement().getValue();  final CoreQueueConfiguration queueConfiguration=createCoreQueueConfiguration(context,queueName,model);  final QueueService service=new QueueService(queueConfiguration,false);  newControllers.add(context.getServiceTarget().addService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName),service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install());} @TO@ ThenBody:{  PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));  final String queueName=address.getLastElement().getValue();  final CoreQueueConfiguration queueConfiguration=createCoreQueueConfiguration(context,queueName,model);  final QueueService service=new QueueService(queueConfiguration,false);  final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName);  newControllers.add(context.getServiceTarget().addService(queueServiceName,service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install());} @AT@ 2825 @LENGTH@ 786
---INS VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName); @TO@ Block@@ThenBody:{  PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR));  final String queueName=address.getLastElement().getValue();  final CoreQueueConfiguration queueConfiguration=createCoreQueueConfiguration(context,queueName,model);  final QueueService service=new QueueService(queueConfiguration,false);  newControllers.add(context.getServiceTarget().addService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName),service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install());} @AT@ 3200 @LENGTH@ 112
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName); @AT@ 3200 @LENGTH@ 5
------INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName); @AT@ 3206 @LENGTH@ 11
------INS VariableDeclarationFragment@@queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName) @TO@ VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName); @AT@ 3218 @LENGTH@ 93
---------INS SimpleName@@queueServiceName @TO@ VariableDeclarationFragment@@queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName) @AT@ 3218 @LENGTH@ 16
---------INS MethodInvocation@@MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName) @TO@ VariableDeclarationFragment@@queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName) @AT@ 3237 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:getQueueBaseServiceName:[hqServiceName] @TO@ MethodInvocation@@MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName) @AT@ 3237 @LENGTH@ 56
---------------INS SimpleName@@hqServiceName @TO@ MethodInvocation@@MethodName:getQueueBaseServiceName:[hqServiceName] @AT@ 3279 @LENGTH@ 13
------------INS SimpleName@@Name:MessagingServices @TO@ MethodInvocation@@MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName) @AT@ 3237 @LENGTH@ 17
------------INS SimpleName@@MethodName:append:[queueName] @TO@ MethodInvocation@@MessagingServices.getQueueBaseServiceName(hqServiceName).append(queueName) @AT@ 3294 @LENGTH@ 17
---------------INS SimpleName@@queueName @TO@ SimpleName@@MethodName:append:[queueName] @AT@ 3301 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:newControllers.add(context.getServiceTarget().addService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName),service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install()) @TO@ MethodInvocation:newControllers.add(context.getServiceTarget().addService(queueServiceName,service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install()) @AT@ 3201 @LENGTH@ 399
------UPD MethodInvocation@@newControllers.add(context.getServiceTarget().addService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName),service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install()) @TO@ newControllers.add(context.getServiceTarget().addService(queueServiceName,service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install()) @AT@ 3201 @LENGTH@ 398
---------UPD SimpleName@@MethodName:add:[context.getServiceTarget().addService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName),service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install()] @TO@ MethodName:add:[context.getServiceTarget().addService(queueServiceName,service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install()] @AT@ 3216 @LENGTH@ 383
------------UPD MethodInvocation@@context.getServiceTarget().addService(hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName),service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install() @TO@ context.getServiceTarget().addService(queueServiceName,service).addDependency(hqServiceName,HornetQServer.class,service.getHornetQService()).addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install() @AT@ 3220 @LENGTH@ 378
---------------UPD MethodInvocation@@MethodName:addService:[hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName), service] @TO@ MethodName:addService:[queueServiceName, service] @AT@ 3220 @LENGTH@ 144
------------------DEL MethodInvocation@@hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName) @AT@ 3258 @LENGTH@ 96
---------------------DEL MethodInvocation@@MethodName:append:[MessagingServices.getQueueBaseServiceName(hqServiceName)] @AT@ 3258 @LENGTH@ 78
------------------------DEL MethodInvocation@@MessagingServices.getQueueBaseServiceName(hqServiceName) @AT@ 3279 @LENGTH@ 56
---------------------------DEL SimpleName@@Name:MessagingServices @AT@ 3279 @LENGTH@ 17
---------------------------DEL SimpleName@@MethodName:getQueueBaseServiceName:[hqServiceName] @AT@ 3297 @LENGTH@ 38
------------------------------DEL SimpleName@@hqServiceName @AT@ 3321 @LENGTH@ 13
---------------------DEL SimpleName@@Name:hqServiceName @AT@ 3258 @LENGTH@ 13
---------------------DEL SimpleName@@MethodName:append:[queueName] @AT@ 3337 @LENGTH@ 17
------------------------DEL SimpleName@@queueName @AT@ 3344 @LENGTH@ 9
------------------INS SimpleName@@queueServiceName @TO@ MethodInvocation@@MethodName:addService:[hqServiceName.append(MessagingServices.getQueueBaseServiceName(hqServiceName)).append(queueName), service] @AT@ 3382 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testGetInvokedFieldWhenBuilderIsNull,  @TO@ TypeDeclaration@@[public]MemberTypeAdditionsTest,  @AT@ 1564 @LENGTH@ 242
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetInvokedFieldWhenBuilderIsNull,  @AT@ 1564 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetInvokedFieldWhenBuilderIsNull,  @AT@ 1571 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetInvokedFieldWhenBuilderIsNull @TO@ MethodDeclaration@@public, void, MethodName:testGetInvokedFieldWhenBuilderIsNull,  @AT@ 1576 @LENGTH@ 36
---INS VariableDeclarationStatement@@final MemberTypeAdditions memberTypeAdditions=new MemberTypeAdditions(null,"foo","foo()"); @TO@ MethodDeclaration@@public, void, MethodName:testGetInvokedFieldWhenBuilderIsNull,  @AT@ 1631 @LENGTH@ 94
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final MemberTypeAdditions memberTypeAdditions=new MemberTypeAdditions(null,"foo","foo()"); @AT@ 1631 @LENGTH@ 5
------INS SimpleType@@MemberTypeAdditions @TO@ VariableDeclarationStatement@@final MemberTypeAdditions memberTypeAdditions=new MemberTypeAdditions(null,"foo","foo()"); @AT@ 1637 @LENGTH@ 19
------INS VariableDeclarationFragment@@memberTypeAdditions=new MemberTypeAdditions(null,"foo","foo()") @TO@ VariableDeclarationStatement@@final MemberTypeAdditions memberTypeAdditions=new MemberTypeAdditions(null,"foo","foo()"); @AT@ 1657 @LENGTH@ 67
---------INS SimpleName@@memberTypeAdditions @TO@ VariableDeclarationFragment@@memberTypeAdditions=new MemberTypeAdditions(null,"foo","foo()") @AT@ 1657 @LENGTH@ 19
---------INS ClassInstanceCreation@@MemberTypeAdditions[null, "foo", "foo()"] @TO@ VariableDeclarationFragment@@memberTypeAdditions=new MemberTypeAdditions(null,"foo","foo()") @AT@ 1679 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@MemberTypeAdditions[null, "foo", "foo()"] @AT@ 1679 @LENGTH@ 3
------------INS SimpleType@@MemberTypeAdditions @TO@ ClassInstanceCreation@@MemberTypeAdditions[null, "foo", "foo()"] @AT@ 1683 @LENGTH@ 19
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@MemberTypeAdditions[null, "foo", "foo()"] @AT@ 1703 @LENGTH@ 4
------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@MemberTypeAdditions[null, "foo", "foo()"] @AT@ 1709 @LENGTH@ 5
------------INS StringLiteral@@"foo()" @TO@ ClassInstanceCreation@@MemberTypeAdditions[null, "foo", "foo()"] @AT@ 1716 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNull(memberTypeAdditions.getInvokedField()) @TO@ MethodDeclaration@@public, void, MethodName:testGetInvokedFieldWhenBuilderIsNull,  @AT@ 1753 @LENGTH@ 50
------INS MethodInvocation@@assertNull(memberTypeAdditions.getInvokedField()) @TO@ ExpressionStatement@@MethodInvocation:assertNull(memberTypeAdditions.getInvokedField()) @AT@ 1753 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertNull:[memberTypeAdditions.getInvokedField()] @TO@ MethodInvocation@@assertNull(memberTypeAdditions.getInvokedField()) @AT@ 1753 @LENGTH@ 49
------------INS MethodInvocation@@memberTypeAdditions.getInvokedField() @TO@ SimpleName@@MethodName:assertNull:[memberTypeAdditions.getInvokedField()] @AT@ 1764 @LENGTH@ 37
---------------INS SimpleName@@Name:memberTypeAdditions @TO@ MethodInvocation@@memberTypeAdditions.getInvokedField() @AT@ 1764 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getInvokedField:[] @TO@ MethodInvocation@@memberTypeAdditions.getInvokedField() @AT@ 1784 @LENGTH@ 17


INS EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @TO@ MethodDeclaration@@public, void, MethodName:testBasicMatch, Exception,  @AT@ 1716 @LENGTH@ 711
---INS SingleVariableDeclaration@@Map.Entry<NetworkInterface,Set<InetAddress>> entry @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1721 @LENGTH@ 51
------MOV ParameterizedType@@Map.Entry<NetworkInterface,Set<InetAddress>> @TO@ SingleVariableDeclaration@@Map.Entry<NetworkInterface,Set<InetAddress>> entry @AT@ 1716 @LENGTH@ 45
------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<NetworkInterface,Set<InetAddress>> entry @AT@ 1767 @LENGTH@ 5
---INS MethodInvocation@@allCandidates.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1775 @LENGTH@ 24
------MOV SimpleName@@Name:allCandidates @TO@ MethodInvocation@@allCandidates.entrySet() @AT@ 1770 @LENGTH@ 13
------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@allCandidates.entrySet() @AT@ 1806 @LENGTH@ 6
---MOV VariableDeclarationStatement@@InetAddress target=entry.getValue().iterator().next(); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1822 @LENGTH@ 56
---MOV VariableDeclarationStatement@@InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1887 @LENGTH@ 75
---MOV VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1971 @LENGTH@ 98
---MOV ExpressionStatement@@MethodInvocation:assertNotNull(accepted) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2078 @LENGTH@ 24
---MOV ExpressionStatement@@MethodInvocation:assertEquals(1,accepted.size()) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2111 @LENGTH@ 33
---INS ExpressionStatement@@Assignment:accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2120 @LENGTH@ 67
------INS Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @TO@ ExpressionStatement@@Assignment:accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2120 @LENGTH@ 66
---------INS SimpleName@@accepted @TO@ Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2120 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2128 @LENGTH@ 1
---------INS MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @TO@ Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2131 @LENGTH@ 55
------------INS SimpleName@@Name:OverallInterfaceCriteria @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2131 @LENGTH@ 24
------------INS SimpleName@@MethodName:pruneAliasDuplicates:[accepted] @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2156 @LENGTH@ 30
---------------INS SimpleName@@accepted @TO@ SimpleName@@MethodName:pruneAliasDuplicates:[accepted] @AT@ 2177 @LENGTH@ 8
---MOV VariableDeclarationStatement@@Set<InetAddress> set=accepted.get(entry.getKey()); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2153 @LENGTH@ 52
---MOV ExpressionStatement@@MethodInvocation:assertNotNull(set) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2214 @LENGTH@ 19
---MOV ExpressionStatement@@MethodInvocation:assertEquals(1,set.size()) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2242 @LENGTH@ 28
---MOV ExpressionStatement@@MethodInvocation:assertTrue(set.contains(target)) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2279 @LENGTH@ 33


DEL MethodDeclaration@@private, DocPrintJob, MethodName:assignPrintJob, PrintService printService,  @AT@ 3114 @LENGTH@ 116
---DEL Modifier@@private @AT@ 3114 @LENGTH@ 7
---DEL SimpleType@@DocPrintJob @AT@ 3122 @LENGTH@ 11
---DEL SimpleName@@MethodName:assignPrintJob @AT@ 3134 @LENGTH@ 14
---DEL SingleVariableDeclaration@@PrintService printService @AT@ 3149 @LENGTH@ 25
------DEL SimpleType@@PrintService @AT@ 3149 @LENGTH@ 12
------DEL SimpleName@@printService @AT@ 3162 @LENGTH@ 12
---DEL ReturnStatement@@MethodInvocation:printService.createPrintJob() @AT@ 3186 @LENGTH@ 37
------DEL MethodInvocation@@printService.createPrintJob() @AT@ 3193 @LENGTH@ 29
---------DEL SimpleName@@Name:printService @AT@ 3193 @LENGTH@ 12
---------DEL SimpleName@@MethodName:createPrintJob:[] @AT@ 3206 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2967 @LENGTH@ 517
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 3026 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3026 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3032 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3039 @LENGTH@ 11


INS MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> result, Exception authException,  @TO@ TypeDeclaration@@[public, abstract]AbstractOAuth2SecurityExceptionHandler,  @AT@ 3513 @LENGTH@ 147
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> result, Exception authException,  @AT@ 3513 @LENGTH@ 9
---INS ParameterizedType@@ResponseEntity<OAuth2Exception> @TO@ MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> result, Exception authException,  @AT@ 3523 @LENGTH@ 31
------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 3523 @LENGTH@ 14
------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 3538 @LENGTH@ 15
---INS SimpleName@@MethodName:enhanceResponse @TO@ MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> result, Exception authException,  @AT@ 3555 @LENGTH@ 15
---INS SingleVariableDeclaration@@ResponseEntity<OAuth2Exception> result @TO@ MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> result, Exception authException,  @AT@ 3571 @LENGTH@ 38
------INS ParameterizedType@@ResponseEntity<OAuth2Exception> @TO@ SingleVariableDeclaration@@ResponseEntity<OAuth2Exception> result @AT@ 3571 @LENGTH@ 31
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 3571 @LENGTH@ 14
---------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 3586 @LENGTH@ 15
------INS SimpleName@@result @TO@ SingleVariableDeclaration@@ResponseEntity<OAuth2Exception> result @AT@ 3603 @LENGTH@ 6
---INS SingleVariableDeclaration@@Exception authException @TO@ MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> result, Exception authException,  @AT@ 3614 @LENGTH@ 23
------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception authException @AT@ 3614 @LENGTH@ 9
------INS SimpleName@@authException @TO@ SingleVariableDeclaration@@Exception authException @AT@ 3624 @LENGTH@ 13
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> result, Exception authException,  @AT@ 3643 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 3650 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1)).build() @TO@ MethodInvocation:SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1,true)).build() @AT@ 4660 @LENGTH@ 209
---UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1)).build() @TO@ SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1,true)).build() @AT@ 4667 @LENGTH@ 201
------UPD MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(1)] @TO@ MethodName:setValidator:[new IntRangeValidator(1,true)] @AT@ 4667 @LENGTH@ 193
---------UPD ClassInstanceCreation@@IntRangeValidator[1] @TO@ IntRangeValidator[1, true] @AT@ 4835 @LENGTH@ 24
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[1] @AT@ 4860 @LENGTH@ 4


INS MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]DomainControllerMessages,  @AT@ 20796 @LENGTH@ 63
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20771 @LENGTH@ 24
---INS SimpleName@@MethodName:failedToLoadModule @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20796 @LENGTH@ 18
---INS SingleVariableDeclaration@@@Cause ModuleLoadException e @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20815 @LENGTH@ 28
------INS SimpleType@@ModuleLoadException @TO@ SingleVariableDeclaration@@@Cause ModuleLoadException e @AT@ 20822 @LENGTH@ 19
------INS SimpleName@@e @TO@ SingleVariableDeclaration@@@Cause ModuleLoadException e @AT@ 20842 @LENGTH@ 1
---INS SingleVariableDeclaration@@String module @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20844 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String module @AT@ 20844 @LENGTH@ 6
------INS SimpleName@@module @TO@ SingleVariableDeclaration@@String module @AT@ 20851 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:Long.parseLong(new String(input).trim()) @TO@ MethodInvocation:Long.parseLong(ArchiveUtils.toAsciiString(input).trim()) @AT@ 6934 @LENGTH@ 48
---UPD MethodInvocation@@Long.parseLong(new String(input).trim()) @TO@ Long.parseLong(ArchiveUtils.toAsciiString(input).trim()) @AT@ 6941 @LENGTH@ 40
------UPD SimpleName@@MethodName:parseLong:[new String(input).trim()] @TO@ MethodName:parseLong:[ArchiveUtils.toAsciiString(input).trim()] @AT@ 6946 @LENGTH@ 35
---------UPD MethodInvocation@@new String(input).trim() @TO@ ArchiveUtils.toAsciiString(input).trim() @AT@ 6956 @LENGTH@ 24
------------DEL ClassInstanceCreation@@String[input] @AT@ 6956 @LENGTH@ 17
---------------DEL New@@new @AT@ 6956 @LENGTH@ 3
---------------DEL SimpleType@@String @AT@ 6960 @LENGTH@ 6
---------------DEL SimpleName@@input @AT@ 6967 @LENGTH@ 5
------------INS SimpleName@@Name:ArchiveUtils @TO@ MethodInvocation@@new String(input).trim() @AT@ 6956 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:toAsciiString:[input] @TO@ MethodInvocation@@new String(input).trim() @AT@ 6956 @LENGTH@ 33
---------------INS SimpleName@@input @TO@ MethodInvocation@@MethodName:toAsciiString:[input] @AT@ 6983 @LENGTH@ 5


UPD SwitchStatement@@switch (element) {case CLASS_NAME:  containerListener.setListenerClass(getElementText(reader));break;case MODULE:containerListener.setModule(getElementText(reader));break;case LISTENER_TYPE:containerListener.setListenerType(ContainerListenerType.valueOf(getElementText(reader)));break;case PARAM:List<ParamValueMetaData> params=containerListener.getParams();if (params == null) {params=new ArrayList<ParamValueMetaData>();containerListener.setParams(params);}params.add(ParamValueMetaDataParser.parse(reader));break;default :throw unexpectedElement(reader);} @TO@ switch (element) {case CLASS_NAME:  containerListener.setListenerClass(getElementText(reader));break;case MODULE:containerListener.setModule(getElementText(reader));break;case LISTENER_TYPE:try {containerListener.setListenerType(ContainerListenerType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}break;case PARAM:List<ParamValueMetaData> params=containerListener.getParams();if (params == null) {params=new ArrayList<ParamValueMetaData>();containerListener.setParams(params);}params.add(ParamValueMetaDataParser.parse(reader));break;default :throw unexpectedElement(reader);} @AT@ 1995 @LENGTH@ 924
---INS TryStatement@@try {  containerListener.setListenerType(ContainerListenerType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case CLASS_NAME:  containerListener.setListenerClass(getElementText(reader));break;case MODULE:containerListener.setModule(getElementText(reader));break;case LISTENER_TYPE:containerListener.setListenerType(ContainerListenerType.valueOf(getElementText(reader)));break;case PARAM:List<ParamValueMetaData> params=containerListener.getParams();if (params == null) {params=new ArrayList<ParamValueMetaData>();containerListener.setParams(params);}params.add(ParamValueMetaDataParser.parse(reader));break;default :throw unexpectedElement(reader);} @AT@ 2333 @LENGTH@ 258
------MOV ExpressionStatement@@MethodInvocation:containerListener.setListenerType(ContainerListenerType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  containerListener.setListenerType(ContainerListenerType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2330 @LENGTH@ 89
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  containerListener.setListenerType(ContainerListenerType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2475 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2482 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2482 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2507 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2536 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 2542 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 2542 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 2558 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 2566 @LENGTH@ 1


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.refresh();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.refresh();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1905 @LENGTH@ 597
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.refresh();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1909 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1909 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1909 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1917 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1933 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1937 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1937 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1937 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 1964 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1937 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1971 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 1982 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 1982 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2000 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2005 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2007 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1909 @LENGTH@ 24


INS IfStatement@@if (realm == null) {  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @TO@ MethodDeclaration@@public, void, MethodName:handle, HttpExchange exchange, IOException,  @AT@ 1441 @LENGTH@ 129
---INS InfixExpression@@realm == null @TO@ IfStatement@@if (realm == null) {  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1445 @LENGTH@ 13
------INS SimpleName@@realm @TO@ InfixExpression@@realm == null @AT@ 1445 @LENGTH@ 5
------INS Operator@@== @TO@ InfixExpression@@realm == null @AT@ 1450 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@realm == null @AT@ 1454 @LENGTH@ 4
---INS Block@@ThenBody:{  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @TO@ IfStatement@@if (realm == null) {  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1460 @LENGTH@ 110
------INS ExpressionStatement@@MethodInvocation:responseHeaders.set(LOCATION,"/") @TO@ Block@@ThenBody:{  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1474 @LENGTH@ 35
---------INS MethodInvocation@@responseHeaders.set(LOCATION,"/") @TO@ ExpressionStatement@@MethodInvocation:responseHeaders.set(LOCATION,"/") @AT@ 1474 @LENGTH@ 34
------------INS SimpleName@@Name:responseHeaders @TO@ MethodInvocation@@responseHeaders.set(LOCATION,"/") @AT@ 1474 @LENGTH@ 15
------------INS SimpleName@@MethodName:set:[LOCATION, "/"] @TO@ MethodInvocation@@responseHeaders.set(LOCATION,"/") @AT@ 1490 @LENGTH@ 18
---------------INS SimpleName@@LOCATION @TO@ SimpleName@@MethodName:set:[LOCATION, "/"] @AT@ 1494 @LENGTH@ 8
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:set:[LOCATION, "/"] @AT@ 1504 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:exchange.sendResponseHeaders(307,-1) @TO@ Block@@ThenBody:{  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1522 @LENGTH@ 38
---------INS MethodInvocation@@exchange.sendResponseHeaders(307,-1) @TO@ ExpressionStatement@@MethodInvocation:exchange.sendResponseHeaders(307,-1) @AT@ 1522 @LENGTH@ 37
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.sendResponseHeaders(307,-1) @AT@ 1522 @LENGTH@ 8
------------INS SimpleName@@MethodName:sendResponseHeaders:[307, -1] @TO@ MethodInvocation@@exchange.sendResponseHeaders(307,-1) @AT@ 1531 @LENGTH@ 28
---------------INS NumberLiteral@@307 @TO@ SimpleName@@MethodName:sendResponseHeaders:[307, -1] @AT@ 1551 @LENGTH@ 3
---------------INS PrefixExpression@@-1 @TO@ SimpleName@@MethodName:sendResponseHeaders:[307, -1] @AT@ 1556 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1556 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1557 @LENGTH@ 1


INS IfStatement@@if (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  unexpectedContent(reader);} @TO@ MethodDeclaration@@private, void, MethodName:parseRemotingReceiver, final XMLExtendedStreamReader reader, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData, XMLStreamException,  @AT@ 10323 @LENGTH@ 107
---INS InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @TO@ IfStatement@@if (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  unexpectedContent(reader);} @AT@ 10327 @LENGTH@ 51
------INS MethodInvocation@@reader.hasNext() @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 10327 @LENGTH@ 16
---------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 10327 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 10334 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 10343 @LENGTH@ 2
------INS InfixExpression@@reader.nextTag() != END_ELEMENT @TO@ InfixExpression@@reader.hasNext() && reader.nextTag() != END_ELEMENT @AT@ 10347 @LENGTH@ 31
---------INS MethodInvocation@@reader.nextTag() @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 10347 @LENGTH@ 16
------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.nextTag() @AT@ 10347 @LENGTH@ 6
------------INS SimpleName@@MethodName:nextTag:[] @TO@ MethodInvocation@@reader.nextTag() @AT@ 10354 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 10363 @LENGTH@ 2
---------INS SimpleName@@END_ELEMENT @TO@ InfixExpression@@reader.nextTag() != END_ELEMENT @AT@ 10367 @LENGTH@ 11
---INS Block@@ThenBody:{  unexpectedContent(reader);} @TO@ IfStatement@@if (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  unexpectedContent(reader);} @AT@ 10380 @LENGTH@ 50
------INS ExpressionStatement@@MethodInvocation:unexpectedContent(reader) @TO@ Block@@ThenBody:{  unexpectedContent(reader);} @AT@ 10394 @LENGTH@ 26
---------INS MethodInvocation@@unexpectedContent(reader) @TO@ ExpressionStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 10394 @LENGTH@ 25
------------INS SimpleName@@MethodName:unexpectedContent:[reader] @TO@ MethodInvocation@@unexpectedContent(reader) @AT@ 10394 @LENGTH@ 25
---------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 10412 @LENGTH@ 6


UPD IfStatement@@if (result == null) {  r="success";  e=null;} else {  StringWriter sw=new StringWriter();  result.printStackTrace(new PrintWriter(sw));  r="error";  e=sw.toString();} @TO@ if (result == null) {  r=ZkDefs.SUCCESS;  e=null;} else {  StringWriter sw=new StringWriter();  result.printStackTrace(new PrintWriter(sw));  r=ZkDefs.ERROR;  e=sw.toString();} @AT@ 5923 @LENGTH@ 388
---UPD Block@@ThenBody:{  r="success";  e=null;} @TO@ ThenBody:{  r=ZkDefs.SUCCESS;  e=null;} @AT@ 5943 @LENGTH@ 108
------UPD ExpressionStatement@@Assignment:r="success" @TO@ Assignment:r=ZkDefs.SUCCESS @AT@ 5973 @LENGTH@ 14
---------UPD Assignment@@r="success" @TO@ r=ZkDefs.SUCCESS @AT@ 5973 @LENGTH@ 13
------------INS QualifiedName@@ZkDefs.SUCCESS @TO@ Assignment@@r="success" @AT@ 5074 @LENGTH@ 14
---------------INS SimpleName@@ZkDefs @TO@ QualifiedName@@ZkDefs.SUCCESS @AT@ 5074 @LENGTH@ 6
---------------INS SimpleName@@SUCCESS @TO@ QualifiedName@@ZkDefs.SUCCESS @AT@ 5081 @LENGTH@ 7
------------DEL StringLiteral@@"success" @AT@ 5977 @LENGTH@ 9
---UPD Block@@ElseBody:{  StringWriter sw=new StringWriter();  result.printStackTrace(new PrintWriter(sw));  r="error";  e=sw.toString();} @TO@ ElseBody:{  StringWriter sw=new StringWriter();  result.printStackTrace(new PrintWriter(sw));  r=ZkDefs.ERROR;  e=sw.toString();} @AT@ 6057 @LENGTH@ 254
------UPD ExpressionStatement@@Assignment:r="error" @TO@ Assignment:r=ZkDefs.ERROR @AT@ 6226 @LENGTH@ 12
---------UPD Assignment@@r="error" @TO@ r=ZkDefs.ERROR @AT@ 6226 @LENGTH@ 11
------------INS QualifiedName@@ZkDefs.ERROR @TO@ Assignment@@r="error" @AT@ 5332 @LENGTH@ 12
---------------INS SimpleName@@ZkDefs @TO@ QualifiedName@@ZkDefs.ERROR @AT@ 5332 @LENGTH@ 6
---------------INS SimpleName@@ERROR @TO@ QualifiedName@@ZkDefs.ERROR @AT@ 5339 @LENGTH@ 5
------------DEL StringLiteral@@"error" @AT@ 6230 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]WebsocketComponentServlet, WebSocketServlet @AT@ 1068 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1068 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1076 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1083 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1089 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1094 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1094 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1113 @LENGTH@ 2


INS TryStatement@@try {  assertNotNull("Cannot find jndi-example.properties on the classpath!",in);  Properties properties=new Properties();  properties.load(in);  return new InitialContext(new Hashtable<Object,Object>(properties));}  finally {  IOHelper.close(in);} @TO@ MethodDeclaration@@public, static, Context, MethodName:createInitialContext, Exception,  @AT@ 1385 @LENGTH@ 323
---MOV ExpressionStatement@@MethodInvocation:assertNotNull("Cannot find jndi-example.properties on the classpath!",in) @TO@ TryStatement@@try {  assertNotNull("Cannot find jndi-example.properties on the classpath!",in);  Properties properties=new Properties();  properties.load(in);  return new InitialContext(new Hashtable<Object,Object>(properties));}  finally {  IOHelper.close(in);} @AT@ 1346 @LENGTH@ 75
---MOV VariableDeclarationStatement@@Properties properties=new Properties(); @TO@ TryStatement@@try {  assertNotNull("Cannot find jndi-example.properties on the classpath!",in);  Properties properties=new Properties();  properties.load(in);  return new InitialContext(new Hashtable<Object,Object>(properties));}  finally {  IOHelper.close(in);} @AT@ 1430 @LENGTH@ 41
---MOV ExpressionStatement@@MethodInvocation:properties.load(in) @TO@ TryStatement@@try {  assertNotNull("Cannot find jndi-example.properties on the classpath!",in);  Properties properties=new Properties();  properties.load(in);  return new InitialContext(new Hashtable<Object,Object>(properties));}  finally {  IOHelper.close(in);} @AT@ 1480 @LENGTH@ 20
---MOV ReturnStatement@@ClassInstanceCreation:new InitialContext(new Hashtable<Object,Object>(properties)) @TO@ TryStatement@@try {  assertNotNull("Cannot find jndi-example.properties on the classpath!",in);  Properties properties=new Properties();  properties.load(in);  return new InitialContext(new Hashtable<Object,Object>(properties));}  finally {  IOHelper.close(in);} @AT@ 1509 @LENGTH@ 69
---INS Block@@FinallyBody:{  IOHelper.close(in);} @TO@ TryStatement@@try {  assertNotNull("Cannot find jndi-example.properties on the classpath!",in);  Properties properties=new Properties();  properties.load(in);  return new InitialContext(new Hashtable<Object,Object>(properties));}  finally {  IOHelper.close(in);} @AT@ 1665 @LENGTH@ 43
------INS ExpressionStatement@@MethodInvocation:IOHelper.close(in) @TO@ Block@@FinallyBody:{  IOHelper.close(in);} @AT@ 1679 @LENGTH@ 19
---------INS MethodInvocation@@IOHelper.close(in) @TO@ ExpressionStatement@@MethodInvocation:IOHelper.close(in) @AT@ 1679 @LENGTH@ 18
------------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.close(in) @AT@ 1679 @LENGTH@ 8
------------INS SimpleName@@MethodName:close:[in] @TO@ MethodInvocation@@IOHelper.close(in) @AT@ 1688 @LENGTH@ 9
---------------INS SimpleName@@in @TO@ SimpleName@@MethodName:close:[in] @AT@ 1694 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, String containerId, Exception,  @AT@ 1727 @LENGTH@ 1476
---INS SingleVariableDeclaration@@String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 1786 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String containerId @AT@ 1786 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@String containerId @AT@ 1793 @LENGTH@ 11


INS IfStatement@@if (description.isTimerServiceApplicable()) {  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @TO@ MethodDeclaration@@public, void, MethodName:configure, final DeploymentPhaseContext context, final ComponentDescription description, final ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 8209 @LENGTH@ 1111
---INS MethodInvocation@@description.isTimerServiceApplicable() @TO@ IfStatement@@if (description.isTimerServiceApplicable()) {  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @AT@ 8213 @LENGTH@ 38
------INS SimpleName@@Name:description @TO@ MethodInvocation@@description.isTimerServiceApplicable() @AT@ 8213 @LENGTH@ 11
------INS SimpleName@@MethodName:isTimerServiceApplicable:[] @TO@ MethodInvocation@@description.isTimerServiceApplicable() @AT@ 8225 @LENGTH@ 26
---INS Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @TO@ IfStatement@@if (description.isTimerServiceApplicable()) {  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @AT@ 8253 @LENGTH@ 1067
------MOV IfStatement@@if (isSecurityEnabled()) {  configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);} @TO@ Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @AT@ 8125 @LENGTH@ 186
------INS ExpressionStatement@@MethodInvocation:configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR) @TO@ Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @AT@ 8276 @LENGTH@ 171
---------INS MethodInvocation@@configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR) @TO@ ExpressionStatement@@MethodInvocation:configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR) @AT@ 8276 @LENGTH@ 170
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR) @AT@ 8276 @LENGTH@ 13
------------INS SimpleName@@MethodName:addTimeoutViewInterceptor:[new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())), InterceptorOrder.View.TCCL_INTERCEPTOR] @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR) @AT@ 8290 @LENGTH@ 156
---------------INS ClassInstanceCreation@@ImmediateInterceptorFactory[new TCCLInterceptor(configuration.getModuleClassLoder())] @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())), InterceptorOrder.View.TCCL_INTERCEPTOR] @AT@ 8316 @LENGTH@ 89
------------------INS New@@new @TO@ ClassInstanceCreation@@ImmediateInterceptorFactory[new TCCLInterceptor(configuration.getModuleClassLoder())] @AT@ 8316 @LENGTH@ 3
------------------INS SimpleType@@ImmediateInterceptorFactory @TO@ ClassInstanceCreation@@ImmediateInterceptorFactory[new TCCLInterceptor(configuration.getModuleClassLoder())] @AT@ 8320 @LENGTH@ 27
------------------INS ClassInstanceCreation@@TCCLInterceptor[configuration.getModuleClassLoder()] @TO@ ClassInstanceCreation@@ImmediateInterceptorFactory[new TCCLInterceptor(configuration.getModuleClassLoder())] @AT@ 8348 @LENGTH@ 56
---------------------INS New@@new @TO@ ClassInstanceCreation@@TCCLInterceptor[configuration.getModuleClassLoder()] @AT@ 8348 @LENGTH@ 3
---------------------INS SimpleType@@TCCLInterceptor @TO@ ClassInstanceCreation@@TCCLInterceptor[configuration.getModuleClassLoder()] @AT@ 8352 @LENGTH@ 15
---------------------INS MethodInvocation@@configuration.getModuleClassLoder() @TO@ ClassInstanceCreation@@TCCLInterceptor[configuration.getModuleClassLoder()] @AT@ 8368 @LENGTH@ 35
------------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getModuleClassLoder() @AT@ 8368 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:getModuleClassLoder:[] @TO@ MethodInvocation@@configuration.getModuleClassLoder() @AT@ 8382 @LENGTH@ 21
---------------INS QualifiedName@@InterceptorOrder.View.TCCL_INTERCEPTOR @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())), InterceptorOrder.View.TCCL_INTERCEPTOR] @AT@ 8407 @LENGTH@ 38
------------------INS QualifiedName@@InterceptorOrder.View @TO@ QualifiedName@@InterceptorOrder.View.TCCL_INTERCEPTOR @AT@ 8407 @LENGTH@ 21
---------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.View @AT@ 8407 @LENGTH@ 16
---------------------INS SimpleName@@View @TO@ QualifiedName@@InterceptorOrder.View @AT@ 8424 @LENGTH@ 4
------------------INS SimpleName@@TCCL_INTERCEPTOR @TO@ QualifiedName@@InterceptorOrder.View.TCCL_INTERCEPTOR @AT@ 8429 @LENGTH@ 16
------MOV EnhancedForStatement@@for (final Method method : configuration.getClassIndex().getClassMethods()) {  configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);} @TO@ Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @AT@ 8328 @LENGTH@ 284
------INS ExpressionStatement@@MethodInvocation:configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR) @TO@ Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @AT@ 8468 @LENGTH@ 145
---------INS MethodInvocation@@configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR) @TO@ ExpressionStatement@@MethodInvocation:configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR) @AT@ 8468 @LENGTH@ 144
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR) @AT@ 8468 @LENGTH@ 13
------------INS SimpleName@@MethodName:addTimeoutViewInterceptor:[configuration.getNamespaceContextInterceptorFactory(), InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR] @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR) @AT@ 8482 @LENGTH@ 130
---------------INS MethodInvocation@@configuration.getNamespaceContextInterceptorFactory() @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[configuration.getNamespaceContextInterceptorFactory(), InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR] @AT@ 8508 @LENGTH@ 53
------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getNamespaceContextInterceptorFactory() @AT@ 8508 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getNamespaceContextInterceptorFactory:[] @TO@ MethodInvocation@@configuration.getNamespaceContextInterceptorFactory() @AT@ 8522 @LENGTH@ 39
---------------INS QualifiedName@@InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[configuration.getNamespaceContextInterceptorFactory(), InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR] @AT@ 8563 @LENGTH@ 48
------------------INS QualifiedName@@InterceptorOrder.View @TO@ QualifiedName@@InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR @AT@ 8563 @LENGTH@ 21
---------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.View @AT@ 8563 @LENGTH@ 16
---------------------INS SimpleName@@View @TO@ QualifiedName@@InterceptorOrder.View @AT@ 8580 @LENGTH@ 4
------------------INS SimpleName@@JNDI_NAMESPACE_INTERCEPTOR @TO@ QualifiedName@@InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR @AT@ 8585 @LENGTH@ 26
------INS ExpressionStatement@@MethodInvocation:configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR) @TO@ Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ImmediateInterceptorFactory(new TCCLInterceptor(configuration.getModuleClassLoder())),InterceptorOrder.View.TCCL_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(configuration.getNamespaceContextInterceptorFactory(),InterceptorOrder.View.JNDI_NAMESPACE_INTERCEPTOR);  configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR);  if (isSecurityEnabled()) {    configuration.addTimeoutViewInterceptor(new SecurityContextInterceptorFactory(),InterceptorOrder.View.SECURITY_CONTEXT);  }  for (  final Method method : configuration.getClassIndex().getClassMethods()) {    configuration.addTimeoutViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(method)),InterceptorOrder.View.COMPONENT_DISPATCHER);  }} @AT@ 8634 @LENGTH@ 139
---------INS MethodInvocation@@configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR) @TO@ ExpressionStatement@@MethodInvocation:configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR) @AT@ 8634 @LENGTH@ 138
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR) @AT@ 8634 @LENGTH@ 13
------------INS SimpleName@@MethodName:addTimeoutViewInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR] @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR) @AT@ 8648 @LENGTH@ 124
---------------INS QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR] @AT@ 8674 @LENGTH@ 43
------------------INS SimpleName@@CurrentInvocationContextInterceptor @TO@ QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @AT@ 8674 @LENGTH@ 35
------------------INS SimpleName@@FACTORY @TO@ QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @AT@ 8710 @LENGTH@ 7
---------------INS QualifiedName@@InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR] @AT@ 8719 @LENGTH@ 52
------------------INS QualifiedName@@InterceptorOrder.View @TO@ QualifiedName@@InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR @AT@ 8719 @LENGTH@ 21
---------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.View @AT@ 8719 @LENGTH@ 16
---------------------INS SimpleName@@View @TO@ QualifiedName@@InterceptorOrder.View @AT@ 8736 @LENGTH@ 4
------------------INS SimpleName@@INVOCATION_CONTEXT_INTERCEPTOR @TO@ QualifiedName@@InterceptorOrder.View.INVOCATION_CONTEXT_INTERCEPTOR @AT@ 8741 @LENGTH@ 30


UPD Block@@ThenBody:{  final String nodeName=SecurityActions.getSystemProperty(ServerEnvironment.NODE_NAME);  final LocalEjbReceiver byValueLocalEjbReceiver=new LocalEjbReceiver(nodeName,false);  newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).install());  final LocalEjbReceiver byReferenceLocalEjbReceiver=new LocalEjbReceiver(nodeName,true);  newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).install());  clientContextService.addReceiver(clientContextServiceBuilder,LocalEjbReceiver.BY_VALUE_SERVICE_NAME);} @TO@ ThenBody:{  final String nodeName=SecurityActions.getSystemProperty(ServerEnvironment.NODE_NAME);  final LocalEjbReceiver byValueLocalEjbReceiver=new LocalEjbReceiver(nodeName,false);  newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byValueLocalEjbReceiver.getClusterRegistryInjector()).install());  final LocalEjbReceiver byReferenceLocalEjbReceiver=new LocalEjbReceiver(nodeName,true);  newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byReferenceLocalEjbReceiver.getClusterRegistryInjector()).install());  clientContextService.addReceiver(clientContextServiceBuilder,LocalEjbReceiver.BY_VALUE_SERVICE_NAME);} @AT@ 23690 @LENGTH@ 1234
---UPD ExpressionStatement@@MethodInvocation:newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).install()) @TO@ MethodInvocation:newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byValueLocalEjbReceiver.getClusterRegistryInjector()).install()) @AT@ 23991 @LENGTH@ 303
------UPD MethodInvocation@@newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).install()) @TO@ newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byValueLocalEjbReceiver.getClusterRegistryInjector()).install()) @AT@ 23991 @LENGTH@ 302
---------UPD SimpleName@@MethodName:add:[context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).install()] @TO@ MethodName:add:[context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byValueLocalEjbReceiver.getClusterRegistryInjector()).install()] @AT@ 24006 @LENGTH@ 287
------------UPD MethodInvocation@@context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).install() @TO@ context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byValueLocalEjbReceiver.getClusterRegistryInjector()).install() @AT@ 24010 @LENGTH@ 282
---------------INS MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byValueLocalEjbReceiver.getClusterRegistryInjector()] @TO@ MethodInvocation@@context.getServiceTarget().addService(LocalEjbReceiver.BY_VALUE_SERVICE_NAME,byValueLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byValueLocalEjbReceiver.getDeploymentRepository()).install() @AT@ 24010 @LENGTH@ 432
------------------INS QualifiedName@@GroupMembershipNotifierRegistryService.SERVICE_NAME @TO@ MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byValueLocalEjbReceiver.getClusterRegistryInjector()] @AT@ 24297 @LENGTH@ 51
---------------------INS SimpleName@@GroupMembershipNotifierRegistryService @TO@ QualifiedName@@GroupMembershipNotifierRegistryService.SERVICE_NAME @AT@ 24297 @LENGTH@ 38
---------------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@GroupMembershipNotifierRegistryService.SERVICE_NAME @AT@ 24336 @LENGTH@ 12
------------------INS TypeLiteral@@GroupMembershipNotifierRegistry.class @TO@ MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byValueLocalEjbReceiver.getClusterRegistryInjector()] @AT@ 24350 @LENGTH@ 37
------------------INS MethodInvocation@@byValueLocalEjbReceiver.getClusterRegistryInjector() @TO@ MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byValueLocalEjbReceiver.getClusterRegistryInjector()] @AT@ 24389 @LENGTH@ 52
---------------------INS SimpleName@@Name:byValueLocalEjbReceiver @TO@ MethodInvocation@@byValueLocalEjbReceiver.getClusterRegistryInjector() @AT@ 24389 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:getClusterRegistryInjector:[] @TO@ MethodInvocation@@byValueLocalEjbReceiver.getClusterRegistryInjector() @AT@ 24413 @LENGTH@ 28
---UPD ExpressionStatement@@MethodInvocation:newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).install()) @TO@ MethodInvocation:newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byReferenceLocalEjbReceiver.getClusterRegistryInjector()).install()) @AT@ 24483 @LENGTH@ 315
------UPD MethodInvocation@@newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).install()) @TO@ newControllers.add(context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byReferenceLocalEjbReceiver.getClusterRegistryInjector()).install()) @AT@ 24483 @LENGTH@ 314
---------UPD SimpleName@@MethodName:add:[context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).install()] @TO@ MethodName:add:[context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byReferenceLocalEjbReceiver.getClusterRegistryInjector()).install()] @AT@ 24498 @LENGTH@ 299
------------UPD MethodInvocation@@context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).install() @TO@ context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,byReferenceLocalEjbReceiver.getClusterRegistryInjector()).install() @AT@ 24502 @LENGTH@ 294
---------------INS MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byReferenceLocalEjbReceiver.getClusterRegistryInjector()] @TO@ MethodInvocation@@context.getServiceTarget().addService(LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME,byReferenceLocalEjbReceiver).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,byReferenceLocalEjbReceiver.getDeploymentRepository()).install() @AT@ 24683 @LENGTH@ 448
------------------INS QualifiedName@@GroupMembershipNotifierRegistryService.SERVICE_NAME @TO@ MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byReferenceLocalEjbReceiver.getClusterRegistryInjector()] @AT@ 24982 @LENGTH@ 51
---------------------INS SimpleName@@GroupMembershipNotifierRegistryService @TO@ QualifiedName@@GroupMembershipNotifierRegistryService.SERVICE_NAME @AT@ 24982 @LENGTH@ 38
---------------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@GroupMembershipNotifierRegistryService.SERVICE_NAME @AT@ 25021 @LENGTH@ 12
------------------INS TypeLiteral@@GroupMembershipNotifierRegistry.class @TO@ MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byReferenceLocalEjbReceiver.getClusterRegistryInjector()] @AT@ 25035 @LENGTH@ 37
------------------INS MethodInvocation@@byReferenceLocalEjbReceiver.getClusterRegistryInjector() @TO@ MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, byReferenceLocalEjbReceiver.getClusterRegistryInjector()] @AT@ 25074 @LENGTH@ 56
---------------------INS SimpleName@@Name:byReferenceLocalEjbReceiver @TO@ MethodInvocation@@byReferenceLocalEjbReceiver.getClusterRegistryInjector() @AT@ 25074 @LENGTH@ 27
---------------------INS SimpleName@@MethodName:getClusterRegistryInjector:[] @TO@ MethodInvocation@@byReferenceLocalEjbReceiver.getClusterRegistryInjector() @AT@ 25102 @LENGTH@ 28


INS MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @TO@ TypeDeclaration@@[public]SdbEndpoint, ScheduledPollEndpoint @AT@ 2066 @LENGTH@ 166
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @AT@ 2066 @LENGTH@ 6
---INS SimpleName@@MethodName:SdbEndpoint @TO@ MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @AT@ 2073 @LENGTH@ 11
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @AT@ 2085 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 2085 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 2092 @LENGTH@ 3
---INS SingleVariableDeclaration@@Component component @TO@ MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @AT@ 2097 @LENGTH@ 19
------INS SimpleType@@Component @TO@ SingleVariableDeclaration@@Component component @AT@ 2097 @LENGTH@ 9
------INS SimpleName@@component @TO@ SingleVariableDeclaration@@Component component @AT@ 2107 @LENGTH@ 9
---INS SingleVariableDeclaration@@SdbConfiguration configuration @TO@ MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @AT@ 2118 @LENGTH@ 30
------INS SimpleType@@SdbConfiguration @TO@ SingleVariableDeclaration@@SdbConfiguration configuration @AT@ 2118 @LENGTH@ 16
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@SdbConfiguration configuration @AT@ 2135 @LENGTH@ 13
---INS SuperConstructorInvocation@@super(uri,component);
 @TO@ MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @AT@ 2160 @LENGTH@ 22
------INS SimpleName@@uri @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 2166 @LENGTH@ 3
------INS SimpleName@@component @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 2171 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.configuration=configuration @TO@ MethodDeclaration@@public, voidMethodName:SdbEndpoint, String uri, Component component, SdbConfiguration configuration,  @AT@ 2191 @LENGTH@ 35
------INS Assignment@@this.configuration=configuration @TO@ ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 2191 @LENGTH@ 34
---------INS FieldAccess@@this.configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2191 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.configuration @AT@ 2191 @LENGTH@ 4
------------INS SimpleName@@configuration @TO@ FieldAccess@@this.configuration @AT@ 2196 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.configuration=configuration @AT@ 2209 @LENGTH@ 1
---------INS SimpleName@@configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2212 @LENGTH@ 13


UPD MethodDeclaration@@BackingCacheEntryStore<G,Cacheable<G>,E>, E extends SerializationGroup<K,V,G>, MethodName:createGroupIntegratedObjectStore, PassivationManager<G,E> passivationManager, StatefulTimeoutInfo timeout,  @TO@ BackingCacheEntryStore<G,Cacheable<G>,E>, E extends SerializationGroup<K,V,G>, MethodName:createGroupIntegratedObjectStore, IdentifierFactory<G> identifierFactory, PassivationManager<G,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 1971 @LENGTH@ 107
---INS SingleVariableDeclaration@@IdentifierFactory<G> identifierFactory @TO@ MethodDeclaration@@BackingCacheEntryStore<G,Cacheable<G>,E>, E extends SerializationGroup<K,V,G>, MethodName:createGroupIntegratedObjectStore, PassivationManager<G,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 2054 @LENGTH@ 38
------INS ParameterizedType@@IdentifierFactory<G> @TO@ SingleVariableDeclaration@@IdentifierFactory<G> identifierFactory @AT@ 2054 @LENGTH@ 20
---------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<G> @AT@ 2054 @LENGTH@ 17
---------INS SimpleType@@G @TO@ ParameterizedType@@IdentifierFactory<G> @AT@ 2072 @LENGTH@ 1
------INS SimpleName@@identifierFactory @TO@ SingleVariableDeclaration@@IdentifierFactory<G> identifierFactory @AT@ 2075 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals("Failed to resolve endpoint: ref://xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint",e.getMessage()) @TO@ MethodInvocation:assertEquals("Failed to resolve endpoint: ref:xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint",e.getMessage()) @AT@ 1758 @LENGTH@ 161
---UPD MethodInvocation@@assertEquals("Failed to resolve endpoint: ref://xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint",e.getMessage()) @TO@ assertEquals("Failed to resolve endpoint: ref:xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint",e.getMessage()) @AT@ 1758 @LENGTH@ 160
------UPD SimpleName@@MethodName:assertEquals:["Failed to resolve endpoint: ref://xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint", e.getMessage()] @TO@ MethodName:assertEquals:["Failed to resolve endpoint: ref:xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint", e.getMessage()] @AT@ 1758 @LENGTH@ 160
---------UPD StringLiteral@@"Failed to resolve endpoint: ref://xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint" @TO@ "Failed to resolve endpoint: ref:xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint" @AT@ 1771 @LENGTH@ 130


UPD VariableDeclarationStatement@@String expected="{ \"name\" : { \"$regex\" : \"^T.*\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " + "\"city\" : { \"$in\" : [ \"Stockholm\" , \"London\" , \"New York\"]}}"; @TO@ String expected="{ \"name\" : { \"$regex\" : \"^T.*\" , \"$options\" : \"\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " + "\"city\" : { \"$in\" : [ \"Stockholm\" , \"London\" , \"New York\"]}}"; @AT@ 4127 @LENGTH@ 182
---UPD VariableDeclarationFragment@@expected="{ \"name\" : { \"$regex\" : \"^T.*\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " + "\"city\" : { \"$in\" : [ \"Stockholm\" , \"London\" , \"New York\"]}}" @TO@ expected="{ \"name\" : { \"$regex\" : \"^T.*\" , \"$options\" : \"\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " + "\"city\" : { \"$in\" : [ \"Stockholm\" , \"London\" , \"New York\"]}}" @AT@ 4134 @LENGTH@ 174
------UPD InfixExpression@@"{ \"name\" : { \"$regex\" : \"^T.*\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " + "\"city\" : { \"$in\" : [ \"Stockholm\" , \"London\" , \"New York\"]}}" @TO@ "{ \"name\" : { \"$regex\" : \"^T.*\" , \"$options\" : \"\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " + "\"city\" : { \"$in\" : [ \"Stockholm\" , \"London\" , \"New York\"]}}" @AT@ 4145 @LENGTH@ 163
---------UPD StringLiteral@@"{ \"name\" : { \"$regex\" : \"^T.*\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " @TO@ "{ \"name\" : { \"$regex\" : \"^T.*\" , \"$options\" : \"\"} , \"age\" : { \"$gt\" : 20 , \"$lt\" : 80} , " @AT@ 4145 @LENGTH@ 85


UPD ExpressionStatement@@MethodInvocation:assertEquals("Failed to resolve endpoint: xxx://foo due to: No component found with scheme: xxx",e.getMessage()) @TO@ MethodInvocation:assertEquals("Failed to resolve endpoint: xxx:foo due to: No component found with scheme: xxx",e.getMessage()) @AT@ 11930 @LENGTH@ 114
---UPD MethodInvocation@@assertEquals("Failed to resolve endpoint: xxx://foo due to: No component found with scheme: xxx",e.getMessage()) @TO@ assertEquals("Failed to resolve endpoint: xxx:foo due to: No component found with scheme: xxx",e.getMessage()) @AT@ 11930 @LENGTH@ 113
------UPD SimpleName@@MethodName:assertEquals:["Failed to resolve endpoint: xxx://foo due to: No component found with scheme: xxx", e.getMessage()] @TO@ MethodName:assertEquals:["Failed to resolve endpoint: xxx:foo due to: No component found with scheme: xxx", e.getMessage()] @AT@ 11930 @LENGTH@ 113
---------UPD StringLiteral@@"Failed to resolve endpoint: xxx://foo due to: No component found with scheme: xxx" @TO@ "Failed to resolve endpoint: xxx:foo due to: No component found with scheme: xxx" @AT@ 11943 @LENGTH@ 83


UPD IfStatement@@if (status == Status.STATUS_COMMITTED) {  ROOT_LOGGER.debug("commit timer cancellation: " + this.timer);  final TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:case IN_TIMEOUT:case RETRY_TIMEOUT:    this.timer.cancelTimeout();  break;}} else if (status == Status.STATUS_ROLLEDBACK) {ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:this.timer.setTimerState(TimerState.ACTIVE);break;}} @TO@ if (status == Status.STATUS_COMMITTED) {  ROOT_LOGGER.debug("commit timer cancellation: " + this.timer);  this.timer.cancelTimeout();} else if (status == Status.STATUS_ROLLEDBACK) {  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  this.timer.setTimerState(TimerState.ACTIVE);} @AT@ 22996 @LENGTH@ 852
---UPD Block@@ThenBody:{  ROOT_LOGGER.debug("commit timer cancellation: " + this.timer);  final TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:case IN_TIMEOUT:case RETRY_TIMEOUT:    this.timer.cancelTimeout();  break;}} @TO@ ThenBody:{  ROOT_LOGGER.debug("commit timer cancellation: " + this.timer);  this.timer.cancelTimeout();} @AT@ 23035 @LENGTH@ 416
------DEL VariableDeclarationStatement@@final TimerState timerState=this.timer.getState(); @AT@ 23133 @LENGTH@ 52
---------DEL Modifier@@final @AT@ 23133 @LENGTH@ 5
---------DEL SimpleType@@TimerState @AT@ 23139 @LENGTH@ 10
---------DEL VariableDeclarationFragment@@timerState=this.timer.getState() @AT@ 23150 @LENGTH@ 34
------------DEL SimpleName@@timerState @AT@ 23150 @LENGTH@ 10
------------DEL MethodInvocation@@this.timer.getState() @AT@ 23163 @LENGTH@ 21
---------------DEL FieldAccess@@this.timer @AT@ 23163 @LENGTH@ 10
------------------DEL ThisExpression@@this @AT@ 23163 @LENGTH@ 4
------------------DEL SimpleName@@timer @AT@ 23168 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getState:[] @AT@ 23174 @LENGTH@ 10
------DEL SwitchStatement@@switch (timerState) {case CANCELED:case IN_TIMEOUT:case RETRY_TIMEOUT:  this.timer.cancelTimeout();break;} @AT@ 23202 @LENGTH@ 235
---------DEL SimpleName@@timerState @AT@ 23210 @LENGTH@ 10
---------DEL SwitchCase@@case CANCELED: @AT@ 23244 @LENGTH@ 14
------------DEL SimpleName@@CANCELED @AT@ 23249 @LENGTH@ 8
---------DEL SwitchCase@@case IN_TIMEOUT: @AT@ 23279 @LENGTH@ 16
------------DEL SimpleName@@IN_TIMEOUT @AT@ 23284 @LENGTH@ 10
---------DEL SwitchCase@@case RETRY_TIMEOUT: @AT@ 23316 @LENGTH@ 19
------------DEL SimpleName@@RETRY_TIMEOUT @AT@ 23321 @LENGTH@ 13
---------DEL BreakStatement@@ @AT@ 23412 @LENGTH@ 6
------MOV ExpressionStatement@@MethodInvocation:this.timer.cancelTimeout() @TO@ Block@@ThenBody:{  ROOT_LOGGER.debug("commit timer cancellation: " + this.timer);  final TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:case IN_TIMEOUT:case RETRY_TIMEOUT:    this.timer.cancelTimeout();  break;}} @AT@ 23360 @LENGTH@ 27
---UPD Block@@ElseBody:if (status == Status.STATUS_ROLLEDBACK) {  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:    this.timer.setTimerState(TimerState.ACTIVE);  break;}} @TO@ ElseBody:if (status == Status.STATUS_ROLLEDBACK) {  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  this.timer.setTimerState(TimerState.ACTIVE);} @AT@ 23457 @LENGTH@ 391
------UPD IfStatement@@if (status == Status.STATUS_ROLLEDBACK) {  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:    this.timer.setTimerState(TimerState.ACTIVE);  break;}} @TO@ if (status == Status.STATUS_ROLLEDBACK) {  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  this.timer.setTimerState(TimerState.ACTIVE);} @AT@ 23457 @LENGTH@ 391
---------UPD Block@@ThenBody:{  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:    this.timer.setTimerState(TimerState.ACTIVE);  break;}} @TO@ ThenBody:{  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  this.timer.setTimerState(TimerState.ACTIVE);} @AT@ 23497 @LENGTH@ 351
------------DEL VariableDeclarationStatement@@TimerState timerState=this.timer.getState(); @AT@ 23597 @LENGTH@ 46
---------------DEL SimpleType@@TimerState @AT@ 23597 @LENGTH@ 10
---------------DEL VariableDeclarationFragment@@timerState=this.timer.getState() @AT@ 23608 @LENGTH@ 34
------------------DEL SimpleName@@timerState @AT@ 23608 @LENGTH@ 10
------------------DEL MethodInvocation@@this.timer.getState() @AT@ 23621 @LENGTH@ 21
---------------------DEL FieldAccess@@this.timer @AT@ 23621 @LENGTH@ 10
------------------------DEL ThisExpression@@this @AT@ 23621 @LENGTH@ 4
------------------------DEL SimpleName@@timer @AT@ 23626 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:getState:[] @AT@ 23632 @LENGTH@ 10
------------DEL SwitchStatement@@switch (timerState) {case CANCELED:  this.timer.setTimerState(TimerState.ACTIVE);break;} @AT@ 23660 @LENGTH@ 174
---------------DEL SimpleName@@timerState @AT@ 23668 @LENGTH@ 10
---------------DEL SwitchCase@@case CANCELED: @AT@ 23702 @LENGTH@ 14
------------------DEL SimpleName@@CANCELED @AT@ 23707 @LENGTH@ 8
---------------DEL BreakStatement@@ @AT@ 23810 @LENGTH@ 6
------------MOV ExpressionStatement@@MethodInvocation:this.timer.setTimerState(TimerState.ACTIVE) @TO@ Block@@ThenBody:{  ROOT_LOGGER.debug("rollback timer cancellation: " + this.timer);  TimerState timerState=this.timer.getState();switch (timerState) {case CANCELED:    this.timer.setTimerState(TimerState.ACTIVE);  break;}} @AT@ 23741 @LENGTH@ 44


UPD ExpressionStatement@@Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,name,this) @TO@ Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,name,this,false) @AT@ 2999 @LENGTH@ 99
---UPD Assignment@@executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,name,this) @TO@ executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,name,this,false) @AT@ 2999 @LENGTH@ 98
------UPD MethodInvocation@@ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,name,this) @TO@ ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,name,this,false) @AT@ 3017 @LENGTH@ 80
---------UPD SimpleName@@MethodName:getConfiguredExecutorService:[routeContext, name, this] @TO@ MethodName:getConfiguredExecutorService:[routeContext, name, this, false] @AT@ 3043 @LENGTH@ 54
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getConfiguredExecutorService:[routeContext, name, this] @AT@ 3098 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3721 @LENGTH@ 578
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 3806 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3806 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3812 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3819 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:allResourceRoots.addAll(deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS)) @AT@ 4899 @LENGTH@ 97
---DEL MethodInvocation@@allResourceRoots.addAll(deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS)) @AT@ 4899 @LENGTH@ 96
------DEL SimpleName@@Name:allResourceRoots @AT@ 4899 @LENGTH@ 16
------DEL SimpleName@@MethodName:addAll:[deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS)] @AT@ 4916 @LENGTH@ 79
---------DEL MethodInvocation@@deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS) @AT@ 4923 @LENGTH@ 71
------------DEL SimpleName@@Name:deploymentUnit @AT@ 4923 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getAttachmentList:[Attachments.CLASS_PATH_RESOURCE_ROOTS] @AT@ 4938 @LENGTH@ 56
---------------DEL QualifiedName@@Attachments.CLASS_PATH_RESOURCE_ROOTS @AT@ 4956 @LENGTH@ 37
------------------DEL SimpleName@@Attachments @AT@ 4956 @LENGTH@ 11
------------------DEL SimpleName@@CLASS_PATH_RESOURCE_ROOTS @AT@ 4968 @LENGTH@ 25


INS TryStatement@@try {  assertEquals(null,exchange.getIn().getBody(Integer.class));  fail("Should have thrown a TypeConversionException");} catch (TypeConversionException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testMandatoryBody, Exception,  @AT@ 1973 @LENGTH@ 224
---MOV ExpressionStatement@@MethodInvocation:assertEquals(null,exchange.getIn().getBody(Integer.class)) @TO@ TryStatement@@try {  assertEquals(null,exchange.getIn().getBody(Integer.class));  fail("Should have thrown a TypeConversionException");} catch (TypeConversionException e) {} @AT@ 1924 @LENGTH@ 60
---INS ExpressionStatement@@MethodInvocation:fail("Should have thrown a TypeConversionException") @TO@ TryStatement@@try {  assertEquals(null,exchange.getIn().getBody(Integer.class));  fail("Should have thrown a TypeConversionException");} catch (TypeConversionException e) {} @AT@ 2064 @LENGTH@ 53
------INS MethodInvocation@@fail("Should have thrown a TypeConversionException") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown a TypeConversionException") @AT@ 2064 @LENGTH@ 52
---------INS SimpleName@@MethodName:fail:["Should have thrown a TypeConversionException"] @TO@ MethodInvocation@@fail("Should have thrown a TypeConversionException") @AT@ 2064 @LENGTH@ 52
------------INS StringLiteral@@"Should have thrown a TypeConversionException" @TO@ SimpleName@@MethodName:fail:["Should have thrown a TypeConversionException"] @AT@ 2069 @LENGTH@ 46
---INS CatchClause@@catch (TypeConversionException e) {} @TO@ TryStatement@@try {  assertEquals(null,exchange.getIn().getBody(Integer.class));  fail("Should have thrown a TypeConversionException");} catch (TypeConversionException e) {} @AT@ 2128 @LENGTH@ 69
------INS SingleVariableDeclaration@@TypeConversionException e @TO@ CatchClause@@catch (TypeConversionException e) {} @AT@ 2135 @LENGTH@ 25
---------INS SimpleType@@TypeConversionException @TO@ SingleVariableDeclaration@@TypeConversionException e @AT@ 2135 @LENGTH@ 23
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@TypeConversionException e @AT@ 2159 @LENGTH@ 1


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.reset();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.reset();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1897 @LENGTH@ 595
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.reset();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1901 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1901 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1901 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1909 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1925 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1929 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1929 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1929 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 1956 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1929 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1963 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 1974 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 1974 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 1992 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1997 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1999 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1901 @LENGTH@ 24


DEL ExpressionStatement@@MethodInvocation:resourceRegistration.registerOperationHandler(ModelDescriptionConstants.DESCRIBE,aliasHandler,GenericSubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE) @AT@ 4630 @LENGTH@ 195
---DEL MethodInvocation@@resourceRegistration.registerOperationHandler(ModelDescriptionConstants.DESCRIBE,aliasHandler,GenericSubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE) @AT@ 4630 @LENGTH@ 194
------DEL SimpleName@@Name:resourceRegistration @AT@ 4630 @LENGTH@ 20
------DEL SimpleName@@MethodName:registerOperationHandler:[ModelDescriptionConstants.DESCRIBE, aliasHandler, GenericSubsystemDescribeHandler.INSTANCE, false, OperationEntry.EntryType.PRIVATE] @AT@ 4651 @LENGTH@ 173
---------DEL QualifiedName@@ModelDescriptionConstants.DESCRIBE @AT@ 4676 @LENGTH@ 34
------------DEL SimpleName@@ModelDescriptionConstants @AT@ 4676 @LENGTH@ 25
------------DEL SimpleName@@DESCRIBE @AT@ 4702 @LENGTH@ 8
---------DEL SimpleName@@aliasHandler @AT@ 4712 @LENGTH@ 12
---------DEL QualifiedName@@GenericSubsystemDescribeHandler.INSTANCE @AT@ 4742 @LENGTH@ 40
------------DEL SimpleName@@GenericSubsystemDescribeHandler @AT@ 4742 @LENGTH@ 31
------------DEL SimpleName@@INSTANCE @AT@ 4774 @LENGTH@ 8
---------DEL BooleanLiteral@@false @AT@ 4784 @LENGTH@ 5
---------DEL QualifiedName@@OperationEntry.EntryType.PRIVATE @AT@ 4791 @LENGTH@ 32
------------DEL QualifiedName@@OperationEntry.EntryType @AT@ 4791 @LENGTH@ 24
---------------DEL SimpleName@@OperationEntry @AT@ 4791 @LENGTH@ 14
---------------DEL SimpleName@@EntryType @AT@ 4806 @LENGTH@ 9
------------DEL SimpleName@@PRIVATE @AT@ 4816 @LENGTH@ 7


MOV MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model,  @TO@ TypeDeclaration@@[public]RootLoggerRemove, AbstractRemoveStepHandler @AT@ 1846 @LENGTH@ 156


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2067 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2067 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2075 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2089 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2105 @LENGTH@ 23


UPD MethodDeclaration@@public, List<ProcessorDefinition>, MethodName:getOutputs,  @TO@ public, List<ProcessorDefinition<?>>, MethodName:getOutputs,  @AT@ 2136 @LENGTH@ 93
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 2143 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 2148 @LENGTH@ 22
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2148 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2168 @LENGTH@ 1


UPD Block@@ThenBody:{  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @TO@ ThenBody:{  final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE);  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @AT@ 25745 @LENGTH@ 380
---UPD VariableDeclarationStatement@@ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry); @TO@ ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25759 @LENGTH@ 204
------UPD VariableDeclarationFragment@@armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry) @TO@ armdmh=new ApplyRemoteMasterDomainModelHandler(fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry) @AT@ 25795 @LENGTH@ 167
---------UPD ClassInstanceCreation@@ApplyRemoteMasterDomainModelHandler[extensionRegistry, fileRepository, contentRepo, hostControllerInfo, ignoredDomainResourceRegistry] @TO@ ApplyRemoteMasterDomainModelHandler[fileRepository, contentRepo, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25804 @LENGTH@ 158
------------DEL SimpleName@@extensionRegistry @AT@ 25844 @LENGTH@ 17
---INS VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @TO@ Block@@ThenBody:{  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @AT@ 25832 @LENGTH@ 133
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25832 @LENGTH@ 5
------INS SimpleType@@ApplyExtensionsHandler @TO@ VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25838 @LENGTH@ 22
------INS VariableDeclarationFragment@@aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry) @TO@ VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25861 @LENGTH@ 103
---------INS SimpleName@@aexh @TO@ VariableDeclarationFragment@@aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry) @AT@ 25861 @LENGTH@ 4
---------INS ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @TO@ VariableDeclarationFragment@@aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry) @AT@ 25868 @LENGTH@ 96
------------INS New@@new @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25868 @LENGTH@ 3
------------INS SimpleType@@ApplyExtensionsHandler @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25872 @LENGTH@ 22
------------INS SimpleName@@extensionRegistry @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25895 @LENGTH@ 17
------------INS SimpleName@@hostControllerInfo @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25914 @LENGTH@ 18
------------INS SimpleName@@ignoredDomainResourceRegistry @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25934 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @TO@ Block@@ThenBody:{  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @AT@ 25978 @LENGTH@ 107
------INS MethodInvocation@@root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @TO@ ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @AT@ 25978 @LENGTH@ 106
---------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @AT@ 25978 @LENGTH@ 4
---------INS SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @TO@ MethodInvocation@@root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @AT@ 25983 @LENGTH@ 101
------------INS QualifiedName@@ApplyExtensionsHandler.OPERATION_NAME @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26008 @LENGTH@ 37
---------------INS SimpleName@@ApplyExtensionsHandler @TO@ QualifiedName@@ApplyExtensionsHandler.OPERATION_NAME @AT@ 26008 @LENGTH@ 22
---------------INS SimpleName@@OPERATION_NAME @TO@ QualifiedName@@ApplyExtensionsHandler.OPERATION_NAME @AT@ 26031 @LENGTH@ 14
------------INS SimpleName@@aexh @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26047 @LENGTH@ 4
------------INS SimpleName@@aexh @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26053 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26059 @LENGTH@ 5
------------INS QualifiedName@@EntryType.PRIVATE @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26066 @LENGTH@ 17
---------------INS SimpleName@@EntryType @TO@ QualifiedName@@EntryType.PRIVATE @AT@ 26066 @LENGTH@ 9
---------------INS SimpleName@@PRIVATE @TO@ QualifiedName@@EntryType.PRIVATE @AT@ 26076 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:ejbJar.addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml") @TO@ MethodInvocation:ejbJar.addAsManifestResource(new StringAsset("<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>"),"beans.xml") @AT@ 3997 @LENGTH@ 63
---UPD MethodInvocation@@ejbJar.addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml") @TO@ ejbJar.addAsManifestResource(new StringAsset("<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>"),"beans.xml") @AT@ 3997 @LENGTH@ 62
------UPD SimpleName@@MethodName:addAsManifestResource:[EmptyAsset.INSTANCE, "beans.xml"] @TO@ MethodName:addAsManifestResource:[new StringAsset("<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>"), "beans.xml"] @AT@ 4004 @LENGTH@ 55
---------DEL QualifiedName@@EmptyAsset.INSTANCE @AT@ 4026 @LENGTH@ 19
------------DEL SimpleName@@EmptyAsset @AT@ 4026 @LENGTH@ 10
------------DEL SimpleName@@INSTANCE @AT@ 4037 @LENGTH@ 8
---------INS ClassInstanceCreation@@StringAsset["<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>"] @TO@ SimpleName@@MethodName:addAsManifestResource:[EmptyAsset.INSTANCE, "beans.xml"] @AT@ 4129 @LENGTH@ 152
------------INS New@@new @TO@ ClassInstanceCreation@@StringAsset["<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>"] @AT@ 4129 @LENGTH@ 3
------------INS SimpleType@@StringAsset @TO@ ClassInstanceCreation@@StringAsset["<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>"] @AT@ 4133 @LENGTH@ 11
------------INS InfixExpression@@"<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>" @TO@ ClassInstanceCreation@@StringAsset["<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>"] @AT@ 4145 @LENGTH@ 135
---------------INS InfixExpression@@"<beans>" + "<decorators><class>" @TO@ InfixExpression@@"<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>" @AT@ 4145 @LENGTH@ 49
------------------INS StringLiteral@@"<beans>" @TO@ InfixExpression@@"<beans>" + "<decorators><class>" @AT@ 4145 @LENGTH@ 9
------------------INS Operator@@+ @TO@ InfixExpression@@"<beans>" + "<decorators><class>" @AT@ 4154 @LENGTH@ 1
------------------INS StringLiteral@@"<decorators><class>" @TO@ InfixExpression@@"<beans>" + "<decorators><class>" @AT@ 4173 @LENGTH@ 21
---------------INS Operator@@+ @TO@ InfixExpression@@"<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>" @AT@ 4194 @LENGTH@ 1
---------------INS MethodInvocation@@CDIDecorator.class.getName() @TO@ InfixExpression@@"<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>" @AT@ 4197 @LENGTH@ 28
------------------INS TypeLiteral@@CDIDecorator.class @TO@ MethodInvocation@@CDIDecorator.class.getName() @AT@ 4197 @LENGTH@ 18
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@CDIDecorator.class.getName() @AT@ 4216 @LENGTH@ 9
---------------INS StringLiteral@@"</class></decorators>" @TO@ InfixExpression@@"<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>" @AT@ 4228 @LENGTH@ 23
---------------INS StringLiteral@@"</beans>" @TO@ InfixExpression@@"<beans>" + "<decorators><class>" + CDIDecorator.class.getName() + "</class></decorators>"+ "</beans>" @AT@ 4270 @LENGTH@ 10


INS MethodDeclaration@@OperationFailedException, MethodName:propertyValueNotDefined, String propertyKey,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]InfinispanMessages,  @AT@ 6245 @LENGTH@ 44
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:propertyValueNotDefined, String propertyKey,  @AT@ 6220 @LENGTH@ 24
---INS SimpleName@@MethodName:propertyValueNotDefined @TO@ MethodDeclaration@@OperationFailedException, MethodName:propertyValueNotDefined, String propertyKey,  @AT@ 6245 @LENGTH@ 23
---INS SingleVariableDeclaration@@String propertyKey @TO@ MethodDeclaration@@OperationFailedException, MethodName:propertyValueNotDefined, String propertyKey,  @AT@ 6269 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String propertyKey @AT@ 6269 @LENGTH@ 6
------INS SimpleName@@propertyKey @TO@ SingleVariableDeclaration@@String propertyKey @AT@ 6276 @LENGTH@ 11


INS MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]DomainControllerLogger, [BasicLogger] @AT@ 3219 @LENGTH@ 46
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @AT@ 3214 @LENGTH@ 4
---INS SimpleName@@MethodName:warnIgnoringProfileInclude @TO@ MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @AT@ 3219 @LENGTH@ 26
---INS SingleVariableDeclaration@@Location location @TO@ MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @AT@ 3246 @LENGTH@ 17
------INS SimpleType@@Location @TO@ SingleVariableDeclaration@@Location location @AT@ 3246 @LENGTH@ 8
------INS SimpleName@@location @TO@ SingleVariableDeclaration@@Location location @AT@ 3255 @LENGTH@ 8


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyConfiguration();      ROOT_LOGGER.debugf("Mod_cluster ProxyConfiguration %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyConfiguration();      ROOT_LOGGER.debugf("Mod_cluster ProxyConfiguration %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2084 @LENGTH@ 1304
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyConfiguration();      ROOT_LOGGER.debugf("Mod_cluster ProxyConfiguration %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2088 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2088 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2088 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2096 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2112 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2116 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2116 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2116 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2143 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2116 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2150 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2161 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2161 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2179 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2184 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2186 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 2088 @LENGTH@ 24


INS MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @TO@ TypeDeclaration@@[public, final]IOHelper,  @AT@ 7566 @LENGTH@ 399
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7566 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7573 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7580 @LENGTH@ 3
---INS SimpleName@@MethodName:copy @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7584 @LENGTH@ 4
---INS SingleVariableDeclaration@@final Reader input @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7589 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Reader input @AT@ 7589 @LENGTH@ 5
------INS SimpleType@@Reader @TO@ SingleVariableDeclaration@@final Reader input @AT@ 7595 @LENGTH@ 6
------INS SimpleName@@input @TO@ SingleVariableDeclaration@@final Reader input @AT@ 7602 @LENGTH@ 5
---INS SingleVariableDeclaration@@final Writer output @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7609 @LENGTH@ 19
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Writer output @AT@ 7609 @LENGTH@ 5
------INS SimpleType@@Writer @TO@ SingleVariableDeclaration@@final Writer output @AT@ 7615 @LENGTH@ 6
------INS SimpleName@@output @TO@ SingleVariableDeclaration@@final Writer output @AT@ 7622 @LENGTH@ 6
---INS SingleVariableDeclaration@@int bufferSize @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7630 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int bufferSize @AT@ 7630 @LENGTH@ 3
------INS SimpleName@@bufferSize @TO@ SingleVariableDeclaration@@int bufferSize @AT@ 7634 @LENGTH@ 10
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7653 @LENGTH@ 11
---INS VariableDeclarationStatement@@final char[] buffer=new char[bufferSize]; @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7675 @LENGTH@ 43
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final char[] buffer=new char[bufferSize]; @AT@ 7675 @LENGTH@ 5
------INS ArrayType@@char[] @TO@ VariableDeclarationStatement@@final char[] buffer=new char[bufferSize]; @AT@ 7681 @LENGTH@ 6
---------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 7681 @LENGTH@ 4
------INS VariableDeclarationFragment@@buffer=new char[bufferSize] @TO@ VariableDeclarationStatement@@final char[] buffer=new char[bufferSize]; @AT@ 7688 @LENGTH@ 29
---------INS SimpleName@@buffer @TO@ VariableDeclarationFragment@@buffer=new char[bufferSize] @AT@ 7688 @LENGTH@ 6
---------INS ArrayCreation@@new char[bufferSize] @TO@ VariableDeclarationFragment@@buffer=new char[bufferSize] @AT@ 7697 @LENGTH@ 20
------------INS ArrayType@@char[] @TO@ ArrayCreation@@new char[bufferSize] @AT@ 7701 @LENGTH@ 16
---------------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 7701 @LENGTH@ 4
------------INS SimpleName@@bufferSize @TO@ ArrayCreation@@new char[bufferSize] @AT@ 7706 @LENGTH@ 10
---INS VariableDeclarationStatement@@int n=input.read(buffer); @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7727 @LENGTH@ 27
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int n=input.read(buffer); @AT@ 7727 @LENGTH@ 3
------INS VariableDeclarationFragment@@n=input.read(buffer) @TO@ VariableDeclarationStatement@@int n=input.read(buffer); @AT@ 7731 @LENGTH@ 22
---------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=input.read(buffer) @AT@ 7731 @LENGTH@ 1
---------INS MethodInvocation@@input.read(buffer) @TO@ VariableDeclarationFragment@@n=input.read(buffer) @AT@ 7735 @LENGTH@ 18
------------INS SimpleName@@Name:input @TO@ MethodInvocation@@input.read(buffer) @AT@ 7735 @LENGTH@ 5
------------INS SimpleName@@MethodName:read:[buffer] @TO@ MethodInvocation@@input.read(buffer) @AT@ 7741 @LENGTH@ 12
---------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:read:[buffer] @AT@ 7746 @LENGTH@ 6
---INS VariableDeclarationStatement@@int total=0; @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7763 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int total=0; @AT@ 7763 @LENGTH@ 3
------INS VariableDeclarationFragment@@total=0 @TO@ VariableDeclarationStatement@@int total=0; @AT@ 7767 @LENGTH@ 9
---------INS SimpleName@@total @TO@ VariableDeclarationFragment@@total=0 @AT@ 7767 @LENGTH@ 5
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@total=0 @AT@ 7775 @LENGTH@ 1
---INS WhileStatement@@while (-1 != n) {  output.write(buffer,0,n);  total+=n;  n=input.read(buffer);} @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7786 @LENGTH@ 127
------INS InfixExpression@@-1 != n @TO@ WhileStatement@@while (-1 != n) {  output.write(buffer,0,n);  total+=n;  n=input.read(buffer);} @AT@ 7793 @LENGTH@ 7
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@-1 != n @AT@ 7793 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 7793 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 7794 @LENGTH@ 1
---------INS Operator@@!= @TO@ InfixExpression@@-1 != n @AT@ 7795 @LENGTH@ 2
---------INS SimpleName@@n @TO@ InfixExpression@@-1 != n @AT@ 7799 @LENGTH@ 1
------INS Block@@WhileBody:{  output.write(buffer,0,n);  total+=n;  n=input.read(buffer);} @TO@ WhileStatement@@while (-1 != n) {  output.write(buffer,0,n);  total+=n;  n=input.read(buffer);} @AT@ 7802 @LENGTH@ 111
---------INS ExpressionStatement@@MethodInvocation:output.write(buffer,0,n) @TO@ Block@@WhileBody:{  output.write(buffer,0,n);  total+=n;  n=input.read(buffer);} @AT@ 7816 @LENGTH@ 27
------------INS MethodInvocation@@output.write(buffer,0,n) @TO@ ExpressionStatement@@MethodInvocation:output.write(buffer,0,n) @AT@ 7816 @LENGTH@ 26
---------------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.write(buffer,0,n) @AT@ 7816 @LENGTH@ 6
---------------INS SimpleName@@MethodName:write:[buffer, 0, n] @TO@ MethodInvocation@@output.write(buffer,0,n) @AT@ 7823 @LENGTH@ 19
------------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:write:[buffer, 0, n] @AT@ 7829 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:write:[buffer, 0, n] @AT@ 7837 @LENGTH@ 1
------------------INS SimpleName@@n @TO@ SimpleName@@MethodName:write:[buffer, 0, n] @AT@ 7840 @LENGTH@ 1
---------INS ExpressionStatement@@Assignment:total+=n @TO@ Block@@WhileBody:{  output.write(buffer,0,n);  total+=n;  n=input.read(buffer);} @AT@ 7856 @LENGTH@ 11
------------INS Assignment@@total+=n @TO@ ExpressionStatement@@Assignment:total+=n @AT@ 7856 @LENGTH@ 10
---------------INS SimpleName@@total @TO@ Assignment@@total+=n @AT@ 7856 @LENGTH@ 5
---------------INS Operator@@+= @TO@ Assignment@@total+=n @AT@ 7861 @LENGTH@ 2
---------------INS SimpleName@@n @TO@ Assignment@@total+=n @AT@ 7865 @LENGTH@ 1
---------INS ExpressionStatement@@Assignment:n=input.read(buffer) @TO@ Block@@WhileBody:{  output.write(buffer,0,n);  total+=n;  n=input.read(buffer);} @AT@ 7880 @LENGTH@ 23
------------INS Assignment@@n=input.read(buffer) @TO@ ExpressionStatement@@Assignment:n=input.read(buffer) @AT@ 7880 @LENGTH@ 22
---------------INS SimpleName@@n @TO@ Assignment@@n=input.read(buffer) @AT@ 7880 @LENGTH@ 1
---------------INS Operator@@= @TO@ Assignment@@n=input.read(buffer) @AT@ 7881 @LENGTH@ 1
---------------INS MethodInvocation@@input.read(buffer) @TO@ Assignment@@n=input.read(buffer) @AT@ 7884 @LENGTH@ 18
------------------INS SimpleName@@Name:input @TO@ MethodInvocation@@input.read(buffer) @AT@ 7884 @LENGTH@ 5
------------------INS SimpleName@@MethodName:read:[buffer] @TO@ MethodInvocation@@input.read(buffer) @AT@ 7890 @LENGTH@ 12
---------------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:read:[buffer] @AT@ 7895 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:output.flush() @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7922 @LENGTH@ 15
------INS MethodInvocation@@output.flush() @TO@ ExpressionStatement@@MethodInvocation:output.flush() @AT@ 7922 @LENGTH@ 14
---------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.flush() @AT@ 7922 @LENGTH@ 6
---------INS SimpleName@@MethodName:flush:[] @TO@ MethodInvocation@@output.flush() @AT@ 7929 @LENGTH@ 7
---INS ReturnStatement@@SimpleName:total @TO@ MethodDeclaration@@public, static, int, MethodName:copy, final Reader input, final Writer output, int bufferSize, IOException,  @AT@ 7946 @LENGTH@ 13
------INS SimpleName@@total @TO@ ReturnStatement@@SimpleName:total @AT@ 7953 @LENGTH@ 5


UPD IfStatement@@if (beanMetaData == null || beanMetaData.isEntity()) {  return;} @TO@ if (componentConfiguration.isEntity() || beanMetaData == null) {  return;} @AT@ 3263 @LENGTH@ 83
---UPD InfixExpression@@beanMetaData == null || beanMetaData.isEntity() @TO@ componentConfiguration.isEntity() || beanMetaData == null @AT@ 3266 @LENGTH@ 47
------INS MethodInvocation@@componentConfiguration.isEntity() @TO@ InfixExpression@@beanMetaData == null || beanMetaData.isEntity() @AT@ 3266 @LENGTH@ 33
---------INS SimpleName@@Name:componentConfiguration @TO@ MethodInvocation@@componentConfiguration.isEntity() @AT@ 3266 @LENGTH@ 22
---------INS SimpleName@@MethodName:isEntity:[] @TO@ MethodInvocation@@componentConfiguration.isEntity() @AT@ 3289 @LENGTH@ 10
------DEL Operator@@|| @AT@ 3286 @LENGTH@ 2
------DEL MethodInvocation@@beanMetaData.isEntity() @AT@ 3290 @LENGTH@ 23
---------DEL SimpleName@@Name:beanMetaData @AT@ 3290 @LENGTH@ 12
---------DEL SimpleName@@MethodName:isEntity:[] @AT@ 3303 @LENGTH@ 10
------INS Operator@@|| @TO@ InfixExpression@@beanMetaData == null || beanMetaData.isEntity() @AT@ 3299 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupInclude(reader.getLocation()) @AT@ 17968 @LENGTH@ 82
---UPD MethodInvocation@@HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupInclude(reader.getLocation()) @AT@ 17968 @LENGTH@ 81
------UPD SimpleName@@MethodName:warnIgnoringSocketBindingGroupIgnore:[reader.getLocation()] @TO@ MethodName:warnIgnoringSocketBindingGroupInclude:[reader.getLocation()] @AT@ 17991 @LENGTH@ 58


INS MethodDeclaration@@public, voidMethodName:StringLengthValidator, final int min, final boolean nullable, final boolean allowExpressions,  @TO@ TypeDeclaration@@[public]StringLengthValidator, ModelTypeValidator[MinMaxValidator] @AT@ 1987 @LENGTH@ 170
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:StringLengthValidator, final int min, final boolean nullable, final boolean allowExpressions,  @AT@ 1987 @LENGTH@ 6
---INS SimpleName@@MethodName:StringLengthValidator @TO@ MethodDeclaration@@public, voidMethodName:StringLengthValidator, final int min, final boolean nullable, final boolean allowExpressions,  @AT@ 1994 @LENGTH@ 21
---INS SingleVariableDeclaration@@final int min @TO@ MethodDeclaration@@public, voidMethodName:StringLengthValidator, final int min, final boolean nullable, final boolean allowExpressions,  @AT@ 2016 @LENGTH@ 13
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final int min @AT@ 2016 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@final int min @AT@ 2022 @LENGTH@ 3
------INS SimpleName@@min @TO@ SingleVariableDeclaration@@final int min @AT@ 2026 @LENGTH@ 3
---INS SingleVariableDeclaration@@final boolean nullable @TO@ MethodDeclaration@@public, voidMethodName:StringLengthValidator, final int min, final boolean nullable, final boolean allowExpressions,  @AT@ 2031 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final boolean nullable @AT@ 2031 @LENGTH@ 5
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@final boolean nullable @AT@ 2037 @LENGTH@ 7
------INS SimpleName@@nullable @TO@ SingleVariableDeclaration@@final boolean nullable @AT@ 2045 @LENGTH@ 8
---INS SingleVariableDeclaration@@final boolean allowExpressions @TO@ MethodDeclaration@@public, voidMethodName:StringLengthValidator, final int min, final boolean nullable, final boolean allowExpressions,  @AT@ 2055 @LENGTH@ 30
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final boolean allowExpressions @AT@ 2055 @LENGTH@ 5
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@final boolean allowExpressions @AT@ 2061 @LENGTH@ 7
------INS SimpleName@@allowExpressions @TO@ SingleVariableDeclaration@@final boolean allowExpressions @AT@ 2069 @LENGTH@ 16
---INS ConstructorInvocation@@this(min,Integer.MAX_VALUE,nullable,allowExpressions); @TO@ MethodDeclaration@@public, voidMethodName:StringLengthValidator, final int min, final boolean nullable, final boolean allowExpressions,  @AT@ 2097 @LENGTH@ 54
------INS SimpleName@@min @TO@ ConstructorInvocation@@this(min,Integer.MAX_VALUE,nullable,allowExpressions); @AT@ 2102 @LENGTH@ 3
------INS QualifiedName@@Integer.MAX_VALUE @TO@ ConstructorInvocation@@this(min,Integer.MAX_VALUE,nullable,allowExpressions); @AT@ 2106 @LENGTH@ 17
---------INS SimpleName@@Integer @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 2106 @LENGTH@ 7
---------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 2114 @LENGTH@ 9
------INS SimpleName@@nullable @TO@ ConstructorInvocation@@this(min,Integer.MAX_VALUE,nullable,allowExpressions); @AT@ 2124 @LENGTH@ 8
------INS SimpleName@@allowExpressions @TO@ ConstructorInvocation@@this(min,Integer.MAX_VALUE,nullable,allowExpressions); @AT@ 2133 @LENGTH@ 16


UPD TypeDeclaration@@[public, abstract]AbstractCombinerTest, TestCase @TO@ [public, abstract]AbstractCombinerTest,  @AT@ 1425 @LENGTH@ 1764
---DEL SimpleType@@TestCase @AT@ 1476 @LENGTH@ 8


UPD MethodDeclaration@@private, void, MethodName:displayProfile, Profile profile,  @TO@ private, void, MethodName:displayProfile, Profile p,  @AT@ 2848 @LENGTH@ 3408
---UPD SingleVariableDeclaration@@Profile profile @TO@ Profile p @AT@ 2876 @LENGTH@ 15
------UPD SimpleName@@profile @TO@ p @AT@ 2884 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:output.println("Profile id: " + profile.getId()) @TO@ MethodInvocation:output.println("Profile id: " + p.getId()) @AT@ 2955 @LENGTH@ 49
------UPD MethodInvocation@@output.println("Profile id: " + profile.getId()) @TO@ output.println("Profile id: " + p.getId()) @AT@ 2955 @LENGTH@ 48
---------UPD SimpleName@@MethodName:println:["Profile id: " + profile.getId()] @TO@ MethodName:println:["Profile id: " + p.getId()] @AT@ 2962 @LENGTH@ 41
------------UPD InfixExpression@@"Profile id: " + profile.getId() @TO@ "Profile id: " + p.getId() @AT@ 2970 @LENGTH@ 32
---------------UPD MethodInvocation@@profile.getId() @TO@ p.getId() @AT@ 2987 @LENGTH@ 15
------------------UPD SimpleName@@Name:profile @TO@ Name:p @AT@ 2987 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:output.println("Version   : " + profile.getVersion()) @TO@ MethodInvocation:output.println("Version   : " + p.getVersion()) @AT@ 3013 @LENGTH@ 54
------UPD MethodInvocation@@output.println("Version   : " + profile.getVersion()) @TO@ output.println("Version   : " + p.getVersion()) @AT@ 3013 @LENGTH@ 53
---------UPD SimpleName@@MethodName:println:["Version   : " + profile.getVersion()] @TO@ MethodName:println:["Version   : " + p.getVersion()] @AT@ 3020 @LENGTH@ 46
------------UPD InfixExpression@@"Version   : " + profile.getVersion() @TO@ "Version   : " + p.getVersion() @AT@ 3028 @LENGTH@ 37
---------------UPD MethodInvocation@@profile.getVersion() @TO@ p.getVersion() @AT@ 3045 @LENGTH@ 20
------------------UPD SimpleName@@Name:profile @TO@ Name:p @AT@ 3045 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:output.println("Parents   : " + toString(profile.getParents())) @TO@ MethodInvocation:output.println("Parents   : " + toString(p.getParents())) @AT@ 3077 @LENGTH@ 64
------UPD MethodInvocation@@output.println("Parents   : " + toString(profile.getParents())) @TO@ output.println("Parents   : " + toString(p.getParents())) @AT@ 3077 @LENGTH@ 63
---------UPD SimpleName@@MethodName:println:["Parents   : " + toString(profile.getParents())] @TO@ MethodName:println:["Parents   : " + toString(p.getParents())] @AT@ 3084 @LENGTH@ 56
------------UPD InfixExpression@@"Parents   : " + toString(profile.getParents()) @TO@ "Parents   : " + toString(p.getParents()) @AT@ 3092 @LENGTH@ 47
---------------UPD MethodInvocation@@toString(profile.getParents()) @TO@ toString(p.getParents()) @AT@ 3109 @LENGTH@ 30
------------------UPD SimpleName@@MethodName:toString:[profile.getParents()] @TO@ MethodName:toString:[p.getParents()] @AT@ 3109 @LENGTH@ 30
---------------------UPD MethodInvocation@@profile.getParents() @TO@ p.getParents() @AT@ 3118 @LENGTH@ 20
------------------------UPD SimpleName@@Name:profile @TO@ Name:p @AT@ 3118 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:output.printf("Associated Containers : %s\n",toString(profile.getAssociatedContainers())) @TO@ MethodInvocation:output.printf("Associated Containers : %s\n",toString(p.getAssociatedContainers())) @AT@ 3151 @LENGTH@ 91
------UPD MethodInvocation@@output.printf("Associated Containers : %s\n",toString(profile.getAssociatedContainers())) @TO@ output.printf("Associated Containers : %s\n",toString(p.getAssociatedContainers())) @AT@ 3151 @LENGTH@ 90
---------UPD SimpleName@@MethodName:printf:["Associated Containers : %s\n", toString(profile.getAssociatedContainers())] @TO@ MethodName:printf:["Associated Containers : %s\n", toString(p.getAssociatedContainers())] @AT@ 3158 @LENGTH@ 83
------------UPD MethodInvocation@@toString(profile.getAssociatedContainers()) @TO@ toString(p.getAssociatedContainers()) @AT@ 3197 @LENGTH@ 43
---------------UPD SimpleName@@MethodName:toString:[profile.getAssociatedContainers()] @TO@ MethodName:toString:[p.getAssociatedContainers()] @AT@ 3197 @LENGTH@ 43
------------------UPD MethodInvocation@@profile.getAssociatedContainers() @TO@ p.getAssociatedContainers() @AT@ 3206 @LENGTH@ 33
---------------------UPD SimpleName@@Name:profile @TO@ Name:p @AT@ 3206 @LENGTH@ 7
---INS VariableDeclarationStatement@@Profile profile=overlay ? p.getOverlay() : p; @TO@ MethodDeclaration@@private, void, MethodName:displayProfile, Profile profile,  @AT@ 3222 @LENGTH@ 47
------INS SimpleType@@Profile @TO@ VariableDeclarationStatement@@Profile profile=overlay ? p.getOverlay() : p; @AT@ 3222 @LENGTH@ 7
------INS VariableDeclarationFragment@@profile=overlay ? p.getOverlay() : p @TO@ VariableDeclarationStatement@@Profile profile=overlay ? p.getOverlay() : p; @AT@ 3230 @LENGTH@ 38
---------INS SimpleName@@profile @TO@ VariableDeclarationFragment@@profile=overlay ? p.getOverlay() : p @AT@ 3230 @LENGTH@ 7
---------INS ConditionalExpression@@overlay ? p.getOverlay() : p @TO@ VariableDeclarationFragment@@profile=overlay ? p.getOverlay() : p @AT@ 3240 @LENGTH@ 28
------------INS SimpleName@@overlay @TO@ ConditionalExpression@@overlay ? p.getOverlay() : p @AT@ 3240 @LENGTH@ 7
------------INS MethodInvocation@@p.getOverlay() @TO@ ConditionalExpression@@overlay ? p.getOverlay() : p @AT@ 3250 @LENGTH@ 14
---------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getOverlay() @AT@ 3250 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getOverlay:[] @TO@ MethodInvocation@@p.getOverlay() @AT@ 3252 @LENGTH@ 12
------------INS SimpleName@@p @TO@ ConditionalExpression@@overlay ? p.getOverlay() : p @AT@ 3267 @LENGTH@ 1
---UPD VariableDeclarationStatement@@Map<String,Map<String,String>> configuration=overlay ? profile.getOverlay().getConfigurations() : profile.getConfigurations(); @TO@ Map<String,Map<String,String>> configuration=profile.getConfigurations(); @AT@ 3252 @LENGTH@ 130
------UPD VariableDeclarationFragment@@configuration=overlay ? profile.getOverlay().getConfigurations() : profile.getConfigurations() @TO@ configuration=profile.getConfigurations() @AT@ 3285 @LENGTH@ 96
---------DEL ConditionalExpression@@overlay ? profile.getOverlay().getConfigurations() : profile.getConfigurations() @AT@ 3301 @LENGTH@ 80
------------DEL SimpleName@@overlay @AT@ 3301 @LENGTH@ 7
------------DEL MethodInvocation@@profile.getOverlay().getConfigurations() @AT@ 3311 @LENGTH@ 40
---------------DEL MethodInvocation@@MethodName:getOverlay:[] @AT@ 3311 @LENGTH@ 20
---------------DEL SimpleName@@Name:profile @AT@ 3311 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getConfigurations:[] @AT@ 3332 @LENGTH@ 19
------------DEL MethodInvocation@@profile.getConfigurations() @AT@ 3354 @LENGTH@ 27
---------INS MethodInvocation@@profile.getConfigurations() @TO@ VariableDeclarationFragment@@configuration=overlay ? profile.getOverlay().getConfigurations() : profile.getConfigurations() @AT@ 3328 @LENGTH@ 27
------------MOV SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getConfigurations() @AT@ 3354 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getConfigurations:[] @TO@ MethodInvocation@@profile.getConfigurations() @AT@ 3362 @LENGTH@ 19
---UPD VariableDeclarationStatement@@Map<String,String> agentConfiguration=overlay ? profile.getOverlay().getContainerConfiguration() : profile.getContainerConfiguration(); @TO@ Map<String,String> agentConfiguration=profile.getContainerConfiguration(); @AT@ 3391 @LENGTH@ 138
------UPD VariableDeclarationFragment@@agentConfiguration=overlay ? profile.getOverlay().getContainerConfiguration() : profile.getContainerConfiguration() @TO@ agentConfiguration=profile.getContainerConfiguration() @AT@ 3410 @LENGTH@ 118
---------INS MethodInvocation@@profile.getContainerConfiguration() @TO@ VariableDeclarationFragment@@agentConfiguration=overlay ? profile.getOverlay().getContainerConfiguration() : profile.getContainerConfiguration() @AT@ 3405 @LENGTH@ 35
------------MOV SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getContainerConfiguration() @AT@ 3493 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getContainerConfiguration:[] @TO@ MethodInvocation@@profile.getContainerConfiguration() @AT@ 3501 @LENGTH@ 27
---------DEL ConditionalExpression@@overlay ? profile.getOverlay().getContainerConfiguration() : profile.getContainerConfiguration() @AT@ 3432 @LENGTH@ 96
------------DEL SimpleName@@overlay @AT@ 3432 @LENGTH@ 7
------------DEL MethodInvocation@@profile.getOverlay().getContainerConfiguration() @AT@ 3442 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getOverlay:[] @AT@ 3442 @LENGTH@ 20
---------------DEL SimpleName@@Name:profile @AT@ 3442 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getContainerConfiguration:[] @AT@ 3463 @LENGTH@ 27
------------DEL MethodInvocation@@profile.getContainerConfiguration() @AT@ 3493 @LENGTH@ 35


INS IfStatement@@if (rootNode == null) {  try {    readRootNode();  } catch (  Exception e) {    throw new RuntimeException(e);  }} @TO@ MethodDeclaration@@public, URI, MethodName:getRemoteEjbURL,  @AT@ 14899 @LENGTH@ 180
---INS InfixExpression@@rootNode == null @TO@ IfStatement@@if (rootNode == null) {  try {    readRootNode();  } catch (  Exception e) {    throw new RuntimeException(e);  }} @AT@ 14903 @LENGTH@ 16
------INS SimpleName@@rootNode @TO@ InfixExpression@@rootNode == null @AT@ 14903 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@rootNode == null @AT@ 14911 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@rootNode == null @AT@ 14915 @LENGTH@ 4
---INS Block@@ThenBody:{  try {    readRootNode();  } catch (  Exception e) {    throw new RuntimeException(e);  }} @TO@ IfStatement@@if (rootNode == null) {  try {    readRootNode();  } catch (  Exception e) {    throw new RuntimeException(e);  }} @AT@ 14921 @LENGTH@ 158
------INS TryStatement@@try {  readRootNode();} catch (Exception e) {  throw new RuntimeException(e);} @TO@ Block@@ThenBody:{  try {    readRootNode();  } catch (  Exception e) {    throw new RuntimeException(e);  }} @AT@ 14935 @LENGTH@ 134
---------INS ExpressionStatement@@MethodInvocation:readRootNode() @TO@ TryStatement@@try {  readRootNode();} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 14957 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:readRootNode:[] @TO@ ExpressionStatement@@MethodInvocation:readRootNode() @AT@ 14957 @LENGTH@ 14
---------INS CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @TO@ TryStatement@@try {  readRootNode();} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 14987 @LENGTH@ 82
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @AT@ 14994 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 14994 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 15004 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @AT@ 15025 @LENGTH@ 30
---------------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 15031 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 15031 @LENGTH@ 3
------------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 15035 @LENGTH@ 16
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 15052 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("timer:foo?repeatCount=1").log("Timer triggered").bean(MyNotificationService.class,"createNotification").bean(MyNotificationService.class,"sendNotification") @TO@ MethodInvocation:from("timer:foo?delay=500&repeatCount=1").log("Timer triggered").bean(MyNotificationService.class,"createNotification").bean(MyNotificationService.class,"sendNotification") @AT@ 1527 @LENGTH@ 228
---UPD MethodInvocation@@from("timer:foo?repeatCount=1").log("Timer triggered").bean(MyNotificationService.class,"createNotification").bean(MyNotificationService.class,"sendNotification") @TO@ from("timer:foo?delay=500&repeatCount=1").log("Timer triggered").bean(MyNotificationService.class,"createNotification").bean(MyNotificationService.class,"sendNotification") @AT@ 1527 @LENGTH@ 227
------UPD MethodInvocation@@MethodName:from:["timer:foo?repeatCount=1"] @TO@ MethodName:from:["timer:foo?delay=500&repeatCount=1"] @AT@ 1527 @LENGTH@ 31
---------UPD StringLiteral@@"timer:foo?repeatCount=1" @TO@ "timer:foo?delay=500&repeatCount=1" @AT@ 1532 @LENGTH@ 25


UPD IfStatement@@if (!tmp.exists() && !tmp.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(tmp);} @TO@ if (!tmp.exists() || !tmp.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(tmp);} @AT@ 13592 @LENGTH@ 113
---UPD InfixExpression@@!tmp.exists() && !tmp.isDirectory() @TO@ !tmp.exists() || !tmp.isDirectory() @AT@ 13596 @LENGTH@ 35
------UPD Operator@@&& @TO@ || @AT@ 13609 @LENGTH@ 2


UPD ReturnStatement@@MethodInvocation:String.format("--%s=<config>",argument()) @TO@ MethodInvocation:String.format("%s=<config>",argument()) @AT@ 6678 @LENGTH@ 50
---UPD MethodInvocation@@String.format("--%s=<config>",argument()) @TO@ String.format("%s=<config>",argument()) @AT@ 6685 @LENGTH@ 42
------UPD SimpleName@@MethodName:format:["--%s=<config>", argument()] @TO@ MethodName:format:["%s=<config>", argument()] @AT@ 6692 @LENGTH@ 35
---------UPD StringLiteral@@"--%s=<config>" @TO@ "%s=<config>" @AT@ 6699 @LENGTH@ 15


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 4534 @LENGTH@ 167
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 4596 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4596 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4602 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4609 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(250) @TO@ MethodInvocation:oneExchangeDone.matchesMockWaitTime() @AT@ 1877 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(250) @TO@ oneExchangeDone.matchesMockWaitTime() @AT@ 1877 @LENGTH@ 17
------UPD SimpleName@@Name:Thread @TO@ Name:oneExchangeDone @AT@ 1877 @LENGTH@ 6
------UPD SimpleName@@MethodName:sleep:[250] @TO@ MethodName:matchesMockWaitTime:[] @AT@ 1884 @LENGTH@ 10
---------DEL NumberLiteral@@250 @AT@ 1890 @LENGTH@ 3


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]MyMessageToProcessorConverter, [TypeConverter] @AT@ 1964 @LENGTH@ 120
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1964 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1975 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1977 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 1990 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1990 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1990 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1996 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1999 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2005 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2005 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2014 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2024 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2024 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2031 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2048 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2055 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2055 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2065 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2071 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 4337 @LENGTH@ 33
---DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 4337 @LENGTH@ 32
------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 4337 @LENGTH@ 32
---------DEL StringLiteral@@"activemq-data" @AT@ 4353 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR))) @TO@ MethodInvocation:MGMT_OP_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 6194 @LENGTH@ 278
---UPD MethodInvocation@@ROOT_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR))) @TO@ MGMT_OP_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 6194 @LENGTH@ 277
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 6194 @LENGTH@ 11
------UPD SimpleName@@MethodName:errorRevertingOperation:[e, getClass().getSimpleName(), operation.require(ModelDescriptionConstants.OP).asString(), PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR))] @TO@ MethodName:errorRevertingOperation:[e, getClass().getSimpleName(), operation.require(ModelDescriptionConstants.OP).asString(), PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))] @AT@ 6206 @LENGTH@ 265
---------UPD MethodInvocation@@PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)) @TO@ PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)) @AT@ 6393 @LENGTH@ 77
------------UPD SimpleName@@MethodName:pathAddress:[operation.require(ModelDescriptionConstants.OP_ADDR)] @TO@ MethodName:pathAddress:[operation.get(ModelDescriptionConstants.OP_ADDR)] @AT@ 6405 @LENGTH@ 65
---------------UPD MethodInvocation@@operation.require(ModelDescriptionConstants.OP_ADDR) @TO@ operation.get(ModelDescriptionConstants.OP_ADDR) @AT@ 6417 @LENGTH@ 52
------------------UPD SimpleName@@MethodName:require:[ModelDescriptionConstants.OP_ADDR] @TO@ MethodName:get:[ModelDescriptionConstants.OP_ADDR] @AT@ 6427 @LENGTH@ 42


INS MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @TO@ TypeDeclaration@@[public]FabricServiceImpl, [FabricService, FabricServiceImplMBean] @AT@ 9020 @LENGTH@ 206
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9020 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9027 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9034 @LENGTH@ 6
---INS SimpleName@@MethodName:getParentFromURI @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9041 @LENGTH@ 16
---INS SingleVariableDeclaration@@URI uri @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9058 @LENGTH@ 7
------INS SimpleType@@URI @TO@ SingleVariableDeclaration@@URI uri @AT@ 9058 @LENGTH@ 3
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@URI uri @AT@ 9062 @LENGTH@ 3
---INS VariableDeclarationStatement@@String parent=uri.getHost(); @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9077 @LENGTH@ 30
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String parent=uri.getHost(); @AT@ 9077 @LENGTH@ 6
------INS VariableDeclarationFragment@@parent=uri.getHost() @TO@ VariableDeclarationStatement@@String parent=uri.getHost(); @AT@ 9084 @LENGTH@ 22
---------INS SimpleName@@parent @TO@ VariableDeclarationFragment@@parent=uri.getHost() @AT@ 9084 @LENGTH@ 6
---------INS MethodInvocation@@uri.getHost() @TO@ VariableDeclarationFragment@@parent=uri.getHost() @AT@ 9093 @LENGTH@ 13
------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.getHost() @AT@ 9093 @LENGTH@ 3
------------INS SimpleName@@MethodName:getHost:[] @TO@ MethodInvocation@@uri.getHost() @AT@ 9097 @LENGTH@ 9
---INS IfStatement@@if (parent == null) {  parent=uri.getSchemeSpecificPart();} @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9116 @LENGTH@ 81
------INS InfixExpression@@parent == null @TO@ IfStatement@@if (parent == null) {  parent=uri.getSchemeSpecificPart();} @AT@ 9120 @LENGTH@ 14
---------INS SimpleName@@parent @TO@ InfixExpression@@parent == null @AT@ 9120 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@parent == null @AT@ 9126 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@parent == null @AT@ 9130 @LENGTH@ 4
------INS Block@@ThenBody:{  parent=uri.getSchemeSpecificPart();} @TO@ IfStatement@@if (parent == null) {  parent=uri.getSchemeSpecificPart();} @AT@ 9136 @LENGTH@ 61
---------INS ExpressionStatement@@Assignment:parent=uri.getSchemeSpecificPart() @TO@ Block@@ThenBody:{  parent=uri.getSchemeSpecificPart();} @AT@ 9150 @LENGTH@ 37
------------INS Assignment@@parent=uri.getSchemeSpecificPart() @TO@ ExpressionStatement@@Assignment:parent=uri.getSchemeSpecificPart() @AT@ 9150 @LENGTH@ 36
---------------INS SimpleName@@parent @TO@ Assignment@@parent=uri.getSchemeSpecificPart() @AT@ 9150 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@parent=uri.getSchemeSpecificPart() @AT@ 9156 @LENGTH@ 1
---------------INS MethodInvocation@@uri.getSchemeSpecificPart() @TO@ Assignment@@parent=uri.getSchemeSpecificPart() @AT@ 9159 @LENGTH@ 27
------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.getSchemeSpecificPart() @AT@ 9159 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getSchemeSpecificPart:[] @TO@ MethodInvocation@@uri.getSchemeSpecificPart() @AT@ 9163 @LENGTH@ 23
---INS ReturnStatement@@SimpleName:parent @TO@ MethodDeclaration@@public, static, String, MethodName:getParentFromURI, URI uri,  @AT@ 9206 @LENGTH@ 14
------INS SimpleName@@parent @TO@ ReturnStatement@@SimpleName:parent @AT@ 9213 @LENGTH@ 6


DEL MethodDeclaration@@protected, ValidationConfiguration, MethodName:getModelValidationConfiguration,  @AT@ 2164 @LENGTH@ 199
---DEL Modifier@@protected @AT@ 2164 @LENGTH@ 9
---DEL SimpleType@@ValidationConfiguration @AT@ 2174 @LENGTH@ 23
---DEL SimpleName@@MethodName:getModelValidationConfiguration @AT@ 2198 @LENGTH@ 31
---DEL ReturnStatement@@NullLiteral:null @AT@ 2337 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 2344 @LENGTH@ 4


UPD MethodDeclaration@@protected, voidMethodName:EntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, final Map<Method,Interceptor> methodInterceptors, final InterceptorFactoryContext context,  @TO@ protected, voidMethodName:EntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, final Map<Method,Interceptor> methodInterceptors,  @AT@ 2405 @LENGTH@ 936
---DEL SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 2626 @LENGTH@ 39
------DEL Modifier@@final @AT@ 2626 @LENGTH@ 5
------DEL SimpleType@@InterceptorFactoryContext @AT@ 2632 @LENGTH@ 25
------DEL SimpleName@@context @AT@ 2658 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore(),context) @TO@ Assignment:this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore()) @AT@ 2847 @LENGTH@ 84
------UPD Assignment@@this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore(),context) @TO@ this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore()) @AT@ 2847 @LENGTH@ 83
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbStore(),context) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbStore()) @AT@ 2863 @LENGTH@ 67
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbStore(), context] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbStore()] @AT@ 2876 @LENGTH@ 54
---------------DEL SimpleName@@context @AT@ 2922 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate(),context) @TO@ Assignment:this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate()) @AT@ 2940 @LENGTH@ 90
------UPD Assignment@@this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate(),context) @TO@ this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate()) @AT@ 2940 @LENGTH@ 89
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbActivate(),context) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbActivate()) @AT@ 2959 @LENGTH@ 70
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbActivate(), context] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbActivate()] @AT@ 2972 @LENGTH@ 57
---------------DEL SimpleName@@context @AT@ 3021 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad(),context) @TO@ Assignment:this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad()) @AT@ 3039 @LENGTH@ 82
------UPD Assignment@@this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad(),context) @TO@ this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad()) @AT@ 3039 @LENGTH@ 81
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbLoad(),context) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbLoad()) @AT@ 3054 @LENGTH@ 66
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbLoad(), context] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbLoad()] @AT@ 3067 @LENGTH@ 53
---------------DEL SimpleName@@context @AT@ 3112 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate(),context) @TO@ Assignment:this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate()) @AT@ 3130 @LENGTH@ 92
------UPD Assignment@@this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate(),context) @TO@ this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate()) @AT@ 3130 @LENGTH@ 91
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbPassivate(),context) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbPassivate()) @AT@ 3150 @LENGTH@ 71
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbPassivate(), context] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbPassivate()] @AT@ 3163 @LENGTH@ 58
---------------DEL SimpleName@@context @AT@ 3213 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext(),context) @TO@ Assignment:this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext()) @AT@ 3231 @LENGTH@ 104
------UPD Assignment@@this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext(),context) @TO@ this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext()) @AT@ 3231 @LENGTH@ 103
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext(),context) @TO@ ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext()) @AT@ 3257 @LENGTH@ 77
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getUnsetEntityContext(), context] @TO@ MethodName:createInterceptor:[ejbComponent.getUnsetEntityContext()] @AT@ 3270 @LENGTH@ 64
---------------DEL SimpleName@@context @AT@ 3326 @LENGTH@ 7


INS MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 25116 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 25116 @LENGTH@ 6
---INS SimpleType@@ImmutableManagementResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 25123 @LENGTH@ 39
---INS SimpleName@@MethodName:getRootResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 25163 @LENGTH@ 27
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 25207 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 25214 @LENGTH@ 4


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1805 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1805 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1815 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1823 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1839 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1839 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1845 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1862 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1881 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1888 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2687 @LENGTH@ 1112
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2746 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2746 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2752 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2759 @LENGTH@ 11


UPD IfStatement@@if (descriptorData instanceof ITimeoutTarget) {  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }} @TO@ if (descriptorData.isSession() || descriptorData.isMessageDriven()) {  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }  parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex);} @AT@ 4489 @LENGTH@ 313
---DEL InstanceofExpression@@descriptorData instanceof ITimeoutTarget @AT@ 4493 @LENGTH@ 40
------DEL SimpleName@@descriptorData @AT@ 4493 @LENGTH@ 14
------DEL Instanceof@@instanceof @AT@ 4508 @LENGTH@ 10
------DEL SimpleType@@ITimeoutTarget @AT@ 4519 @LENGTH@ 14
---INS InfixExpression@@descriptorData.isSession() || descriptorData.isMessageDriven() @TO@ IfStatement@@if (descriptorData instanceof ITimeoutTarget) {  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }} @AT@ 4495 @LENGTH@ 62
------INS MethodInvocation@@descriptorData.isSession() @TO@ InfixExpression@@descriptorData.isSession() || descriptorData.isMessageDriven() @AT@ 4495 @LENGTH@ 26
---------INS SimpleName@@Name:descriptorData @TO@ MethodInvocation@@descriptorData.isSession() @AT@ 4495 @LENGTH@ 14
---------INS SimpleName@@MethodName:isSession:[] @TO@ MethodInvocation@@descriptorData.isSession() @AT@ 4510 @LENGTH@ 11
------INS Operator@@|| @TO@ InfixExpression@@descriptorData.isSession() || descriptorData.isMessageDriven() @AT@ 4521 @LENGTH@ 2
------INS MethodInvocation@@descriptorData.isMessageDriven() @TO@ InfixExpression@@descriptorData.isSession() || descriptorData.isMessageDriven() @AT@ 4525 @LENGTH@ 32
---------INS SimpleName@@Name:descriptorData @TO@ MethodInvocation@@descriptorData.isMessageDriven() @AT@ 4525 @LENGTH@ 14
---------INS SimpleName@@MethodName:isMessageDriven:[] @TO@ MethodInvocation@@descriptorData.isMessageDriven() @AT@ 4540 @LENGTH@ 17
---UPD Block@@ThenBody:{  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }} @TO@ ThenBody:{  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }  parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex);} @AT@ 4535 @LENGTH@ 267
------MOV ExpressionStatement@@MethodInvocation:parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex) @TO@ Block@@ThenBody:{  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }} @AT@ 4815 @LENGTH@ 93


INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("Super",remote2.getSuperEmployee().getName()) @TO@ MethodDeclaration@@public, void, MethodName:testPassivationMaxSize, Exception,  @AT@ 6984 @LENGTH@ 67
---INS MethodInvocation@@Assert.assertEquals("Super",remote2.getSuperEmployee().getName()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("Super",remote2.getSuperEmployee().getName()) @AT@ 6984 @LENGTH@ 66
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("Super",remote2.getSuperEmployee().getName()) @AT@ 6984 @LENGTH@ 6
------INS SimpleName@@MethodName:assertEquals:["Super", remote2.getSuperEmployee().getName()] @TO@ MethodInvocation@@Assert.assertEquals("Super",remote2.getSuperEmployee().getName()) @AT@ 6991 @LENGTH@ 59
---------INS StringLiteral@@"Super" @TO@ SimpleName@@MethodName:assertEquals:["Super", remote2.getSuperEmployee().getName()] @AT@ 7004 @LENGTH@ 7
---------INS MethodInvocation@@remote2.getSuperEmployee().getName() @TO@ SimpleName@@MethodName:assertEquals:["Super", remote2.getSuperEmployee().getName()] @AT@ 7013 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getSuperEmployee:[] @TO@ MethodInvocation@@remote2.getSuperEmployee().getName() @AT@ 7013 @LENGTH@ 26
------------INS SimpleName@@Name:remote2 @TO@ MethodInvocation@@remote2.getSuperEmployee().getName() @AT@ 7013 @LENGTH@ 7
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@remote2.getSuperEmployee().getName() @AT@ 7040 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:PACKAGES_IN_JAR_CACHE.remove(pu) @TO@ MethodDeclaration@@static, void, MethodName:cleanup, PersistenceUnitMetadata pu,  @AT@ 5972 @LENGTH@ 33
---INS MethodInvocation@@PACKAGES_IN_JAR_CACHE.remove(pu) @TO@ ExpressionStatement@@MethodInvocation:PACKAGES_IN_JAR_CACHE.remove(pu) @AT@ 5972 @LENGTH@ 32
------INS SimpleName@@Name:PACKAGES_IN_JAR_CACHE @TO@ MethodInvocation@@PACKAGES_IN_JAR_CACHE.remove(pu) @AT@ 5972 @LENGTH@ 21
------INS SimpleName@@MethodName:remove:[pu] @TO@ MethodInvocation@@PACKAGES_IN_JAR_CACHE.remove(pu) @AT@ 5994 @LENGTH@ 10
---------INS SimpleName@@pu @TO@ SimpleName@@MethodName:remove:[pu] @AT@ 6001 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:archive.addClasses(OSGiTestSupport.class,EndpointServlet.class) @TO@ MethodInvocation:archive.addClasses(HttpTestSupport.class,OSGiTestSupport.class,EndpointServlet.class) @AT@ 2543 @LENGTH@ 65
---UPD MethodInvocation@@archive.addClasses(OSGiTestSupport.class,EndpointServlet.class) @TO@ archive.addClasses(HttpTestSupport.class,OSGiTestSupport.class,EndpointServlet.class) @AT@ 2543 @LENGTH@ 64
------UPD SimpleName@@MethodName:addClasses:[OSGiTestSupport.class, EndpointServlet.class] @TO@ MethodName:addClasses:[HttpTestSupport.class, OSGiTestSupport.class, EndpointServlet.class] @AT@ 2551 @LENGTH@ 56
---------INS TypeLiteral@@HttpTestSupport.class @TO@ SimpleName@@MethodName:addClasses:[OSGiTestSupport.class, EndpointServlet.class] @AT@ 2562 @LENGTH@ 21


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]SimpleParserException, RuntimeCamelException @AT@ 1080 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1080 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1088 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1095 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1101 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1106 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1106 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1125 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:this.inheritNamespaceTokenPattern=Pattern.compile(token) @TO@ Assignment:this.inheritNamespaceTokenPattern=Pattern.compile(token,Pattern.MULTILINE | Pattern.DOTALL) @AT@ 4227 @LENGTH@ 59
---UPD Assignment@@this.inheritNamespaceTokenPattern=Pattern.compile(token) @TO@ this.inheritNamespaceTokenPattern=Pattern.compile(token,Pattern.MULTILINE | Pattern.DOTALL) @AT@ 4227 @LENGTH@ 58
------UPD MethodInvocation@@Pattern.compile(token) @TO@ Pattern.compile(token,Pattern.MULTILINE | Pattern.DOTALL) @AT@ 4263 @LENGTH@ 22
---------UPD SimpleName@@MethodName:compile:[token] @TO@ MethodName:compile:[token, Pattern.MULTILINE | Pattern.DOTALL] @AT@ 4271 @LENGTH@ 14
------------INS InfixExpression@@Pattern.MULTILINE | Pattern.DOTALL @TO@ SimpleName@@MethodName:compile:[token] @AT@ 4413 @LENGTH@ 34
---------------INS QualifiedName@@Pattern.MULTILINE @TO@ InfixExpression@@Pattern.MULTILINE | Pattern.DOTALL @AT@ 4413 @LENGTH@ 17
------------------INS SimpleName@@Pattern @TO@ QualifiedName@@Pattern.MULTILINE @AT@ 4413 @LENGTH@ 7
------------------INS SimpleName@@MULTILINE @TO@ QualifiedName@@Pattern.MULTILINE @AT@ 4421 @LENGTH@ 9
---------------INS Operator@@| @TO@ InfixExpression@@Pattern.MULTILINE | Pattern.DOTALL @AT@ 4430 @LENGTH@ 1
---------------INS QualifiedName@@Pattern.DOTALL @TO@ InfixExpression@@Pattern.MULTILINE | Pattern.DOTALL @AT@ 4433 @LENGTH@ 14
------------------INS SimpleName@@Pattern @TO@ QualifiedName@@Pattern.DOTALL @AT@ 4433 @LENGTH@ 7
------------------INS SimpleName@@DOTALL @TO@ QualifiedName@@Pattern.DOTALL @AT@ 4441 @LENGTH@ 6


UPD VariableDeclarationStatement@@String[][] res_comments={{"a","b"},{"\n"," "},{}}; @TO@ String[][] res_comments={{"a","b"},{"\n"," "}}; @AT@ 13091 @LENGTH@ 115
---UPD VariableDeclarationFragment@@res_comments={{"a","b"},{"\n"," "},{}} @TO@ res_comments={{"a","b"},{"\n"," "}} @AT@ 13102 @LENGTH@ 103
------UPD ArrayInitializer@@{{"a","b"},{"\n"," "},{}} @TO@ {{"a","b"},{"\n"," "}} @AT@ 13117 @LENGTH@ 88
---------DEL ArrayInitializer@@{} @AT@ 13192 @LENGTH@ 2


UPD VariableDeclarationStatement@@Iterator it=ObjectConverter.iterator("Claus,Jonathan"); @TO@ Iterator<?> it=ObjectConverter.iterator("Claus,Jonathan"); @AT@ 1416 @LENGTH@ 57
---INS ParameterizedType@@Iterator<?> @TO@ VariableDeclarationStatement@@Iterator it=ObjectConverter.iterator("Claus,Jonathan"); @AT@ 1416 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<?> @AT@ 1416 @LENGTH@ 8
------INS WildcardType@@? @TO@ ParameterizedType@@Iterator<?> @AT@ 1425 @LENGTH@ 1
---DEL SimpleType@@Iterator @AT@ 1416 @LENGTH@ 8


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]SimpleIllegalSyntaxException, ExpressionIllegalSyntaxException @AT@ 1060 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1060 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1068 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1075 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1081 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1086 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1086 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1105 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 6557 @LENGTH@ 325
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 6619 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 6619 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 6625 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 6632 @LENGTH@ 11


INS MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @TO@ TypeDeclaration@@[public]PropertiesValueResolver,  @AT@ 2009 @LENGTH@ 131
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @AT@ 2009 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @AT@ 2016 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @AT@ 2023 @LENGTH@ 6
---INS SimpleName@@MethodName:replaceProperties @TO@ MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @AT@ 2030 @LENGTH@ 17
---INS SingleVariableDeclaration@@final String value @TO@ MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @AT@ 2048 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String value @AT@ 2048 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String value @AT@ 2054 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@final String value @AT@ 2061 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:replaceProperties(value,System.getProperties()) @TO@ MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @AT@ 2078 @LENGTH@ 56
------INS MethodInvocation@@replaceProperties(value,System.getProperties()) @TO@ ReturnStatement@@MethodInvocation:replaceProperties(value,System.getProperties()) @AT@ 2085 @LENGTH@ 48
---------INS SimpleName@@MethodName:replaceProperties:[value, System.getProperties()] @TO@ MethodInvocation@@replaceProperties(value,System.getProperties()) @AT@ 2085 @LENGTH@ 48
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:replaceProperties:[value, System.getProperties()] @AT@ 2103 @LENGTH@ 5
------------INS MethodInvocation@@System.getProperties() @TO@ SimpleName@@MethodName:replaceProperties:[value, System.getProperties()] @AT@ 2110 @LENGTH@ 22
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperties() @AT@ 2110 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getProperties:[] @TO@ MethodInvocation@@System.getProperties() @AT@ 2117 @LENGTH@ 15


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("add-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.addProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("add-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.addProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1978 @LENGTH@ 771
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1982 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1982 @LENGTH@ 17
------DEL Operator@@== @AT@ 1999 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2003 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2003 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2003 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2020 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2025 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("add-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.addProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1982 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1982 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1982 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1990 @LENGTH@ 9


INS MethodDeclaration@@String, MethodName:argMasterPort,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS")]ProcessMessages,  @AT@ 11056 @LENGTH@ 16
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:argMasterPort,  @AT@ 11049 @LENGTH@ 6
---INS SimpleName@@MethodName:argMasterPort @TO@ MethodDeclaration@@String, MethodName:argMasterPort,  @AT@ 11056 @LENGTH@ 13


INS MethodDeclaration@@protected, void, MethodName:clearPrimaryKey,  @TO@ TypeDeclaration@@[public]EntityBeanComponentInstance, EjbComponentInstance @AT@ 9394 @LENGTH@ 72
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:clearPrimaryKey,  @AT@ 9394 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:clearPrimaryKey,  @AT@ 9404 @LENGTH@ 4
---INS SimpleName@@MethodName:clearPrimaryKey @TO@ MethodDeclaration@@protected, void, MethodName:clearPrimaryKey,  @AT@ 9409 @LENGTH@ 15
---INS ExpressionStatement@@Assignment:this.primaryKey=null @TO@ MethodDeclaration@@protected, void, MethodName:clearPrimaryKey,  @AT@ 9437 @LENGTH@ 23
------INS Assignment@@this.primaryKey=null @TO@ ExpressionStatement@@Assignment:this.primaryKey=null @AT@ 9437 @LENGTH@ 22
---------INS FieldAccess@@this.primaryKey @TO@ Assignment@@this.primaryKey=null @AT@ 9437 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.primaryKey @AT@ 9437 @LENGTH@ 4
------------INS SimpleName@@primaryKey @TO@ FieldAccess@@this.primaryKey @AT@ 9442 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.primaryKey=null @AT@ 9452 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@this.primaryKey=null @AT@ 9455 @LENGTH@ 4


UPD IfStatement@@if (isAbsolute()) {  String name=getAbsoluteFilePath();  File path=new File(name);  parent=path.getParent();} else {  String name=getRelativeFilePath();  File path=new File(endpointPath,name);  parent=path.getParent();} @TO@ if (isAbsolute()) {  String name=getAbsoluteFilePath();  File path=new File(name);  parent=path.getParent();} else {  String name=getRelativeFilePath();  File path;  if (name != null) {    path=new File(endpointPath,name);  } else {    path=new File(endpointPath);  }  parent=path.getParent();} @AT@ 9469 @LENGTH@ 316
---UPD Block@@ElseBody:{  String name=getRelativeFilePath();  File path=new File(endpointPath,name);  parent=path.getParent();} @TO@ ElseBody:{  String name=getRelativeFilePath();  File path;  if (name != null) {    path=new File(endpointPath,name);  } else {    path=new File(endpointPath);  }  parent=path.getParent();} @AT@ 9632 @LENGTH@ 153
------DEL VariableDeclarationStatement@@File path=new File(endpointPath,name); @AT@ 9695 @LENGTH@ 41
---------DEL VariableDeclarationFragment@@path=new File(endpointPath,name) @AT@ 9700 @LENGTH@ 35
------------DEL ClassInstanceCreation@@File[endpointPath, name] @AT@ 9707 @LENGTH@ 28
------INS VariableDeclarationStatement@@File path; @TO@ Block@@ElseBody:{  String name=getRelativeFilePath();  File path=new File(endpointPath,name);  parent=path.getParent();} @AT@ 9695 @LENGTH@ 10
---------MOV SimpleType@@File @TO@ VariableDeclarationStatement@@File path; @AT@ 9695 @LENGTH@ 4
---------INS VariableDeclarationFragment@@path @TO@ VariableDeclarationStatement@@File path; @AT@ 9700 @LENGTH@ 4
------------MOV SimpleName@@path @TO@ VariableDeclarationFragment@@path @AT@ 9700 @LENGTH@ 4
------INS IfStatement@@if (name != null) {  path=new File(endpointPath,name);} else {  path=new File(endpointPath);} @TO@ Block@@ElseBody:{  String name=getRelativeFilePath();  File path=new File(endpointPath,name);  parent=path.getParent();} @AT@ 9718 @LENGTH@ 154
---------INS InfixExpression@@name != null @TO@ IfStatement@@if (name != null) {  path=new File(endpointPath,name);} else {  path=new File(endpointPath);} @AT@ 9722 @LENGTH@ 12
------------INS SimpleName@@name @TO@ InfixExpression@@name != null @AT@ 9722 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@name != null @AT@ 9726 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@name != null @AT@ 9730 @LENGTH@ 4
---------INS Block@@ThenBody:{  path=new File(endpointPath,name);} @TO@ IfStatement@@if (name != null) {  path=new File(endpointPath,name);} else {  path=new File(endpointPath);} @AT@ 9736 @LENGTH@ 68
------------INS ExpressionStatement@@Assignment:path=new File(endpointPath,name) @TO@ Block@@ThenBody:{  path=new File(endpointPath,name);} @AT@ 9754 @LENGTH@ 36
---------------INS Assignment@@path=new File(endpointPath,name) @TO@ ExpressionStatement@@Assignment:path=new File(endpointPath,name) @AT@ 9754 @LENGTH@ 35
------------------INS SimpleName@@path @TO@ Assignment@@path=new File(endpointPath,name) @AT@ 9754 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@path=new File(endpointPath,name) @AT@ 9758 @LENGTH@ 1
------------------INS ClassInstanceCreation@@File[endpointPath, name] @TO@ Assignment@@path=new File(endpointPath,name) @AT@ 9761 @LENGTH@ 28
---------------------MOV New@@new @TO@ ClassInstanceCreation@@File[endpointPath, name] @AT@ 9707 @LENGTH@ 3
---------------------MOV SimpleType@@File @TO@ ClassInstanceCreation@@File[endpointPath, name] @AT@ 9711 @LENGTH@ 4
---------------------MOV SimpleName@@endpointPath @TO@ ClassInstanceCreation@@File[endpointPath, name] @AT@ 9716 @LENGTH@ 12
---------------------MOV SimpleName@@name @TO@ ClassInstanceCreation@@File[endpointPath, name] @AT@ 9730 @LENGTH@ 4
---------INS Block@@ElseBody:{  path=new File(endpointPath);} @TO@ IfStatement@@if (name != null) {  path=new File(endpointPath,name);} else {  path=new File(endpointPath);} @AT@ 9810 @LENGTH@ 62
------------INS ExpressionStatement@@Assignment:path=new File(endpointPath) @TO@ Block@@ElseBody:{  path=new File(endpointPath);} @AT@ 9828 @LENGTH@ 30
---------------INS Assignment@@path=new File(endpointPath) @TO@ ExpressionStatement@@Assignment:path=new File(endpointPath) @AT@ 9828 @LENGTH@ 29
------------------INS SimpleName@@path @TO@ Assignment@@path=new File(endpointPath) @AT@ 9828 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@path=new File(endpointPath) @AT@ 9832 @LENGTH@ 1
------------------INS ClassInstanceCreation@@File[endpointPath] @TO@ Assignment@@path=new File(endpointPath) @AT@ 9835 @LENGTH@ 22
---------------------INS New@@new @TO@ ClassInstanceCreation@@File[endpointPath] @AT@ 9835 @LENGTH@ 3
---------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[endpointPath] @AT@ 9839 @LENGTH@ 4
---------------------INS SimpleName@@endpointPath @TO@ ClassInstanceCreation@@File[endpointPath] @AT@ 9844 @LENGTH@ 12


UPD MethodDeclaration@@public, List<ProcessorDefinition>, MethodName:getOutputs,  @TO@ public, List<ProcessorDefinition<?>>, MethodName:getOutputs,  @AT@ 1928 @LENGTH@ 93
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 1935 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 1906 @LENGTH@ 22
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1926 @LENGTH@ 1
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1940 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:criteria.put("$in",c.toArray()) @TO@ MethodInvocation:criteria.put("$in",c) @AT@ 4505 @LENGTH@ 33
---UPD MethodInvocation@@criteria.put("$in",c.toArray()) @TO@ criteria.put("$in",c) @AT@ 4505 @LENGTH@ 32
------UPD SimpleName@@MethodName:put:["$in", c.toArray()] @TO@ MethodName:put:["$in", c] @AT@ 4514 @LENGTH@ 23
---------DEL MethodInvocation@@c.toArray() @AT@ 4525 @LENGTH@ 11
------------DEL SimpleName@@Name:c @AT@ 4525 @LENGTH@ 1
------------DEL SimpleName@@MethodName:toArray:[] @AT@ 4527 @LENGTH@ 9
---------INS SimpleName@@c @TO@ SimpleName@@MethodName:put:["$in", c.toArray()] @AT@ 4540 @LENGTH@ 1


UPD Block@@ThenBody:{  TypeConverter converter=e.getContext().getTypeConverter();  T answer=converter.convertTo(type,getExchange(),body);  if (answer != null) {    return answer;  }  answer=converter.convertTo(type,getExchange(),this);  if (answer != null) {    return answer;  }} @TO@ ThenBody:{  TypeConverter converter=e.getContext().getTypeConverter();  T answer=converter.convertTo(type,e,body);  if (answer != null) {    return answer;  }  answer=converter.tryConvertTo(type,e,this);  if (answer != null) {    return answer;  }} @AT@ 2277 @LENGTH@ 745
---UPD VariableDeclarationStatement@@T answer=converter.convertTo(type,getExchange(),body); @TO@ T answer=converter.convertTo(type,e,body); @AT@ 2654 @LENGTH@ 58
------UPD VariableDeclarationFragment@@answer=converter.convertTo(type,getExchange(),body) @TO@ answer=converter.convertTo(type,e,body) @AT@ 2656 @LENGTH@ 55
---------UPD MethodInvocation@@converter.convertTo(type,getExchange(),body) @TO@ converter.convertTo(type,e,body) @AT@ 2665 @LENGTH@ 46
------------UPD SimpleName@@MethodName:convertTo:[type, getExchange(), body] @TO@ MethodName:convertTo:[type, e, body] @AT@ 2675 @LENGTH@ 36
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:convertTo:[type, getExchange(), body] @AT@ 2676 @LENGTH@ 1
---------------DEL MethodInvocation@@MethodName:getExchange:[] @AT@ 2691 @LENGTH@ 13
---UPD ExpressionStatement@@Assignment:answer=converter.convertTo(type,getExchange(),this) @TO@ Assignment:answer=converter.tryConvertTo(type,e,this) @AT@ 2877 @LENGTH@ 56
------UPD Assignment@@answer=converter.convertTo(type,getExchange(),this) @TO@ answer=converter.tryConvertTo(type,e,this) @AT@ 2877 @LENGTH@ 55
---------UPD MethodInvocation@@converter.convertTo(type,getExchange(),this) @TO@ converter.tryConvertTo(type,e,this) @AT@ 2886 @LENGTH@ 46
------------UPD SimpleName@@MethodName:convertTo:[type, getExchange(), this] @TO@ MethodName:tryConvertTo:[type, e, this] @AT@ 2896 @LENGTH@ 36
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:convertTo:[type, getExchange(), this] @AT@ 2893 @LENGTH@ 1
---------------DEL MethodInvocation@@MethodName:getExchange:[] @AT@ 2912 @LENGTH@ 13


INS TryStatement@@try {  iterator.remove();  fail("expected UnsupportedOperationException");} catch (UnsupportedOperationException expected) {} @TO@ MethodDeclaration@@public, void, MethodName:testIterator,  @AT@ 15905 @LENGTH@ 165
---MOV ExpressionStatement@@MethodInvocation:iterator.remove() @TO@ TryStatement@@try {  iterator.remove();  fail("expected UnsupportedOperationException");} catch (UnsupportedOperationException expected) {} @AT@ 15905 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:fail("expected UnsupportedOperationException") @TO@ TryStatement@@try {  iterator.remove();  fail("expected UnsupportedOperationException");} catch (UnsupportedOperationException expected) {} @AT@ 15954 @LENGTH@ 47
------INS MethodInvocation@@fail("expected UnsupportedOperationException") @TO@ ExpressionStatement@@MethodInvocation:fail("expected UnsupportedOperationException") @AT@ 15954 @LENGTH@ 46
---------INS SimpleName@@MethodName:fail:["expected UnsupportedOperationException"] @TO@ MethodInvocation@@fail("expected UnsupportedOperationException") @AT@ 15954 @LENGTH@ 46
------------INS StringLiteral@@"expected UnsupportedOperationException" @TO@ SimpleName@@MethodName:fail:["expected UnsupportedOperationException"] @AT@ 15959 @LENGTH@ 40
---INS CatchClause@@catch (UnsupportedOperationException expected) {} @TO@ TryStatement@@try {  iterator.remove();  fail("expected UnsupportedOperationException");} catch (UnsupportedOperationException expected) {} @AT@ 16012 @LENGTH@ 58
------INS SingleVariableDeclaration@@UnsupportedOperationException expected @TO@ CatchClause@@catch (UnsupportedOperationException expected) {} @AT@ 16019 @LENGTH@ 38
---------INS SimpleType@@UnsupportedOperationException @TO@ SingleVariableDeclaration@@UnsupportedOperationException expected @AT@ 16019 @LENGTH@ 29
---------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@UnsupportedOperationException expected @AT@ 16049 @LENGTH@ 8


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public, abstract]AbstractExchangeEvent, EventObject @AT@ 1051 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1051 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1059 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1066 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1072 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1077 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1077 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1096 @LENGTH@ 2


UPD VariableDeclarationStatement@@MailEndpoint endpoint=new MailEndpoint("smtp://myhost",cfg); @TO@ MailEndpoint endpoint=new MailEndpoint("smtp://myhost",comp,cfg); @AT@ 2626 @LENGTH@ 63
---UPD VariableDeclarationFragment@@endpoint=new MailEndpoint("smtp://myhost",cfg) @TO@ endpoint=new MailEndpoint("smtp://myhost",comp,cfg) @AT@ 2639 @LENGTH@ 49
------UPD ClassInstanceCreation@@MailEndpoint["smtp://myhost", cfg] @TO@ MailEndpoint["smtp://myhost", comp, cfg] @AT@ 2650 @LENGTH@ 38
---------INS SimpleName@@comp @TO@ ClassInstanceCreation@@MailEndpoint["smtp://myhost", cfg] @AT@ 2737 @LENGTH@ 4


MOV MethodDeclaration@@public, voidMethodName:AvroDataFormat, Schema schema,  @TO@ TypeDeclaration@@[public]AvroDataFormat, [DataFormat] @AT@ 1760 @LENGTH@ 74


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.reset();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.reset();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1897 @LENGTH@ 620
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1901 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1901 @LENGTH@ 17
------DEL Operator@@== @AT@ 1918 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 1922 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 1922 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 1922 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 1939 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 1944 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.reset();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1901 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1901 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1901 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1909 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2515 @LENGTH@ 185
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 2603 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2603 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2609 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2616 @LENGTH@ 11


INS VariableDeclarationStatement@@String separator=""; @TO@ MethodDeclaration@@protected, URI, MethodName:expand, String url, Object[] variables, boolean encode,  @AT@ 666 @LENGTH@ 22
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String separator=""; @AT@ 666 @LENGTH@ 6
---INS VariableDeclarationFragment@@separator="" @TO@ VariableDeclarationStatement@@String separator=""; @AT@ 673 @LENGTH@ 14
------INS SimpleName@@separator @TO@ VariableDeclarationFragment@@separator="" @AT@ 673 @LENGTH@ 9
------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@separator="" @AT@ 685 @LENGTH@ 2


INS MethodDeclaration@@IllegalArgumentException, MethodName:notResourceAdapterService, ServiceName serviceName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ConnectorMessages,  @AT@ 14469 @LENGTH@ 51
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:notResourceAdapterService, ServiceName serviceName,  @AT@ 14444 @LENGTH@ 24
---INS SimpleName@@MethodName:notResourceAdapterService @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:notResourceAdapterService, ServiceName serviceName,  @AT@ 14469 @LENGTH@ 25
---INS SingleVariableDeclaration@@ServiceName serviceName @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:notResourceAdapterService, ServiceName serviceName,  @AT@ 14495 @LENGTH@ 23
------INS SimpleType@@ServiceName @TO@ SingleVariableDeclaration@@ServiceName serviceName @AT@ 14495 @LENGTH@ 11
------INS SimpleName@@serviceName @TO@ SingleVariableDeclaration@@ServiceName serviceName @AT@ 14507 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?&keywords=Java%20J2EE&&country-code=ie&start=0&count=10")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/search.json",getClass()),responseHeaders)) @TO@ MethodInvocation:mockServer.expect(requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?keywords=Java%20J2EE&country-code=ie&start=0&count=10")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/search.json",getClass()),responseHeaders)) @AT@ 6983 @LENGTH@ 418
---UPD MethodInvocation@@mockServer.expect(requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?&keywords=Java%20J2EE&&country-code=ie&start=0&count=10")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/search.json",getClass()),responseHeaders)) @TO@ mockServer.expect(requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?keywords=Java%20J2EE&country-code=ie&start=0&count=10")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/search.json",getClass()),responseHeaders)) @AT@ 6983 @LENGTH@ 417
------UPD MethodInvocation@@MethodName:expect:[requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?&keywords=Java%20J2EE&&country-code=ie&start=0&count=10")] @TO@ MethodName:expect:[requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?keywords=Java%20J2EE&country-code=ie&start=0&count=10")] @AT@ 6983 @LENGTH@ 290
---------UPD MethodInvocation@@requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?&keywords=Java%20J2EE&&country-code=ie&start=0&count=10") @TO@ requestTo("https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?keywords=Java%20J2EE&country-code=ie&start=0&count=10") @AT@ 7001 @LENGTH@ 271
------------UPD SimpleName@@MethodName:requestTo:["https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?&keywords=Java%20J2EE&&country-code=ie&start=0&count=10"] @TO@ MethodName:requestTo:["https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?keywords=Java%20J2EE&country-code=ie&start=0&count=10"] @AT@ 7001 @LENGTH@ 271
---------------UPD StringLiteral@@"https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?&keywords=Java%20J2EE&&country-code=ie&start=0&count=10" @TO@ "https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?keywords=Java%20J2EE&country-code=ie&start=0&count=10" @AT@ 7016 @LENGTH@ 250


UPD ReturnStatement@@ClassInstanceCreation:new StatefulSessionComponentInstance(this,instanceReference,preDestroyInterceptor,methodInterceptors) @TO@ ClassInstanceCreation:new StatefulSessionComponentInstance(this,instanceReference,preDestroyInterceptor,methodInterceptors,interceptorContext) @AT@ 10063 @LENGTH@ 112
---UPD ClassInstanceCreation@@StatefulSessionComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors] @TO@ StatefulSessionComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors, interceptorContext] @AT@ 10070 @LENGTH@ 104
------INS SimpleName@@interceptorContext @TO@ ClassInstanceCreation@@StatefulSessionComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors] @AT@ 10060 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @TO@ TypeDeclaration@@[public]BeanInfoTest, TestCase @AT@ 1453 @LENGTH@ 290
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1453 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1460 @LENGTH@ 4
---INS SimpleName@@MethodName:testObjectOperations @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1465 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1495 @LENGTH@ 9
---INS VariableDeclarationStatement@@BeanInfo info=createBeanInfo(Object.class); @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1515 @LENGTH@ 45
------INS SimpleType@@BeanInfo @TO@ VariableDeclarationStatement@@BeanInfo info=createBeanInfo(Object.class); @AT@ 1515 @LENGTH@ 8
------INS VariableDeclarationFragment@@info=createBeanInfo(Object.class) @TO@ VariableDeclarationStatement@@BeanInfo info=createBeanInfo(Object.class); @AT@ 1524 @LENGTH@ 35
---------INS SimpleName@@info @TO@ VariableDeclarationFragment@@info=createBeanInfo(Object.class) @AT@ 1524 @LENGTH@ 4
---------INS MethodInvocation@@createBeanInfo(Object.class) @TO@ VariableDeclarationFragment@@info=createBeanInfo(Object.class) @AT@ 1531 @LENGTH@ 28
------------INS SimpleName@@MethodName:createBeanInfo:[Object.class] @TO@ MethodInvocation@@createBeanInfo(Object.class) @AT@ 1531 @LENGTH@ 28
---------------INS TypeLiteral@@Object.class @TO@ SimpleName@@MethodName:createBeanInfo:[Object.class] @AT@ 1546 @LENGTH@ 12
---INS VariableDeclarationStatement@@List<MethodInfo> operations=info.getMethods(); @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1570 @LENGTH@ 48
------INS ParameterizedType@@List<MethodInfo> @TO@ VariableDeclarationStatement@@List<MethodInfo> operations=info.getMethods(); @AT@ 1570 @LENGTH@ 16
---------INS SimpleType@@List @TO@ ParameterizedType@@List<MethodInfo> @AT@ 1570 @LENGTH@ 4
---------INS SimpleType@@MethodInfo @TO@ ParameterizedType@@List<MethodInfo> @AT@ 1575 @LENGTH@ 10
------INS VariableDeclarationFragment@@operations=info.getMethods() @TO@ VariableDeclarationStatement@@List<MethodInfo> operations=info.getMethods(); @AT@ 1587 @LENGTH@ 30
---------INS SimpleName@@operations @TO@ VariableDeclarationFragment@@operations=info.getMethods() @AT@ 1587 @LENGTH@ 10
---------INS MethodInvocation@@info.getMethods() @TO@ VariableDeclarationFragment@@operations=info.getMethods() @AT@ 1600 @LENGTH@ 17
------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getMethods() @AT@ 1600 @LENGTH@ 4
------------INS SimpleName@@MethodName:getMethods:[] @TO@ MethodInvocation@@info.getMethods() @AT@ 1605 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,operations.size()) @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1627 @LENGTH@ 35
------INS MethodInvocation@@assertEquals(1,operations.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,operations.size()) @AT@ 1627 @LENGTH@ 34
---------INS SimpleName@@MethodName:assertEquals:[1, operations.size()] @TO@ MethodInvocation@@assertEquals(1,operations.size()) @AT@ 1627 @LENGTH@ 34
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, operations.size()] @AT@ 1640 @LENGTH@ 1
------------INS MethodInvocation@@operations.size() @TO@ SimpleName@@MethodName:assertEquals:[1, operations.size()] @AT@ 1643 @LENGTH@ 17
---------------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.size() @AT@ 1643 @LENGTH@ 10
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@operations.size() @AT@ 1654 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("toString",operations.get(0).getMethod().getName()) @TO@ MethodDeclaration@@public, void, MethodName:testObjectOperations, Exception,  @AT@ 1671 @LENGTH@ 66
------INS MethodInvocation@@assertEquals("toString",operations.get(0).getMethod().getName()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("toString",operations.get(0).getMethod().getName()) @AT@ 1671 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertEquals:["toString", operations.get(0).getMethod().getName()] @TO@ MethodInvocation@@assertEquals("toString",operations.get(0).getMethod().getName()) @AT@ 1671 @LENGTH@ 65
------------INS StringLiteral@@"toString" @TO@ SimpleName@@MethodName:assertEquals:["toString", operations.get(0).getMethod().getName()] @AT@ 1684 @LENGTH@ 10
------------INS MethodInvocation@@operations.get(0).getMethod().getName() @TO@ SimpleName@@MethodName:assertEquals:["toString", operations.get(0).getMethod().getName()] @AT@ 1696 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@operations.get(0).getMethod().getName() @AT@ 1696 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@operations.get(0).getMethod().getName() @AT@ 1696 @LENGTH@ 17
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 1711 @LENGTH@ 1
---------------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.get(0).getMethod().getName() @AT@ 1696 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@operations.get(0).getMethod().getName() @AT@ 1726 @LENGTH@ 9


UPD MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @TO@ protected, void, MethodName:handleRemoveMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method, DeploymentUnitProcessingException,  @AT@ 1508 @LENGTH@ 222
---DEL SimpleType@@InterceptorFactory @AT@ 1518 @LENGTH@ 18
---DEL SimpleName@@MethodName:getEjbRemoveInterceptorFactory @AT@ 1537 @LENGTH@ 30
---UPD SingleVariableDeclaration@@final Method remove @TO@ final Method method @AT@ 1568 @LENGTH@ 19
------UPD SimpleName@@remove @TO@ method @AT@ 1581 @LENGTH@ 6
---DEL ReturnStatement@@MethodInvocation:org.jboss.invocation.Interceptors.getTerminalInterceptorFactory() @AT@ 1651 @LENGTH@ 73
------DEL MethodInvocation@@org.jboss.invocation.Interceptors.getTerminalInterceptorFactory() @AT@ 1658 @LENGTH@ 65
---------DEL QualifiedName@@Name:org.jboss.invocation.Interceptors @AT@ 1658 @LENGTH@ 33
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2334 @LENGTH@ 4
---INS SimpleName@@MethodName:handleRemoveMethod @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2339 @LENGTH@ 18
---INS SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2358 @LENGTH@ 51
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2358 @LENGTH@ 5
------INS SimpleType@@ComponentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2364 @LENGTH@ 22
------INS SimpleName@@componentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2387 @LENGTH@ 22
---INS SingleVariableDeclaration@@final ViewConfiguration configuration @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2411 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2411 @LENGTH@ 5
------INS SimpleType@@ViewConfiguration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2417 @LENGTH@ 17
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2435 @LENGTH@ 13
---INS SingleVariableDeclaration@@final DeploymentReflectionIndex index @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2450 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2450 @LENGTH@ 5
------INS SimpleType@@DeploymentReflectionIndex @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2456 @LENGTH@ 25
------INS SimpleName@@index @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2482 @LENGTH@ 5
---INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2517 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2561 @LENGTH@ 141
------INS MethodInvocation@@configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @TO@ ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @AT@ 2561 @LENGTH@ 140
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @AT@ 2561 @LENGTH@ 13
---------INS SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @TO@ MethodInvocation@@configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @AT@ 2575 @LENGTH@ 126
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @AT@ 2596 @LENGTH@ 6
------------INS QualifiedName@@ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @AT@ 2604 @LENGTH@ 53
---------------INS SimpleName@@ViewDescription @TO@ QualifiedName@@ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @AT@ 2604 @LENGTH@ 15
---------------INS SimpleName@@CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @TO@ QualifiedName@@ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @AT@ 2620 @LENGTH@ 37
------------INS QualifiedName@@InterceptorOrder.Client.CLIENT_DISPATCHER @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @AT@ 2659 @LENGTH@ 41
---------------INS QualifiedName@@InterceptorOrder.Client @TO@ QualifiedName@@InterceptorOrder.Client.CLIENT_DISPATCHER @AT@ 2659 @LENGTH@ 23
------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2659 @LENGTH@ 16
------------------INS SimpleName@@Client @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2676 @LENGTH@ 6
---------------INS SimpleName@@CLIENT_DISPATCHER @TO@ QualifiedName@@InterceptorOrder.Client.CLIENT_DISPATCHER @AT@ 2683 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:configuration.addViewInterceptor(method,Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.View.COMPONENT_DISPATCHER) @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2711 @LENGTH@ 131
------INS MethodInvocation@@configuration.addViewInterceptor(method,Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.View.COMPONENT_DISPATCHER) @TO@ ExpressionStatement@@MethodInvocation:configuration.addViewInterceptor(method,Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.View.COMPONENT_DISPATCHER) @AT@ 2711 @LENGTH@ 130
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addViewInterceptor(method,Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.View.COMPONENT_DISPATCHER) @AT@ 2711 @LENGTH@ 13
---------INS SimpleName@@MethodName:addViewInterceptor:[method, Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.View.COMPONENT_DISPATCHER] @TO@ MethodInvocation@@configuration.addViewInterceptor(method,Interceptors.getTerminalInterceptorFactory(),InterceptorOrder.View.COMPONENT_DISPATCHER) @AT@ 2725 @LENGTH@ 116
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addViewInterceptor:[method, Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.View.COMPONENT_DISPATCHER] @AT@ 2744 @LENGTH@ 6
------------INS MethodInvocation@@Interceptors.getTerminalInterceptorFactory() @TO@ SimpleName@@MethodName:addViewInterceptor:[method, Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.View.COMPONENT_DISPATCHER] @AT@ 2752 @LENGTH@ 44
---------------MOV SimpleName@@MethodName:getTerminalInterceptorFactory:[] @TO@ MethodInvocation@@Interceptors.getTerminalInterceptorFactory() @AT@ 1692 @LENGTH@ 31
---------------INS SimpleName@@Name:Interceptors @TO@ MethodInvocation@@Interceptors.getTerminalInterceptorFactory() @AT@ 2752 @LENGTH@ 12
------------INS QualifiedName@@InterceptorOrder.View.COMPONENT_DISPATCHER @TO@ SimpleName@@MethodName:addViewInterceptor:[method, Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.View.COMPONENT_DISPATCHER] @AT@ 2798 @LENGTH@ 42
---------------INS QualifiedName@@InterceptorOrder.View @TO@ QualifiedName@@InterceptorOrder.View.COMPONENT_DISPATCHER @AT@ 2798 @LENGTH@ 21
------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.View @AT@ 2798 @LENGTH@ 16
------------------INS SimpleName@@View @TO@ QualifiedName@@InterceptorOrder.View @AT@ 2815 @LENGTH@ 4
---------------INS SimpleName@@COMPONENT_DISPATCHER @TO@ QualifiedName@@InterceptorOrder.View.COMPONENT_DISPATCHER @AT@ 2820 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:fabricDistributionConfiguration() @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @AT@ 2759 @LENGTH@ 41
---INS ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @TO@ ReturnStatement@@MethodInvocation:fabricDistributionConfiguration() @AT@ 2675 @LENGTH@ 214
------INS ArrayType@@Option[] @TO@ ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @AT@ 2679 @LENGTH@ 8
---------INS SimpleType@@Option @TO@ ArrayType@@Option[] @AT@ 2679 @LENGTH@ 6
------INS ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @TO@ ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @AT@ 2688 @LENGTH@ 201
---------INS ClassInstanceCreation@@DefaultCompositeOption[fabricDistributionConfiguration()] @TO@ ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @AT@ 2689 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultCompositeOption[fabricDistributionConfiguration()] @AT@ 2689 @LENGTH@ 3
------------INS SimpleType@@DefaultCompositeOption @TO@ ClassInstanceCreation@@DefaultCompositeOption[fabricDistributionConfiguration()] @AT@ 2693 @LENGTH@ 22
------------INS MethodInvocation@@MethodName:fabricDistributionConfiguration:[] @TO@ ClassInstanceCreation@@DefaultCompositeOption[fabricDistributionConfiguration()] @AT@ 2716 @LENGTH@ 33
---------INS MethodInvocation@@mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")) @TO@ ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core"))} @AT@ 2767 @LENGTH@ 121
------------INS SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @TO@ MethodInvocation@@mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")) @AT@ 2767 @LENGTH@ 121
---------------INS StringLiteral@@"org.apache.activemq" @TO@ SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @AT@ 2779 @LENGTH@ 21
---------------INS StringLiteral@@"activemq-all" @TO@ SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @AT@ 2802 @LENGTH@ 14
---------------INS MethodInvocation@@MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core") @TO@ SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @AT@ 2818 @LENGTH@ 69
------------------INS SimpleName@@Name:MavenUtils @TO@ MethodInvocation@@MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core") @AT@ 2818 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getArtifactVersion:["org.apache.activemq", "activemq-core"] @TO@ MethodInvocation@@MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core") @AT@ 2829 @LENGTH@ 58
---------------------INS StringLiteral@@"org.apache.activemq" @TO@ SimpleName@@MethodName:getArtifactVersion:["org.apache.activemq", "activemq-core"] @AT@ 2848 @LENGTH@ 21
---------------------INS StringLiteral@@"activemq-core" @TO@ SimpleName@@MethodName:getArtifactVersion:["org.apache.activemq", "activemq-core"] @AT@ 2871 @LENGTH@ 15
------------INS SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @TO@ MethodInvocation@@mavenBundle("org.apache.activemq","activemq-all",MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")) @AT@ 2767 @LENGTH@ 121
---------------INS StringLiteral@@"org.apache.activemq" @TO@ SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @AT@ 2779 @LENGTH@ 21
---------------INS StringLiteral@@"activemq-all" @TO@ SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @AT@ 2802 @LENGTH@ 14
---------------INS MethodInvocation@@MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core") @TO@ SimpleName@@MethodName:mavenBundle:["org.apache.activemq", "activemq-all", MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core")] @AT@ 2818 @LENGTH@ 69
------------------INS SimpleName@@Name:MavenUtils @TO@ MethodInvocation@@MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core") @AT@ 2818 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getArtifactVersion:["org.apache.activemq", "activemq-core"] @TO@ MethodInvocation@@MavenUtils.getArtifactVersion("org.apache.activemq","activemq-core") @AT@ 2829 @LENGTH@ 58
---------------------INS StringLiteral@@"org.apache.activemq" @TO@ SimpleName@@MethodName:getArtifactVersion:["org.apache.activemq", "activemq-core"] @AT@ 2848 @LENGTH@ 21
---------------------INS StringLiteral@@"activemq-core" @TO@ SimpleName@@MethodName:getArtifactVersion:["org.apache.activemq", "activemq-core"] @AT@ 2871 @LENGTH@ 15
---DEL MethodInvocation@@MethodName:fabricDistributionConfiguration:[] @AT@ 2766 @LENGTH@ 33


UPD EnhancedForStatement@@for (String key : parameters.keySet()) {  if (key.equals(SCOPE)) {    this.parameters.put(SCOPE,OAuth2Utils.formatParameterList(scope));  } else {    this.parameters.put(key,parameters.get(key));  }} @TO@ for (String key : copy.parameters.keySet()) {  if (key.equals(SCOPE)) {    this.parameters.put(SCOPE,OAuth2Utils.formatParameterList(scope));  } else {    this.parameters.put(key,copy.parameters.get(key));  }} @AT@ 2315 @LENGTH@ 212
---UPD MethodInvocation@@parameters.keySet() @TO@ copy.parameters.keySet() @AT@ 2333 @LENGTH@ 19
------INS QualifiedName@@Name:copy.parameters @TO@ MethodInvocation@@parameters.keySet() @AT@ 2333 @LENGTH@ 15
------DEL SimpleName@@Name:parameters @AT@ 2333 @LENGTH@ 10
---UPD IfStatement@@if (key.equals(SCOPE)) {  this.parameters.put(SCOPE,OAuth2Utils.formatParameterList(scope));} else {  this.parameters.put(key,parameters.get(key));} @TO@ if (key.equals(SCOPE)) {  this.parameters.put(SCOPE,OAuth2Utils.formatParameterList(scope));} else {  this.parameters.put(key,copy.parameters.get(key));} @AT@ 2359 @LENGTH@ 164
------UPD Block@@ElseBody:{  this.parameters.put(key,parameters.get(key));} @TO@ ElseBody:{  this.parameters.put(key,copy.parameters.get(key));} @AT@ 2466 @LENGTH@ 57
---------UPD ExpressionStatement@@MethodInvocation:this.parameters.put(key,parameters.get(key)) @TO@ MethodInvocation:this.parameters.put(key,copy.parameters.get(key)) @AT@ 2472 @LENGTH@ 46
------------UPD MethodInvocation@@this.parameters.put(key,parameters.get(key)) @TO@ this.parameters.put(key,copy.parameters.get(key)) @AT@ 2472 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:put:[key, parameters.get(key)] @TO@ MethodName:put:[key, copy.parameters.get(key)] @AT@ 2488 @LENGTH@ 29
------------------UPD MethodInvocation@@parameters.get(key) @TO@ copy.parameters.get(key) @AT@ 2497 @LENGTH@ 19
---------------------DEL SimpleName@@Name:parameters @AT@ 2497 @LENGTH@ 10
---------------------INS QualifiedName@@Name:copy.parameters @TO@ MethodInvocation@@parameters.get(key) @AT@ 2502 @LENGTH@ 15


DEL FieldDeclaration@@private, static, final, transient, Logger, [LOG=LoggerFactory.getLogger(AtomPollingConsumer.class)] @AT@ 1254 @LENGTH@ 95
---DEL Modifier@@private @AT@ 1254 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1262 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1269 @LENGTH@ 5
---DEL Modifier@@transient @AT@ 1275 @LENGTH@ 9
---DEL SimpleType@@Logger @AT@ 1285 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(AtomPollingConsumer.class) @AT@ 1292 @LENGTH@ 56
------DEL SimpleName@@LOG @AT@ 1292 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(AtomPollingConsumer.class) @AT@ 1298 @LENGTH@ 50
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1298 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[AtomPollingConsumer.class] @AT@ 1312 @LENGTH@ 36
------------DEL TypeLiteral@@AtomPollingConsumer.class @AT@ 1322 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:simpleTypes.add(UUID.class) @TO@ Initializer@@Initializer @AT@ 1772 @LENGTH@ 28
---INS MethodInvocation@@simpleTypes.add(UUID.class) @TO@ ExpressionStatement@@MethodInvocation:simpleTypes.add(UUID.class) @AT@ 1772 @LENGTH@ 27
------INS SimpleName@@Name:simpleTypes @TO@ MethodInvocation@@simpleTypes.add(UUID.class) @AT@ 1772 @LENGTH@ 11
------INS SimpleName@@MethodName:add:[UUID.class] @TO@ MethodInvocation@@simpleTypes.add(UUID.class) @AT@ 1784 @LENGTH@ 15
---------INS TypeLiteral@@UUID.class @TO@ SimpleName@@MethodName:add:[UUID.class] @AT@ 1788 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @TO@ MethodDeclaration@@public, void, MethodName:startChannels, IOException, URISyntaxException,  @AT@ 4648 @LENGTH@ 55
---INS MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @TO@ ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4648 @LENGTH@ 54
------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4648 @LENGTH@ 13
------INS SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4662 @LENGTH@ 40
---------INS MethodInvocation@@channelServer.getEndpoint() @TO@ SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @AT@ 4674 @LENGTH@ 27
------------INS SimpleName@@Name:channelServer @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4674 @LENGTH@ 13
------------INS SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4688 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @TO@ MethodDeclaration@@public, void, MethodName:startChannels, IOException, URISyntaxException,  @AT@ 4648 @LENGTH@ 55
---INS MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @TO@ ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4648 @LENGTH@ 54
------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4648 @LENGTH@ 13
------INS SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4662 @LENGTH@ 40
---------INS MethodInvocation@@channelServer.getEndpoint() @TO@ SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @AT@ 4674 @LENGTH@ 27
------------INS SimpleName@@Name:channelServer @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4674 @LENGTH@ 13
------------INS SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4688 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:context.removeService(hqServiceName.append(JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName)).append(pcf.getName())) @TO@ MethodInvocation:context.removeService(JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName).append(pcf.getName())) @AT@ 3777 @LENGTH@ 136
---UPD MethodInvocation@@context.removeService(hqServiceName.append(JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName)).append(pcf.getName())) @TO@ context.removeService(JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName).append(pcf.getName())) @AT@ 3777 @LENGTH@ 135
------UPD SimpleName@@MethodName:removeService:[hqServiceName.append(JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName)).append(pcf.getName())] @TO@ MethodName:removeService:[JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName).append(pcf.getName())] @AT@ 3785 @LENGTH@ 127
---------UPD MethodInvocation@@hqServiceName.append(JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName)).append(pcf.getName()) @TO@ JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName).append(pcf.getName()) @AT@ 3799 @LENGTH@ 112
------------UPD MethodInvocation@@MethodName:append:[JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName)] @TO@ MethodName:getPooledConnectionFactoryBaseServiceName:[hqServiceName] @AT@ 3799 @LENGTH@ 90
---------------DEL MethodInvocation@@JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName) @AT@ 3820 @LENGTH@ 68
------------------DEL SimpleName@@Name:JMSServices @AT@ 3820 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:getPooledConnectionFactoryBaseServiceName:[hqServiceName] @AT@ 3832 @LENGTH@ 56
---------------------DEL SimpleName@@hqServiceName @AT@ 3874 @LENGTH@ 13
---------------INS SimpleName@@hqServiceName @TO@ MethodInvocation@@MethodName:append:[JMSServices.getPooledConnectionFactoryBaseServiceName(hqServiceName)] @AT@ 3853 @LENGTH@ 13
------------UPD SimpleName@@Name:hqServiceName @TO@ Name:JMSServices @AT@ 3799 @LENGTH@ 13


UPD VariableDeclarationStatement@@String ls=cli.readAllUnformated(WAIT_TIMEOUT,WAIT_LINETIMEOUT); @TO@ String ls=cli.readAllUnformated(WAIT_LINETIMEOUT,WAIT_LINETIMEOUT); @AT@ 6905 @LENGTH@ 66
---UPD VariableDeclarationFragment@@ls=cli.readAllUnformated(WAIT_TIMEOUT,WAIT_LINETIMEOUT) @TO@ ls=cli.readAllUnformated(WAIT_LINETIMEOUT,WAIT_LINETIMEOUT) @AT@ 6912 @LENGTH@ 58
------UPD MethodInvocation@@cli.readAllUnformated(WAIT_TIMEOUT,WAIT_LINETIMEOUT) @TO@ cli.readAllUnformated(WAIT_LINETIMEOUT,WAIT_LINETIMEOUT) @AT@ 6917 @LENGTH@ 53
---------UPD SimpleName@@MethodName:readAllUnformated:[WAIT_TIMEOUT, WAIT_LINETIMEOUT] @TO@ MethodName:readAllUnformated:[WAIT_LINETIMEOUT, WAIT_LINETIMEOUT] @AT@ 6921 @LENGTH@ 49
------------UPD SimpleName@@WAIT_TIMEOUT @TO@ WAIT_LINETIMEOUT @AT@ 6939 @LENGTH@ 12


UPD MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @TO@ protected, void, MethodName:handleRemoveMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method, DeploymentUnitProcessingException,  @AT@ 1560 @LENGTH@ 174
---DEL SimpleType@@InterceptorFactory @AT@ 1570 @LENGTH@ 18
---DEL SimpleName@@MethodName:getEjbRemoveInterceptorFactory @AT@ 1589 @LENGTH@ 30
---UPD SingleVariableDeclaration@@final Method remove @TO@ final Method method @AT@ 1620 @LENGTH@ 19
------UPD SimpleName@@remove @TO@ method @AT@ 1633 @LENGTH@ 6
---DEL ReturnStatement@@ClassInstanceCreation:new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)) @AT@ 1651 @LENGTH@ 77
------DEL ClassInstanceCreation@@ImmediateInterceptorFactory[new StatefulRemoveInterceptor(false)] @AT@ 1658 @LENGTH@ 69
---------DEL New@@new @AT@ 1658 @LENGTH@ 3
---------DEL SimpleType@@ImmediateInterceptorFactory @AT@ 1662 @LENGTH@ 27
---------DEL ClassInstanceCreation@@StatefulRemoveInterceptor[false] @AT@ 1690 @LENGTH@ 36
------------DEL New@@new @AT@ 1690 @LENGTH@ 3
------------DEL SimpleType@@StatefulRemoveInterceptor @AT@ 1694 @LENGTH@ 25
------------DEL BooleanLiteral@@false @AT@ 1720 @LENGTH@ 5
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2194 @LENGTH@ 4
---INS SimpleName@@MethodName:handleRemoveMethod @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2199 @LENGTH@ 18
---INS SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2218 @LENGTH@ 51
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2218 @LENGTH@ 5
------INS SimpleType@@ComponentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2224 @LENGTH@ 22
------INS SimpleName@@componentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 2247 @LENGTH@ 22
---INS SingleVariableDeclaration@@final ViewConfiguration configuration @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2271 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2271 @LENGTH@ 5
------INS SimpleType@@ViewConfiguration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2277 @LENGTH@ 17
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 2295 @LENGTH@ 13
---INS SingleVariableDeclaration@@final DeploymentReflectionIndex index @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2310 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2310 @LENGTH@ 5
------INS SimpleType@@DeploymentReflectionIndex @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2316 @LENGTH@ 25
------INS SimpleName@@index @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 2342 @LENGTH@ 5
---INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2377 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2421 @LENGTH@ 141
------INS MethodInvocation@@configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @TO@ ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @AT@ 2421 @LENGTH@ 140
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @AT@ 2421 @LENGTH@ 13
---------INS SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @TO@ MethodInvocation@@configuration.addClientInterceptor(method,ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER) @AT@ 2435 @LENGTH@ 126
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @AT@ 2456 @LENGTH@ 6
------------INS QualifiedName@@ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @AT@ 2464 @LENGTH@ 53
---------------INS SimpleName@@ViewDescription @TO@ QualifiedName@@ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @AT@ 2464 @LENGTH@ 15
---------------INS SimpleName@@CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @TO@ QualifiedName@@ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY @AT@ 2480 @LENGTH@ 37
------------INS QualifiedName@@InterceptorOrder.Client.CLIENT_DISPATCHER @TO@ SimpleName@@MethodName:addClientInterceptor:[method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER] @AT@ 2519 @LENGTH@ 41
---------------INS QualifiedName@@InterceptorOrder.Client @TO@ QualifiedName@@InterceptorOrder.Client.CLIENT_DISPATCHER @AT@ 2519 @LENGTH@ 23
------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2519 @LENGTH@ 16
------------------INS SimpleName@@Client @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2536 @LENGTH@ 6
---------------INS SimpleName@@CLIENT_DISPATCHER @TO@ QualifiedName@@InterceptorOrder.Client.CLIENT_DISPATCHER @AT@ 2543 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:configuration.addViewInterceptor(method,StatefulRemoveDelegationInterceptor.FACTORY,InterceptorOrder.View.COMPONENT_DISPATCHER) @TO@ MethodDeclaration@@protected, InterceptorFactory, MethodName:getEjbRemoveInterceptorFactory, final Method remove,  @AT@ 2571 @LENGTH@ 130
------INS MethodInvocation@@configuration.addViewInterceptor(method,StatefulRemoveDelegationInterceptor.FACTORY,InterceptorOrder.View.COMPONENT_DISPATCHER) @TO@ ExpressionStatement@@MethodInvocation:configuration.addViewInterceptor(method,StatefulRemoveDelegationInterceptor.FACTORY,InterceptorOrder.View.COMPONENT_DISPATCHER) @AT@ 2571 @LENGTH@ 129
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addViewInterceptor(method,StatefulRemoveDelegationInterceptor.FACTORY,InterceptorOrder.View.COMPONENT_DISPATCHER) @AT@ 2571 @LENGTH@ 13
---------INS SimpleName@@MethodName:addViewInterceptor:[method, StatefulRemoveDelegationInterceptor.FACTORY, InterceptorOrder.View.COMPONENT_DISPATCHER] @TO@ MethodInvocation@@configuration.addViewInterceptor(method,StatefulRemoveDelegationInterceptor.FACTORY,InterceptorOrder.View.COMPONENT_DISPATCHER) @AT@ 2585 @LENGTH@ 115
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addViewInterceptor:[method, StatefulRemoveDelegationInterceptor.FACTORY, InterceptorOrder.View.COMPONENT_DISPATCHER] @AT@ 2604 @LENGTH@ 6
------------INS QualifiedName@@StatefulRemoveDelegationInterceptor.FACTORY @TO@ SimpleName@@MethodName:addViewInterceptor:[method, StatefulRemoveDelegationInterceptor.FACTORY, InterceptorOrder.View.COMPONENT_DISPATCHER] @AT@ 2612 @LENGTH@ 43
---------------INS SimpleName@@StatefulRemoveDelegationInterceptor @TO@ QualifiedName@@StatefulRemoveDelegationInterceptor.FACTORY @AT@ 2612 @LENGTH@ 35
---------------INS SimpleName@@FACTORY @TO@ QualifiedName@@StatefulRemoveDelegationInterceptor.FACTORY @AT@ 2648 @LENGTH@ 7
------------INS QualifiedName@@InterceptorOrder.View.COMPONENT_DISPATCHER @TO@ SimpleName@@MethodName:addViewInterceptor:[method, StatefulRemoveDelegationInterceptor.FACTORY, InterceptorOrder.View.COMPONENT_DISPATCHER] @AT@ 2657 @LENGTH@ 42
---------------INS QualifiedName@@InterceptorOrder.View @TO@ QualifiedName@@InterceptorOrder.View.COMPONENT_DISPATCHER @AT@ 2657 @LENGTH@ 21
------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.View @AT@ 2657 @LENGTH@ 16
------------------INS SimpleName@@View @TO@ QualifiedName@@InterceptorOrder.View @AT@ 2674 @LENGTH@ 4
---------------INS SimpleName@@COMPONENT_DISPATCHER @TO@ QualifiedName@@InterceptorOrder.View.COMPONENT_DISPATCHER @AT@ 2679 @LENGTH@ 20


UPD MethodDeclaration@@public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, Map<String,String> parameters, SessionStatus sessionStatus, Principal principal,  @TO@ public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, @RequestParam Map<String,String> parameters, SessionStatus sessionStatus, Principal principal,  @AT@ 4544 @LENGTH@ 1803
---MOV SingleVariableDeclaration@@@RequestParam Map<String,String> parameters @TO@ MethodDeclaration@@public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, Map<String,String> parameters, SessionStatus sessionStatus, Principal principal,  @AT@ 4333 @LENGTH@ 44
---MOV VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest(parameters); @TO@ MethodDeclaration@@public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, Map<String,String> parameters, SessionStatus sessionStatus, Principal principal,  @AT@ 4383 @LENGTH@ 81
---DEL SingleVariableDeclaration@@Map<String,String> parameters @AT@ 4656 @LENGTH@ 30
------DEL ParameterizedType@@Map<String,String> @AT@ 4656 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 4656 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 4660 @LENGTH@ 6
---------DEL SimpleType@@String @AT@ 4668 @LENGTH@ 6
------DEL SimpleName@@parameters @AT@ 4676 @LENGTH@ 10
---DEL VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=getClientToken(parameters); @AT@ 4903 @LENGTH@ 71
------DEL SimpleType@@AuthorizationRequest @AT@ 4903 @LENGTH@ 20
------DEL VariableDeclarationFragment@@authorizationRequest=getClientToken(parameters) @AT@ 4924 @LENGTH@ 49
---------DEL SimpleName@@authorizationRequest @AT@ 4924 @LENGTH@ 20
---------DEL MethodInvocation@@getClientToken(parameters) @AT@ 4947 @LENGTH@ 26
------------DEL SimpleName@@MethodName:getClientToken:[parameters] @AT@ 4947 @LENGTH@ 26
---------------DEL SimpleName@@parameters @AT@ 4962 @LENGTH@ 10
---UPD IfStatement@@if (responseTypes.contains("code")) {  authorizationRequest=resolveRedirectUri(authorizationRequest);  return getUserApprovalPageResponse(model,authorizationRequest);} @TO@ if (responseTypes.contains("code")) {  model.put("authorizationRequest",authorizationRequest);  authorizationRequest=resolveRedirectUri(authorizationRequest);  return getUserApprovalPageResponse(model,authorizationRequest);} @AT@ 5838 @LENGTH@ 177
------UPD Block@@ThenBody:{  authorizationRequest=resolveRedirectUri(authorizationRequest);  return getUserApprovalPageResponse(model,authorizationRequest);} @TO@ ThenBody:{  model.put("authorizationRequest",authorizationRequest);  authorizationRequest=resolveRedirectUri(authorizationRequest);  return getUserApprovalPageResponse(model,authorizationRequest);} @AT@ 5874 @LENGTH@ 141
---------MOV ExpressionStatement@@MethodInvocation:model.put("authorizationRequest",authorizationRequest) @TO@ Block@@ThenBody:{  authorizationRequest=resolveRedirectUri(authorizationRequest);  return getUserApprovalPageResponse(model,authorizationRequest);} @AT@ 5778 @LENGTH@ 56


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]DelegatePerformanceCounter, [PerformanceCounter] @AT@ 2873 @LENGTH@ 104
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2873 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2880 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2887 @LENGTH@ 8
---INS ReturnStatement@@ConditionalExpression:counter != null ? counter.toString() : super.toString() @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 2908 @LENGTH@ 63
------INS ConditionalExpression@@counter != null ? counter.toString() : super.toString() @TO@ ReturnStatement@@ConditionalExpression:counter != null ? counter.toString() : super.toString() @AT@ 2915 @LENGTH@ 55
---------INS InfixExpression@@counter != null @TO@ ConditionalExpression@@counter != null ? counter.toString() : super.toString() @AT@ 2915 @LENGTH@ 15
------------INS SimpleName@@counter @TO@ InfixExpression@@counter != null @AT@ 2915 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@counter != null @AT@ 2922 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@counter != null @AT@ 2926 @LENGTH@ 4
---------INS MethodInvocation@@counter.toString() @TO@ ConditionalExpression@@counter != null ? counter.toString() : super.toString() @AT@ 2933 @LENGTH@ 18
------------INS SimpleName@@Name:counter @TO@ MethodInvocation@@counter.toString() @AT@ 2933 @LENGTH@ 7
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@counter.toString() @AT@ 2941 @LENGTH@ 10
---------INS SuperMethodInvocation@@super.toString() @TO@ ConditionalExpression@@counter != null ? counter.toString() : super.toString() @AT@ 2954 @LENGTH@ 16
------------INS SimpleName@@MethodName:toString:[] @TO@ SuperMethodInvocation@@super.toString() @AT@ 2960 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @TO@ MethodInvocation:MGMT_OP_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @AT@ 3357 @LENGTH@ 62
---UPD MethodInvocation@@ROOT_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @TO@ MGMT_OP_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @AT@ 3357 @LENGTH@ 61
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 3357 @LENGTH@ 11


MOV VariableDeclarationStatement@@HiveConf hiveConf=new HiveConf(conf,BlockMergeTask.class); @TO@ MethodDeclaration@@public, static, void, MethodName:main, String[] args,  @AT@ 9500 @LENGTH@ 61


INS VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result; @TO@ MethodDeclaration@@public, Map<NetworkInterface,Set<InetAddress>>, MethodName:getAcceptableAddresses, Map<NetworkInterface,Set<InetAddress>> candidates, SocketException,  @AT@ 3385 @LENGTH@ 132
---INS ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @TO@ VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result; @AT@ 3385 @LENGTH@ 39
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @AT@ 3385 @LENGTH@ 3
------INS SimpleType@@NetworkInterface @TO@ ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @AT@ 3389 @LENGTH@ 16
------INS ParameterizedType@@Set<InetAddress> @TO@ ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @AT@ 3407 @LENGTH@ 16
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<InetAddress> @AT@ 3407 @LENGTH@ 3
---------INS SimpleType@@InetAddress @TO@ ParameterizedType@@Set<InetAddress> @AT@ 3411 @LENGTH@ 11
---INS VariableDeclarationFragment@@pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @TO@ VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result; @AT@ 3425 @LENGTH@ 91
------INS SimpleName@@pruned @TO@ VariableDeclarationFragment@@pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3425 @LENGTH@ 6
------INS ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @TO@ VariableDeclarationFragment@@pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3434 @LENGTH@ 82
---------MOV InfixExpression@@result.size() > 1 @TO@ ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3389 @LENGTH@ 17
---------INS MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(result) @TO@ ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3454 @LENGTH@ 53
------------INS SimpleName@@Name:OverallInterfaceCriteria @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(result) @AT@ 3454 @LENGTH@ 24
------------INS SimpleName@@MethodName:pruneAliasDuplicates:[result] @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(result) @AT@ 3479 @LENGTH@ 28
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:pruneAliasDuplicates:[result] @AT@ 3500 @LENGTH@ 6
---------INS SimpleName@@result @TO@ ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3510 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, String, [SELECT_SQL="select client_id, resource_ids, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity refresh_token_validity from oauth_client_details where client_id=?"] @TO@ private, static, final, String, [SELECT_SQL="select client_id, resource_ids, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity from oauth_client_details where client_id=?"] @AT@ 853 @LENGTH@ 248
---UPD VariableDeclarationFragment@@SELECT_SQL="select client_id, resource_ids, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity refresh_token_validity from oauth_client_details where client_id=?" @TO@ SELECT_SQL="select client_id, resource_ids, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity from oauth_client_details where client_id=?" @AT@ 881 @LENGTH@ 219
------UPD StringLiteral@@"select client_id, resource_ids, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity refresh_token_validity from oauth_client_details where client_id=?" @TO@ "select client_id, resource_ids, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity from oauth_client_details where client_id=?" @AT@ 894 @LENGTH@ 206


UPD ReturnStatement@@MethodInvocation:cancelledFlag.get() @TO@ InfixExpression:done && cancelledFlag.get() @AT@ 3566 @LENGTH@ 27
---INS InfixExpression@@done && cancelledFlag.get() @TO@ ReturnStatement@@MethodInvocation:cancelledFlag.get() @AT@ 3573 @LENGTH@ 27
------INS SimpleName@@done @TO@ InfixExpression@@done && cancelledFlag.get() @AT@ 3573 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@done && cancelledFlag.get() @AT@ 3577 @LENGTH@ 2
------INS MethodInvocation@@cancelledFlag.get() @TO@ InfixExpression@@done && cancelledFlag.get() @AT@ 3581 @LENGTH@ 19
---------MOV SimpleName@@Name:cancelledFlag @TO@ MethodInvocation@@cancelledFlag.get() @AT@ 3573 @LENGTH@ 13
---------MOV SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@cancelledFlag.get() @AT@ 3587 @LENGTH@ 5
---DEL MethodInvocation@@cancelledFlag.get() @AT@ 3573 @LENGTH@ 19


UPD IfStatement@@if (e instanceof IOException) {  throw (IOException)e;} else {  throw new RuntimeException(e);} @TO@ if (e instanceof IOException) {  final Throwable cause=e.getCause();  if (cause instanceof ExecutionException) {  } else {    throw (IOException)e;  }} else {  throw new RuntimeException(e);} @AT@ 12969 @LENGTH@ 151


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      String type=null;      if (dynamicLoadProvider.isDefined()) {        List<Property> list=operation.asPropertyList();        Iterator<Property> it=list.iterator();        while (it.hasNext()) {          Property prop=it.next();          if (prop.getName().equals("type")) {            type=prop.getValue().asString();            break;          }        }        if (type != null) {          removeMetric(dynamicLoadProvider,type);        }        if (!dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined() && !dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {          context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().remove(CommonAttributes.DYNAMIC_LOAD_PROVIDER);        }      }      context.completeStep();    }    private void removeMetric(    ModelNode dynamicLoadProvider,    String type){      List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);      Iterator<ModelNode> it=list.iterator();      while (it.hasNext()) {        ModelNode node=it.next();        if (!node.get("type").asString().equals(type)) {          dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(node);        }      }      list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();      if (list.isEmpty()) {        dynamicLoadProvider.remove(CommonAttributes.LOAD_METRIC);      }    }  },OperationContext.Stage.MODEL);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      String type=null;      if (dynamicLoadProvider.isDefined()) {        List<Property> list=operation.asPropertyList();        Iterator<Property> it=list.iterator();        while (it.hasNext()) {          Property prop=it.next();          if (prop.getName().equals("type")) {            type=prop.getValue().asString();            break;          }        }        if (type != null) {          removeMetric(dynamicLoadProvider,type);        }        if (!dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined() && !dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {          context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().remove(CommonAttributes.DYNAMIC_LOAD_PROVIDER);        }      }      context.completeStep();    }    private void removeMetric(    ModelNode dynamicLoadProvider,    String type){      List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);      Iterator<ModelNode> it=list.iterator();      while (it.hasNext()) {        ModelNode node=it.next();        if (!node.get("type").asString().equals(type)) {          dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(node);        }      }      list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();      if (list.isEmpty()) {        dynamicLoadProvider.remove(CommonAttributes.LOAD_METRIC);      }    }  },OperationContext.Stage.MODEL);} @AT@ 2238 @LENGTH@ 2687
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2242 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2242 @LENGTH@ 17
------DEL Operator@@== @AT@ 2259 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2263 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2263 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2263 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2280 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2285 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      String type=null;      if (dynamicLoadProvider.isDefined()) {        List<Property> list=operation.asPropertyList();        Iterator<Property> it=list.iterator();        while (it.hasNext()) {          Property prop=it.next();          if (prop.getName().equals("type")) {            type=prop.getValue().asString();            break;          }        }        if (type != null) {          removeMetric(dynamicLoadProvider,type);        }        if (!dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined() && !dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {          context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().remove(CommonAttributes.DYNAMIC_LOAD_PROVIDER);        }      }      context.completeStep();    }    private void removeMetric(    ModelNode dynamicLoadProvider,    String type){      List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);      Iterator<ModelNode> it=list.iterator();      while (it.hasNext()) {        ModelNode node=it.next();        if (!node.get("type").asString().equals(type)) {          dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(node);        }      }      list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();      if (list.isEmpty()) {        dynamicLoadProvider.remove(CommonAttributes.LOAD_METRIC);      }    }  },OperationContext.Stage.MODEL);} @AT@ 2242 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2242 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2242 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2250 @LENGTH@ 9


UPD TryStatement@@try {  final String raIdentifier=ConnectorServices.getRegisteredResourceAdapterIdentifier(resourceAdapterName);  if (raIdentifier == null) {    throw MESSAGES.unknownResourceAdapter(resourceAdapterName);  }  final ResourceAdapterRepository resourceAdapterRepository=getResourceAdapterRepository();  final List<MessageListener> messageListeners=resourceAdapterRepository.getMessageListeners(raIdentifier);  if (messageListeners == null || messageListeners.isEmpty()) {    throw MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName());  }  MessageListener requiredMessageListener=null;  for (  final MessageListener messageListener : messageListeners) {    if (messageListenerInterface.equals(messageListener.getType())) {      requiredMessageListener=messageListener;      break;    }  }  if (requiredMessageListener == null) {    throw MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName());  }  final Activation activation=requiredMessageListener.getActivation();  final Properties validActivationConfigProps=this.filterUnknownActivationConfigProperties(resourceAdapterName,activation,activationConfigProperties);  final ActivationSpec activationSpec=activation.createInstance();  PropertyEditors.mapJavaBeanProperties(activationSpec,validActivationConfigProps);  return activationSpec;} catch (IllegalAccessException e) {  throw new RuntimeException(e);}catch (ResourceException e) {  throw new RuntimeException(e);}catch (InstantiationException e) {  throw new RuntimeException(e);}catch (NotFoundException e) {  throw new RuntimeException(e);}catch (IntrospectionException e) {  throw new RuntimeException(e);} @TO@ try {  final String raIdentifier=ConnectorServices.getRegisteredResourceAdapterIdentifier(resourceAdapterName);  if (raIdentifier == null) {    throw MESSAGES.unknownResourceAdapter(resourceAdapterName);  }  final ResourceAdapterRepository resourceAdapterRepository=getResourceAdapterRepository();  final List<MessageListener> messageListeners=resourceAdapterRepository.getMessageListeners(raIdentifier);  if (messageListeners == null || messageListeners.isEmpty()) {    throw MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);  }  MessageListener requiredMessageListener=null;  for (  final MessageListener messageListener : messageListeners) {    if (messageListenerInterface.equals(messageListener.getType())) {      requiredMessageListener=messageListener;      break;    }  }  if (requiredMessageListener == null) {    throw MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);  }  final Activation activation=requiredMessageListener.getActivation();  final Properties validActivationConfigProps=this.filterUnknownActivationConfigProperties(resourceAdapterName,activation,activationConfigProperties);  final ActivationSpec activationSpec=activation.createInstance();  PropertyEditors.mapJavaBeanProperties(activationSpec,validActivationConfigProps);  return activationSpec;} catch (IllegalAccessException e) {  throw new RuntimeException(e);}catch (ResourceException e) {  throw new RuntimeException(e);}catch (InstantiationException e) {  throw new RuntimeException(e);}catch (NotFoundException e) {  throw new RuntimeException(e);}catch (IntrospectionException e) {  throw new RuntimeException(e);} @AT@ 3940 @LENGTH@ 2739
---UPD IfStatement@@if (messageListeners == null || messageListeners.isEmpty()) {  throw MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName());} @TO@ if (messageListeners == null || messageListeners.isEmpty()) {  throw MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);} @AT@ 4649 @LENGTH@ 191
------UPD Block@@ThenBody:{  throw MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName());} @TO@ ThenBody:{  throw MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);} @AT@ 4709 @LENGTH@ 131
---------UPD ThrowStatement@@MethodInvocation:MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName()) @TO@ MethodInvocation:MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName) @AT@ 4727 @LENGTH@ 99
------------UPD MethodInvocation@@MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName()) @TO@ MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName) @AT@ 4733 @LENGTH@ 92
---------------UPD SimpleName@@MethodName:unknownMessageListenerType:[resourceAdapterName, messageListenerInterface.getName()] @TO@ MethodName:unknownMessageListenerType:[messageListenerInterface.getName(), resourceAdapterName] @AT@ 4742 @LENGTH@ 83
------------------DEL SimpleName@@resourceAdapterName @AT@ 4769 @LENGTH@ 19
------------------INS SimpleName@@resourceAdapterName @TO@ SimpleName@@MethodName:unknownMessageListenerType:[resourceAdapterName, messageListenerInterface.getName()] @AT@ 4805 @LENGTH@ 19
---UPD IfStatement@@if (requiredMessageListener == null) {  throw MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName());} @TO@ if (requiredMessageListener == null) {  throw MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);} @AT@ 5309 @LENGTH@ 168
------UPD Block@@ThenBody:{  throw MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName());} @TO@ ThenBody:{  throw MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName);} @AT@ 5346 @LENGTH@ 131
---------UPD ThrowStatement@@MethodInvocation:MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName()) @TO@ MethodInvocation:MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName) @AT@ 5364 @LENGTH@ 99
------------UPD MethodInvocation@@MESSAGES.unknownMessageListenerType(resourceAdapterName,messageListenerInterface.getName()) @TO@ MESSAGES.unknownMessageListenerType(messageListenerInterface.getName(),resourceAdapterName) @AT@ 5370 @LENGTH@ 92
---------------UPD SimpleName@@MethodName:unknownMessageListenerType:[resourceAdapterName, messageListenerInterface.getName()] @TO@ MethodName:unknownMessageListenerType:[messageListenerInterface.getName(), resourceAdapterName] @AT@ 5379 @LENGTH@ 83
------------------DEL SimpleName@@resourceAdapterName @AT@ 5406 @LENGTH@ 19
------------------INS SimpleName@@resourceAdapterName @TO@ SimpleName@@MethodName:unknownMessageListenerType:[resourceAdapterName, messageListenerInterface.getName()] @AT@ 5442 @LENGTH@ 19


UPD MethodDeclaration@@Object, MethodName:get, K key,  @TO@ Object, MethodName:get, Object key,  @AT@ 4143 @LENGTH@ 11
---UPD SingleVariableDeclaration@@K key @TO@ Object key @AT@ 4147 @LENGTH@ 5
------UPD SimpleType@@K @TO@ Object @AT@ 4147 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:configuration.addPostConstructInterceptor(SessionBeanSetSessionContextMethodInvocationInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SET_SESSION_CONTEXT_METHOD_INVOCATION_INTERCEPTOR) @TO@ MethodInvocation:configuration.addPostConstructInterceptor(SessionBeanSetSessionContextMethodInvocationInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SET_CONTEXT_METHOD_INVOCATION_INTERCEPTOR) @AT@ 2517 @LENGTH@ 202
---UPD MethodInvocation@@configuration.addPostConstructInterceptor(SessionBeanSetSessionContextMethodInvocationInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SET_SESSION_CONTEXT_METHOD_INVOCATION_INTERCEPTOR) @TO@ configuration.addPostConstructInterceptor(SessionBeanSetSessionContextMethodInvocationInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SET_CONTEXT_METHOD_INVOCATION_INTERCEPTOR) @AT@ 2517 @LENGTH@ 201
------UPD SimpleName@@MethodName:addPostConstructInterceptor:[SessionBeanSetSessionContextMethodInvocationInterceptor.FACTORY, InterceptorOrder.ComponentPostConstruct.EJB_SET_SESSION_CONTEXT_METHOD_INVOCATION_INTERCEPTOR] @TO@ MethodName:addPostConstructInterceptor:[SessionBeanSetSessionContextMethodInvocationInterceptor.FACTORY, InterceptorOrder.ComponentPostConstruct.EJB_SET_CONTEXT_METHOD_INVOCATION_INTERCEPTOR] @AT@ 2531 @LENGTH@ 187
---------UPD QualifiedName@@InterceptorOrder.ComponentPostConstruct.EJB_SET_SESSION_CONTEXT_METHOD_INVOCATION_INTERCEPTOR @TO@ InterceptorOrder.ComponentPostConstruct.EJB_SET_CONTEXT_METHOD_INVOCATION_INTERCEPTOR @AT@ 2624 @LENGTH@ 93
------------UPD SimpleName@@EJB_SET_SESSION_CONTEXT_METHOD_INVOCATION_INTERCEPTOR @TO@ EJB_SET_CONTEXT_METHOD_INVOCATION_INTERCEPTOR @AT@ 2664 @LENGTH@ 53


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1717 @LENGTH@ 166
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 1732 @LENGTH@ 13


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.disable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.disable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1905 @LENGTH@ 622
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1909 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1909 @LENGTH@ 17
------DEL Operator@@== @AT@ 1926 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 1930 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 1930 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 1930 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 1947 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 1952 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.disable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1909 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1909 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1909 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1917 @LENGTH@ 9


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]ToStringTypeConverter, [TypeConverter] @AT@ 2691 @LENGTH@ 205
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2691 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2702 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2704 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2717 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2717 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2717 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2723 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2726 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2732 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2732 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2741 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2751 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2751 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2758 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2775 @LENGTH@ 115
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2793 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2800 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2800 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2810 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2816 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2834 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2841 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2841 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2851 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2868 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2875 @LENGTH@ 4


UPD TypeDeclaration@@[public]CreateJCloudsContainerMetadata, CreateContainerBasicMetadata @TO@ [public]CreateJCloudsContainerMetadata, CreateContainerBasicMetadata<CreateJCloudsContainerOptions> @AT@ 716 @LENGTH@ 714
---INS ParameterizedType@@CreateContainerBasicMetadata<CreateJCloudsContainerOptions> @TO@ TypeDeclaration@@[public]CreateJCloudsContainerMetadata, CreateContainerBasicMetadata @AT@ 768 @LENGTH@ 59
------INS SimpleType@@CreateContainerBasicMetadata @TO@ ParameterizedType@@CreateContainerBasicMetadata<CreateJCloudsContainerOptions> @AT@ 768 @LENGTH@ 28
------INS SimpleType@@CreateJCloudsContainerOptions @TO@ ParameterizedType@@CreateContainerBasicMetadata<CreateJCloudsContainerOptions> @AT@ 797 @LENGTH@ 29
---DEL SimpleType@@CreateContainerBasicMetadata @AT@ 768 @LENGTH@ 28


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1637 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1637 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1647 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1655 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1671 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1671 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1677 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1694 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1713 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1720 @LENGTH@ 4


INS MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ServerMessages,  @AT@ 3442 @LENGTH@ 83
---INS SimpleType@@RuntimeException @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3425 @LENGTH@ 16
---INS SimpleName@@MethodName:cannotCreateVault @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3442 @LENGTH@ 17
---INS SingleVariableDeclaration@@@Param SecurityVaultException cause @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3460 @LENGTH@ 35
------INS SimpleType@@SecurityVaultException @TO@ SingleVariableDeclaration@@@Param SecurityVaultException cause @AT@ 3467 @LENGTH@ 22
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Param SecurityVaultException cause @AT@ 3490 @LENGTH@ 5
---INS SingleVariableDeclaration@@SecurityVaultException msg @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3497 @LENGTH@ 26
------INS SimpleType@@SecurityVaultException @TO@ SingleVariableDeclaration@@SecurityVaultException msg @AT@ 3497 @LENGTH@ 22
------INS SimpleName@@msg @TO@ SingleVariableDeclaration@@SecurityVaultException msg @AT@ 3520 @LENGTH@ 3


UPD ThrowStatement@@MethodInvocation:MESSAGES.cannotFindAppClient(realFile.getAbsoluteFile()) @TO@ MethodInvocation:MESSAGES.cannotFindAppClientFile(realFile.getAbsoluteFile()) @AT@ 4454 @LENGTH@ 63
---UPD MethodInvocation@@MESSAGES.cannotFindAppClient(realFile.getAbsoluteFile()) @TO@ MESSAGES.cannotFindAppClientFile(realFile.getAbsoluteFile()) @AT@ 4460 @LENGTH@ 56
------UPD SimpleName@@MethodName:cannotFindAppClient:[realFile.getAbsoluteFile()] @TO@ MethodName:cannotFindAppClientFile:[realFile.getAbsoluteFile()] @AT@ 4469 @LENGTH@ 47


DEL MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1352 @LENGTH@ 109
---DEL Modifier@@public @AT@ 1352 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1359 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUp @AT@ 1364 @LENGTH@ 5
---DEL SimpleType@@Exception @AT@ 1379 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 1399 @LENGTH@ 33
------DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 1399 @LENGTH@ 32
---------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 1399 @LENGTH@ 32
------------DEL StringLiteral@@"activemq-data" @AT@ 1415 @LENGTH@ 15
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1441 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1441 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1447 @LENGTH@ 5


INS VariableDeclarationStatement@@BasicClientCookie copy=new BasicClientCookie(toCopy.getName(),toCopy.getValue()); @TO@ MethodDeclaration@@public, static, Cookie, MethodName:copyCookie, Cookie toCopy, String targetServer,  @AT@ 11469 @LENGTH@ 84
---INS SimpleType@@BasicClientCookie @TO@ VariableDeclarationStatement@@BasicClientCookie copy=new BasicClientCookie(toCopy.getName(),toCopy.getValue()); @AT@ 11469 @LENGTH@ 17
---INS VariableDeclarationFragment@@copy=new BasicClientCookie(toCopy.getName(),toCopy.getValue()) @TO@ VariableDeclarationStatement@@BasicClientCookie copy=new BasicClientCookie(toCopy.getName(),toCopy.getValue()); @AT@ 11487 @LENGTH@ 65
------MOV ClassInstanceCreation@@BasicClientCookie[toCopy.getName(), toCopy.getValue()] @TO@ VariableDeclarationFragment@@copy=new BasicClientCookie(toCopy.getName(),toCopy.getValue()) @AT@ 11476 @LENGTH@ 58
------INS SimpleName@@copy @TO@ VariableDeclarationFragment@@copy=new BasicClientCookie(toCopy.getName(),toCopy.getValue()) @AT@ 11487 @LENGTH@ 4


INS MethodDeclaration@@RemoveException, MethodName:cannotRemoveWhileParticipatingInTransaction,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]EjbMessages,  @AT@ 77413 @LENGTH@ 46
---INS SimpleType@@RemoveException @TO@ MethodDeclaration@@RemoveException, MethodName:cannotRemoveWhileParticipatingInTransaction,  @AT@ 77397 @LENGTH@ 15
---INS SimpleName@@MethodName:cannotRemoveWhileParticipatingInTransaction @TO@ MethodDeclaration@@RemoveException, MethodName:cannotRemoveWhileParticipatingInTransaction,  @AT@ 77413 @LENGTH@ 43


UPD ExpressionStatement@@Assignment:newLastModified=f.getAttrs().getATime() @TO@ Assignment:newLastModified=f.getAttrs().getMTime() @AT@ 3068 @LENGTH@ 42
---UPD Assignment@@newLastModified=f.getAttrs().getATime() @TO@ newLastModified=f.getAttrs().getMTime() @AT@ 3068 @LENGTH@ 41
------UPD MethodInvocation@@f.getAttrs().getATime() @TO@ f.getAttrs().getMTime() @AT@ 3086 @LENGTH@ 23
---------UPD SimpleName@@MethodName:getATime:[] @TO@ MethodName:getMTime:[] @AT@ 3099 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:mailboxItem.put("itemContent",new ItemContent(nameValue[0],nameValue[1])) @TO@ MethodInvocation:mailboxItem.put("item-content",new ItemContent(nameValue[0],nameValue[1])) @AT@ 2369 @LENGTH@ 76
---UPD MethodInvocation@@mailboxItem.put("itemContent",new ItemContent(nameValue[0],nameValue[1])) @TO@ mailboxItem.put("item-content",new ItemContent(nameValue[0],nameValue[1])) @AT@ 2369 @LENGTH@ 75
------UPD SimpleName@@MethodName:put:["itemContent", new ItemContent(nameValue[0],nameValue[1])] @TO@ MethodName:put:["item-content", new ItemContent(nameValue[0],nameValue[1])] @AT@ 2381 @LENGTH@ 63
---------UPD StringLiteral@@"itemContent" @TO@ "item-content" @AT@ 2385 @LENGTH@ 13


UPD IfStatement@@if (!appclient) {  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_REMOTE_CLIENT_CONTEXT,new EjbClientContextParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MDB_CREATE_COMPONENT_DESCRIPTIONS,new MessageDrivenComponentDescriptionFactory());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());} @TO@ if (!appclient) {  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_REMOTE_CLIENT_CONTEXT,new EjbClientContextParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MDB_CREATE_COMPONENT_DESCRIPTIONS,new MessageDrivenComponentDescriptionFactory());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());} @AT@ 14173 @LENGTH@ 5377
---UPD Block@@ThenBody:{  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_REMOTE_CLIENT_CONTEXT,new EjbClientContextParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MDB_CREATE_COMPONENT_DESCRIPTIONS,new MessageDrivenComponentDescriptionFactory());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());} @TO@ ThenBody:{  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_REMOTE_CLIENT_CONTEXT,new EjbClientContextParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MDB_CREATE_COMPONENT_DESCRIPTIONS,new MessageDrivenComponentDescriptionFactory());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());} @AT@ 14189 @LENGTH@ 5361
------INS ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor()) @TO@ Block@@ThenBody:{  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_REMOTE_CLIENT_CONTEXT,new EjbClientContextParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MDB_CREATE_COMPONENT_DESCRIPTIONS,new MessageDrivenComponentDescriptionFactory());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());} @AT@ 19286 @LENGTH@ 150
---------INS MethodInvocation@@processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor()) @TO@ ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor()) @AT@ 19286 @LENGTH@ 149
------------INS SimpleName@@Name:processorTarget @TO@ MethodInvocation@@processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor()) @AT@ 19286 @LENGTH@ 15
------------INS SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE, new StatelessSessionBeanPoolMergingProcessor()] @TO@ MethodInvocation@@processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor()) @AT@ 19302 @LENGTH@ 133
---------------INS QualifiedName@@Phase.POST_MODULE @TO@ SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE, new StatelessSessionBeanPoolMergingProcessor()] @AT@ 19325 @LENGTH@ 17
------------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.POST_MODULE @AT@ 19325 @LENGTH@ 5
------------------INS SimpleName@@POST_MODULE @TO@ QualifiedName@@Phase.POST_MODULE @AT@ 19331 @LENGTH@ 11
---------------INS QualifiedName@@Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE @TO@ SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE, new StatelessSessionBeanPoolMergingProcessor()] @AT@ 19344 @LENGTH@ 42
------------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE @AT@ 19344 @LENGTH@ 5
------------------INS SimpleName@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE @TO@ QualifiedName@@Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE @AT@ 19350 @LENGTH@ 36
---------------INS ClassInstanceCreation@@StatelessSessionBeanPoolMergingProcessor[] @TO@ SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE, new StatelessSessionBeanPoolMergingProcessor()] @AT@ 19388 @LENGTH@ 46
------------------INS New@@new @TO@ ClassInstanceCreation@@StatelessSessionBeanPoolMergingProcessor[] @AT@ 19388 @LENGTH@ 3
------------------INS SimpleType@@StatelessSessionBeanPoolMergingProcessor @TO@ ClassInstanceCreation@@StatelessSessionBeanPoolMergingProcessor[] @AT@ 19392 @LENGTH@ 40
------INS ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor()) @TO@ Block@@ThenBody:{  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_EJB_REMOTE_CLIENT_CONTEXT,new EjbClientContextParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_MDB_CREATE_COMPONENT_DESCRIPTIONS,new MessageDrivenComponentDescriptionFactory());  processorTarget.addDeploymentProcessor(Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());} @AT@ 19457 @LENGTH@ 146
---------INS MethodInvocation@@processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor()) @TO@ ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor()) @AT@ 19457 @LENGTH@ 145
------------INS SimpleName@@Name:processorTarget @TO@ MethodInvocation@@processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor()) @AT@ 19457 @LENGTH@ 15
------------INS SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE, new MessageDrivenBeanPoolMergingProcessor()] @TO@ MethodInvocation@@processorTarget.addDeploymentProcessor(Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor()) @AT@ 19473 @LENGTH@ 129
---------------INS QualifiedName@@Phase.POST_MODULE @TO@ SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE, new MessageDrivenBeanPoolMergingProcessor()] @AT@ 19496 @LENGTH@ 17
------------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.POST_MODULE @AT@ 19496 @LENGTH@ 5
------------------INS SimpleName@@POST_MODULE @TO@ QualifiedName@@Phase.POST_MODULE @AT@ 19502 @LENGTH@ 11
---------------INS QualifiedName@@Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE @TO@ SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE, new MessageDrivenBeanPoolMergingProcessor()] @AT@ 19515 @LENGTH@ 41
------------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE @AT@ 19515 @LENGTH@ 5
------------------INS SimpleName@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE @TO@ QualifiedName@@Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE @AT@ 19521 @LENGTH@ 35
---------------INS ClassInstanceCreation@@MessageDrivenBeanPoolMergingProcessor[] @TO@ SimpleName@@MethodName:addDeploymentProcessor:[Phase.POST_MODULE, Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE, new MessageDrivenBeanPoolMergingProcessor()] @AT@ 19558 @LENGTH@ 43
------------------INS New@@new @TO@ ClassInstanceCreation@@MessageDrivenBeanPoolMergingProcessor[] @AT@ 19558 @LENGTH@ 3
------------------INS SimpleType@@MessageDrivenBeanPoolMergingProcessor @TO@ ClassInstanceCreation@@MessageDrivenBeanPoolMergingProcessor[] @AT@ 19562 @LENGTH@ 37


UPD CatchClause@@catch (ClassNotFoundException e) {  final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName);  theClass=clazz.define(cl);} @TO@ catch (ClassNotFoundException e) {  try {    final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName);    theClass=clazz.define(cl);  } catch (  RuntimeException ex) {    try {      theClass=cl.loadClass(stubClassName);    } catch (    ClassNotFoundException e1) {      EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);      throw ex;    }  }} @AT@ 1116 @LENGTH@ 186
---INS TryStatement@@try {  final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName);  theClass=clazz.define(cl);} catch (RuntimeException ex) {  try {    theClass=cl.loadClass(stubClassName);  } catch (  ClassNotFoundException e1) {    EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);    throw ex;  }} @TO@ CatchClause@@catch (ClassNotFoundException e) {  final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName);  theClass=clazz.define(cl);} @AT@ 1200 @LENGTH@ 594
------MOV VariableDeclarationStatement@@final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName); @TO@ TryStatement@@try {  final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName);  theClass=clazz.define(cl);} catch (RuntimeException ex) {  try {    theClass=cl.loadClass(stubClassName);  } catch (  ClassNotFoundException e1) {    EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);    throw ex;  }} @AT@ 1163 @LENGTH@ 88
------MOV ExpressionStatement@@Assignment:theClass=clazz.define(cl) @TO@ TryStatement@@try {  final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName);  theClass=clazz.define(cl);} catch (RuntimeException ex) {  try {    theClass=cl.loadClass(stubClassName);  } catch (  ClassNotFoundException e1) {    EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);    throw ex;  }} @AT@ 1264 @LENGTH@ 28
------INS CatchClause@@catch (RuntimeException ex) {  try {    theClass=cl.loadClass(stubClassName);  } catch (  ClassNotFoundException e1) {    EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);    throw ex;  }} @TO@ TryStatement@@try {  final ClassFile clazz=IIOPStubCompiler.compile(classData.getMyClass(),stubClassName);  theClass=clazz.define(cl);} catch (RuntimeException ex) {  try {    theClass=cl.loadClass(stubClassName);  } catch (  ClassNotFoundException e1) {    EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);    throw ex;  }} @AT@ 1370 @LENGTH@ 424
---------INS SingleVariableDeclaration@@RuntimeException ex @TO@ CatchClause@@catch (RuntimeException ex) {  try {    theClass=cl.loadClass(stubClassName);  } catch (  ClassNotFoundException e1) {    EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);    throw ex;  }} @AT@ 1377 @LENGTH@ 19
------------INS SimpleType@@RuntimeException @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 1377 @LENGTH@ 16
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 1394 @LENGTH@ 2
---------INS TryStatement@@try {  theClass=cl.loadClass(stubClassName);} catch (ClassNotFoundException e1) {  EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);  throw ex;} @TO@ CatchClause@@catch (RuntimeException ex) {  try {    theClass=cl.loadClass(stubClassName);  } catch (  ClassNotFoundException e1) {    EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);    throw ex;  }} @AT@ 1525 @LENGTH@ 255
------------INS ExpressionStatement@@Assignment:theClass=cl.loadClass(stubClassName) @TO@ TryStatement@@try {  theClass=cl.loadClass(stubClassName);} catch (ClassNotFoundException e1) {  EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);  throw ex;} @AT@ 1551 @LENGTH@ 39
---------------INS Assignment@@theClass=cl.loadClass(stubClassName) @TO@ ExpressionStatement@@Assignment:theClass=cl.loadClass(stubClassName) @AT@ 1551 @LENGTH@ 38
------------------INS SimpleName@@theClass @TO@ Assignment@@theClass=cl.loadClass(stubClassName) @AT@ 1551 @LENGTH@ 8
------------------INS Operator@@= @TO@ Assignment@@theClass=cl.loadClass(stubClassName) @AT@ 1559 @LENGTH@ 1
------------------INS MethodInvocation@@cl.loadClass(stubClassName) @TO@ Assignment@@theClass=cl.loadClass(stubClassName) @AT@ 1562 @LENGTH@ 27
---------------------INS SimpleName@@Name:cl @TO@ MethodInvocation@@cl.loadClass(stubClassName) @AT@ 1562 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:loadClass:[stubClassName] @TO@ MethodInvocation@@cl.loadClass(stubClassName) @AT@ 1565 @LENGTH@ 24
------------------------INS SimpleName@@stubClassName @TO@ SimpleName@@MethodName:loadClass:[stubClassName] @AT@ 1575 @LENGTH@ 13
------------INS CatchClause@@catch (ClassNotFoundException e1) {  EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);  throw ex;} @TO@ TryStatement@@try {  theClass=cl.loadClass(stubClassName);} catch (ClassNotFoundException e1) {  EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);  throw ex;} @AT@ 1609 @LENGTH@ 171
---------------INS SingleVariableDeclaration@@ClassNotFoundException e1 @TO@ CatchClause@@catch (ClassNotFoundException e1) {  EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);  throw ex;} @AT@ 1616 @LENGTH@ 25
------------------INS SimpleType@@ClassNotFoundException @TO@ SingleVariableDeclaration@@ClassNotFoundException e1 @AT@ 1616 @LENGTH@ 22
------------------INS SimpleName@@e1 @TO@ SingleVariableDeclaration@@ClassNotFoundException e1 @AT@ 1639 @LENGTH@ 2
---------------INS ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex) @TO@ CatchClause@@catch (ClassNotFoundException e1) {  EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);  throw ex;} @AT@ 1665 @LENGTH@ 67
------------------INS MethodInvocation@@EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex) @TO@ ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex) @AT@ 1665 @LENGTH@ 66
---------------------INS QualifiedName@@Name:EjbLogger.EJB3_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex) @AT@ 1665 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:dynamicStubCreationFailed:[stubClassName, ex] @TO@ MethodInvocation@@EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex) @AT@ 1687 @LENGTH@ 44
------------------------INS SimpleName@@stubClassName @TO@ SimpleName@@MethodName:dynamicStubCreationFailed:[stubClassName, ex] @AT@ 1713 @LENGTH@ 13
------------------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:dynamicStubCreationFailed:[stubClassName, ex] @AT@ 1728 @LENGTH@ 2
---------------INS ThrowStatement@@SimpleName:ex @TO@ CatchClause@@catch (ClassNotFoundException e1) {  EjbLogger.EJB3_LOGGER.dynamicStubCreationFailed(stubClassName,ex);  throw ex;} @AT@ 1753 @LENGTH@ 9
------------------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 1759 @LENGTH@ 2


UPD ReturnStatement@@ClassInstanceCreation:new EntityBeanComponentInstance(this,instanceReference,preDestroyInterceptor,methodInterceptors,interceptorContext) @TO@ ClassInstanceCreation:new EntityBeanComponentInstance(this,instanceReference,preDestroyInterceptor,methodInterceptors) @AT@ 5228 @LENGTH@ 127
---UPD ClassInstanceCreation@@EntityBeanComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors, interceptorContext] @TO@ EntityBeanComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors] @AT@ 5235 @LENGTH@ 119
------DEL SimpleName@@interceptorContext @AT@ 5335 @LENGTH@ 18


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ListProxies %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ListProxies %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2047 @LENGTH@ 1230
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ListProxies %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2051 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2051 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2051 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2059 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2075 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2079 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2079 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2079 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2106 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2079 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2113 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2124 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2124 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2142 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2147 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2149 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 2051 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:groupCommunicationService.build(target,container).setInitialMode(ServiceController.Mode.ON_DEMAND).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,groupCommunicationService.getGroupMembershipNotifierRegistryInjector()).install() @TO@ MethodInvocation:groupCommunicationService.build(target,container).setInitialMode(ServiceController.Mode.ON_DEMAND).addDependency(ServiceBuilder.DependencyType.OPTIONAL,GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,groupCommunicationService.getGroupMembershipNotifierRegistryInjector()).install() @AT@ 5695 @LENGTH@ 322
---UPD MethodInvocation@@groupCommunicationService.build(target,container).setInitialMode(ServiceController.Mode.ON_DEMAND).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,groupCommunicationService.getGroupMembershipNotifierRegistryInjector()).install() @TO@ groupCommunicationService.build(target,container).setInitialMode(ServiceController.Mode.ON_DEMAND).addDependency(ServiceBuilder.DependencyType.OPTIONAL,GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,groupCommunicationService.getGroupMembershipNotifierRegistryInjector()).install() @AT@ 5695 @LENGTH@ 321
------UPD MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, groupCommunicationService.getGroupMembershipNotifierRegistryInjector()] @TO@ MethodName:addDependency:[ServiceBuilder.DependencyType.OPTIONAL, GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, groupCommunicationService.getGroupMembershipNotifierRegistryInjector()] @AT@ 5695 @LENGTH@ 294
---------INS QualifiedName@@ServiceBuilder.DependencyType.OPTIONAL @TO@ MethodInvocation@@MethodName:addDependency:[GroupMembershipNotifierRegistryService.SERVICE_NAME, GroupMembershipNotifierRegistry.class, groupCommunicationService.getGroupMembershipNotifierRegistryInjector()] @AT@ 5826 @LENGTH@ 38
------------INS QualifiedName@@ServiceBuilder.DependencyType @TO@ QualifiedName@@ServiceBuilder.DependencyType.OPTIONAL @AT@ 5826 @LENGTH@ 29
---------------INS SimpleName@@ServiceBuilder @TO@ QualifiedName@@ServiceBuilder.DependencyType @AT@ 5826 @LENGTH@ 14
---------------INS SimpleName@@DependencyType @TO@ QualifiedName@@ServiceBuilder.DependencyType @AT@ 5841 @LENGTH@ 14
------------INS SimpleName@@OPTIONAL @TO@ QualifiedName@@ServiceBuilder.DependencyType.OPTIONAL @AT@ 5856 @LENGTH@ 8


UPD Block@@ElseBody:if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(bounded.getRejectedCount());} else {  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ ElseBody:if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(bounded.getRejectedCount());} else {  throw ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName);} @AT@ 2447 @LENGTH@ 343
---UPD IfStatement@@if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(bounded.getRejectedCount());} else {  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(bounded.getRejectedCount());} else {  throw ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName);} @AT@ 2447 @LENGTH@ 343
------UPD Block@@ElseBody:{  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ ElseBody:{  throw ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName);} @AT@ 2588 @LENGTH@ 202
---------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @TO@ MethodInvocation:ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @AT@ 2699 @LENGTH@ 81
------------INS MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @AT@ 2705 @LENGTH@ 79
---------------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @AT@ 2705 @LENGTH@ 24
---------------INS SimpleName@@MethodName:unsupportedBoundedQueueThreadPoolMetric:[attributeName] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @AT@ 2730 @LENGTH@ 54
------------------INS SimpleName@@attributeName @TO@ SimpleName@@MethodName:unsupportedBoundedQueueThreadPoolMetric:[attributeName] @AT@ 2770 @LENGTH@ 13
------------DEL ClassInstanceCreation@@IllegalStateException["Unsupported attribute '" + attributeName + "'"] @AT@ 2705 @LENGTH@ 74
---------------DEL New@@new @AT@ 2705 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 2709 @LENGTH@ 21
---------------DEL InfixExpression@@"Unsupported attribute '" + attributeName + "'" @AT@ 2731 @LENGTH@ 47
------------------DEL StringLiteral@@"Unsupported attribute '" @AT@ 2731 @LENGTH@ 25
------------------DEL Operator@@+ @AT@ 2756 @LENGTH@ 1
------------------DEL SimpleName@@attributeName @AT@ 2759 @LENGTH@ 13
------------------DEL StringLiteral@@"'" @AT@ 2775 @LENGTH@ 3
---UPD IfStatement@@if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(bounded.getRejectedCount());} else {  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(bounded.getRejectedCount());} else {  throw ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName);} @AT@ 2447 @LENGTH@ 343
------UPD Block@@ElseBody:{  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ ElseBody:{  throw ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName);} @AT@ 2588 @LENGTH@ 202
---------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @TO@ MethodInvocation:ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @AT@ 2699 @LENGTH@ 81
------------INS MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @AT@ 2705 @LENGTH@ 79
---------------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @AT@ 2705 @LENGTH@ 24
---------------INS SimpleName@@MethodName:unsupportedBoundedQueueThreadPoolMetric:[attributeName] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName) @AT@ 2730 @LENGTH@ 54
------------------INS SimpleName@@attributeName @TO@ SimpleName@@MethodName:unsupportedBoundedQueueThreadPoolMetric:[attributeName] @AT@ 2770 @LENGTH@ 13
------------DEL ClassInstanceCreation@@IllegalStateException["Unsupported attribute '" + attributeName + "'"] @AT@ 2705 @LENGTH@ 74
---------------DEL New@@new @AT@ 2705 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 2709 @LENGTH@ 21
---------------DEL InfixExpression@@"Unsupported attribute '" + attributeName + "'" @AT@ 2731 @LENGTH@ 47
------------------DEL StringLiteral@@"Unsupported attribute '" @AT@ 2731 @LENGTH@ 25
------------------DEL Operator@@+ @AT@ 2756 @LENGTH@ 1
------------------DEL SimpleName@@attributeName @AT@ 2759 @LENGTH@ 13
------------------DEL StringLiteral@@"'" @AT@ 2775 @LENGTH@ 3


UPD VariableDeclarationStatement@@final CacheEntry entry=cache.get(instance); @TO@ final CacheEntry entry=cache.get(instance.getPrimaryKey()); @AT@ 5232 @LENGTH@ 45
---UPD VariableDeclarationFragment@@entry=cache.get(instance) @TO@ entry=cache.get(instance.getPrimaryKey()) @AT@ 5249 @LENGTH@ 27
------UPD MethodInvocation@@cache.get(instance) @TO@ cache.get(instance.getPrimaryKey()) @AT@ 5257 @LENGTH@ 19
---------UPD SimpleName@@MethodName:get:[instance] @TO@ MethodName:get:[instance.getPrimaryKey()] @AT@ 5263 @LENGTH@ 13
------------INS MethodInvocation@@instance.getPrimaryKey() @TO@ SimpleName@@MethodName:get:[instance] @AT@ 5267 @LENGTH@ 24
---------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.getPrimaryKey() @AT@ 5267 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getPrimaryKey:[] @TO@ MethodInvocation@@instance.getPrimaryKey() @AT@ 5276 @LENGTH@ 15
------------DEL SimpleName@@instance @AT@ 5267 @LENGTH@ 8


INS MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]DomainControllerMessages,  @AT@ 20796 @LENGTH@ 63
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20771 @LENGTH@ 24
---INS SimpleName@@MethodName:failedToLoadModule @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20796 @LENGTH@ 18
---INS SingleVariableDeclaration@@@Cause ModuleLoadException e @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20815 @LENGTH@ 28
------INS SimpleType@@ModuleLoadException @TO@ SingleVariableDeclaration@@@Cause ModuleLoadException e @AT@ 20822 @LENGTH@ 19
------INS SimpleName@@e @TO@ SingleVariableDeclaration@@@Cause ModuleLoadException e @AT@ 20842 @LENGTH@ 1
---INS SingleVariableDeclaration@@String module @TO@ MethodDeclaration@@OperationFailedException, MethodName:failedToLoadModule, @Cause ModuleLoadException e, String module,  @AT@ 20844 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String module @AT@ 20844 @LENGTH@ 6
------INS SimpleName@@module @TO@ SingleVariableDeclaration@@String module @AT@ 20851 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1846 @LENGTH@ 156
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:recoverServices @AT@ 1861 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:context.removeService(LogServices.ROOT_LOGGER) @TO@ MethodInvocation:RootLoggerAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 1949 @LENGTH@ 47
------UPD MethodInvocation@@context.removeService(LogServices.ROOT_LOGGER) @TO@ RootLoggerAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 1949 @LENGTH@ 46
---------DEL SimpleName@@Name:context @AT@ 1949 @LENGTH@ 7
---------DEL SimpleName@@MethodName:removeService:[LogServices.ROOT_LOGGER] @AT@ 1957 @LENGTH@ 38
------------DEL QualifiedName@@LogServices.ROOT_LOGGER @AT@ 1971 @LENGTH@ 23
---------------DEL SimpleName@@LogServices @AT@ 1971 @LENGTH@ 11
---------------DEL SimpleName@@ROOT_LOGGER @AT@ 1983 @LENGTH@ 11
---------INS QualifiedName@@Name:RootLoggerAdd.INSTANCE @TO@ MethodInvocation@@context.removeService(LogServices.ROOT_LOGGER) @AT@ 2352 @LENGTH@ 22
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@context.removeService(LogServices.ROOT_LOGGER) @AT@ 2375 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2390 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2399 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2410 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2417 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2423 @LENGTH@ 4
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2317 @LENGTH@ 24


UPD MethodDeclaration@@void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 354 @LENGTH@ 67
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 430 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 430 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 436 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 443 @LENGTH@ 11


UPD IfStatement@@if (version == Version.TLD_1_2) {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {  throw unexpectedElement(reader);} @TO@ if (version == Version.TLD_1_1) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else if (version == Version.TLD_1_2) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else {  throw unexpectedElement(reader);} @AT@ 5046 @LENGTH@ 284


UPD EnhancedForStatement@@for (Processor child : nav.next()) {  if (child instanceof DefaultChannel) {    DefaultChannel channel=(DefaultChannel)child;    ProcessorDefinition def=channel.getProcessorDefinition();    navigateDefinition(def,sb);  }} @TO@ for (Processor child : nav.next()) {  if (child instanceof RouteContextProcessor) {    child=((RouteContextProcessor)child).getProcessor();  }  if (child instanceof DefaultChannel) {    DefaultChannel channel=(DefaultChannel)child;    ProcessorDefinition def=channel.getProcessorDefinition();    navigateDefinition(def,sb);  }} @AT@ 3026 @LENGTH@ 298
---INS IfStatement@@if (child instanceof RouteContextProcessor) {  child=((RouteContextProcessor)child).getProcessor();} @TO@ EnhancedForStatement@@for (Processor child : nav.next()) {  if (child instanceof DefaultChannel) {    DefaultChannel channel=(DefaultChannel)child;    ProcessorDefinition def=channel.getProcessorDefinition();    navigateDefinition(def,sb);  }} @AT@ 3043 @LENGTH@ 131
------INS InstanceofExpression@@child instanceof RouteContextProcessor @TO@ IfStatement@@if (child instanceof RouteContextProcessor) {  child=((RouteContextProcessor)child).getProcessor();} @AT@ 3047 @LENGTH@ 38
---------INS SimpleName@@child @TO@ InstanceofExpression@@child instanceof RouteContextProcessor @AT@ 3047 @LENGTH@ 5
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@child instanceof RouteContextProcessor @AT@ 3053 @LENGTH@ 10
---------INS SimpleType@@RouteContextProcessor @TO@ InstanceofExpression@@child instanceof RouteContextProcessor @AT@ 3064 @LENGTH@ 21
------INS Block@@ThenBody:{  child=((RouteContextProcessor)child).getProcessor();} @TO@ IfStatement@@if (child instanceof RouteContextProcessor) {  child=((RouteContextProcessor)child).getProcessor();} @AT@ 3087 @LENGTH@ 87
---------INS ExpressionStatement@@Assignment:child=((RouteContextProcessor)child).getProcessor() @TO@ Block@@ThenBody:{  child=((RouteContextProcessor)child).getProcessor();} @AT@ 3105 @LENGTH@ 55
------------INS Assignment@@child=((RouteContextProcessor)child).getProcessor() @TO@ ExpressionStatement@@Assignment:child=((RouteContextProcessor)child).getProcessor() @AT@ 3105 @LENGTH@ 54
---------------INS SimpleName@@child @TO@ Assignment@@child=((RouteContextProcessor)child).getProcessor() @AT@ 3105 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@child=((RouteContextProcessor)child).getProcessor() @AT@ 3110 @LENGTH@ 1
---------------INS MethodInvocation@@((RouteContextProcessor)child).getProcessor() @TO@ Assignment@@child=((RouteContextProcessor)child).getProcessor() @AT@ 3113 @LENGTH@ 46
------------------INS ParenthesizedExpression@@((RouteContextProcessor)child) @TO@ MethodInvocation@@((RouteContextProcessor)child).getProcessor() @AT@ 3113 @LENGTH@ 31
---------------------INS CastExpression@@(RouteContextProcessor)child @TO@ ParenthesizedExpression@@((RouteContextProcessor)child) @AT@ 3114 @LENGTH@ 29
------------------------INS SimpleType@@RouteContextProcessor @TO@ CastExpression@@(RouteContextProcessor)child @AT@ 3115 @LENGTH@ 21
------------------------INS SimpleName@@child @TO@ CastExpression@@(RouteContextProcessor)child @AT@ 3138 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getProcessor:[] @TO@ MethodInvocation@@((RouteContextProcessor)child).getProcessor() @AT@ 3145 @LENGTH@ 14


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public, static, final]MyFooBean, [TypeConverter, Serializable] @AT@ 9537 @LENGTH@ 128
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9537 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9548 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9550 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9563 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9563 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 9563 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 9569 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9572 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9578 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 9578 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 9587 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9597 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 9597 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 9604 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 9625 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 9632 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 9632 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9642 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9648 @LENGTH@ 5


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      String classname=null;      if (dynamicLoadProvider.isDefined()) {        List<Property> list=operation.asPropertyList();        Iterator<Property> it=list.iterator();        while (it.hasNext()) {          Property prop=it.next();          if (prop.getName().equals("class")) {            classname=prop.getValue().asString();            break;          }        }        if (classname != null) {          removeMetric(dynamicLoadProvider,classname);        }      }      if (!dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined() && !dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {        context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().remove(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      }      context.completeStep();    }    private void removeMetric(    ModelNode dynamicLoadProvider,    String classname){      List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);      Iterator<ModelNode> it=list.iterator();      while (it.hasNext()) {        ModelNode node=it.next();        if (!node.get("class").asString().equals(classname)) {          dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(node);        }      }      list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();      if (list.isEmpty()) {        dynamicLoadProvider.remove(CommonAttributes.CUSTOM_LOAD_METRIC);      }    }  },OperationContext.Stage.MODEL);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      String classname=null;      if (dynamicLoadProvider.isDefined()) {        List<Property> list=operation.asPropertyList();        Iterator<Property> it=list.iterator();        while (it.hasNext()) {          Property prop=it.next();          if (prop.getName().equals("class")) {            classname=prop.getValue().asString();            break;          }        }        if (classname != null) {          removeMetric(dynamicLoadProvider,classname);        }      }      if (!dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined() && !dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {        context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().remove(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      }      context.completeStep();    }    private void removeMetric(    ModelNode dynamicLoadProvider,    String classname){      List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);      Iterator<ModelNode> it=list.iterator();      while (it.hasNext()) {        ModelNode node=it.next();        if (!node.get("class").asString().equals(classname)) {          dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(node);        }      }      list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();      if (list.isEmpty()) {        dynamicLoadProvider.remove(CommonAttributes.CUSTOM_LOAD_METRIC);      }    }  },OperationContext.Stage.MODEL);} @AT@ 2262 @LENGTH@ 2738
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2266 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2266 @LENGTH@ 17
------DEL Operator@@== @AT@ 2283 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2287 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2287 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2287 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2304 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2309 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      String classname=null;      if (dynamicLoadProvider.isDefined()) {        List<Property> list=operation.asPropertyList();        Iterator<Property> it=list.iterator();        while (it.hasNext()) {          Property prop=it.next();          if (prop.getName().equals("class")) {            classname=prop.getValue().asString();            break;          }        }        if (classname != null) {          removeMetric(dynamicLoadProvider,classname);        }      }      if (!dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined() && !dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {        context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().remove(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      }      context.completeStep();    }    private void removeMetric(    ModelNode dynamicLoadProvider,    String classname){      List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);      Iterator<ModelNode> it=list.iterator();      while (it.hasNext()) {        ModelNode node=it.next();        if (!node.get("class").asString().equals(classname)) {          dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(node);        }      }      list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();      if (list.isEmpty()) {        dynamicLoadProvider.remove(CommonAttributes.CUSTOM_LOAD_METRIC);      }    }  },OperationContext.Stage.MODEL);} @AT@ 2266 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2266 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2266 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2274 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals((Integer)id,(Integer)activity.getAppId()) @TO@ MethodInvocation:assertEquals((int)id,activity.getAppId()) @AT@ 1524 @LENGTH@ 56
---UPD MethodInvocation@@assertEquals((Integer)id,(Integer)activity.getAppId()) @TO@ assertEquals((int)id,activity.getAppId()) @AT@ 1524 @LENGTH@ 55
------UPD SimpleName@@MethodName:assertEquals:[(Integer)id, (Integer)activity.getAppId()] @TO@ MethodName:assertEquals:[(int)id, activity.getAppId()] @AT@ 1524 @LENGTH@ 55
---------UPD CastExpression@@(Integer)id @TO@ (int)id @AT@ 1537 @LENGTH@ 11
------------DEL SimpleType@@Integer @AT@ 1538 @LENGTH@ 7
------------INS PrimitiveType@@int @TO@ CastExpression@@(Integer)id @AT@ 1538 @LENGTH@ 3
---------INS MethodInvocation@@activity.getAppId() @TO@ SimpleName@@MethodName:assertEquals:[(Integer)id, (Integer)activity.getAppId()] @AT@ 1546 @LENGTH@ 19
------------MOV SimpleName@@Name:activity @TO@ MethodInvocation@@activity.getAppId() @AT@ 1559 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getAppId:[] @TO@ MethodInvocation@@activity.getAppId() @AT@ 1568 @LENGTH@ 10
---------DEL CastExpression@@(Integer)activity.getAppId() @AT@ 1550 @LENGTH@ 28
------------DEL SimpleType@@Integer @AT@ 1551 @LENGTH@ 7
------------DEL MethodInvocation@@activity.getAppId() @AT@ 1559 @LENGTH@ 19


UPD VariableDeclarationStatement@@S3Endpoint endpoint=new S3Endpoint(uri,getCamelContext(),configuration); @TO@ S3Endpoint endpoint=new S3Endpoint(uri,this,configuration); @AT@ 1968 @LENGTH@ 76
---UPD VariableDeclarationFragment@@endpoint=new S3Endpoint(uri,getCamelContext(),configuration) @TO@ endpoint=new S3Endpoint(uri,this,configuration) @AT@ 1979 @LENGTH@ 64
------UPD ClassInstanceCreation@@S3Endpoint[uri, getCamelContext(), configuration] @TO@ S3Endpoint[uri, this, configuration] @AT@ 1990 @LENGTH@ 53
---------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 2010 @LENGTH@ 17
---------INS ThisExpression@@this @TO@ ClassInstanceCreation@@S3Endpoint[uri, getCamelContext(), configuration] @AT@ 2010 @LENGTH@ 4


UPD VariableDeclarationStatement@@String expected="{ \"name\" : { \"$regex\" : \"b.*\"}}"; @TO@ String expected="{ \"name\" : { \"$regex\" : \"b.*\" , \"$options\" : \"\"}}"; @AT@ 5785 @LENGTH@ 58
---UPD VariableDeclarationFragment@@expected="{ \"name\" : { \"$regex\" : \"b.*\"}}" @TO@ expected="{ \"name\" : { \"$regex\" : \"b.*\" , \"$options\" : \"\"}}" @AT@ 5792 @LENGTH@ 50
------UPD StringLiteral@@"{ \"name\" : { \"$regex\" : \"b.*\"}}" @TO@ "{ \"name\" : { \"$regex\" : \"b.*\" , \"$options\" : \"\"}}" @AT@ 5803 @LENGTH@ 39


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2583 @LENGTH@ 1015
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2642 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2642 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2648 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2655 @LENGTH@ 11


INS MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @TO@ TypeDeclaration@@[@Controller, @SessionAttributes(types=AuthorizationRequest.class), @RequestMapping(value="/oauth/authorize"), public]AuthorizationEndpoint, AbstractEndpoint[InitializingBean] @AT@ 13641 @LENGTH@ 201
---INS Modifier@@public @TO@ MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @AT@ 13641 @LENGTH@ 6
---INS ParameterizedType@@HttpEntity<String> @TO@ MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @AT@ 13648 @LENGTH@ 18
------INS SimpleType@@HttpEntity @TO@ ParameterizedType@@HttpEntity<String> @AT@ 13648 @LENGTH@ 10
------INS SimpleType@@String @TO@ ParameterizedType@@HttpEntity<String> @AT@ 13659 @LENGTH@ 6
---INS SimpleName@@MethodName:handleException @TO@ MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @AT@ 13667 @LENGTH@ 15
---INS SingleVariableDeclaration@@HttpSessionRequiredException e @TO@ MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @AT@ 13683 @LENGTH@ 30
------INS SimpleType@@HttpSessionRequiredException @TO@ SingleVariableDeclaration@@HttpSessionRequiredException e @AT@ 13683 @LENGTH@ 28
------INS SimpleName@@e @TO@ SingleVariableDeclaration@@HttpSessionRequiredException e @AT@ 13712 @LENGTH@ 1
---INS SingleVariableDeclaration@@ServletWebRequest webRequest @TO@ MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @AT@ 13715 @LENGTH@ 28
------INS SimpleType@@ServletWebRequest @TO@ SingleVariableDeclaration@@ServletWebRequest webRequest @AT@ 13715 @LENGTH@ 17
------INS SimpleName@@webRequest @TO@ SingleVariableDeclaration@@ServletWebRequest webRequest @AT@ 13733 @LENGTH@ 10
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @AT@ 13752 @LENGTH@ 9
---INS ReturnStatement@@ClassInstanceCreation:new ResponseEntity<String>("Invalid state",HttpStatus.FORBIDDEN) @TO@ MethodDeclaration@@public, HttpEntity<String>, MethodName:handleException, HttpSessionRequiredException e, ServletWebRequest webRequest, Exception,  @AT@ 13766 @LENGTH@ 73
------INS ClassInstanceCreation@@ResponseEntity<String>["Invalid state", HttpStatus.FORBIDDEN] @TO@ ReturnStatement@@ClassInstanceCreation:new ResponseEntity<String>("Invalid state",HttpStatus.FORBIDDEN) @AT@ 13773 @LENGTH@ 65
---------INS New@@new @TO@ ClassInstanceCreation@@ResponseEntity<String>["Invalid state", HttpStatus.FORBIDDEN] @AT@ 13773 @LENGTH@ 3
---------INS ParameterizedType@@ResponseEntity<String> @TO@ ClassInstanceCreation@@ResponseEntity<String>["Invalid state", HttpStatus.FORBIDDEN] @AT@ 13777 @LENGTH@ 22
------------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 13777 @LENGTH@ 14
------------INS SimpleType@@String @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 13792 @LENGTH@ 6
---------INS StringLiteral@@"Invalid state" @TO@ ClassInstanceCreation@@ResponseEntity<String>["Invalid state", HttpStatus.FORBIDDEN] @AT@ 13800 @LENGTH@ 15
---------INS QualifiedName@@HttpStatus.FORBIDDEN @TO@ ClassInstanceCreation@@ResponseEntity<String>["Invalid state", HttpStatus.FORBIDDEN] @AT@ 13817 @LENGTH@ 20
------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.FORBIDDEN @AT@ 13817 @LENGTH@ 10
------------INS SimpleName@@FORBIDDEN @TO@ QualifiedName@@HttpStatus.FORBIDDEN @AT@ 13828 @LENGTH@ 9


UPD VariableDeclarationStatement@@Object value=converter.convertTo(rightValue.getClass(),leftValue); @TO@ Object value=converter.tryConvertTo(rightValue.getClass(),leftValue); @AT@ 6154 @LENGTH@ 69
---UPD VariableDeclarationFragment@@value=converter.convertTo(rightValue.getClass(),leftValue) @TO@ value=converter.tryConvertTo(rightValue.getClass(),leftValue) @AT@ 6161 @LENGTH@ 61
------UPD MethodInvocation@@converter.convertTo(rightValue.getClass(),leftValue) @TO@ converter.tryConvertTo(rightValue.getClass(),leftValue) @AT@ 6169 @LENGTH@ 53
---------UPD SimpleName@@MethodName:convertTo:[rightValue.getClass(), leftValue] @TO@ MethodName:tryConvertTo:[rightValue.getClass(), leftValue] @AT@ 6179 @LENGTH@ 43


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3469 @LENGTH@ 512
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3557 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3557 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3563 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3570 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:allowsExecutingPageableMethodWithNullPageable,  @TO@ TypeDeclaration@@[@DirtiesContext, @ContextConfiguration(value="classpath:eclipselink.xml",inheritLocations=true), public]EclipseLinkNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 1428 @LENGTH@ 65
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:allowsExecutingPageableMethodWithNullPageable,  @AT@ 1428 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:allowsExecutingPageableMethodWithNullPageable,  @AT@ 1435 @LENGTH@ 4
---INS SimpleName@@MethodName:allowsExecutingPageableMethodWithNullPageable @TO@ MethodDeclaration@@public, void, MethodName:allowsExecutingPageableMethodWithNullPageable,  @AT@ 1440 @LENGTH@ 45


UPD MethodDeclaration@@private, voidMethodName:DomainRemoteFileRequestAndHandler, RemoteFileProtocolIdMapper mapper,  @TO@ public, voidMethodName:DomainRemoteFileRequestAndHandler, Executor asyncExecutor,  @AT@ 2128 @LENGTH@ 107
---UPD Modifier@@private @TO@ public @AT@ 2128 @LENGTH@ 7
---UPD SingleVariableDeclaration@@RemoteFileProtocolIdMapper mapper @TO@ Executor asyncExecutor @AT@ 2170 @LENGTH@ 33
------UPD SimpleType@@RemoteFileProtocolIdMapper @TO@ Executor @AT@ 2170 @LENGTH@ 26
------UPD SimpleName@@mapper @TO@ asyncExecutor @AT@ 2197 @LENGTH@ 6
---UPD SuperConstructorInvocation@@super(mapper);
 @TO@ super(MAPPER,asyncExecutor);
 @AT@ 2215 @LENGTH@ 14
------UPD SimpleName@@mapper @TO@ asyncExecutor @AT@ 2221 @LENGTH@ 6
------INS SimpleName@@MAPPER @TO@ SuperConstructorInvocation@@super(mapper);
 @AT@ 2246 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unable to get truested keys",ExceptionUtils.getRootCause(e)) @TO@ ClassInstanceCreation:new IllegalArgumentException("Unable to get trusted keys",ExceptionUtils.getRootCause(e)) @AT@ 7059 @LENGTH@ 118
---UPD ClassInstanceCreation@@IllegalArgumentException["Unable to get truested keys", ExceptionUtils.getRootCause(e)] @TO@ IllegalArgumentException["Unable to get trusted keys", ExceptionUtils.getRootCause(e)] @AT@ 7065 @LENGTH@ 111
------UPD StringLiteral@@"Unable to get truested keys" @TO@ "Unable to get trusted keys" @AT@ 7094 @LENGTH@ 29


UPD MethodDeclaration@@private, void, MethodName:applyToConfiguration, AvroConfiguration config, URI enpointUri, Map<String,Object> parameters, Exception,  @TO@ private, void, MethodName:applyToConfiguration, AvroConfiguration config, URI endpointUri, Map<String,Object> parameters, Exception,  @AT@ 2987 @LENGTH@ 878
---UPD SingleVariableDeclaration@@URI enpointUri @TO@ URI endpointUri @AT@ 3047 @LENGTH@ 14
------UPD SimpleName@@enpointUri @TO@ endpointUri @AT@ 3051 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:config.parseURI(enpointUri,parameters,this) @TO@ MethodInvocation:config.parseURI(endpointUri,parameters,this) @AT@ 3122 @LENGTH@ 46
------UPD MethodInvocation@@config.parseURI(enpointUri,parameters,this) @TO@ config.parseURI(endpointUri,parameters,this) @AT@ 3122 @LENGTH@ 45
---------UPD SimpleName@@MethodName:parseURI:[enpointUri, parameters, this] @TO@ MethodName:parseURI:[endpointUri, parameters, this] @AT@ 3129 @LENGTH@ 38
------------UPD SimpleName@@enpointUri @TO@ endpointUri @AT@ 3138 @LENGTH@ 10


UPD TypeDeclaration@@[public]LocalDistributableSessionManager,  @TO@ [public]LocalDistributableSessionManager, [SessionIdFactory] @AT@ 1309 @LENGTH@ 2461
---INS SimpleType@@SessionIdFactory @TO@ TypeDeclaration@@[public]LocalDistributableSessionManager,  @AT@ 1367 @LENGTH@ 16


UPD IfStatement@@if (preDestroys != null) {  for (  final LifecycleCallbackMetaData prePassivate : prePassivates) {    final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();    final String methodName=prePassivate.getMethodName();    final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);    builder.setPrePassivate(methodIdentifier);    if (prePassivate.getClassName() == null || prePassivate.getClassName().isEmpty()) {      final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();      component.addInterceptorMethodOverride(className,builder.build());    } else {      component.addInterceptorMethodOverride(prePassivate.getClassName(),builder.build());    }  }} @TO@ if (prePassivates != null) {  for (  final LifecycleCallbackMetaData prePassivate : prePassivates) {    final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();    final String methodName=prePassivate.getMethodName();    final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);    builder.setPrePassivate(methodIdentifier);    if (prePassivate.getClassName() == null || prePassivate.getClassName().isEmpty()) {      final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();      component.addInterceptorMethodOverride(className,builder.build());    } else {      component.addInterceptorMethodOverride(prePassivate.getClassName(),builder.build());    }  }} @AT@ 10632 @LENGTH@ 1060
---UPD InfixExpression@@preDestroys != null @TO@ prePassivates != null @AT@ 10636 @LENGTH@ 19
------UPD SimpleName@@preDestroys @TO@ prePassivates @AT@ 10636 @LENGTH@ 11


UPD VariableDeclarationStatement@@Integer redux=exchange.getContext().getTypeConverter().convertTo(Integer.class,after.trim()); @TO@ Integer redux=exchange.getContext().getTypeConverter().tryConvertTo(Integer.class,after.trim()); @AT@ 11985 @LENGTH@ 96
---UPD VariableDeclarationFragment@@redux=exchange.getContext().getTypeConverter().convertTo(Integer.class,after.trim()) @TO@ redux=exchange.getContext().getTypeConverter().tryConvertTo(Integer.class,after.trim()) @AT@ 11993 @LENGTH@ 87
------UPD MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(Integer.class,after.trim()) @TO@ exchange.getContext().getTypeConverter().tryConvertTo(Integer.class,after.trim()) @AT@ 12001 @LENGTH@ 79
---------UPD SimpleName@@MethodName:convertTo:[Integer.class, after.trim()] @TO@ MethodName:tryConvertTo:[Integer.class, after.trim()] @AT@ 12042 @LENGTH@ 38


INS MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @TO@ TypeDeclaration@@[public]ParserUtil,  @AT@ 3195 @LENGTH@ 358
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3195 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3202 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3209 @LENGTH@ 4
---INS SimpleName@@MethodName:parse @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3214 @LENGTH@ 5
---INS SingleVariableDeclaration@@String str @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3220 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String str @AT@ 3220 @LENGTH@ 6
------INS SimpleName@@str @TO@ SingleVariableDeclaration@@String str @AT@ 3227 @LENGTH@ 3
---INS SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3232 @LENGTH@ 47
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @AT@ 3232 @LENGTH@ 5
------INS SimpleType@@CommandLineParser.CallbackHandler @TO@ SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @AT@ 3238 @LENGTH@ 33
------INS SimpleName@@handler @TO@ SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @AT@ 3272 @LENGTH@ 7
---INS SingleVariableDeclaration@@ParsingState initialState @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3281 @LENGTH@ 25
------INS SimpleType@@ParsingState @TO@ SingleVariableDeclaration@@ParsingState initialState @AT@ 3281 @LENGTH@ 12
------INS SimpleName@@initialState @TO@ SingleVariableDeclaration@@ParsingState initialState @AT@ 3294 @LENGTH@ 12
---INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3315 @LENGTH@ 22
---INS IfStatement@@if (str == null) {  return;} @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3348 @LENGTH@ 47
------INS InfixExpression@@str == null @TO@ IfStatement@@if (str == null) {  return;} @AT@ 3351 @LENGTH@ 11
---------INS SimpleName@@str @TO@ InfixExpression@@str == null @AT@ 3351 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@str == null @AT@ 3354 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@str == null @AT@ 3358 @LENGTH@ 4
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (str == null) {  return;} @AT@ 3364 @LENGTH@ 31
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 3378 @LENGTH@ 7
---INS VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3404 @LENGTH@ 80
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @AT@ 3404 @LENGTH@ 5
------INS SimpleType@@ParsingStateCallbackHandler @TO@ VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @AT@ 3410 @LENGTH@ 27
------INS VariableDeclarationFragment@@callbackHandler=getCallbackHandler(handler) @TO@ VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @AT@ 3438 @LENGTH@ 45
---------INS SimpleName@@callbackHandler @TO@ VariableDeclarationFragment@@callbackHandler=getCallbackHandler(handler) @AT@ 3438 @LENGTH@ 15
---------INS MethodInvocation@@getCallbackHandler(handler) @TO@ VariableDeclarationFragment@@callbackHandler=getCallbackHandler(handler) @AT@ 3456 @LENGTH@ 27
------------INS SimpleName@@MethodName:getCallbackHandler:[handler] @TO@ MethodInvocation@@getCallbackHandler(handler) @AT@ 3456 @LENGTH@ 27
---------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:getCallbackHandler:[handler] @AT@ 3475 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:StateParser.parse(str,callbackHandler,initialState) @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3493 @LENGTH@ 54
------INS MethodInvocation@@StateParser.parse(str,callbackHandler,initialState) @TO@ ExpressionStatement@@MethodInvocation:StateParser.parse(str,callbackHandler,initialState) @AT@ 3493 @LENGTH@ 53
---------INS SimpleName@@Name:StateParser @TO@ MethodInvocation@@StateParser.parse(str,callbackHandler,initialState) @AT@ 3493 @LENGTH@ 11
---------INS SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @TO@ MethodInvocation@@StateParser.parse(str,callbackHandler,initialState) @AT@ 3505 @LENGTH@ 41
------------INS SimpleName@@str @TO@ SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @AT@ 3511 @LENGTH@ 3
------------INS SimpleName@@callbackHandler @TO@ SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @AT@ 3516 @LENGTH@ 15
------------INS SimpleName@@initialState @TO@ SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @AT@ 3533 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:Validate.isTrue(NumberUtils.isNumber(object.toString()),annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " muust be numeric") @TO@ MethodInvocation:Validate.isTrue(NumberUtils.isNumber(object.toString()),annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " must be numeric") @AT@ 78256 @LENGTH@ 266
---UPD MethodInvocation@@Validate.isTrue(NumberUtils.isNumber(object.toString()),annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " muust be numeric") @TO@ Validate.isTrue(NumberUtils.isNumber(object.toString()),annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " must be numeric") @AT@ 78256 @LENGTH@ 265
------UPD SimpleName@@MethodName:isTrue:[NumberUtils.isNumber(object.toString()), annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " muust be numeric"] @TO@ MethodName:isTrue:[NumberUtils.isNumber(object.toString()), annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " must be numeric"] @AT@ 78265 @LENGTH@ 256
---------UPD InfixExpression@@annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " muust be numeric" @TO@ annotationName + " '" + attributeName+ "' attribute for field '"+ fieldName+ "' in backing type "+ entity.getFullyQualifiedTypeName()+ " must be numeric" @AT@ 78313 @LENGTH@ 207
------------UPD StringLiteral@@" muust be numeric" @TO@ " must be numeric" @AT@ 78501 @LENGTH@ 19


UPD FieldDeclaration@@private, List<PersistenceUnitMetadata>, [persistenceUnits] @TO@ private, final, List<PersistenceUnitMetadata>, [persistenceUnits] @AT@ 1681 @LENGTH@ 55
---INS Modifier@@final @TO@ FieldDeclaration@@private, List<PersistenceUnitMetadata>, [persistenceUnits] @AT@ 1619 @LENGTH@ 5


UPD VariableDeclarationStatement@@final String host=InetAddress.getByName(managementSocket.getHostName()).getHostName(); @TO@ final String host=ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()); @AT@ 8389 @LENGTH@ 88
---UPD VariableDeclarationFragment@@host=InetAddress.getByName(managementSocket.getHostName()).getHostName() @TO@ host=ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @AT@ 8402 @LENGTH@ 74
------INS MethodInvocation@@ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @TO@ VariableDeclarationFragment@@host=InetAddress.getByName(managementSocket.getHostName()).getHostName() @AT@ 8456 @LENGTH@ 108
---------INS SimpleName@@Name:ProtocolUtils @TO@ MethodInvocation@@ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @AT@ 8456 @LENGTH@ 13
---------INS SimpleName@@MethodName:formatPossibleIpv6Address:[InetAddress.getByName(managementSocket.getHostName()).getHostName()] @TO@ MethodInvocation@@ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @AT@ 8470 @LENGTH@ 94
------------MOV MethodInvocation@@InetAddress.getByName(managementSocket.getHostName()).getHostName() @TO@ SimpleName@@MethodName:formatPossibleIpv6Address:[InetAddress.getByName(managementSocket.getHostName()).getHostName()] @AT@ 8409 @LENGTH@ 67


UPD VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> correct=new HashMap<NetworkInterface,Set<InetAddress>>(); @TO@ Map<NetworkInterface,Set<InetAddress>> correct=new LinkedHashMap<NetworkInterface,Set<InetAddress>>(); @AT@ 1866 @LENGTH@ 100
---UPD VariableDeclarationFragment@@correct=new HashMap<NetworkInterface,Set<InetAddress>>() @TO@ correct=new LinkedHashMap<NetworkInterface,Set<InetAddress>>() @AT@ 1906 @LENGTH@ 59
------UPD ClassInstanceCreation@@HashMap<NetworkInterface,Set<InetAddress>>[] @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>>[] @AT@ 1916 @LENGTH@ 49
---------UPD ParameterizedType@@HashMap<NetworkInterface,Set<InetAddress>> @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>> @AT@ 1920 @LENGTH@ 43
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 1920 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:this.getConfigurators().add(new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
) @TO@ MethodDeclaration@@protected, void, MethodName:addCurrentInvocationContextFactory,  @AT@ 4753 @LENGTH@ 634
---INS MethodInvocation@@this.getConfigurators().add(new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:this.getConfigurators().add(new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
) @AT@ 4753 @LENGTH@ 633
------INS MethodInvocation@@MethodName:getConfigurators:[] @TO@ MethodInvocation@@this.getConfigurators().add(new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
) @AT@ 4753 @LENGTH@ 23
------INS ThisExpression@@this @TO@ MethodInvocation@@this.getConfigurators().add(new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
) @AT@ 4753 @LENGTH@ 4
------INS SimpleName@@MethodName:add:[new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
] @TO@ MethodInvocation@@this.getConfigurators().add(new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
) @AT@ 4777 @LENGTH@ 609
---------INS ClassInstanceCreation@@ComponentConfigurator[] @TO@ SimpleName@@MethodName:add:[new ComponentConfigurator(){
  @Override public void configure(  DeploymentPhaseContext context,  ComponentDescription description,  ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR);
    configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR);
  }
}
] @AT@ 4781 @LENGTH@ 604
------------INS New@@new @TO@ ClassInstanceCreation@@ComponentConfigurator[] @AT@ 4781 @LENGTH@ 3
------------INS SimpleType@@ComponentConfigurator @TO@ ClassInstanceCreation@@ComponentConfigurator[] @AT@ 4785 @LENGTH@ 21
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ComponentConfigurator[] @AT@ 4809 @LENGTH@ 576
---------------INS MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4845 @LENGTH@ 530
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 4845 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 4852 @LENGTH@ 4
------------------INS SimpleName@@MethodName:configure @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 4857 @LENGTH@ 9
------------------INS SingleVariableDeclaration@@DeploymentPhaseContext context @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 4867 @LENGTH@ 30
---------------------INS SimpleType@@DeploymentPhaseContext @TO@ SingleVariableDeclaration@@DeploymentPhaseContext context @AT@ 4867 @LENGTH@ 22
---------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@DeploymentPhaseContext context @AT@ 4890 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@ComponentDescription description @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 4899 @LENGTH@ 32
---------------------INS SimpleType@@ComponentDescription @TO@ SingleVariableDeclaration@@ComponentDescription description @AT@ 4899 @LENGTH@ 20
---------------------INS SimpleName@@description @TO@ SingleVariableDeclaration@@ComponentDescription description @AT@ 4920 @LENGTH@ 11
------------------INS SingleVariableDeclaration@@ComponentConfiguration configuration @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 4933 @LENGTH@ 36
---------------------INS SimpleType@@ComponentConfiguration @TO@ SingleVariableDeclaration@@ComponentConfiguration configuration @AT@ 4933 @LENGTH@ 22
---------------------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@ComponentConfiguration configuration @AT@ 4956 @LENGTH@ 13
------------------INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 4978 @LENGTH@ 33
------------------INS ExpressionStatement@@MethodInvocation:configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR) @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 5030 @LENGTH@ 160
---------------------INS MethodInvocation@@configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR) @TO@ ExpressionStatement@@MethodInvocation:configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR) @AT@ 5030 @LENGTH@ 159
------------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR) @AT@ 5030 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:addPostConstructInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR] @TO@ MethodInvocation@@configuration.addPostConstructInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR) @AT@ 5044 @LENGTH@ 145
---------------------------INS QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @TO@ SimpleName@@MethodName:addPostConstructInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR] @AT@ 5072 @LENGTH@ 43
------------------------------INS SimpleName@@CurrentInvocationContextInterceptor @TO@ QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @AT@ 5072 @LENGTH@ 35
------------------------------INS SimpleName@@FACTORY @TO@ QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @AT@ 5108 @LENGTH@ 7
---------------------------INS QualifiedName@@InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR @TO@ SimpleName@@MethodName:addPostConstructInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR] @AT@ 5117 @LENGTH@ 71
------------------------------INS QualifiedName@@InterceptorOrder.ComponentPostConstruct @TO@ QualifiedName@@InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR @AT@ 5117 @LENGTH@ 39
---------------------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.ComponentPostConstruct @AT@ 5117 @LENGTH@ 16
---------------------------------INS SimpleName@@ComponentPostConstruct @TO@ QualifiedName@@InterceptorOrder.ComponentPostConstruct @AT@ 5134 @LENGTH@ 22
------------------------------INS SimpleName@@EJB_SESSION_CONTEXT_INTERCEPTOR @TO@ QualifiedName@@InterceptorOrder.ComponentPostConstruct.EJB_SESSION_CONTEXT_INTERCEPTOR @AT@ 5157 @LENGTH@ 31
------------------INS ExpressionStatement@@MethodInvocation:configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR) @TO@ MethodDeclaration@@public, void, MethodName:configure, DeploymentPhaseContext context, ComponentDescription description, ComponentConfiguration configuration, DeploymentUnitProcessingException,  @AT@ 5207 @LENGTH@ 154
---------------------INS MethodInvocation@@configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR) @TO@ ExpressionStatement@@MethodInvocation:configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR) @AT@ 5207 @LENGTH@ 153
------------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR) @AT@ 5207 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:addPreDestroyInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR] @TO@ MethodInvocation@@configuration.addPreDestroyInterceptor(CurrentInvocationContextInterceptor.FACTORY,InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR) @AT@ 5221 @LENGTH@ 139
---------------------------INS QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @TO@ SimpleName@@MethodName:addPreDestroyInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR] @AT@ 5246 @LENGTH@ 43
------------------------------INS SimpleName@@CurrentInvocationContextInterceptor @TO@ QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @AT@ 5246 @LENGTH@ 35
------------------------------INS SimpleName@@FACTORY @TO@ QualifiedName@@CurrentInvocationContextInterceptor.FACTORY @AT@ 5282 @LENGTH@ 7
---------------------------INS QualifiedName@@InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR @TO@ SimpleName@@MethodName:addPreDestroyInterceptor:[CurrentInvocationContextInterceptor.FACTORY, InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR] @AT@ 5291 @LENGTH@ 68
------------------------------INS QualifiedName@@InterceptorOrder.ComponentPreDestroy @TO@ QualifiedName@@InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR @AT@ 5291 @LENGTH@ 36
---------------------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.ComponentPreDestroy @AT@ 5291 @LENGTH@ 16
---------------------------------INS SimpleName@@ComponentPreDestroy @TO@ QualifiedName@@InterceptorOrder.ComponentPreDestroy @AT@ 5308 @LENGTH@ 19
------------------------------INS SimpleName@@EJB_SESSION_CONTEXT_INTERCEPTOR @TO@ QualifiedName@@InterceptorOrder.ComponentPreDestroy.EJB_SESSION_CONTEXT_INTERCEPTOR @AT@ 5328 @LENGTH@ 31


INS ExpressionStatement@@MethodInvocation:builder.addImportPackages(InitialContextFactoryBuilder.class) @TO@ MethodDeclaration@@public, InputStream, MethodName:openStream,  @AT@ 2644 @LENGTH@ 62
---INS MethodInvocation@@builder.addImportPackages(InitialContextFactoryBuilder.class) @TO@ ExpressionStatement@@MethodInvocation:builder.addImportPackages(InitialContextFactoryBuilder.class) @AT@ 2644 @LENGTH@ 61
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addImportPackages(InitialContextFactoryBuilder.class) @AT@ 2644 @LENGTH@ 7
------INS SimpleName@@MethodName:addImportPackages:[InitialContextFactoryBuilder.class] @TO@ MethodInvocation@@builder.addImportPackages(InitialContextFactoryBuilder.class) @AT@ 2652 @LENGTH@ 53
---------INS TypeLiteral@@InitialContextFactoryBuilder.class @TO@ SimpleName@@MethodName:addImportPackages:[InitialContextFactoryBuilder.class] @AT@ 2670 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler) @TO@ MethodInvocation:hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler,EnumSet.of(Flag.HOST_CONTROLLER_ONLY)) @AT@ 16730 @LENGTH@ 109
---UPD MethodInvocation@@hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler) @TO@ hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler,EnumSet.of(Flag.HOST_CONTROLLER_ONLY)) @AT@ 16730 @LENGTH@ 108
------UPD SimpleName@@MethodName:registerOperationHandler:[ProcessReloadHandler.OPERATION_NAME, reloadHandler, reloadHandler] @TO@ MethodName:registerOperationHandler:[ProcessReloadHandler.OPERATION_NAME, reloadHandler, reloadHandler, EnumSet.of(Flag.HOST_CONTROLLER_ONLY)] @AT@ 16747 @LENGTH@ 91
---------INS MethodInvocation@@EnumSet.of(Flag.HOST_CONTROLLER_ONLY) @TO@ SimpleName@@MethodName:registerOperationHandler:[ProcessReloadHandler.OPERATION_NAME, reloadHandler, reloadHandler] @AT@ 16839 @LENGTH@ 37
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Flag.HOST_CONTROLLER_ONLY) @AT@ 16839 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[Flag.HOST_CONTROLLER_ONLY] @TO@ MethodInvocation@@EnumSet.of(Flag.HOST_CONTROLLER_ONLY) @AT@ 16847 @LENGTH@ 29
---------------INS QualifiedName@@Flag.HOST_CONTROLLER_ONLY @TO@ SimpleName@@MethodName:of:[Flag.HOST_CONTROLLER_ONLY] @AT@ 16850 @LENGTH@ 25
------------------INS SimpleName@@Flag @TO@ QualifiedName@@Flag.HOST_CONTROLLER_ONLY @AT@ 16850 @LENGTH@ 4
------------------INS SimpleName@@HOST_CONTROLLER_ONLY @TO@ QualifiedName@@Flag.HOST_CONTROLLER_ONLY @AT@ 16855 @LENGTH@ 20


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2609 @LENGTH@ 1486
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2668 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2668 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2674 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2681 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2173 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2327 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2362 @LENGTH@ 91
------INS MethodInvocation@@UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2362 @LENGTH@ 90
---------INS QualifiedName@@Name:UnboundedQueueThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2362 @LENGTH@ 36
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2399 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2414 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2423 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2434 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2441 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2447 @LENGTH@ 4


MOV MethodDeclaration@@String, MethodName:handlerAttachedToHandlers, String handlerName, Collection<String> handlers,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]LoggingMessages,  @AT@ 5193 @LENGTH@ 75


DEL ExpressionStatement@@MethodInvocation:entityBeanComponent.getCache().reference(instance) @AT@ 4786 @LENGTH@ 51
---DEL MethodInvocation@@entityBeanComponent.getCache().reference(instance) @AT@ 4786 @LENGTH@ 50
------DEL MethodInvocation@@MethodName:getCache:[] @AT@ 4786 @LENGTH@ 30
------DEL SimpleName@@Name:entityBeanComponent @AT@ 4786 @LENGTH@ 19
------DEL SimpleName@@MethodName:reference:[instance] @AT@ 4817 @LENGTH@ 19
---------DEL SimpleName@@instance @AT@ 4827 @LENGTH@ 8


MOV FieldDeclaration@@private, final, CountDownLatch, [latch=new CountDownLatch(1)] @TO@ TypeDeclaration@@[public]SedaWaitForTaskNewerOnCompletionTest, ContextTestSupport @AT@ 1250 @LENGTH@ 59


INS ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @TO@ MethodDeclaration@@public, CommandProcessorResponse, MethodName:run, String command,  @AT@ 2320 @LENGTH@ 107
---INS MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @TO@ ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2320 @LENGTH@ 106
------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2320 @LENGTH@ 22
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2320 @LENGTH@ 6
------INS SimpleName@@MethodName:setContextClassLoader:[Utilities.addResourceFilesToClassPath(ss.getConf())] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2343 @LENGTH@ 83
---------INS MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @TO@ SimpleName@@MethodName:setContextClassLoader:[Utilities.addResourceFilesToClassPath(ss.getConf())] @AT@ 2374 @LENGTH@ 51
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @AT@ 2374 @LENGTH@ 9
------------INS SimpleName@@MethodName:addResourceFilesToClassPath:[ss.getConf()] @TO@ MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @AT@ 2384 @LENGTH@ 41
---------------INS MethodInvocation@@ss.getConf() @TO@ SimpleName@@MethodName:addResourceFilesToClassPath:[ss.getConf()] @AT@ 2412 @LENGTH@ 12
------------------INS SimpleName@@Name:ss @TO@ MethodInvocation@@ss.getConf() @AT@ 2412 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getConf:[] @TO@ MethodInvocation@@ss.getConf() @AT@ 2415 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1385 @LENGTH@ 109
---DEL Modifier@@public @AT@ 1385 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1392 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUp @AT@ 1397 @LENGTH@ 5
---DEL SimpleType@@Exception @AT@ 1412 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 1432 @LENGTH@ 33
------DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 1432 @LENGTH@ 32
---------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 1432 @LENGTH@ 32
------------DEL StringLiteral@@"activemq-data" @AT@ 1448 @LENGTH@ 15
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1474 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1474 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1480 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3420 @LENGTH@ 346
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3482 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3482 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3488 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3495 @LENGTH@ 11


UPD EnhancedForStatement@@for (Class type : classes) {  if (LOG.isTraceEnabled()) {    LOG.trace("Loading converter class: {}",ObjectHelper.name(type));  }  loadConverterMethods(registry,type);} @TO@ for (Class<?> type : classes) {  if (LOG.isTraceEnabled()) {    LOG.trace("Loading converter class: {}",ObjectHelper.name(type));  }  loadConverterMethods(registry,type);} @AT@ 6228 @LENGTH@ 225
---UPD SingleVariableDeclaration@@Class type @TO@ Class<?> type @AT@ 6233 @LENGTH@ 10
------DEL SimpleType@@Class @AT@ 6233 @LENGTH@ 5
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class type @AT@ 6247 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 6247 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 6253 @LENGTH@ 1


UPD FieldDeclaration@@private, boolean, [DONE=false] @TO@ private, boolean, [done] @AT@ 2272 @LENGTH@ 29
---UPD VariableDeclarationFragment@@DONE=false @TO@ done @AT@ 2288 @LENGTH@ 12
------UPD SimpleName@@DONE @TO@ done @AT@ 2288 @LENGTH@ 4
------DEL BooleanLiteral@@false @AT@ 2295 @LENGTH@ 5


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1670 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1670 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1680 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1688 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1704 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1704 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1710 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1727 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1746 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1753 @LENGTH@ 4


UPD ThrowStatement@@MethodInvocation:MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_PORT),reader.getLocation()) @TO@ MethodInvocation:MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_ADDRESS),reader.getLocation()) @AT@ 57403 @LENGTH@ 100
---UPD MethodInvocation@@MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_PORT),reader.getLocation()) @TO@ MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_ADDRESS),reader.getLocation()) @AT@ 57409 @LENGTH@ 93
------UPD SimpleName@@MethodName:missingRequiredAttributes:[new StringBuilder(DESTINATION_PORT), reader.getLocation()] @TO@ MethodName:missingRequiredAttributes:[new StringBuilder(DESTINATION_ADDRESS), reader.getLocation()] @AT@ 57418 @LENGTH@ 84
---------UPD ClassInstanceCreation@@StringBuilder[DESTINATION_PORT] @TO@ StringBuilder[DESTINATION_ADDRESS] @AT@ 57444 @LENGTH@ 35
------------UPD SimpleName@@DESTINATION_PORT @TO@ DESTINATION_ADDRESS @AT@ 57462 @LENGTH@ 16


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]OsgiTypeConverter, ServiceSupport[TypeConverter, TypeConverterRegistry, ServiceTrackerCustomizer] @AT@ 4451 @LENGTH@ 147
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4451 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4462 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4464 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4477 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4477 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 4477 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 4483 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4486 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4492 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4492 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4501 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4511 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 4511 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 4518 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:getDelegate().tryConvertTo(type,exchange,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4535 @LENGTH@ 57
------INS MethodInvocation@@getDelegate().tryConvertTo(type,exchange,value) @TO@ ReturnStatement@@MethodInvocation:getDelegate().tryConvertTo(type,exchange,value) @AT@ 4542 @LENGTH@ 49
---------INS MethodInvocation@@MethodName:getDelegate:[] @TO@ MethodInvocation@@getDelegate().tryConvertTo(type,exchange,value) @AT@ 4542 @LENGTH@ 13
---------INS SimpleName@@MethodName:tryConvertTo:[type, exchange, value] @TO@ MethodInvocation@@getDelegate().tryConvertTo(type,exchange,value) @AT@ 4556 @LENGTH@ 35
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:tryConvertTo:[type, exchange, value] @AT@ 4569 @LENGTH@ 4
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:tryConvertTo:[type, exchange, value] @AT@ 4575 @LENGTH@ 8
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:tryConvertTo:[type, exchange, value] @AT@ 4585 @LENGTH@ 5


UPD MethodDeclaration@@public, static, void, MethodName:createHostRegistry, final ManagementResourceRegistration root, final HostControllerConfigurationPersister configurationPersister, final HostControllerEnvironment environment, final HostRunningModeControl runningModeControl, final HostFileRepository localFileRepository, final LocalHostControllerInfoImpl hostControllerInfo, final ServerInventory serverInventory, final RemoteFileRepository remoteFileRepository, final ContentRepository contentRepository, final DomainController domainController, final UnregisteredHostChannelRegistry channelRegistry, final ExtensionRegistry extensionRegistry, final AbstractVaultReader vaultReader, final ControlledProcessState processState,  @TO@ public, static, void, MethodName:createHostRegistry, final ManagementResourceRegistration root, final HostControllerConfigurationPersister configurationPersister, final HostControllerEnvironment environment, final HostRunningModeControl runningModeControl, final HostFileRepository localFileRepository, final LocalHostControllerInfoImpl hostControllerInfo, final ServerInventory serverInventory, final HostFileRepository remoteFileRepository, final ContentRepository contentRepository, final DomainController domainController, final UnregisteredHostChannelRegistry channelRegistry, final ExtensionRegistry extensionRegistry, final AbstractVaultReader vaultReader, final ControlledProcessState processState,  @AT@ 12114 @LENGTH@ 18034
---UPD SingleVariableDeclaration@@final RemoteFileRepository remoteFileRepository @TO@ final HostFileRepository remoteFileRepository @AT@ 12663 @LENGTH@ 47
------UPD SimpleType@@RemoteFileRepository @TO@ HostFileRepository @AT@ 12669 @LENGTH@ 20


UPD TypeDeclaration@@[@ManagedResource(description="XSLT Endpoint"), public]XsltEndpoint, ProcessorEndpoint @TO@ [@ManagedResource(description="Managed XsltEndpoint"), public]XsltEndpoint, ProcessorEndpoint @AT@ 1398 @LENGTH@ 2672
---UPD NormalAnnotation@@@ManagedResource(description="XSLT Endpoint") @TO@ @ManagedResource(description="Managed XsltEndpoint") @AT@ 1398 @LENGTH@ 47


UPD MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers, OperationFailedException,  @AT@ 1572 @LENGTH@ 45
---UPD Modifier@@private @TO@ protected @AT@ 1572 @LENGTH@ 7
---UPD SimpleName@@MethodName:ModClusterAddSSL @TO@ MethodName:performRuntime @AT@ 1580 @LENGTH@ 16
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 1775 @LENGTH@ 4
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 1795 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1795 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1812 @LENGTH@ 7
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 1821 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1821 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1831 @LENGTH@ 9
---INS SingleVariableDeclaration@@ModelNode model @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 1842 @LENGTH@ 15
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 1842 @LENGTH@ 9
------INS SimpleName@@model @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 1852 @LENGTH@ 5
---INS SingleVariableDeclaration@@ServiceVerificationHandler verificationHandler @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 1871 @LENGTH@ 46
------INS SimpleType@@ServiceVerificationHandler @TO@ SingleVariableDeclaration@@ServiceVerificationHandler verificationHandler @AT@ 1871 @LENGTH@ 26
------INS SimpleName@@verificationHandler @TO@ SingleVariableDeclaration@@ServiceVerificationHandler verificationHandler @AT@ 1898 @LENGTH@ 19
---INS SingleVariableDeclaration@@List<ServiceController<?>> newControllers @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 1919 @LENGTH@ 41
------INS ParameterizedType@@List<ServiceController<?>> @TO@ SingleVariableDeclaration@@List<ServiceController<?>> newControllers @AT@ 1919 @LENGTH@ 26
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ServiceController<?>> @AT@ 1919 @LENGTH@ 4
---------INS ParameterizedType@@ServiceController<?> @TO@ ParameterizedType@@List<ServiceController<?>> @AT@ 1924 @LENGTH@ 20
------------INS SimpleType@@ServiceController @TO@ ParameterizedType@@ServiceController<?> @AT@ 1924 @LENGTH@ 17
------------INS WildcardType@@? @TO@ ParameterizedType@@ServiceController<?> @AT@ 1942 @LENGTH@ 1
------INS SimpleName@@newControllers @TO@ SingleVariableDeclaration@@List<ServiceController<?>> newControllers @AT@ 1946 @LENGTH@ 14
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 1981 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ MethodDeclaration@@private, voidMethodName:ModClusterAddSSL,  @AT@ 2069 @LENGTH@ 25
------INS MethodInvocation@@context.reloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.reloadRequired() @AT@ 2069 @LENGTH@ 24
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.reloadRequired() @AT@ 2069 @LENGTH@ 7
---------INS SimpleName@@MethodName:reloadRequired:[] @TO@ MethodInvocation@@context.reloadRequired() @AT@ 2077 @LENGTH@ 16


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]ClosedCorrelationKeyException, CamelExchangeException @AT@ 1116 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1116 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1124 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1131 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1137 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1142 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1142 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1161 @LENGTH@ 2


UPD MethodDeclaration@@public, BackingCacheEntryStore<G,Cacheable<G>,E>, E extends SerializationGroup<K,V,G>, MethodName:createGroupIntegratedObjectStore, PassivationManager<G,E> passivationManager, StatefulTimeoutInfo timeout,  @TO@ public, BackingCacheEntryStore<G,Cacheable<G>,E>, E extends SerializationGroup<K,V,G>, MethodName:createGroupIntegratedObjectStore, IdentifierFactory<G> identifierFactory, PassivationManager<G,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 3579 @LENGTH@ 616
---INS SingleVariableDeclaration@@IdentifierFactory<G> identifierFactory @TO@ MethodDeclaration@@public, BackingCacheEntryStore<G,Cacheable<G>,E>, E extends SerializationGroup<K,V,G>, MethodName:createGroupIntegratedObjectStore, PassivationManager<G,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 3752 @LENGTH@ 38
------INS ParameterizedType@@IdentifierFactory<G> @TO@ SingleVariableDeclaration@@IdentifierFactory<G> identifierFactory @AT@ 3752 @LENGTH@ 20
---------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<G> @AT@ 3752 @LENGTH@ 17
---------INS SimpleType@@G @TO@ ParameterizedType@@IdentifierFactory<G> @AT@ 3770 @LENGTH@ 1
------INS SimpleName@@identifierFactory @TO@ SingleVariableDeclaration@@IdentifierFactory<G> identifierFactory @AT@ 3773 @LENGTH@ 17
---UPD VariableDeclarationStatement@@SimpleBackingCacheEntryStore<G,Cacheable<G>,E> store=new SimpleBackingCacheEntryStore<G,Cacheable<G>,E>(objectStore,this.environment.getValue(),timeout,this); @TO@ SimpleBackingCacheEntryStore<G,Cacheable<G>,E> store=new SimpleBackingCacheEntryStore<G,Cacheable<G>,E>(identifierFactory,objectStore,this.environment.getValue(),timeout,this); @AT@ 3999 @LENGTH@ 167
------UPD VariableDeclarationFragment@@store=new SimpleBackingCacheEntryStore<G,Cacheable<G>,E>(objectStore,this.environment.getValue(),timeout,this) @TO@ store=new SimpleBackingCacheEntryStore<G,Cacheable<G>,E>(identifierFactory,objectStore,this.environment.getValue(),timeout,this) @AT@ 4048 @LENGTH@ 117
---------UPD ClassInstanceCreation@@SimpleBackingCacheEntryStore<G,Cacheable<G>,E>[objectStore, this.environment.getValue(), timeout, this] @TO@ SimpleBackingCacheEntryStore<G,Cacheable<G>,E>[identifierFactory, objectStore, this.environment.getValue(), timeout, this] @AT@ 4056 @LENGTH@ 109
------------INS SimpleName@@identifierFactory @TO@ ClassInstanceCreation@@SimpleBackingCacheEntryStore<G,Cacheable<G>,E>[objectStore, this.environment.getValue(), timeout, this] @AT@ 4199 @LENGTH@ 17


UPD FieldDeclaration@@SimpleAttributeDefinition, [MAX_SIZE_BYTES_NODE_NAME=new SimpleAttributeDefinition("max-size-bytes",new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES),ModelType.LONG,true)] @TO@ SimpleAttributeDefinition, [MAX_SIZE_BYTES=new SimpleAttributeDefinitionBuilder("max-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)).setAllowNull(true).build()] @AT@ 24147 @LENGTH@ 196
---UPD VariableDeclarationFragment@@MAX_SIZE_BYTES_NODE_NAME=new SimpleAttributeDefinition("max-size-bytes",new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES),ModelType.LONG,true) @TO@ MAX_SIZE_BYTES=new SimpleAttributeDefinitionBuilder("max-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)).setAllowNull(true).build() @AT@ 24173 @LENGTH@ 169
------UPD SimpleName@@MAX_SIZE_BYTES_NODE_NAME @TO@ MAX_SIZE_BYTES @AT@ 24173 @LENGTH@ 24
------INS MethodInvocation@@new SimpleAttributeDefinitionBuilder("max-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)).setAllowNull(true).build() @TO@ VariableDeclarationFragment@@MAX_SIZE_BYTES_NODE_NAME=new SimpleAttributeDefinition("max-size-bytes",new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES),ModelType.LONG,true) @AT@ 24190 @LENGTH@ 203
---------INS MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("max-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)).setAllowNull(true).build() @AT@ 24190 @LENGTH@ 182
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowNull:[true] @AT@ 24367 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("max-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)).setAllowNull(true).build() @AT@ 24190 @LENGTH@ 150
------------MOV MethodInvocation@@new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES) @TO@ MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)] @AT@ 24260 @LENGTH@ 59
---------INS ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["max-size-bytes", LONG] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("max-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)).setAllowNull(true).build() @AT@ 24190 @LENGTH@ 60
------------MOV New@@new @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["max-size-bytes", LONG] @AT@ 24200 @LENGTH@ 3
------------MOV SimpleType@@SimpleAttributeDefinition @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["max-size-bytes", LONG] @AT@ 24204 @LENGTH@ 25
------------MOV StringLiteral@@"max-size-bytes" @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["max-size-bytes", LONG] @AT@ 24230 @LENGTH@ 16
------------INS SimpleName@@LONG @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["max-size-bytes", LONG] @AT@ 24245 @LENGTH@ 4
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("max-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES)).setAllowNull(true).build() @AT@ 24386 @LENGTH@ 7
------DEL ClassInstanceCreation@@SimpleAttributeDefinition["max-size-bytes", new ModelNode().set(AddressSettings.DEFAULT_MAX_SIZE_BYTES), ModelType.LONG, true] @AT@ 24200 @LENGTH@ 142
---------DEL QualifiedName@@ModelType.LONG @AT@ 24321 @LENGTH@ 14
------------DEL SimpleName@@ModelType @AT@ 24321 @LENGTH@ 9
------------DEL SimpleName@@LONG @AT@ 24331 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 24337 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2238 @LENGTH@ 107
---DEL MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2238 @LENGTH@ 106
------DEL MethodInvocation@@MethodName:currentThread:[] @AT@ 2238 @LENGTH@ 22
------DEL SimpleName@@Name:Thread @AT@ 2238 @LENGTH@ 6
------DEL SimpleName@@MethodName:setContextClassLoader:[Utilities.addResourceFilesToClassPath(ss.getConf())] @AT@ 2261 @LENGTH@ 83
---------DEL MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @AT@ 2292 @LENGTH@ 51
------------DEL SimpleName@@Name:Utilities @AT@ 2292 @LENGTH@ 9
------------DEL SimpleName@@MethodName:addResourceFilesToClassPath:[ss.getConf()] @AT@ 2302 @LENGTH@ 41
---------------DEL MethodInvocation@@ss.getConf() @AT@ 2330 @LENGTH@ 12
------------------DEL SimpleName@@Name:ss @AT@ 2330 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:getConf:[] @AT@ 2333 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:parseManagement(reader,address,DOMAIN_1_0,list,true) @TO@ MethodInvocation:parseManagement(reader,address,DOMAIN_1_0,list,true,false) @AT@ 9409 @LENGTH@ 57
---UPD MethodInvocation@@parseManagement(reader,address,DOMAIN_1_0,list,true) @TO@ parseManagement(reader,address,DOMAIN_1_0,list,true,false) @AT@ 9409 @LENGTH@ 56
------UPD SimpleName@@MethodName:parseManagement:[reader, address, DOMAIN_1_0, list, true] @TO@ MethodName:parseManagement:[reader, address, DOMAIN_1_0, list, true, false] @AT@ 9409 @LENGTH@ 56
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:parseManagement:[reader, address, DOMAIN_1_0, list, true] @AT@ 9466 @LENGTH@ 5


UPD MethodDeclaration@@public, TransactionManager, MethodName:getTransactionManager,  @TO@ public, Value<TransactionManager>, MethodName:getTransactionManager,  @AT@ 34913 @LENGTH@ 124
---INS ParameterizedType@@Value<TransactionManager> @TO@ MethodDeclaration@@public, TransactionManager, MethodName:getTransactionManager,  @AT@ 34920 @LENGTH@ 25
------INS SimpleType@@Value @TO@ ParameterizedType@@Value<TransactionManager> @AT@ 34920 @LENGTH@ 5
------INS SimpleType@@TransactionManager @TO@ ParameterizedType@@Value<TransactionManager> @AT@ 34926 @LENGTH@ 18
---DEL SimpleType@@TransactionManager @AT@ 34920 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:this.transactionManager.getOptionalValue() @TO@ FieldAccess:this.transactionManager @AT@ 34977 @LENGTH@ 50
------DEL MethodInvocation@@this.transactionManager.getOptionalValue() @AT@ 34984 @LENGTH@ 42
---------DEL FieldAccess@@this.transactionManager @AT@ 34984 @LENGTH@ 23
---------DEL SimpleName@@MethodName:getOptionalValue:[] @AT@ 35008 @LENGTH@ 18
------INS FieldAccess@@this.transactionManager @TO@ ReturnStatement@@MethodInvocation:this.transactionManager.getOptionalValue() @AT@ 34991 @LENGTH@ 23
---------MOV ThisExpression@@this @TO@ FieldAccess@@this.transactionManager @AT@ 34984 @LENGTH@ 4
---------MOV SimpleName@@transactionManager @TO@ FieldAccess@@this.transactionManager @AT@ 34989 @LENGTH@ 18


UPD Block@@ElseBody:if (value instanceof NodeList) {  NodeList list=(NodeList)value;  return list.getLength() > 0;} else if (value instanceof Collection) {  Collection<?> col=(Collection<?>)value;  return col.size() > 0;} @TO@ ElseBody:if (value instanceof NodeList) {  if (value instanceof Node && ((Node)value).hasAttributes()) {    return true;  }  NodeList list=(NodeList)value;  return list.getLength() > 0;} else if (value instanceof Collection) {  Collection<?> col=(Collection<?>)value;  return col.size() > 0;} @AT@ 44622 @LENGTH@ 344
---UPD IfStatement@@if (value instanceof NodeList) {  NodeList list=(NodeList)value;  return list.getLength() > 0;} else if (value instanceof Collection) {  Collection<?> col=(Collection<?>)value;  return col.size() > 0;} @TO@ if (value instanceof NodeList) {  if (value instanceof Node && ((Node)value).hasAttributes()) {    return true;  }  NodeList list=(NodeList)value;  return list.getLength() > 0;} else if (value instanceof Collection) {  Collection<?> col=(Collection<?>)value;  return col.size() > 0;} @AT@ 44622 @LENGTH@ 344
------UPD Block@@ThenBody:{  NodeList list=(NodeList)value;  return list.getLength() > 0;} @TO@ ThenBody:{  if (value instanceof Node && ((Node)value).hasAttributes()) {    return true;  }  NodeList list=(NodeList)value;  return list.getLength() > 0;} @AT@ 44653 @LENGTH@ 132
---------INS IfStatement@@if (value instanceof Node && ((Node)value).hasAttributes()) {  return true;} @TO@ Block@@ThenBody:{  NodeList list=(NodeList)value;  return list.getLength() > 0;} @AT@ 44723 @LENGTH@ 104
------------INS InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @TO@ IfStatement@@if (value instanceof Node && ((Node)value).hasAttributes()) {  return true;} @AT@ 44727 @LENGTH@ 54
---------------INS InstanceofExpression@@value instanceof Node @TO@ InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @AT@ 44727 @LENGTH@ 21
------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Node @AT@ 44727 @LENGTH@ 5
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Node @AT@ 44733 @LENGTH@ 10
------------------INS SimpleType@@Node @TO@ InstanceofExpression@@value instanceof Node @AT@ 44744 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @AT@ 44748 @LENGTH@ 2
---------------INS MethodInvocation@@((Node)value).hasAttributes() @TO@ InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @AT@ 44752 @LENGTH@ 29
------------------INS ParenthesizedExpression@@((Node)value) @TO@ MethodInvocation@@((Node)value).hasAttributes() @AT@ 44752 @LENGTH@ 13
---------------------INS CastExpression@@(Node)value @TO@ ParenthesizedExpression@@((Node)value) @AT@ 44753 @LENGTH@ 11
------------------------INS SimpleType@@Node @TO@ CastExpression@@(Node)value @AT@ 44754 @LENGTH@ 4
------------------------INS SimpleName@@value @TO@ CastExpression@@(Node)value @AT@ 44759 @LENGTH@ 5
------------------INS SimpleName@@MethodName:hasAttributes:[] @TO@ MethodInvocation@@((Node)value).hasAttributes() @AT@ 44766 @LENGTH@ 15
------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (value instanceof Node && ((Node)value).hasAttributes()) {  return true;} @AT@ 44783 @LENGTH@ 44
---------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 44801 @LENGTH@ 12
------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 44808 @LENGTH@ 4
---UPD IfStatement@@if (value instanceof NodeList) {  NodeList list=(NodeList)value;  return list.getLength() > 0;} else if (value instanceof Collection) {  Collection<?> col=(Collection<?>)value;  return col.size() > 0;} @TO@ if (value instanceof NodeList) {  if (value instanceof Node && ((Node)value).hasAttributes()) {    return true;  }  NodeList list=(NodeList)value;  return list.getLength() > 0;} else if (value instanceof Collection) {  Collection<?> col=(Collection<?>)value;  return col.size() > 0;} @AT@ 44622 @LENGTH@ 344
------UPD Block@@ThenBody:{  NodeList list=(NodeList)value;  return list.getLength() > 0;} @TO@ ThenBody:{  if (value instanceof Node && ((Node)value).hasAttributes()) {    return true;  }  NodeList list=(NodeList)value;  return list.getLength() > 0;} @AT@ 44653 @LENGTH@ 132
---------INS IfStatement@@if (value instanceof Node && ((Node)value).hasAttributes()) {  return true;} @TO@ Block@@ThenBody:{  NodeList list=(NodeList)value;  return list.getLength() > 0;} @AT@ 44723 @LENGTH@ 104
------------INS InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @TO@ IfStatement@@if (value instanceof Node && ((Node)value).hasAttributes()) {  return true;} @AT@ 44727 @LENGTH@ 54
---------------INS InstanceofExpression@@value instanceof Node @TO@ InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @AT@ 44727 @LENGTH@ 21
------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Node @AT@ 44727 @LENGTH@ 5
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Node @AT@ 44733 @LENGTH@ 10
------------------INS SimpleType@@Node @TO@ InstanceofExpression@@value instanceof Node @AT@ 44744 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @AT@ 44748 @LENGTH@ 2
---------------INS MethodInvocation@@((Node)value).hasAttributes() @TO@ InfixExpression@@value instanceof Node && ((Node)value).hasAttributes() @AT@ 44752 @LENGTH@ 29
------------------INS ParenthesizedExpression@@((Node)value) @TO@ MethodInvocation@@((Node)value).hasAttributes() @AT@ 44752 @LENGTH@ 13
---------------------INS CastExpression@@(Node)value @TO@ ParenthesizedExpression@@((Node)value) @AT@ 44753 @LENGTH@ 11
------------------------INS SimpleType@@Node @TO@ CastExpression@@(Node)value @AT@ 44754 @LENGTH@ 4
------------------------INS SimpleName@@value @TO@ CastExpression@@(Node)value @AT@ 44759 @LENGTH@ 5
------------------INS SimpleName@@MethodName:hasAttributes:[] @TO@ MethodInvocation@@((Node)value).hasAttributes() @AT@ 44766 @LENGTH@ 15
------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (value instanceof Node && ((Node)value).hasAttributes()) {  return true;} @AT@ 44783 @LENGTH@ 44
---------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 44801 @LENGTH@ 12
------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 44808 @LENGTH@ 4


MOV MethodDeclaration@@DeployException, MethodName:deploymentFailed, @Cause Throwable cause, String className,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ConnectorMessages,  @AT@ 3931 @LENGTH@ 59


UPD TypeDeclaration@@[public]BackingCacheEntryStore, [GroupCompatibilityChecker, AffinitySupport<K>] @TO@ [public]BackingCacheEntryStore, [GroupCompatibilityChecker, AffinitySupport<K>, IdentifierFactory<K>] @AT@ 1874 @LENGTH@ 2684
---INS ParameterizedType@@IdentifierFactory<K> @TO@ TypeDeclaration@@[public]BackingCacheEntryStore, [GroupCompatibilityChecker, AffinitySupport<K>] @AT@ 2106 @LENGTH@ 20
------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2106 @LENGTH@ 17
------INS SimpleType@@K @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2124 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:sso.setEmptyObject() @TO@ MethodDeclaration@@static, ModelNode, MethodName:parseSso, XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 31510 @LENGTH@ 21
---INS MethodInvocation@@sso.setEmptyObject() @TO@ ExpressionStatement@@MethodInvocation:sso.setEmptyObject() @AT@ 31510 @LENGTH@ 20
------INS SimpleName@@Name:sso @TO@ MethodInvocation@@sso.setEmptyObject() @AT@ 31510 @LENGTH@ 3
------INS SimpleName@@MethodName:setEmptyObject:[] @TO@ MethodInvocation@@sso.setEmptyObject() @AT@ 31514 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)) @TO@ MethodInvocation:extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test")) @AT@ 11423 @LENGTH@ 125
---UPD MethodInvocation@@extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)) @TO@ extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test")) @AT@ 11423 @LENGTH@ 124
------UPD SimpleName@@MethodName:initialize:[new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)] @TO@ MethodName:initialize:[new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test")] @AT@ 11433 @LENGTH@ 114
---------INS MethodInvocation@@new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @TO@ SimpleName@@MethodName:initialize:[new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)] @AT@ 11445 @LENGTH@ 125
------------MOV ClassInstanceCreation@@ExtensionContextImpl[MOCK_RESOURCE_REG, MOCK_RESOURCE_REG, persister, ProcessType.EMBEDDED_SERVER] @TO@ MethodInvocation@@new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 11444 @LENGTH@ 102
------------INS SimpleName@@MethodName:createTracking:["Test"] @TO@ MethodInvocation@@new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 11548 @LENGTH@ 22
---------------INS StringLiteral@@"Test" @TO@ SimpleName@@MethodName:createTracking:["Test"] @AT@ 11563 @LENGTH@ 6


UPD VariableDeclarationStatement@@byte[] metadataPayload=toBytes(metadata); @TO@ byte[] metadataPayload=ObjectUtils.toBytes(metadata); @AT@ 7720 @LENGTH@ 43
---UPD VariableDeclarationFragment@@metadataPayload=toBytes(metadata) @TO@ metadataPayload=ObjectUtils.toBytes(metadata) @AT@ 7727 @LENGTH@ 35
------UPD MethodInvocation@@toBytes(metadata) @TO@ ObjectUtils.toBytes(metadata) @AT@ 7745 @LENGTH@ 17
---------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@toBytes(metadata) @AT@ 7793 @LENGTH@ 11


UPD TryStatement@@try {  final IoFuture<Connection> futureConnection=outboundConnectionService.connect();  final Connection connection=IoFutureHelper.get(futureConnection,DEFAULT_CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS);  logger.debug("Successful reconnect attempt#" + this.reconnectAttemptCount + " to outbound connection "+ this.outboundConnectionServiceName);  this.clientContext.unregisterReconnectHandler(this);  this.clientContext.registerConnection(connection);} catch (Exception e) {  logger.debug("Reconnect attempt#" + this.reconnectAttemptCount + " failed for outbound connection "+ this.outboundConnectionServiceName,e);} @TO@ try {  final IoFuture<Connection> futureConnection=outboundConnectionService.connect();  final Connection connection=IoFutureHelper.get(futureConnection,DEFAULT_CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS);  logger.debug("Successful reconnect attempt#" + this.reconnectAttemptCount + " to outbound connection "+ this.outboundConnectionServiceName);  this.clientContext.unregisterReconnectHandler(this);  final EJBReceiver receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY);  this.clientContext.registerEJBReceiver(receiver);} catch (Exception e) {  logger.debug("Reconnect attempt#" + this.reconnectAttemptCount + " failed for outbound connection "+ this.outboundConnectionServiceName,e);} @AT@ 8665 @LENGTH@ 938
---UPD ExpressionStatement@@MethodInvocation:this.clientContext.registerConnection(connection) @TO@ MethodInvocation:this.clientContext.registerEJBReceiver(receiver) @AT@ 9345 @LENGTH@ 50
------UPD MethodInvocation@@this.clientContext.registerConnection(connection) @TO@ this.clientContext.registerEJBReceiver(receiver) @AT@ 9345 @LENGTH@ 49
---------UPD SimpleName@@MethodName:registerConnection:[connection] @TO@ MethodName:registerEJBReceiver:[receiver] @AT@ 9364 @LENGTH@ 30
------------UPD SimpleName@@connection @TO@ receiver @AT@ 9383 @LENGTH@ 10
---INS VariableDeclarationStatement@@final EJBReceiver receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY); @TO@ TryStatement@@try {  final IoFuture<Connection> futureConnection=outboundConnectionService.connect();  final Connection connection=IoFutureHelper.get(futureConnection,DEFAULT_CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS);  logger.debug("Successful reconnect attempt#" + this.reconnectAttemptCount + " to outbound connection "+ this.outboundConnectionServiceName);  this.clientContext.unregisterReconnectHandler(this);  this.clientContext.registerConnection(connection);} catch (Exception e) {  logger.debug("Reconnect attempt#" + this.reconnectAttemptCount + " failed for outbound connection "+ this.outboundConnectionServiceName,e);} @AT@ 9481 @LENGTH@ 98
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final EJBReceiver receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY); @AT@ 9481 @LENGTH@ 5
------INS SimpleType@@EJBReceiver @TO@ VariableDeclarationStatement@@final EJBReceiver receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY); @AT@ 9487 @LENGTH@ 11
------INS VariableDeclarationFragment@@receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY) @TO@ VariableDeclarationStatement@@final EJBReceiver receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY); @AT@ 9499 @LENGTH@ 79
---------INS SimpleName@@receiver @TO@ VariableDeclarationFragment@@receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY) @AT@ 9499 @LENGTH@ 8
---------INS ClassInstanceCreation@@RemotingConnectionEJBReceiver[connection, this, OptionMap.EMPTY] @TO@ VariableDeclarationFragment@@receiver=new RemotingConnectionEJBReceiver(connection,this,OptionMap.EMPTY) @AT@ 9510 @LENGTH@ 68
------------INS New@@new @TO@ ClassInstanceCreation@@RemotingConnectionEJBReceiver[connection, this, OptionMap.EMPTY] @AT@ 9510 @LENGTH@ 3
------------INS SimpleType@@RemotingConnectionEJBReceiver @TO@ ClassInstanceCreation@@RemotingConnectionEJBReceiver[connection, this, OptionMap.EMPTY] @AT@ 9514 @LENGTH@ 29
------------INS SimpleName@@connection @TO@ ClassInstanceCreation@@RemotingConnectionEJBReceiver[connection, this, OptionMap.EMPTY] @AT@ 9544 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@RemotingConnectionEJBReceiver[connection, this, OptionMap.EMPTY] @AT@ 9556 @LENGTH@ 4
------------INS QualifiedName@@OptionMap.EMPTY @TO@ ClassInstanceCreation@@RemotingConnectionEJBReceiver[connection, this, OptionMap.EMPTY] @AT@ 9562 @LENGTH@ 15
---------------INS SimpleName@@OptionMap @TO@ QualifiedName@@OptionMap.EMPTY @AT@ 9562 @LENGTH@ 9
---------------INS SimpleName@@EMPTY @TO@ QualifiedName@@OptionMap.EMPTY @AT@ 9572 @LENGTH@ 5


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]ArrayTypeConverter, [TypeConverter] @AT@ 3660 @LENGTH@ 186
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3660 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3671 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3673 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3686 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3686 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3686 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3692 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3695 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3701 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3701 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3708 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3725 @LENGTH@ 115
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 3743 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3750 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3750 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3760 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3766 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 3784 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3791 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3791 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3801 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3818 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3825 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:assertTrue(strNames.contains("validate-address")) @AT@ 5489 @LENGTH@ 50
---DEL MethodInvocation@@assertTrue(strNames.contains("validate-address")) @AT@ 5489 @LENGTH@ 49
------DEL SimpleName@@MethodName:assertTrue:[strNames.contains("validate-address")] @AT@ 5489 @LENGTH@ 49
---------DEL MethodInvocation@@strNames.contains("validate-address") @AT@ 5500 @LENGTH@ 37
------------DEL SimpleName@@Name:strNames @AT@ 5500 @LENGTH@ 8
------------DEL SimpleName@@MethodName:contains:["validate-address"] @AT@ 5509 @LENGTH@ 28
---------------DEL StringLiteral@@"validate-address" @AT@ 5518 @LENGTH@ 18


INS ExpressionStatement@@MethodInvocation:WebSSLDefinition.NAME.validateAndSet(operation,model) @TO@ MethodDeclaration@@protected, void, MethodName:populateModel, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1838 @LENGTH@ 55
---INS MethodInvocation@@WebSSLDefinition.NAME.validateAndSet(operation,model) @TO@ ExpressionStatement@@MethodInvocation:WebSSLDefinition.NAME.validateAndSet(operation,model) @AT@ 1838 @LENGTH@ 54
------INS QualifiedName@@Name:WebSSLDefinition.NAME @TO@ MethodInvocation@@WebSSLDefinition.NAME.validateAndSet(operation,model) @AT@ 1838 @LENGTH@ 21
------INS SimpleName@@MethodName:validateAndSet:[operation, model] @TO@ MethodInvocation@@WebSSLDefinition.NAME.validateAndSet(operation,model) @AT@ 1860 @LENGTH@ 32
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:validateAndSet:[operation, model] @AT@ 1875 @LENGTH@ 9
---------INS SimpleName@@model @TO@ SimpleName@@MethodName:validateAndSet:[operation, model] @AT@ 1886 @LENGTH@ 5


INS MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @TO@ TypeDeclaration@@[public]HttpManagementRemoveHandler, AbstractRemoveStepHandler @AT@ 1953 @LENGTH@ 88
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1953 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1963 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresRuntime @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1971 @LENGTH@ 15
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1987 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1987 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2004 @LENGTH@ 7
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 2023 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2030 @LENGTH@ 4


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ListProxies %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ListProxies %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2047 @LENGTH@ 1255
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2051 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2051 @LENGTH@ 17
------DEL Operator@@== @AT@ 2068 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2072 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2072 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2072 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2089 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2094 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ListProxies %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2051 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2051 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2051 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2059 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:testImport.setZooKeeper(client) @AT@ 2118 @LENGTH@ 32
---DEL MethodInvocation@@testImport.setZooKeeper(client) @AT@ 2118 @LENGTH@ 31
------DEL SimpleName@@Name:testImport @AT@ 2118 @LENGTH@ 10
------DEL SimpleName@@MethodName:setZooKeeper:[client] @AT@ 2129 @LENGTH@ 20
---------DEL SimpleName@@client @AT@ 2142 @LENGTH@ 6


INS MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 76861 @LENGTH@ 61
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @AT@ 76836 @LENGTH@ 24
---INS SimpleName@@MethodName:cannotRemoveResourceWithChildren @TO@ MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @AT@ 76861 @LENGTH@ 32
---INS SingleVariableDeclaration@@List<PathElement> children @TO@ MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @AT@ 76894 @LENGTH@ 26
------INS ParameterizedType@@List<PathElement> @TO@ SingleVariableDeclaration@@List<PathElement> children @AT@ 76894 @LENGTH@ 17
---------INS SimpleType@@List @TO@ ParameterizedType@@List<PathElement> @AT@ 76894 @LENGTH@ 4
---------INS SimpleType@@PathElement @TO@ ParameterizedType@@List<PathElement> @AT@ 76899 @LENGTH@ 11
------INS SimpleName@@children @TO@ SingleVariableDeclaration@@List<PathElement> children @AT@ 76912 @LENGTH@ 8


INS MethodDeclaration@@CreateContainerMetadata<?>, MethodName:getMetadata,  @TO@ TypeDeclaration@@[public]Container,  @AT@ 1982 @LENGTH@ 14
---INS ParameterizedType@@CreateContainerMetadata<?> @TO@ MethodDeclaration@@CreateContainerMetadata<?>, MethodName:getMetadata,  @AT@ 1955 @LENGTH@ 26
------INS SimpleType@@CreateContainerMetadata @TO@ ParameterizedType@@CreateContainerMetadata<?> @AT@ 1955 @LENGTH@ 23
------INS WildcardType@@? @TO@ ParameterizedType@@CreateContainerMetadata<?> @AT@ 1979 @LENGTH@ 1
---INS SimpleName@@MethodName:getMetadata @TO@ MethodDeclaration@@CreateContainerMetadata<?>, MethodName:getMetadata,  @AT@ 1982 @LENGTH@ 11


UPD TypeDeclaration@@[public]HiveTaskletParser, AbstractImprovedSimpleBeanDefinitionParser @TO@ HiveTaskletParser, AbstractImprovedSimpleBeanDefinitionParser @AT@ 1307 @LENGTH@ 1873
---DEL Modifier@@public @AT@ 1307 @LENGTH@ 6


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1952 @LENGTH@ 167
---DEL Modifier@@protected @AT@ 1952 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1962 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1970 @LENGTH@ 15
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 1986 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 1986 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 2003 @LENGTH@ 7
---DEL ReturnStatement@@InfixExpression:context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2022 @LENGTH@ 91
------DEL InfixExpression@@context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2029 @LENGTH@ 83
---------DEL MethodInvocation@@context.isNormalServer() @AT@ 2029 @LENGTH@ 24
------------DEL SimpleName@@Name:context @AT@ 2029 @LENGTH@ 7
------------DEL SimpleName@@MethodName:isNormalServer:[] @AT@ 2037 @LENGTH@ 16
---------DEL Operator@@|| @AT@ 2053 @LENGTH@ 2
---------DEL InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 2057 @LENGTH@ 55
------------DEL MethodInvocation@@context.getProcessType() @AT@ 2057 @LENGTH@ 24
---------------DEL SimpleName@@Name:context @AT@ 2057 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getProcessType:[] @AT@ 2065 @LENGTH@ 16
------------DEL Operator@@== @AT@ 2081 @LENGTH@ 2
------------DEL QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 2085 @LENGTH@ 27
---------------DEL SimpleName@@ProcessType @AT@ 2085 @LENGTH@ 11
---------------DEL SimpleName@@HOST_CONTROLLER @AT@ 2097 @LENGTH@ 15


INS MethodDeclaration@@boolean, MethodName:isAbstract,  @TO@ TypeDeclaration@@[public]Profile, [Comparable<Profile>] @AT@ 2765 @LENGTH@ 13
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:isAbstract,  @AT@ 2757 @LENGTH@ 7
---INS SimpleName@@MethodName:isAbstract @TO@ MethodDeclaration@@boolean, MethodName:isAbstract,  @AT@ 2765 @LENGTH@ 10


UPD FieldDeclaration@@SimpleAttributeDefinition, [MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,true).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<TransactionMode>(TransactionMode.class,true,false)).setDefaultValue(new ModelNode().set(TransactionMode.NONE.name())).build()] @TO@ SimpleAttributeDefinition, [MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,true).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<TransactionMode>(TransactionMode.class,true,true)).setDefaultValue(new ModelNode().set(TransactionMode.NONE.name())).build()] @AT@ 15090 @LENGTH@ 526
---UPD VariableDeclarationFragment@@MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,true).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<TransactionMode>(TransactionMode.class,true,false)).setDefaultValue(new ModelNode().set(TransactionMode.NONE.name())).build() @TO@ MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,true).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<TransactionMode>(TransactionMode.class,true,true)).setDefaultValue(new ModelNode().set(TransactionMode.NONE.name())).build() @AT@ 15116 @LENGTH@ 499
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,true).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<TransactionMode>(TransactionMode.class,true,false)).setDefaultValue(new ModelNode().set(TransactionMode.NONE.name())).build() @TO@ new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,true).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<TransactionMode>(TransactionMode.class,true,true)).setDefaultValue(new ModelNode().set(TransactionMode.NONE.name())).build() @AT@ 15135 @LENGTH@ 480
---------UPD MethodInvocation@@MethodName:setValidator:[new EnumValidator<TransactionMode>(TransactionMode.class,true,false)] @TO@ MethodName:setValidator:[new EnumValidator<TransactionMode>(TransactionMode.class,true,true)] @AT@ 15135 @LENGTH@ 364
------------UPD ClassInstanceCreation@@EnumValidator<TransactionMode>[TransactionMode.class, true, false] @TO@ EnumValidator<TransactionMode>[TransactionMode.class, true, true] @AT@ 15428 @LENGTH@ 70
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 15492 @LENGTH@ 5


UPD VariableDeclarationStatement@@URI selfUri=addSelfLink(baseUri,entityDto,repository,id); @TO@ URI selfUri=addSelfLink(baseUri,entityDto,linkedRepoMeta.name(),linkedId); @AT@ 36479 @LENGTH@ 62
---UPD VariableDeclarationFragment@@selfUri=addSelfLink(baseUri,entityDto,repository,id) @TO@ selfUri=addSelfLink(baseUri,entityDto,linkedRepoMeta.name(),linkedId) @AT@ 36483 @LENGTH@ 57
------UPD MethodInvocation@@addSelfLink(baseUri,entityDto,repository,id) @TO@ addSelfLink(baseUri,entityDto,linkedRepoMeta.name(),linkedId) @AT@ 36493 @LENGTH@ 47
---------UPD SimpleName@@MethodName:addSelfLink:[baseUri, entityDto, repository, id] @TO@ MethodName:addSelfLink:[baseUri, entityDto, linkedRepoMeta.name(), linkedId] @AT@ 36493 @LENGTH@ 47
------------INS MethodInvocation@@linkedRepoMeta.name() @TO@ SimpleName@@MethodName:addSelfLink:[baseUri, entityDto, repository, id] @AT@ 36525 @LENGTH@ 21
---------------INS SimpleName@@Name:linkedRepoMeta @TO@ MethodInvocation@@linkedRepoMeta.name() @AT@ 36525 @LENGTH@ 14
---------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@linkedRepoMeta.name() @AT@ 36540 @LENGTH@ 6
------------DEL SimpleName@@repository @AT@ 36525 @LENGTH@ 10
------------UPD SimpleName@@id @TO@ linkedId @AT@ 36537 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:Mockito.when(context.getServiceRegistry(false)).thenReturn(sr) @TO@ MethodInvocation:Mockito.when(context.getServiceRegistry(true)).thenReturn(sr) @AT@ 2345 @LENGTH@ 63
---UPD MethodInvocation@@Mockito.when(context.getServiceRegistry(false)).thenReturn(sr) @TO@ Mockito.when(context.getServiceRegistry(true)).thenReturn(sr) @AT@ 2345 @LENGTH@ 62
------UPD MethodInvocation@@MethodName:when:[context.getServiceRegistry(false)] @TO@ MethodName:when:[context.getServiceRegistry(true)] @AT@ 2345 @LENGTH@ 47
---------UPD MethodInvocation@@context.getServiceRegistry(false) @TO@ context.getServiceRegistry(true) @AT@ 2358 @LENGTH@ 33
------------UPD SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodName:getServiceRegistry:[true] @AT@ 2366 @LENGTH@ 25
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 2385 @LENGTH@ 5


UPD VariableDeclarationStatement@@final CommandContext ctx=CommandContextFactory.getInstance().newCommandContext(); @TO@ final CommandContext ctx=CLITestUtil.getCommandContext(); @AT@ 2277 @LENGTH@ 83
---UPD VariableDeclarationFragment@@ctx=CommandContextFactory.getInstance().newCommandContext() @TO@ ctx=CLITestUtil.getCommandContext() @AT@ 2298 @LENGTH@ 61
------UPD MethodInvocation@@CommandContextFactory.getInstance().newCommandContext() @TO@ CLITestUtil.getCommandContext() @AT@ 2304 @LENGTH@ 55
---------DEL MethodInvocation@@MethodName:getInstance:[] @AT@ 2304 @LENGTH@ 35
---------UPD SimpleName@@Name:CommandContextFactory @TO@ Name:CLITestUtil @AT@ 2304 @LENGTH@ 21
---------UPD SimpleName@@MethodName:newCommandContext:[] @TO@ MethodName:getCommandContext:[] @AT@ 2340 @LENGTH@ 19


INS MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @TO@ TypeDeclaration@@[public]HttpManagementRemoveHandler, AbstractRemoveStepHandler @AT@ 1953 @LENGTH@ 88
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1953 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1963 @LENGTH@ 7
---INS SimpleName@@MethodName:requiresRuntime @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1971 @LENGTH@ 15
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 1987 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1987 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2004 @LENGTH@ 7
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, OperationContext context,  @AT@ 2023 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2030 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @TO@ TypeDeclaration@@[public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2278 @LENGTH@ 46
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 2278 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 2285 @LENGTH@ 4
---INS SimpleName@@MethodName:testBitSet @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 2290 @LENGTH@ 10
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 2310 @LENGTH@ 9


UPD TypeDeclaration@@[@ManagedResource(description="Managed Timer Endpoint"), public]TimerEndpoint, DefaultEndpoint @TO@ [@ManagedResource(description="Managed TimerEndpoint"), public]TimerEndpoint, DefaultEndpoint @AT@ 1395 @LENGTH@ 3455
---UPD NormalAnnotation@@@ManagedResource(description="Managed Timer Endpoint") @TO@ @ManagedResource(description="Managed TimerEndpoint") @AT@ 1395 @LENGTH@ 56


UPD IfStatement@@if (ROOT_LOGGER.isTraceEnabled()) {  ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @TO@ if (MGMT_OP_LOGGER.isTraceEnabled()) {  MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @AT@ 20840 @LENGTH@ 149
---UPD MethodInvocation@@ROOT_LOGGER.isTraceEnabled() @TO@ MGMT_OP_LOGGER.isTraceEnabled() @AT@ 20844 @LENGTH@ 28
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 20844 @LENGTH@ 11
---UPD Block@@ThenBody:{  ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @TO@ ThenBody:{  MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @AT@ 20874 @LENGTH@ 115
------UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @TO@ MethodInvocation:MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @AT@ 20892 @LENGTH@ 83
---------UPD MethodInvocation@@ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @TO@ MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @AT@ 20892 @LENGTH@ 82
------------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 20892 @LENGTH@ 11


UPD VariableDeclarationStatement@@List<ProcessorDefinition> list=route.getOutputs(); @TO@ List<ProcessorDefinition<?>> list=route.getOutputs(); @AT@ 18237 @LENGTH@ 52
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 18237 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 18177 @LENGTH@ 22
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 18197 @LENGTH@ 1
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 18242 @LENGTH@ 19


UPD IfStatement@@if (childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote())) {  storeDirect=true;} else {  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @TO@ if (!childReg.isRuntimeOnly() || queryRuntime || (proxies && childReg.isRemote())) {  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} else {  storeDirect=true;} @AT@ 12993 @LENGTH@ 1074
---UPD InfixExpression@@childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote()) @TO@ !childReg.isRuntimeOnly() || queryRuntime || (proxies && childReg.isRemote()) @AT@ 12997 @LENGTH@ 62
------INS PrefixExpression@@!childReg.isRuntimeOnly() @TO@ InfixExpression@@childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote()) @AT@ 12988 @LENGTH@ 25
---------INS Operator@@! @TO@ PrefixExpression@@!childReg.isRuntimeOnly() @AT@ 12988 @LENGTH@ 1
---------INS MethodInvocation@@childReg.isRuntimeOnly() @TO@ PrefixExpression@@!childReg.isRuntimeOnly() @AT@ 12989 @LENGTH@ 24
------------MOV SimpleName@@Name:childReg @TO@ MethodInvocation@@childReg.isRuntimeOnly() @AT@ 12997 @LENGTH@ 8
------------MOV SimpleName@@MethodName:isRuntimeOnly:[] @TO@ MethodInvocation@@childReg.isRuntimeOnly() @AT@ 13006 @LENGTH@ 15
------DEL MethodInvocation@@childReg.isRuntimeOnly() @AT@ 12997 @LENGTH@ 24
------INS SimpleName@@queryRuntime @TO@ InfixExpression@@childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote()) @AT@ 13016 @LENGTH@ 12
------UPD Operator@@&& @TO@ || @AT@ 13021 @LENGTH@ 2
------UPD ParenthesizedExpression@@(!proxies || !childReg.isRemote()) @TO@ (proxies && childReg.isRemote()) @AT@ 13025 @LENGTH@ 34
---------UPD InfixExpression@@!proxies || !childReg.isRemote() @TO@ proxies && childReg.isRemote() @AT@ 13026 @LENGTH@ 32
------------DEL PrefixExpression@@!proxies @AT@ 13026 @LENGTH@ 8
---------------DEL Operator@@! @AT@ 13026 @LENGTH@ 1
---------------DEL SimpleName@@proxies @AT@ 13027 @LENGTH@ 7
------------INS SimpleName@@proxies @TO@ InfixExpression@@!proxies || !childReg.isRemote() @AT@ 13033 @LENGTH@ 7
------------UPD Operator@@|| @TO@ && @AT@ 13034 @LENGTH@ 2
------------DEL PrefixExpression@@!childReg.isRemote() @AT@ 13038 @LENGTH@ 20
---------------DEL Operator@@! @AT@ 13038 @LENGTH@ 1
---------------DEL MethodInvocation@@childReg.isRemote() @AT@ 13039 @LENGTH@ 19
------------INS MethodInvocation@@childReg.isRemote() @TO@ InfixExpression@@!proxies || !childReg.isRemote() @AT@ 13044 @LENGTH@ 19
---------------MOV SimpleName@@Name:childReg @TO@ MethodInvocation@@childReg.isRemote() @AT@ 13039 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:isRemote:[] @TO@ MethodInvocation@@childReg.isRemote() @AT@ 13048 @LENGTH@ 10
---UPD Block@@ThenBody:{  storeDirect=true;} @TO@ ElseBody:{  storeDirect=true;} @AT@ 13061 @LENGTH@ 83
---MOV Block@@ThenBody:{  storeDirect=true;} @TO@ IfStatement@@if (childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote())) {  storeDirect=true;} else {  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @AT@ 13061 @LENGTH@ 83
---UPD Block@@ElseBody:{  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @TO@ ThenBody:{  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @AT@ 13150 @LENGTH@ 917


UPD MethodDeclaration@@Cache<K,T>, MethodName:createCache, String beanName, StatefulObjectFactory<T> factory, PassivationManager<K,T> passivationManager, StatefulTimeoutInfo timeout,  @TO@ Cache<K,T>, MethodName:createCache, String beanName, IdentifierFactory<K> identifierFactory, StatefulObjectFactory<T> factory, PassivationManager<K,T> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 1759 @LENGTH@ 137
---INS SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @TO@ MethodDeclaration@@Cache<K,T>, MethodName:createCache, String beanName, StatefulObjectFactory<T> factory, PassivationManager<K,T> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 1788 @LENGTH@ 38
------INS ParameterizedType@@IdentifierFactory<K> @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 1788 @LENGTH@ 20
---------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 1788 @LENGTH@ 17
---------INS SimpleType@@K @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 1806 @LENGTH@ 1
------INS SimpleName@@identifierFactory @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 1809 @LENGTH@ 17


UPD ReturnStatement@@ClassInstanceCreation:new MasterEndpoint(uri,this,group,childUri) @TO@ ClassInstanceCreation:new MasterEndpoint(uri,this,name,group,childUri) @AT@ 2256 @LENGTH@ 54
---UPD ClassInstanceCreation@@MasterEndpoint[uri, this, group, childUri] @TO@ MasterEndpoint[uri, this, name, group, childUri] @AT@ 2263 @LENGTH@ 46
------INS SimpleName@@name @TO@ ClassInstanceCreation@@MasterEndpoint[uri, this, group, childUri] @AT@ 2293 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, DomainRemoteFileRequestAndHandler, [INSTANCE=new DomainRemoteFileRequestAndHandler(MAPPER)] @TO@ public, static, final, DomainRemoteFileRequestAndHandler, [INSTANCE=new DomainRemoteFileRequestAndHandler(null)] @AT@ 2011 @LENGTH@ 111
---UPD VariableDeclarationFragment@@INSTANCE=new DomainRemoteFileRequestAndHandler(MAPPER) @TO@ INSTANCE=new DomainRemoteFileRequestAndHandler(null) @AT@ 2065 @LENGTH@ 56
------UPD ClassInstanceCreation@@DomainRemoteFileRequestAndHandler[MAPPER] @TO@ DomainRemoteFileRequestAndHandler[null] @AT@ 2076 @LENGTH@ 45
---------DEL SimpleName@@MAPPER @AT@ 2114 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@DomainRemoteFileRequestAndHandler[MAPPER] @AT@ 2153 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:SSOBaseCase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @TO@ MethodInvocation:SSOTestBase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @AT@ 3472 @LENGTH@ 77
---UPD MethodInvocation@@SSOBaseCase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @TO@ SSOTestBase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @AT@ 3472 @LENGTH@ 76
------UPD SimpleName@@Name:SSOBaseCase @TO@ Name:SSOTestBase @AT@ 3472 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new FilterProcessor(getExpression().createPredicate(routeContext),childProcessor) @TO@ ClassInstanceCreation:new FilterProcessor(createPredicate(routeContext),childProcessor) @AT@ 2360 @LENGTH@ 90
---UPD ClassInstanceCreation@@FilterProcessor[getExpression().createPredicate(routeContext), childProcessor] @TO@ FilterProcessor[createPredicate(routeContext), childProcessor] @AT@ 2367 @LENGTH@ 82
------UPD MethodInvocation@@getExpression().createPredicate(routeContext) @TO@ createPredicate(routeContext) @AT@ 2387 @LENGTH@ 45
---------DEL MethodInvocation@@MethodName:getExpression:[] @AT@ 2387 @LENGTH@ 15


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1697 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1697 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1707 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1715 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1731 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1731 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1737 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1754 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1773 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1780 @LENGTH@ 4


MOV MethodDeclaration@@public, void, MethodName:executesMethodWithNamedParametersCorrectly, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"classpath:application-context.xml"}), @Transactional, public]UserRepositoryTests,  @AT@ 12344 @LENGTH@ 288


UPD SwitchStatement@@switch (c) {case 'r':  return '\r';case 'n':return '\n';case 't':return '\t';case 'b':return '\b';case 'f':return '\f';default :return c;} @TO@ switch (c) {case 'r':  return '\r';case 'n':return '\n';case 't':return '\t';case 'b':return '\b';case 'f':return '\f';case ExtendedBufferedReader.END_OF_STREAM:throw new IOException("EOF whilst processing escape sequence");default :return c;} @AT@ 2262 @LENGTH@ 324
---INS SwitchCase@@case ExtendedBufferedReader.END_OF_STREAM: @TO@ SwitchStatement@@switch (c) {case 'r':  return '\r';case 'n':return '\n';case 't':return '\t';case 'b':return '\b';case 'f':return '\f';default :return c;} @AT@ 2586 @LENGTH@ 42
------INS QualifiedName@@ExtendedBufferedReader.END_OF_STREAM @TO@ SwitchCase@@case ExtendedBufferedReader.END_OF_STREAM: @AT@ 2591 @LENGTH@ 36
---------INS SimpleName@@ExtendedBufferedReader @TO@ QualifiedName@@ExtendedBufferedReader.END_OF_STREAM @AT@ 2591 @LENGTH@ 22
---------INS SimpleName@@END_OF_STREAM @TO@ QualifiedName@@ExtendedBufferedReader.END_OF_STREAM @AT@ 2614 @LENGTH@ 13
---INS ThrowStatement@@ClassInstanceCreation:new IOException("EOF whilst processing escape sequence") @TO@ SwitchStatement@@switch (c) {case 'r':  return '\r';case 'n':return '\n';case 't':return '\t';case 'b':return '\b';case 'f':return '\f';default :return c;} @AT@ 2645 @LENGTH@ 63
------INS ClassInstanceCreation@@IOException["EOF whilst processing escape sequence"] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("EOF whilst processing escape sequence") @AT@ 2651 @LENGTH@ 56
---------INS New@@new @TO@ ClassInstanceCreation@@IOException["EOF whilst processing escape sequence"] @AT@ 2651 @LENGTH@ 3
---------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException["EOF whilst processing escape sequence"] @AT@ 2655 @LENGTH@ 11
---------INS StringLiteral@@"EOF whilst processing escape sequence" @TO@ ClassInstanceCreation@@IOException["EOF whilst processing escape sequence"] @AT@ 2667 @LENGTH@ 39


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1702 @LENGTH@ 166
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 1717 @LENGTH@ 13


UPD TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  String s=EntityUtils.toString(response.getEntity());  boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s);  boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s);  if (!m1 && !m2) {    fail("Not expected body returned: " + s);  }}  finally {  httpclient.getConnectionManager().shutdown();} @TO@ try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  String s=EntityUtils.toString(response.getEntity());  assertNotNull(s);  boolean m1=s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>");  boolean m2=s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>");  if (!m1 && !m2) {    fail("Not expected body returned: " + s);  }}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 4309 @LENGTH@ 791
---UPD VariableDeclarationStatement@@boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s); @TO@ boolean m1=s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>"); @AT@ 4600 @LENGTH@ 148
------UPD VariableDeclarationFragment@@m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @TO@ m1=s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>") @AT@ 4608 @LENGTH@ 139
---------UPD MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @TO@ s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>") @AT@ 4613 @LENGTH@ 134
------------DEL StringLiteral@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>" @AT@ 4613 @LENGTH@ 124
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 4643 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>"] @TO@ MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 4645 @LENGTH@ 134
---------------INS StringLiteral@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>" @TO@ SimpleName@@MethodName:endsWith:["<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>"] @AT@ 4654 @LENGTH@ 124
------------DEL SimpleName@@MethodName:equals:[s] @AT@ 4738 @LENGTH@ 9
---------------DEL SimpleName@@s @AT@ 4745 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertNotNull(s) @TO@ TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  String s=EntityUtils.toString(response.getEntity());  boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s);  boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s);  if (!m1 && !m2) {    fail("Not expected body returned: " + s);  }}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 4600 @LENGTH@ 17
------INS MethodInvocation@@assertNotNull(s) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(s) @AT@ 4600 @LENGTH@ 16
---------INS SimpleName@@MethodName:assertNotNull:[s] @TO@ MethodInvocation@@assertNotNull(s) @AT@ 4600 @LENGTH@ 16
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertNotNull:[s] @AT@ 4614 @LENGTH@ 1
---UPD VariableDeclarationStatement@@boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s); @TO@ boolean m2=s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>"); @AT@ 4761 @LENGTH@ 148
------UPD VariableDeclarationFragment@@m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @TO@ m2=s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>") @AT@ 4769 @LENGTH@ 139
---------UPD MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @TO@ s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>") @AT@ 4774 @LENGTH@ 134
------------DEL StringLiteral@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>" @AT@ 4774 @LENGTH@ 124
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 4806 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>"] @TO@ MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 4808 @LENGTH@ 134
---------------INS StringLiteral@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>" @TO@ SimpleName@@MethodName:endsWith:["<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>"] @AT@ 4817 @LENGTH@ 124
------------DEL SimpleName@@MethodName:equals:[s] @AT@ 4899 @LENGTH@ 9
---------------DEL SimpleName@@s @AT@ 4906 @LENGTH@ 1


INS VariableDeclarationStatement@@final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class); @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 2716 @LENGTH@ 123
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class); @AT@ 2716 @LENGTH@ 5
---INS SimpleType@@EntityBeanComponentInstance @TO@ VariableDeclarationStatement@@final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class); @AT@ 2722 @LENGTH@ 27
---INS VariableDeclarationFragment@@instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @TO@ VariableDeclarationStatement@@final EntityBeanComponentInstance instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class); @AT@ 2750 @LENGTH@ 88
------INS SimpleName@@instance @TO@ VariableDeclarationFragment@@instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2750 @LENGTH@ 8
------INS CastExpression@@(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @TO@ VariableDeclarationFragment@@instance=(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2761 @LENGTH@ 77
---------INS SimpleType@@EntityBeanComponentInstance @TO@ CastExpression@@(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2762 @LENGTH@ 27
---------INS MethodInvocation@@context.getPrivateData(ComponentInstance.class) @TO@ CastExpression@@(EntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2791 @LENGTH@ 47
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPrivateData(ComponentInstance.class) @AT@ 2791 @LENGTH@ 7
------------INS SimpleName@@MethodName:getPrivateData:[ComponentInstance.class] @TO@ MethodInvocation@@context.getPrivateData(ComponentInstance.class) @AT@ 2799 @LENGTH@ 39
---------------INS TypeLiteral@@ComponentInstance.class @TO@ SimpleName@@MethodName:getPrivateData:[ComponentInstance.class] @AT@ 2814 @LENGTH@ 23


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Executor is null.") @TO@ MethodInvocation:ThreadsMessages.MESSAGES.nullExecutor() @AT@ 1696 @LENGTH@ 56
---DEL ClassInstanceCreation@@IllegalArgumentException["Executor is null."] @AT@ 1702 @LENGTH@ 49
------DEL New@@new @AT@ 1702 @LENGTH@ 3
------DEL SimpleType@@IllegalArgumentException @AT@ 1706 @LENGTH@ 24
------DEL StringLiteral@@"Executor is null." @AT@ 1731 @LENGTH@ 19
---INS MethodInvocation@@ThreadsMessages.MESSAGES.nullExecutor() @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Executor is null.") @AT@ 1702 @LENGTH@ 39
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.nullExecutor() @AT@ 1702 @LENGTH@ 24
------INS SimpleName@@MethodName:nullExecutor:[] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.nullExecutor() @AT@ 1727 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:unit=Enum.valueOf(TimeUnit.class,value.toUpperCase()) @TO@ Assignment:unit=Enum.valueOf(TimeUnit.class,value.toUpperCase(Locale.ENGLISH)) @AT@ 39546 @LENGTH@ 57
---UPD Assignment@@unit=Enum.valueOf(TimeUnit.class,value.toUpperCase()) @TO@ unit=Enum.valueOf(TimeUnit.class,value.toUpperCase(Locale.ENGLISH)) @AT@ 39546 @LENGTH@ 56
------UPD MethodInvocation@@Enum.valueOf(TimeUnit.class,value.toUpperCase()) @TO@ Enum.valueOf(TimeUnit.class,value.toUpperCase(Locale.ENGLISH)) @AT@ 39553 @LENGTH@ 49
---------UPD SimpleName@@MethodName:valueOf:[TimeUnit.class, value.toUpperCase()] @TO@ MethodName:valueOf:[TimeUnit.class, value.toUpperCase(Locale.ENGLISH)] @AT@ 39558 @LENGTH@ 44
------------UPD MethodInvocation@@value.toUpperCase() @TO@ value.toUpperCase(Locale.ENGLISH) @AT@ 39582 @LENGTH@ 19
---------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 39588 @LENGTH@ 13
------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 39625 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 39625 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 39632 @LENGTH@ 7


UPD MethodDeclaration@@private, voidMethodName:DomainRemoteFileRequestAndHandler, RemoteFileProtocolIdMapper mapper,  @TO@ public, voidMethodName:DomainRemoteFileRequestAndHandler, Executor asyncExecutor,  @AT@ 2128 @LENGTH@ 107
---UPD Modifier@@private @TO@ public @AT@ 2128 @LENGTH@ 7
---UPD SingleVariableDeclaration@@RemoteFileProtocolIdMapper mapper @TO@ Executor asyncExecutor @AT@ 2170 @LENGTH@ 33
------UPD SimpleType@@RemoteFileProtocolIdMapper @TO@ Executor @AT@ 2170 @LENGTH@ 26
------UPD SimpleName@@mapper @TO@ asyncExecutor @AT@ 2197 @LENGTH@ 6
---UPD SuperConstructorInvocation@@super(mapper);
 @TO@ super(MAPPER,asyncExecutor);
 @AT@ 2215 @LENGTH@ 14
------UPD SimpleName@@mapper @TO@ asyncExecutor @AT@ 2221 @LENGTH@ 6
------INS SimpleName@@MAPPER @TO@ SuperConstructorInvocation@@super(mapper);
 @AT@ 2246 @LENGTH@ 6


UPD IfStatement@@if (version == null) throw new IllegalStateException("Cannot obtain servlet version"); @TO@ if (version == null) version=Version.SERVLET_3_0; @AT@ 4106 @LENGTH@ 98
---UPD Block@@ThenBody:throw new IllegalStateException("Cannot obtain servlet version"); @TO@ ThenBody:version=Version.SERVLET_3_0; @AT@ 4139 @LENGTH@ 65
------INS ExpressionStatement@@Assignment:version=Version.SERVLET_3_0 @TO@ Block@@ThenBody:throw new IllegalStateException("Cannot obtain servlet version"); @AT@ 4136 @LENGTH@ 30
---------INS Assignment@@version=Version.SERVLET_3_0 @TO@ ExpressionStatement@@Assignment:version=Version.SERVLET_3_0 @AT@ 4136 @LENGTH@ 29
------------INS SimpleName@@version @TO@ Assignment@@version=Version.SERVLET_3_0 @AT@ 4136 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@version=Version.SERVLET_3_0 @AT@ 4143 @LENGTH@ 1
------------INS QualifiedName@@Version.SERVLET_3_0 @TO@ Assignment@@version=Version.SERVLET_3_0 @AT@ 4146 @LENGTH@ 19
---------------INS SimpleName@@Version @TO@ QualifiedName@@Version.SERVLET_3_0 @AT@ 4146 @LENGTH@ 7
---------------INS SimpleName@@SERVLET_3_0 @TO@ QualifiedName@@Version.SERVLET_3_0 @AT@ 4154 @LENGTH@ 11
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot obtain servlet version") @AT@ 4139 @LENGTH@ 65
---------DEL ClassInstanceCreation@@IllegalStateException["Cannot obtain servlet version"] @AT@ 4145 @LENGTH@ 58
------------DEL New@@new @AT@ 4145 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 4149 @LENGTH@ 21
------------DEL StringLiteral@@"Cannot obtain servlet version" @AT@ 4171 @LENGTH@ 31


UPD ReturnStatement@@MethodInvocation:this.distributedCacheManager.createSessionId() @TO@ MethodInvocation:this.createSessionId(this.distributedCacheManager.createSessionId(),this.getJvmRoute()) @AT@ 27905 @LENGTH@ 54
---INS MethodInvocation@@this.createSessionId(this.distributedCacheManager.createSessionId(),this.getJvmRoute()) @TO@ ReturnStatement@@MethodInvocation:this.distributedCacheManager.createSessionId() @AT@ 27912 @LENGTH@ 88
------INS ThisExpression@@this @TO@ MethodInvocation@@this.createSessionId(this.distributedCacheManager.createSessionId(),this.getJvmRoute()) @AT@ 27912 @LENGTH@ 4
------INS SimpleName@@MethodName:createSessionId:[this.distributedCacheManager.createSessionId(), this.getJvmRoute()] @TO@ MethodInvocation@@this.createSessionId(this.distributedCacheManager.createSessionId(),this.getJvmRoute()) @AT@ 27917 @LENGTH@ 83
---------MOV MethodInvocation@@this.distributedCacheManager.createSessionId() @TO@ SimpleName@@MethodName:createSessionId:[this.distributedCacheManager.createSessionId(), this.getJvmRoute()] @AT@ 27912 @LENGTH@ 46
---------INS MethodInvocation@@this.getJvmRoute() @TO@ SimpleName@@MethodName:createSessionId:[this.distributedCacheManager.createSessionId(), this.getJvmRoute()] @AT@ 27981 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getJvmRoute() @AT@ 27981 @LENGTH@ 4
------------INS SimpleName@@MethodName:getJvmRoute:[] @TO@ MethodInvocation@@this.getJvmRoute() @AT@ 27986 @LENGTH@ 13


INS MethodDeclaration@@void, MethodName:logNoConsole,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]ServerLogger, [BasicLogger] @AT@ 16091 @LENGTH@ 15
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:logNoConsole,  @AT@ 16086 @LENGTH@ 4
---INS SimpleName@@MethodName:logNoConsole @TO@ MethodDeclaration@@void, MethodName:logNoConsole,  @AT@ 16091 @LENGTH@ 12


UPD TryStatement@@try {  if (zooKeeper.exists(requirementsJsonPath) == null) {    return null;  } else {    String json=zooKeeper.getStringData(requirementsJsonPath);    return RequirementsJson.fromJSON(json);  }} catch (Exception e) {  throw new FabricException(e);} @TO@ try {  FabricRequirements answer=null;  if (zooKeeper.exists(requirementsJsonPath) != null) {    String json=zooKeeper.getStringData(requirementsJsonPath);    answer=RequirementsJson.fromJSON(json);  }  if (answer == null) {    answer=new FabricRequirements();  }  return answer;} catch (Exception e) {  throw new FabricException(e);} @AT@ 22905 @LENGTH@ 353
---UPD IfStatement@@if (zooKeeper.exists(requirementsJsonPath) == null) {  return null;} else {  String json=zooKeeper.getStringData(requirementsJsonPath);  return RequirementsJson.fromJSON(json);} @TO@ if (zooKeeper.exists(requirementsJsonPath) != null) {  String json=zooKeeper.getStringData(requirementsJsonPath);  answer=RequirementsJson.fromJSON(json);} @AT@ 22923 @LENGTH@ 251
------UPD InfixExpression@@zooKeeper.exists(requirementsJsonPath) == null @TO@ zooKeeper.exists(requirementsJsonPath) != null @AT@ 22927 @LENGTH@ 46
---------UPD Operator@@== @TO@ != @AT@ 22965 @LENGTH@ 2
------DEL Block@@ThenBody:{  return null;} @AT@ 22975 @LENGTH@ 45
---------DEL ReturnStatement@@NullLiteral:null @AT@ 22994 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 23001 @LENGTH@ 4
------UPD Block@@ElseBody:{  String json=zooKeeper.getStringData(requirementsJsonPath);  return RequirementsJson.fromJSON(json);} @TO@ ThenBody:{  String json=zooKeeper.getStringData(requirementsJsonPath);  answer=RequirementsJson.fromJSON(json);} @AT@ 23026 @LENGTH@ 148
---------DEL ReturnStatement@@MethodInvocation:RequirementsJson.fromJSON(json) @AT@ 23121 @LENGTH@ 39
---------INS ExpressionStatement@@Assignment:answer=RequirementsJson.fromJSON(json) @TO@ Block@@ElseBody:{  String json=zooKeeper.getStringData(requirementsJsonPath);  return RequirementsJson.fromJSON(json);} @AT@ 23183 @LENGTH@ 41
------------INS Assignment@@answer=RequirementsJson.fromJSON(json) @TO@ ExpressionStatement@@Assignment:answer=RequirementsJson.fromJSON(json) @AT@ 23183 @LENGTH@ 40
---------------MOV MethodInvocation@@RequirementsJson.fromJSON(json) @TO@ Assignment@@answer=RequirementsJson.fromJSON(json) @AT@ 23128 @LENGTH@ 31
---------------INS SimpleName@@answer @TO@ Assignment@@answer=RequirementsJson.fromJSON(json) @AT@ 23183 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@answer=RequirementsJson.fromJSON(json) @AT@ 23189 @LENGTH@ 1
---INS VariableDeclarationStatement@@FabricRequirements answer=null; @TO@ TryStatement@@try {  if (zooKeeper.exists(requirementsJsonPath) == null) {    return null;  } else {    String json=zooKeeper.getStringData(requirementsJsonPath);    return RequirementsJson.fromJSON(json);  }} catch (Exception e) {  throw new FabricException(e);} @AT@ 22990 @LENGTH@ 33
------INS SimpleType@@FabricRequirements @TO@ VariableDeclarationStatement@@FabricRequirements answer=null; @AT@ 22990 @LENGTH@ 18
------INS VariableDeclarationFragment@@answer=null @TO@ VariableDeclarationStatement@@FabricRequirements answer=null; @AT@ 23009 @LENGTH@ 13
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=null @AT@ 23009 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@answer=null @AT@ 23018 @LENGTH@ 4
---INS IfStatement@@if (answer == null) {  answer=new FabricRequirements();} @TO@ TryStatement@@try {  if (zooKeeper.exists(requirementsJsonPath) == null) {    return null;  } else {    String json=zooKeeper.getStringData(requirementsJsonPath);    return RequirementsJson.fromJSON(json);  }} catch (Exception e) {  throw new FabricException(e);} @AT@ 23251 @LENGTH@ 86
------INS InfixExpression@@answer == null @TO@ IfStatement@@if (answer == null) {  answer=new FabricRequirements();} @AT@ 23255 @LENGTH@ 14
---------INS SimpleName@@answer @TO@ InfixExpression@@answer == null @AT@ 23255 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@answer == null @AT@ 23261 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@answer == null @AT@ 23265 @LENGTH@ 4
------INS Block@@ThenBody:{  answer=new FabricRequirements();} @TO@ IfStatement@@if (answer == null) {  answer=new FabricRequirements();} @AT@ 23271 @LENGTH@ 66
---------INS ExpressionStatement@@Assignment:answer=new FabricRequirements() @TO@ Block@@ThenBody:{  answer=new FabricRequirements();} @AT@ 23289 @LENGTH@ 34
------------INS Assignment@@answer=new FabricRequirements() @TO@ ExpressionStatement@@Assignment:answer=new FabricRequirements() @AT@ 23289 @LENGTH@ 33
---------------INS SimpleName@@answer @TO@ Assignment@@answer=new FabricRequirements() @AT@ 23289 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@answer=new FabricRequirements() @AT@ 23295 @LENGTH@ 1
---------------INS ClassInstanceCreation@@FabricRequirements[] @TO@ Assignment@@answer=new FabricRequirements() @AT@ 23298 @LENGTH@ 24
------------------INS New@@new @TO@ ClassInstanceCreation@@FabricRequirements[] @AT@ 23298 @LENGTH@ 3
------------------INS SimpleType@@FabricRequirements @TO@ ClassInstanceCreation@@FabricRequirements[] @AT@ 23302 @LENGTH@ 18
---INS ReturnStatement@@SimpleName:answer @TO@ TryStatement@@try {  if (zooKeeper.exists(requirementsJsonPath) == null) {    return null;  } else {    String json=zooKeeper.getStringData(requirementsJsonPath);    return RequirementsJson.fromJSON(json);  }} catch (Exception e) {  throw new FabricException(e);} @AT@ 23350 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 23357 @LENGTH@ 6


DEL MethodDeclaration@@protected, String, MethodName:getDefaultName,  @AT@ 8903 @LENGTH@ 92
---DEL Modifier@@protected @AT@ 8903 @LENGTH@ 9
---DEL SimpleType@@String @AT@ 8913 @LENGTH@ 6
---DEL SimpleName@@MethodName:getDefaultName @AT@ 8920 @LENGTH@ 14
---DEL ReturnStatement@@MethodInvocation:InetAddressUtil.getLocalHostName() @AT@ 8947 @LENGTH@ 42
------DEL MethodInvocation@@InetAddressUtil.getLocalHostName() @AT@ 8954 @LENGTH@ 34
---------DEL SimpleName@@Name:InetAddressUtil @AT@ 8954 @LENGTH@ 15
---------DEL SimpleName@@MethodName:getLocalHostName:[] @AT@ 8970 @LENGTH@ 18


INS IfStatement@@if (found.isAlive()) {  found.stop();} else {  System.err.println("Container " + container + " is already stopped");} @TO@ MethodDeclaration@@protected, Object, MethodName:doExecute, Exception,  @AT@ 1444 @LENGTH@ 157
---INS MethodInvocation@@found.isAlive() @TO@ IfStatement@@if (found.isAlive()) {  found.stop();} else {  System.err.println("Container " + container + " is already stopped");} @AT@ 1448 @LENGTH@ 15
------INS SimpleName@@Name:found @TO@ MethodInvocation@@found.isAlive() @AT@ 1448 @LENGTH@ 5
------INS SimpleName@@MethodName:isAlive:[] @TO@ MethodInvocation@@found.isAlive() @AT@ 1454 @LENGTH@ 9
---INS Block@@ThenBody:{  found.stop();} @TO@ IfStatement@@if (found.isAlive()) {  found.stop();} else {  System.err.println("Container " + container + " is already stopped");} @AT@ 1465 @LENGTH@ 37
------MOV ExpressionStatement@@MethodInvocation:found.stop() @TO@ Block@@ThenBody:{  found.stop();} @AT@ 1444 @LENGTH@ 13
---INS Block@@ElseBody:{  System.err.println("Container " + container + " is already stopped");} @TO@ IfStatement@@if (found.isAlive()) {  found.stop();} else {  System.err.println("Container " + container + " is already stopped");} @AT@ 1508 @LENGTH@ 93
------INS ExpressionStatement@@MethodInvocation:System.err.println("Container " + container + " is already stopped") @TO@ Block@@ElseBody:{  System.err.println("Container " + container + " is already stopped");} @AT@ 1522 @LENGTH@ 69
---------INS MethodInvocation@@System.err.println("Container " + container + " is already stopped") @TO@ ExpressionStatement@@MethodInvocation:System.err.println("Container " + container + " is already stopped") @AT@ 1522 @LENGTH@ 68
------------INS QualifiedName@@Name:System.err @TO@ MethodInvocation@@System.err.println("Container " + container + " is already stopped") @AT@ 1522 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:["Container " + container + " is already stopped"] @TO@ MethodInvocation@@System.err.println("Container " + container + " is already stopped") @AT@ 1533 @LENGTH@ 57
---------------INS InfixExpression@@"Container " + container + " is already stopped" @TO@ SimpleName@@MethodName:println:["Container " + container + " is already stopped"] @AT@ 1541 @LENGTH@ 48
------------------INS StringLiteral@@"Container " @TO@ InfixExpression@@"Container " + container + " is already stopped" @AT@ 1541 @LENGTH@ 12
------------------INS Operator@@+ @TO@ InfixExpression@@"Container " + container + " is already stopped" @AT@ 1553 @LENGTH@ 1
------------------INS SimpleName@@container @TO@ InfixExpression@@"Container " + container + " is already stopped" @AT@ 1556 @LENGTH@ 9
------------------INS StringLiteral@@" is already stopped" @TO@ InfixExpression@@"Container " + container + " is already stopped" @AT@ 1568 @LENGTH@ 21


UPD Block@@ThenBody:{  final String name=node.get("servlet-name").asString();  final Context webContext=Context.class.cast(controller.getValue());  final Wrapper wrapper=Wrapper.class.cast(webContext.findChild(name));  final ModelNode response=new ModelNode();  handle(response,address.getLastElement().getValue(),(StandardWrapper)wrapper);  context.getResult().set(response);} @TO@ ThenBody:{  final String name=address.getLastElement().getValue();  final Context webContext=Context.class.cast(controller.getValue());  final Wrapper wrapper=Wrapper.class.cast(webContext.findChild(name));  final ModelNode response=new ModelNode();  handle(response,name,(StandardWrapper)wrapper);  context.getResult().set(response);} @AT@ 4883 @LENGTH@ 527
---UPD VariableDeclarationStatement@@final String name=node.get("servlet-name").asString(); @TO@ final String name=address.getLastElement().getValue(); @AT@ 4909 @LENGTH@ 56
------UPD VariableDeclarationFragment@@name=node.get("servlet-name").asString() @TO@ name=address.getLastElement().getValue() @AT@ 4922 @LENGTH@ 42
---------UPD MethodInvocation@@node.get("servlet-name").asString() @TO@ address.getLastElement().getValue() @AT@ 4929 @LENGTH@ 35
------------UPD MethodInvocation@@MethodName:get:["servlet-name"] @TO@ MethodName:getLastElement:[] @AT@ 4929 @LENGTH@ 24
---------------DEL StringLiteral@@"servlet-name" @AT@ 4938 @LENGTH@ 14
------------UPD SimpleName@@Name:node @TO@ Name:address @AT@ 4929 @LENGTH@ 4
------------UPD SimpleName@@MethodName:asString:[] @TO@ MethodName:getValue:[] @AT@ 4954 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:handle(response,address.getLastElement().getValue(),(StandardWrapper)wrapper) @TO@ MethodInvocation:handle(response,name,(StandardWrapper)wrapper) @AT@ 5248 @LENGTH@ 81
------UPD MethodInvocation@@handle(response,address.getLastElement().getValue(),(StandardWrapper)wrapper) @TO@ handle(response,name,(StandardWrapper)wrapper) @AT@ 5248 @LENGTH@ 80
---------UPD SimpleName@@MethodName:handle:[response, address.getLastElement().getValue(), (StandardWrapper)wrapper] @TO@ MethodName:handle:[response, name, (StandardWrapper)wrapper] @AT@ 5248 @LENGTH@ 80
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:handle:[response, address.getLastElement().getValue(), (StandardWrapper)wrapper] @AT@ 5174 @LENGTH@ 4
------------DEL MethodInvocation@@address.getLastElement().getValue() @AT@ 5265 @LENGTH@ 35
---------------DEL MethodInvocation@@MethodName:getLastElement:[] @AT@ 5265 @LENGTH@ 24
---------------DEL SimpleName@@Name:address @AT@ 5265 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getValue:[] @AT@ 5290 @LENGTH@ 10


INS ExpressionStatement@@Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"RecipientList",this,isParallelProcessing()) @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 4590 @LENGTH@ 134
---MOV Assignment@@executorService=manager.newDefaultThreadPool(this,ref) @TO@ ExpressionStatement@@Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"RecipientList",this,isParallelProcessing()) @AT@ 4917 @LENGTH@ 57


DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 2576 @LENGTH@ 33
---DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 2576 @LENGTH@ 32
------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 2576 @LENGTH@ 32
---------DEL StringLiteral@@"activemq-data" @AT@ 2592 @LENGTH@ 15


UPD VariableDeclarationStatement@@final Pool<MockBean> pool=new StrictMaxPool<MockBean>(factory,10,1,TimeUnit.SECONDS); @TO@ final Pool<MockBean> pool=new StrictMaxPool<MockBean>(factory,10,60,TimeUnit.SECONDS); @AT@ 2800 @LENGTH@ 90
---UPD VariableDeclarationFragment@@pool=new StrictMaxPool<MockBean>(factory,10,1,TimeUnit.SECONDS) @TO@ pool=new StrictMaxPool<MockBean>(factory,10,60,TimeUnit.SECONDS) @AT@ 2821 @LENGTH@ 68
------UPD ClassInstanceCreation@@StrictMaxPool<MockBean>[factory, 10, 1, TimeUnit.SECONDS] @TO@ StrictMaxPool<MockBean>[factory, 10, 60, TimeUnit.SECONDS] @AT@ 2828 @LENGTH@ 61
---------UPD NumberLiteral@@1 @TO@ 60 @AT@ 2869 @LENGTH@ 1


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2151 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2305 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2340 @LENGTH@ 86
------INS MethodInvocation@@QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2340 @LENGTH@ 85
---------INS QualifiedName@@Name:QueuelessThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2340 @LENGTH@ 31
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2372 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2387 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2396 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2407 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2414 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2420 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:utilities.getSecurityManager().isCallerInRole(securityMetaData.getSecurityRoles(),roleName) @TO@ MethodInvocation:utilities.getSecurityManager().isCallerInRole(securityMetaData.getSecurityRoles(),securityMetaData.getSecurityRoleLinks(),roleName) @AT@ 15491 @LENGTH@ 100
---UPD MethodInvocation@@utilities.getSecurityManager().isCallerInRole(securityMetaData.getSecurityRoles(),roleName) @TO@ utilities.getSecurityManager().isCallerInRole(securityMetaData.getSecurityRoles(),securityMetaData.getSecurityRoleLinks(),roleName) @AT@ 15498 @LENGTH@ 92
------UPD SimpleName@@MethodName:isCallerInRole:[securityMetaData.getSecurityRoles(), roleName] @TO@ MethodName:isCallerInRole:[securityMetaData.getSecurityRoles(), securityMetaData.getSecurityRoleLinks(), roleName] @AT@ 15529 @LENGTH@ 61
---------INS MethodInvocation@@securityMetaData.getSecurityRoleLinks() @TO@ SimpleName@@MethodName:isCallerInRole:[securityMetaData.getSecurityRoles(), roleName] @AT@ 15581 @LENGTH@ 39
------------INS SimpleName@@Name:securityMetaData @TO@ MethodInvocation@@securityMetaData.getSecurityRoleLinks() @AT@ 15581 @LENGTH@ 16
------------INS SimpleName@@MethodName:getSecurityRoleLinks:[] @TO@ MethodInvocation@@securityMetaData.getSecurityRoleLinks() @AT@ 15598 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:newControllers.add(NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler)) @TO@ MethodDeclaration@@protected, void, MethodName:performBoottime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers,  @AT@ 5832 @LENGTH@ 192
---INS MethodInvocation@@newControllers.add(NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler)) @TO@ ExpressionStatement@@MethodInvocation:newControllers.add(NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler)) @AT@ 5832 @LENGTH@ 191
------INS SimpleName@@Name:newControllers @TO@ MethodInvocation@@newControllers.add(NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler)) @AT@ 5832 @LENGTH@ 14
------INS SimpleName@@MethodName:add:[NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler)] @TO@ MethodInvocation@@newControllers.add(NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler)) @AT@ 5847 @LENGTH@ 176
---------INS MethodInvocation@@NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler) @TO@ SimpleName@@MethodName:add:[NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler)] @AT@ 5851 @LENGTH@ 171
------------INS SimpleName@@Name:NamingSubsystemOSGiService @TO@ MethodInvocation@@NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler) @AT@ 5851 @LENGTH@ 26
------------INS SimpleName@@MethodName:addService:[target, javax.naming.spi.InitialContextFactoryBuilder.class, InitialContextFactoryBuilder.class, verificationHandler] @TO@ MethodInvocation@@NamingSubsystemOSGiService.addService(target,javax.naming.spi.InitialContextFactoryBuilder.class,InitialContextFactoryBuilder.class,verificationHandler) @AT@ 5878 @LENGTH@ 144
---------------INS SimpleName@@target @TO@ SimpleName@@MethodName:addService:[target, javax.naming.spi.InitialContextFactoryBuilder.class, InitialContextFactoryBuilder.class, verificationHandler] @AT@ 5889 @LENGTH@ 6
---------------INS TypeLiteral@@javax.naming.spi.InitialContextFactoryBuilder.class @TO@ SimpleName@@MethodName:addService:[target, javax.naming.spi.InitialContextFactoryBuilder.class, InitialContextFactoryBuilder.class, verificationHandler] @AT@ 5913 @LENGTH@ 51
---------------INS TypeLiteral@@InitialContextFactoryBuilder.class @TO@ SimpleName@@MethodName:addService:[target, javax.naming.spi.InitialContextFactoryBuilder.class, InitialContextFactoryBuilder.class, verificationHandler] @AT@ 5966 @LENGTH@ 34
---------------INS SimpleName@@verificationHandler @TO@ SimpleName@@MethodName:addService:[target, javax.naming.spi.InitialContextFactoryBuilder.class, InitialContextFactoryBuilder.class, verificationHandler] @AT@ 6002 @LENGTH@ 19


UPD MethodDeclaration@@public, static, List, MethodName:toList, NodeList nodeList,  @TO@ public, static, List<?>, MethodName:toList, NodeList nodeList,  @AT@ 3438 @LENGTH@ 251
---INS ParameterizedType@@List<?> @TO@ MethodDeclaration@@public, static, List, MethodName:toList, NodeList nodeList,  @AT@ 3417 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 3417 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 3422 @LENGTH@ 1
---DEL SimpleType@@List @AT@ 3452 @LENGTH@ 4
---UPD VariableDeclarationStatement@@List answer=new ArrayList(); @TO@ List<Object> answer=new ArrayList<Object>(); @AT@ 3493 @LENGTH@ 30
------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List answer=new ArrayList(); @AT@ 3461 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 3461 @LENGTH@ 4
---------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 3466 @LENGTH@ 6
------DEL SimpleType@@List @AT@ 3493 @LENGTH@ 4
------UPD VariableDeclarationFragment@@answer=new ArrayList() @TO@ answer=new ArrayList<Object>() @AT@ 3498 @LENGTH@ 24
---------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<Object>[] @AT@ 3507 @LENGTH@ 15
------------INS ParameterizedType@@ArrayList<Object> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 3487 @LENGTH@ 17
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Object> @AT@ 3487 @LENGTH@ 9
---------------INS SimpleType@@Object @TO@ ParameterizedType@@ArrayList<Object> @AT@ 3497 @LENGTH@ 6
------------DEL SimpleType@@ArrayList @AT@ 3511 @LENGTH@ 9
---UPD VariableDeclarationStatement@@Iterator it=ObjectHelper.createIterator(nodeList); @TO@ Iterator<Object> it=ObjectHelper.createIterator(nodeList); @AT@ 3532 @LENGTH@ 52
------INS ParameterizedType@@Iterator<Object> @TO@ VariableDeclarationStatement@@Iterator it=ObjectHelper.createIterator(nodeList); @AT@ 3516 @LENGTH@ 16
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<Object> @AT@ 3516 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ParameterizedType@@Iterator<Object> @AT@ 3525 @LENGTH@ 6
------DEL SimpleType@@Iterator @AT@ 3532 @LENGTH@ 8


UPD TypeDeclaration@@[public, abstract]AbstractTestConfigurationEvents, TestCase @TO@ [public, abstract]AbstractTestConfigurationEvents,  @AT@ 1561 @LENGTH@ 4880
---DEL SimpleType@@TestCase @AT@ 1623 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.debugf("Reloading properties file '%s%",propertiesFile.getAbsolutePath()) @TO@ MethodInvocation:ROOT_LOGGER.debugf("Reloading properties file '%s'",propertiesFile.getAbsolutePath()) @AT@ 5339 @LENGTH@ 87
---UPD MethodInvocation@@ROOT_LOGGER.debugf("Reloading properties file '%s%",propertiesFile.getAbsolutePath()) @TO@ ROOT_LOGGER.debugf("Reloading properties file '%s'",propertiesFile.getAbsolutePath()) @AT@ 5339 @LENGTH@ 86
------UPD SimpleName@@MethodName:debugf:["Reloading properties file '%s%", propertiesFile.getAbsolutePath()] @TO@ MethodName:debugf:["Reloading properties file '%s'", propertiesFile.getAbsolutePath()] @AT@ 5351 @LENGTH@ 74
---------UPD StringLiteral@@"Reloading properties file '%s%" @TO@ "Reloading properties file '%s'" @AT@ 5358 @LENGTH@ 32


UPD MethodDeclaration@@public, boolean, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @TO@ public, boolean, MethodName:checkParseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11609 @LENGTH@ 342
---UPD SimpleName@@MethodName:parseAndSetParameter @TO@ MethodName:checkParseAndSetParameter @AT@ 11624 @LENGTH@ 20


DEL VariableDeclarationStatement@@ModuleIdentifier identifier=ModuleIdentifier.fromString(id); @AT@ 4749 @LENGTH@ 62
---DEL SimpleType@@ModuleIdentifier @AT@ 4749 @LENGTH@ 16
---DEL VariableDeclarationFragment@@identifier=ModuleIdentifier.fromString(id) @AT@ 4766 @LENGTH@ 44
------DEL SimpleName@@identifier @AT@ 4766 @LENGTH@ 10
------DEL MethodInvocation@@ModuleIdentifier.fromString(id) @AT@ 4779 @LENGTH@ 31
---------DEL SimpleName@@Name:ModuleIdentifier @AT@ 4779 @LENGTH@ 16
---------DEL SimpleName@@MethodName:fromString:[id] @AT@ 4796 @LENGTH@ 14
------------DEL SimpleName@@id @AT@ 4807 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @TO@ MethodInvocation:MGMT_OP_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @AT@ 6020 @LENGTH@ 84
---UPD MethodInvocation@@ROOT_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @TO@ MGMT_OP_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @AT@ 6020 @LENGTH@ 83
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 6020 @LENGTH@ 11


UPD ReturnStatement@@InfixExpression:this.beanClass == clazz || DEFAULT.isSerializable(clazz) @TO@ InfixExpression:DEFAULT.isSerializable(clazz) || clazz.isAssignableFrom(this.beanClass) @AT@ 1606 @LENGTH@ 64
---UPD InfixExpression@@this.beanClass == clazz || DEFAULT.isSerializable(clazz) @TO@ DEFAULT.isSerializable(clazz) || clazz.isAssignableFrom(this.beanClass) @AT@ 1613 @LENGTH@ 56
------DEL InfixExpression@@this.beanClass == clazz @AT@ 1613 @LENGTH@ 23
---------DEL FieldAccess@@this.beanClass @AT@ 1613 @LENGTH@ 14
---------DEL Operator@@== @AT@ 1627 @LENGTH@ 2
---------DEL SimpleName@@clazz @AT@ 1631 @LENGTH@ 5
------DEL Operator@@|| @AT@ 1636 @LENGTH@ 2
------INS Operator@@|| @TO@ InfixExpression@@this.beanClass == clazz || DEFAULT.isSerializable(clazz) @AT@ 1714 @LENGTH@ 2
------INS MethodInvocation@@clazz.isAssignableFrom(this.beanClass) @TO@ InfixExpression@@this.beanClass == clazz || DEFAULT.isSerializable(clazz) @AT@ 1718 @LENGTH@ 38
---------INS SimpleName@@Name:clazz @TO@ MethodInvocation@@clazz.isAssignableFrom(this.beanClass) @AT@ 1718 @LENGTH@ 5
---------INS SimpleName@@MethodName:isAssignableFrom:[this.beanClass] @TO@ MethodInvocation@@clazz.isAssignableFrom(this.beanClass) @AT@ 1724 @LENGTH@ 32
------------INS FieldAccess@@this.beanClass @TO@ SimpleName@@MethodName:isAssignableFrom:[this.beanClass] @AT@ 1741 @LENGTH@ 14
---------------MOV ThisExpression@@this @TO@ FieldAccess@@this.beanClass @AT@ 1613 @LENGTH@ 4
---------------MOV SimpleName@@beanClass @TO@ FieldAccess@@this.beanClass @AT@ 1618 @LENGTH@ 9


UPD VariableDeclarationStatement@@final CmpEntityBeanComponentInstance instance=(CmpEntityBeanComponentInstance)component.getCache().get(primaryKey); @TO@ final CmpEntityBeanComponentInstance instance=(CmpEntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class); @AT@ 2866 @LENGTH@ 118
---UPD VariableDeclarationFragment@@instance=(CmpEntityBeanComponentInstance)component.getCache().get(primaryKey) @TO@ instance=(CmpEntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2903 @LENGTH@ 80
------UPD CastExpression@@(CmpEntityBeanComponentInstance)component.getCache().get(primaryKey) @TO@ (CmpEntityBeanComponentInstance)context.getPrivateData(ComponentInstance.class) @AT@ 2914 @LENGTH@ 69
---------UPD MethodInvocation@@component.getCache().get(primaryKey) @TO@ context.getPrivateData(ComponentInstance.class) @AT@ 2947 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getCache:[] @AT@ 2947 @LENGTH@ 20
------------UPD SimpleName@@Name:component @TO@ Name:context @AT@ 2947 @LENGTH@ 9
------------UPD SimpleName@@MethodName:get:[primaryKey] @TO@ MethodName:getPrivateData:[ComponentInstance.class] @AT@ 2968 @LENGTH@ 15
---------------INS TypeLiteral@@ComponentInstance.class @TO@ SimpleName@@MethodName:get:[primaryKey] @AT@ 2970 @LENGTH@ 23
---------------DEL SimpleName@@primaryKey @AT@ 2972 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:attrTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @TO@ MethodInvocation:childrenTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @AT@ 16835 @LENGTH@ 62
---UPD MethodInvocation@@attrTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @TO@ childrenTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @AT@ 16835 @LENGTH@ 61
------UPD SimpleName@@Name:attrTable @TO@ Name:childrenTable @AT@ 16835 @LENGTH@ 9


UPD MethodDeclaration@@private, static, Collection<ServiceReference<?>>, MethodName:asCollection, ServiceReference<?>[] references,  @TO@ private, static, Collection<ServiceReference>, MethodName:asCollection, ServiceReference[] references,  @AT@ 7627 @LENGTH@ 205
---UPD ParameterizedType@@Collection<ServiceReference<?>> @TO@ Collection<ServiceReference> @AT@ 7642 @LENGTH@ 31
------DEL ParameterizedType@@ServiceReference<?> @AT@ 7653 @LENGTH@ 19
---------DEL WildcardType@@? @AT@ 7670 @LENGTH@ 1
------MOV SimpleType@@ServiceReference @TO@ ParameterizedType@@Collection<ServiceReference<?>> @AT@ 7653 @LENGTH@ 16
---UPD SingleVariableDeclaration@@ServiceReference<?>[] references @TO@ ServiceReference[] references @AT@ 7687 @LENGTH@ 32
------UPD ArrayType@@ServiceReference<?>[] @TO@ ServiceReference[] @AT@ 7687 @LENGTH@ 21
---------INS SimpleType@@ServiceReference @TO@ ArrayType@@ServiceReference<?>[] @AT@ 7678 @LENGTH@ 16
---------DEL ParameterizedType@@ServiceReference<?> @AT@ 7687 @LENGTH@ 19
------------DEL SimpleType@@ServiceReference @AT@ 7687 @LENGTH@ 16
------------DEL WildcardType@@? @AT@ 7704 @LENGTH@ 1
---UPD ReturnStatement@@ConditionalExpression:references == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references) @TO@ ConditionalExpression:references == null ? new ArrayList<ServiceReference>(0) : Arrays.asList(references) @AT@ 7731 @LENGTH@ 95
------UPD ConditionalExpression@@references == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references) @TO@ references == null ? new ArrayList<ServiceReference>(0) : Arrays.asList(references) @AT@ 7738 @LENGTH@ 87
---------UPD ClassInstanceCreation@@ArrayList<ServiceReference<?>>[0] @TO@ ArrayList<ServiceReference>[0] @AT@ 7760 @LENGTH@ 37
------------UPD ParameterizedType@@ArrayList<ServiceReference<?>> @TO@ ArrayList<ServiceReference> @AT@ 7764 @LENGTH@ 30
---------------DEL ParameterizedType@@ServiceReference<?> @AT@ 7774 @LENGTH@ 19
------------------DEL WildcardType@@? @AT@ 7791 @LENGTH@ 1
---------------MOV SimpleType@@ServiceReference @TO@ ParameterizedType@@ArrayList<ServiceReference<?>> @AT@ 7774 @LENGTH@ 16


UPD Block@@ElseBody:{  String data=exchange.getIn().getBody(String.class);  if (data != null) {    String charset=exchange.getProperty(Exchange.CHARSET_NAME,String.class);    if (charset != null) {      httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));    } else {      httpExchange.setRequestContent(new ByteArrayBuffer(data));    }  } else {    InputStream is=exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,exchange,exchange.getIn().getBody());    httpExchange.setRequestContentSource(is);  }} @TO@ ElseBody:{  Object body=exchange.getIn().getBody();  if (body instanceof String) {    String data=(String)body;    String charset=IOHelper.getCharsetName(exchange,false);    if (charset != null) {      httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));    } else {      httpExchange.setRequestContent(new ByteArrayBuffer(data));    }  } else {    InputStream is=exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,exchange,exchange.getIn().getBody());    httpExchange.setRequestContentSource(is);  }} @AT@ 4823 @LENGTH@ 843
---UPD VariableDeclarationStatement@@String data=exchange.getIn().getBody(String.class); @TO@ Object body=exchange.getIn().getBody(); @AT@ 4885 @LENGTH@ 53
------UPD SimpleType@@String @TO@ Object @AT@ 4885 @LENGTH@ 6
------UPD VariableDeclarationFragment@@data=exchange.getIn().getBody(String.class) @TO@ body=exchange.getIn().getBody() @AT@ 4892 @LENGTH@ 45
---------UPD SimpleName@@data @TO@ body @AT@ 4892 @LENGTH@ 4
---------UPD MethodInvocation@@exchange.getIn().getBody(String.class) @TO@ exchange.getIn().getBody() @AT@ 4899 @LENGTH@ 38
------------UPD SimpleName@@MethodName:getBody:[String.class] @TO@ MethodName:getBody:[] @AT@ 4916 @LENGTH@ 21
---------------DEL TypeLiteral@@String.class @AT@ 4924 @LENGTH@ 12
---UPD IfStatement@@if (data != null) {  String charset=exchange.getProperty(Exchange.CHARSET_NAME,String.class);  if (charset != null) {    httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));  } else {    httpExchange.setRequestContent(new ByteArrayBuffer(data));  }} else {  InputStream is=exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,exchange,exchange.getIn().getBody());  httpExchange.setRequestContentSource(is);} @TO@ if (body instanceof String) {  String data=(String)body;  String charset=IOHelper.getCharsetName(exchange,false);  if (charset != null) {    httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));  } else {    httpExchange.setRequestContent(new ByteArrayBuffer(data));  }} else {  InputStream is=exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,exchange,exchange.getIn().getBody());  httpExchange.setRequestContentSource(is);} @AT@ 4955 @LENGTH@ 697
------INS InstanceofExpression@@body instanceof String @TO@ IfStatement@@if (data != null) {  String charset=exchange.getProperty(Exchange.CHARSET_NAME,String.class);  if (charset != null) {    httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));  } else {    httpExchange.setRequestContent(new ByteArrayBuffer(data));  }} else {  InputStream is=exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,exchange,exchange.getIn().getBody());  httpExchange.setRequestContentSource(is);} @AT@ 4903 @LENGTH@ 22
---------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof String @AT@ 4903 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof String @AT@ 4908 @LENGTH@ 10
---------INS SimpleType@@String @TO@ InstanceofExpression@@body instanceof String @AT@ 4919 @LENGTH@ 6
------DEL InfixExpression@@data != null @AT@ 4959 @LENGTH@ 12
---------DEL SimpleName@@data @AT@ 4959 @LENGTH@ 4
---------DEL Operator@@!= @AT@ 4963 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4967 @LENGTH@ 4
------UPD Block@@ThenBody:{  String charset=exchange.getProperty(Exchange.CHARSET_NAME,String.class);  if (charset != null) {    httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));  } else {    httpExchange.setRequestContent(new ByteArrayBuffer(data));  }} @TO@ ThenBody:{  String data=(String)body;  String charset=IOHelper.getCharsetName(exchange,false);  if (charset != null) {    httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));  } else {    httpExchange.setRequestContent(new ByteArrayBuffer(data));  }} @AT@ 4973 @LENGTH@ 384
---------INS VariableDeclarationStatement@@String data=(String)body; @TO@ Block@@ThenBody:{  String charset=exchange.getProperty(Exchange.CHARSET_NAME,String.class);  if (charset != null) {    httpExchange.setRequestContent(new ByteArrayBuffer(data,charset));  } else {    httpExchange.setRequestContent(new ByteArrayBuffer(data));  }} @AT@ 4949 @LENGTH@ 28
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String data=(String)body; @AT@ 4949 @LENGTH@ 6
------------INS VariableDeclarationFragment@@data=(String)body @TO@ VariableDeclarationStatement@@String data=(String)body; @AT@ 4956 @LENGTH@ 20
---------------INS SimpleName@@data @TO@ VariableDeclarationFragment@@data=(String)body @AT@ 4956 @LENGTH@ 4
---------------INS CastExpression@@(String)body @TO@ VariableDeclarationFragment@@data=(String)body @AT@ 4963 @LENGTH@ 13
------------------INS SimpleType@@String @TO@ CastExpression@@(String)body @AT@ 4964 @LENGTH@ 6
------------------INS SimpleName@@body @TO@ CastExpression@@(String)body @AT@ 4972 @LENGTH@ 4
---------UPD VariableDeclarationStatement@@String charset=exchange.getProperty(Exchange.CHARSET_NAME,String.class); @TO@ String charset=IOHelper.getCharsetName(exchange,false); @AT@ 4995 @LENGTH@ 75
------------UPD VariableDeclarationFragment@@charset=exchange.getProperty(Exchange.CHARSET_NAME,String.class) @TO@ charset=IOHelper.getCharsetName(exchange,false) @AT@ 5002 @LENGTH@ 67
---------------UPD MethodInvocation@@exchange.getProperty(Exchange.CHARSET_NAME,String.class) @TO@ IOHelper.getCharsetName(exchange,false) @AT@ 5012 @LENGTH@ 57
------------------UPD SimpleName@@Name:exchange @TO@ Name:IOHelper @AT@ 5012 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:getProperty:[Exchange.CHARSET_NAME, String.class] @TO@ MethodName:getCharsetName:[exchange, false] @AT@ 5021 @LENGTH@ 48
---------------------DEL QualifiedName@@Exchange.CHARSET_NAME @AT@ 5033 @LENGTH@ 21
------------------------DEL SimpleName@@Exchange @AT@ 5033 @LENGTH@ 8
------------------------DEL SimpleName@@CHARSET_NAME @AT@ 5042 @LENGTH@ 12
---------------------DEL TypeLiteral@@String.class @AT@ 5056 @LENGTH@ 12
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getProperty:[Exchange.CHARSET_NAME, String.class] @AT@ 5434 @LENGTH@ 8
---------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getProperty:[Exchange.CHARSET_NAME, String.class] @AT@ 5444 @LENGTH@ 5


UPD MethodDeclaration@@public, static, void, MethodName:initOperations, final ManagementResourceRegistration root, final ContentRepository contentRepository, final ExtensibleConfigurationPersister extensibleConfigurationPersister, final ServerEnvironment serverEnvironment, final ControlledProcessState processState, final RunningModeControl runningModeControl, final AbstractVaultReader vaultReader, final ExtensionRegistry extensionRegistry, final boolean parallelBoot, final RemoteFileRepository remoteFileRepository,  @TO@ public, static, void, MethodName:initOperations, final ManagementResourceRegistration root, final ContentRepository contentRepository, final ExtensibleConfigurationPersister extensibleConfigurationPersister, final ServerEnvironment serverEnvironment, final ControlledProcessState processState, final RunningModeControl runningModeControl, final AbstractVaultReader vaultReader, final ExtensionRegistry extensionRegistry, final boolean parallelBoot, final DeploymentFileRepository remoteFileRepository,  @AT@ 11418 @LENGTH@ 15372
---UPD SingleVariableDeclaration@@final RemoteFileRepository remoteFileRepository @TO@ final DeploymentFileRepository remoteFileRepository @AT@ 12194 @LENGTH@ 47
------UPD SimpleType@@RemoteFileRepository @TO@ DeploymentFileRepository @AT@ 12200 @LENGTH@ 20
---UPD VariableDeclarationStatement@@final DeploymentReplaceHandler drh=new DeploymentReplaceHandler(contentRepository); @TO@ final DeploymentReplaceHandler drh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository); @AT@ 16744 @LENGTH@ 85
------UPD VariableDeclarationFragment@@drh=new DeploymentReplaceHandler(contentRepository) @TO@ drh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16775 @LENGTH@ 53
---------DEL ClassInstanceCreation@@DeploymentReplaceHandler[contentRepository] @AT@ 16781 @LENGTH@ 47
------------DEL New@@new @AT@ 16781 @LENGTH@ 3
------------DEL SimpleType@@DeploymentReplaceHandler @AT@ 16785 @LENGTH@ 24
------------DEL SimpleName@@contentRepository @AT@ 16810 @LENGTH@ 17
---------INS ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @TO@ VariableDeclarationFragment@@drh=new DeploymentReplaceHandler(contentRepository) @AT@ 16797 @LENGTH@ 255
------------INS InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16797 @LENGTH@ 83
---------------INS InfixExpression@@serverEnvironment == null @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16797 @LENGTH@ 25
------------------INS SimpleName@@serverEnvironment @TO@ InfixExpression@@serverEnvironment == null @AT@ 16797 @LENGTH@ 17
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment == null @AT@ 16814 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@serverEnvironment == null @AT@ 16818 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16822 @LENGTH@ 2
---------------INS InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16826 @LENGTH@ 54
------------------INS MethodInvocation@@serverEnvironment.getLaunchType() @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16826 @LENGTH@ 33
---------------------INS SimpleName@@Name:serverEnvironment @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 16826 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getLaunchType:[] @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 16844 @LENGTH@ 15
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16859 @LENGTH@ 2
------------------INS QualifiedName@@LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16863 @LENGTH@ 17
---------------------INS SimpleName@@LaunchType @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 16863 @LENGTH@ 10
---------------------INS SimpleName@@DOMAIN @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 16874 @LENGTH@ 6
------------INS MethodInvocation@@DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16899 @LENGTH@ 87
---------------INS SimpleName@@Name:DeploymentReplaceHandler @TO@ MethodInvocation@@DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 16899 @LENGTH@ 24
---------------INS SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @TO@ MethodInvocation@@DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 16924 @LENGTH@ 62
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 16946 @LENGTH@ 17
------------------INS SimpleName@@remoteFileRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 16965 @LENGTH@ 20
------------INS MethodInvocation@@DeploymentReplaceHandler.createForStandalone(contentRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16989 @LENGTH@ 63
---------------INS SimpleName@@Name:DeploymentReplaceHandler @TO@ MethodInvocation@@DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16989 @LENGTH@ 24
---------------INS SimpleName@@MethodName:createForStandalone:[contentRepository] @TO@ MethodInvocation@@DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 17014 @LENGTH@ 38
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForStandalone:[contentRepository] @AT@ 17034 @LENGTH@ 17
---UPD VariableDeclarationStatement@@DeploymentFullReplaceHandler dfrh=new DeploymentFullReplaceHandler(contentRepository); @TO@ DeploymentFullReplaceHandler dfrh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository); @AT@ 16935 @LENGTH@ 88
------UPD VariableDeclarationFragment@@dfrh=new DeploymentFullReplaceHandler(contentRepository) @TO@ dfrh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 16964 @LENGTH@ 58
---------DEL ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepository] @AT@ 16971 @LENGTH@ 51
------------DEL New@@new @AT@ 16971 @LENGTH@ 3
------------DEL SimpleType@@DeploymentFullReplaceHandler @AT@ 16975 @LENGTH@ 28
------------DEL SimpleName@@contentRepository @AT@ 17004 @LENGTH@ 17
---------INS ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @TO@ VariableDeclarationFragment@@dfrh=new DeploymentFullReplaceHandler(contentRepository) @AT@ 17195 @LENGTH@ 263
------------INS InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17195 @LENGTH@ 83
---------------INS InfixExpression@@serverEnvironment == null @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17195 @LENGTH@ 25
------------------INS SimpleName@@serverEnvironment @TO@ InfixExpression@@serverEnvironment == null @AT@ 17195 @LENGTH@ 17
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment == null @AT@ 17212 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@serverEnvironment == null @AT@ 17216 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17220 @LENGTH@ 2
---------------INS InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17224 @LENGTH@ 54
------------------INS MethodInvocation@@serverEnvironment.getLaunchType() @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17224 @LENGTH@ 33
---------------------INS SimpleName@@Name:serverEnvironment @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 17224 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getLaunchType:[] @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 17242 @LENGTH@ 15
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17257 @LENGTH@ 2
------------------INS QualifiedName@@LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17261 @LENGTH@ 17
---------------------INS SimpleName@@LaunchType @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 17261 @LENGTH@ 10
---------------------INS SimpleName@@DOMAIN @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 17272 @LENGTH@ 6
------------INS MethodInvocation@@DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17297 @LENGTH@ 91
---------------INS SimpleName@@Name:DeploymentFullReplaceHandler @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 17297 @LENGTH@ 28
---------------INS SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 17326 @LENGTH@ 62
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 17348 @LENGTH@ 17
------------------INS SimpleName@@remoteFileRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 17367 @LENGTH@ 20
------------INS MethodInvocation@@DeploymentFullReplaceHandler.createForStandalone(contentRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17391 @LENGTH@ 67
---------------INS SimpleName@@Name:DeploymentFullReplaceHandler @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17391 @LENGTH@ 28
---------------INS SimpleName@@MethodName:createForStandalone:[contentRepository] @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17420 @LENGTH@ 38
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForStandalone:[contentRepository] @AT@ 17440 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:cli.sendLine("connect") @TO@ MethodInvocation:cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @AT@ 1727 @LENGTH@ 24
---UPD MethodInvocation@@cli.sendLine("connect") @TO@ cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @AT@ 1727 @LENGTH@ 23
------UPD SimpleName@@MethodName:sendLine:["connect"] @TO@ MethodName:sendLine:["connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(), false] @AT@ 1731 @LENGTH@ 19
---------DEL StringLiteral@@"connect" @AT@ 1740 @LENGTH@ 9
---------INS InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @TO@ SimpleName@@MethodName:sendLine:["connect"] @AT@ 1779 @LENGTH@ 83
------------INS StringLiteral@@"connect " @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1779 @LENGTH@ 10
------------INS Operator@@+ @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1789 @LENGTH@ 1
------------INS MethodInvocation@@ServerAddress.getServerAddress() @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1792 @LENGTH@ 32
---------------INS SimpleName@@Name:ServerAddress @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 1792 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 1806 @LENGTH@ 18
------------INS StringLiteral@@":" @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1827 @LENGTH@ 3
------------INS MethodInvocation@@ServerAddress.getServerPort() @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1833 @LENGTH@ 29
---------------INS SimpleName@@Name:ServerAddress @TO@ MethodInvocation@@ServerAddress.getServerPort() @AT@ 1833 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getServerPort:[] @TO@ MethodInvocation@@ServerAddress.getServerPort() @AT@ 1847 @LENGTH@ 15
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:sendLine:["connect"] @AT@ 1864 @LENGTH@ 5


UPD VariableDeclarationStatement@@CrudRepository<Object,Serializable> repository=BeanFactoryUtils.beanOfType(context,objectType); @TO@ CrudRepository<Object,Serializable> repository=BeanFactoryUtils.beanOfTypeIncludingAncestors(context,objectType); @AT@ 4680 @LENGTH@ 99
---UPD VariableDeclarationFragment@@repository=BeanFactoryUtils.beanOfType(context,objectType) @TO@ repository=BeanFactoryUtils.beanOfTypeIncludingAncestors(context,objectType) @AT@ 4717 @LENGTH@ 61
------UPD MethodInvocation@@BeanFactoryUtils.beanOfType(context,objectType) @TO@ BeanFactoryUtils.beanOfTypeIncludingAncestors(context,objectType) @AT@ 4730 @LENGTH@ 48
---------UPD SimpleName@@MethodName:beanOfType:[context, objectType] @TO@ MethodName:beanOfTypeIncludingAncestors:[context, objectType] @AT@ 4747 @LENGTH@ 31


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Failed to locate executor service " + serviceNameBase.append(name))) @TO@ MethodInvocation:ThreadsMessages.MESSAGES.threadPoolServiceNotFoundForMetrics(serviceNameBase.append(name)) @AT@ 3548 @LENGTH@ 125
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("Failed to locate executor service " + serviceNameBase.append(name))] @AT@ 3554 @LENGTH@ 118
------DEL New@@new @AT@ 3554 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 3558 @LENGTH@ 24
---MOV MethodInvocation@@new ModelNode().set("Failed to locate executor service " + serviceNameBase.append(name)) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Failed to locate executor service " + serviceNameBase.append(name))) @AT@ 3583 @LENGTH@ 88
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@new ModelNode().set("Failed to locate executor service " + serviceNameBase.append(name)) @AT@ 3554 @LENGTH@ 24
------DEL ClassInstanceCreation@@ModelNode[] @AT@ 3583 @LENGTH@ 15
---------DEL New@@new @AT@ 3583 @LENGTH@ 3
---------DEL SimpleType@@ModelNode @AT@ 3587 @LENGTH@ 9
------UPD SimpleName@@MethodName:set:["Failed to locate executor service " + serviceNameBase.append(name)] @TO@ MethodName:threadPoolServiceNotFoundForMetrics:[serviceNameBase.append(name)] @AT@ 3599 @LENGTH@ 72
---------DEL InfixExpression@@"Failed to locate executor service " + serviceNameBase.append(name) @AT@ 3603 @LENGTH@ 67
------------DEL StringLiteral@@"Failed to locate executor service " @AT@ 3603 @LENGTH@ 36
------------DEL Operator@@+ @AT@ 3639 @LENGTH@ 1
---------MOV MethodInvocation@@serviceNameBase.append(name) @TO@ SimpleName@@MethodName:set:["Failed to locate executor service " + serviceNameBase.append(name)] @AT@ 3642 @LENGTH@ 28


UPD SuperConstructorInvocation@@super(MediaType.APPLICATION_FORM_URLENCODED);
 @TO@ super(MediaType.APPLICATION_FORM_URLENCODED,MediaType.TEXT_PLAIN);
 @AT@ 1702 @LENGTH@ 45
---INS QualifiedName@@MediaType.TEXT_PLAIN @TO@ SuperConstructorInvocation@@super(MediaType.APPLICATION_FORM_URLENCODED);
 @AT@ 1747 @LENGTH@ 20
------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.TEXT_PLAIN @AT@ 1747 @LENGTH@ 9
------INS SimpleName@@TEXT_PLAIN @TO@ QualifiedName@@MediaType.TEXT_PLAIN @AT@ 1757 @LENGTH@ 10


UPD MethodDeclaration@@protected, Object, MethodName:doConvertTo, final Class type, final Exchange exchange, final Object value,  @TO@ protected, Object, MethodName:doConvertTo, final Class<?> type, final Exchange exchange, final Object value,  @AT@ 6636 @LENGTH@ 3478
---UPD SingleVariableDeclaration@@final Class type @TO@ final Class<?> type @AT@ 6665 @LENGTH@ 16
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@final Class type @AT@ 6648 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 6648 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 6654 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 6671 @LENGTH@ 5
---UPD IfStatement@@if (type.isPrimitive()) {  Class primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(type);  if (primitiveType != type) {    return convertTo(primitiveType,exchange,value);  }} @TO@ if (type.isPrimitive()) {  Class<?> primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(type);  if (primitiveType != type) {    return convertTo(primitiveType,exchange,value);  }} @AT@ 9660 @LENGTH@ 244
------UPD Block@@ThenBody:{  Class primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(type);  if (primitiveType != type) {    return convertTo(primitiveType,exchange,value);  }} @TO@ ThenBody:{  Class<?> primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(type);  if (primitiveType != type) {    return convertTo(primitiveType,exchange,value);  }} @AT@ 9684 @LENGTH@ 220
---------UPD VariableDeclarationStatement@@Class primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(type); @TO@ Class<?> primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(type); @AT@ 9698 @LENGTH@ 75
------------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class primitiveType=ObjectHelper.convertPrimitiveTypeToWrapperType(type); @AT@ 9678 @LENGTH@ 8
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 9678 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 9684 @LENGTH@ 1
------------DEL SimpleType@@Class @AT@ 9698 @LENGTH@ 5


INS VariableDeclarationStatement@@String dir="target/activemq-data-" + id; @TO@ MethodDeclaration@@public, static, ConnectionFactory, MethodName:createPersistentConnectionFactory, String options,  @AT@ 3170 @LENGTH@ 42
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String dir="target/activemq-data-" + id; @AT@ 3170 @LENGTH@ 6
---INS VariableDeclarationFragment@@dir="target/activemq-data-" + id @TO@ VariableDeclarationStatement@@String dir="target/activemq-data-" + id; @AT@ 3177 @LENGTH@ 34
------INS SimpleName@@dir @TO@ VariableDeclarationFragment@@dir="target/activemq-data-" + id @AT@ 3177 @LENGTH@ 3
------INS InfixExpression@@"target/activemq-data-" + id @TO@ VariableDeclarationFragment@@dir="target/activemq-data-" + id @AT@ 3183 @LENGTH@ 28
---------INS StringLiteral@@"target/activemq-data-" @TO@ InfixExpression@@"target/activemq-data-" + id @AT@ 3183 @LENGTH@ 23
---------INS Operator@@+ @TO@ InfixExpression@@"target/activemq-data-" + id @AT@ 3206 @LENGTH@ 1
---------INS SimpleName@@id @TO@ InfixExpression@@"target/activemq-data-" + id @AT@ 3209 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:query=method.isModifyingQuery() ? getEntityManager().createQuery(sortedQueryString) : getEntityManager().createQuery(sortedQueryString,method.getReturnedObjectType()) @TO@ Assignment:query=method.isModifyingQuery() ? getEntityManager().createQuery(sortedQueryString) : getEntityManager().createQuery(sortedQueryString) @AT@ 3472 @LENGTH@ 176
---UPD Assignment@@query=method.isModifyingQuery() ? getEntityManager().createQuery(sortedQueryString) : getEntityManager().createQuery(sortedQueryString,method.getReturnedObjectType()) @TO@ query=method.isModifyingQuery() ? getEntityManager().createQuery(sortedQueryString) : getEntityManager().createQuery(sortedQueryString) @AT@ 3472 @LENGTH@ 175
------UPD ConditionalExpression@@method.isModifyingQuery() ? getEntityManager().createQuery(sortedQueryString) : getEntityManager().createQuery(sortedQueryString,method.getReturnedObjectType()) @TO@ method.isModifyingQuery() ? getEntityManager().createQuery(sortedQueryString) : getEntityManager().createQuery(sortedQueryString) @AT@ 3480 @LENGTH@ 167
---------UPD MethodInvocation@@getEntityManager().createQuery(sortedQueryString,method.getReturnedObjectType()) @TO@ getEntityManager().createQuery(sortedQueryString) @AT@ 3560 @LENGTH@ 87
------------UPD SimpleName@@MethodName:createQuery:[sortedQueryString, method.getReturnedObjectType()] @TO@ MethodName:createQuery:[sortedQueryString] @AT@ 3585 @LENGTH@ 62
---------------DEL MethodInvocation@@method.getReturnedObjectType() @AT@ 3616 @LENGTH@ 30
------------------DEL SimpleName@@Name:method @AT@ 3616 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:getReturnedObjectType:[] @AT@ 3623 @LENGTH@ 23


UPD MethodDeclaration@@private, ModelNode, MethodName:getNodeDescription, ImmutableManagementResourceRegistration registry, ModelNode operation,  @TO@ private, ModelNode, MethodName:getNodeDescription, ImmutableManagementResourceRegistration registry, ModelNode operation, OperationFailedException,  @AT@ 28087 @LENGTH@ 360
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@private, ModelNode, MethodName:getNodeDescription, ImmutableManagementResourceRegistration registry, ModelNode operation,  @AT@ 28202 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:operations.add(getConnectionAddOperation(name,outboundSocketBindingRef,address)) @TO@ MethodInvocation:operations.add(getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address)) @AT@ 20009 @LENGTH@ 83
---UPD MethodInvocation@@operations.add(getConnectionAddOperation(name,outboundSocketBindingRef,address)) @TO@ operations.add(getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address)) @AT@ 20009 @LENGTH@ 82
------UPD SimpleName@@MethodName:add:[getConnectionAddOperation(name,outboundSocketBindingRef,address)] @TO@ MethodName:add:[getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address)] @AT@ 20020 @LENGTH@ 71
---------UPD MethodInvocation@@getConnectionAddOperation(name,outboundSocketBindingRef,address) @TO@ getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address) @AT@ 20024 @LENGTH@ 66
------------UPD SimpleName@@MethodName:getConnectionAddOperation:[name, outboundSocketBindingRef, address] @TO@ MethodName:getConnectionAddOperation:[name, outboundSocketBindingRef, username, securityRealm, address] @AT@ 20024 @LENGTH@ 66
---------------INS SimpleName@@username @TO@ SimpleName@@MethodName:getConnectionAddOperation:[name, outboundSocketBindingRef, address] @AT@ 20082 @LENGTH@ 8
---------------INS SimpleName@@securityRealm @TO@ SimpleName@@MethodName:getConnectionAddOperation:[name, outboundSocketBindingRef, address] @AT@ 20092 @LENGTH@ 13


DEL ExpressionStatement@@MethodInvocation:RootContextUtil.undeploy(managementClient.getControllerClient(),"root-web.ear") @AT@ 2682 @LENGTH@ 81
---DEL MethodInvocation@@RootContextUtil.undeploy(managementClient.getControllerClient(),"root-web.ear") @AT@ 2682 @LENGTH@ 80
------DEL SimpleName@@Name:RootContextUtil @AT@ 2682 @LENGTH@ 15
------DEL SimpleName@@MethodName:undeploy:[managementClient.getControllerClient(), "root-web.ear"] @AT@ 2698 @LENGTH@ 64
---------DEL MethodInvocation@@managementClient.getControllerClient() @AT@ 2707 @LENGTH@ 38
------------DEL SimpleName@@Name:managementClient @AT@ 2707 @LENGTH@ 16
------------DEL SimpleName@@MethodName:getControllerClient:[] @AT@ 2724 @LENGTH@ 21
---------DEL StringLiteral@@"root-web.ear" @AT@ 2747 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:context.removeService(MessagingServices.getQueueBaseServiceName(hqServiceName).append(name)) @TO@ MethodInvocation:context.removeService(queueServiceName) @AT@ 1344 @LENGTH@ 93
---UPD MethodInvocation@@context.removeService(MessagingServices.getQueueBaseServiceName(hqServiceName).append(name)) @TO@ context.removeService(queueServiceName) @AT@ 1344 @LENGTH@ 92
------UPD SimpleName@@MethodName:removeService:[MessagingServices.getQueueBaseServiceName(hqServiceName).append(name)] @TO@ MethodName:removeService:[queueServiceName] @AT@ 1352 @LENGTH@ 84
---------INS SimpleName@@queueServiceName @TO@ SimpleName@@MethodName:removeService:[MessagingServices.getQueueBaseServiceName(hqServiceName).append(name)] @AT@ 1482 @LENGTH@ 16


UPD IfStatement@@if (store.hasDefined(ModelKeys.PROPERTIES)) {  for (  Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {    String propertyName=property.getName();    String propertyValue=property.getValue().asString();    properties.setProperty(propertyName,propertyValue);  }} @TO@ if (store.hasDefined(ModelKeys.PROPERTY)) {  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    String propertyName=property.getName();    Property complexValue=property.getValue().asProperty();    String propertyValue=complexValue.getValue().asString();    properties.setProperty(propertyName,propertyValue);  }} @AT@ 22862 @LENGTH@ 356
---UPD MethodInvocation@@store.hasDefined(ModelKeys.PROPERTIES) @TO@ store.hasDefined(ModelKeys.PROPERTY) @AT@ 22866 @LENGTH@ 38
------UPD SimpleName@@MethodName:hasDefined:[ModelKeys.PROPERTIES] @TO@ MethodName:hasDefined:[ModelKeys.PROPERTY] @AT@ 22872 @LENGTH@ 32
---------UPD QualifiedName@@ModelKeys.PROPERTIES @TO@ ModelKeys.PROPERTY @AT@ 22883 @LENGTH@ 20
------------UPD SimpleName@@PROPERTIES @TO@ PROPERTY @AT@ 22893 @LENGTH@ 10
---UPD Block@@ThenBody:{  for (  Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {    String propertyName=property.getName();    String propertyValue=property.getValue().asString();    properties.setProperty(propertyName,propertyValue);  }} @TO@ ThenBody:{  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    String propertyName=property.getName();    Property complexValue=property.getValue().asProperty();    String propertyValue=complexValue.getValue().asString();    properties.setProperty(propertyName,propertyValue);  }} @AT@ 22906 @LENGTH@ 312
------UPD EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {  String propertyName=property.getName();  String propertyValue=property.getValue().asString();  properties.setProperty(propertyName,propertyValue);} @TO@ for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  String propertyName=property.getName();  Property complexValue=property.getValue().asProperty();  String propertyValue=complexValue.getValue().asString();  properties.setProperty(propertyName,propertyValue);} @AT@ 22920 @LENGTH@ 288
---------UPD MethodInvocation@@store.get(ModelKeys.PROPERTIES).asPropertyList() @TO@ store.get(ModelKeys.PROPERTY).asPropertyList() @AT@ 22945 @LENGTH@ 48
------------UPD MethodInvocation@@MethodName:get:[ModelKeys.PROPERTIES] @TO@ MethodName:get:[ModelKeys.PROPERTY] @AT@ 22945 @LENGTH@ 31
---------------UPD QualifiedName@@ModelKeys.PROPERTIES @TO@ ModelKeys.PROPERTY @AT@ 22955 @LENGTH@ 20
------------------UPD SimpleName@@PROPERTIES @TO@ PROPERTY @AT@ 22965 @LENGTH@ 10
---------UPD VariableDeclarationStatement@@String propertyValue=property.getValue().asString(); @TO@ String propertyValue=complexValue.getValue().asString(); @AT@ 23071 @LENGTH@ 54
------------UPD VariableDeclarationFragment@@propertyValue=property.getValue().asString() @TO@ propertyValue=complexValue.getValue().asString() @AT@ 23078 @LENGTH@ 46
---------------UPD MethodInvocation@@property.getValue().asString() @TO@ complexValue.getValue().asString() @AT@ 23094 @LENGTH@ 30
------------------UPD SimpleName@@Name:property @TO@ Name:complexValue @AT@ 23094 @LENGTH@ 8
---------INS VariableDeclarationStatement@@Property complexValue=property.getValue().asProperty(); @TO@ EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTIES).asPropertyList()) {  String propertyName=property.getName();  String propertyValue=property.getValue().asString();  properties.setProperty(propertyName,propertyValue);} @AT@ 23244 @LENGTH@ 57
------------INS SimpleType@@Property @TO@ VariableDeclarationStatement@@Property complexValue=property.getValue().asProperty(); @AT@ 23244 @LENGTH@ 8
------------INS VariableDeclarationFragment@@complexValue=property.getValue().asProperty() @TO@ VariableDeclarationStatement@@Property complexValue=property.getValue().asProperty(); @AT@ 23253 @LENGTH@ 47
---------------INS SimpleName@@complexValue @TO@ VariableDeclarationFragment@@complexValue=property.getValue().asProperty() @AT@ 23253 @LENGTH@ 12
---------------INS MethodInvocation@@property.getValue().asProperty() @TO@ VariableDeclarationFragment@@complexValue=property.getValue().asProperty() @AT@ 23268 @LENGTH@ 32
------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@property.getValue().asProperty() @AT@ 23268 @LENGTH@ 19
------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getValue().asProperty() @AT@ 23268 @LENGTH@ 8
------------------INS SimpleName@@MethodName:asProperty:[] @TO@ MethodInvocation@@property.getValue().asProperty() @AT@ 23288 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:in=new BufferedInputStream(new FileInputStream(file)) @TO@ Assignment:in=IOHelper.buffered(new FileInputStream(file)) @AT@ 2214 @LENGTH@ 56
---UPD Assignment@@in=new BufferedInputStream(new FileInputStream(file)) @TO@ in=IOHelper.buffered(new FileInputStream(file)) @AT@ 2214 @LENGTH@ 55
------INS MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @TO@ Assignment@@in=new BufferedInputStream(new FileInputStream(file)) @AT@ 2183 @LENGTH@ 44
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @AT@ 2183 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[new FileInputStream(file)] @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @AT@ 2192 @LENGTH@ 35
------------INS ClassInstanceCreation@@FileInputStream[file] @TO@ SimpleName@@MethodName:buffered:[new FileInputStream(file)] @AT@ 2201 @LENGTH@ 25
---------------MOV New@@new @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 2243 @LENGTH@ 3
---------------MOV SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 2247 @LENGTH@ 15
---------------MOV SimpleName@@file @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 2263 @LENGTH@ 4
------DEL ClassInstanceCreation@@BufferedInputStream[new FileInputStream(file)] @AT@ 2219 @LENGTH@ 50
---------DEL New@@new @AT@ 2219 @LENGTH@ 3
---------DEL SimpleType@@BufferedInputStream @AT@ 2223 @LENGTH@ 19
---------DEL ClassInstanceCreation@@FileInputStream[file] @AT@ 2243 @LENGTH@ 25


INS ExpressionStatement@@Assignment:node=((Navigate)node.get(0)).next() @TO@ MethodDeclaration@@public, void, MethodName:testRouteIsCorrectAtRuntime, Exception,  @AT@ 1473 @LENGTH@ 39
---INS Assignment@@node=((Navigate)node.get(0)).next() @TO@ ExpressionStatement@@Assignment:node=((Navigate)node.get(0)).next() @AT@ 1473 @LENGTH@ 38
------INS SimpleName@@node @TO@ Assignment@@node=((Navigate)node.get(0)).next() @AT@ 1473 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@node=((Navigate)node.get(0)).next() @AT@ 1477 @LENGTH@ 1
------INS MethodInvocation@@((Navigate)node.get(0)).next() @TO@ Assignment@@node=((Navigate)node.get(0)).next() @AT@ 1480 @LENGTH@ 31
---------INS ParenthesizedExpression@@((Navigate)node.get(0)) @TO@ MethodInvocation@@((Navigate)node.get(0)).next() @AT@ 1480 @LENGTH@ 24
------------INS CastExpression@@(Navigate)node.get(0) @TO@ ParenthesizedExpression@@((Navigate)node.get(0)) @AT@ 1481 @LENGTH@ 22
---------------INS SimpleType@@Navigate @TO@ CastExpression@@(Navigate)node.get(0) @AT@ 1482 @LENGTH@ 8
---------------INS MethodInvocation@@node.get(0) @TO@ CastExpression@@(Navigate)node.get(0) @AT@ 1492 @LENGTH@ 11
------------------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get(0) @AT@ 1492 @LENGTH@ 4
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@node.get(0) @AT@ 1497 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 1501 @LENGTH@ 1
---------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@((Navigate)node.get(0)).next() @AT@ 1505 @LENGTH@ 6


DEL MethodDeclaration@@private, static, String, MethodName:getPath, String uri, URISyntaxException,  @AT@ 5020 @LENGTH@ 494
---DEL Modifier@@private @AT@ 5020 @LENGTH@ 7
---DEL Modifier@@static @AT@ 5028 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 5035 @LENGTH@ 6
---DEL SimpleName@@MethodName:getPath @AT@ 5042 @LENGTH@ 7
---DEL SingleVariableDeclaration@@String uri @AT@ 5050 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 5050 @LENGTH@ 6
------DEL SimpleName@@uri @AT@ 5057 @LENGTH@ 3
---DEL SimpleType@@URISyntaxException @AT@ 5069 @LENGTH@ 18
---DEL VariableDeclarationStatement@@URI u=new URI(UnsafeUriCharactersEncoder.encode(uri)); @AT@ 5139 @LENGTH@ 56
------DEL SimpleType@@URI @AT@ 5139 @LENGTH@ 3
------DEL VariableDeclarationFragment@@u=new URI(UnsafeUriCharactersEncoder.encode(uri)) @AT@ 5143 @LENGTH@ 51
---------DEL SimpleName@@u @AT@ 5143 @LENGTH@ 1
---------DEL ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(uri)] @AT@ 5147 @LENGTH@ 47
------------DEL New@@new @AT@ 5147 @LENGTH@ 3
------------DEL SimpleType@@URI @AT@ 5151 @LENGTH@ 3
------------DEL MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @AT@ 5155 @LENGTH@ 38
---------------DEL SimpleName@@Name:UnsafeUriCharactersEncoder @AT@ 5155 @LENGTH@ 26
---------------DEL SimpleName@@MethodName:encode:[uri] @AT@ 5182 @LENGTH@ 11
------------------DEL SimpleName@@uri @AT@ 5189 @LENGTH@ 3
---DEL VariableDeclarationStatement@@String path=u.getSchemeSpecificPart(); @AT@ 5204 @LENGTH@ 40
------DEL SimpleType@@String @AT@ 5204 @LENGTH@ 6
------DEL VariableDeclarationFragment@@path=u.getSchemeSpecificPart() @AT@ 5211 @LENGTH@ 32
---------DEL SimpleName@@path @AT@ 5211 @LENGTH@ 4
---------DEL MethodInvocation@@u.getSchemeSpecificPart() @AT@ 5218 @LENGTH@ 25
------------DEL SimpleName@@Name:u @AT@ 5218 @LENGTH@ 1
------------DEL SimpleName@@MethodName:getSchemeSpecificPart:[] @AT@ 5220 @LENGTH@ 23
---DEL IfStatement@@if (path.startsWith("//")) {  path=path.substring(2);} @AT@ 5298 @LENGTH@ 76
------DEL MethodInvocation@@path.startsWith("//") @AT@ 5302 @LENGTH@ 21
---------DEL SimpleName@@Name:path @AT@ 5302 @LENGTH@ 4
---------DEL SimpleName@@MethodName:startsWith:["//"] @AT@ 5307 @LENGTH@ 16
------------DEL StringLiteral@@"//" @AT@ 5318 @LENGTH@ 4
------DEL Block@@ThenBody:{  path=path.substring(2);} @AT@ 5325 @LENGTH@ 49
---------DEL ExpressionStatement@@Assignment:path=path.substring(2) @AT@ 5339 @LENGTH@ 25
------------DEL Assignment@@path=path.substring(2) @AT@ 5339 @LENGTH@ 24
---------------DEL SimpleName@@path @AT@ 5339 @LENGTH@ 4
---------------DEL Operator@@= @AT@ 5343 @LENGTH@ 1
---------------DEL MethodInvocation@@path.substring(2) @AT@ 5346 @LENGTH@ 17
------------------DEL SimpleName@@Name:path @AT@ 5346 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:substring:[2] @AT@ 5351 @LENGTH@ 12
---------------------DEL NumberLiteral@@2 @AT@ 5361 @LENGTH@ 1
---DEL VariableDeclarationStatement@@int idx=path.indexOf('?'); @AT@ 5383 @LENGTH@ 28
------DEL PrimitiveType@@int @AT@ 5383 @LENGTH@ 3
------DEL VariableDeclarationFragment@@idx=path.indexOf('?') @AT@ 5387 @LENGTH@ 23
---------DEL SimpleName@@idx @AT@ 5387 @LENGTH@ 3
---------DEL MethodInvocation@@path.indexOf('?') @AT@ 5393 @LENGTH@ 17
------------DEL SimpleName@@Name:path @AT@ 5393 @LENGTH@ 4
------------DEL SimpleName@@MethodName:indexOf:['?'] @AT@ 5398 @LENGTH@ 12
---------------DEL CharacterLiteral@@'?' @AT@ 5406 @LENGTH@ 3
---DEL IfStatement@@if (idx > 0) {  path=path.substring(0,idx);} @AT@ 5420 @LENGTH@ 67
------DEL InfixExpression@@idx > 0 @AT@ 5424 @LENGTH@ 7
---------DEL SimpleName@@idx @AT@ 5424 @LENGTH@ 3
---------DEL Operator@@> @AT@ 5427 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 5430 @LENGTH@ 1
------DEL Block@@ThenBody:{  path=path.substring(0,idx);} @AT@ 5433 @LENGTH@ 54
---------DEL ExpressionStatement@@Assignment:path=path.substring(0,idx) @AT@ 5447 @LENGTH@ 30
------------DEL Assignment@@path=path.substring(0,idx) @AT@ 5447 @LENGTH@ 29
---------------DEL SimpleName@@path @AT@ 5447 @LENGTH@ 4
---------------DEL Operator@@= @AT@ 5451 @LENGTH@ 1
---------------DEL MethodInvocation@@path.substring(0,idx) @AT@ 5454 @LENGTH@ 22
------------------DEL SimpleName@@Name:path @AT@ 5454 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:substring:[0, idx] @AT@ 5459 @LENGTH@ 17
---------------------DEL NumberLiteral@@0 @AT@ 5469 @LENGTH@ 1
---------------------DEL SimpleName@@idx @AT@ 5472 @LENGTH@ 3
---DEL ReturnStatement@@SimpleName:path @AT@ 5496 @LENGTH@ 12
------DEL SimpleName@@path @AT@ 5503 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("unit is null") @TO@ MethodInvocation:ThreadsMessages.MESSAGES.nullUnit() @AT@ 1771 @LENGTH@ 51
---DEL ClassInstanceCreation@@IllegalArgumentException["unit is null"] @AT@ 1777 @LENGTH@ 44
------DEL New@@new @AT@ 1777 @LENGTH@ 3
------DEL SimpleType@@IllegalArgumentException @AT@ 1781 @LENGTH@ 24
------DEL StringLiteral@@"unit is null" @AT@ 1806 @LENGTH@ 14
---INS MethodInvocation@@ThreadsMessages.MESSAGES.nullUnit() @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("unit is null") @AT@ 1777 @LENGTH@ 35
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.nullUnit() @AT@ 1777 @LENGTH@ 24
------INS SimpleName@@MethodName:nullUnit:[] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.nullUnit() @AT@ 1802 @LENGTH@ 10


UPD IfStatement@@if (!authDir.mkdirs()) {  throw MESSAGES.unableToCreateAuthDir();} else {  authDir.setWritable(false,false);  authDir.setWritable(true,true);  authDir.setReadable(false,false);  authDir.setReadable(true,true);  authDir.setExecutable(false,false);  authDir.setExecutable(true,true);} @TO@ if (!authDir.mkdirs()) {  if (!authDir.isDirectory()) {    throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());  }} else {  authDir.setWritable(false,false);  authDir.setWritable(true,true);  authDir.setReadable(false,false);  authDir.setReadable(true,true);  authDir.setExecutable(false,false);  authDir.setExecutable(true,true);} @AT@ 2766 @LENGTH@ 484
---UPD Block@@ThenBody:{  throw MESSAGES.unableToCreateAuthDir();} @TO@ ThenBody:{  throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());} @AT@ 2789 @LENGTH@ 63
---INS Block@@ThenBody:{  if (!authDir.isDirectory()) {    throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());  }} @TO@ IfStatement@@if (!authDir.mkdirs()) {  throw MESSAGES.unableToCreateAuthDir();} else {  authDir.setWritable(false,false);  authDir.setWritable(true,true);  authDir.setReadable(false,false);  authDir.setReadable(true,true);  authDir.setExecutable(false,false);  authDir.setExecutable(true,true);} @AT@ 2790 @LENGTH@ 253
------INS IfStatement@@if (!authDir.isDirectory()) {  throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());} @TO@ Block@@ThenBody:{  if (!authDir.isDirectory()) {    throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());  }} @AT@ 2910 @LENGTH@ 123
---------MOV Block@@ThenBody:{  throw MESSAGES.unableToCreateAuthDir();} @TO@ IfStatement@@if (!authDir.isDirectory()) {  throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());} @AT@ 2789 @LENGTH@ 63
------------UPD ThrowStatement@@MethodInvocation:MESSAGES.unableToCreateAuthDir() @TO@ MethodInvocation:MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath()) @AT@ 2803 @LENGTH@ 39
---------------UPD MethodInvocation@@MESSAGES.unableToCreateAuthDir() @TO@ MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath()) @AT@ 2809 @LENGTH@ 32
------------------UPD SimpleName@@MethodName:unableToCreateAuthDir:[] @TO@ MethodName:unableToCreateAuthDir:[authDir.getAbsolutePath()] @AT@ 2818 @LENGTH@ 23
---------------------INS MethodInvocation@@authDir.getAbsolutePath() @TO@ SimpleName@@MethodName:unableToCreateAuthDir:[] @AT@ 2992 @LENGTH@ 25
------------------------INS SimpleName@@Name:authDir @TO@ MethodInvocation@@authDir.getAbsolutePath() @AT@ 2992 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@authDir.getAbsolutePath() @AT@ 3000 @LENGTH@ 17
---------MOV Block@@ThenBody:{  throw MESSAGES.unableToCreateAuthDir();} @TO@ IfStatement@@if (!authDir.isDirectory()) {  throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());} @AT@ 2789 @LENGTH@ 63
------------UPD ThrowStatement@@MethodInvocation:MESSAGES.unableToCreateAuthDir() @TO@ MethodInvocation:MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath()) @AT@ 2803 @LENGTH@ 39
---------------UPD MethodInvocation@@MESSAGES.unableToCreateAuthDir() @TO@ MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath()) @AT@ 2809 @LENGTH@ 32
------------------UPD SimpleName@@MethodName:unableToCreateAuthDir:[] @TO@ MethodName:unableToCreateAuthDir:[authDir.getAbsolutePath()] @AT@ 2818 @LENGTH@ 23
---------------------INS MethodInvocation@@authDir.getAbsolutePath() @TO@ SimpleName@@MethodName:unableToCreateAuthDir:[] @AT@ 2992 @LENGTH@ 25
------------------------INS SimpleName@@Name:authDir @TO@ MethodInvocation@@authDir.getAbsolutePath() @AT@ 2992 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@authDir.getAbsolutePath() @AT@ 3000 @LENGTH@ 17
---------INS PrefixExpression@@!authDir.isDirectory() @TO@ IfStatement@@if (!authDir.isDirectory()) {  throw MESSAGES.unableToCreateAuthDir(authDir.getAbsolutePath());} @AT@ 2913 @LENGTH@ 22
------------INS Operator@@! @TO@ PrefixExpression@@!authDir.isDirectory() @AT@ 2913 @LENGTH@ 1
------------INS MethodInvocation@@authDir.isDirectory() @TO@ PrefixExpression@@!authDir.isDirectory() @AT@ 2914 @LENGTH@ 21
---------------INS SimpleName@@Name:authDir @TO@ MethodInvocation@@authDir.isDirectory() @AT@ 2914 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@authDir.isDirectory() @AT@ 2922 @LENGTH@ 13


MOV MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ TypeDeclaration@@[public]ProfileRemoveHandler, AbstractRemoveStepHandler[DescriptionProvider] @AT@ 1796 @LENGTH@ 427


UPD FieldDeclaration@@private, final, int, [size=5000] @TO@ private, final, int, [size=1000] @AT@ 1231 @LENGTH@ 30
---UPD VariableDeclarationFragment@@size=5000 @TO@ size=1000 @AT@ 1249 @LENGTH@ 11
------UPD NumberLiteral@@5000 @TO@ 1000 @AT@ 1256 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId,  @AT@ 2554 @LENGTH@ 596
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient,  @AT@ 2616 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2616 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2622 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2629 @LENGTH@ 11


UPD ForStatement@@for (int i=pa.size() - 1; i > 0; i++) {  PathElement pe=pa.getElement(i);  if (SECURITY_REALM.equals(pe.getKey())) {    realmName=pe.getValue();    break;  }} @TO@ for (int i=pa.size() - 1; i > 0; i--) {  PathElement pe=pa.getElement(i);  if (SECURITY_REALM.equals(pe.getKey())) {    realmName=pe.getValue();    break;  }} @AT@ 3097 @LENGTH@ 232
---UPD PostfixExpression@@i++ @TO@ i-- @AT@ 3132 @LENGTH@ 3
------UPD Operator@@++ @TO@ -- @AT@ 3134 @LENGTH@ 2


UPD MethodDeclaration@@private, synchronized, void, MethodName:persistProperties, IOException,  @TO@ public, synchronized, void, MethodName:persistProperties, IOException,  @AT@ 4550 @LENGTH@ 2031
---UPD Modifier@@private @TO@ public @AT@ 4550 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:sso.registerReadWriteAttribute(def,null,new WriteAttributeHandlers.AttributeDefinitionValidatingHandler(def)) @TO@ MethodInvocation:sso.registerReadWriteAttribute(def,null,new ReloadRequiredWriteAttributeHandler(def)) @AT@ 2887 @LENGTH@ 112
---UPD MethodInvocation@@sso.registerReadWriteAttribute(def,null,new WriteAttributeHandlers.AttributeDefinitionValidatingHandler(def)) @TO@ sso.registerReadWriteAttribute(def,null,new ReloadRequiredWriteAttributeHandler(def)) @AT@ 2887 @LENGTH@ 111
------UPD SimpleName@@MethodName:registerReadWriteAttribute:[def, null, new WriteAttributeHandlers.AttributeDefinitionValidatingHandler(def)] @TO@ MethodName:registerReadWriteAttribute:[def, null, new ReloadRequiredWriteAttributeHandler(def)] @AT@ 2891 @LENGTH@ 107
---------UPD ClassInstanceCreation@@WriteAttributeHandlers.AttributeDefinitionValidatingHandler[def] @TO@ ReloadRequiredWriteAttributeHandler[def] @AT@ 2929 @LENGTH@ 68
------------UPD SimpleType@@WriteAttributeHandlers.AttributeDefinitionValidatingHandler @TO@ ReloadRequiredWriteAttributeHandler @AT@ 2933 @LENGTH@ 59


UPD IfStatement@@if (bridgeConfig.getDiscoveryGroupName() != null) {  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} else {  boolean first=true;  String connectors="";  for (  String connector : bridgeConfig.getStaticConnectors()) {    if (!first) {      connectors+=",";    } else {      first=false;    }    connectors+=connector;  }  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} @TO@ if (bridgeConfig.getDiscoveryGroupName() != null) {  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} else {  boolean first=true;  String connectors="";  for (  String connector : bridgeConfig.getStaticConnectors()) {    if (!first) {      connectors+=",";    } else {      first=false;    }    connectors+=connector;  }  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} @AT@ 10564 @LENGTH@ 1789
---UPD Block@@ThenBody:{  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} @TO@ ThenBody:{  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} @AT@ 10614 @LENGTH@ 686
------UPD ExpressionStatement@@MethodInvocation:serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @TO@ MethodInvocation:serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @AT@ 10632 @LENGTH@ 654
---------UPD MethodInvocation@@serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @TO@ serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),bridgeConfig.getDiscoveryGroupName(),true,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @AT@ 10632 @LENGTH@ 653
------------UPD SimpleName@@MethodName:createBridge:[name, bridgeConfig.getQueueName(), bridgeConfig.getForwardingAddress(), bridgeConfig.getFilterString(), bridgeConfig.getTransformerClassName(), bridgeConfig.getRetryInterval(), bridgeConfig.getRetryIntervalMultiplier(), bridgeConfig.getReconnectAttempts(), bridgeConfig.isUseDuplicateDetection(), bridgeConfig.getConfirmationWindowSize(), HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD, bridgeConfig.getDiscoveryGroupName(), true, bridgeConfig.isHA(), bridgeConfig.getUser(), bridgeConfig.getPassword()] @TO@ MethodName:createBridge:[name, bridgeConfig.getQueueName(), bridgeConfig.getForwardingAddress(), bridgeConfig.getFilterString(), bridgeConfig.getTransformerClassName(), bridgeConfig.getRetryInterval(), bridgeConfig.getRetryIntervalMultiplier(), bridgeConfig.getReconnectAttempts(), bridgeConfig.isUseDuplicateDetection(), bridgeConfig.getConfirmationWindowSize(), bridgeConfig.getClientFailureCheckPeriod(), bridgeConfig.getDiscoveryGroupName(), true, bridgeConfig.isHA(), bridgeConfig.getUser(), bridgeConfig.getPassword()] @AT@ 10646 @LENGTH@ 639
---------------DEL QualifiedName@@HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD @AT@ 11070 @LENGTH@ 49
------------------DEL SimpleName@@HornetQClient @AT@ 11070 @LENGTH@ 13
------------------DEL SimpleName@@DEFAULT_CLIENT_FAILURE_CHECK_PERIOD @AT@ 11084 @LENGTH@ 35
---------------INS MethodInvocation@@bridgeConfig.getClientFailureCheckPeriod() @TO@ SimpleName@@MethodName:createBridge:[name, bridgeConfig.getQueueName(), bridgeConfig.getForwardingAddress(), bridgeConfig.getFilterString(), bridgeConfig.getTransformerClassName(), bridgeConfig.getRetryInterval(), bridgeConfig.getRetryIntervalMultiplier(), bridgeConfig.getReconnectAttempts(), bridgeConfig.isUseDuplicateDetection(), bridgeConfig.getConfirmationWindowSize(), HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD, bridgeConfig.getDiscoveryGroupName(), true, bridgeConfig.isHA(), bridgeConfig.getUser(), bridgeConfig.getPassword()] @AT@ 11070 @LENGTH@ 42
------------------INS SimpleName@@Name:bridgeConfig @TO@ MethodInvocation@@bridgeConfig.getClientFailureCheckPeriod() @AT@ 11070 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getClientFailureCheckPeriod:[] @TO@ MethodInvocation@@bridgeConfig.getClientFailureCheckPeriod() @AT@ 11083 @LENGTH@ 29
---UPD Block@@ElseBody:{  boolean first=true;  String connectors="";  for (  String connector : bridgeConfig.getStaticConnectors()) {    if (!first) {      connectors+=",";    } else {      first=false;    }    connectors+=connector;  }  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} @TO@ ElseBody:{  boolean first=true;  String connectors="";  for (  String connector : bridgeConfig.getStaticConnectors()) {    if (!first) {      connectors+=",";    } else {      first=false;    }    connectors+=connector;  }  serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword());} @AT@ 11306 @LENGTH@ 1047
------UPD ExpressionStatement@@MethodInvocation:serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @TO@ MethodInvocation:serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @AT@ 11710 @LENGTH@ 629
---------UPD MethodInvocation@@serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD,connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @TO@ serverControl.createBridge(name,bridgeConfig.getQueueName(),bridgeConfig.getForwardingAddress(),bridgeConfig.getFilterString(),bridgeConfig.getTransformerClassName(),bridgeConfig.getRetryInterval(),bridgeConfig.getRetryIntervalMultiplier(),bridgeConfig.getReconnectAttempts(),bridgeConfig.isUseDuplicateDetection(),bridgeConfig.getConfirmationWindowSize(),bridgeConfig.getClientFailureCheckPeriod(),connectors,false,bridgeConfig.isHA(),bridgeConfig.getUser(),bridgeConfig.getPassword()) @AT@ 11710 @LENGTH@ 628
------------UPD SimpleName@@MethodName:createBridge:[name, bridgeConfig.getQueueName(), bridgeConfig.getForwardingAddress(), bridgeConfig.getFilterString(), bridgeConfig.getTransformerClassName(), bridgeConfig.getRetryInterval(), bridgeConfig.getRetryIntervalMultiplier(), bridgeConfig.getReconnectAttempts(), bridgeConfig.isUseDuplicateDetection(), bridgeConfig.getConfirmationWindowSize(), HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD, connectors, false, bridgeConfig.isHA(), bridgeConfig.getUser(), bridgeConfig.getPassword()] @TO@ MethodName:createBridge:[name, bridgeConfig.getQueueName(), bridgeConfig.getForwardingAddress(), bridgeConfig.getFilterString(), bridgeConfig.getTransformerClassName(), bridgeConfig.getRetryInterval(), bridgeConfig.getRetryIntervalMultiplier(), bridgeConfig.getReconnectAttempts(), bridgeConfig.isUseDuplicateDetection(), bridgeConfig.getConfirmationWindowSize(), bridgeConfig.getClientFailureCheckPeriod(), connectors, false, bridgeConfig.isHA(), bridgeConfig.getUser(), bridgeConfig.getPassword()] @AT@ 11724 @LENGTH@ 614
---------------INS MethodInvocation@@bridgeConfig.getClientFailureCheckPeriod() @TO@ SimpleName@@MethodName:createBridge:[name, bridgeConfig.getQueueName(), bridgeConfig.getForwardingAddress(), bridgeConfig.getFilterString(), bridgeConfig.getTransformerClassName(), bridgeConfig.getRetryInterval(), bridgeConfig.getRetryIntervalMultiplier(), bridgeConfig.getReconnectAttempts(), bridgeConfig.isUseDuplicateDetection(), bridgeConfig.getConfirmationWindowSize(), HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD, connectors, false, bridgeConfig.isHA(), bridgeConfig.getUser(), bridgeConfig.getPassword()] @AT@ 12141 @LENGTH@ 42
------------------INS SimpleName@@Name:bridgeConfig @TO@ MethodInvocation@@bridgeConfig.getClientFailureCheckPeriod() @AT@ 12141 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getClientFailureCheckPeriod:[] @TO@ MethodInvocation@@bridgeConfig.getClientFailureCheckPeriod() @AT@ 12154 @LENGTH@ 29
---------------DEL QualifiedName@@HornetQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD @AT@ 12148 @LENGTH@ 49
------------------DEL SimpleName@@HornetQClient @AT@ 12148 @LENGTH@ 13
------------------DEL SimpleName@@DEFAULT_CLIENT_FAILURE_CHECK_PERIOD @AT@ 12162 @LENGTH@ 35


UPD IfStatement@@if (zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null) {  List<String> children=zooKeeper.getChildren(ZkPath.MAVEN_PROXY.getPath("download"));  if (children != null && !children.isEmpty()) {    Collections.sort(children);  }  String mavenRepo=ZooKeeperUtils.getSubstitutedPath(zooKeeper,ZkPath.MAVEN_PROXY.getPath("download") + "/" + children.get(0));  if (mavenRepo != null && !mavenRepo.endsWith("/")) {    mavenRepo+="/";  }  uri=new URI(mavenRepo);} @TO@ if (zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null) {  List<String> children=zooKeeper.getChildren(ZkPath.MAVEN_PROXY.getPath("download"));  if (children != null && !children.isEmpty()) {    Collections.sort(children);  }  String mavenRepo=ZooKeeperUtils.getSubstitutedPath(zooKeeper,ZkPath.MAVEN_PROXY.getPath("download") + "/" + children.get(0));  if (mavenRepo != null && !mavenRepo.endsWith("/")) {    mavenRepo+="/";  }  uri=new URI(mavenRepo);} @AT@ 12608 @LENGTH@ 627
---INS InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null @TO@ IfStatement@@if (zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null) {  List<String> children=zooKeeper.getChildren(ZkPath.MAVEN_PROXY.getPath("download"));  if (children != null && !children.isEmpty()) {    Collections.sort(children);  }  String mavenRepo=ZooKeeperUtils.getSubstitutedPath(zooKeeper,ZkPath.MAVEN_PROXY.getPath("download") + "/" + children.get(0));  if (mavenRepo != null && !mavenRepo.endsWith("/")) {    mavenRepo+="/";  }  uri=new URI(mavenRepo);} @AT@ 12612 @LENGTH@ 85
------MOV InfixExpression@@zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null @TO@ InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null @AT@ 12612 @LENGTH@ 64
------INS InfixExpression@@zooKeeper != null @TO@ InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null @AT@ 12612 @LENGTH@ 17
---------INS SimpleName@@zooKeeper @TO@ InfixExpression@@zooKeeper != null @AT@ 12612 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@zooKeeper != null @AT@ 12621 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@zooKeeper != null @AT@ 12625 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("download")) != null @AT@ 12629 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertNull("Should be null",out) @TO@ MethodInvocation:assertEquals("Should be empty","",out) @AT@ 7070 @LENGTH@ 34
---UPD MethodInvocation@@assertNull("Should be null",out) @TO@ assertEquals("Should be empty","",out) @AT@ 7070 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertNull:["Should be null", out] @TO@ MethodName:assertEquals:["Should be empty", "", out] @AT@ 7070 @LENGTH@ 33
---------UPD StringLiteral@@"Should be null" @TO@ "Should be empty" @AT@ 7081 @LENGTH@ 16
---------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertNull:["Should be null", out] @AT@ 7102 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3174 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3174 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 3182 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3195 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3195 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3195 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3212 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3228 @LENGTH@ 21


UPD TryStatement@@try {  ManagedManagementStrategy jmx=new ManagedManagementStrategy(new DefaultManagementAgent(context));  ServiceHelper.startService(jmx);  context.getLifecycleStrategies().add(0,new DefaultManagementLifecycleStrategy(context));  log.info("JMX enabled.");} catch (Exception e) {  answer=null;  log.warn("Cannot create JMX lifecycle strategy. Will fallback and disable JMX.",e);} @TO@ try {  answer=new ManagedManagementStrategy(new DefaultManagementAgent(context));  ServiceHelper.startService(answer);  context.getLifecycleStrategies().add(0,new DefaultManagementLifecycleStrategy(context));  log.info("JMX enabled.");} catch (Exception e) {  answer=null;  log.warn("Cannot create JMX lifecycle strategy. Will fallback and disable JMX.",e);} @AT@ 1484 @LENGTH@ 640
---DEL VariableDeclarationStatement@@ManagedManagementStrategy jmx=new ManagedManagementStrategy(new DefaultManagementAgent(context)); @AT@ 1506 @LENGTH@ 99
------DEL SimpleType@@ManagedManagementStrategy @AT@ 1506 @LENGTH@ 25
------DEL VariableDeclarationFragment@@jmx=new ManagedManagementStrategy(new DefaultManagementAgent(context)) @AT@ 1532 @LENGTH@ 72
---------DEL SimpleName@@jmx @AT@ 1532 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:answer=new ManagedManagementStrategy(new DefaultManagementAgent(context)) @TO@ TryStatement@@try {  ManagedManagementStrategy jmx=new ManagedManagementStrategy(new DefaultManagementAgent(context));  ServiceHelper.startService(jmx);  context.getLifecycleStrategies().add(0,new DefaultManagementLifecycleStrategy(context));  log.info("JMX enabled.");} catch (Exception e) {  answer=null;  log.warn("Cannot create JMX lifecycle strategy. Will fallback and disable JMX.",e);} @AT@ 1506 @LENGTH@ 76
------INS Assignment@@answer=new ManagedManagementStrategy(new DefaultManagementAgent(context)) @TO@ ExpressionStatement@@Assignment:answer=new ManagedManagementStrategy(new DefaultManagementAgent(context)) @AT@ 1506 @LENGTH@ 75
---------INS SimpleName@@answer @TO@ Assignment@@answer=new ManagedManagementStrategy(new DefaultManagementAgent(context)) @AT@ 1506 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@answer=new ManagedManagementStrategy(new DefaultManagementAgent(context)) @AT@ 1512 @LENGTH@ 1
---------MOV ClassInstanceCreation@@ManagedManagementStrategy[new DefaultManagementAgent(context)] @TO@ Assignment@@answer=new ManagedManagementStrategy(new DefaultManagementAgent(context)) @AT@ 1538 @LENGTH@ 66
---UPD ExpressionStatement@@MethodInvocation:ServiceHelper.startService(jmx) @TO@ MethodInvocation:ServiceHelper.startService(answer) @AT@ 1707 @LENGTH@ 32
------UPD MethodInvocation@@ServiceHelper.startService(jmx) @TO@ ServiceHelper.startService(answer) @AT@ 1707 @LENGTH@ 31
---------UPD SimpleName@@MethodName:startService:[jmx] @TO@ MethodName:startService:[answer] @AT@ 1721 @LENGTH@ 17
------------UPD SimpleName@@jmx @TO@ answer @AT@ 1734 @LENGTH@ 3


UPD VariableDeclarationStatement@@String reqPath="http://" + System.getProperty("test.bind.address","localhost") + ":8080/resteasy-osgi-client/rest/echo/"+ message; @TO@ String reqPath="http://" + formatPossibleIpv6Address(System.getProperty("test.bind.address","localhost")) + ":8080/resteasy-osgi-client/rest/echo/"+ message; @AT@ 4759 @LENGTH@ 134
---UPD VariableDeclarationFragment@@reqPath="http://" + System.getProperty("test.bind.address","localhost") + ":8080/resteasy-osgi-client/rest/echo/"+ message @TO@ reqPath="http://" + formatPossibleIpv6Address(System.getProperty("test.bind.address","localhost")) + ":8080/resteasy-osgi-client/rest/echo/"+ message @AT@ 4766 @LENGTH@ 126
------UPD InfixExpression@@"http://" + System.getProperty("test.bind.address","localhost") + ":8080/resteasy-osgi-client/rest/echo/"+ message @TO@ "http://" + formatPossibleIpv6Address(System.getProperty("test.bind.address","localhost")) + ":8080/resteasy-osgi-client/rest/echo/"+ message @AT@ 4776 @LENGTH@ 116
---------INS MethodInvocation@@formatPossibleIpv6Address(System.getProperty("test.bind.address","localhost")) @TO@ InfixExpression@@"http://" + System.getProperty("test.bind.address","localhost") + ":8080/resteasy-osgi-client/rest/echo/"+ message @AT@ 4788 @LENGTH@ 79
------------INS SimpleName@@MethodName:formatPossibleIpv6Address:[System.getProperty("test.bind.address","localhost")] @TO@ MethodInvocation@@formatPossibleIpv6Address(System.getProperty("test.bind.address","localhost")) @AT@ 4788 @LENGTH@ 79
---------------MOV MethodInvocation@@System.getProperty("test.bind.address","localhost") @TO@ SimpleName@@MethodName:formatPossibleIpv6Address:[System.getProperty("test.bind.address","localhost")] @AT@ 4788 @LENGTH@ 52


INS IfStatement@@if (info == null) {  return null;} @TO@ MethodDeclaration@@private, SessionType, MethodName:determineSessionType, final String ejbClass, final CompositeIndex compositeIndex,  @AT@ 12909 @LENGTH@ 54
---INS InfixExpression@@info == null @TO@ IfStatement@@if (info == null) {  return null;} @AT@ 12913 @LENGTH@ 12
------INS SimpleName@@info @TO@ InfixExpression@@info == null @AT@ 12913 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@info == null @AT@ 12917 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@info == null @AT@ 12921 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (info == null) {  return null;} @AT@ 12927 @LENGTH@ 36
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 12941 @LENGTH@ 12
---------MOV NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 13265 @LENGTH@ 4


UPD IfStatement@@if (idx > 0) {  path=path.substring(0,idx);} @TO@ if (idx != -1) {  path=path.substring(0,idx);} @AT@ 10128 @LENGTH@ 67
---UPD InfixExpression@@idx > 0 @TO@ idx != -1 @AT@ 10132 @LENGTH@ 7
------UPD Operator@@> @TO@ != @AT@ 10135 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 10138 @LENGTH@ 1
------INS PrefixExpression@@-1 @TO@ InfixExpression@@idx > 0 @AT@ 10170 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 10170 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 10171 @LENGTH@ 1


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.enable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.enable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1901 @LENGTH@ 596
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.enable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1905 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1905 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1905 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1913 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1929 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1933 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1933 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1933 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 1960 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1933 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1967 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 1978 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 1978 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 1996 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2001 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2003 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1905 @LENGTH@ 24


UPD IfStatement@@if (c1.isRoot() && !c2.isRoot()) {  return -1;} else if (!c1.isRoot() && c2.isRoot()) {  return 1;} @TO@ if (c1.isRoot() && !c2.isRoot()) {  return c1.getId().compareTo(c2.getParent().getId());} else if (!c1.isRoot() && c2.isRoot()) {  return c1.getParent().getId().compareTo(c2.getId());} @AT@ 2651 @LENGTH@ 171
---UPD Block@@ThenBody:{  return -1;} @TO@ ThenBody:{  return c1.getId().compareTo(c2.getParent().getId());} @AT@ 2684 @LENGTH@ 50
------UPD ReturnStatement@@PrefixExpression:-1 @TO@ MethodInvocation:c1.getId().compareTo(c2.getParent().getId()) @AT@ 2706 @LENGTH@ 10
---------INS MethodInvocation@@c1.getId().compareTo(c2.getParent().getId()) @TO@ ReturnStatement@@PrefixExpression:-1 @AT@ 2713 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@c1.getId().compareTo(c2.getParent().getId()) @AT@ 2713 @LENGTH@ 10
------------INS SimpleName@@Name:c1 @TO@ MethodInvocation@@c1.getId().compareTo(c2.getParent().getId()) @AT@ 2713 @LENGTH@ 2
------------INS SimpleName@@MethodName:compareTo:[c2.getParent().getId()] @TO@ MethodInvocation@@c1.getId().compareTo(c2.getParent().getId()) @AT@ 2724 @LENGTH@ 33
---------------INS MethodInvocation@@c2.getParent().getId() @TO@ SimpleName@@MethodName:compareTo:[c2.getParent().getId()] @AT@ 2734 @LENGTH@ 22
------------------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@c2.getParent().getId() @AT@ 2734 @LENGTH@ 14
------------------INS SimpleName@@Name:c2 @TO@ MethodInvocation@@c2.getParent().getId() @AT@ 2734 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@c2.getParent().getId() @AT@ 2749 @LENGTH@ 7
---------DEL PrefixExpression@@-1 @AT@ 2713 @LENGTH@ 2
------------DEL Operator@@- @AT@ 2713 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 2714 @LENGTH@ 1
---UPD Block@@ElseBody:if (!c1.isRoot() && c2.isRoot()) {  return 1;} @TO@ ElseBody:if (!c1.isRoot() && c2.isRoot()) {  return c1.getParent().getId().compareTo(c2.getId());} @AT@ 2740 @LENGTH@ 82
------UPD IfStatement@@if (!c1.isRoot() && c2.isRoot()) {  return 1;} @TO@ if (!c1.isRoot() && c2.isRoot()) {  return c1.getParent().getId().compareTo(c2.getId());} @AT@ 2740 @LENGTH@ 82
---------UPD Block@@ThenBody:{  return 1;} @TO@ ThenBody:{  return c1.getParent().getId().compareTo(c2.getId());} @AT@ 2773 @LENGTH@ 49
------------UPD ReturnStatement@@NumberLiteral:1 @TO@ MethodInvocation:c1.getParent().getId().compareTo(c2.getId()) @AT@ 2795 @LENGTH@ 9
---------------DEL NumberLiteral@@1 @AT@ 2802 @LENGTH@ 1
---------------INS MethodInvocation@@c1.getParent().getId().compareTo(c2.getId()) @TO@ ReturnStatement@@NumberLiteral:1 @AT@ 2844 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@c1.getParent().getId().compareTo(c2.getId()) @AT@ 2844 @LENGTH@ 22
------------------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@c1.getParent().getId().compareTo(c2.getId()) @AT@ 2844 @LENGTH@ 14
------------------INS SimpleName@@Name:c1 @TO@ MethodInvocation@@c1.getParent().getId().compareTo(c2.getId()) @AT@ 2844 @LENGTH@ 2
------------------INS SimpleName@@MethodName:compareTo:[c2.getId()] @TO@ MethodInvocation@@c1.getParent().getId().compareTo(c2.getId()) @AT@ 2867 @LENGTH@ 21
---------------------INS MethodInvocation@@c2.getId() @TO@ SimpleName@@MethodName:compareTo:[c2.getId()] @AT@ 2877 @LENGTH@ 10
------------------------INS SimpleName@@Name:c2 @TO@ MethodInvocation@@c2.getId() @AT@ 2877 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@c2.getId() @AT@ 2880 @LENGTH@ 7


UPD MethodDeclaration@@public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, @RequestParam(value=USER_OAUTH_APPROVAL,required=false) Boolean approved, @ModelAttribute AuthorizationRequest authorizationRequest, SessionStatus sessionStatus, Principal principal,  @TO@ public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, Map<String,String> parameters, SessionStatus sessionStatus, Principal principal,  @AT@ 4213 @LENGTH@ 1502
---UPD SingleVariableDeclaration@@@RequestParam(value=USER_OAUTH_APPROVAL,required=false) Boolean approved @TO@ Map<String,String> parameters @AT@ 4325 @LENGTH@ 77
------DEL SimpleType@@Boolean @AT@ 4386 @LENGTH@ 7
------UPD SimpleName@@approved @TO@ parameters @AT@ 4394 @LENGTH@ 8
------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@@RequestParam(value=USER_OAUTH_APPROVAL,required=false) Boolean approved @AT@ 4656 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 4656 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4660 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 4668 @LENGTH@ 6
---DEL SingleVariableDeclaration@@@ModelAttribute AuthorizationRequest authorizationRequest @AT@ 4407 @LENGTH@ 57
------DEL SimpleType@@AuthorizationRequest @AT@ 4423 @LENGTH@ 20
------DEL SimpleName@@authorizationRequest @AT@ 4444 @LENGTH@ 20
---INS VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=getClientToken(parameters); @TO@ MethodDeclaration@@public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, @RequestParam(value=USER_OAUTH_APPROVAL,required=false) Boolean approved, @ModelAttribute AuthorizationRequest authorizationRequest, SessionStatus sessionStatus, Principal principal,  @AT@ 4903 @LENGTH@ 71
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=getClientToken(parameters); @AT@ 4903 @LENGTH@ 20
------INS VariableDeclarationFragment@@authorizationRequest=getClientToken(parameters) @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=getClientToken(parameters); @AT@ 4924 @LENGTH@ 49
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=getClientToken(parameters) @AT@ 4924 @LENGTH@ 20
---------INS MethodInvocation@@getClientToken(parameters) @TO@ VariableDeclarationFragment@@authorizationRequest=getClientToken(parameters) @AT@ 4947 @LENGTH@ 26
------------INS SimpleName@@MethodName:getClientToken:[parameters] @TO@ MethodInvocation@@getClientToken(parameters) @AT@ 4947 @LENGTH@ 26
---------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getClientToken:[parameters] @AT@ 4962 @LENGTH@ 10
---UPD IfStatement@@if (responseTypes.contains("code")) {  authorizationRequest=resolveRedirectUri(authorizationRequest);  if (approved != null) {    return new ModelAndView(getAuthorizationCodeResponse(authorizationRequest.denied(!approved),(Authentication)principal));  }  return getUserApprovalPageResponse(model,authorizationRequest);} @TO@ if (responseTypes.contains("code")) {  authorizationRequest=resolveRedirectUri(authorizationRequest);  return getUserApprovalPageResponse(model,authorizationRequest);} @AT@ 5041 @LENGTH@ 342
------UPD Block@@ThenBody:{  authorizationRequest=resolveRedirectUri(authorizationRequest);  if (approved != null) {    return new ModelAndView(getAuthorizationCodeResponse(authorizationRequest.denied(!approved),(Authentication)principal));  }  return getUserApprovalPageResponse(model,authorizationRequest);} @TO@ ThenBody:{  authorizationRequest=resolveRedirectUri(authorizationRequest);  return getUserApprovalPageResponse(model,authorizationRequest);} @AT@ 5077 @LENGTH@ 306
---------DEL IfStatement@@if (approved != null) {  return new ModelAndView(getAuthorizationCodeResponse(authorizationRequest.denied(!approved),(Authentication)principal));} @AT@ 5150 @LENGTH@ 161
------------DEL InfixExpression@@approved != null @AT@ 5154 @LENGTH@ 16
---------------DEL SimpleName@@approved @AT@ 5154 @LENGTH@ 8
---------------DEL Operator@@!= @AT@ 5162 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 5166 @LENGTH@ 4
------------DEL Block@@ThenBody:{  return new ModelAndView(getAuthorizationCodeResponse(authorizationRequest.denied(!approved),(Authentication)principal));} @AT@ 5172 @LENGTH@ 139
---------------DEL ReturnStatement@@ClassInstanceCreation:new ModelAndView(getAuthorizationCodeResponse(authorizationRequest.denied(!approved),(Authentication)principal)) @AT@ 5178 @LENGTH@ 128
------------------DEL ClassInstanceCreation@@ModelAndView[getAuthorizationCodeResponse(authorizationRequest.denied(!approved),(Authentication)principal)] @AT@ 5185 @LENGTH@ 120
---------------------DEL New@@new @AT@ 5185 @LENGTH@ 3
---------------------DEL SimpleType@@ModelAndView @AT@ 5189 @LENGTH@ 12
---------------------DEL MethodInvocation@@getAuthorizationCodeResponse(authorizationRequest.denied(!approved),(Authentication)principal) @AT@ 5202 @LENGTH@ 102
------------------------DEL SimpleName@@MethodName:getAuthorizationCodeResponse:[authorizationRequest.denied(!approved), (Authentication)principal] @AT@ 5202 @LENGTH@ 102
---------------------------DEL MethodInvocation@@authorizationRequest.denied(!approved) @AT@ 5231 @LENGTH@ 38
------------------------------DEL SimpleName@@Name:authorizationRequest @AT@ 5231 @LENGTH@ 20
------------------------------DEL SimpleName@@MethodName:denied:[!approved] @AT@ 5252 @LENGTH@ 17
---------------------------------DEL PrefixExpression@@!approved @AT@ 5259 @LENGTH@ 9
------------------------------------DEL Operator@@! @AT@ 5259 @LENGTH@ 1
------------------------------------DEL SimpleName@@approved @AT@ 5260 @LENGTH@ 8
---------------------------DEL CastExpression@@(Authentication)principal @AT@ 5277 @LENGTH@ 26
------------------------------DEL SimpleType@@Authentication @AT@ 5278 @LENGTH@ 14
------------------------------DEL SimpleName@@principal @AT@ 5294 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:model.put("authorizationRequest",authorizationRequest) @TO@ MethodDeclaration@@public, ModelAndView, MethodName:authorize, Map<String,Object> model, @RequestParam("response_type") String responseType, @RequestParam(value=USER_OAUTH_APPROVAL,required=false) Boolean approved, @ModelAttribute AuthorizationRequest authorizationRequest, SessionStatus sessionStatus, Principal principal,  @AT@ 5778 @LENGTH@ 56
------INS MethodInvocation@@model.put("authorizationRequest",authorizationRequest) @TO@ ExpressionStatement@@MethodInvocation:model.put("authorizationRequest",authorizationRequest) @AT@ 5778 @LENGTH@ 55
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.put("authorizationRequest",authorizationRequest) @AT@ 5778 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["authorizationRequest", authorizationRequest] @TO@ MethodInvocation@@model.put("authorizationRequest",authorizationRequest) @AT@ 5784 @LENGTH@ 49
------------INS StringLiteral@@"authorizationRequest" @TO@ SimpleName@@MethodName:put:["authorizationRequest", authorizationRequest] @AT@ 5788 @LENGTH@ 22
------------INS SimpleName@@authorizationRequest @TO@ SimpleName@@MethodName:put:["authorizationRequest", authorizationRequest] @AT@ 5812 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:mockLog.assertIsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testPositive, Exception,  @AT@ 1505 @LENGTH@ 28
---INS MethodInvocation@@mockLog.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:mockLog.assertIsSatisfied() @AT@ 1505 @LENGTH@ 27
------INS SimpleName@@Name:mockLog @TO@ MethodInvocation@@mockLog.assertIsSatisfied() @AT@ 1505 @LENGTH@ 7
------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@mockLog.assertIsSatisfied() @AT@ 1513 @LENGTH@ 19


DEL IfStatement@@if (uriScheme != null && endpoint != null) {  throw MESSAGES.cannotSetUriScheme();} @AT@ 9358 @LENGTH@ 111
---DEL InfixExpression@@uriScheme != null && endpoint != null @AT@ 9362 @LENGTH@ 37
------DEL InfixExpression@@uriScheme != null @AT@ 9362 @LENGTH@ 17
---------DEL SimpleName@@uriScheme @AT@ 9362 @LENGTH@ 9
---------DEL Operator@@!= @AT@ 9371 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 9375 @LENGTH@ 4
------DEL Operator@@&& @AT@ 9379 @LENGTH@ 2
------DEL InfixExpression@@endpoint != null @AT@ 9383 @LENGTH@ 16
---------DEL SimpleName@@endpoint @AT@ 9383 @LENGTH@ 8
---------DEL Operator@@!= @AT@ 9391 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 9395 @LENGTH@ 4
---DEL Block@@ThenBody:{  throw MESSAGES.cannotSetUriScheme();} @AT@ 9401 @LENGTH@ 68
------DEL ThrowStatement@@MethodInvocation:MESSAGES.cannotSetUriScheme() @AT@ 9419 @LENGTH@ 36
---------DEL MethodInvocation@@MESSAGES.cannotSetUriScheme() @AT@ 9425 @LENGTH@ 29
------------DEL SimpleName@@Name:MESSAGES @AT@ 9425 @LENGTH@ 8
------------DEL SimpleName@@MethodName:cannotSetUriScheme:[] @AT@ 9434 @LENGTH@ 20


UPD EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @TO@ for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  if (set == null) {    Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();    while (subs.hasMoreElements()) {      set=accepted.get(subs.nextElement());      if (set != null) {        break;      }    }  }  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1716 @LENGTH@ 711
---INS IfStatement@@if (set == null) {  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2341 @LENGTH@ 339
------INS InfixExpression@@set == null @TO@ IfStatement@@if (set == null) {  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2345 @LENGTH@ 11
---------INS SimpleName@@set @TO@ InfixExpression@@set == null @AT@ 2345 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@set == null @AT@ 2348 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@set == null @AT@ 2352 @LENGTH@ 4
------INS Block@@ThenBody:{  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @TO@ IfStatement@@if (set == null) {  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2358 @LENGTH@ 322
---------INS VariableDeclarationStatement@@Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces(); @TO@ Block@@ThenBody:{  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2376 @LENGTH@ 71
------------INS ParameterizedType@@Enumeration<NetworkInterface> @TO@ VariableDeclarationStatement@@Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces(); @AT@ 2376 @LENGTH@ 29
---------------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<NetworkInterface> @AT@ 2376 @LENGTH@ 11
---------------INS SimpleType@@NetworkInterface @TO@ ParameterizedType@@Enumeration<NetworkInterface> @AT@ 2388 @LENGTH@ 16
------------INS VariableDeclarationFragment@@subs=entry.getKey().getSubInterfaces() @TO@ VariableDeclarationStatement@@Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces(); @AT@ 2406 @LENGTH@ 40
---------------INS SimpleName@@subs @TO@ VariableDeclarationFragment@@subs=entry.getKey().getSubInterfaces() @AT@ 2406 @LENGTH@ 4
---------------INS MethodInvocation@@entry.getKey().getSubInterfaces() @TO@ VariableDeclarationFragment@@subs=entry.getKey().getSubInterfaces() @AT@ 2413 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey().getSubInterfaces() @AT@ 2413 @LENGTH@ 14
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey().getSubInterfaces() @AT@ 2413 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getSubInterfaces:[] @TO@ MethodInvocation@@entry.getKey().getSubInterfaces() @AT@ 2428 @LENGTH@ 18
---------INS WhileStatement@@while (subs.hasMoreElements()) {  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @TO@ Block@@ThenBody:{  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2464 @LENGTH@ 202
------------INS MethodInvocation@@subs.hasMoreElements() @TO@ WhileStatement@@while (subs.hasMoreElements()) {  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2471 @LENGTH@ 22
---------------INS SimpleName@@Name:subs @TO@ MethodInvocation@@subs.hasMoreElements() @AT@ 2471 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hasMoreElements:[] @TO@ MethodInvocation@@subs.hasMoreElements() @AT@ 2476 @LENGTH@ 17
------------INS Block@@WhileBody:{  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @TO@ WhileStatement@@while (subs.hasMoreElements()) {  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2495 @LENGTH@ 171
---------------INS ExpressionStatement@@Assignment:set=accepted.get(subs.nextElement()) @TO@ Block@@WhileBody:{  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2517 @LENGTH@ 39
------------------INS Assignment@@set=accepted.get(subs.nextElement()) @TO@ ExpressionStatement@@Assignment:set=accepted.get(subs.nextElement()) @AT@ 2517 @LENGTH@ 38
---------------------INS SimpleName@@set @TO@ Assignment@@set=accepted.get(subs.nextElement()) @AT@ 2517 @LENGTH@ 3
---------------------INS Operator@@= @TO@ Assignment@@set=accepted.get(subs.nextElement()) @AT@ 2520 @LENGTH@ 1
---------------------INS MethodInvocation@@accepted.get(subs.nextElement()) @TO@ Assignment@@set=accepted.get(subs.nextElement()) @AT@ 2523 @LENGTH@ 32
------------------------INS SimpleName@@Name:accepted @TO@ MethodInvocation@@accepted.get(subs.nextElement()) @AT@ 2523 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:get:[subs.nextElement()] @TO@ MethodInvocation@@accepted.get(subs.nextElement()) @AT@ 2532 @LENGTH@ 23
---------------------------INS MethodInvocation@@subs.nextElement() @TO@ SimpleName@@MethodName:get:[subs.nextElement()] @AT@ 2536 @LENGTH@ 18
------------------------------INS SimpleName@@Name:subs @TO@ MethodInvocation@@subs.nextElement() @AT@ 2536 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:nextElement:[] @TO@ MethodInvocation@@subs.nextElement() @AT@ 2541 @LENGTH@ 13
---------------INS IfStatement@@if (set != null) {  break;} @TO@ Block@@WhileBody:{  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2577 @LENGTH@ 71
------------------INS InfixExpression@@set != null @TO@ IfStatement@@if (set != null) {  break;} @AT@ 2581 @LENGTH@ 11
---------------------INS SimpleName@@set @TO@ InfixExpression@@set != null @AT@ 2581 @LENGTH@ 3
---------------------INS Operator@@!= @TO@ InfixExpression@@set != null @AT@ 2584 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@set != null @AT@ 2588 @LENGTH@ 4
------------------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (set != null) {  break;} @AT@ 2594 @LENGTH@ 54
---------------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 2620 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:log.debugf("Initializing cache store for cache %s with properties: %s",name,properties.toString()) @TO@ MethodDeclaration@@private, void, MethodName:buildCacheStore, LoaderConfigurationBuilder builder, String name, ModelNode store, String storeKey, List<Dependency<?>> dependencies,  @AT@ 23478 @LENGTH@ 101
---INS MethodInvocation@@log.debugf("Initializing cache store for cache %s with properties: %s",name,properties.toString()) @TO@ ExpressionStatement@@MethodInvocation:log.debugf("Initializing cache store for cache %s with properties: %s",name,properties.toString()) @AT@ 23478 @LENGTH@ 100
------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debugf("Initializing cache store for cache %s with properties: %s",name,properties.toString()) @AT@ 23478 @LENGTH@ 3
------INS SimpleName@@MethodName:debugf:["Initializing cache store for cache %s with properties: %s", name, properties.toString()] @TO@ MethodInvocation@@log.debugf("Initializing cache store for cache %s with properties: %s",name,properties.toString()) @AT@ 23482 @LENGTH@ 96
---------INS StringLiteral@@"Initializing cache store for cache %s with properties: %s" @TO@ SimpleName@@MethodName:debugf:["Initializing cache store for cache %s with properties: %s", name, properties.toString()] @AT@ 23489 @LENGTH@ 59
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:debugf:["Initializing cache store for cache %s with properties: %s", name, properties.toString()] @AT@ 23550 @LENGTH@ 4
---------INS MethodInvocation@@properties.toString() @TO@ SimpleName@@MethodName:debugf:["Initializing cache store for cache %s with properties: %s", name, properties.toString()] @AT@ 23556 @LENGTH@ 21
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.toString() @AT@ 23556 @LENGTH@ 10
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@properties.toString() @AT@ 23567 @LENGTH@ 10


INS MethodDeclaration@@private, voidMethodName:CamelConsoleMain,  @TO@ TypeDeclaration@@[public]CamelConsoleMain,  @AT@ 989 @LENGTH@ 34
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CamelConsoleMain,  @AT@ 989 @LENGTH@ 7
---INS SimpleName@@MethodName:CamelConsoleMain @TO@ MethodDeclaration@@private, voidMethodName:CamelConsoleMain,  @AT@ 997 @LENGTH@ 16


UPD IfStatement@@if (type.isAnnotation()) {  List<AnnotationInstance> instances=index.getAnnotations(typeName);  for (  AnnotationInstance instance : instances) {    AnnotationTarget annotationTarget=instance.target();    if (annotationTarget instanceof ClassInfo) {      classes.add((ClassInfo)annotationTarget);    } else     if (annotationTarget instanceof FieldInfo) {      classes.add(((FieldInfo)annotationTarget).declaringClass());    } else     if (annotationTarget instanceof MethodInfo) {      classes.add(((MethodInfo)annotationTarget).declaringClass());    } else     if (annotationTarget instanceof MethodParameterInfo) {      classes.add(((MethodParameterInfo)annotationTarget).method().declaringClass());    }  }} else {  classes.addAll(index.getAllKnownSubclasses(typeName));} @TO@ if (type.isAnnotation()) {  List<AnnotationInstance> instances=index.getAnnotations(typeName);  for (  AnnotationInstance instance : instances) {    AnnotationTarget annotationTarget=instance.target();    if (annotationTarget instanceof ClassInfo) {      classes.add((ClassInfo)annotationTarget);    } else     if (annotationTarget instanceof FieldInfo) {      classes.add(((FieldInfo)annotationTarget).declaringClass());    } else     if (annotationTarget instanceof MethodInfo) {      classes.add(((MethodInfo)annotationTarget).declaringClass());    } else     if (annotationTarget instanceof MethodParameterInfo) {      classes.add(((MethodParameterInfo)annotationTarget).method().declaringClass());    }  }} else {  classes.addAll(index.getAllKnownSubclasses(typeName));  classes.addAll(index.getAllKnownImplementors(typeName));} @AT@ 9683 @LENGTH@ 969
---UPD Block@@ElseBody:{  classes.addAll(index.getAllKnownSubclasses(typeName));} @TO@ ElseBody:{  classes.addAll(index.getAllKnownSubclasses(typeName));  classes.addAll(index.getAllKnownImplementors(typeName));} @AT@ 10574 @LENGTH@ 78
------INS ExpressionStatement@@MethodInvocation:classes.addAll(index.getAllKnownImplementors(typeName)) @TO@ Block@@ElseBody:{  classes.addAll(index.getAllKnownSubclasses(typeName));} @AT@ 10655 @LENGTH@ 56
---------INS MethodInvocation@@classes.addAll(index.getAllKnownImplementors(typeName)) @TO@ ExpressionStatement@@MethodInvocation:classes.addAll(index.getAllKnownImplementors(typeName)) @AT@ 10655 @LENGTH@ 55
------------INS SimpleName@@Name:classes @TO@ MethodInvocation@@classes.addAll(index.getAllKnownImplementors(typeName)) @AT@ 10655 @LENGTH@ 7
------------INS SimpleName@@MethodName:addAll:[index.getAllKnownImplementors(typeName)] @TO@ MethodInvocation@@classes.addAll(index.getAllKnownImplementors(typeName)) @AT@ 10663 @LENGTH@ 47
---------------INS MethodInvocation@@index.getAllKnownImplementors(typeName) @TO@ SimpleName@@MethodName:addAll:[index.getAllKnownImplementors(typeName)] @AT@ 10670 @LENGTH@ 39
------------------INS SimpleName@@Name:index @TO@ MethodInvocation@@index.getAllKnownImplementors(typeName) @AT@ 10670 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getAllKnownImplementors:[typeName] @TO@ MethodInvocation@@index.getAllKnownImplementors(typeName) @AT@ 10676 @LENGTH@ 33
---------------------INS SimpleName@@typeName @TO@ SimpleName@@MethodName:getAllKnownImplementors:[typeName] @AT@ 10700 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3174 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3174 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 3182 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3195 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3195 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3195 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3212 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3228 @LENGTH@ 21


UPD CatchClause@@catch (Exception e) {  ROOT_LOGGER.errorAccessingSession(e,sessionId,e.getLocalizedMessage());  ROOT_LOGGER.errorAccessingSession(sessionId,e.getLocalizedMessage());  this.removeSessionLocal(sessionId);  return null;} @TO@ catch (Exception e) {  ROOT_LOGGER.sessionLoadFailed(e,sessionId);  this.removeSessionLocal(sessionId);  return null;} @AT@ 10319 @LENGTH@ 299
---UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.errorAccessingSession(e,sessionId,e.getLocalizedMessage()) @TO@ MethodInvocation:ROOT_LOGGER.sessionLoadFailed(e,sessionId) @AT@ 10353 @LENGTH@ 73
------UPD MethodInvocation@@ROOT_LOGGER.errorAccessingSession(e,sessionId,e.getLocalizedMessage()) @TO@ ROOT_LOGGER.sessionLoadFailed(e,sessionId) @AT@ 10353 @LENGTH@ 72
---------UPD SimpleName@@MethodName:errorAccessingSession:[e, sessionId, e.getLocalizedMessage()] @TO@ MethodName:sessionLoadFailed:[e, sessionId] @AT@ 10365 @LENGTH@ 60
------------DEL MethodInvocation@@e.getLocalizedMessage() @AT@ 10401 @LENGTH@ 23
---------------DEL SimpleName@@Name:e @AT@ 10401 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:getLocalizedMessage:[] @AT@ 10403 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:ROOT_LOGGER.errorAccessingSession(sessionId,e.getLocalizedMessage()) @AT@ 10439 @LENGTH@ 70
------DEL MethodInvocation@@ROOT_LOGGER.errorAccessingSession(sessionId,e.getLocalizedMessage()) @AT@ 10439 @LENGTH@ 69
---------DEL SimpleName@@Name:ROOT_LOGGER @AT@ 10439 @LENGTH@ 11
---------DEL SimpleName@@MethodName:errorAccessingSession:[sessionId, e.getLocalizedMessage()] @AT@ 10451 @LENGTH@ 57
------------DEL SimpleName@@sessionId @AT@ 10473 @LENGTH@ 9
------------DEL MethodInvocation@@e.getLocalizedMessage() @AT@ 10484 @LENGTH@ 23
---------------DEL SimpleName@@Name:e @AT@ 10484 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:getLocalizedMessage:[] @AT@ 10486 @LENGTH@ 21


INS FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 17228 @LENGTH@ 77
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17228 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17235 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17242 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17248 @LENGTH@ 3
---INS VariableDeclarationFragment@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507 @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17252 @LENGTH@ 52
------INS SimpleName@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507 @AT@ 17252 @LENGTH@ 36
------INS NumberLiteral@@0x0507 @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507 @AT@ 17298 @LENGTH@ 6


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("disable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.disableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("disable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.disableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2002 @LENGTH@ 798
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("disable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.disableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2006 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2006 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2006 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2014 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2030 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2034 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2034 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2034 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2061 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2034 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2068 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2079 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2079 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2097 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2102 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2104 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 2006 @LENGTH@ 24


UPD IfStatement@@if (domainOperationContext.getServerResults().size() > 0) {  populateServerGroupResults(context,context.getResult());} @TO@ if (domainOperationContext.getServerResults().size() > 0) {  populateServerGroupResults(context,context.getResult());} else {  context.getServerResults();} @AT@ 4250 @LENGTH@ 147
---INS Block@@ElseBody:{  context.getServerResults();} @TO@ IfStatement@@if (domainOperationContext.getServerResults().size() > 0) {  populateServerGroupResults(context,context.getResult());} @AT@ 4403 @LENGTH@ 135
------INS ExpressionStatement@@MethodInvocation:context.getServerResults() @TO@ Block@@ElseBody:{  context.getServerResults();} @AT@ 4497 @LENGTH@ 27
---------INS MethodInvocation@@context.getServerResults() @TO@ ExpressionStatement@@MethodInvocation:context.getServerResults() @AT@ 4497 @LENGTH@ 26
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServerResults() @AT@ 4497 @LENGTH@ 7
------------INS SimpleName@@MethodName:getServerResults:[] @TO@ MethodInvocation@@context.getServerResults() @AT@ 4505 @LENGTH@ 18


INS EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @TO@ MethodDeclaration@@public, void, MethodName:testBasicMatch, Exception,  @AT@ 1716 @LENGTH@ 711
---INS SingleVariableDeclaration@@Map.Entry<NetworkInterface,Set<InetAddress>> entry @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1721 @LENGTH@ 51
------MOV ParameterizedType@@Map.Entry<NetworkInterface,Set<InetAddress>> @TO@ SingleVariableDeclaration@@Map.Entry<NetworkInterface,Set<InetAddress>> entry @AT@ 1716 @LENGTH@ 45
------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<NetworkInterface,Set<InetAddress>> entry @AT@ 1767 @LENGTH@ 5
---INS MethodInvocation@@allCandidates.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1775 @LENGTH@ 24
------MOV SimpleName@@Name:allCandidates @TO@ MethodInvocation@@allCandidates.entrySet() @AT@ 1770 @LENGTH@ 13
------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@allCandidates.entrySet() @AT@ 1806 @LENGTH@ 6
---MOV VariableDeclarationStatement@@InetAddress target=entry.getValue().iterator().next(); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1822 @LENGTH@ 56
---MOV VariableDeclarationStatement@@InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1887 @LENGTH@ 75
---MOV VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1971 @LENGTH@ 98
---MOV ExpressionStatement@@MethodInvocation:assertNotNull(accepted) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2078 @LENGTH@ 24
---MOV ExpressionStatement@@MethodInvocation:assertEquals(1,accepted.size()) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2111 @LENGTH@ 33
---INS ExpressionStatement@@Assignment:accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2120 @LENGTH@ 67
------INS Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @TO@ ExpressionStatement@@Assignment:accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2120 @LENGTH@ 66
---------INS SimpleName@@accepted @TO@ Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2120 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2128 @LENGTH@ 1
---------INS MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @TO@ Assignment@@accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2131 @LENGTH@ 55
------------INS SimpleName@@Name:OverallInterfaceCriteria @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2131 @LENGTH@ 24
------------INS SimpleName@@MethodName:pruneAliasDuplicates:[accepted] @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(accepted) @AT@ 2156 @LENGTH@ 30
---------------INS SimpleName@@accepted @TO@ SimpleName@@MethodName:pruneAliasDuplicates:[accepted] @AT@ 2177 @LENGTH@ 8
---MOV VariableDeclarationStatement@@Set<InetAddress> set=accepted.get(entry.getKey()); @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2153 @LENGTH@ 52
---MOV ExpressionStatement@@MethodInvocation:assertNotNull(set) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2214 @LENGTH@ 19
---MOV ExpressionStatement@@MethodInvocation:assertEquals(1,set.size()) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2242 @LENGTH@ 28
---MOV ExpressionStatement@@MethodInvocation:assertTrue(set.contains(target)) @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2279 @LENGTH@ 33


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3827 @LENGTH@ 781
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3915 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3915 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3921 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3928 @LENGTH@ 11


UPD FieldDeclaration@@private, V, [value] @TO@ private, transient, V, [value] @AT@ 2300 @LENGTH@ 16
---INS Modifier@@transient @TO@ FieldDeclaration@@private, V, [value] @AT@ 2308 @LENGTH@ 9


UPD FieldDeclaration@@private, static, final, Integer, [WAIT_TIME_S=2] @TO@ private, static, final, Integer, [WAIT_TIME_S=10] @AT@ 2276 @LENGTH@ 45
---UPD VariableDeclarationFragment@@WAIT_TIME_S=2 @TO@ WAIT_TIME_S=10 @AT@ 2305 @LENGTH@ 15
------UPD NumberLiteral@@2 @TO@ 10 @AT@ 2319 @LENGTH@ 1


UPD TypeDeclaration@@[public]StatusMock, [Status] @TO@ [@SuppressWarnings("deprecation"), public]StatusMock, [Status] @AT@ 1172 @LENGTH@ 2309
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]StatusMock, [Status] @AT@ 1172 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:criteria.put("$in",o) @TO@ MethodInvocation:criteria.put("$in",Arrays.asList(o)) @AT@ 4281 @LENGTH@ 23
---UPD MethodInvocation@@criteria.put("$in",o) @TO@ criteria.put("$in",Arrays.asList(o)) @AT@ 4281 @LENGTH@ 22
------UPD SimpleName@@MethodName:put:["$in", o] @TO@ MethodName:put:["$in", Arrays.asList(o)] @AT@ 4290 @LENGTH@ 13
---------INS MethodInvocation@@Arrays.asList(o) @TO@ SimpleName@@MethodName:put:["$in", o] @AT@ 4301 @LENGTH@ 16
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(o) @AT@ 4301 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[o] @TO@ MethodInvocation@@Arrays.asList(o) @AT@ 4308 @LENGTH@ 9
---------------MOV SimpleName@@o @TO@ SimpleName@@MethodName:asList:[o] @AT@ 4301 @LENGTH@ 1


INS ExpressionStatement@@Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Split",this,isParallelProcessing()) @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 3156 @LENGTH@ 126
---MOV Assignment@@executorService=manager.newDefaultThreadPool(this,ref) @TO@ ExpressionStatement@@Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Split",this,isParallelProcessing()) @AT@ 3476 @LENGTH@ 57


DEL ExpressionStatement@@Assignment:this.route=route @AT@ 1711 @LENGTH@ 19
---DEL Assignment@@this.route=route @AT@ 1711 @LENGTH@ 18
------DEL FieldAccess@@this.route @AT@ 1711 @LENGTH@ 10
---------DEL ThisExpression@@this @AT@ 1711 @LENGTH@ 4
---------DEL SimpleName@@route @AT@ 1716 @LENGTH@ 5
------DEL Operator@@= @AT@ 1721 @LENGTH@ 1
------DEL SimpleName@@route @AT@ 1724 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:hourlyRateLimitExceeded,  @TO@ TypeDeclaration@@[public]ApiErrorTest, AbstractTwitterApiTest @AT@ 6686 @LENGTH@ 375
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:hourlyRateLimitExceeded,  @AT@ 6686 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:hourlyRateLimitExceeded,  @AT@ 6693 @LENGTH@ 4
---INS SimpleName@@MethodName:hourlyRateLimitExceeded @TO@ MethodDeclaration@@public, void, MethodName:hourlyRateLimitExceeded,  @AT@ 6698 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")).andExpect(method(GET)).andRespond(withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")) @TO@ MethodDeclaration@@public, void, MethodName:hourlyRateLimitExceeded,  @AT@ 6728 @LENGTH@ 285
------INS MethodInvocation@@mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")).andExpect(method(GET)).andRespond(withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")) @TO@ ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")).andExpect(method(GET)).andRespond(withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")) @AT@ 6728 @LENGTH@ 284
---------INS MethodInvocation@@MethodName:andExpect:[method(GET)] @TO@ MethodInvocation@@mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")).andExpect(method(GET)).andRespond(withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")) @AT@ 6728 @LENGTH@ 116
------------INS MethodInvocation@@method(GET) @TO@ MethodInvocation@@MethodName:andExpect:[method(GET)] @AT@ 6832 @LENGTH@ 11
---------------INS SimpleName@@MethodName:method:[GET] @TO@ MethodInvocation@@method(GET) @AT@ 6832 @LENGTH@ 11
------------------INS SimpleName@@GET @TO@ SimpleName@@MethodName:method:[GET] @AT@ 6839 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:expect:[requestTo("https://api.twitter.com/1/account/verify_credentials.json")] @TO@ MethodInvocation@@mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")).andExpect(method(GET)).andRespond(withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")) @AT@ 6728 @LENGTH@ 89
------------INS MethodInvocation@@requestTo("https://api.twitter.com/1/account/verify_credentials.json") @TO@ MethodInvocation@@MethodName:expect:[requestTo("https://api.twitter.com/1/account/verify_credentials.json")] @AT@ 6746 @LENGTH@ 70
---------------INS SimpleName@@MethodName:requestTo:["https://api.twitter.com/1/account/verify_credentials.json"] @TO@ MethodInvocation@@requestTo("https://api.twitter.com/1/account/verify_credentials.json") @AT@ 6746 @LENGTH@ 70
------------------INS StringLiteral@@"https://api.twitter.com/1/account/verify_credentials.json" @TO@ SimpleName@@MethodName:requestTo:["https://api.twitter.com/1/account/verify_credentials.json"] @AT@ 6756 @LENGTH@ 59
---------INS SimpleName@@Name:mockServer @TO@ MethodInvocation@@mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")).andExpect(method(GET)).andRespond(withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")) @AT@ 6728 @LENGTH@ 10
---------INS SimpleName@@MethodName:andRespond:[withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")] @TO@ MethodInvocation@@mockServer.expect(requestTo("https://api.twitter.com/1/account/verify_credentials.json")).andExpect(method(GET)).andRespond(withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")) @AT@ 6849 @LENGTH@ 163
------------INS MethodInvocation@@withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"") @TO@ SimpleName@@MethodName:andRespond:[withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"")] @AT@ 6860 @LENGTH@ 151
---------------INS SimpleName@@MethodName:withResponse:["{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}", responseHeaders, HttpStatus.BAD_REQUEST, ""] @TO@ MethodInvocation@@withResponse("{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}",responseHeaders,HttpStatus.BAD_REQUEST,"") @AT@ 6860 @LENGTH@ 151
------------------INS StringLiteral@@"{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}" @TO@ SimpleName@@MethodName:withResponse:["{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}", responseHeaders, HttpStatus.BAD_REQUEST, ""] @AT@ 6873 @LENGTH@ 92
------------------INS SimpleName@@responseHeaders @TO@ SimpleName@@MethodName:withResponse:["{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}", responseHeaders, HttpStatus.BAD_REQUEST, ""] @AT@ 6967 @LENGTH@ 15
------------------INS QualifiedName@@HttpStatus.BAD_REQUEST @TO@ SimpleName@@MethodName:withResponse:["{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}", responseHeaders, HttpStatus.BAD_REQUEST, ""] @AT@ 6984 @LENGTH@ 22
---------------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 6984 @LENGTH@ 10
---------------------INS SimpleName@@BAD_REQUEST @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 6995 @LENGTH@ 11
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:withResponse:["{\"error\":\"Rate limit exceeded. Clients may not make more than 350 requests per hour.\"}", responseHeaders, HttpStatus.BAD_REQUEST, ""] @AT@ 7008 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:twitter.userOperations().getUserProfile() @TO@ MethodDeclaration@@public, void, MethodName:hourlyRateLimitExceeded,  @AT@ 7016 @LENGTH@ 42
------INS MethodInvocation@@twitter.userOperations().getUserProfile() @TO@ ExpressionStatement@@MethodInvocation:twitter.userOperations().getUserProfile() @AT@ 7016 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:userOperations:[] @TO@ MethodInvocation@@twitter.userOperations().getUserProfile() @AT@ 7016 @LENGTH@ 24
---------INS SimpleName@@Name:twitter @TO@ MethodInvocation@@twitter.userOperations().getUserProfile() @AT@ 7016 @LENGTH@ 7
---------INS SimpleName@@MethodName:getUserProfile:[] @TO@ MethodInvocation@@twitter.userOperations().getUserProfile() @AT@ 7041 @LENGTH@ 16


UPD Block@@ThenBody:{  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.get(type).clear();  }} @TO@ ThenBody:{  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      if (zookeeper.exists(entry) != null) {        zookeeper.deleteWithChildren(entry);      }    }  }  registeredProxies.get(type).clear();} @AT@ 4487 @LENGTH@ 291
---UPD EnhancedForStatement@@for (String entry : registeredProxies.get(type)) {  if (zookeeper.isConnected()) {    zookeeper.deleteWithChildren(entry);  }  registeredProxies.get(type).clear();} @TO@ for (String entry : registeredProxies.get(type)) {  if (zookeeper.isConnected()) {    if (zookeeper.exists(entry) != null) {      zookeeper.deleteWithChildren(entry);    }  }} @AT@ 4505 @LENGTH@ 259
------INS IfStatement@@if (zookeeper.isConnected()) {  if (zookeeper.exists(entry) != null) {    zookeeper.deleteWithChildren(entry);  }} @TO@ EnhancedForStatement@@for (String entry : registeredProxies.get(type)) {  if (zookeeper.isConnected()) {    zookeeper.deleteWithChildren(entry);  }  registeredProxies.get(type).clear();} @AT@ 4576 @LENGTH@ 206
---------INS MethodInvocation@@zookeeper.isConnected() @TO@ IfStatement@@if (zookeeper.isConnected()) {  if (zookeeper.exists(entry) != null) {    zookeeper.deleteWithChildren(entry);  }} @AT@ 4580 @LENGTH@ 23
------------INS SimpleName@@Name:zookeeper @TO@ MethodInvocation@@zookeeper.isConnected() @AT@ 4580 @LENGTH@ 9
------------INS SimpleName@@MethodName:isConnected:[] @TO@ MethodInvocation@@zookeeper.isConnected() @AT@ 4590 @LENGTH@ 13
---------INS Block@@ThenBody:{  if (zookeeper.exists(entry) != null) {    zookeeper.deleteWithChildren(entry);  }} @TO@ IfStatement@@if (zookeeper.isConnected()) {  if (zookeeper.exists(entry) != null) {    zookeeper.deleteWithChildren(entry);  }} @AT@ 4605 @LENGTH@ 177
------------MOV IfStatement@@if (zookeeper.isConnected()) {  zookeeper.deleteWithChildren(entry);} @TO@ Block@@ThenBody:{  if (zookeeper.exists(entry) != null) {    zookeeper.deleteWithChildren(entry);  }} @AT@ 4576 @LENGTH@ 113
---------------DEL MethodInvocation@@zookeeper.isConnected() @AT@ 4580 @LENGTH@ 23
---------------INS InfixExpression@@zookeeper.exists(entry) != null @TO@ IfStatement@@if (zookeeper.isConnected()) {  zookeeper.deleteWithChildren(entry);} @AT@ 4635 @LENGTH@ 31
------------------INS MethodInvocation@@zookeeper.exists(entry) @TO@ InfixExpression@@zookeeper.exists(entry) != null @AT@ 4635 @LENGTH@ 23
---------------------MOV SimpleName@@Name:zookeeper @TO@ MethodInvocation@@zookeeper.exists(entry) @AT@ 4580 @LENGTH@ 9
---------------------MOV SimpleName@@Name:zookeeper @TO@ MethodInvocation@@zookeeper.exists(entry) @AT@ 4580 @LENGTH@ 9
---------------------MOV SimpleName@@MethodName:isConnected:[] @TO@ MethodInvocation@@zookeeper.exists(entry) @AT@ 4590 @LENGTH@ 13
------------------------INS SimpleName@@entry @TO@ SimpleName@@MethodName:isConnected:[] @AT@ 4652 @LENGTH@ 5
---------------------MOV SimpleName@@MethodName:isConnected:[] @TO@ MethodInvocation@@zookeeper.exists(entry) @AT@ 4590 @LENGTH@ 13
------------------------INS SimpleName@@entry @TO@ SimpleName@@MethodName:isConnected:[] @AT@ 4652 @LENGTH@ 5
------------------INS Operator@@!= @TO@ InfixExpression@@zookeeper.exists(entry) != null @AT@ 4658 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@zookeeper.exists(entry) != null @AT@ 4662 @LENGTH@ 4
------UPD IfStatement@@if (zookeeper.isConnected()) {  zookeeper.deleteWithChildren(entry);} @TO@ if (zookeeper.exists(entry) != null) {  zookeeper.deleteWithChildren(entry);} @AT@ 4576 @LENGTH@ 113
---MOV ExpressionStatement@@MethodInvocation:registeredProxies.get(type).clear() @TO@ Block@@ThenBody:{  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.get(type).clear();  }} @AT@ 4710 @LENGTH@ 36


UPD VariableDeclarationStatement@@String uri=httpExchange.getURI(); @TO@ String uri=httpExchange.getRequestURI(); @AT@ 9340 @LENGTH@ 35
---UPD VariableDeclarationFragment@@uri=httpExchange.getURI() @TO@ uri=httpExchange.getRequestURI() @AT@ 9347 @LENGTH@ 27
------UPD MethodInvocation@@httpExchange.getURI() @TO@ httpExchange.getRequestURI() @AT@ 9353 @LENGTH@ 21
---------UPD SimpleName@@MethodName:getURI:[] @TO@ MethodName:getRequestURI:[] @AT@ 9366 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:latch=new CountDownLatch(1) @TO@ Assignment:latch=new CountDownLatch(count) @AT@ 39505 @LENGTH@ 30
---UPD Assignment@@latch=new CountDownLatch(1) @TO@ latch=new CountDownLatch(count) @AT@ 39505 @LENGTH@ 29
------UPD ClassInstanceCreation@@CountDownLatch[1] @TO@ CountDownLatch[count] @AT@ 39513 @LENGTH@ 21
---------INS SimpleName@@count @TO@ ClassInstanceCreation@@CountDownLatch[1] @AT@ 39532 @LENGTH@ 5
---------DEL NumberLiteral@@1 @AT@ 39532 @LENGTH@ 1


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]OsgiTypeConverter, ServiceSupport[TypeConverter, TypeConverterRegistry, ServiceTrackerCustomizer] @AT@ 4604 @LENGTH@ 118
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4604 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4615 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4617 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4630 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4630 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 4630 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 4636 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4639 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4645 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 4645 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 4652 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:getDelegate().tryConvertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4669 @LENGTH@ 47
------INS MethodInvocation@@getDelegate().tryConvertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:getDelegate().tryConvertTo(type,value) @AT@ 4676 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:getDelegate:[] @TO@ MethodInvocation@@getDelegate().tryConvertTo(type,value) @AT@ 4676 @LENGTH@ 13
---------INS SimpleName@@MethodName:tryConvertTo:[type, value] @TO@ MethodInvocation@@getDelegate().tryConvertTo(type,value) @AT@ 4690 @LENGTH@ 25
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:tryConvertTo:[type, value] @AT@ 4703 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:tryConvertTo:[type, value] @AT@ 4709 @LENGTH@ 5


UPD MethodDeclaration@@private, void, MethodName:findOutputComponents, List<ProcessorDefinition> defs, Set<String> components, Set<String> languages, Set<String> dataformats,  @TO@ private, void, MethodName:findOutputComponents, List<ProcessorDefinition<?>> defs, Set<String> components, Set<String> languages, Set<String> dataformats,  @AT@ 36640 @LENGTH@ 2744
---UPD SingleVariableDeclaration@@List<ProcessorDefinition> defs @TO@ List<ProcessorDefinition<?>> defs @AT@ 36674 @LENGTH@ 30
------UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 36674 @LENGTH@ 25
---------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 36666 @LENGTH@ 22
------------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 36679 @LENGTH@ 19
------------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 36686 @LENGTH@ 1
---UPD IfStatement@@if (defs != null) {  for (  ProcessorDefinition def : defs) {    if (def instanceof SendDefinition) {      findUriComponent(((SendDefinition)def).getUri(),components);    }    if (def instanceof MarshalDefinition) {      findDataFormat(((MarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof UnmarshalDefinition) {      findDataFormat(((UnmarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof ExpressionNode) {      findLanguage(((ExpressionNode)def).getExpression(),languages);    }    if (def instanceof ResequenceDefinition) {      findLanguage(((ResequenceDefinition)def).getExpression(),languages);    }    if (def instanceof AggregateDefinition) {      findLanguage(((AggregateDefinition)def).getExpression(),languages);      findLanguage(((AggregateDefinition)def).getCorrelationExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionPredicate(),languages);      findLanguage(((AggregateDefinition)def).getCompletionTimeoutExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionSizeExpression(),languages);    }    if (def instanceof CatchDefinition) {      findLanguage(((CatchDefinition)def).getHandled(),languages);    }    if (def instanceof OnExceptionDefinition) {      findLanguage(((OnExceptionDefinition)def).getRetryWhile(),languages);      findLanguage(((OnExceptionDefinition)def).getHandled(),languages);      findLanguage(((OnExceptionDefinition)def).getContinued(),languages);    }    if (def instanceof SortDefinition) {      findLanguage(((SortDefinition)def).getExpression(),languages);    }    if (def instanceof WireTapDefinition) {      findLanguage(((WireTapDefinition<?>)def).getNewExchangeExpression(),languages);    }    findOutputComponents(def.getOutputs(),components,languages,dataformats);  }} @TO@ if (defs != null) {  for (  ProcessorDefinition<?> def : defs) {    if (def instanceof SendDefinition) {      findUriComponent(((SendDefinition)def).getUri(),components);    }    if (def instanceof MarshalDefinition) {      findDataFormat(((MarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof UnmarshalDefinition) {      findDataFormat(((UnmarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof ExpressionNode) {      findLanguage(((ExpressionNode)def).getExpression(),languages);    }    if (def instanceof ResequenceDefinition) {      findLanguage(((ResequenceDefinition)def).getExpression(),languages);    }    if (def instanceof AggregateDefinition) {      findLanguage(((AggregateDefinition)def).getExpression(),languages);      findLanguage(((AggregateDefinition)def).getCorrelationExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionPredicate(),languages);      findLanguage(((AggregateDefinition)def).getCompletionTimeoutExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionSizeExpression(),languages);    }    if (def instanceof CatchDefinition) {      findLanguage(((CatchDefinition)def).getHandled(),languages);    }    if (def instanceof OnExceptionDefinition) {      findLanguage(((OnExceptionDefinition)def).getRetryWhile(),languages);      findLanguage(((OnExceptionDefinition)def).getHandled(),languages);      findLanguage(((OnExceptionDefinition)def).getContinued(),languages);    }    if (def instanceof SortDefinition) {      findLanguage(((SortDefinition)def).getExpression(),languages);    }    if (def instanceof WireTapDefinition) {      findLanguage(((WireTapDefinition<?>)def).getNewExchangeExpression(),languages);    }    findOutputComponents(def.getOutputs(),components,languages,dataformats);  }} @AT@ 36792 @LENGTH@ 2582
------UPD Block@@ThenBody:{  for (  ProcessorDefinition def : defs) {    if (def instanceof SendDefinition) {      findUriComponent(((SendDefinition)def).getUri(),components);    }    if (def instanceof MarshalDefinition) {      findDataFormat(((MarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof UnmarshalDefinition) {      findDataFormat(((UnmarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof ExpressionNode) {      findLanguage(((ExpressionNode)def).getExpression(),languages);    }    if (def instanceof ResequenceDefinition) {      findLanguage(((ResequenceDefinition)def).getExpression(),languages);    }    if (def instanceof AggregateDefinition) {      findLanguage(((AggregateDefinition)def).getExpression(),languages);      findLanguage(((AggregateDefinition)def).getCorrelationExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionPredicate(),languages);      findLanguage(((AggregateDefinition)def).getCompletionTimeoutExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionSizeExpression(),languages);    }    if (def instanceof CatchDefinition) {      findLanguage(((CatchDefinition)def).getHandled(),languages);    }    if (def instanceof OnExceptionDefinition) {      findLanguage(((OnExceptionDefinition)def).getRetryWhile(),languages);      findLanguage(((OnExceptionDefinition)def).getHandled(),languages);      findLanguage(((OnExceptionDefinition)def).getContinued(),languages);    }    if (def instanceof SortDefinition) {      findLanguage(((SortDefinition)def).getExpression(),languages);    }    if (def instanceof WireTapDefinition) {      findLanguage(((WireTapDefinition<?>)def).getNewExchangeExpression(),languages);    }    findOutputComponents(def.getOutputs(),components,languages,dataformats);  }} @TO@ ThenBody:{  for (  ProcessorDefinition<?> def : defs) {    if (def instanceof SendDefinition) {      findUriComponent(((SendDefinition)def).getUri(),components);    }    if (def instanceof MarshalDefinition) {      findDataFormat(((MarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof UnmarshalDefinition) {      findDataFormat(((UnmarshalDefinition)def).getDataFormatType(),dataformats);    }    if (def instanceof ExpressionNode) {      findLanguage(((ExpressionNode)def).getExpression(),languages);    }    if (def instanceof ResequenceDefinition) {      findLanguage(((ResequenceDefinition)def).getExpression(),languages);    }    if (def instanceof AggregateDefinition) {      findLanguage(((AggregateDefinition)def).getExpression(),languages);      findLanguage(((AggregateDefinition)def).getCorrelationExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionPredicate(),languages);      findLanguage(((AggregateDefinition)def).getCompletionTimeoutExpression(),languages);      findLanguage(((AggregateDefinition)def).getCompletionSizeExpression(),languages);    }    if (def instanceof CatchDefinition) {      findLanguage(((CatchDefinition)def).getHandled(),languages);    }    if (def instanceof OnExceptionDefinition) {      findLanguage(((OnExceptionDefinition)def).getRetryWhile(),languages);      findLanguage(((OnExceptionDefinition)def).getHandled(),languages);      findLanguage(((OnExceptionDefinition)def).getContinued(),languages);    }    if (def instanceof SortDefinition) {      findLanguage(((SortDefinition)def).getExpression(),languages);    }    if (def instanceof WireTapDefinition) {      findLanguage(((WireTapDefinition<?>)def).getNewExchangeExpression(),languages);    }    findOutputComponents(def.getOutputs(),components,languages,dataformats);  }} @AT@ 36810 @LENGTH@ 2564
---------UPD EnhancedForStatement@@for (ProcessorDefinition def : defs) {  if (def instanceof SendDefinition) {    findUriComponent(((SendDefinition)def).getUri(),components);  }  if (def instanceof MarshalDefinition) {    findDataFormat(((MarshalDefinition)def).getDataFormatType(),dataformats);  }  if (def instanceof UnmarshalDefinition) {    findDataFormat(((UnmarshalDefinition)def).getDataFormatType(),dataformats);  }  if (def instanceof ExpressionNode) {    findLanguage(((ExpressionNode)def).getExpression(),languages);  }  if (def instanceof ResequenceDefinition) {    findLanguage(((ResequenceDefinition)def).getExpression(),languages);  }  if (def instanceof AggregateDefinition) {    findLanguage(((AggregateDefinition)def).getExpression(),languages);    findLanguage(((AggregateDefinition)def).getCorrelationExpression(),languages);    findLanguage(((AggregateDefinition)def).getCompletionPredicate(),languages);    findLanguage(((AggregateDefinition)def).getCompletionTimeoutExpression(),languages);    findLanguage(((AggregateDefinition)def).getCompletionSizeExpression(),languages);  }  if (def instanceof CatchDefinition) {    findLanguage(((CatchDefinition)def).getHandled(),languages);  }  if (def instanceof OnExceptionDefinition) {    findLanguage(((OnExceptionDefinition)def).getRetryWhile(),languages);    findLanguage(((OnExceptionDefinition)def).getHandled(),languages);    findLanguage(((OnExceptionDefinition)def).getContinued(),languages);  }  if (def instanceof SortDefinition) {    findLanguage(((SortDefinition)def).getExpression(),languages);  }  if (def instanceof WireTapDefinition) {    findLanguage(((WireTapDefinition<?>)def).getNewExchangeExpression(),languages);  }  findOutputComponents(def.getOutputs(),components,languages,dataformats);} @TO@ for (ProcessorDefinition<?> def : defs) {  if (def instanceof SendDefinition) {    findUriComponent(((SendDefinition)def).getUri(),components);  }  if (def instanceof MarshalDefinition) {    findDataFormat(((MarshalDefinition)def).getDataFormatType(),dataformats);  }  if (def instanceof UnmarshalDefinition) {    findDataFormat(((UnmarshalDefinition)def).getDataFormatType(),dataformats);  }  if (def instanceof ExpressionNode) {    findLanguage(((ExpressionNode)def).getExpression(),languages);  }  if (def instanceof ResequenceDefinition) {    findLanguage(((ResequenceDefinition)def).getExpression(),languages);  }  if (def instanceof AggregateDefinition) {    findLanguage(((AggregateDefinition)def).getExpression(),languages);    findLanguage(((AggregateDefinition)def).getCorrelationExpression(),languages);    findLanguage(((AggregateDefinition)def).getCompletionPredicate(),languages);    findLanguage(((AggregateDefinition)def).getCompletionTimeoutExpression(),languages);    findLanguage(((AggregateDefinition)def).getCompletionSizeExpression(),languages);  }  if (def instanceof CatchDefinition) {    findLanguage(((CatchDefinition)def).getHandled(),languages);  }  if (def instanceof OnExceptionDefinition) {    findLanguage(((OnExceptionDefinition)def).getRetryWhile(),languages);    findLanguage(((OnExceptionDefinition)def).getHandled(),languages);    findLanguage(((OnExceptionDefinition)def).getContinued(),languages);  }  if (def instanceof SortDefinition) {    findLanguage(((SortDefinition)def).getExpression(),languages);  }  if (def instanceof WireTapDefinition) {    findLanguage(((WireTapDefinition<?>)def).getNewExchangeExpression(),languages);  }  findOutputComponents(def.getOutputs(),components,languages,dataformats);} @AT@ 36828 @LENGTH@ 2532
------------UPD SingleVariableDeclaration@@ProcessorDefinition def @TO@ ProcessorDefinition<?> def @AT@ 36833 @LENGTH@ 23
---------------INS ParameterizedType@@ProcessorDefinition<?> @TO@ SingleVariableDeclaration@@ProcessorDefinition def @AT@ 36823 @LENGTH@ 22
------------------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 36823 @LENGTH@ 19
------------------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 36843 @LENGTH@ 1
---------------DEL SimpleType@@ProcessorDefinition @AT@ 36833 @LENGTH@ 19


UPD ExpressionStatement@@Assignment:attrValue=value.name() @TO@ Assignment:attrValue=value.toString() @AT@ 22181 @LENGTH@ 25
---UPD Assignment@@attrValue=value.name() @TO@ attrValue=value.toString() @AT@ 22181 @LENGTH@ 24
------UPD MethodInvocation@@value.name() @TO@ value.toString() @AT@ 22193 @LENGTH@ 12
---------UPD SimpleName@@MethodName:name:[] @TO@ MethodName:toString:[] @AT@ 22199 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:op.get(URI).set(schemaLocation) @TO@ MethodInvocation:op.get(URI).set(schemaUrl) @AT@ 2705 @LENGTH@ 32
---UPD MethodInvocation@@op.get(URI).set(schemaLocation) @TO@ op.get(URI).set(schemaUrl) @AT@ 2705 @LENGTH@ 31
------UPD SimpleName@@MethodName:set:[schemaLocation] @TO@ MethodName:set:[schemaUrl] @AT@ 2717 @LENGTH@ 19
---------UPD SimpleName@@schemaLocation @TO@ schemaUrl @AT@ 2721 @LENGTH@ 14


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("cache store " + storeName + " is already defined")) @TO@ MethodInvocation:MESSAGES.cacheStoreAlreadyDefined(storeName) @AT@ 9007 @LENGTH@ 108
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("cache store " + storeName + " is already defined")] @AT@ 9013 @LENGTH@ 101
------DEL New@@new @AT@ 9013 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 9017 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("cache store " + storeName + " is already defined") @AT@ 9042 @LENGTH@ 71
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 9042 @LENGTH@ 15
------------DEL New@@new @AT@ 9042 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 9046 @LENGTH@ 9
---INS MethodInvocation@@MESSAGES.cacheStoreAlreadyDefined(storeName) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("cache store " + storeName + " is already defined")) @AT@ 9091 @LENGTH@ 44
------MOV SimpleName@@MethodName:set:["cache store " + storeName + " is already defined"] @TO@ MethodInvocation@@MESSAGES.cacheStoreAlreadyDefined(storeName) @AT@ 9058 @LENGTH@ 55
---------DEL InfixExpression@@"cache store " + storeName + " is already defined" @AT@ 9062 @LENGTH@ 50
------------DEL StringLiteral@@"cache store " @AT@ 9062 @LENGTH@ 14
------------DEL Operator@@+ @AT@ 9076 @LENGTH@ 1
------------DEL SimpleName@@storeName @AT@ 9079 @LENGTH@ 9
------------DEL StringLiteral@@" is already defined" @AT@ 9091 @LENGTH@ 21
---------INS SimpleName@@storeName @TO@ SimpleName@@MethodName:set:["cache store " + storeName + " is already defined"] @AT@ 9125 @LENGTH@ 9
------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.cacheStoreAlreadyDefined(storeName) @AT@ 9091 @LENGTH@ 8


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("disable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.disableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("disable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.disableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2002 @LENGTH@ 823
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2006 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2006 @LENGTH@ 17
------DEL Operator@@== @AT@ 2023 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2027 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2027 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2027 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2044 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2049 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("disable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.disableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2006 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2006 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2006 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2014 @LENGTH@ 9


UPD MethodDeclaration@@void, MethodName:warnIgnoringSocketBindingGroupIgnore, Location location,  @TO@ void, MethodName:warnIgnoringSocketBindingGroupInclude, Location location,  @AT@ 3038 @LENGTH@ 56
---UPD SimpleName@@MethodName:warnIgnoringSocketBindingGroupIgnore @TO@ MethodName:warnIgnoringSocketBindingGroupInclude @AT@ 3038 @LENGTH@ 36


UPD VariableDeclarationStatement@@CommonDeployment deploymentMD=((ResourceAdapterDeploymentService)controller.getService()).getRaDeployment(); @TO@ CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment(); @AT@ 9197 @LENGTH@ 111
---UPD VariableDeclarationFragment@@deploymentMD=((ResourceAdapterDeploymentService)controller.getService()).getRaDeployment() @TO@ deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment() @AT@ 9214 @LENGTH@ 93
------UPD MethodInvocation@@((ResourceAdapterDeploymentService)controller.getService()).getRaDeployment() @TO@ ((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment() @AT@ 9229 @LENGTH@ 78
---------UPD ParenthesizedExpression@@((ResourceAdapterDeploymentService)controller.getService()) @TO@ ((ResourceAdapterXmlDeploymentService)controller.getService()) @AT@ 9229 @LENGTH@ 60
------------UPD CastExpression@@(ResourceAdapterDeploymentService)controller.getService() @TO@ (ResourceAdapterXmlDeploymentService)controller.getService() @AT@ 9230 @LENGTH@ 58
---------------UPD SimpleType@@ResourceAdapterDeploymentService @TO@ ResourceAdapterXmlDeploymentService @AT@ 9231 @LENGTH@ 32
---------UPD SimpleName@@MethodName:getRaDeployment:[] @TO@ MethodName:getRaxmlDeployment:[] @AT@ 9290 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:extractTargzIntoDirectory(sb,proxy,"org.fusesource.fabric","fuse-fabirc",FabricConstants.VERSION) @TO@ MethodInvocation:extractTargzIntoDirectory(sb,proxy,"org.fusesource.fabric","fuse-fabric",FabricConstants.VERSION) @AT@ 1739 @LENGTH@ 102
---UPD MethodInvocation@@extractTargzIntoDirectory(sb,proxy,"org.fusesource.fabric","fuse-fabirc",FabricConstants.VERSION) @TO@ extractTargzIntoDirectory(sb,proxy,"org.fusesource.fabric","fuse-fabric",FabricConstants.VERSION) @AT@ 1739 @LENGTH@ 101
------UPD SimpleName@@MethodName:extractTargzIntoDirectory:[sb, proxy, "org.fusesource.fabric", "fuse-fabirc", FabricConstants.VERSION] @TO@ MethodName:extractTargzIntoDirectory:[sb, proxy, "org.fusesource.fabric", "fuse-fabric", FabricConstants.VERSION] @AT@ 1739 @LENGTH@ 101
---------UPD StringLiteral@@"fuse-fabirc" @TO@ "fuse-fabric" @AT@ 1801 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:assertThat(ReflectionTestUtils.getField(cfb,"factoryLocator"),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:testNoBeanFactory, Exception,  @AT@ 2820 @LENGTH@ 81
---INS MethodInvocation@@assertThat(ReflectionTestUtils.getField(cfb,"factoryLocator"),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ReflectionTestUtils.getField(cfb,"factoryLocator"),is(nullValue())) @AT@ 2820 @LENGTH@ 80
------INS SimpleName@@MethodName:assertThat:[ReflectionTestUtils.getField(cfb,"factoryLocator"), is(nullValue())] @TO@ MethodInvocation@@assertThat(ReflectionTestUtils.getField(cfb,"factoryLocator"),is(nullValue())) @AT@ 2820 @LENGTH@ 80
---------INS MethodInvocation@@ReflectionTestUtils.getField(cfb,"factoryLocator") @TO@ SimpleName@@MethodName:assertThat:[ReflectionTestUtils.getField(cfb,"factoryLocator"), is(nullValue())] @AT@ 2831 @LENGTH@ 51
------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.getField(cfb,"factoryLocator") @AT@ 2831 @LENGTH@ 19
------------INS SimpleName@@MethodName:getField:[cfb, "factoryLocator"] @TO@ MethodInvocation@@ReflectionTestUtils.getField(cfb,"factoryLocator") @AT@ 2851 @LENGTH@ 31
---------------INS SimpleName@@cfb @TO@ SimpleName@@MethodName:getField:[cfb, "factoryLocator"] @AT@ 2860 @LENGTH@ 3
---------------INS StringLiteral@@"factoryLocator" @TO@ SimpleName@@MethodName:getField:[cfb, "factoryLocator"] @AT@ 2865 @LENGTH@ 16
---------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[ReflectionTestUtils.getField(cfb,"factoryLocator"), is(nullValue())] @AT@ 2884 @LENGTH@ 15
------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 2884 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 2887 @LENGTH@ 11
------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 2884 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 2887 @LENGTH@ 11


INS MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @TO@ TypeDeclaration@@ParallelBootOperationContext, AbstractOperationContext @AT@ 5356 @LENGTH@ 145
---INS Modifier@@public @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 5356 @LENGTH@ 6
---INS SimpleType@@ImmutableManagementResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 5363 @LENGTH@ 39
---INS SimpleName@@MethodName:getRootResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 5403 @LENGTH@ 27
---INS ReturnStatement@@MethodInvocation:primaryContext.getRootResourceRegistration() @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 5443 @LENGTH@ 52
------INS MethodInvocation@@primaryContext.getRootResourceRegistration() @TO@ ReturnStatement@@MethodInvocation:primaryContext.getRootResourceRegistration() @AT@ 5450 @LENGTH@ 44
---------INS SimpleName@@Name:primaryContext @TO@ MethodInvocation@@primaryContext.getRootResourceRegistration() @AT@ 5450 @LENGTH@ 14
---------INS SimpleName@@MethodName:getRootResourceRegistration:[] @TO@ MethodInvocation@@primaryContext.getRootResourceRegistration() @AT@ 5465 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).set(entry.getKey(),entry.getValue()) @TO@ MethodInvocation:addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).add(entry.getKey(),entry.getValue()) @AT@ 3532 @LENGTH@ 101
---UPD MethodInvocation@@addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).set(entry.getKey(),entry.getValue()) @TO@ addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).add(entry.getKey(),entry.getValue()) @AT@ 3532 @LENGTH@ 100
------UPD SimpleName@@MethodName:set:[entry.getKey(), entry.getValue()] @TO@ MethodName:add:[entry.getKey(), entry.getValue()] @AT@ 3595 @LENGTH@ 37


UPD FieldDeclaration@@private, final, boolean, [automaticallyDelete=true] @TO@ private, boolean, [automaticallyDelete=true] @AT@ 657 @LENGTH@ 49
---DEL Modifier@@final @AT@ 665 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:System.out.println("Collection bundles from feature:" + feature.getName()) @TO@ MethodInvocation:System.out.println("Collecting bundles from feature:" + feature.getName()) @AT@ 2429 @LENGTH@ 75
---UPD MethodInvocation@@System.out.println("Collection bundles from feature:" + feature.getName()) @TO@ System.out.println("Collecting bundles from feature:" + feature.getName()) @AT@ 2429 @LENGTH@ 74
------UPD SimpleName@@MethodName:println:["Collection bundles from feature:" + feature.getName()] @TO@ MethodName:println:["Collecting bundles from feature:" + feature.getName()] @AT@ 2440 @LENGTH@ 63
---------UPD InfixExpression@@"Collection bundles from feature:" + feature.getName() @TO@ "Collecting bundles from feature:" + feature.getName() @AT@ 2448 @LENGTH@ 54
------------UPD StringLiteral@@"Collection bundles from feature:" @TO@ "Collecting bundles from feature:" @AT@ 2448 @LENGTH@ 34


INS MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @TO@ TypeDeclaration@@[public]StatefulSessionBeanObjectViewConfigurator, SessionBeanObjectViewConfigurator @AT@ 1824 @LENGTH@ 340
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1824 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1834 @LENGTH@ 4
---INS SimpleName@@MethodName:handleIsIdenticalMethod @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1839 @LENGTH@ 23
---INS SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1863 @LENGTH@ 51
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 1863 @LENGTH@ 5
------INS SimpleType@@ComponentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 1869 @LENGTH@ 22
------INS SimpleName@@componentConfiguration @TO@ SingleVariableDeclaration@@final ComponentConfiguration componentConfiguration @AT@ 1892 @LENGTH@ 22
---INS SingleVariableDeclaration@@final ViewConfiguration configuration @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1916 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 1916 @LENGTH@ 5
------INS SimpleType@@ViewConfiguration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 1922 @LENGTH@ 17
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@final ViewConfiguration configuration @AT@ 1940 @LENGTH@ 13
---INS SingleVariableDeclaration@@final DeploymentReflectionIndex index @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1955 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 1955 @LENGTH@ 5
------INS SimpleType@@DeploymentReflectionIndex @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 1961 @LENGTH@ 25
------INS SimpleName@@index @TO@ SingleVariableDeclaration@@final DeploymentReflectionIndex index @AT@ 1987 @LENGTH@ 5
---INS SingleVariableDeclaration@@final Method method @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 1994 @LENGTH@ 19
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Method method @AT@ 1994 @LENGTH@ 5
------INS SimpleType@@Method @TO@ SingleVariableDeclaration@@final Method method @AT@ 2000 @LENGTH@ 6
------INS SimpleName@@method @TO@ SingleVariableDeclaration@@final Method method @AT@ 2007 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,StatefulIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @TO@ MethodDeclaration@@protected, void, MethodName:handleIsIdenticalMethod, final ComponentConfiguration componentConfiguration, final ViewConfiguration configuration, final DeploymentReflectionIndex index, final Method method,  @AT@ 2025 @LENGTH@ 133
------INS MethodInvocation@@configuration.addClientInterceptor(method,StatefulIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @TO@ ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,StatefulIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @AT@ 2025 @LENGTH@ 132
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addClientInterceptor(method,StatefulIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @AT@ 2025 @LENGTH@ 13
---------INS SimpleName@@MethodName:addClientInterceptor:[method, StatefulIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @TO@ MethodInvocation@@configuration.addClientInterceptor(method,StatefulIdentityInterceptorFactory.INSTANCE,InterceptorOrder.Client.EJB_EQUALS_HASHCODE) @AT@ 2039 @LENGTH@ 118
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addClientInterceptor:[method, StatefulIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @AT@ 2060 @LENGTH@ 6
------------INS QualifiedName@@StatefulIdentityInterceptorFactory.INSTANCE @TO@ SimpleName@@MethodName:addClientInterceptor:[method, StatefulIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @AT@ 2068 @LENGTH@ 43
---------------INS SimpleName@@StatefulIdentityInterceptorFactory @TO@ QualifiedName@@StatefulIdentityInterceptorFactory.INSTANCE @AT@ 2068 @LENGTH@ 34
---------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@StatefulIdentityInterceptorFactory.INSTANCE @AT@ 2103 @LENGTH@ 8
------------INS QualifiedName@@InterceptorOrder.Client.EJB_EQUALS_HASHCODE @TO@ SimpleName@@MethodName:addClientInterceptor:[method, StatefulIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE] @AT@ 2113 @LENGTH@ 43
---------------INS QualifiedName@@InterceptorOrder.Client @TO@ QualifiedName@@InterceptorOrder.Client.EJB_EQUALS_HASHCODE @AT@ 2113 @LENGTH@ 23
------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2113 @LENGTH@ 16
------------------INS SimpleName@@Client @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 2130 @LENGTH@ 6
---------------INS SimpleName@@EJB_EQUALS_HASHCODE @TO@ QualifiedName@@InterceptorOrder.Client.EJB_EQUALS_HASHCODE @AT@ 2137 @LENGTH@ 19


UPD TryStatement@@try {  ClassLoader loader=Thread.currentThread().getContextClassLoader();  Thread.currentThread().setContextClassLoader(Utilities.addToClassPath(loader,StringUtils.split(newJar,",")));  console.printInfo("Added " + newJar + " to class path");  return true;} catch (Exception e) {  console.printError("Unable to register " + newJar + "\nException: "+ e.getMessage(),"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));  return false;} @TO@ try {  ClassLoader loader=Thread.currentThread().getContextClassLoader();  ClassLoader newLoader=Utilities.addToClassPath(loader,StringUtils.split(newJar,","));  Thread.currentThread().setContextClassLoader(newLoader);  SessionState.get().getConf().setClassLoader(newLoader);  console.printInfo("Added " + newJar + " to class path");  return true;} catch (Exception e) {  console.printError("Unable to register " + newJar + "\nException: "+ e.getMessage(),"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));  return false;} @AT@ 11737 @LENGTH@ 523
---UPD ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(Utilities.addToClassPath(loader,StringUtils.split(newJar,","))) @TO@ MethodInvocation:Thread.currentThread().setContextClassLoader(newLoader) @AT@ 11824 @LENGTH@ 122
------UPD MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addToClassPath(loader,StringUtils.split(newJar,","))) @TO@ Thread.currentThread().setContextClassLoader(newLoader) @AT@ 11824 @LENGTH@ 121
---------UPD SimpleName@@MethodName:setContextClassLoader:[Utilities.addToClassPath(loader,StringUtils.split(newJar,","))] @TO@ MethodName:setContextClassLoader:[newLoader] @AT@ 11847 @LENGTH@ 98
------------INS SimpleName@@newLoader @TO@ SimpleName@@MethodName:setContextClassLoader:[Utilities.addToClassPath(loader,StringUtils.split(newJar,","))] @AT@ 11965 @LENGTH@ 9
---INS VariableDeclarationStatement@@ClassLoader newLoader=Utilities.addToClassPath(loader,StringUtils.split(newJar,",")); @TO@ TryStatement@@try {  ClassLoader loader=Thread.currentThread().getContextClassLoader();  Thread.currentThread().setContextClassLoader(Utilities.addToClassPath(loader,StringUtils.split(newJar,",")));  console.printInfo("Added " + newJar + " to class path");  return true;} catch (Exception e) {  console.printError("Unable to register " + newJar + "\nException: "+ e.getMessage(),"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));  return false;} @AT@ 11824 @LENGTH@ 89
------INS SimpleType@@ClassLoader @TO@ VariableDeclarationStatement@@ClassLoader newLoader=Utilities.addToClassPath(loader,StringUtils.split(newJar,",")); @AT@ 11824 @LENGTH@ 11
------INS VariableDeclarationFragment@@newLoader=Utilities.addToClassPath(loader,StringUtils.split(newJar,",")) @TO@ VariableDeclarationStatement@@ClassLoader newLoader=Utilities.addToClassPath(loader,StringUtils.split(newJar,",")); @AT@ 11836 @LENGTH@ 76
---------INS SimpleName@@newLoader @TO@ VariableDeclarationFragment@@newLoader=Utilities.addToClassPath(loader,StringUtils.split(newJar,",")) @AT@ 11836 @LENGTH@ 9
---------MOV MethodInvocation@@Utilities.addToClassPath(loader,StringUtils.split(newJar,",")) @TO@ VariableDeclarationFragment@@newLoader=Utilities.addToClassPath(loader,StringUtils.split(newJar,",")) @AT@ 11880 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:SessionState.get().getConf().setClassLoader(newLoader) @TO@ TryStatement@@try {  ClassLoader loader=Thread.currentThread().getContextClassLoader();  Thread.currentThread().setContextClassLoader(Utilities.addToClassPath(loader,StringUtils.split(newJar,",")));  console.printInfo("Added " + newJar + " to class path");  return true;} catch (Exception e) {  console.printError("Unable to register " + newJar + "\nException: "+ e.getMessage(),"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));  return false;} @AT@ 11983 @LENGTH@ 55
------INS MethodInvocation@@SessionState.get().getConf().setClassLoader(newLoader) @TO@ ExpressionStatement@@MethodInvocation:SessionState.get().getConf().setClassLoader(newLoader) @AT@ 11983 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(newLoader) @AT@ 11983 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(newLoader) @AT@ 11983 @LENGTH@ 18
---------INS SimpleName@@Name:SessionState @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(newLoader) @AT@ 11983 @LENGTH@ 12
---------INS SimpleName@@MethodName:setClassLoader:[newLoader] @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(newLoader) @AT@ 12012 @LENGTH@ 25
------------INS SimpleName@@newLoader @TO@ SimpleName@@MethodName:setClassLoader:[newLoader] @AT@ 12027 @LENGTH@ 9


DEL MethodDeclaration@@void, MethodName:errorAccessingSession, String sessionId, String message,  @AT@ 3139 @LENGTH@ 56
---DEL PrimitiveType@@void @AT@ 3134 @LENGTH@ 4
---DEL SimpleName@@MethodName:errorAccessingSession @AT@ 3139 @LENGTH@ 21
---DEL SingleVariableDeclaration@@String sessionId @AT@ 3161 @LENGTH@ 16
------DEL SimpleType@@String @AT@ 3161 @LENGTH@ 6
------DEL SimpleName@@sessionId @AT@ 3168 @LENGTH@ 9
---DEL SingleVariableDeclaration@@String message @AT@ 3179 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 3179 @LENGTH@ 6
------DEL SimpleName@@message @AT@ 3186 @LENGTH@ 7


UPD IfStatement@@if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9844 @LENGTH@ 2297
---UPD Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9882 @LENGTH@ 2259
------INS IfStatement@@if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11518 @LENGTH@ 760
---------INS InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @TO@ IfStatement@@if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11522 @LENGTH@ 69
------------INS MethodInvocation@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @TO@ InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @AT@ 11522 @LENGTH@ 61
---------------INS SimpleName@@Name:overrideRegistration @TO@ MethodInvocation@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @AT@ 11522 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getSubModel:[PathAddress.pathAddress(pe)] @TO@ MethodInvocation@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @AT@ 11543 @LENGTH@ 40
------------------INS MethodInvocation@@PathAddress.pathAddress(pe) @TO@ SimpleName@@MethodName:getSubModel:[PathAddress.pathAddress(pe)] @AT@ 11555 @LENGTH@ 27
---------------------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(pe) @AT@ 11555 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:pathAddress:[pe] @TO@ MethodInvocation@@PathAddress.pathAddress(pe) @AT@ 11567 @LENGTH@ 15
------------------------INS SimpleName@@pe @TO@ SimpleName@@MethodName:pathAddress:[pe] @AT@ 11579 @LENGTH@ 2
------------INS Operator@@== @TO@ InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @AT@ 11583 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null @AT@ 11587 @LENGTH@ 4
---------INS Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ IfStatement@@if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) == null) {  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11593 @LENGTH@ 685
------------MOV VariableDeclarationStatement@@ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider); @TO@ Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11518 @LENGTH@ 125
------------MOV EnhancedForStatement@@for (String statName : poolStats.getNames()) {  subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));} @TO@ Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11680 @LENGTH@ 225
------------MOV ExpressionStatement@@MethodInvocation:subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false) @TO@ Block@@ThenBody:{  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 11942 @LENGTH@ 165


UPD VariableDeclarationStatement@@File file=new File(URI.create(url.toString())); @TO@ File file=new File(url.getFile()); @AT@ 2958 @LENGTH@ 49
---UPD VariableDeclarationFragment@@file=new File(URI.create(url.toString())) @TO@ file=new File(url.getFile()) @AT@ 2963 @LENGTH@ 43
------UPD ClassInstanceCreation@@File[URI.create(url.toString())] @TO@ File[url.getFile()] @AT@ 2970 @LENGTH@ 36
---------INS MethodInvocation@@url.getFile() @TO@ ClassInstanceCreation@@File[URI.create(url.toString())] @AT@ 2957 @LENGTH@ 13
------------MOV SimpleName@@Name:url @TO@ MethodInvocation@@url.getFile() @AT@ 2990 @LENGTH@ 3
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@url.getFile() @AT@ 2994 @LENGTH@ 10
---------DEL MethodInvocation@@URI.create(url.toString()) @AT@ 2979 @LENGTH@ 26
------------DEL SimpleName@@Name:URI @AT@ 2979 @LENGTH@ 3
------------DEL SimpleName@@MethodName:create:[url.toString()] @AT@ 2983 @LENGTH@ 22
---------------DEL MethodInvocation@@url.toString() @AT@ 2990 @LENGTH@ 14


INS MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThanManually, Date date,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 4870 @LENGTH@ 43
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThanManually, Date date,  @AT@ 4857 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 4857 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 4862 @LENGTH@ 6
---INS SimpleName@@MethodName:findByCreatedAtLessThanManually @TO@ MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThanManually, Date date,  @AT@ 4870 @LENGTH@ 31
---INS SingleVariableDeclaration@@Date date @TO@ MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThanManually, Date date,  @AT@ 4902 @LENGTH@ 9
------INS SimpleType@@Date @TO@ SingleVariableDeclaration@@Date date @AT@ 4902 @LENGTH@ 4
------INS SimpleName@@date @TO@ SingleVariableDeclaration@@Date date @AT@ 4907 @LENGTH@ 4


INS IfStatement@@if (holder.principalVsRolesMap != null) {  SecurityRolesAssociation.setSecurityRoles(null);} @TO@ MethodDeclaration@@public, Void, MethodName:run,  @AT@ 2534 @LENGTH@ 149
---INS InfixExpression@@holder.principalVsRolesMap != null @TO@ IfStatement@@if (holder.principalVsRolesMap != null) {  SecurityRolesAssociation.setSecurityRoles(null);} @AT@ 2537 @LENGTH@ 34
------INS QualifiedName@@holder.principalVsRolesMap @TO@ InfixExpression@@holder.principalVsRolesMap != null @AT@ 2537 @LENGTH@ 26
---------INS SimpleName@@holder @TO@ QualifiedName@@holder.principalVsRolesMap @AT@ 2537 @LENGTH@ 6
---------INS SimpleName@@principalVsRolesMap @TO@ QualifiedName@@holder.principalVsRolesMap @AT@ 2544 @LENGTH@ 19
------INS Operator@@!= @TO@ InfixExpression@@holder.principalVsRolesMap != null @AT@ 2563 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@holder.principalVsRolesMap != null @AT@ 2567 @LENGTH@ 4
---INS Block@@ThenBody:{  SecurityRolesAssociation.setSecurityRoles(null);} @TO@ IfStatement@@if (holder.principalVsRolesMap != null) {  SecurityRolesAssociation.setSecurityRoles(null);} @AT@ 2572 @LENGTH@ 111
------INS ExpressionStatement@@MethodInvocation:SecurityRolesAssociation.setSecurityRoles(null) @TO@ Block@@ThenBody:{  SecurityRolesAssociation.setSecurityRoles(null);} @AT@ 2594 @LENGTH@ 48
---------INS MethodInvocation@@SecurityRolesAssociation.setSecurityRoles(null) @TO@ ExpressionStatement@@MethodInvocation:SecurityRolesAssociation.setSecurityRoles(null) @AT@ 2594 @LENGTH@ 47
------------INS SimpleName@@Name:SecurityRolesAssociation @TO@ MethodInvocation@@SecurityRolesAssociation.setSecurityRoles(null) @AT@ 2594 @LENGTH@ 24
------------INS SimpleName@@MethodName:setSecurityRoles:[null] @TO@ MethodInvocation@@SecurityRolesAssociation.setSecurityRoles(null) @AT@ 2619 @LENGTH@ 22
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setSecurityRoles:[null] @AT@ 2636 @LENGTH@ 4


UPD MethodDeclaration@@private, String, MethodName:createBody,  @TO@ protected, String, MethodName:createBody,  @AT@ 1897 @LENGTH@ 428
---UPD Modifier@@private @TO@ protected @AT@ 1897 @LENGTH@ 7


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2142 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2296 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2331 @LENGTH@ 89
------INS MethodInvocation@@BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2331 @LENGTH@ 88
---------INS QualifiedName@@Name:BoundedQueueThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2331 @LENGTH@ 34
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2366 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2381 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2390 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2401 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2408 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2414 @LENGTH@ 4


UPD Block@@ThenBody:{  ((WarJaccService)service).setContext(webContext);  final ServiceName jaccServiceName=JaccService.SERVICE_NAME.append(deploymentUnit.getName());  builder=serviceTarget.addService(jaccServiceName,service);  if (deploymentUnit.getParent() != null) {    final DeploymentUnit parentDU=deploymentUnit.getParent();    builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector());  }  builder.addDependency(deploymentServiceName);  builder.setInitialMode(Mode.ACTIVE).install();} @TO@ ThenBody:{  ((WarJaccService)service).setContext(webContext);  final ServiceName jaccServiceName=deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME);  builder=serviceTarget.addService(jaccServiceName,service);  if (deploymentUnit.getParent() != null) {    final DeploymentUnit parentDU=deploymentUnit.getParent();    builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector());  }  builder.addDependency(deploymentServiceName);  builder.setInitialMode(Mode.ACTIVE).install();} @AT@ 14896 @LENGTH@ 853
---UPD VariableDeclarationStatement@@final ServiceName jaccServiceName=JaccService.SERVICE_NAME.append(deploymentUnit.getName()); @TO@ final ServiceName jaccServiceName=deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME); @AT@ 14981 @LENGTH@ 94
------UPD VariableDeclarationFragment@@jaccServiceName=JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @TO@ jaccServiceName=deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME) @AT@ 14999 @LENGTH@ 75
---------UPD MethodInvocation@@JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @TO@ deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME) @AT@ 15017 @LENGTH@ 57
------------INS MethodInvocation@@MethodName:getServiceName:[] @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @AT@ 15017 @LENGTH@ 31
------------DEL QualifiedName@@Name:JaccService.SERVICE_NAME @AT@ 15017 @LENGTH@ 24
------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @AT@ 15017 @LENGTH@ 14
------------UPD SimpleName@@MethodName:append:[deploymentUnit.getName()] @TO@ MethodName:append:[JaccService.SERVICE_NAME] @AT@ 15042 @LENGTH@ 32
---------------DEL MethodInvocation@@deploymentUnit.getName() @AT@ 15049 @LENGTH@ 24
------------------DEL SimpleName@@Name:deploymentUnit @AT@ 15049 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 15064 @LENGTH@ 9
---------------INS QualifiedName@@JaccService.SERVICE_NAME @TO@ SimpleName@@MethodName:append:[deploymentUnit.getName()] @AT@ 15056 @LENGTH@ 24
------------------INS SimpleName@@JaccService @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 15056 @LENGTH@ 11
------------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 15068 @LENGTH@ 12
---UPD IfStatement@@if (deploymentUnit.getParent() != null) {  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector());} @TO@ if (deploymentUnit.getParent() != null) {  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector());} @AT@ 15170 @LENGTH@ 380
------UPD Block@@ThenBody:{  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector());} @TO@ ThenBody:{  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector());} @AT@ 15210 @LENGTH@ 340
---------UPD ExpressionStatement@@MethodInvocation:builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector()) @TO@ MethodInvocation:builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector()) @AT@ 15367 @LENGTH@ 165
------------UPD MethodInvocation@@builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector()) @TO@ builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector()) @AT@ 15367 @LENGTH@ 164
---------------UPD SimpleName@@MethodName:addDependency:[JaccService.SERVICE_NAME.append(parentDU.getName()), PolicyConfiguration.class, service.getParentPolicyInjector()] @TO@ MethodName:addDependency:[parentDU.getServiceName().append(JaccService.SERVICE_NAME), PolicyConfiguration.class, service.getParentPolicyInjector()] @AT@ 15375 @LENGTH@ 156
------------------UPD MethodInvocation@@JaccService.SERVICE_NAME.append(parentDU.getName()) @TO@ parentDU.getServiceName().append(JaccService.SERVICE_NAME) @AT@ 15389 @LENGTH@ 51
---------------------DEL QualifiedName@@Name:JaccService.SERVICE_NAME @AT@ 15389 @LENGTH@ 24
---------------------INS MethodInvocation@@MethodName:getServiceName:[] @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(parentDU.getName()) @AT@ 15396 @LENGTH@ 25
---------------------INS SimpleName@@Name:parentDU @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(parentDU.getName()) @AT@ 15396 @LENGTH@ 8
---------------------UPD SimpleName@@MethodName:append:[parentDU.getName()] @TO@ MethodName:append:[JaccService.SERVICE_NAME] @AT@ 15414 @LENGTH@ 26
------------------------DEL MethodInvocation@@parentDU.getName() @AT@ 15421 @LENGTH@ 18
---------------------------DEL SimpleName@@Name:parentDU @AT@ 15421 @LENGTH@ 8
---------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 15430 @LENGTH@ 9
------------------------INS QualifiedName@@JaccService.SERVICE_NAME @TO@ SimpleName@@MethodName:append:[parentDU.getName()] @AT@ 15429 @LENGTH@ 24
---------------------------INS SimpleName@@JaccService @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 15429 @LENGTH@ 11
---------------------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 15441 @LENGTH@ 12


UPD MethodDeclaration@@IllegalArgumentException, MethodName:deploymentUnitNotFound, String path, String puName, DeploymentUnit deploymentUnit,  @TO@ IllegalArgumentException, MethodName:persistenceUnitNotFound, String path, String puName, DeploymentUnit deploymentUnit,  @AT@ 13983 @LENGTH@ 82
---UPD SimpleName@@MethodName:deploymentUnitNotFound @TO@ MethodName:persistenceUnitNotFound @AT@ 13983 @LENGTH@ 22


UPD VariableDeclarationStatement@@byte[] decoded=Base64Encoder.decode(encoded).getBytes(); @TO@ byte[] decoded=Base64Encoder.decode(encoded).getBytes(macRomanCharSet); @AT@ 18044 @LENGTH@ 58
---UPD VariableDeclarationFragment@@decoded=Base64Encoder.decode(encoded).getBytes() @TO@ decoded=Base64Encoder.decode(encoded).getBytes(macRomanCharSet) @AT@ 18051 @LENGTH@ 50
------UPD MethodInvocation@@Base64Encoder.decode(encoded).getBytes() @TO@ Base64Encoder.decode(encoded).getBytes(macRomanCharSet) @AT@ 18061 @LENGTH@ 40
---------UPD SimpleName@@MethodName:getBytes:[] @TO@ MethodName:getBytes:[macRomanCharSet] @AT@ 18091 @LENGTH@ 10
------------INS SimpleName@@macRomanCharSet @TO@ SimpleName@@MethodName:getBytes:[] @AT@ 18212 @LENGTH@ 15


UPD TypeDeclaration@@[@Stateful, @Remote(TestPassivationRemote.class), @Cache("passivating"), public]TestPassivationBean, [TestPassivationRemote] @TO@ [@Stateful, @Remote(TestPassivationRemote.class), @Cache("passivating"), public]TestPassivationBean, PassivationSuperClass[TestPassivationRemote] @AT@ 1630 @LENGTH@ 2336
---INS SimpleType@@PassivationSuperClass @TO@ TypeDeclaration@@[@Stateful, @Remote(TestPassivationRemote.class), @Cache("passivating"), public]TestPassivationBean, [TestPassivationRemote] @AT@ 1740 @LENGTH@ 21


UPD FieldDeclaration@@private, static, final, byte[], [ZERO=new byte[]{0}] @TO@ private, static, final, byte[], [ZERO=new byte[]{'0'}] @AT@ 2478 @LENGTH@ 52
---UPD VariableDeclarationFragment@@ZERO=new byte[]{0} @TO@ ZERO=new byte[]{'0'} @AT@ 2506 @LENGTH@ 23
------UPD ArrayCreation@@new byte[]{0} @TO@ new byte[]{'0'} @AT@ 2513 @LENGTH@ 16
---------UPD ArrayInitializer@@{0} @TO@ {'0'} @AT@ 2524 @LENGTH@ 5
------------DEL NumberLiteral@@0 @AT@ 2526 @LENGTH@ 1
------------INS CharacterLiteral@@'0' @TO@ ArrayInitializer@@{0} @AT@ 2528 @LENGTH@ 3


UPD VariableDeclarationStatement@@String systemRepo="file:" + System.getProperty("karaf.home") + "/"+ System.getProperty("karaf.default.repository")+ "@snapshots"; @TO@ String systemRepo="file://" + System.getProperty("karaf.home") + "/"+ System.getProperty("karaf.default.repository")+ "@snapshots"; @AT@ 1532 @LENGTH@ 133
---UPD VariableDeclarationFragment@@systemRepo="file:" + System.getProperty("karaf.home") + "/"+ System.getProperty("karaf.default.repository")+ "@snapshots" @TO@ systemRepo="file://" + System.getProperty("karaf.home") + "/"+ System.getProperty("karaf.default.repository")+ "@snapshots" @AT@ 1539 @LENGTH@ 125
------UPD InfixExpression@@"file:" + System.getProperty("karaf.home") + "/"+ System.getProperty("karaf.default.repository")+ "@snapshots" @TO@ "file://" + System.getProperty("karaf.home") + "/"+ System.getProperty("karaf.default.repository")+ "@snapshots" @AT@ 1552 @LENGTH@ 112
---------UPD StringLiteral@@"file:" @TO@ "file://" @AT@ 1552 @LENGTH@ 7


UPD VariableDeclarationStatement@@@SuppressWarnings("rawtypes") List<ProcessorDefinition> children=defn.getOutputs(); @TO@ List<ProcessorDefinition<?>> children=defn.getOutputs(); @AT@ 4227 @LENGTH@ 93
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 4265 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 4232 @LENGTH@ 22
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 4252 @LENGTH@ 1
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 4270 @LENGTH@ 19


UPD VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(input)); @TO@ BufferedReader reader=IOHelper.buffered(new InputStreamReader(input)); @AT@ 2183 @LENGTH@ 73
---UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(input)) @TO@ reader=IOHelper.buffered(new InputStreamReader(input)) @AT@ 2198 @LENGTH@ 57
------DEL ClassInstanceCreation@@BufferedReader[new InputStreamReader(input)] @AT@ 2207 @LENGTH@ 48
---------DEL New@@new @AT@ 2207 @LENGTH@ 3
---------DEL SimpleType@@BufferedReader @AT@ 2211 @LENGTH@ 14
---------DEL ClassInstanceCreation@@InputStreamReader[input] @AT@ 2226 @LENGTH@ 28
------INS MethodInvocation@@IOHelper.buffered(new InputStreamReader(input)) @TO@ VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(input)) @AT@ 2246 @LENGTH@ 47
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new InputStreamReader(input)) @AT@ 2246 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[new InputStreamReader(input)] @TO@ MethodInvocation@@IOHelper.buffered(new InputStreamReader(input)) @AT@ 2255 @LENGTH@ 38
------------INS ClassInstanceCreation@@InputStreamReader[input] @TO@ SimpleName@@MethodName:buffered:[new InputStreamReader(input)] @AT@ 2264 @LENGTH@ 28
---------------MOV New@@new @TO@ ClassInstanceCreation@@InputStreamReader[input] @AT@ 2226 @LENGTH@ 3
---------------MOV SimpleType@@InputStreamReader @TO@ ClassInstanceCreation@@InputStreamReader[input] @AT@ 2230 @LENGTH@ 17
---------------MOV SimpleName@@input @TO@ ClassInstanceCreation@@InputStreamReader[input] @AT@ 2248 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("property " + property.getName() + " not defined")) @TO@ MethodInvocation:MESSAGES.propertyValueNotDefined(property.getName()) @AT@ 10282 @LENGTH@ 107
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("property " + property.getName() + " not defined")] @AT@ 10288 @LENGTH@ 100
------DEL New@@new @AT@ 10288 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 10292 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("property " + property.getName() + " not defined") @AT@ 10317 @LENGTH@ 70
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 10317 @LENGTH@ 15
------------DEL New@@new @AT@ 10317 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 10321 @LENGTH@ 9
---INS MethodInvocation@@MESSAGES.propertyValueNotDefined(property.getName()) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("property " + property.getName() + " not defined")) @AT@ 10309 @LENGTH@ 52
------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.propertyValueNotDefined(property.getName()) @AT@ 10309 @LENGTH@ 8
------MOV SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @TO@ MethodInvocation@@MESSAGES.propertyValueNotDefined(property.getName()) @AT@ 10333 @LENGTH@ 54
---------INS MethodInvocation@@property.getName() @TO@ SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @AT@ 10342 @LENGTH@ 18
------------MOV SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 10351 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 10360 @LENGTH@ 9


UPD AssertStatement@@InfixExpression:serverEnvironment == null, Msg-StringLiteral:"serverEnvironment is null" @TO@ InfixExpression:serverEnvironment != null, Msg-StringLiteral:"serverEnvironment is null" @AT@ 3679 @LENGTH@ 63
---UPD InfixExpression@@serverEnvironment == null @TO@ serverEnvironment != null @AT@ 3686 @LENGTH@ 25
------UPD Operator@@== @TO@ != @AT@ 3703 @LENGTH@ 2


UPD IfStatement@@if (childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote())) {  storeDirect=true;} else {  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @TO@ if (!childReg.isRuntimeOnly() || queryRuntime || (proxies && childReg.isRemote())) {  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} else {  storeDirect=true;} @AT@ 12993 @LENGTH@ 1074
---UPD InfixExpression@@childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote()) @TO@ !childReg.isRuntimeOnly() || queryRuntime || (proxies && childReg.isRemote()) @AT@ 12997 @LENGTH@ 62
------INS PrefixExpression@@!childReg.isRuntimeOnly() @TO@ InfixExpression@@childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote()) @AT@ 12988 @LENGTH@ 25
---------INS Operator@@! @TO@ PrefixExpression@@!childReg.isRuntimeOnly() @AT@ 12988 @LENGTH@ 1
---------INS MethodInvocation@@childReg.isRuntimeOnly() @TO@ PrefixExpression@@!childReg.isRuntimeOnly() @AT@ 12989 @LENGTH@ 24
------------MOV SimpleName@@Name:childReg @TO@ MethodInvocation@@childReg.isRuntimeOnly() @AT@ 12997 @LENGTH@ 8
------------MOV SimpleName@@MethodName:isRuntimeOnly:[] @TO@ MethodInvocation@@childReg.isRuntimeOnly() @AT@ 13006 @LENGTH@ 15
------DEL MethodInvocation@@childReg.isRuntimeOnly() @AT@ 12997 @LENGTH@ 24
------INS SimpleName@@queryRuntime @TO@ InfixExpression@@childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote()) @AT@ 13016 @LENGTH@ 12
------UPD Operator@@&& @TO@ || @AT@ 13021 @LENGTH@ 2
------UPD ParenthesizedExpression@@(!proxies || !childReg.isRemote()) @TO@ (proxies && childReg.isRemote()) @AT@ 13025 @LENGTH@ 34
---------UPD InfixExpression@@!proxies || !childReg.isRemote() @TO@ proxies && childReg.isRemote() @AT@ 13026 @LENGTH@ 32
------------DEL PrefixExpression@@!proxies @AT@ 13026 @LENGTH@ 8
---------------DEL Operator@@! @AT@ 13026 @LENGTH@ 1
---------------DEL SimpleName@@proxies @AT@ 13027 @LENGTH@ 7
------------INS SimpleName@@proxies @TO@ InfixExpression@@!proxies || !childReg.isRemote() @AT@ 13033 @LENGTH@ 7
------------UPD Operator@@|| @TO@ && @AT@ 13034 @LENGTH@ 2
------------DEL PrefixExpression@@!childReg.isRemote() @AT@ 13038 @LENGTH@ 20
---------------DEL Operator@@! @AT@ 13038 @LENGTH@ 1
---------------DEL MethodInvocation@@childReg.isRemote() @AT@ 13039 @LENGTH@ 19
------------INS MethodInvocation@@childReg.isRemote() @TO@ InfixExpression@@!proxies || !childReg.isRemote() @AT@ 13044 @LENGTH@ 19
---------------MOV SimpleName@@Name:childReg @TO@ MethodInvocation@@childReg.isRemote() @AT@ 13039 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:isRemote:[] @TO@ MethodInvocation@@childReg.isRemote() @AT@ 13048 @LENGTH@ 10
---UPD Block@@ThenBody:{  storeDirect=true;} @TO@ ElseBody:{  storeDirect=true;} @AT@ 13061 @LENGTH@ 83
---MOV Block@@ThenBody:{  storeDirect=true;} @TO@ IfStatement@@if (childReg.isRuntimeOnly() && (!proxies || !childReg.isRemote())) {  storeDirect=true;} else {  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @AT@ 13061 @LENGTH@ 83
---UPD Block@@ElseBody:{  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @TO@ ThenBody:{  ModelNode rrOp=new ModelNode();  rrOp.get(OP).set(opName);  rrOp.get(OP_ADDR).set(PathAddress.pathAddress(address,childPE).toModelNode());  rrOp.get(RECURSIVE).set(true);  rrOp.get(PROXIES).set(proxies);  rrOp.get(INCLUDE_RUNTIME).set(queryRuntime);  ModelNode rrRsp=new ModelNode();  childResources.put(childPE,rrRsp);  OperationStepHandler rrHandler=childReg.getOperationHandler(PathAddress.EMPTY_ADDRESS,opName);  context.addStep(rrRsp,rrOp,rrHandler,OperationContext.Stage.IMMEDIATE);} @AT@ 13150 @LENGTH@ 917


UPD ReturnStatement@@MethodInvocation:split((String)s,delimiter) @TO@ MethodInvocation:split(s,delimiter) @AT@ 30619 @LENGTH@ 36
---UPD MethodInvocation@@split((String)s,delimiter) @TO@ split(s,delimiter) @AT@ 30626 @LENGTH@ 28
------UPD SimpleName@@MethodName:split:[(String)s, delimiter] @TO@ MethodName:split:[s, delimiter] @AT@ 30626 @LENGTH@ 28
---------DEL CastExpression@@(String)s @AT@ 30632 @LENGTH@ 10
------------DEL SimpleType@@String @AT@ 30633 @LENGTH@ 6
------------DEL SimpleName@@s @AT@ 30641 @LENGTH@ 1
---------INS SimpleName@@s @TO@ SimpleName@@MethodName:split:[(String)s, delimiter] @AT@ 30653 @LENGTH@ 1


UPD CatchClause@@catch (HttpClientErrorException e) {  assertEquals(HttpStatus.UNAUTHORIZED,e.getStatusCode());} @TO@ catch (HttpClientErrorException e) {  assertEquals(HttpStatus.UNAUTHORIZED,e.getStatusCode());  List<String> values=tokenEndpointResponse.getHeaders().get("WWW-Authenticate");  assertEquals(1,values.size());  assertEquals("Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"",values.get(0));} @AT@ 3818 @LENGTH@ 101
---INS VariableDeclarationStatement@@List<String> values=tokenEndpointResponse.getHeaders().get("WWW-Authenticate"); @TO@ CatchClause@@catch (HttpClientErrorException e) {  assertEquals(HttpStatus.UNAUTHORIZED,e.getStatusCode());} @AT@ 3919 @LENGTH@ 81
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> values=tokenEndpointResponse.getHeaders().get("WWW-Authenticate"); @AT@ 3919 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 3919 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 3924 @LENGTH@ 6
------INS VariableDeclarationFragment@@values=tokenEndpointResponse.getHeaders().get("WWW-Authenticate") @TO@ VariableDeclarationStatement@@List<String> values=tokenEndpointResponse.getHeaders().get("WWW-Authenticate"); @AT@ 3932 @LENGTH@ 67
---------INS SimpleName@@values @TO@ VariableDeclarationFragment@@values=tokenEndpointResponse.getHeaders().get("WWW-Authenticate") @AT@ 3932 @LENGTH@ 6
---------INS MethodInvocation@@tokenEndpointResponse.getHeaders().get("WWW-Authenticate") @TO@ VariableDeclarationFragment@@values=tokenEndpointResponse.getHeaders().get("WWW-Authenticate") @AT@ 3941 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@tokenEndpointResponse.getHeaders().get("WWW-Authenticate") @AT@ 3941 @LENGTH@ 34
------------INS SimpleName@@Name:tokenEndpointResponse @TO@ MethodInvocation@@tokenEndpointResponse.getHeaders().get("WWW-Authenticate") @AT@ 3941 @LENGTH@ 21
------------INS SimpleName@@MethodName:get:["WWW-Authenticate"] @TO@ MethodInvocation@@tokenEndpointResponse.getHeaders().get("WWW-Authenticate") @AT@ 3976 @LENGTH@ 23
---------------INS StringLiteral@@"WWW-Authenticate" @TO@ SimpleName@@MethodName:get:["WWW-Authenticate"] @AT@ 3980 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,values.size()) @TO@ CatchClause@@catch (HttpClientErrorException e) {  assertEquals(HttpStatus.UNAUTHORIZED,e.getStatusCode());} @AT@ 4004 @LENGTH@ 31
------INS MethodInvocation@@assertEquals(1,values.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,values.size()) @AT@ 4004 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertEquals:[1, values.size()] @TO@ MethodInvocation@@assertEquals(1,values.size()) @AT@ 4004 @LENGTH@ 30
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, values.size()] @AT@ 4017 @LENGTH@ 1
------------INS MethodInvocation@@values.size() @TO@ SimpleName@@MethodName:assertEquals:[1, values.size()] @AT@ 4020 @LENGTH@ 13
---------------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.size() @AT@ 4020 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@values.size() @AT@ 4027 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"",values.get(0)) @TO@ CatchClause@@catch (HttpClientErrorException e) {  assertEquals(HttpStatus.UNAUTHORIZED,e.getStatusCode());} @AT@ 4039 @LENGTH@ 121
------INS MethodInvocation@@assertEquals("Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"",values.get(0)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"",values.get(0)) @AT@ 4039 @LENGTH@ 120
---------INS SimpleName@@MethodName:assertEquals:["Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"", values.get(0)] @TO@ MethodInvocation@@assertEquals("Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"",values.get(0)) @AT@ 4039 @LENGTH@ 120
------------INS StringLiteral@@"Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"" @TO@ SimpleName@@MethodName:assertEquals:["Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"", values.get(0)] @AT@ 4052 @LENGTH@ 91
------------INS MethodInvocation@@values.get(0) @TO@ SimpleName@@MethodName:assertEquals:["Bearer realm=\"sparklr2\", error=\"invalid_token\", error_description=\"Bad Credentials\"", values.get(0)] @AT@ 4145 @LENGTH@ 13
---------------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.get(0) @AT@ 4145 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@values.get(0) @AT@ 4152 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 4156 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.errorf(e,e.toString()) @TO@ MethodInvocation:MGMT_OP_LOGGER.errorf(e,e.toString()) @AT@ 2126 @LENGTH@ 36
---UPD MethodInvocation@@ROOT_LOGGER.errorf(e,e.toString()) @TO@ MGMT_OP_LOGGER.errorf(e,e.toString()) @AT@ 2126 @LENGTH@ 35
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 2126 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:this.seperator="" @TO@ Assignment:this.separator="" @AT@ 6324 @LENGTH@ 20
---UPD Assignment@@this.seperator="" @TO@ this.separator="" @AT@ 6324 @LENGTH@ 19
------UPD FieldAccess@@this.seperator @TO@ this.separator @AT@ 6324 @LENGTH@ 14
---------UPD SimpleName@@seperator @TO@ separator @AT@ 6329 @LENGTH@ 9


INS MethodDeclaration@@DeploymentUnitProcessingException, MethodName:failedToCreateDeploymentNodeSelector, @Cause Exception e, String deploymentNodeSelectorClassName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]EjbMessages,  @AT@ 90007 @LENGTH@ 97
---INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:failedToCreateDeploymentNodeSelector, @Cause Exception e, String deploymentNodeSelectorClassName,  @AT@ 89973 @LENGTH@ 33
---INS SimpleName@@MethodName:failedToCreateDeploymentNodeSelector @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:failedToCreateDeploymentNodeSelector, @Cause Exception e, String deploymentNodeSelectorClassName,  @AT@ 90007 @LENGTH@ 36
---INS SingleVariableDeclaration@@@Cause Exception e @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:failedToCreateDeploymentNodeSelector, @Cause Exception e, String deploymentNodeSelectorClassName,  @AT@ 90044 @LENGTH@ 18
------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@@Cause Exception e @AT@ 90051 @LENGTH@ 9
------INS SimpleName@@e @TO@ SingleVariableDeclaration@@@Cause Exception e @AT@ 90061 @LENGTH@ 1
---INS SingleVariableDeclaration@@String deploymentNodeSelectorClassName @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:failedToCreateDeploymentNodeSelector, @Cause Exception e, String deploymentNodeSelectorClassName,  @AT@ 90064 @LENGTH@ 38
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String deploymentNodeSelectorClassName @AT@ 90064 @LENGTH@ 6
------INS SimpleName@@deploymentNodeSelectorClassName @TO@ SingleVariableDeclaration@@String deploymentNodeSelectorClassName @AT@ 90071 @LENGTH@ 31


UPD VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> correct=new HashMap<NetworkInterface,Set<InetAddress>>(); @TO@ Map<NetworkInterface,Set<InetAddress>> correct=new LinkedHashMap<NetworkInterface,Set<InetAddress>>(); @AT@ 1866 @LENGTH@ 100
---UPD VariableDeclarationFragment@@correct=new HashMap<NetworkInterface,Set<InetAddress>>() @TO@ correct=new LinkedHashMap<NetworkInterface,Set<InetAddress>>() @AT@ 1906 @LENGTH@ 59
------UPD ClassInstanceCreation@@HashMap<NetworkInterface,Set<InetAddress>>[] @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>>[] @AT@ 1916 @LENGTH@ 49
---------UPD ParameterizedType@@HashMap<NetworkInterface,Set<InetAddress>> @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>> @AT@ 1920 @LENGTH@ 43
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 1920 @LENGTH@ 7


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2010 @LENGTH@ 1073
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 2025 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2778 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2778 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2786 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2799 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2799 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2799 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2816 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2832 @LENGTH@ 21


UPD ThrowStatement@@MethodInvocation:MESSAGES.failedToStoreSessionAttributes(e,sessionId) @TO@ MethodInvocation:MESSAGES.failedToLoadSessionAttributes(e,sessionId) @AT@ 10093 @LENGTH@ 60
---UPD MethodInvocation@@MESSAGES.failedToStoreSessionAttributes(e,sessionId) @TO@ MESSAGES.failedToLoadSessionAttributes(e,sessionId) @AT@ 10099 @LENGTH@ 53
------UPD SimpleName@@MethodName:failedToStoreSessionAttributes:[e, sessionId] @TO@ MethodName:failedToLoadSessionAttributes:[e, sessionId] @AT@ 10108 @LENGTH@ 44


UPD WhileStatement@@while (superClassDotName != null && !superClassDotName.toString().equals(Object.class.getName())) {  final ClassInfo superClass=compositeIndex.getClassByName(superClassDotName);  if (superClass == null) {    break;  }  interfaces.addAll(getPotentialViewInterfaces(superClass));  superClassDotName=superClass.superName();} @TO@ while (interfaces.isEmpty() && superClassDotName != null && !superClassDotName.toString().equals(Object.class.getName())) {  final ClassInfo superClass=compositeIndex.getClassByName(superClassDotName);  if (superClass == null) {    break;  }  interfaces.addAll(getPotentialViewInterfaces(superClass));  superClassDotName=superClass.superName();} @AT@ 9522 @LENGTH@ 442
---UPD InfixExpression@@superClassDotName != null && !superClassDotName.toString().equals(Object.class.getName()) @TO@ interfaces.isEmpty() && superClassDotName != null && !superClassDotName.toString().equals(Object.class.getName()) @AT@ 9529 @LENGTH@ 89
------INS InfixExpression@@interfaces.isEmpty() && superClassDotName != null @TO@ InfixExpression@@superClassDotName != null && !superClassDotName.toString().equals(Object.class.getName()) @AT@ 9578 @LENGTH@ 49
---------MOV InfixExpression@@superClassDotName != null @TO@ InfixExpression@@interfaces.isEmpty() && superClassDotName != null @AT@ 9529 @LENGTH@ 25
---------INS MethodInvocation@@interfaces.isEmpty() @TO@ InfixExpression@@interfaces.isEmpty() && superClassDotName != null @AT@ 9578 @LENGTH@ 20
------------INS SimpleName@@Name:interfaces @TO@ MethodInvocation@@interfaces.isEmpty() @AT@ 9578 @LENGTH@ 10
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@interfaces.isEmpty() @AT@ 9589 @LENGTH@ 9
---------INS Operator@@&& @TO@ InfixExpression@@interfaces.isEmpty() && superClassDotName != null @AT@ 9598 @LENGTH@ 2


INS MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @TO@ TypeDeclaration@@[public]ParserUtil,  @AT@ 3195 @LENGTH@ 358
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3195 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3202 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3209 @LENGTH@ 4
---INS SimpleName@@MethodName:parse @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3214 @LENGTH@ 5
---INS SingleVariableDeclaration@@String str @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3220 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String str @AT@ 3220 @LENGTH@ 6
------INS SimpleName@@str @TO@ SingleVariableDeclaration@@String str @AT@ 3227 @LENGTH@ 3
---INS SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3232 @LENGTH@ 47
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @AT@ 3232 @LENGTH@ 5
------INS SimpleType@@CommandLineParser.CallbackHandler @TO@ SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @AT@ 3238 @LENGTH@ 33
------INS SimpleName@@handler @TO@ SingleVariableDeclaration@@final CommandLineParser.CallbackHandler handler @AT@ 3272 @LENGTH@ 7
---INS SingleVariableDeclaration@@ParsingState initialState @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3281 @LENGTH@ 25
------INS SimpleType@@ParsingState @TO@ SingleVariableDeclaration@@ParsingState initialState @AT@ 3281 @LENGTH@ 12
------INS SimpleName@@initialState @TO@ SingleVariableDeclaration@@ParsingState initialState @AT@ 3294 @LENGTH@ 12
---INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3315 @LENGTH@ 22
---INS IfStatement@@if (str == null) {  return;} @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3348 @LENGTH@ 47
------INS InfixExpression@@str == null @TO@ IfStatement@@if (str == null) {  return;} @AT@ 3351 @LENGTH@ 11
---------INS SimpleName@@str @TO@ InfixExpression@@str == null @AT@ 3351 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@str == null @AT@ 3354 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@str == null @AT@ 3358 @LENGTH@ 4
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (str == null) {  return;} @AT@ 3364 @LENGTH@ 31
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 3378 @LENGTH@ 7
---INS VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3404 @LENGTH@ 80
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @AT@ 3404 @LENGTH@ 5
------INS SimpleType@@ParsingStateCallbackHandler @TO@ VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @AT@ 3410 @LENGTH@ 27
------INS VariableDeclarationFragment@@callbackHandler=getCallbackHandler(handler) @TO@ VariableDeclarationStatement@@final ParsingStateCallbackHandler callbackHandler=getCallbackHandler(handler); @AT@ 3438 @LENGTH@ 45
---------INS SimpleName@@callbackHandler @TO@ VariableDeclarationFragment@@callbackHandler=getCallbackHandler(handler) @AT@ 3438 @LENGTH@ 15
---------INS MethodInvocation@@getCallbackHandler(handler) @TO@ VariableDeclarationFragment@@callbackHandler=getCallbackHandler(handler) @AT@ 3456 @LENGTH@ 27
------------INS SimpleName@@MethodName:getCallbackHandler:[handler] @TO@ MethodInvocation@@getCallbackHandler(handler) @AT@ 3456 @LENGTH@ 27
---------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:getCallbackHandler:[handler] @AT@ 3475 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:StateParser.parse(str,callbackHandler,initialState) @TO@ MethodDeclaration@@public, static, void, MethodName:parse, String str, final CommandLineParser.CallbackHandler handler, ParsingState initialState, CommandFormatException,  @AT@ 3493 @LENGTH@ 54
------INS MethodInvocation@@StateParser.parse(str,callbackHandler,initialState) @TO@ ExpressionStatement@@MethodInvocation:StateParser.parse(str,callbackHandler,initialState) @AT@ 3493 @LENGTH@ 53
---------INS SimpleName@@Name:StateParser @TO@ MethodInvocation@@StateParser.parse(str,callbackHandler,initialState) @AT@ 3493 @LENGTH@ 11
---------INS SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @TO@ MethodInvocation@@StateParser.parse(str,callbackHandler,initialState) @AT@ 3505 @LENGTH@ 41
------------INS SimpleName@@str @TO@ SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @AT@ 3511 @LENGTH@ 3
------------INS SimpleName@@callbackHandler @TO@ SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @AT@ 3516 @LENGTH@ 15
------------INS SimpleName@@initialState @TO@ SimpleName@@MethodName:parse:[str, callbackHandler, initialState] @AT@ 3533 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 4090 @LENGTH@ 388
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 4178 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4178 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4184 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4191 @LENGTH@ 11


UPD Block@@ElseBody:if (key.equals("$ne")) {  value=convertId(value);} else if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ElseBody:if (key.equals("$ne")) {  value=convertId(value);} else if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3387 @LENGTH@ 188
---UPD IfStatement@@if (key.equals("$ne")) {  value=convertId(value);} else if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (key.equals("$ne")) {  value=convertId(value);} else if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3387 @LENGTH@ 188
------UPD Block@@ElseBody:if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ElseBody:if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---UPD IfStatement@@if (key.equals("$ne")) {  value=convertId(value);} else if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (key.equals("$ne")) {  value=convertId(value);} else if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3387 @LENGTH@ 188
------UPD Block@@ElseBody:if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ElseBody:if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9
---------UPD IfStatement@@if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ if (value instanceof DBObject) {  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3452 @LENGTH@ 123
------------UPD Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @TO@ ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  continue;} @AT@ 3483 @LENGTH@ 92
---------------DEL ReturnStatement@@SimpleName:newDbo @AT@ 3556 @LENGTH@ 14
------------------DEL SimpleName@@newDbo @AT@ 3563 @LENGTH@ 6
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  newDbo.put(newKey,getMappedObject((DBObject)value,entity));  return newDbo;} @AT@ 3556 @LENGTH@ 9


UPD IfStatement@@if (exchange.getUnitOfWork() == null) {  final UnitOfWork uow=createUnitOfWork(exchange);  exchange.setUnitOfWork(uow);  try {    uow.start();  } catch (  Exception e) {    callback.done(true);    exchange.setException(e);    return true;  }  if (routeContext != null) {    processor=new RouteContextProcessor(routeContext,processor);  }  Object synchronous=exchange.removeProperty(Exchange.UNIT_OF_WORK_PROCESS_SYNC);  if (synchronous != null) {    return processSync(exchange,callback,uow);  } else {    return processAsync(exchange,callback,uow);  }} else {  return processor.process(exchange,callback);} @TO@ if (exchange.getUnitOfWork() == null) {  final UnitOfWork uow=createUnitOfWork(exchange);  exchange.setUnitOfWork(uow);  try {    uow.start();  } catch (  Exception e) {    callback.done(true);    exchange.setException(e);    return true;  }  Object synchronous=exchange.removeProperty(Exchange.UNIT_OF_WORK_PROCESS_SYNC);  if (synchronous != null) {    return processSync(exchange,callback,uow);  } else {    return processAsync(exchange,callback,uow);  }} else {  return processor.process(exchange,callback);} @AT@ 3261 @LENGTH@ 1440
---UPD Block@@ThenBody:{  final UnitOfWork uow=createUnitOfWork(exchange);  exchange.setUnitOfWork(uow);  try {    uow.start();  } catch (  Exception e) {    callback.done(true);    exchange.setException(e);    return true;  }  if (routeContext != null) {    processor=new RouteContextProcessor(routeContext,processor);  }  Object synchronous=exchange.removeProperty(Exchange.UNIT_OF_WORK_PROCESS_SYNC);  if (synchronous != null) {    return processSync(exchange,callback,uow);  } else {    return processAsync(exchange,callback,uow);  }} @TO@ ThenBody:{  final UnitOfWork uow=createUnitOfWork(exchange);  exchange.setUnitOfWork(uow);  try {    uow.start();  } catch (  Exception e) {    callback.done(true);    exchange.setException(e);    return true;  }  Object synchronous=exchange.removeProperty(Exchange.UNIT_OF_WORK_PROCESS_SYNC);  if (synchronous != null) {    return processSync(exchange,callback,uow);  } else {    return processAsync(exchange,callback,uow);  }} @AT@ 3299 @LENGTH@ 1181


DEL VariableDeclarationStatement@@ModelNode postHandlers=null; @AT@ 11808 @LENGTH@ 30
---DEL SimpleType@@ModelNode @AT@ 11808 @LENGTH@ 9
---DEL VariableDeclarationFragment@@postHandlers=null @AT@ 11818 @LENGTH@ 19
------DEL SimpleName@@postHandlers @AT@ 11818 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 11833 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,false) @TO@ MethodInvocation:controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,rollbackOnRuntimeFailure) @AT@ 8541 @LENGTH@ 131
---UPD MethodInvocation@@controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,false) @TO@ controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,rollbackOnRuntimeFailure) @AT@ 8548 @LENGTH@ 123
------UPD SimpleName@@MethodName:boot:[bootOperations, OperationMessageHandler.logging, ModelController.OperationTransactionControl.COMMIT, false] @TO@ MethodName:boot:[bootOperations, OperationMessageHandler.logging, ModelController.OperationTransactionControl.COMMIT, rollbackOnRuntimeFailure] @AT@ 8559 @LENGTH@ 112
---------INS SimpleName@@rollbackOnRuntimeFailure @TO@ SimpleName@@MethodName:boot:[bootOperations, OperationMessageHandler.logging, ModelController.OperationTransactionControl.COMMIT, false] @AT@ 8665 @LENGTH@ 24
---------DEL BooleanLiteral@@false @AT@ 8665 @LENGTH@ 5


UPD ReturnStatement@@InfixExpression:getScheme() + "//" + getAddress().toString()+ getURI()+ (params != null ? "?" + params : "") @TO@ InfixExpression:getScheme() + "//" + getAddress().toString()+ getRequestURI()+ (params != null ? "?" + params : "") @AT@ 5244 @LENGTH@ 102
---UPD InfixExpression@@getScheme() + "//" + getAddress().toString()+ getURI()+ (params != null ? "?" + params : "") @TO@ getScheme() + "//" + getAddress().toString()+ getRequestURI()+ (params != null ? "?" + params : "") @AT@ 5251 @LENGTH@ 94
------UPD MethodInvocation@@MethodName:getURI:[] @TO@ MethodName:getRequestURI:[] @AT@ 5298 @LENGTH@ 8


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1697 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1697 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1707 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1715 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1731 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1731 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1737 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1754 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1773 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1780 @LENGTH@ 4


UPD TryStatement@@try {  String node0=System.getProperty("node0","not-defined");  URL url=new URL("http://" + node0 + ":8080/jbws3207");  System.out.println("Reading response from " + url + ":");  conn=url.openConnection();  conn.setDoInput(true);  conn.setDoOutput(true);  osw=new OutputStreamWriter(conn.getOutputStream());  osw.write(message);  osw.flush();  in=new BufferedInputStream(conn.getInputStream());  int i=in.read();  while (i != -1) {    System.out.print((char)i);    i=in.read();  }  System.out.println("");}  finally {  safeClose(osw);  safeClose(in);} @TO@ try {  URL url=new URL("http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207");  System.out.println("Reading response from " + url + ":");  conn=url.openConnection();  conn.setDoInput(true);  conn.setDoOutput(true);  osw=new OutputStreamWriter(conn.getOutputStream());  osw.write(message);  osw.flush();  in=new BufferedInputStream(conn.getInputStream());  int i=in.read();  while (i != -1) {    System.out.print((char)i);    i=in.read();  }  System.out.println("");}  finally {  safeClose(osw);  safeClose(in);} @AT@ 5202 @LENGTH@ 786
---DEL VariableDeclarationStatement@@String node0=System.getProperty("node0","not-defined"); @AT@ 5220 @LENGTH@ 58
------DEL SimpleType@@String @AT@ 5220 @LENGTH@ 6
------DEL VariableDeclarationFragment@@node0=System.getProperty("node0","not-defined") @AT@ 5227 @LENGTH@ 50
---------DEL SimpleName@@node0 @AT@ 5227 @LENGTH@ 5
---------DEL MethodInvocation@@System.getProperty("node0","not-defined") @AT@ 5235 @LENGTH@ 42
------------DEL SimpleName@@Name:System @AT@ 5235 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["node0", "not-defined"] @AT@ 5242 @LENGTH@ 35
---------------DEL StringLiteral@@"node0" @AT@ 5254 @LENGTH@ 7
---------------DEL StringLiteral@@"not-defined" @AT@ 5263 @LENGTH@ 13
---UPD VariableDeclarationStatement@@URL url=new URL("http://" + node0 + ":8080/jbws3207"); @TO@ URL url=new URL("http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207"); @AT@ 5291 @LENGTH@ 56
------UPD VariableDeclarationFragment@@url=new URL("http://" + node0 + ":8080/jbws3207") @TO@ url=new URL("http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207") @AT@ 5295 @LENGTH@ 51
---------UPD ClassInstanceCreation@@URL["http://" + node0 + ":8080/jbws3207"] @TO@ URL["http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207"] @AT@ 5301 @LENGTH@ 45
------------UPD InfixExpression@@"http://" + node0 + ":8080/jbws3207" @TO@ "http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207" @AT@ 5309 @LENGTH@ 36
---------------INS MethodInvocation@@TestSuiteEnvironment.getServerAddress() @TO@ InfixExpression@@"http://" + node0 + ":8080/jbws3207" @AT@ 5264 @LENGTH@ 39
------------------INS SimpleName@@Name:TestSuiteEnvironment @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 5264 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 5285 @LENGTH@ 18
---------------DEL SimpleName@@node0 @AT@ 5321 @LENGTH@ 5


UPD IfStatement@@if (buffer == null) {  candidates.add("/");  return 1;} @TO@ if (buffer == null) {  candidates.add("/");  return 1;} else if (!buffer.startsWith("/")) {  return 0;} @AT@ 1235 @LENGTH@ 86
---INS Block@@ElseBody:if (!buffer.startsWith("/")) {  return 0;} @TO@ IfStatement@@if (buffer == null) {  candidates.add("/");  return 1;} @AT@ 1327 @LENGTH@ 62
------INS IfStatement@@if (!buffer.startsWith("/")) {  return 0;} @TO@ Block@@ElseBody:if (!buffer.startsWith("/")) {  return 0;} @AT@ 1327 @LENGTH@ 62
---------INS PrefixExpression@@!buffer.startsWith("/") @TO@ IfStatement@@if (!buffer.startsWith("/")) {  return 0;} @AT@ 1331 @LENGTH@ 23
------------INS Operator@@! @TO@ PrefixExpression@@!buffer.startsWith("/") @AT@ 1331 @LENGTH@ 1
------------INS MethodInvocation@@buffer.startsWith("/") @TO@ PrefixExpression@@!buffer.startsWith("/") @AT@ 1332 @LENGTH@ 22
---------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.startsWith("/") @AT@ 1332 @LENGTH@ 6
---------------INS SimpleName@@MethodName:startsWith:["/"] @TO@ MethodInvocation@@buffer.startsWith("/") @AT@ 1339 @LENGTH@ 15
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:startsWith:["/"] @AT@ 1350 @LENGTH@ 3
---------INS Block@@ThenBody:{  return 0;} @TO@ IfStatement@@if (!buffer.startsWith("/")) {  return 0;} @AT@ 1356 @LENGTH@ 33
------------INS ReturnStatement@@NumberLiteral:0 @TO@ Block@@ThenBody:{  return 0;} @AT@ 1370 @LENGTH@ 9
---------------INS NumberLiteral@@0 @TO@ ReturnStatement@@NumberLiteral:0 @AT@ 1377 @LENGTH@ 1


UPD TypeDeclaration@@[public]XQueryPredicateFilterTest, CamelTestSupport @TO@ [@Ignore("Fixed me later"), public]XQueryPredicateFilterTest, CamelTestSupport @AT@ 1190 @LENGTH@ 1230
---INS SingleMemberAnnotation@@@Ignore("Fixed me later") @TO@ TypeDeclaration@@[public]XQueryPredicateFilterTest, CamelTestSupport @AT@ 1215 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @TO@ MethodInvocation:context.getFailureDescription().set(String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @AT@ 6400 @LENGTH@ 294
---UPD MethodInvocation@@context.getFailureDescription().set(String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @TO@ context.getFailureDescription().set(String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @AT@ 6400 @LENGTH@ 293
------UPD SimpleName@@MethodName:set:[String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))] @TO@ MethodName:set:[String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))] @AT@ 6432 @LENGTH@ 261
---------UPD MethodInvocation@@String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR))) @TO@ String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR))) @AT@ 6436 @LENGTH@ 256
------------UPD SimpleName@@MethodName:format:["Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller", operation.get(OP).asString(), PathAddress.pathAddress(operation.get(OP_ADDR))] @TO@ MethodName:format:["Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller", operation.get(OP).asString(), PathAddress.pathAddress(operation.get(OP_ADDR))] @AT@ 6443 @LENGTH@ 249
---------------UPD InfixExpression@@"Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller" @TO@ "Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller" @AT@ 6450 @LENGTH@ 146
------------------UPD StringLiteral@@"Operation %s for address %s can only handled by the " @TO@ "Operation %s for address %s can only be handled by the " @AT@ 6450 @LENGTH@ 54


UPD TypeDeclaration@@[public]EntityBeanAllowedMethodsInformation, SessionBeanAllowedMethodsInformation @TO@ [public]EntityBeanAllowedMethodsInformation, AllowedMethodsInformation @AT@ 375 @LENGTH@ 564
---UPD SimpleType@@SessionBeanAllowedMethodsInformation @TO@ AllowedMethodsInformation @AT@ 432 @LENGTH@ 36


UPD IfStatement@@if (result.size() > 1 || (result.size() == 1 && result.values().iterator().next().size() > 1)) {  logMultipleValidInterfaces(result);  result=Collections.emptyMap();} @TO@ if (pruned.size() > 1 || (pruned.size() == 1 && pruned.values().iterator().next().size() > 1)) {  logMultipleValidInterfaces(pruned);  result=Collections.emptyMap();} @AT@ 3385 @LENGTH@ 199
---UPD InfixExpression@@result.size() > 1 || (result.size() == 1 && result.values().iterator().next().size() > 1) @TO@ pruned.size() > 1 || (pruned.size() == 1 && pruned.values().iterator().next().size() > 1) @AT@ 3389 @LENGTH@ 89
------UPD ParenthesizedExpression@@(result.size() == 1 && result.values().iterator().next().size() > 1) @TO@ (pruned.size() == 1 && pruned.values().iterator().next().size() > 1) @AT@ 3410 @LENGTH@ 68
---------UPD InfixExpression@@result.size() == 1 && result.values().iterator().next().size() > 1 @TO@ pruned.size() == 1 && pruned.values().iterator().next().size() > 1 @AT@ 3411 @LENGTH@ 66
------------UPD InfixExpression@@result.size() == 1 @TO@ pruned.size() == 1 @AT@ 3411 @LENGTH@ 18
---------------UPD MethodInvocation@@result.size() @TO@ pruned.size() @AT@ 3411 @LENGTH@ 13
------------------UPD SimpleName@@Name:result @TO@ Name:pruned @AT@ 3411 @LENGTH@ 6
------------UPD InfixExpression@@result.values().iterator().next().size() > 1 @TO@ pruned.values().iterator().next().size() > 1 @AT@ 3433 @LENGTH@ 44
---------------UPD MethodInvocation@@result.values().iterator().next().size() @TO@ pruned.values().iterator().next().size() @AT@ 3433 @LENGTH@ 40
------------------UPD SimpleName@@Name:result @TO@ Name:pruned @AT@ 3433 @LENGTH@ 6
------INS InfixExpression@@pruned.size() > 1 @TO@ InfixExpression@@result.size() > 1 || (result.size() == 1 && result.values().iterator().next().size() > 1) @AT@ 3531 @LENGTH@ 17
---------INS MethodInvocation@@pruned.size() @TO@ InfixExpression@@pruned.size() > 1 @AT@ 3531 @LENGTH@ 13
------------INS SimpleName@@Name:pruned @TO@ MethodInvocation@@pruned.size() @AT@ 3531 @LENGTH@ 6
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@pruned.size() @AT@ 3538 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@pruned.size() > 1 @AT@ 3544 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@pruned.size() > 1 @AT@ 3547 @LENGTH@ 1
---UPD Block@@ThenBody:{  logMultipleValidInterfaces(result);  result=Collections.emptyMap();} @TO@ ThenBody:{  logMultipleValidInterfaces(pruned);  result=Collections.emptyMap();} @AT@ 3480 @LENGTH@ 104
------UPD ExpressionStatement@@MethodInvocation:logMultipleValidInterfaces(result) @TO@ MethodInvocation:logMultipleValidInterfaces(pruned) @AT@ 3494 @LENGTH@ 35
---------UPD MethodInvocation@@logMultipleValidInterfaces(result) @TO@ logMultipleValidInterfaces(pruned) @AT@ 3494 @LENGTH@ 34
------------UPD SimpleName@@MethodName:logMultipleValidInterfaces:[result] @TO@ MethodName:logMultipleValidInterfaces:[pruned] @AT@ 3494 @LENGTH@ 34
---------------UPD SimpleName@@result @TO@ pruned @AT@ 3521 @LENGTH@ 6


INS IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @TO@ MethodDeclaration@@protected, void, MethodName:manageTransaction, Throwable,  @AT@ 2414 @LENGTH@ 365
---INS InfixExpression@@transaction == null @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2417 @LENGTH@ 19
------INS SimpleName@@transaction @TO@ InfixExpression@@transaction == null @AT@ 2417 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@transaction == null @AT@ 2428 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@transaction == null @AT@ 2432 @LENGTH@ 4
---INS Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2438 @LENGTH@ 341
------INS IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2452 @LENGTH@ 297
---------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2455 @LENGTH@ 49
------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 2455 @LENGTH@ 32
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 2488 @LENGTH@ 16
---------INS Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2506 @LENGTH@ 243
------------INS ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2602 @LENGTH@ 133
---------------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 2602 @LENGTH@ 132
------------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 2602 @LENGTH@ 32
------------------INS SimpleName@@MethodName:debug:["Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server"] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 2635 @LENGTH@ 99
---------------------INS InfixExpression@@"Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server" @TO@ SimpleName@@MethodName:debug:["Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server"] @AT@ 2641 @LENGTH@ 92
------------------------INS StringLiteral@@"Not forgetting transaction " @TO@ InfixExpression@@"Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2641 @LENGTH@ 29
------------------------INS Operator@@+ @TO@ InfixExpression@@"Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2670 @LENGTH@ 1
------------------------INS FieldAccess@@this.xidTransactionID @TO@ InfixExpression@@"Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2673 @LENGTH@ 21
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.xidTransactionID @AT@ 2673 @LENGTH@ 4
---------------------------INS SimpleName@@xidTransactionID @TO@ FieldAccess@@this.xidTransactionID @AT@ 2678 @LENGTH@ 16
------------------------INS StringLiteral@@" as is was not found on the server" @TO@ InfixExpression@@"Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2697 @LENGTH@ 36
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not forgetting transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2762 @LENGTH@ 7


INS ExpressionStatement@@Assignment:this.id=(existingSession != null) ? existingSession : component.getCache().createIdentifier() @TO@ MethodDeclaration@@protected, voidMethodName:StatefulSessionComponentInstance, final StatefulSessionComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, final Map<Method,Interceptor> methodInterceptors, final InterceptorFactoryContext factoryContext,  @AT@ 3068 @LENGTH@ 96
---INS Assignment@@this.id=(existingSession != null) ? existingSession : component.getCache().createIdentifier() @TO@ ExpressionStatement@@Assignment:this.id=(existingSession != null) ? existingSession : component.getCache().createIdentifier() @AT@ 3068 @LENGTH@ 95
------INS ConditionalExpression@@(existingSession != null) ? existingSession : component.getCache().createIdentifier() @TO@ Assignment@@this.id=(existingSession != null) ? existingSession : component.getCache().createIdentifier() @AT@ 3078 @LENGTH@ 85
---------INS ParenthesizedExpression@@(existingSession != null) @TO@ ConditionalExpression@@(existingSession != null) ? existingSession : component.getCache().createIdentifier() @AT@ 3078 @LENGTH@ 25
------------INS InfixExpression@@existingSession != null @TO@ ParenthesizedExpression@@(existingSession != null) @AT@ 3079 @LENGTH@ 23
---------------INS SimpleName@@existingSession @TO@ InfixExpression@@existingSession != null @AT@ 3079 @LENGTH@ 15
---------------INS Operator@@!= @TO@ InfixExpression@@existingSession != null @AT@ 3094 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@existingSession != null @AT@ 3098 @LENGTH@ 4
---------INS SimpleName@@existingSession @TO@ ConditionalExpression@@(existingSession != null) ? existingSession : component.getCache().createIdentifier() @AT@ 3106 @LENGTH@ 15
---------INS MethodInvocation@@component.getCache().createIdentifier() @TO@ ConditionalExpression@@(existingSession != null) ? existingSession : component.getCache().createIdentifier() @AT@ 3124 @LENGTH@ 39
------------MOV MethodInvocation@@MethodName:getCache:[] @TO@ MethodInvocation@@component.getCache().createIdentifier() @AT@ 3522 @LENGTH@ 20
------------MOV SimpleName@@Name:component @TO@ MethodInvocation@@component.getCache().createIdentifier() @AT@ 3522 @LENGTH@ 9
------------MOV SimpleName@@MethodName:hasAffinity:[id] @TO@ MethodInvocation@@component.getCache().createIdentifier() @AT@ 3543 @LENGTH@ 15
------MOV FieldAccess@@this.id @TO@ Assignment@@this.id=(existingSession != null) ? existingSession : component.getCache().createIdentifier() @AT@ 3111 @LENGTH@ 7
------MOV Operator@@= @TO@ Assignment@@this.id=(existingSession != null) ? existingSession : component.getCache().createIdentifier() @AT@ 3118 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:this.conversionService.removeConvertible(Object.class,String.class) @AT@ 2290 @LENGTH@ 69
---DEL MethodInvocation@@this.conversionService.removeConvertible(Object.class,String.class) @AT@ 2290 @LENGTH@ 68
------DEL FieldAccess@@this.conversionService @AT@ 2290 @LENGTH@ 22
---------DEL ThisExpression@@this @AT@ 2290 @LENGTH@ 4
---------DEL SimpleName@@conversionService @AT@ 2295 @LENGTH@ 17
------DEL SimpleName@@MethodName:removeConvertible:[Object.class, String.class] @AT@ 2313 @LENGTH@ 45
---------DEL TypeLiteral@@Object.class @AT@ 2331 @LENGTH@ 12
---------DEL TypeLiteral@@String.class @AT@ 2345 @LENGTH@ 12


UPD MethodDeclaration@@TransactionManager, MethodName:getTransactionManager,  @TO@ Value<TransactionManager>, MethodName:getTransactionManager,  @AT@ 1747 @LENGTH@ 24
---DEL SimpleType@@TransactionManager @AT@ 1728 @LENGTH@ 18
---INS ParameterizedType@@Value<TransactionManager> @TO@ MethodDeclaration@@TransactionManager, MethodName:getTransactionManager,  @AT@ 1762 @LENGTH@ 25
------INS SimpleType@@Value @TO@ ParameterizedType@@Value<TransactionManager> @AT@ 1762 @LENGTH@ 5
------INS SimpleType@@TransactionManager @TO@ ParameterizedType@@Value<TransactionManager> @AT@ 1768 @LENGTH@ 18


INS IfStatement@@if (len == 0) {  return 0;} @TO@ MethodDeclaration@@public, int, MethodName:read, byte[] b, int off, int len, IOException,  @AT@ 4188 @LENGTH@ 85
---INS InfixExpression@@len == 0 @TO@ IfStatement@@if (len == 0) {  return 0;} @AT@ 4192 @LENGTH@ 8
------INS SimpleName@@len @TO@ InfixExpression@@len == 0 @AT@ 4192 @LENGTH@ 3
------INS Operator@@== @TO@ InfixExpression@@len == 0 @AT@ 4195 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@len == 0 @AT@ 4199 @LENGTH@ 1
---INS Block@@ThenBody:{  return 0;} @TO@ IfStatement@@if (len == 0) {  return 0;} @AT@ 4202 @LENGTH@ 71
------INS ReturnStatement@@NumberLiteral:0 @TO@ Block@@ThenBody:{  return 0;} @AT@ 4216 @LENGTH@ 9
---------INS NumberLiteral@@0 @TO@ ReturnStatement@@NumberLiteral:0 @AT@ 4223 @LENGTH@ 1


UPD VariableDeclarationStatement@@final CommandContext ctx=CommandContextFactory.getInstance().newCommandContext(); @TO@ final CommandContext ctx=CLITestUtil.getCommandContext(); @AT@ 4353 @LENGTH@ 83
---UPD VariableDeclarationFragment@@ctx=CommandContextFactory.getInstance().newCommandContext() @TO@ ctx=CLITestUtil.getCommandContext() @AT@ 4374 @LENGTH@ 61
------UPD MethodInvocation@@CommandContextFactory.getInstance().newCommandContext() @TO@ CLITestUtil.getCommandContext() @AT@ 4380 @LENGTH@ 55
---------DEL MethodInvocation@@MethodName:getInstance:[] @AT@ 4380 @LENGTH@ 35
---------UPD SimpleName@@Name:CommandContextFactory @TO@ Name:CLITestUtil @AT@ 4380 @LENGTH@ 21
---------UPD SimpleName@@MethodName:newCommandContext:[] @TO@ MethodName:getCommandContext:[] @AT@ 4416 @LENGTH@ 19


UPD Block@@ThenBody:{  BasicBSONList conditions=(BasicBSONList)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<Object> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),entity));  }  value=newConditions;} @TO@ ThenBody:{  Iterable<?> conditions=(Iterable<?>)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<?> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),entity));  }  value=newConditions;} @AT@ 3073 @LENGTH@ 317
---UPD VariableDeclarationStatement@@BasicBSONList conditions=(BasicBSONList)value; @TO@ Iterable<?> conditions=(Iterable<?>)value; @AT@ 3095 @LENGTH@ 49
------DEL SimpleType@@BasicBSONList @AT@ 3095 @LENGTH@ 13
------INS ParameterizedType@@Iterable<?> @TO@ VariableDeclarationStatement@@BasicBSONList conditions=(BasicBSONList)value; @AT@ 3095 @LENGTH@ 11
---------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<?> @AT@ 3095 @LENGTH@ 8
---------INS WildcardType@@? @TO@ ParameterizedType@@Iterable<?> @AT@ 3104 @LENGTH@ 1
------UPD VariableDeclarationFragment@@conditions=(BasicBSONList)value @TO@ conditions=(Iterable<?>)value @AT@ 3109 @LENGTH@ 34
---------UPD CastExpression@@(BasicBSONList)value @TO@ (Iterable<?>)value @AT@ 3122 @LENGTH@ 21
------------INS ParameterizedType@@Iterable<?> @TO@ CastExpression@@(BasicBSONList)value @AT@ 3121 @LENGTH@ 11
---------------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<?> @AT@ 3121 @LENGTH@ 8
---------------INS WildcardType@@? @TO@ ParameterizedType@@Iterable<?> @AT@ 3130 @LENGTH@ 1
------------INS ParameterizedType@@Iterable<?> @TO@ CastExpression@@(BasicBSONList)value @AT@ 3121 @LENGTH@ 11
---------------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<?> @AT@ 3121 @LENGTH@ 8
---------------INS WildcardType@@? @TO@ ParameterizedType@@Iterable<?> @AT@ 3130 @LENGTH@ 1
------------DEL SimpleType@@BasicBSONList @AT@ 3123 @LENGTH@ 13
---UPD VariableDeclarationStatement@@Iterator<Object> iter=conditions.iterator(); @TO@ Iterator<?> iter=conditions.iterator(); @AT@ 3204 @LENGTH@ 46
------UPD ParameterizedType@@Iterator<Object> @TO@ Iterator<?> @AT@ 3204 @LENGTH@ 16
---------INS WildcardType@@? @TO@ ParameterizedType@@Iterator<Object> @AT@ 3209 @LENGTH@ 1
---------DEL SimpleType@@Object @AT@ 3213 @LENGTH@ 6


INS MethodDeclaration@@OperationFailedException, MethodName:cacheStoreAlreadyDefined, String existingStoreName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]InfinispanMessages,  @AT@ 5837 @LENGTH@ 51
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:cacheStoreAlreadyDefined, String existingStoreName,  @AT@ 5812 @LENGTH@ 24
---INS SimpleName@@MethodName:cacheStoreAlreadyDefined @TO@ MethodDeclaration@@OperationFailedException, MethodName:cacheStoreAlreadyDefined, String existingStoreName,  @AT@ 5837 @LENGTH@ 24
---INS SingleVariableDeclaration@@String existingStoreName @TO@ MethodDeclaration@@OperationFailedException, MethodName:cacheStoreAlreadyDefined, String existingStoreName,  @AT@ 5862 @LENGTH@ 24
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String existingStoreName @AT@ 5862 @LENGTH@ 6
------INS SimpleName@@existingStoreName @TO@ SingleVariableDeclaration@@String existingStoreName @AT@ 5869 @LENGTH@ 17


INS TryStatement@@try {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  final Object other=context.getParameters()[0];  if (!componentView.getViewClass().isAssignableFrom(other.getClass())) {    return false;  }  if (context.getMethod().getParameterTypes()[0].equals(EJBLocalObject.class)) {    return ((EJBLocalObject)other).getPrimaryKey().equals(primaryKey);  } else {    return ((EJBObject)other).getPrimaryKey().equals(primaryKey);  }}  finally {  instance.getComponent().getCache().release(instance,true);} @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 2852 @LENGTH@ 744
---MOV VariableDeclarationStatement@@final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY); @TO@ TryStatement@@try {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  final Object other=context.getParameters()[0];  if (!componentView.getViewClass().isAssignableFrom(other.getClass())) {    return false;  }  if (context.getMethod().getParameterTypes()[0].equals(EJBLocalObject.class)) {    return ((EJBLocalObject)other).getPrimaryKey().equals(primaryKey);  } else {    return ((EJBObject)other).getPrimaryKey().equals(primaryKey);  }}  finally {  instance.getComponent().getCache().release(instance,true);} @AT@ 2593 @LENGTH@ 94
---MOV VariableDeclarationStatement@@final Object other=context.getParameters()[0]; @TO@ TryStatement@@try {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  final Object other=context.getParameters()[0];  if (!componentView.getViewClass().isAssignableFrom(other.getClass())) {    return false;  }  if (context.getMethod().getParameterTypes()[0].equals(EJBLocalObject.class)) {    return ((EJBLocalObject)other).getPrimaryKey().equals(primaryKey);  } else {    return ((EJBObject)other).getPrimaryKey().equals(primaryKey);  }}  finally {  instance.getComponent().getCache().release(instance,true);} @AT@ 2700 @LENGTH@ 48
---MOV IfStatement@@if (!componentView.getViewClass().isAssignableFrom(other.getClass())) {  return false;} @TO@ TryStatement@@try {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  final Object other=context.getParameters()[0];  if (!componentView.getViewClass().isAssignableFrom(other.getClass())) {    return false;  }  if (context.getMethod().getParameterTypes()[0].equals(EJBLocalObject.class)) {    return ((EJBLocalObject)other).getPrimaryKey().equals(primaryKey);  } else {    return ((EJBObject)other).getPrimaryKey().equals(primaryKey);  }}  finally {  instance.getComponent().getCache().release(instance,true);} @AT@ 2761 @LENGTH@ 114
---MOV IfStatement@@if (context.getMethod().getParameterTypes()[0].equals(EJBLocalObject.class)) {  return ((EJBLocalObject)other).getPrimaryKey().equals(primaryKey);} else {  return ((EJBObject)other).getPrimaryKey().equals(primaryKey);} @TO@ TryStatement@@try {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  final Object other=context.getParameters()[0];  if (!componentView.getViewClass().isAssignableFrom(other.getClass())) {    return false;  }  if (context.getMethod().getParameterTypes()[0].equals(EJBLocalObject.class)) {    return ((EJBLocalObject)other).getPrimaryKey().equals(primaryKey);  } else {    return ((EJBObject)other).getPrimaryKey().equals(primaryKey);  }}  finally {  instance.getComponent().getCache().release(instance,true);} @AT@ 2888 @LENGTH@ 276
---INS Block@@FinallyBody:{  instance.getComponent().getCache().release(instance,true);} @TO@ TryStatement@@try {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  final Object other=context.getParameters()[0];  if (!componentView.getViewClass().isAssignableFrom(other.getClass())) {    return false;  }  if (context.getMethod().getParameterTypes()[0].equals(EJBLocalObject.class)) {    return ((EJBLocalObject)other).getPrimaryKey().equals(primaryKey);  } else {    return ((EJBObject)other).getPrimaryKey().equals(primaryKey);  }}  finally {  instance.getComponent().getCache().release(instance,true);} @AT@ 3505 @LENGTH@ 91
------INS ExpressionStatement@@MethodInvocation:instance.getComponent().getCache().release(instance,true) @TO@ Block@@FinallyBody:{  instance.getComponent().getCache().release(instance,true);} @AT@ 3523 @LENGTH@ 59
---------INS MethodInvocation@@instance.getComponent().getCache().release(instance,true) @TO@ ExpressionStatement@@MethodInvocation:instance.getComponent().getCache().release(instance,true) @AT@ 3523 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:getCache:[] @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 3523 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 3523 @LENGTH@ 23
------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 3523 @LENGTH@ 8
------------INS SimpleName@@MethodName:release:[instance, true] @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 3558 @LENGTH@ 23
---------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 3566 @LENGTH@ 8
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 3576 @LENGTH@ 4


UPD TryStatement@@try {  String script=buildInstallAndStartScript(options.name(containerName));  options.getCreationStateListener().onStateChange(String.format("Installing fabric agent on container %s. It may take a while...",containerName));  ExecResponse response=null;  boolean doRetry=true;  for (int i=0; i < 5 && doRetry; i++) {    try {      if (credentials != null) {        response=computeService.runScriptOnNode(id,script,templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));      } else {        response=computeService.runScriptOnNode(id,script,templateOptions);      }      doRetry=false;    } catch (    AuthorizationException ex) {      doRetry=true;    }catch (    SshException ex) {      doRetry=true;    }  }  if (doRetry) {    throw new Exception("Failed to connect to the container via ssh.");  }  if (response != null && response.getOutput() != null) {    if (response.getOutput().contains(ContainerProviderUtils.FAILURE_PREFIX)) {      jCloudsContainerMetadata.setFailure(new Exception(ContainerProviderUtils.parseScriptFailure(response.getOutput())));    }    String overridenResolverValue=ContainerProviderUtils.parseResolverOverride(response.getOutput());    if (overridenResolverValue != null) {      options.setResolver(overridenResolverValue);      options.getCreationStateListener().onStateChange("Overriding resolver to " + overridenResolverValue + ".");    }  } else {    jCloudsContainerMetadata.setFailure(new Exception("No response received for fabric install script."));  }} catch (Throwable t) {  jCloudsContainerMetadata.setFailure(t);} @TO@ try {  String script=buildInstallAndStartScript(options.name(containerName));  options.getCreationStateListener().onStateChange(String.format("Installing fabric agent on container %s. It may take a while...",containerName));  ExecResponse response=null;  try {    if (credentials != null) {      response=computeService.runScriptOnNode(id,script,templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));    } else {      response=computeService.runScriptOnNode(id,script,templateOptions);    }  } catch (  AuthorizationException ex) {    throw new Exception("Failed to connect to the container via ssh.");  }catch (  SshException ex) {    throw new Exception("Failed to connect to the container via ssh.");  }  if (response != null && response.getOutput() != null) {    if (response.getOutput().contains(ContainerProviderUtils.FAILURE_PREFIX)) {      jCloudsContainerMetadata.setFailure(new Exception(ContainerProviderUtils.parseScriptFailure(response.getOutput())));    }    String overridenResolverValue=ContainerProviderUtils.parseResolverOverride(response.getOutput());    if (overridenResolverValue != null) {      options.setResolver(overridenResolverValue);      options.getCreationStateListener().onStateChange("Overriding resolver to " + overridenResolverValue + ".");    }  } else {    jCloudsContainerMetadata.setFailure(new Exception("No response received for fabric install script."));  }} catch (Throwable t) {  jCloudsContainerMetadata.setFailure(t);} @AT@ 14753 @LENGTH@ 2860
---DEL VariableDeclarationStatement@@boolean doRetry=true; @AT@ 15105 @LENGTH@ 23
------DEL PrimitiveType@@boolean @AT@ 15105 @LENGTH@ 7
------DEL VariableDeclarationFragment@@doRetry=true @AT@ 15113 @LENGTH@ 14
---------DEL SimpleName@@doRetry @AT@ 15113 @LENGTH@ 7
---------DEL BooleanLiteral@@true @AT@ 15123 @LENGTH@ 4
---DEL ForStatement@@for (int i=0; i < 5 && doRetry; i++) {  try {    if (credentials != null) {      response=computeService.runScriptOnNode(id,script,templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));    } else {      response=computeService.runScriptOnNode(id,script,templateOptions);    }    doRetry=false;  } catch (  AuthorizationException ex) {    doRetry=true;  }catch (  SshException ex) {    doRetry=true;  }} @AT@ 15469 @LENGTH@ 802
------DEL VariableDeclarationExpression@@int i=0 @AT@ 15474 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 15474 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 15478 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 15478 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 15482 @LENGTH@ 1
------DEL InfixExpression@@i < 5 && doRetry @AT@ 15485 @LENGTH@ 16
---------DEL InfixExpression@@i < 5 @AT@ 15485 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 15485 @LENGTH@ 1
------------DEL Operator@@< @AT@ 15486 @LENGTH@ 1
------------DEL NumberLiteral@@5 @AT@ 15489 @LENGTH@ 1
---------DEL Operator@@&& @AT@ 15490 @LENGTH@ 2
---------DEL SimpleName@@doRetry @AT@ 15494 @LENGTH@ 7
------DEL PostfixExpression@@i++ @AT@ 15503 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 15503 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 15505 @LENGTH@ 2
---MOV TryStatement@@try {  if (credentials != null) {    response=computeService.runScriptOnNode(id,script,templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));  } else {    response=computeService.runScriptOnNode(id,script,templateOptions);  }  doRetry=false;} catch (AuthorizationException ex) {  doRetry=true;}catch (SshException ex) {  doRetry=true;} @TO@ TryStatement@@try {  String script=buildInstallAndStartScript(options.name(containerName));  options.getCreationStateListener().onStateChange(String.format("Installing fabric agent on container %s. It may take a while...",containerName));  ExecResponse response=null;  boolean doRetry=true;  for (int i=0; i < 5 && doRetry; i++) {    try {      if (credentials != null) {        response=computeService.runScriptOnNode(id,script,templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));      } else {        response=computeService.runScriptOnNode(id,script,templateOptions);      }      doRetry=false;    } catch (    AuthorizationException ex) {      doRetry=true;    }catch (    SshException ex) {      doRetry=true;    }  }  if (doRetry) {    throw new Exception("Failed to connect to the container via ssh.");  }  if (response != null && response.getOutput() != null) {    if (response.getOutput().contains(ContainerProviderUtils.FAILURE_PREFIX)) {      jCloudsContainerMetadata.setFailure(new Exception(ContainerProviderUtils.parseScriptFailure(response.getOutput())));    }    String overridenResolverValue=ContainerProviderUtils.parseResolverOverride(response.getOutput());    if (overridenResolverValue != null) {      options.setResolver(overridenResolverValue);      options.getCreationStateListener().onStateChange("Overriding resolver to " + overridenResolverValue + ".");    }  } else {    jCloudsContainerMetadata.setFailure(new Exception("No response received for fabric install script."));  }} catch (Throwable t) {  jCloudsContainerMetadata.setFailure(t);} @AT@ 15538 @LENGTH@ 707
------DEL ExpressionStatement@@Assignment:doRetry=false @AT@ 15981 @LENGTH@ 16
---------DEL Assignment@@doRetry=false @AT@ 15981 @LENGTH@ 15
------------DEL SimpleName@@doRetry @AT@ 15981 @LENGTH@ 7
------------DEL Operator@@= @AT@ 15988 @LENGTH@ 1
------------DEL BooleanLiteral@@false @AT@ 15991 @LENGTH@ 5
------UPD CatchClause@@catch (AuthorizationException ex) {  doRetry=true;} @TO@ catch (AuthorizationException ex) {  throw new Exception("Failed to connect to the container via ssh.");} @AT@ 16028 @LENGTH@ 113
---------INS ThrowStatement@@ClassInstanceCreation:new Exception("Failed to connect to the container via ssh.") @TO@ CatchClause@@catch (AuthorizationException ex) {  doRetry=true;} @AT@ 15586 @LENGTH@ 67
------------INS ClassInstanceCreation@@Exception["Failed to connect to the container via ssh."] @TO@ ThrowStatement@@ClassInstanceCreation:new Exception("Failed to connect to the container via ssh.") @AT@ 15592 @LENGTH@ 60
---------------INS New@@new @TO@ ClassInstanceCreation@@Exception["Failed to connect to the container via ssh."] @AT@ 15592 @LENGTH@ 3
---------------INS SimpleType@@Exception @TO@ ClassInstanceCreation@@Exception["Failed to connect to the container via ssh."] @AT@ 15596 @LENGTH@ 9
---------------INS StringLiteral@@"Failed to connect to the container via ssh." @TO@ ClassInstanceCreation@@Exception["Failed to connect to the container via ssh."] @AT@ 15606 @LENGTH@ 45
---------DEL ExpressionStatement@@Assignment:doRetry=true @AT@ 16096 @LENGTH@ 15
------------DEL Assignment@@doRetry=true @AT@ 16096 @LENGTH@ 14
---------------DEL SimpleName@@doRetry @AT@ 16096 @LENGTH@ 7
---------------DEL Operator@@= @AT@ 16103 @LENGTH@ 1
---------------DEL BooleanLiteral@@true @AT@ 16106 @LENGTH@ 4
------UPD CatchClause@@catch (SshException ex) {  doRetry=true;} @TO@ catch (SshException ex) {  throw new Exception("Failed to connect to the container via ssh.");} @AT@ 16142 @LENGTH@ 103
---------DEL ExpressionStatement@@Assignment:doRetry=true @AT@ 16200 @LENGTH@ 15
------------DEL Assignment@@doRetry=true @AT@ 16200 @LENGTH@ 14
---------------DEL SimpleName@@doRetry @AT@ 16200 @LENGTH@ 7
---------------DEL Operator@@= @AT@ 16207 @LENGTH@ 1
---------------DEL BooleanLiteral@@true @AT@ 16210 @LENGTH@ 4
---------MOV ThrowStatement@@ClassInstanceCreation:new Exception("Failed to connect to the container via ssh.") @TO@ CatchClause@@catch (SshException ex) {  doRetry=true;} @AT@ 16395 @LENGTH@ 67
---DEL IfStatement@@if (doRetry) {  throw new Exception("Failed to connect to the container via ssh.");} @AT@ 16352 @LENGTH@ 136
------DEL SimpleName@@doRetry @AT@ 16356 @LENGTH@ 7
------DEL Block@@ThenBody:{  throw new Exception("Failed to connect to the container via ssh.");} @AT@ 16365 @LENGTH@ 123


DEL MethodDeclaration@@protected, AdditionalInitialization, MethodName:createAdditionalInitialization,  @AT@ 2102 @LENGTH@ 283
---DEL Modifier@@protected @AT@ 2102 @LENGTH@ 9
---DEL SimpleType@@AdditionalInitialization @AT@ 2112 @LENGTH@ 24
---DEL SimpleName@@MethodName:createAdditionalInitialization @AT@ 2137 @LENGTH@ 30
---DEL ReturnStatement@@ClassInstanceCreation:new AdditionalInitialization(){
  @Override protected OperationContext.Type getType(){
    return OperationContext.Type.MANAGEMENT;
  }
}
 @AT@ 2180 @LENGTH@ 199
------DEL ClassInstanceCreation@@AdditionalInitialization[] @AT@ 2187 @LENGTH@ 191
---------DEL New@@new @AT@ 2187 @LENGTH@ 3
---------DEL SimpleType@@AdditionalInitialization @AT@ 2191 @LENGTH@ 24
---------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2217 @LENGTH@ 161
------------DEL MethodDeclaration@@protected, OperationContext.Type, MethodName:getType,  @AT@ 2253 @LENGTH@ 114
---------------DEL Modifier@@protected @AT@ 2253 @LENGTH@ 9
---------------DEL SimpleType@@OperationContext.Type @AT@ 2263 @LENGTH@ 21
---------------DEL SimpleName@@MethodName:getType @AT@ 2285 @LENGTH@ 7
---------------DEL ReturnStatement@@QualifiedName:OperationContext.Type.MANAGEMENT @AT@ 2313 @LENGTH@ 40
------------------DEL QualifiedName@@OperationContext.Type.MANAGEMENT @AT@ 2320 @LENGTH@ 32
---------------------DEL QualifiedName@@OperationContext.Type @AT@ 2320 @LENGTH@ 21
------------------------DEL SimpleName@@OperationContext @AT@ 2320 @LENGTH@ 16
------------------------DEL SimpleName@@Type @AT@ 2337 @LENGTH@ 4
---------------------DEL SimpleName@@MANAGEMENT @AT@ 2342 @LENGTH@ 10


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("stop-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("stop-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1990 @LENGTH@ 837
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1994 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1994 @LENGTH@ 17
------DEL Operator@@== @AT@ 2011 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2015 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2015 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2015 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2032 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2037 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("stop-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1994 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1994 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1994 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2002 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:context.isNormalServer() @TO@ BooleanLiteral:true @AT@ 2051 @LENGTH@ 32
---DEL MethodInvocation@@context.isNormalServer() @AT@ 2058 @LENGTH@ 24
------DEL SimpleName@@Name:context @AT@ 2058 @LENGTH@ 7
------DEL SimpleName@@MethodName:isNormalServer:[] @AT@ 2066 @LENGTH@ 16
---INS BooleanLiteral@@true @TO@ ReturnStatement@@MethodInvocation:context.isNormalServer() @AT@ 2058 @LENGTH@ 4


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("remove-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.removeProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("remove-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.removeProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1990 @LENGTH@ 777
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1994 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1994 @LENGTH@ 17
------DEL Operator@@== @AT@ 2011 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2015 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2015 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2015 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2032 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2037 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("remove-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.removeProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1994 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1994 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1994 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2002 @LENGTH@ 9


MOV IfStatement@@if (obj instanceof List) {  return maybeConvertList((List<?>)obj);} @TO@ MethodDeclaration@@public, Object, MethodName:convertToMongoType, Object obj,  @AT@ 28591 @LENGTH@ 73


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, IOException, MgmtOperationException,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, IOException, MgmtOperationException,  @AT@ 3524 @LENGTH@ 356
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, IOException, MgmtOperationException,  @AT@ 3586 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3586 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3592 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3599 @LENGTH@ 11


UPD VariableDeclarationStatement@@CLIWrapper cw=new CLIWrapper(true,new String[]{"--version"}); @TO@ CLIWrapper cw=new CLIWrapper(false,new String[]{"--version"}); @AT@ 2403 @LENGTH@ 65
---UPD VariableDeclarationFragment@@cw=new CLIWrapper(true,new String[]{"--version"}) @TO@ cw=new CLIWrapper(false,new String[]{"--version"}) @AT@ 2414 @LENGTH@ 53
------UPD ClassInstanceCreation@@CLIWrapper[true, new String[]{"--version"}] @TO@ CLIWrapper[false, new String[]{"--version"}] @AT@ 2419 @LENGTH@ 48
---------UPD BooleanLiteral@@true @TO@ false @AT@ 2434 @LENGTH@ 4


UPD Block@@WhileBody:{  NetworkInterface nic=nics.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  Set<InetAddress> addresses=new HashSet<InetAddress>();  Enumeration<InetAddress> addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  }  Enumeration<NetworkInterface> subs=nic.getSubInterfaces();  while (subs.hasMoreElements()) {    nic=subs.nextElement();    all.add(nic);    if (nic.isLoopback()) {      loop.add(nic);    } else {      notLoop.add(nic);    }    addresses=new HashSet<InetAddress>();    addressEnumeration=nic.getInetAddresses();    while (addressEnumeration.hasMoreElements()) {      addresses.add(addressEnumeration.nextElement());    }    if (addresses.size() > 0) {      candidates.put(nic,Collections.unmodifiableSet(addresses));    }  }} @TO@ WhileBody:{  NetworkInterface nic=nics.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  Set<InetAddress> addresses=new HashSet<InetAddress>();  Enumeration<InetAddress> addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  } else {    notLoop.remove(nic);  }  Enumeration<NetworkInterface> subs=nic.getSubInterfaces();  while (subs.hasMoreElements()) {    nic=subs.nextElement();    all.add(nic);    if (nic.isLoopback()) {      loop.add(nic);    } else {      notLoop.add(nic);    }    addresses=new HashSet<InetAddress>();    addressEnumeration=nic.getInetAddresses();    while (addressEnumeration.hasMoreElements()) {      addresses.add(addressEnumeration.nextElement());    }    if (addresses.size() > 0) {      candidates.put(nic,Collections.unmodifiableSet(addresses));    } else {      notLoop.remove(nic);    }  }} @AT@ 2467 @LENGTH@ 1556
---UPD IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @TO@ if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} else {  notLoop.remove(nic);} @AT@ 3039 @LENGTH@ 126
------INS Block@@ElseBody:{  notLoop.remove(nic);} @TO@ IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @AT@ 3169 @LENGTH@ 60
---------INS ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @TO@ Block@@ElseBody:{  notLoop.remove(nic);} @AT@ 3191 @LENGTH@ 20
------------INS MethodInvocation@@notLoop.remove(nic) @TO@ ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @AT@ 3191 @LENGTH@ 19
---------------INS SimpleName@@Name:notLoop @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 3191 @LENGTH@ 7
---------------INS SimpleName@@MethodName:remove:[nic] @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 3199 @LENGTH@ 11
------------------INS SimpleName@@nic @TO@ SimpleName@@MethodName:remove:[nic] @AT@ 3206 @LENGTH@ 3
---UPD WhileStatement@@while (subs.hasMoreElements()) {  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  }} @TO@ while (subs.hasMoreElements()) {  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  } else {    notLoop.remove(nic);  }} @AT@ 3260 @LENGTH@ 749
------UPD Block@@WhileBody:{  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  }} @TO@ WhileBody:{  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  } else {    notLoop.remove(nic);  }} @AT@ 3291 @LENGTH@ 718
---------UPD IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @TO@ if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} else {  notLoop.remove(nic);} @AT@ 3856 @LENGTH@ 134
------------INS Block@@ElseBody:{  notLoop.remove(nic);} @TO@ IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @AT@ 4058 @LENGTH@ 68
---------------INS ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @TO@ Block@@ElseBody:{  notLoop.remove(nic);} @AT@ 4084 @LENGTH@ 20
------------------INS MethodInvocation@@notLoop.remove(nic) @TO@ ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @AT@ 4084 @LENGTH@ 19
---------------------INS SimpleName@@Name:notLoop @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 4084 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:remove:[nic] @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 4092 @LENGTH@ 11
------------------------INS SimpleName@@nic @TO@ SimpleName@@MethodName:remove:[nic] @AT@ 4099 @LENGTH@ 3


UPD VariableDeclarationStatement@@String response=template.requestBody("http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000",null,String.class); @TO@ String response=template.requestBody("http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000"+ "&bridgeEndpoint=true&throwExceptionOnFailure=false",null,String.class); @AT@ 1312 @LENGTH@ 193
---UPD VariableDeclarationFragment@@response=template.requestBody("http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000",null,String.class) @TO@ response=template.requestBody("http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000"+ "&bridgeEndpoint=true&throwExceptionOnFailure=false",null,String.class) @AT@ 1319 @LENGTH@ 185
------UPD MethodInvocation@@template.requestBody("http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000",null,String.class) @TO@ template.requestBody("http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000"+ "&bridgeEndpoint=true&throwExceptionOnFailure=false",null,String.class) @AT@ 1330 @LENGTH@ 174
---------UPD SimpleName@@MethodName:requestBody:["http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000", null, String.class] @TO@ MethodName:requestBody:["http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000"+ "&bridgeEndpoint=true&throwExceptionOnFailure=false", null, String.class] @AT@ 1339 @LENGTH@ 165
------------UPD InfixExpression@@"http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000" @TO@ "http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000"+ "&bridgeEndpoint=true&throwExceptionOnFailure=false" @AT@ 1351 @LENGTH@ 131
---------------INS StringLiteral@@"&bridgeEndpoint=true&throwExceptionOnFailure=false" @TO@ InfixExpression@@"http4://localhost:" + port + "/test?aa=bb&httpClient.soTimeout=10000&httpClient.connectionTimeout=10000" @AT@ 1510 @LENGTH@ 52


INS IfStatement@@if (parameter == null) {  return "null";} else if (parameter instanceof String || parameter.getClass().isEnum()) {  return String.format("\"%s\"",parameter);} else if (parameter instanceof ObjectId) {  return String.format("{ '$oid' : '%s' }",parameter);} @TO@ MethodDeclaration@@private, String, MethodName:getParameterWithIndex, ConvertingParameterAccessor accessor, int index,  @AT@ 3250 @LENGTH@ 272
---INS InfixExpression@@parameter == null @TO@ IfStatement@@if (parameter == null) {  return "null";} else if (parameter instanceof String || parameter.getClass().isEnum()) {  return String.format("\"%s\"",parameter);} else if (parameter instanceof ObjectId) {  return String.format("{ '$oid' : '%s' }",parameter);} @AT@ 3254 @LENGTH@ 17
------INS SimpleName@@parameter @TO@ InfixExpression@@parameter == null @AT@ 3254 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@parameter == null @AT@ 3263 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@parameter == null @AT@ 3267 @LENGTH@ 4
---INS Block@@ThenBody:{  return "null";} @TO@ IfStatement@@if (parameter == null) {  return "null";} else if (parameter instanceof String || parameter.getClass().isEnum()) {  return String.format("\"%s\"",parameter);} else if (parameter instanceof ObjectId) {  return String.format("{ '$oid' : '%s' }",parameter);} @AT@ 3273 @LENGTH@ 23
------INS ReturnStatement@@StringLiteral:"null" @TO@ Block@@ThenBody:{  return "null";} @AT@ 3278 @LENGTH@ 14
---------INS StringLiteral@@"null" @TO@ ReturnStatement@@StringLiteral:"null" @AT@ 3285 @LENGTH@ 6
---INS Block@@ElseBody:if (parameter instanceof String || parameter.getClass().isEnum()) {  return String.format("\"%s\"",parameter);} else if (parameter instanceof ObjectId) {  return String.format("{ '$oid' : '%s' }",parameter);} @TO@ IfStatement@@if (parameter == null) {  return "null";} else if (parameter instanceof String || parameter.getClass().isEnum()) {  return String.format("\"%s\"",parameter);} else if (parameter instanceof ObjectId) {  return String.format("{ '$oid' : '%s' }",parameter);} @AT@ 3302 @LENGTH@ 220
------MOV IfStatement@@if (parameter instanceof String || parameter.getClass().isEnum()) {  return String.format("\"%s\"",parameter);} else if (parameter instanceof ObjectId) {  return String.format("{ '$oid' : '%s' }",parameter);} @TO@ Block@@ElseBody:if (parameter instanceof String || parameter.getClass().isEnum()) {  return String.format("\"%s\"",parameter);} else if (parameter instanceof ObjectId) {  return String.format("{ '$oid' : '%s' }",parameter);} @AT@ 3248 @LENGTH@ 220


UPD ExpressionStatement@@MethodInvocation:archive.addClasses(OSGiTestSupport.class,EndpointServlet.class) @TO@ MethodInvocation:archive.addClasses(HttpTestSupport.class,OSGiTestSupport.class,EndpointServlet.class) @AT@ 2524 @LENGTH@ 65
---UPD MethodInvocation@@archive.addClasses(OSGiTestSupport.class,EndpointServlet.class) @TO@ archive.addClasses(HttpTestSupport.class,OSGiTestSupport.class,EndpointServlet.class) @AT@ 2524 @LENGTH@ 64
------UPD SimpleName@@MethodName:addClasses:[OSGiTestSupport.class, EndpointServlet.class] @TO@ MethodName:addClasses:[HttpTestSupport.class, OSGiTestSupport.class, EndpointServlet.class] @AT@ 2532 @LENGTH@ 56
---------INS TypeLiteral@@HttpTestSupport.class @TO@ SimpleName@@MethodName:addClasses:[OSGiTestSupport.class, EndpointServlet.class] @AT@ 2543 @LENGTH@ 21


UPD IfStatement@@if (newExchange.getException() == null) {  newExchange.setException(oldExchange.getException());} @TO@ if (newExchange.getException() == null) {  newExchange.setException(oldExchange.getException());  newExchange.setProperty(Exchange.FAILURE_ENDPOINT,oldExchange.getProperty(Exchange.FAILURE_ENDPOINT));} @AT@ 2230 @LENGTH@ 117
---UPD Block@@ThenBody:{  newExchange.setException(oldExchange.getException());} @TO@ ThenBody:{  newExchange.setException(oldExchange.getException());  newExchange.setProperty(Exchange.FAILURE_ENDPOINT,oldExchange.getProperty(Exchange.FAILURE_ENDPOINT));} @AT@ 2270 @LENGTH@ 77
------INS ExpressionStatement@@MethodInvocation:newExchange.setProperty(Exchange.FAILURE_ENDPOINT,oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)) @TO@ Block@@ThenBody:{  newExchange.setException(oldExchange.getException());} @AT@ 2350 @LENGTH@ 103
---------INS MethodInvocation@@newExchange.setProperty(Exchange.FAILURE_ENDPOINT,oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)) @TO@ ExpressionStatement@@MethodInvocation:newExchange.setProperty(Exchange.FAILURE_ENDPOINT,oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)) @AT@ 2350 @LENGTH@ 102
------------INS SimpleName@@Name:newExchange @TO@ MethodInvocation@@newExchange.setProperty(Exchange.FAILURE_ENDPOINT,oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)) @AT@ 2350 @LENGTH@ 11
------------INS SimpleName@@MethodName:setProperty:[Exchange.FAILURE_ENDPOINT, oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)] @TO@ MethodInvocation@@newExchange.setProperty(Exchange.FAILURE_ENDPOINT,oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)) @AT@ 2362 @LENGTH@ 90
---------------INS QualifiedName@@Exchange.FAILURE_ENDPOINT @TO@ SimpleName@@MethodName:setProperty:[Exchange.FAILURE_ENDPOINT, oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)] @AT@ 2374 @LENGTH@ 25
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.FAILURE_ENDPOINT @AT@ 2374 @LENGTH@ 8
------------------INS SimpleName@@FAILURE_ENDPOINT @TO@ QualifiedName@@Exchange.FAILURE_ENDPOINT @AT@ 2383 @LENGTH@ 16
---------------INS MethodInvocation@@oldExchange.getProperty(Exchange.FAILURE_ENDPOINT) @TO@ SimpleName@@MethodName:setProperty:[Exchange.FAILURE_ENDPOINT, oldExchange.getProperty(Exchange.FAILURE_ENDPOINT)] @AT@ 2401 @LENGTH@ 50
------------------INS SimpleName@@Name:oldExchange @TO@ MethodInvocation@@oldExchange.getProperty(Exchange.FAILURE_ENDPOINT) @AT@ 2401 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getProperty:[Exchange.FAILURE_ENDPOINT] @TO@ MethodInvocation@@oldExchange.getProperty(Exchange.FAILURE_ENDPOINT) @AT@ 2413 @LENGTH@ 38
---------------------INS QualifiedName@@Exchange.FAILURE_ENDPOINT @TO@ SimpleName@@MethodName:getProperty:[Exchange.FAILURE_ENDPOINT] @AT@ 2425 @LENGTH@ 25
------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.FAILURE_ENDPOINT @AT@ 2425 @LENGTH@ 8
------------------------INS SimpleName@@FAILURE_ENDPOINT @TO@ QualifiedName@@Exchange.FAILURE_ENDPOINT @AT@ 2434 @LENGTH@ 16


UPD MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp, Exception,  @AT@ 1263 @LENGTH@ 155
---UPD Modifier@@protected @TO@ public @AT@ 1263 @LENGTH@ 9


UPD MethodDeclaration@@public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException,  @TO@ public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException, InterruptedException,  @AT@ 2863 @LENGTH@ 4271
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException,  @AT@ 3021 @LENGTH@ 20
---UPD VariableDeclarationStatement@@Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>(); @TO@ final Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>(); @AT@ 3030 @LENGTH@ 97
------INS Modifier@@final @TO@ VariableDeclarationStatement@@Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>(); @AT@ 3051 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @TO@ MethodDeclaration@@public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException,  @AT@ 5007 @LENGTH@ 19
------INS MethodInvocation@@Thread.sleep(5000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @AT@ 5007 @LENGTH@ 18
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(5000) @AT@ 5007 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[5000] @TO@ MethodInvocation@@Thread.sleep(5000) @AT@ 5014 @LENGTH@ 11
------------INS NumberLiteral@@5000 @TO@ SimpleName@@MethodName:sleep:[5000] @AT@ 5020 @LENGTH@ 4
---UPD IfStatement@@if (metadatas != null) {  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    for (    String pa : publicAddresses) {      if (first) {        first=false;      } else {        buffer.append(",");      }      buffer.append(pa + ":" + options.getServicePort());    }    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @TO@ if (metadatas != null) {  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @AT@ 5086 @LENGTH@ 2018
------UPD Block@@ThenBody:{  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    for (    String pa : publicAddresses) {      if (first) {        first=false;      } else {        buffer.append(",");      }      buffer.append(pa + ":" + options.getServicePort());    }    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @TO@ ThenBody:{  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @AT@ 5109 @LENGTH@ 1995
---------UPD EnhancedForStatement@@for (NodeMetadata nodeMetadata : metadatas) {  Credentials credentials=null;  if (options.getUser() != null) {    credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);  } else {    credentials=nodeMetadata.getCredentials();  }  String id=nodeMetadata.getId();  Set<String> publicAddresses=nodeMetadata.getPublicAddresses();  for (  String pa : publicAddresses) {    if (first) {      first=false;    } else {      buffer.append(",");    }    buffer.append(pa + ":" + options.getServicePort());  }  String containerName=options.getName();  if (options.getNumber() > 1) {    containerName+=suffix++;  }  String script=buildStartupScript(options.name(containerName));  if (credentials != null) {    computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));  } else {    computeService.runScriptOnNode(id,script);  }  CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();  jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());  jCloudsContainerMetadata.setContainerName(containerName);  jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());  jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());  result.add(jCloudsContainerMetadata);} @TO@ for (NodeMetadata nodeMetadata : metadatas) {  Credentials credentials=null;  if (options.getUser() != null) {    credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);  } else {    credentials=nodeMetadata.getCredentials();  }  String id=nodeMetadata.getId();  Set<String> publicAddresses=nodeMetadata.getPublicAddresses();  String containerName=options.getName();  if (options.getNumber() > 1) {    containerName+=suffix++;  }  String script=buildStartupScript(options.name(containerName));  if (credentials != null) {    computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));  } else {    computeService.runScriptOnNode(id,script);  }  CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();  jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());  jCloudsContainerMetadata.setContainerName(containerName);  jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());  jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());  result.add(jCloudsContainerMetadata);} @AT@ 5123 @LENGTH@ 1971
------------DEL EnhancedForStatement@@for (String pa : publicAddresses) {  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append(pa + ":" + options.getServicePort());} @AT@ 5753 @LENGTH@ 291
---------------DEL SingleVariableDeclaration@@String pa @AT@ 5758 @LENGTH@ 9
------------------DEL SimpleType@@String @AT@ 5758 @LENGTH@ 6
------------------DEL SimpleName@@pa @AT@ 5765 @LENGTH@ 2
---------------DEL SimpleName@@publicAddresses @AT@ 5769 @LENGTH@ 15
---------------DEL IfStatement@@if (first) {  first=false;} else {  buffer.append(",");} @AT@ 5808 @LENGTH@ 146
------------------DEL SimpleName@@first @AT@ 5812 @LENGTH@ 5
------------------DEL Block@@ThenBody:{  first=false;} @AT@ 5819 @LENGTH@ 62
---------------------DEL ExpressionStatement@@Assignment:first=false @AT@ 5845 @LENGTH@ 14
------------------------DEL Assignment@@first=false @AT@ 5845 @LENGTH@ 13
---------------------------DEL SimpleName@@first @AT@ 5845 @LENGTH@ 5
---------------------------DEL Operator@@= @AT@ 5850 @LENGTH@ 1
---------------------------DEL BooleanLiteral@@false @AT@ 5853 @LENGTH@ 5
------------------DEL Block@@ElseBody:{  buffer.append(",");} @AT@ 5887 @LENGTH@ 67
---------------------DEL ExpressionStatement@@MethodInvocation:buffer.append(",") @AT@ 5913 @LENGTH@ 19
------------------------DEL MethodInvocation@@buffer.append(",") @AT@ 5913 @LENGTH@ 18
---------------------------DEL SimpleName@@Name:buffer @AT@ 5913 @LENGTH@ 6
---------------------------DEL SimpleName@@MethodName:append:[","] @AT@ 5920 @LENGTH@ 11
------------------------------DEL StringLiteral@@"," @AT@ 5927 @LENGTH@ 3
---------------DEL ExpressionStatement@@MethodInvocation:buffer.append(pa + ":" + options.getServicePort()) @AT@ 5975 @LENGTH@ 51
------------------DEL MethodInvocation@@buffer.append(pa + ":" + options.getServicePort()) @AT@ 5975 @LENGTH@ 50
---------------------DEL SimpleName@@Name:buffer @AT@ 5975 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:append:[pa + ":" + options.getServicePort()] @AT@ 5982 @LENGTH@ 43
------------------------DEL InfixExpression@@pa + ":" + options.getServicePort() @AT@ 5989 @LENGTH@ 35
---------------------------DEL SimpleName@@pa @AT@ 5989 @LENGTH@ 2
---------------------------DEL Operator@@+ @AT@ 5991 @LENGTH@ 1
---------------------------DEL StringLiteral@@":" @AT@ 5994 @LENGTH@ 3
---------------------------DEL MethodInvocation@@options.getServicePort() @AT@ 6000 @LENGTH@ 24
------------------------------DEL SimpleName@@Name:options @AT@ 6000 @LENGTH@ 7
------------------------------DEL SimpleName@@MethodName:getServicePort:[] @AT@ 6008 @LENGTH@ 16


UPD VariableDeclarationStatement@@String uri=DeploymentManagerImpl.DEPLOYER_URI + "?targetType=as7" + managementClient.getMgmtAddress()+ "&serverPort="+ managementClient.getMgmtPort(); @TO@ String uri=DeploymentManagerImpl.DEPLOYER_URI + "?targetType=as7&serverHost=" + managementClient.getMgmtAddress()+ "&serverPort="+ managementClient.getMgmtPort(); @AT@ 4722 @LENGTH@ 154
---UPD VariableDeclarationFragment@@uri=DeploymentManagerImpl.DEPLOYER_URI + "?targetType=as7" + managementClient.getMgmtAddress()+ "&serverPort="+ managementClient.getMgmtPort() @TO@ uri=DeploymentManagerImpl.DEPLOYER_URI + "?targetType=as7&serverHost=" + managementClient.getMgmtAddress()+ "&serverPort="+ managementClient.getMgmtPort() @AT@ 4729 @LENGTH@ 146
------UPD InfixExpression@@DeploymentManagerImpl.DEPLOYER_URI + "?targetType=as7" + managementClient.getMgmtAddress()+ "&serverPort="+ managementClient.getMgmtPort() @TO@ DeploymentManagerImpl.DEPLOYER_URI + "?targetType=as7&serverHost=" + managementClient.getMgmtAddress()+ "&serverPort="+ managementClient.getMgmtPort() @AT@ 4735 @LENGTH@ 140
---------UPD StringLiteral@@"?targetType=as7" @TO@ "?targetType=as7&serverHost=" @AT@ 4772 @LENGTH@ 17


DEL IfStatement@@if (isParallelProcessing() && executorService == null) {  String ref=this.executorServiceRef != null ? this.executorServiceRef : "Split";  ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager();  executorService=manager.newDefaultThreadPool(this,ref);} @AT@ 3208 @LENGTH@ 336
---DEL InfixExpression@@isParallelProcessing() && executorService == null @AT@ 3212 @LENGTH@ 49
------DEL MethodInvocation@@MethodName:isParallelProcessing:[] @AT@ 3212 @LENGTH@ 22
------DEL Operator@@&& @AT@ 3234 @LENGTH@ 2
------DEL InfixExpression@@executorService == null @AT@ 3238 @LENGTH@ 23
---------DEL SimpleName@@executorService @AT@ 3238 @LENGTH@ 15
---------DEL Operator@@== @AT@ 3253 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3257 @LENGTH@ 4
---DEL Block@@ThenBody:{  String ref=this.executorServiceRef != null ? this.executorServiceRef : "Split";  ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager();  executorService=manager.newDefaultThreadPool(this,ref);} @AT@ 3263 @LENGTH@ 281
------DEL VariableDeclarationStatement@@String ref=this.executorServiceRef != null ? this.executorServiceRef : "Split"; @AT@ 3277 @LENGTH@ 81
---------DEL SimpleType@@String @AT@ 3277 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@ref=this.executorServiceRef != null ? this.executorServiceRef : "Split" @AT@ 3284 @LENGTH@ 73
------------DEL SimpleName@@ref @AT@ 3284 @LENGTH@ 3
------------DEL ConditionalExpression@@this.executorServiceRef != null ? this.executorServiceRef : "Split" @AT@ 3290 @LENGTH@ 67
---------------DEL InfixExpression@@this.executorServiceRef != null @AT@ 3290 @LENGTH@ 31
------------------DEL FieldAccess@@this.executorServiceRef @AT@ 3290 @LENGTH@ 23
---------------------DEL ThisExpression@@this @AT@ 3290 @LENGTH@ 4
---------------------DEL SimpleName@@executorServiceRef @AT@ 3295 @LENGTH@ 18
------------------DEL Operator@@!= @AT@ 3313 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 3317 @LENGTH@ 4
---------------DEL FieldAccess@@this.executorServiceRef @AT@ 3324 @LENGTH@ 23
------------------DEL ThisExpression@@this @AT@ 3324 @LENGTH@ 4
------------------DEL SimpleName@@executorServiceRef @AT@ 3329 @LENGTH@ 18
---------------DEL StringLiteral@@"Split" @AT@ 3350 @LENGTH@ 7
------DEL VariableDeclarationStatement@@ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager(); @AT@ 3371 @LENGTH@ 92
---------DEL SimpleType@@ExecutorServiceManager @AT@ 3371 @LENGTH@ 22
---------DEL VariableDeclarationFragment@@manager=routeContext.getCamelContext().getExecutorServiceManager() @AT@ 3394 @LENGTH@ 68
------------DEL SimpleName@@manager @AT@ 3394 @LENGTH@ 7
------------DEL MethodInvocation@@routeContext.getCamelContext().getExecutorServiceManager() @AT@ 3404 @LENGTH@ 58
---------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 3404 @LENGTH@ 30
---------------DEL SimpleName@@Name:routeContext @AT@ 3404 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getExecutorServiceManager:[] @AT@ 3435 @LENGTH@ 27
------DEL ExpressionStatement@@Assignment:executorService=manager.newDefaultThreadPool(this,ref) @AT@ 3476 @LENGTH@ 58


UPD VariableDeclarationStatement@@Writer out=new BufferedWriter(new FileWriter(new File("target/files","data" + i))); @TO@ Writer out=IOHelper.buffered(new FileWriter(new File("target/files","data" + i))); @AT@ 2605 @LENGTH@ 86
---UPD VariableDeclarationFragment@@out=new BufferedWriter(new FileWriter(new File("target/files","data" + i))) @TO@ out=IOHelper.buffered(new FileWriter(new File("target/files","data" + i))) @AT@ 2612 @LENGTH@ 78
------DEL ClassInstanceCreation@@BufferedWriter[new FileWriter(new File("target/files","data" + i))] @AT@ 2618 @LENGTH@ 72
---------DEL New@@new @AT@ 2618 @LENGTH@ 3
---------DEL SimpleType@@BufferedWriter @AT@ 2622 @LENGTH@ 14
------INS MethodInvocation@@IOHelper.buffered(new FileWriter(new File("target/files","data" + i))) @TO@ VariableDeclarationFragment@@out=new BufferedWriter(new FileWriter(new File("target/files","data" + i))) @AT@ 2626 @LENGTH@ 71
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new FileWriter(new File("target/files","data" + i))) @AT@ 2626 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[new FileWriter(new File("target/files","data" + i))] @TO@ MethodInvocation@@IOHelper.buffered(new FileWriter(new File("target/files","data" + i))) @AT@ 2635 @LENGTH@ 62
------------MOV ClassInstanceCreation@@FileWriter[new File("target/files","data" + i)] @TO@ SimpleName@@MethodName:buffered:[new FileWriter(new File("target/files","data" + i))] @AT@ 2637 @LENGTH@ 52


INS FieldDeclaration@@PersonRepository, [repository] @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]RepositoryIndexCreationIntegrationTests,  @AT@ 1619 @LENGTH@ 28
---INS SimpleType@@PersonRepository @TO@ FieldDeclaration@@PersonRepository, [repository] @AT@ 1619 @LENGTH@ 16
---INS VariableDeclarationFragment@@repository @TO@ FieldDeclaration@@PersonRepository, [repository] @AT@ 1636 @LENGTH@ 10
------INS SimpleName@@repository @TO@ VariableDeclarationFragment@@repository @AT@ 1636 @LENGTH@ 10


UPD ReturnStatement@@SuperMethodInvocation:super.process(exchange,new AsyncCallback(){
  public void done(  boolean doneSync){
    try {
      if (watch != null) {
        recordTime(exchange,watch.stop());
      }
    }
  finally {
      callback.done(doneSync);
    }
  }
}
) @TO@ SuperMethodInvocation:super.process(exchange,new AsyncCallback(){
  public void done(  boolean doneSync){
    try {
      if (watch != null) {
        recordTime(exchange,watch.stop());
      }
    }
  finally {
      callback.done(doneSync);
    }
  }
  @Override public String toString(){
    return InstrumentationProcessor.this.toString();
  }
}
) @AT@ 2646 @LENGTH@ 480
---UPD SuperMethodInvocation@@super.process(exchange,new AsyncCallback(){
  public void done(  boolean doneSync){
    try {
      if (watch != null) {
        recordTime(exchange,watch.stop());
      }
    }
  finally {
      callback.done(doneSync);
    }
  }
}
) @TO@ super.process(exchange,new AsyncCallback(){
  public void done(  boolean doneSync){
    try {
      if (watch != null) {
        recordTime(exchange,watch.stop());
      }
    }
  finally {
      callback.done(doneSync);
    }
  }
  @Override public String toString(){
    return InstrumentationProcessor.this.toString();
  }
}
) @AT@ 2653 @LENGTH@ 472
------UPD SimpleName@@MethodName:process:[exchange, new AsyncCallback(){
  public void done(  boolean doneSync){
    try {
      if (watch != null) {
        recordTime(exchange,watch.stop());
      }
    }
  finally {
      callback.done(doneSync);
    }
  }
}
] @TO@ MethodName:process:[exchange, new AsyncCallback(){
  public void done(  boolean doneSync){
    try {
      if (watch != null) {
        recordTime(exchange,watch.stop());
      }
    }
  finally {
      callback.done(doneSync);
    }
  }
  @Override public String toString(){
    return InstrumentationProcessor.this.toString();
  }
}
] @AT@ 2659 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @TO@ MethodDeclaration@@voidMethodName:ConcurrentSignState, ServerGroupState sg,  @AT@ 1634 @LENGTH@ 27
---INS MethodInvocation@@setIgnoreWhitespaces(true) @TO@ ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @AT@ 1634 @LENGTH@ 26
------INS SimpleName@@MethodName:setIgnoreWhitespaces:[true] @TO@ MethodInvocation@@setIgnoreWhitespaces(true) @AT@ 1634 @LENGTH@ 26
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setIgnoreWhitespaces:[true] @AT@ 1655 @LENGTH@ 4


UPD EnhancedForStatement@@for (Resource resource : resources) {  final String address;  if (this.address == null) {    address=resource.getAddress();  } else   if (this.address.equals(resource.getAddress())) {    address=resource.getAddress();  } else {    address=String.format("%s,%s",this.address,resource.getAddress());  }  final boolean found=resourceExists(address,client);  if (found && force) {    ModelNode r=client.execute(OperationBuilder.create(buildRemoveOperation(address)).build());    reportFailure(r);  } else   if (found && !force) {    throw new RuntimeException("Resource " + address + " already exists ");  }  final ModelNode op=new ModelNode();  op.get(ClientConstants.OP).set(ClientConstants.COMPOSITE);  op.get(ClientConstants.OP_ADDR).setEmptyList();  op.get(ClientConstants.ROLLBACK_ON_RUNTIME_FAILURE).set(true);  op.get(ClientConstants.STEPS).add(buildAddOperation(address,resource.getProperties()));  if (resource.isEnableResource()) {    op.get(ClientConstants.STEPS).add(buildEnableOperation(address));  }  ModelNode r=client.execute(OperationBuilder.create(op).build());  reportFailure(r);} @TO@ for (Resource resource : resources) {  final String address;  if (this.address == null) {    address=resource.getAddress();  } else   if (this.address.equals(resource.getAddress())) {    address=resource.getAddress();  } else   if (resource.getAddress() == null) {    address=this.address;  } else {    address=String.format("%s,%s",this.address,resource.getAddress());  }  if (address == null) {    throw new RuntimeException("You must specify the address to deploy the resource to.");  }  final boolean found=resourceExists(address,client);  if (found && force) {    ModelNode r=client.execute(OperationBuilder.create(buildRemoveOperation(address)).build());    reportFailure(r);  } else   if (found && !force) {    throw new RuntimeException("Resource " + address + " already exists ");  }  final ModelNode op=new ModelNode();  op.get(ClientConstants.OP).set(ClientConstants.COMPOSITE);  op.get(ClientConstants.OP_ADDR).setEmptyList();  op.get(ClientConstants.ROLLBACK_ON_RUNTIME_FAILURE).set(true);  op.get(ClientConstants.STEPS).add(buildAddOperation(address,resource.getProperties()));  if (resource.isEnableResource()) {    op.get(ClientConstants.STEPS).add(buildEnableOperation(address));  }  ModelNode r=client.execute(OperationBuilder.create(op).build());  reportFailure(r);} @AT@ 4691 @LENGTH@ 1408
---UPD IfStatement@@if (this.address == null) {  address=resource.getAddress();} else if (this.address.equals(resource.getAddress())) {  address=resource.getAddress();} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ if (this.address == null) {  address=resource.getAddress();} else if (this.address.equals(resource.getAddress())) {  address=resource.getAddress();} else if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4775 @LENGTH@ 316
------UPD Block@@ElseBody:if (this.address.equals(resource.getAddress())) {  address=resource.getAddress();} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ ElseBody:if (this.address.equals(resource.getAddress())) {  address=resource.getAddress();} else if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4871 @LENGTH@ 220
---------UPD IfStatement@@if (this.address.equals(resource.getAddress())) {  address=resource.getAddress();} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ if (this.address.equals(resource.getAddress())) {  address=resource.getAddress();} else if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4871 @LENGTH@ 220
------------INS Block@@ElseBody:if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ IfStatement@@if (this.address.equals(resource.getAddress())) {  address=resource.getAddress();} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4989 @LENGTH@ 198
---------------INS IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ Block@@ElseBody:if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4989 @LENGTH@ 198
------------------MOV Block@@ElseBody:{  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4989 @LENGTH@ 102
------------------INS InfixExpression@@resource.getAddress() == null @TO@ IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4993 @LENGTH@ 29
---------------------INS MethodInvocation@@resource.getAddress() @TO@ InfixExpression@@resource.getAddress() == null @AT@ 4993 @LENGTH@ 21
------------------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getAddress() @AT@ 4993 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getAddress:[] @TO@ MethodInvocation@@resource.getAddress() @AT@ 5002 @LENGTH@ 12
---------------------INS Operator@@== @TO@ InfixExpression@@resource.getAddress() == null @AT@ 5014 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@resource.getAddress() == null @AT@ 5018 @LENGTH@ 4
------------------INS Block@@ThenBody:{  address=this.address;} @TO@ IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 5024 @LENGTH@ 55
---------------------INS ExpressionStatement@@Assignment:address=this.address @TO@ Block@@ThenBody:{  address=this.address;} @AT@ 5042 @LENGTH@ 23
------------------------INS Assignment@@address=this.address @TO@ ExpressionStatement@@Assignment:address=this.address @AT@ 5042 @LENGTH@ 22
---------------------------INS SimpleName@@address @TO@ Assignment@@address=this.address @AT@ 5042 @LENGTH@ 7
---------------------------INS Operator@@= @TO@ Assignment@@address=this.address @AT@ 5049 @LENGTH@ 1
---------------------------INS FieldAccess@@this.address @TO@ Assignment@@address=this.address @AT@ 5052 @LENGTH@ 12
------------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.address @AT@ 5052 @LENGTH@ 4
------------------------------INS SimpleName@@address @TO@ FieldAccess@@this.address @AT@ 5057 @LENGTH@ 7
---------------INS IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ Block@@ElseBody:if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4989 @LENGTH@ 198
------------------MOV Block@@ElseBody:{  address=String.format("%s,%s",this.address,resource.getAddress());} @TO@ IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4989 @LENGTH@ 102
------------------INS InfixExpression@@resource.getAddress() == null @TO@ IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 4993 @LENGTH@ 29
---------------------INS MethodInvocation@@resource.getAddress() @TO@ InfixExpression@@resource.getAddress() == null @AT@ 4993 @LENGTH@ 21
------------------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getAddress() @AT@ 4993 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getAddress:[] @TO@ MethodInvocation@@resource.getAddress() @AT@ 5002 @LENGTH@ 12
---------------------INS Operator@@== @TO@ InfixExpression@@resource.getAddress() == null @AT@ 5014 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@resource.getAddress() == null @AT@ 5018 @LENGTH@ 4
------------------INS Block@@ThenBody:{  address=this.address;} @TO@ IfStatement@@if (resource.getAddress() == null) {  address=this.address;} else {  address=String.format("%s,%s",this.address,resource.getAddress());} @AT@ 5024 @LENGTH@ 55
---------------------INS ExpressionStatement@@Assignment:address=this.address @TO@ Block@@ThenBody:{  address=this.address;} @AT@ 5042 @LENGTH@ 23
------------------------INS Assignment@@address=this.address @TO@ ExpressionStatement@@Assignment:address=this.address @AT@ 5042 @LENGTH@ 22
---------------------------INS SimpleName@@address @TO@ Assignment@@address=this.address @AT@ 5042 @LENGTH@ 7
---------------------------INS Operator@@= @TO@ Assignment@@address=this.address @AT@ 5049 @LENGTH@ 1
---------------------------INS FieldAccess@@this.address @TO@ Assignment@@address=this.address @AT@ 5052 @LENGTH@ 12
------------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.address @AT@ 5052 @LENGTH@ 4
------------------------------INS SimpleName@@address @TO@ FieldAccess@@this.address @AT@ 5057 @LENGTH@ 7
---INS IfStatement@@if (address == null) {  throw new RuntimeException("You must specify the address to deploy the resource to.");} @TO@ EnhancedForStatement@@for (Resource resource : resources) {  final String address;  if (this.address == null) {    address=resource.getAddress();  } else   if (this.address.equals(resource.getAddress())) {    address=resource.getAddress();  } else {    address=String.format("%s,%s",this.address,resource.getAddress());  }  final boolean found=resourceExists(address,client);  if (found && force) {    ModelNode r=client.execute(OperationBuilder.create(buildRemoveOperation(address)).build());    reportFailure(r);  } else   if (found && !force) {    throw new RuntimeException("Resource " + address + " already exists ");  }  final ModelNode op=new ModelNode();  op.get(ClientConstants.OP).set(ClientConstants.COMPOSITE);  op.get(ClientConstants.OP_ADDR).setEmptyList();  op.get(ClientConstants.ROLLBACK_ON_RUNTIME_FAILURE).set(true);  op.get(ClientConstants.STEPS).add(buildAddOperation(address,resource.getProperties()));  if (resource.isEnableResource()) {    op.get(ClientConstants.STEPS).add(buildEnableOperation(address));  }  ModelNode r=client.execute(OperationBuilder.create(op).build());  reportFailure(r);} @AT@ 5242 @LENGTH@ 139
------INS InfixExpression@@address == null @TO@ IfStatement@@if (address == null) {  throw new RuntimeException("You must specify the address to deploy the resource to.");} @AT@ 5246 @LENGTH@ 15
---------INS SimpleName@@address @TO@ InfixExpression@@address == null @AT@ 5246 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@address == null @AT@ 5253 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@address == null @AT@ 5257 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new RuntimeException("You must specify the address to deploy the resource to.");} @TO@ IfStatement@@if (address == null) {  throw new RuntimeException("You must specify the address to deploy the resource to.");} @AT@ 5263 @LENGTH@ 118
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("You must specify the address to deploy the resource to.") @TO@ Block@@ThenBody:{  throw new RuntimeException("You must specify the address to deploy the resource to.");} @AT@ 5281 @LENGTH@ 86
------------INS ClassInstanceCreation@@RuntimeException["You must specify the address to deploy the resource to."] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("You must specify the address to deploy the resource to.") @AT@ 5287 @LENGTH@ 79
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["You must specify the address to deploy the resource to."] @AT@ 5287 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["You must specify the address to deploy the resource to."] @AT@ 5291 @LENGTH@ 16
---------------INS StringLiteral@@"You must specify the address to deploy the resource to." @TO@ ClassInstanceCreation@@RuntimeException["You must specify the address to deploy the resource to."] @AT@ 5308 @LENGTH@ 57


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, boolean, MethodName:requireNoChildResources,  @AT@ 1796 @LENGTH@ 427
---UPD PrimitiveType@@void @TO@ boolean @AT@ 1806 @LENGTH@ 4
---DEL SimpleName@@MethodName:performRemove @AT@ 1811 @LENGTH@ 13
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 1825 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 1825 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1842 @LENGTH@ 7
---DEL SingleVariableDeclaration@@ModelNode operation @AT@ 1851 @LENGTH@ 19
------DEL SimpleType@@ModelNode @AT@ 1851 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 1861 @LENGTH@ 9
---DEL SingleVariableDeclaration@@ModelNode model @AT@ 1872 @LENGTH@ 15
------DEL SimpleType@@ModelNode @AT@ 1872 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 1882 @LENGTH@ 5
---DEL SimpleType@@OperationFailedException @AT@ 1896 @LENGTH@ 24
---DEL IfStatement@@if (context.readModel(PathAddress.EMPTY_ADDRESS).get(SUBSYSTEM).keys().size() > 0) {  throw new OperationFailedException(new ModelNode().set("subsytems are not empty"));} @AT@ 1931 @LENGTH@ 230
------DEL InfixExpression@@context.readModel(PathAddress.EMPTY_ADDRESS).get(SUBSYSTEM).keys().size() > 0 @AT@ 1935 @LENGTH@ 77
---------DEL MethodInvocation@@context.readModel(PathAddress.EMPTY_ADDRESS).get(SUBSYSTEM).keys().size() @AT@ 1935 @LENGTH@ 73
------------DEL MethodInvocation@@MethodName:keys:[] @AT@ 1935 @LENGTH@ 66
------------DEL MethodInvocation@@MethodName:get:[SUBSYSTEM] @AT@ 1935 @LENGTH@ 59
---------------DEL SimpleName@@SUBSYSTEM @AT@ 1984 @LENGTH@ 9
------------DEL MethodInvocation@@MethodName:readModel:[PathAddress.EMPTY_ADDRESS] @AT@ 1935 @LENGTH@ 44
---------------DEL QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 1953 @LENGTH@ 25
------------------DEL SimpleName@@PathAddress @AT@ 1953 @LENGTH@ 11
------------------DEL SimpleName@@EMPTY_ADDRESS @AT@ 1965 @LENGTH@ 13
------------DEL SimpleName@@Name:context @AT@ 1935 @LENGTH@ 7
------------DEL SimpleName@@MethodName:size:[] @AT@ 2002 @LENGTH@ 6
---------DEL Operator@@> @AT@ 2008 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 2011 @LENGTH@ 1
------DEL Block@@ThenBody:{  throw new OperationFailedException(new ModelNode().set("subsytems are not empty"));} @AT@ 2014 @LENGTH@ 147
---------DEL ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("subsytems are not empty")) @AT@ 2068 @LENGTH@ 83
------------DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("subsytems are not empty")] @AT@ 2074 @LENGTH@ 76
---------------DEL New@@new @AT@ 2074 @LENGTH@ 3
---------------DEL SimpleType@@OperationFailedException @AT@ 2078 @LENGTH@ 24
---------------DEL MethodInvocation@@new ModelNode().set("subsytems are not empty") @AT@ 2103 @LENGTH@ 46
------------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2103 @LENGTH@ 15
---------------------DEL New@@new @AT@ 2103 @LENGTH@ 3
---------------------DEL SimpleType@@ModelNode @AT@ 2107 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:set:["subsytems are not empty"] @AT@ 2119 @LENGTH@ 30
---------------------DEL StringLiteral@@"subsytems are not empty" @AT@ 2123 @LENGTH@ 25
---INS SimpleName@@MethodName:requireNoChildResources @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1937 @LENGTH@ 23
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1973 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1980 @LENGTH@ 4
---DEL ExpressionStatement@@SuperMethodInvocation:super.performRemove(context,operation,model) @AT@ 2170 @LENGTH@ 47
------DEL SuperMethodInvocation@@super.performRemove(context,operation,model) @AT@ 2170 @LENGTH@ 46
---------DEL SimpleName@@MethodName:performRemove:[context, operation, model] @AT@ 2176 @LENGTH@ 13
---------DEL SimpleName@@context @AT@ 2190 @LENGTH@ 7
---------DEL SimpleName@@operation @AT@ 2199 @LENGTH@ 9
---------DEL SimpleName@@model @AT@ 2210 @LENGTH@ 5


DEL FieldDeclaration@@public, static, final, int, [INSTALL_RESOLVE_EJB_INJECTIONS=0x0402] @AT@ 21823 @LENGTH@ 77
---DEL Modifier@@public @AT@ 21823 @LENGTH@ 6
---DEL Modifier@@static @AT@ 21830 @LENGTH@ 6
---DEL Modifier@@final @AT@ 21837 @LENGTH@ 5
---DEL PrimitiveType@@int @AT@ 21843 @LENGTH@ 3
---DEL VariableDeclarationFragment@@INSTALL_RESOLVE_EJB_INJECTIONS=0x0402 @AT@ 21847 @LENGTH@ 52
------DEL SimpleName@@INSTALL_RESOLVE_EJB_INJECTIONS @AT@ 21847 @LENGTH@ 30
------DEL NumberLiteral@@0x0402 @AT@ 21893 @LENGTH@ 6


UPD Block@@ThenBody:{  String language=elements.get(0);  String country=((size >= 2) ? elements.get(1) : "");  String variant=((size >= 3) ? elements.get(2) : "");  return new Locale(language,country,variant);} @TO@ ThenBody:{  String language=elements.get(0);  String country=(size >= 2) ? elements.get(1) : "";  String variant=(size >= 3) ? elements.get(2) : "";  return new Locale(language,country,variant);} @AT@ 15682 @LENGTH@ 272
---UPD VariableDeclarationStatement@@String country=((size >= 2) ? elements.get(1) : ""); @TO@ String country=(size >= 2) ? elements.get(1) : ""; @AT@ 15751 @LENGTH@ 54
------UPD VariableDeclarationFragment@@country=((size >= 2) ? elements.get(1) : "") @TO@ country=(size >= 2) ? elements.get(1) : "" @AT@ 15758 @LENGTH@ 46
---------DEL ParenthesizedExpression@@((size >= 2) ? elements.get(1) : "") @AT@ 15768 @LENGTH@ 36
---------MOV ConditionalExpression@@(size >= 2) ? elements.get(1) : "" @TO@ VariableDeclarationFragment@@country=((size >= 2) ? elements.get(1) : "") @AT@ 15769 @LENGTH@ 34
---UPD VariableDeclarationStatement@@String variant=((size >= 3) ? elements.get(2) : ""); @TO@ String variant=(size >= 3) ? elements.get(2) : ""; @AT@ 15822 @LENGTH@ 54
------UPD VariableDeclarationFragment@@variant=((size >= 3) ? elements.get(2) : "") @TO@ variant=(size >= 3) ? elements.get(2) : "" @AT@ 15829 @LENGTH@ 46
---------DEL ParenthesizedExpression@@((size >= 3) ? elements.get(2) : "") @AT@ 15839 @LENGTH@ 36
---------MOV ConditionalExpression@@(size >= 3) ? elements.get(2) : "" @TO@ VariableDeclarationFragment@@variant=((size >= 3) ? elements.get(2) : "") @AT@ 15840 @LENGTH@ 34


DEL MethodDeclaration@@private, T, T, MethodName:getInterceptor, List<Interceptor<? extends Message>> list, Class<T> clz,  @AT@ 2644 @LENGTH@ 260
---DEL Modifier@@private @AT@ 2644 @LENGTH@ 7
---DEL SimpleType@@T @AT@ 2656 @LENGTH@ 1
---DEL SimpleName@@MethodName:getInterceptor @AT@ 2658 @LENGTH@ 14
---DEL SingleVariableDeclaration@@List<Interceptor<? extends Message>> list @AT@ 2673 @LENGTH@ 41
------DEL ParameterizedType@@List<Interceptor<? extends Message>> @AT@ 2673 @LENGTH@ 36
---------DEL SimpleType@@List @AT@ 2673 @LENGTH@ 4
---------DEL ParameterizedType@@Interceptor<? extends Message> @AT@ 2678 @LENGTH@ 30
------------DEL SimpleType@@Interceptor @AT@ 2678 @LENGTH@ 11
------------DEL WildcardType@@? @AT@ 2690 @LENGTH@ 17
------DEL SimpleName@@list @AT@ 2710 @LENGTH@ 4
---DEL SingleVariableDeclaration@@Class<T> clz @AT@ 2716 @LENGTH@ 12
------DEL ParameterizedType@@Class<T> @AT@ 2716 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 2716 @LENGTH@ 5
---------DEL SimpleType@@T @AT@ 2722 @LENGTH@ 1
------DEL SimpleName@@clz @AT@ 2725 @LENGTH@ 3
---DEL EnhancedForStatement@@for (Interceptor<? extends Message> i : list) {  if (clz.isInstance(i)) {    return (T)i;  }} @AT@ 2740 @LENGTH@ 137
------DEL SingleVariableDeclaration@@Interceptor<? extends Message> i @AT@ 2745 @LENGTH@ 32
---------DEL ParameterizedType@@Interceptor<? extends Message> @AT@ 2745 @LENGTH@ 30
------------DEL SimpleType@@Interceptor @AT@ 2745 @LENGTH@ 11
------------DEL WildcardType@@? @AT@ 2757 @LENGTH@ 17
---------DEL SimpleName@@i @AT@ 2776 @LENGTH@ 1
------DEL SimpleName@@list @AT@ 2780 @LENGTH@ 4
------DEL IfStatement@@if (clz.isInstance(i)) {  return (T)i;} @AT@ 2800 @LENGTH@ 67
---------DEL MethodInvocation@@clz.isInstance(i) @AT@ 2804 @LENGTH@ 17
------------DEL SimpleName@@Name:clz @AT@ 2804 @LENGTH@ 3
------------DEL SimpleName@@MethodName:isInstance:[i] @AT@ 2808 @LENGTH@ 13
---------------DEL SimpleName@@i @AT@ 2819 @LENGTH@ 1
---------DEL Block@@ThenBody:{  return (T)i;} @AT@ 2823 @LENGTH@ 44
------------DEL ReturnStatement@@CastExpression:(T)i @AT@ 2841 @LENGTH@ 12
---------------DEL CastExpression@@(T)i @AT@ 2848 @LENGTH@ 4
------------------DEL SimpleType@@T @AT@ 2849 @LENGTH@ 1
------------------DEL SimpleName@@i @AT@ 2851 @LENGTH@ 1
---DEL ReturnStatement@@NullLiteral:null @AT@ 2886 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 2893 @LENGTH@ 4


UPD TryStatement@@try {  String version=getZkData(ZkPath.CONFIG_CONTAINER);  return new VersionImpl(version,service);} catch (Exception e) {  throw new RuntimeException(e);} @TO@ try {  String version=getZkData(ZkPath.CONFIG_CONTAINER);  if (version == null) {    return null;  }  return new VersionImpl(version,service);} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 5371 @LENGTH@ 209
---INS IfStatement@@if (version == null) {  return null;} @TO@ TryStatement@@try {  String version=getZkData(ZkPath.CONFIG_CONTAINER);  return new VersionImpl(version,service);} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 5454 @LENGTH@ 65
------INS InfixExpression@@version == null @TO@ IfStatement@@if (version == null) {  return null;} @AT@ 5458 @LENGTH@ 15
---------INS SimpleName@@version @TO@ InfixExpression@@version == null @AT@ 5458 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@version == null @AT@ 5465 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@version == null @AT@ 5469 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (version == null) {  return null;} @AT@ 5475 @LENGTH@ 44
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 5493 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5500 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @TO@ TypeDeclaration@@[public]TestRandomValueTokenServices,  @AT@ 5061 @LENGTH@ 685
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5061 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5068 @LENGTH@ 4
---INS SimpleName@@MethodName:testRefreshTokenMaintainsState @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5073 @LENGTH@ 30
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5113 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5127 @LENGTH@ 190
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)); @AT@ 5127 @LENGTH@ 20
------INS VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)) @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)); @AT@ 5148 @LENGTH@ 168
---------INS SimpleName@@expectedAuthentication @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)) @AT@ 5148 @LENGTH@ 22
---------INS ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)) @AT@ 5173 @LENGTH@ 143
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 5173 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 5177 @LENGTH@ 20
------------INS ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 5198 @LENGTH@ 77
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 5198 @LENGTH@ 3
---------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 5202 @LENGTH@ 20
---------------INS StringLiteral@@"id" @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 5223 @LENGTH@ 4
---------------INS MethodInvocation@@Collections.singleton("read") @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 5233 @LENGTH@ 29
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton("read") @AT@ 5233 @LENGTH@ 11
------------------INS SimpleName@@MethodName:singleton:["read"] @TO@ MethodInvocation@@Collections.singleton("read") @AT@ 5245 @LENGTH@ 17
---------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:singleton:["read"] @AT@ 5255 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 5264 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 5270 @LENGTH@ 4
------------INS ClassInstanceCreation@@TestAuthentication["test2", false] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 5277 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 5277 @LENGTH@ 3
---------------INS SimpleType@@TestAuthentication @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 5281 @LENGTH@ 18
---------------INS StringLiteral@@"test2" @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 5300 @LENGTH@ 7
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 5309 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:services.setSupportRefreshToken(true) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5320 @LENGTH@ 38
------INS MethodInvocation@@services.setSupportRefreshToken(true) @TO@ ExpressionStatement@@MethodInvocation:services.setSupportRefreshToken(true) @AT@ 5320 @LENGTH@ 37
---------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.setSupportRefreshToken(true) @AT@ 5320 @LENGTH@ 8
---------INS SimpleName@@MethodName:setSupportRefreshToken:[true] @TO@ MethodInvocation@@services.setSupportRefreshToken(true) @AT@ 5329 @LENGTH@ 28
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setSupportRefreshToken:[true] @AT@ 5352 @LENGTH@ 4
---INS VariableDeclarationStatement@@OAuth2AccessToken accessToken=services.createAccessToken(expectedAuthentication); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5361 @LENGTH@ 83
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken accessToken=services.createAccessToken(expectedAuthentication); @AT@ 5361 @LENGTH@ 17
------INS VariableDeclarationFragment@@accessToken=services.createAccessToken(expectedAuthentication) @TO@ VariableDeclarationStatement@@OAuth2AccessToken accessToken=services.createAccessToken(expectedAuthentication); @AT@ 5379 @LENGTH@ 64
---------INS SimpleName@@accessToken @TO@ VariableDeclarationFragment@@accessToken=services.createAccessToken(expectedAuthentication) @AT@ 5379 @LENGTH@ 11
---------INS MethodInvocation@@services.createAccessToken(expectedAuthentication) @TO@ VariableDeclarationFragment@@accessToken=services.createAccessToken(expectedAuthentication) @AT@ 5393 @LENGTH@ 50
------------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.createAccessToken(expectedAuthentication) @AT@ 5393 @LENGTH@ 8
------------INS SimpleName@@MethodName:createAccessToken:[expectedAuthentication] @TO@ MethodInvocation@@services.createAccessToken(expectedAuthentication) @AT@ 5402 @LENGTH@ 41
---------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:createAccessToken:[expectedAuthentication] @AT@ 5420 @LENGTH@ 22
---INS VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=accessToken.getRefreshToken(); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5447 @LENGTH@ 80
------INS SimpleType@@OAuth2RefreshToken @TO@ VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=accessToken.getRefreshToken(); @AT@ 5447 @LENGTH@ 18
------INS VariableDeclarationFragment@@expectedExpiringRefreshToken=accessToken.getRefreshToken() @TO@ VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=accessToken.getRefreshToken(); @AT@ 5466 @LENGTH@ 60
---------INS SimpleName@@expectedExpiringRefreshToken @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=accessToken.getRefreshToken() @AT@ 5466 @LENGTH@ 28
---------INS MethodInvocation@@accessToken.getRefreshToken() @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=accessToken.getRefreshToken() @AT@ 5497 @LENGTH@ 29
------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 5497 @LENGTH@ 11
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 5509 @LENGTH@ 17
---INS VariableDeclarationStatement@@OAuth2AccessToken refreshedAccessToken=services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5530 @LENGTH@ 121
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken refreshedAccessToken=services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null); @AT@ 5530 @LENGTH@ 17
------INS VariableDeclarationFragment@@refreshedAccessToken=services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null) @TO@ VariableDeclarationStatement@@OAuth2AccessToken refreshedAccessToken=services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null); @AT@ 5548 @LENGTH@ 102
---------INS SimpleName@@refreshedAccessToken @TO@ VariableDeclarationFragment@@refreshedAccessToken=services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null) @AT@ 5548 @LENGTH@ 20
---------INS MethodInvocation@@services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null) @TO@ VariableDeclarationFragment@@refreshedAccessToken=services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null) @AT@ 5571 @LENGTH@ 79
------------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null) @AT@ 5571 @LENGTH@ 8
------------INS SimpleName@@MethodName:refreshAccessToken:[expectedExpiringRefreshToken.getValue(), null] @TO@ MethodInvocation@@services.refreshAccessToken(expectedExpiringRefreshToken.getValue(),null) @AT@ 5580 @LENGTH@ 70
---------------INS MethodInvocation@@expectedExpiringRefreshToken.getValue() @TO@ SimpleName@@MethodName:refreshAccessToken:[expectedExpiringRefreshToken.getValue(), null] @AT@ 5599 @LENGTH@ 40
------------------INS SimpleName@@Name:expectedExpiringRefreshToken @TO@ MethodInvocation@@expectedExpiringRefreshToken.getValue() @AT@ 5599 @LENGTH@ 28
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@expectedExpiringRefreshToken.getValue() @AT@ 5629 @LENGTH@ 10
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:refreshAccessToken:[expectedExpiringRefreshToken.getValue(), null] @AT@ 5645 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertNotNull(refreshedAccessToken) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5654 @LENGTH@ 36
------INS MethodInvocation@@assertNotNull(refreshedAccessToken) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(refreshedAccessToken) @AT@ 5654 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertNotNull:[refreshedAccessToken] @TO@ MethodInvocation@@assertNotNull(refreshedAccessToken) @AT@ 5654 @LENGTH@ 35
------------INS SimpleName@@refreshedAccessToken @TO@ SimpleName@@MethodName:assertNotNull:[refreshedAccessToken] @AT@ 5668 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,tokenStore.getAccessTokenCount()) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenMaintainsState, Exception,  @AT@ 5693 @LENGTH@ 50
------INS MethodInvocation@@assertEquals(1,tokenStore.getAccessTokenCount()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,tokenStore.getAccessTokenCount()) @AT@ 5693 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertEquals:[1, tokenStore.getAccessTokenCount()] @TO@ MethodInvocation@@assertEquals(1,tokenStore.getAccessTokenCount()) @AT@ 5693 @LENGTH@ 49
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, tokenStore.getAccessTokenCount()] @AT@ 5706 @LENGTH@ 1
------------INS MethodInvocation@@tokenStore.getAccessTokenCount() @TO@ SimpleName@@MethodName:assertEquals:[1, tokenStore.getAccessTokenCount()] @AT@ 5709 @LENGTH@ 32
---------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.getAccessTokenCount() @AT@ 5709 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getAccessTokenCount:[] @TO@ MethodInvocation@@tokenStore.getAccessTokenCount() @AT@ 5720 @LENGTH@ 21


UPD ExpressionStatement@@Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Aggregator",this) @TO@ Assignment:executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Aggregator",this,isParallelProcessing()) @AT@ 6034 @LENGTH@ 107
---UPD Assignment@@executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Aggregator",this) @TO@ executorService=ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Aggregator",this,isParallelProcessing()) @AT@ 6034 @LENGTH@ 106
------UPD MethodInvocation@@ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Aggregator",this) @TO@ ProcessorDefinitionHelper.getConfiguredExecutorService(routeContext,"Aggregator",this,isParallelProcessing()) @AT@ 6052 @LENGTH@ 88
---------UPD SimpleName@@MethodName:getConfiguredExecutorService:[routeContext, "Aggregator", this] @TO@ MethodName:getConfiguredExecutorService:[routeContext, "Aggregator", this, isParallelProcessing()] @AT@ 6078 @LENGTH@ 62
------------INS MethodInvocation@@MethodName:isParallelProcessing:[] @TO@ SimpleName@@MethodName:getConfiguredExecutorService:[routeContext, "Aggregator", this] @AT@ 6141 @LENGTH@ 22


UPD MethodDeclaration@@protected, Object, MethodName:doConvertTo, final Class<?> type, final Exchange exchange, final Object value,  @TO@ protected, Object, MethodName:doConvertTo, final Class<?> type, final Exchange exchange, final Object value, boolean tryConvert,  @AT@ 1840 @LENGTH@ 428
---INS SingleVariableDeclaration@@boolean tryConvert @TO@ MethodDeclaration@@protected, Object, MethodName:doConvertTo, final Class<?> type, final Exchange exchange, final Object value,  @AT@ 1935 @LENGTH@ 18
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean tryConvert @AT@ 1935 @LENGTH@ 7
------INS SimpleName@@tryConvert @TO@ SingleVariableDeclaration@@boolean tryConvert @AT@ 1943 @LENGTH@ 10
---UPD VariableDeclarationStatement@@Object answer=super.doConvertTo(type,exchange,value); @TO@ Object answer=super.doConvertTo(type,exchange,value,tryConvert); @AT@ 1945 @LENGTH@ 57
------UPD VariableDeclarationFragment@@answer=super.doConvertTo(type,exchange,value) @TO@ answer=super.doConvertTo(type,exchange,value,tryConvert) @AT@ 1952 @LENGTH@ 49
---------UPD SuperMethodInvocation@@super.doConvertTo(type,exchange,value) @TO@ super.doConvertTo(type,exchange,value,tryConvert) @AT@ 1961 @LENGTH@ 40
------------UPD SimpleName@@MethodName:doConvertTo:[type, exchange, value] @TO@ MethodName:doConvertTo:[type, exchange, value, tryConvert] @AT@ 1967 @LENGTH@ 11
------------INS SimpleName@@tryConvert @TO@ SuperMethodInvocation@@super.doConvertTo(type,exchange,value) @AT@ 2022 @LENGTH@ 10
---UPD IfStatement@@if (answer == null && !loaded.get()) {  ensureLoaded();  answer=super.doConvertTo(type,exchange,value);} @TO@ if (answer == null && !loaded.get()) {  ensureLoaded();  answer=super.doConvertTo(type,exchange,value,tryConvert);} @AT@ 2011 @LENGTH@ 228
------UPD Block@@ThenBody:{  ensureLoaded();  answer=super.doConvertTo(type,exchange,value);} @TO@ ThenBody:{  ensureLoaded();  answer=super.doConvertTo(type,exchange,value,tryConvert);} @AT@ 2048 @LENGTH@ 191
---------UPD ExpressionStatement@@Assignment:answer=super.doConvertTo(type,exchange,value) @TO@ Assignment:answer=super.doConvertTo(type,exchange,value,tryConvert) @AT@ 2179 @LENGTH@ 50
------------UPD Assignment@@answer=super.doConvertTo(type,exchange,value) @TO@ answer=super.doConvertTo(type,exchange,value,tryConvert) @AT@ 2179 @LENGTH@ 49
---------------UPD SuperMethodInvocation@@super.doConvertTo(type,exchange,value) @TO@ super.doConvertTo(type,exchange,value,tryConvert) @AT@ 2188 @LENGTH@ 40
------------------UPD SimpleName@@MethodName:doConvertTo:[type, exchange, value] @TO@ MethodName:doConvertTo:[type, exchange, value, tryConvert] @AT@ 2194 @LENGTH@ 11
------------------INS SimpleName@@tryConvert @TO@ SuperMethodInvocation@@super.doConvertTo(type,exchange,value) @AT@ 2261 @LENGTH@ 10


INS ExpressionStatement@@Assignment:this.createdAt=new Date() @TO@ MethodDeclaration@@public, voidMethodName:Person, String firstname, String lastname, Integer age, Sex sex,  @AT@ 2043 @LENGTH@ 28
---INS Assignment@@this.createdAt=new Date() @TO@ ExpressionStatement@@Assignment:this.createdAt=new Date() @AT@ 2043 @LENGTH@ 27
------INS FieldAccess@@this.createdAt @TO@ Assignment@@this.createdAt=new Date() @AT@ 2043 @LENGTH@ 14
---------INS ThisExpression@@this @TO@ FieldAccess@@this.createdAt @AT@ 2043 @LENGTH@ 4
---------INS SimpleName@@createdAt @TO@ FieldAccess@@this.createdAt @AT@ 2048 @LENGTH@ 9
------INS Operator@@= @TO@ Assignment@@this.createdAt=new Date() @AT@ 2057 @LENGTH@ 1
------INS ClassInstanceCreation@@Date[] @TO@ Assignment@@this.createdAt=new Date() @AT@ 2060 @LENGTH@ 10
---------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 2060 @LENGTH@ 3
---------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 2064 @LENGTH@ 4


UPD IfStatement@@if (configService != null) {  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  ServerConfig config=(ServerConfig)configService.getValue();  EndpointConfig endpointConfig=new EndpointConfig();  endpointConfig.setConfigName(name);  config.addEndpointConfig(endpointConfig);} @TO@ if (config != null) {  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  EndpointConfig endpointConfig=new EndpointConfig();  endpointConfig.setConfigName(name);  config.addEndpointConfig(endpointConfig);  if (!context.isBooting()) {    context.restartRequired();  }} @AT@ 2585 @LENGTH@ 444
---UPD InfixExpression@@configService != null @TO@ config != null @AT@ 2589 @LENGTH@ 21
------UPD SimpleName@@configService @TO@ config @AT@ 2589 @LENGTH@ 13
---UPD Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  ServerConfig config=(ServerConfig)configService.getValue();  EndpointConfig endpointConfig=new EndpointConfig();  endpointConfig.setConfigName(name);  config.addEndpointConfig(endpointConfig);} @TO@ ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  EndpointConfig endpointConfig=new EndpointConfig();  endpointConfig.setConfigName(name);  config.addEndpointConfig(endpointConfig);  if (!context.isBooting()) {    context.restartRequired();  }} @AT@ 2612 @LENGTH@ 417
------DEL VariableDeclarationStatement@@ServerConfig config=(ServerConfig)configService.getValue(); @AT@ 2789 @LENGTH@ 62
---------DEL SimpleType@@ServerConfig @AT@ 2789 @LENGTH@ 12
---------DEL VariableDeclarationFragment@@config=(ServerConfig)configService.getValue() @AT@ 2802 @LENGTH@ 48
------------DEL SimpleName@@config @AT@ 2802 @LENGTH@ 6
------------DEL CastExpression@@(ServerConfig)configService.getValue() @AT@ 2811 @LENGTH@ 39
---------------DEL SimpleType@@ServerConfig @AT@ 2812 @LENGTH@ 12
---------------DEL MethodInvocation@@configService.getValue() @AT@ 2826 @LENGTH@ 24
------INS IfStatement@@if (!context.isBooting()) {  context.restartRequired();} @TO@ Block@@ThenBody:{  final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR));  final String name=address.getLastElement().getValue();  ServerConfig config=(ServerConfig)configService.getValue();  EndpointConfig endpointConfig=new EndpointConfig();  endpointConfig.setConfigName(name);  config.addEndpointConfig(endpointConfig);} @AT@ 2895 @LENGTH@ 84
---------INS PrefixExpression@@!context.isBooting() @TO@ IfStatement@@if (!context.isBooting()) {  context.restartRequired();} @AT@ 2899 @LENGTH@ 20
------------INS Operator@@! @TO@ PrefixExpression@@!context.isBooting() @AT@ 2899 @LENGTH@ 1
------------INS MethodInvocation@@context.isBooting() @TO@ PrefixExpression@@!context.isBooting() @AT@ 2900 @LENGTH@ 19
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isBooting() @AT@ 2900 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isBooting:[] @TO@ MethodInvocation@@context.isBooting() @AT@ 2908 @LENGTH@ 11
---------INS Block@@ThenBody:{  context.restartRequired();} @TO@ IfStatement@@if (!context.isBooting()) {  context.restartRequired();} @AT@ 2921 @LENGTH@ 58
------------INS ExpressionStatement@@MethodInvocation:context.restartRequired() @TO@ Block@@ThenBody:{  context.restartRequired();} @AT@ 2939 @LENGTH@ 26
---------------INS MethodInvocation@@context.restartRequired() @TO@ ExpressionStatement@@MethodInvocation:context.restartRequired() @AT@ 2939 @LENGTH@ 25
------------------MOV SimpleName@@Name:configService @TO@ MethodInvocation@@context.restartRequired() @AT@ 2826 @LENGTH@ 13
------------------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@context.restartRequired() @AT@ 2840 @LENGTH@ 10


UPD MethodDeclaration@@protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory,  @TO@ protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory, final InterceptorFactoryContext context,  @AT@ 5408 @LENGTH@ 331
---INS SingleVariableDeclaration@@final InterceptorFactoryContext context @TO@ MethodDeclaration@@protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory,  @AT@ 5441 @LENGTH@ 39
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 5441 @LENGTH@ 5
------INS SimpleType@@InterceptorFactoryContext @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 5447 @LENGTH@ 25
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 5473 @LENGTH@ 7
---DEL VariableDeclarationStatement@@final SimpleInterceptorFactoryContext context=new SimpleInterceptorFactoryContext(); @AT@ 5546 @LENGTH@ 86
------DEL Modifier@@final @AT@ 5546 @LENGTH@ 5
------DEL SimpleType@@SimpleInterceptorFactoryContext @AT@ 5552 @LENGTH@ 31
------DEL VariableDeclarationFragment@@context=new SimpleInterceptorFactoryContext() @AT@ 5584 @LENGTH@ 47
---------DEL SimpleName@@context @AT@ 5584 @LENGTH@ 7
---------DEL ClassInstanceCreation@@SimpleInterceptorFactoryContext[] @AT@ 5594 @LENGTH@ 37
------------DEL New@@new @AT@ 5594 @LENGTH@ 3
------------DEL SimpleType@@SimpleInterceptorFactoryContext @AT@ 5598 @LENGTH@ 31


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]DozerTypeConverter, [TypeConverter] @AT@ 2458 @LENGTH@ 205
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2458 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2469 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2471 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2484 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2484 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2484 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2490 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2493 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2499 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2499 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2508 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2518 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2518 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2525 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2542 @LENGTH@ 115
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2560 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2567 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2567 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2577 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2583 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2601 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2608 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2608 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2618 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2635 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2642 @LENGTH@ 4


DEL FieldDeclaration@@public, static, final, Charset, [macRomanCharSet=Charset.forName("MacRoman")] @AT@ 1880 @LENGTH@ 74
---DEL Modifier@@public @AT@ 1880 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1887 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1894 @LENGTH@ 5
---DEL SimpleType@@Charset @AT@ 1900 @LENGTH@ 7
---DEL VariableDeclarationFragment@@macRomanCharSet=Charset.forName("MacRoman") @AT@ 1908 @LENGTH@ 45
------DEL SimpleName@@macRomanCharSet @AT@ 1908 @LENGTH@ 15
------DEL MethodInvocation@@Charset.forName("MacRoman") @AT@ 1926 @LENGTH@ 27
---------DEL SimpleName@@Name:Charset @AT@ 1926 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["MacRoman"] @AT@ 1934 @LENGTH@ 19
------------DEL StringLiteral@@"MacRoman" @AT@ 1942 @LENGTH@ 10


UPD MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @TO@ public, static, WebArchive, MethodName:deployment, Exception,  @AT@ 2483 @LENGTH@ 1311
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2532 @LENGTH@ 9
---DEL TryStatement@@try {  SecurityTest.createSimpleRoleMappingSecurityDomain();} catch (Exception e) {} @AT@ 2606 @LENGTH@ 227
------DEL CatchClause@@catch (Exception e) {} @AT@ 2780 @LENGTH@ 53
---------DEL SingleVariableDeclaration@@Exception e @AT@ 2787 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 2787 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 2797 @LENGTH@ 1
---MOV ExpressionStatement@@MethodInvocation:SecurityTest.createSimpleRoleMappingSecurityDomain() @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2672 @LENGTH@ 53


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1876 @LENGTH@ 892
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 1891 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:foo").expectedMessageCount(1) @TO@ MethodInvocation:getMockEndpoint("mock:foo").expectedMinimumMessageCount(1) @AT@ 1244 @LENGTH@ 52
---UPD MethodInvocation@@getMockEndpoint("mock:foo").expectedMessageCount(1) @TO@ getMockEndpoint("mock:foo").expectedMinimumMessageCount(1) @AT@ 1244 @LENGTH@ 51
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 1272 @LENGTH@ 23


INS MethodDeclaration@@public, boolean, MethodName:isAbstract,  @TO@ TypeDeclaration@@[public]ProfileImpl, [Profile] @AT@ 15539 @LENGTH@ 127
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 15539 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 15546 @LENGTH@ 7
---INS SimpleName@@MethodName:isAbstract @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 15554 @LENGTH@ 10
---INS ReturnStatement@@InfixExpression:id == null || id.equals("mq-base") || id.startsWith("fabric-ensemble-0000") @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 15577 @LENGTH@ 83
------INS InfixExpression@@id == null || id.equals("mq-base") || id.startsWith("fabric-ensemble-0000") @TO@ ReturnStatement@@InfixExpression:id == null || id.equals("mq-base") || id.startsWith("fabric-ensemble-0000") @AT@ 15584 @LENGTH@ 75
---------INS InfixExpression@@id == null || id.equals("mq-base") @TO@ InfixExpression@@id == null || id.equals("mq-base") || id.startsWith("fabric-ensemble-0000") @AT@ 15584 @LENGTH@ 34
------------INS InfixExpression@@id == null @TO@ InfixExpression@@id == null || id.equals("mq-base") @AT@ 15584 @LENGTH@ 10
---------------INS SimpleName@@id @TO@ InfixExpression@@id == null @AT@ 15584 @LENGTH@ 2
---------------INS Operator@@== @TO@ InfixExpression@@id == null @AT@ 15586 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@id == null @AT@ 15590 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@id == null || id.equals("mq-base") @AT@ 15594 @LENGTH@ 2
------------INS MethodInvocation@@id.equals("mq-base") @TO@ InfixExpression@@id == null || id.equals("mq-base") @AT@ 15598 @LENGTH@ 20
---------------INS SimpleName@@Name:id @TO@ MethodInvocation@@id.equals("mq-base") @AT@ 15598 @LENGTH@ 2
---------------INS SimpleName@@MethodName:equals:["mq-base"] @TO@ MethodInvocation@@id.equals("mq-base") @AT@ 15601 @LENGTH@ 17
------------------INS StringLiteral@@"mq-base" @TO@ SimpleName@@MethodName:equals:["mq-base"] @AT@ 15608 @LENGTH@ 9
---------INS Operator@@|| @TO@ InfixExpression@@id == null || id.equals("mq-base") || id.startsWith("fabric-ensemble-0000") @AT@ 15618 @LENGTH@ 2
---------INS MethodInvocation@@id.startsWith("fabric-ensemble-0000") @TO@ InfixExpression@@id == null || id.equals("mq-base") || id.startsWith("fabric-ensemble-0000") @AT@ 15622 @LENGTH@ 37
------------INS SimpleName@@Name:id @TO@ MethodInvocation@@id.startsWith("fabric-ensemble-0000") @AT@ 15622 @LENGTH@ 2
------------INS SimpleName@@MethodName:startsWith:["fabric-ensemble-0000"] @TO@ MethodInvocation@@id.startsWith("fabric-ensemble-0000") @AT@ 15625 @LENGTH@ 34
---------------INS StringLiteral@@"fabric-ensemble-0000" @TO@ SimpleName@@MethodName:startsWith:["fabric-ensemble-0000"] @AT@ 15636 @LENGTH@ 22


UPD VariableDeclarationStatement@@final Set<DotName> interfaces=getPotentialViewInterfaces(beanClass); @TO@ final Set<DotName> interfaces=new HashSet<DotName>(getPotentialViewInterfaces(beanClass)); @AT@ 9339 @LENGTH@ 70
---UPD VariableDeclarationFragment@@interfaces=getPotentialViewInterfaces(beanClass) @TO@ interfaces=new HashSet<DotName>(getPotentialViewInterfaces(beanClass)) @AT@ 9358 @LENGTH@ 50
------INS ClassInstanceCreation@@HashSet<DotName>[getPotentialViewInterfaces(beanClass)] @TO@ VariableDeclarationFragment@@interfaces=getPotentialViewInterfaces(beanClass) @AT@ 9398 @LENGTH@ 59
---------MOV MethodInvocation@@getPotentialViewInterfaces(beanClass) @TO@ ClassInstanceCreation@@HashSet<DotName>[getPotentialViewInterfaces(beanClass)] @AT@ 9371 @LENGTH@ 37
---------INS New@@new @TO@ ClassInstanceCreation@@HashSet<DotName>[getPotentialViewInterfaces(beanClass)] @AT@ 9398 @LENGTH@ 3
---------INS ParameterizedType@@HashSet<DotName> @TO@ ClassInstanceCreation@@HashSet<DotName>[getPotentialViewInterfaces(beanClass)] @AT@ 9402 @LENGTH@ 16
------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<DotName> @AT@ 9402 @LENGTH@ 7
------------INS SimpleType@@DotName @TO@ ParameterizedType@@HashSet<DotName> @AT@ 9410 @LENGTH@ 7


UPD MethodDeclaration@@protected, SessionID, MethodName:openSession, final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName, Exception,  @TO@ protected, StatefulEJBLocator<T>, T, MethodName:openSession, EJBReceiverContext context, Class<T> viewType, String appName, String moduleName, String distinctName, String beanName, Exception,  @AT@ 9690 @LENGTH@ 777
---INS ParameterizedType@@StatefulEJBLocator<T> @TO@ MethodDeclaration@@protected, SessionID, MethodName:openSession, final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName, Exception,  @AT@ 8868 @LENGTH@ 21
------INS SimpleType@@StatefulEJBLocator @TO@ ParameterizedType@@StatefulEJBLocator<T> @AT@ 8868 @LENGTH@ 18
------INS SimpleType@@T @TO@ ParameterizedType@@StatefulEJBLocator<T> @AT@ 8887 @LENGTH@ 1
---INS SingleVariableDeclaration@@Class<T> viewType @TO@ MethodDeclaration@@protected, SessionID, MethodName:openSession, final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName, Exception,  @AT@ 8930 @LENGTH@ 17
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> viewType @AT@ 8930 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 8930 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 8936 @LENGTH@ 1
------INS SimpleName@@viewType @TO@ SingleVariableDeclaration@@Class<T> viewType @AT@ 8939 @LENGTH@ 8
---INS VariableDeclarationStatement@@final SessionID sessionID=stateful.createSession(); @TO@ MethodDeclaration@@protected, SessionID, MethodName:openSession, final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName, Exception,  @AT@ 9565 @LENGTH@ 53
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final SessionID sessionID=stateful.createSession(); @AT@ 9565 @LENGTH@ 5
------INS SimpleType@@SessionID @TO@ VariableDeclarationStatement@@final SessionID sessionID=stateful.createSession(); @AT@ 9571 @LENGTH@ 9
------INS VariableDeclarationFragment@@sessionID=stateful.createSession() @TO@ VariableDeclarationStatement@@final SessionID sessionID=stateful.createSession(); @AT@ 9581 @LENGTH@ 36
---------INS SimpleName@@sessionID @TO@ VariableDeclarationFragment@@sessionID=stateful.createSession() @AT@ 9581 @LENGTH@ 9
---------INS MethodInvocation@@stateful.createSession() @TO@ VariableDeclarationFragment@@sessionID=stateful.createSession() @AT@ 9593 @LENGTH@ 24
------------INS SimpleName@@Name:stateful @TO@ MethodInvocation@@stateful.createSession() @AT@ 9593 @LENGTH@ 8
------------INS SimpleName@@MethodName:createSession:[] @TO@ MethodInvocation@@stateful.createSession() @AT@ 9602 @LENGTH@ 15
---INS ReturnStatement@@ClassInstanceCreation:new StatefulEJBLocator<T>(viewType,appName,moduleName,beanName,distinctName,sessionID) @TO@ MethodDeclaration@@protected, SessionID, MethodName:openSession, final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName, Exception,  @AT@ 9627 @LENGTH@ 99
------INS ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @TO@ ReturnStatement@@ClassInstanceCreation:new StatefulEJBLocator<T>(viewType,appName,moduleName,beanName,distinctName,sessionID) @AT@ 9634 @LENGTH@ 91
---------INS New@@new @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9634 @LENGTH@ 3
---------INS ParameterizedType@@StatefulEJBLocator<T> @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9638 @LENGTH@ 21
------------INS SimpleType@@StatefulEJBLocator @TO@ ParameterizedType@@StatefulEJBLocator<T> @AT@ 9638 @LENGTH@ 18
------------INS SimpleType@@T @TO@ ParameterizedType@@StatefulEJBLocator<T> @AT@ 9657 @LENGTH@ 1
---------INS SimpleName@@viewType @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9660 @LENGTH@ 8
---------INS SimpleName@@appName @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9670 @LENGTH@ 7
---------INS SimpleName@@moduleName @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9679 @LENGTH@ 10
---------INS SimpleName@@beanName @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9691 @LENGTH@ 8
---------INS SimpleName@@distinctName @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9701 @LENGTH@ 12
---------INS SimpleName@@sessionID @TO@ ClassInstanceCreation@@StatefulEJBLocator<T>[viewType, appName, moduleName, beanName, distinctName, sessionID] @AT@ 9715 @LENGTH@ 9
---DEL SimpleType@@SessionID @AT@ 9700 @LENGTH@ 9
---UPD SingleVariableDeclaration@@final EJBReceiverContext ejbReceiverContext @TO@ EJBReceiverContext context @AT@ 9722 @LENGTH@ 43
------DEL Modifier@@final @AT@ 9722 @LENGTH@ 5
------UPD SimpleName@@ejbReceiverContext @TO@ context @AT@ 9747 @LENGTH@ 18
---UPD SingleVariableDeclaration@@final String appName @TO@ String appName @AT@ 9767 @LENGTH@ 20
------DEL Modifier@@final @AT@ 9767 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final String moduleName @TO@ String moduleName @AT@ 9789 @LENGTH@ 23
------DEL Modifier@@final @AT@ 9789 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final String distinctName @TO@ String distinctName @AT@ 9814 @LENGTH@ 25
------DEL Modifier@@final @AT@ 9814 @LENGTH@ 5
---UPD SingleVariableDeclaration@@final String beanName @TO@ String beanName @AT@ 9841 @LENGTH@ 21
------DEL Modifier@@final @AT@ 9841 @LENGTH@ 5
---UPD IfStatement@@if (component instanceof StatefulSessionComponent) {  final StatefulSessionComponent stateful=(StatefulSessionComponent)component;  return stateful.createSession();} else {  throw new IllegalArgumentException("EJB " + beanName + " is not a Stateful Session bean in app: "+ appName+ " module: "+ moduleName+ " distinct name:"+ distinctName);} @TO@ if (!(component instanceof StatefulSessionComponent)) {  throw new IllegalArgumentException("EJB " + beanName + " is not a Stateful Session bean in app: "+ appName+ " module: "+ moduleName+ " distinct name:"+ distinctName);} @AT@ 10061 @LENGTH@ 400
------INS PrefixExpression@@!(component instanceof StatefulSessionComponent) @TO@ IfStatement@@if (component instanceof StatefulSessionComponent) {  final StatefulSessionComponent stateful=(StatefulSessionComponent)component;  return stateful.createSession();} else {  throw new IllegalArgumentException("EJB " + beanName + " is not a Stateful Session bean in app: "+ appName+ " module: "+ moduleName+ " distinct name:"+ distinctName);} @AT@ 9223 @LENGTH@ 48
---------INS Operator@@! @TO@ PrefixExpression@@!(component instanceof StatefulSessionComponent) @AT@ 9223 @LENGTH@ 1
---------INS ParenthesizedExpression@@(component instanceof StatefulSessionComponent) @TO@ PrefixExpression@@!(component instanceof StatefulSessionComponent) @AT@ 9224 @LENGTH@ 47
------------INS InstanceofExpression@@component instanceof StatefulSessionComponent @TO@ ParenthesizedExpression@@(component instanceof StatefulSessionComponent) @AT@ 9225 @LENGTH@ 45
---------------MOV SimpleName@@component @TO@ InstanceofExpression@@component instanceof StatefulSessionComponent @AT@ 10065 @LENGTH@ 9
---------------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@component instanceof StatefulSessionComponent @AT@ 10075 @LENGTH@ 10
---------------MOV SimpleType@@StatefulSessionComponent @TO@ InstanceofExpression@@component instanceof StatefulSessionComponent @AT@ 10086 @LENGTH@ 24
------DEL InstanceofExpression@@component instanceof StatefulSessionComponent @AT@ 10065 @LENGTH@ 45
------DEL Block@@ThenBody:{  final StatefulSessionComponent stateful=(StatefulSessionComponent)component;  return stateful.createSession();} @AT@ 10112 @LENGTH@ 148
---------DEL ReturnStatement@@MethodInvocation:stateful.createSession() @AT@ 10218 @LENGTH@ 32
------------DEL MethodInvocation@@stateful.createSession() @AT@ 10225 @LENGTH@ 24
---------------DEL SimpleName@@Name:stateful @AT@ 10225 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:createSession:[] @AT@ 10234 @LENGTH@ 15
------UPD Block@@ElseBody:{  throw new IllegalArgumentException("EJB " + beanName + " is not a Stateful Session bean in app: "+ appName+ " module: "+ moduleName+ " distinct name:"+ distinctName);} @TO@ ThenBody:{  throw new IllegalArgumentException("EJB " + beanName + " is not a Stateful Session bean in app: "+ appName+ " module: "+ moduleName+ " distinct name:"+ distinctName);} @AT@ 10266 @LENGTH@ 195
---MOV VariableDeclarationStatement@@final StatefulSessionComponent stateful=(StatefulSessionComponent)component; @TO@ MethodDeclaration@@protected, SessionID, MethodName:openSession, final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName, Exception,  @AT@ 10126 @LENGTH@ 79


INS FieldDeclaration@@public, static, final, Log, [LOG=LogFactory.getLog(SerDeUtils.class.getName())] @TO@ TypeDeclaration@@[public, final]SerDeUtils,  @AT@ 3016 @LENGTH@ 76
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, Log, [LOG=LogFactory.getLog(SerDeUtils.class.getName())] @AT@ 3016 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, Log, [LOG=LogFactory.getLog(SerDeUtils.class.getName())] @AT@ 3023 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, Log, [LOG=LogFactory.getLog(SerDeUtils.class.getName())] @AT@ 3030 @LENGTH@ 5
---INS SimpleType@@Log @TO@ FieldDeclaration@@public, static, final, Log, [LOG=LogFactory.getLog(SerDeUtils.class.getName())] @AT@ 3036 @LENGTH@ 3
---INS VariableDeclarationFragment@@LOG=LogFactory.getLog(SerDeUtils.class.getName()) @TO@ FieldDeclaration@@public, static, final, Log, [LOG=LogFactory.getLog(SerDeUtils.class.getName())] @AT@ 3040 @LENGTH@ 51
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(SerDeUtils.class.getName()) @AT@ 3040 @LENGTH@ 3
------INS MethodInvocation@@LogFactory.getLog(SerDeUtils.class.getName()) @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(SerDeUtils.class.getName()) @AT@ 3046 @LENGTH@ 45
---------INS SimpleName@@Name:LogFactory @TO@ MethodInvocation@@LogFactory.getLog(SerDeUtils.class.getName()) @AT@ 3046 @LENGTH@ 10
---------INS SimpleName@@MethodName:getLog:[SerDeUtils.class.getName()] @TO@ MethodInvocation@@LogFactory.getLog(SerDeUtils.class.getName()) @AT@ 3057 @LENGTH@ 34
------------INS MethodInvocation@@SerDeUtils.class.getName() @TO@ SimpleName@@MethodName:getLog:[SerDeUtils.class.getName()] @AT@ 3064 @LENGTH@ 26
---------------INS TypeLiteral@@SerDeUtils.class @TO@ MethodInvocation@@SerDeUtils.class.getName() @AT@ 3064 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@SerDeUtils.class.getName() @AT@ 3081 @LENGTH@ 9


INS MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @TO@ TypeDeclaration@@[final]OperationContextImpl, AbstractOperationContext @AT@ 9892 @LENGTH@ 288
---INS Modifier@@public @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 9892 @LENGTH@ 6
---INS SimpleType@@ImmutableManagementResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 9899 @LENGTH@ 39
---INS SimpleName@@MethodName:getRootResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 9939 @LENGTH@ 27
---INS VariableDeclarationStatement@@ImmutableManagementResourceRegistration delegate=modelController.getRootRegistration(); @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 9979 @LENGTH@ 89
------INS SimpleType@@ImmutableManagementResourceRegistration @TO@ VariableDeclarationStatement@@ImmutableManagementResourceRegistration delegate=modelController.getRootRegistration(); @AT@ 9979 @LENGTH@ 39
------INS VariableDeclarationFragment@@delegate=modelController.getRootRegistration() @TO@ VariableDeclarationStatement@@ImmutableManagementResourceRegistration delegate=modelController.getRootRegistration(); @AT@ 10019 @LENGTH@ 48
---------INS SimpleName@@delegate @TO@ VariableDeclarationFragment@@delegate=modelController.getRootRegistration() @AT@ 10019 @LENGTH@ 8
---------INS MethodInvocation@@modelController.getRootRegistration() @TO@ VariableDeclarationFragment@@delegate=modelController.getRootRegistration() @AT@ 10030 @LENGTH@ 37
------------INS SimpleName@@Name:modelController @TO@ MethodInvocation@@modelController.getRootRegistration() @AT@ 10030 @LENGTH@ 15
------------INS SimpleName@@MethodName:getRootRegistration:[] @TO@ MethodInvocation@@modelController.getRootRegistration() @AT@ 10046 @LENGTH@ 21
---INS ReturnStatement@@ConditionalExpression:delegate == null ? null : new DelegatingImmutableManagementResourceRegistration(delegate) @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 10077 @LENGTH@ 97
------INS ConditionalExpression@@delegate == null ? null : new DelegatingImmutableManagementResourceRegistration(delegate) @TO@ ReturnStatement@@ConditionalExpression:delegate == null ? null : new DelegatingImmutableManagementResourceRegistration(delegate) @AT@ 10084 @LENGTH@ 89
---------INS InfixExpression@@delegate == null @TO@ ConditionalExpression@@delegate == null ? null : new DelegatingImmutableManagementResourceRegistration(delegate) @AT@ 10084 @LENGTH@ 16
------------INS SimpleName@@delegate @TO@ InfixExpression@@delegate == null @AT@ 10084 @LENGTH@ 8
------------INS Operator@@== @TO@ InfixExpression@@delegate == null @AT@ 10092 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@delegate == null @AT@ 10096 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@delegate == null ? null : new DelegatingImmutableManagementResourceRegistration(delegate) @AT@ 10103 @LENGTH@ 4
---------INS ClassInstanceCreation@@DelegatingImmutableManagementResourceRegistration[delegate] @TO@ ConditionalExpression@@delegate == null ? null : new DelegatingImmutableManagementResourceRegistration(delegate) @AT@ 10110 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@DelegatingImmutableManagementResourceRegistration[delegate] @AT@ 10110 @LENGTH@ 3
------------INS SimpleType@@DelegatingImmutableManagementResourceRegistration @TO@ ClassInstanceCreation@@DelegatingImmutableManagementResourceRegistration[delegate] @AT@ 10114 @LENGTH@ 49
------------INS SimpleName@@delegate @TO@ ClassInstanceCreation@@DelegatingImmutableManagementResourceRegistration[delegate] @AT@ 10164 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractConnectionIntegrationTests,  @AT@ 3867 @LENGTH@ 230
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 3867 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 3874 @LENGTH@ 4
---INS SimpleName@@MethodName:testBitSet @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 3879 @LENGTH@ 10
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 3899 @LENGTH@ 9
---INS VariableDeclarationStatement@@String key="bitset-test"; @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 3913 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key="bitset-test"; @AT@ 3913 @LENGTH@ 6
------INS VariableDeclarationFragment@@key="bitset-test" @TO@ VariableDeclarationStatement@@String key="bitset-test"; @AT@ 3920 @LENGTH@ 19
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key="bitset-test" @AT@ 3920 @LENGTH@ 3
---------INS StringLiteral@@"bitset-test" @TO@ VariableDeclarationFragment@@key="bitset-test" @AT@ 3926 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:connection.setBit(key,0,false) @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 3943 @LENGTH@ 33
------INS MethodInvocation@@connection.setBit(key,0,false) @TO@ ExpressionStatement@@MethodInvocation:connection.setBit(key,0,false) @AT@ 3943 @LENGTH@ 32
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.setBit(key,0,false) @AT@ 3943 @LENGTH@ 10
---------INS SimpleName@@MethodName:setBit:[key, 0, false] @TO@ MethodInvocation@@connection.setBit(key,0,false) @AT@ 3954 @LENGTH@ 21
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:setBit:[key, 0, false] @AT@ 3961 @LENGTH@ 3
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setBit:[key, 0, false] @AT@ 3966 @LENGTH@ 1
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setBit:[key, 0, false] @AT@ 3969 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:connection.setBit(key,1,true) @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 3979 @LENGTH@ 32
------INS MethodInvocation@@connection.setBit(key,1,true) @TO@ ExpressionStatement@@MethodInvocation:connection.setBit(key,1,true) @AT@ 3979 @LENGTH@ 31
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.setBit(key,1,true) @AT@ 3979 @LENGTH@ 10
---------INS SimpleName@@MethodName:setBit:[key, 1, true] @TO@ MethodInvocation@@connection.setBit(key,1,true) @AT@ 3990 @LENGTH@ 20
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:setBit:[key, 1, true] @AT@ 3997 @LENGTH@ 3
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setBit:[key, 1, true] @AT@ 4002 @LENGTH@ 1
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setBit:[key, 1, true] @AT@ 4005 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertTrue(!connection.getBit(key,0)) @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 4014 @LENGTH@ 39
------INS MethodInvocation@@assertTrue(!connection.getBit(key,0)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(!connection.getBit(key,0)) @AT@ 4014 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertTrue:[!connection.getBit(key,0)] @TO@ MethodInvocation@@assertTrue(!connection.getBit(key,0)) @AT@ 4014 @LENGTH@ 38
------------INS PrefixExpression@@!connection.getBit(key,0) @TO@ SimpleName@@MethodName:assertTrue:[!connection.getBit(key,0)] @AT@ 4025 @LENGTH@ 26
---------------INS Operator@@! @TO@ PrefixExpression@@!connection.getBit(key,0) @AT@ 4025 @LENGTH@ 1
---------------INS MethodInvocation@@connection.getBit(key,0) @TO@ PrefixExpression@@!connection.getBit(key,0) @AT@ 4026 @LENGTH@ 25
------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.getBit(key,0) @AT@ 4026 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getBit:[key, 0] @TO@ MethodInvocation@@connection.getBit(key,0) @AT@ 4037 @LENGTH@ 14
---------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:getBit:[key, 0] @AT@ 4044 @LENGTH@ 3
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getBit:[key, 0] @AT@ 4049 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertTrue(connection.getBit(key,1)) @TO@ MethodDeclaration@@public, void, MethodName:testBitSet, Exception,  @AT@ 4056 @LENGTH@ 38
------INS MethodInvocation@@assertTrue(connection.getBit(key,1)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(connection.getBit(key,1)) @AT@ 4056 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertTrue:[connection.getBit(key,1)] @TO@ MethodInvocation@@assertTrue(connection.getBit(key,1)) @AT@ 4056 @LENGTH@ 37
------------INS MethodInvocation@@connection.getBit(key,1) @TO@ SimpleName@@MethodName:assertTrue:[connection.getBit(key,1)] @AT@ 4067 @LENGTH@ 25
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.getBit(key,1) @AT@ 4067 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getBit:[key, 1] @TO@ MethodInvocation@@connection.getBit(key,1) @AT@ 4078 @LENGTH@ 14
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:getBit:[key, 1] @AT@ 4085 @LENGTH@ 3
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:getBit:[key, 1] @AT@ 4090 @LENGTH@ 1


INS MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @TO@ TypeDeclaration@@MockOperationContext, [OperationContext] @AT@ 10500 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 10500 @LENGTH@ 6
---INS SimpleType@@ImmutableManagementResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 10507 @LENGTH@ 39
---INS SimpleName@@MethodName:getRootResourceRegistration @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 10547 @LENGTH@ 27
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 10591 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 10598 @LENGTH@ 4


INS MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @TO@ TypeDeclaration@@[public]ChannelServer, [Closeable] @AT@ 3968 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3968 @LENGTH@ 6
---INS SimpleType@@Endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3975 @LENGTH@ 8
---INS SimpleName@@MethodName:getEndpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3984 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 4008 @LENGTH@ 16
------INS SimpleName@@endpoint @TO@ ReturnStatement@@SimpleName:endpoint @AT@ 4015 @LENGTH@ 8


UPD TryStatement@@try {  return context.proceed();} catch (Exception ex) {  final EJBComponent ejbComponent=component;  if (ejbComponent.getApplicationException(ex.getClass(),context.getMethod()) != null) {    throw ex;  }  if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {    throw ex;  }  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    discard=true;  }  throw ex;}catch (final Error e) {  discard=true;  throw e;}catch (final Throwable t) {  discard=true;  throw new RuntimeException(t);} finally {  context.putPrivateData(ComponentInstance.class,null);  if (!discard) {    componentInstance.destroy();  }} @TO@ try {  return context.proceed();} catch (Exception ex) {  final EJBComponent ejbComponent=component;  if (ejbComponent.getApplicationException(ex.getClass(),context.getMethod()) != null) {    throw ex;  }  if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {    throw ex;  }  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    discard=true;  }  throw ex;}catch (final Error e) {  discard=true;  throw e;}catch (final Throwable t) {  discard=true;  throw new RuntimeException(t);} finally {  if (!discard) {    componentInstance.destroy();  }} @AT@ 2691 @LENGTH@ 1091
---UPD Block@@FinallyBody:{  context.putPrivateData(ComponentInstance.class,null);  if (!discard) {    componentInstance.destroy();  }} @TO@ FinallyBody:{  if (!discard) {    componentInstance.destroy();  }} @AT@ 3581 @LENGTH@ 201
------DEL ExpressionStatement@@MethodInvocation:context.putPrivateData(ComponentInstance.class,null) @AT@ 3595 @LENGTH@ 54
---------DEL MethodInvocation@@context.putPrivateData(ComponentInstance.class,null) @AT@ 3595 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 3595 @LENGTH@ 7
------------DEL SimpleName@@MethodName:putPrivateData:[ComponentInstance.class, null] @AT@ 3603 @LENGTH@ 45
---------------DEL TypeLiteral@@ComponentInstance.class @AT@ 3618 @LENGTH@ 23
---------------DEL NullLiteral@@null @AT@ 3643 @LENGTH@ 4


INS FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 17310 @LENGTH@ 77
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17310 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17317 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17324 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17330 @LENGTH@ 3
---INS VariableDeclarationFragment@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508 @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17334 @LENGTH@ 52
------INS SimpleName@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508 @AT@ 17334 @LENGTH@ 35
------INS NumberLiteral@@0x0508 @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508 @AT@ 17380 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, String, [PATH_SPEC_TWO="/" + PATH_TWO + "/*"] @AT@ 1984 @LENGTH@ 66
---DEL Modifier@@private @AT@ 1984 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1992 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1999 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 2005 @LENGTH@ 6
---DEL VariableDeclarationFragment@@PATH_SPEC_TWO="/" + PATH_TWO + "/*" @AT@ 2012 @LENGTH@ 37
------DEL SimpleName@@PATH_SPEC_TWO @AT@ 2012 @LENGTH@ 13
------DEL InfixExpression@@"/" + PATH_TWO + "/*" @AT@ 2028 @LENGTH@ 21
---------DEL StringLiteral@@"/" @AT@ 2028 @LENGTH@ 3
---------DEL Operator@@+ @AT@ 2031 @LENGTH@ 1
---------DEL SimpleName@@PATH_TWO @AT@ 2034 @LENGTH@ 8
---------DEL StringLiteral@@"/*" @AT@ 2045 @LENGTH@ 4


UPD SwitchStatement@@switch (transition) {case STARTING_to_UP:{    CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();    if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {      StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();      if (poolStats.getNames().size() != 0) {        DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);        for (        String statName : poolStats.getNames()) {          subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));        }        subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);      }    }    break;  }case UP_to_STOP_REQUESTED:{  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {    registration.unregisterSubModel(pe);  }  break;}} @TO@ switch (transition) {case STARTING_to_UP:{    CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();    if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {      StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();      if (poolStats.getNames().size() != 0) {        DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration overrideRegistration=registration;        if (registration.isAllowsOverride()) {          overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){            @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(            Locale locale){              return Collections.emptyMap();            }            @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(            Locale locale){              return Collections.emptyMap();            }          });        }        ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);        for (        String statName : poolStats.getNames()) {          subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));        }        subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);      }    }    break;  }case UP_to_STOP_REQUESTED:{  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName);  if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {    overrideRegistration.unregisterSubModel(pe);  }  break;}} @AT@ 9099 @LENGTH@ 2143
---UPD IfStatement@@if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @TO@ if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration overrideRegistration=registration;    if (registration.isAllowsOverride()) {      overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){        @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }        @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }      });    }    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9344 @LENGTH@ 1352
------UPD Block@@ThenBody:{  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @TO@ ThenBody:{  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration overrideRegistration=registration;    if (registration.isAllowsOverride()) {      overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){        @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }        @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }      });    }    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9455 @LENGTH@ 1241
---------UPD IfStatement@@if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 9617 @LENGTH@ 1049
------------UPD Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 9655 @LENGTH@ 1011
---------------UPD VariableDeclarationStatement@@ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider); @TO@ ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider); @AT@ 10051 @LENGTH@ 117
------------------UPD VariableDeclarationFragment@@subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider) @TO@ subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider) @AT@ 10082 @LENGTH@ 85
---------------------UPD MethodInvocation@@registration.registerSubModel(pe,statsResourceDescriptionProvider) @TO@ overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider) @AT@ 10100 @LENGTH@ 67
------------------------UPD SimpleName@@Name:registration @TO@ Name:overrideRegistration @AT@ 10100 @LENGTH@ 12
---------------INS VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration; @TO@ Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 10240 @LENGTH@ 67
------------------INS SimpleType@@ManagementResourceRegistration @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration; @AT@ 10240 @LENGTH@ 30
------------------INS VariableDeclarationFragment@@overrideRegistration=registration @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration; @AT@ 10271 @LENGTH@ 35
---------------------INS SimpleName@@overrideRegistration @TO@ VariableDeclarationFragment@@overrideRegistration=registration @AT@ 10271 @LENGTH@ 20
---------------------INS SimpleName@@registration @TO@ VariableDeclarationFragment@@overrideRegistration=registration @AT@ 10294 @LENGTH@ 12
---------------INS IfStatement@@if (registration.isAllowsOverride()) {  overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @TO@ Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 10555 @LENGTH@ 881
------------------INS MethodInvocation@@registration.isAllowsOverride() @TO@ IfStatement@@if (registration.isAllowsOverride()) {  overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @AT@ 10559 @LENGTH@ 31
---------------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.isAllowsOverride() @AT@ 10559 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:isAllowsOverride:[] @TO@ MethodInvocation@@registration.isAllowsOverride() @AT@ 10572 @LENGTH@ 18
------------------INS Block@@ThenBody:{  overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @TO@ IfStatement@@if (registration.isAllowsOverride()) {  overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @AT@ 10592 @LENGTH@ 844
---------------------INS ExpressionStatement@@Assignment:overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @TO@ Block@@ThenBody:{  overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @AT@ 10634 @LENGTH@ 764
------------------------INS Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @TO@ ExpressionStatement@@Assignment:overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10634 @LENGTH@ 763
---------------------------INS SimpleName@@overrideRegistration @TO@ Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10634 @LENGTH@ 20
---------------------------INS Operator@@= @TO@ Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10654 @LENGTH@ 1
---------------------------INS MethodInvocation@@registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @TO@ Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10657 @LENGTH@ 740
------------------------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10657 @LENGTH@ 12
------------------------------INS SimpleName@@MethodName:registerOverrideModel:[deploymentUnitName, new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
] @TO@ MethodInvocation@@registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10670 @LENGTH@ 727
---------------------------------INS SimpleName@@deploymentUnitName @TO@ SimpleName@@MethodName:registerOverrideModel:[deploymentUnitName, new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
] @AT@ 10692 @LENGTH@ 18
---------------------------------INS ClassInstanceCreation@@OverrideDescriptionProvider[] @TO@ SimpleName@@MethodName:registerOverrideModel:[deploymentUnitName, new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
] @AT@ 10712 @LENGTH@ 684
------------------------------------INS New@@new @TO@ ClassInstanceCreation@@OverrideDescriptionProvider[] @AT@ 10712 @LENGTH@ 3
------------------------------------INS SimpleType@@OverrideDescriptionProvider @TO@ ClassInstanceCreation@@OverrideDescriptionProvider[] @AT@ 10716 @LENGTH@ 27
------------------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OverrideDescriptionProvider[] @AT@ 10746 @LENGTH@ 650
---------------------------------------INS MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 10846 @LENGTH@ 204
------------------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10846 @LENGTH@ 6
------------------------------------------INS ParameterizedType@@Map<String,ModelNode> @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10853 @LENGTH@ 22
---------------------------------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 10853 @LENGTH@ 3
---------------------------------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 10857 @LENGTH@ 6
---------------------------------------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 10865 @LENGTH@ 9
------------------------------------------INS SimpleName@@MethodName:getAttributeOverrideDescriptions @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10876 @LENGTH@ 32
------------------------------------------INS SingleVariableDeclaration@@Locale locale @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10909 @LENGTH@ 13
---------------------------------------------INS SimpleType@@Locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 10909 @LENGTH@ 6
---------------------------------------------INS SimpleName@@locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 10916 @LENGTH@ 6
------------------------------------------INS ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10974 @LENGTH@ 30
---------------------------------------------INS MethodInvocation@@Collections.emptyMap() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyMap() @AT@ 10981 @LENGTH@ 22
------------------------------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 10981 @LENGTH@ 11
------------------------------------------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 10993 @LENGTH@ 10
---------------------------------------INS MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 11150 @LENGTH@ 204
------------------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11150 @LENGTH@ 6
------------------------------------------INS ParameterizedType@@Map<String,ModelNode> @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11157 @LENGTH@ 22
---------------------------------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 11157 @LENGTH@ 3
---------------------------------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 11161 @LENGTH@ 6
---------------------------------------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 11169 @LENGTH@ 9
------------------------------------------INS SimpleName@@MethodName:getChildTypeOverrideDescriptions @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11180 @LENGTH@ 32
------------------------------------------INS SingleVariableDeclaration@@Locale locale @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11213 @LENGTH@ 13
---------------------------------------------INS SimpleType@@Locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 11213 @LENGTH@ 6
---------------------------------------------INS SimpleName@@locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 11220 @LENGTH@ 6
------------------------------------------INS ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11278 @LENGTH@ 30
---------------------------------------------INS MethodInvocation@@Collections.emptyMap() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyMap() @AT@ 11285 @LENGTH@ 22
------------------------------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 11285 @LENGTH@ 11
------------------------------------------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 11297 @LENGTH@ 10
---UPD IfStatement@@if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {  registration.unregisterSubModel(pe);} @TO@ if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {  overrideRegistration.unregisterSubModel(pe);} @AT@ 10990 @LENGTH@ 167
------UPD InfixExpression@@registration.getSubModel(PathAddress.pathAddress(pe)) != null @TO@ overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null @AT@ 10994 @LENGTH@ 61
---------UPD MethodInvocation@@registration.getSubModel(PathAddress.pathAddress(pe)) @TO@ overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @AT@ 10994 @LENGTH@ 53
------------UPD SimpleName@@Name:registration @TO@ Name:overrideRegistration @AT@ 10994 @LENGTH@ 12
------UPD Block@@ThenBody:{  registration.unregisterSubModel(pe);} @TO@ ThenBody:{  overrideRegistration.unregisterSubModel(pe);} @AT@ 11057 @LENGTH@ 100
---------UPD ExpressionStatement@@MethodInvocation:registration.unregisterSubModel(pe) @TO@ MethodInvocation:overrideRegistration.unregisterSubModel(pe) @AT@ 11091 @LENGTH@ 36
------------UPD MethodInvocation@@registration.unregisterSubModel(pe) @TO@ overrideRegistration.unregisterSubModel(pe) @AT@ 11091 @LENGTH@ 35
---------------UPD SimpleName@@Name:registration @TO@ Name:overrideRegistration @AT@ 11091 @LENGTH@ 12
---INS VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName); @TO@ SwitchStatement@@switch (transition) {case STARTING_to_UP:{    CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();    if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {      StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();      if (poolStats.getNames().size() != 0) {        DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);        for (        String statName : poolStats.getNames()) {          subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));        }        subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);      }    }    break;  }case UP_to_STOP_REQUESTED:{  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {    registration.unregisterSubModel(pe);  }  break;}} @AT@ 12420 @LENGTH@ 104
------INS SimpleType@@ManagementResourceRegistration @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName); @AT@ 12420 @LENGTH@ 30
------INS VariableDeclarationFragment@@overrideRegistration=registration.getOverrideModel(deploymentUnitName) @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName); @AT@ 12451 @LENGTH@ 72
---------INS SimpleName@@overrideRegistration @TO@ VariableDeclarationFragment@@overrideRegistration=registration.getOverrideModel(deploymentUnitName) @AT@ 12451 @LENGTH@ 20
---------INS MethodInvocation@@registration.getOverrideModel(deploymentUnitName) @TO@ VariableDeclarationFragment@@overrideRegistration=registration.getOverrideModel(deploymentUnitName) @AT@ 12474 @LENGTH@ 49
------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.getOverrideModel(deploymentUnitName) @AT@ 12474 @LENGTH@ 12
------------INS SimpleName@@MethodName:getOverrideModel:[deploymentUnitName] @TO@ MethodInvocation@@registration.getOverrideModel(deploymentUnitName) @AT@ 12487 @LENGTH@ 36
---------------INS SimpleName@@deploymentUnitName @TO@ SimpleName@@MethodName:getOverrideModel:[deploymentUnitName] @AT@ 12504 @LENGTH@ 18


MOV ExpressionStatement@@MethodInvocation:latch.countDown() @TO@ MethodDeclaration@@public, Future<Boolean>, MethodName:futureMethod, CountDownLatch latch, InterruptedException,  @AT@ 361 @LENGTH@ 18


INS MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineRemoteInterfaceFromHome, final String homeClass, final String beanName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]EjbMessages,  @AT@ 88746 @LENGTH@ 88
---INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineRemoteInterfaceFromHome, final String homeClass, final String beanName,  @AT@ 88712 @LENGTH@ 33
---INS SimpleName@@MethodName:couldNotDetermineRemoteInterfaceFromHome @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineRemoteInterfaceFromHome, final String homeClass, final String beanName,  @AT@ 88746 @LENGTH@ 40
---INS SingleVariableDeclaration@@final String homeClass @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineRemoteInterfaceFromHome, final String homeClass, final String beanName,  @AT@ 88787 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String homeClass @AT@ 88787 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String homeClass @AT@ 88793 @LENGTH@ 6
------INS SimpleName@@homeClass @TO@ SingleVariableDeclaration@@final String homeClass @AT@ 88800 @LENGTH@ 9
---INS SingleVariableDeclaration@@final String beanName @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:couldNotDetermineRemoteInterfaceFromHome, final String homeClass, final String beanName,  @AT@ 88811 @LENGTH@ 21
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String beanName @AT@ 88811 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String beanName @AT@ 88817 @LENGTH@ 6
------INS SimpleName@@beanName @TO@ SingleVariableDeclaration@@final String beanName @AT@ 88824 @LENGTH@ 8


UPD TryStatement@@try {  NotifyBuilder notify=new NotifyBuilder(context).wereSentTo("mock:foo").create();  fail("Should throw exception");} catch (IllegalArgumentException e) {  assertEquals("NotifyBuilder must contain at least one non-abstract predicate (such as whenDone)",e.getMessage());} @TO@ try {  new NotifyBuilder(context).wereSentTo("mock:foo").create();  fail("Should throw exception");} catch (IllegalArgumentException e) {  assertEquals("NotifyBuilder must contain at least one non-abstract predicate (such as whenDone)",e.getMessage());} @AT@ 29023 @LENGTH@ 370
---DEL VariableDeclarationStatement@@NotifyBuilder notify=new NotifyBuilder(context).wereSentTo("mock:foo").create(); @AT@ 29041 @LENGTH@ 124
------DEL SimpleType@@NotifyBuilder @AT@ 29041 @LENGTH@ 13
------DEL VariableDeclarationFragment@@notify=new NotifyBuilder(context).wereSentTo("mock:foo").create() @AT@ 29055 @LENGTH@ 109
---------DEL SimpleName@@notify @AT@ 29055 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:new NotifyBuilder(context).wereSentTo("mock:foo").create() @TO@ TryStatement@@try {  NotifyBuilder notify=new NotifyBuilder(context).wereSentTo("mock:foo").create();  fail("Should throw exception");} catch (IllegalArgumentException e) {  assertEquals("NotifyBuilder must contain at least one non-abstract predicate (such as whenDone)",e.getMessage());} @AT@ 29041 @LENGTH@ 101
------MOV MethodInvocation@@new NotifyBuilder(context).wereSentTo("mock:foo").create() @TO@ ExpressionStatement@@MethodInvocation:new NotifyBuilder(context).wereSentTo("mock:foo").create() @AT@ 29064 @LENGTH@ 100


UPD VariableDeclarationStatement@@Collection<ProcessorDefinition> pipe=new ArrayList<ProcessorDefinition>(); @TO@ Collection<ProcessorDefinition<?>> pipe=new ArrayList<ProcessorDefinition<?>>(); @AT@ 3030 @LENGTH@ 76
---UPD ParameterizedType@@Collection<ProcessorDefinition> @TO@ Collection<ProcessorDefinition<?>> @AT@ 3030 @LENGTH@ 31
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@Collection<ProcessorDefinition> @AT@ 3041 @LENGTH@ 22
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 3041 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 3061 @LENGTH@ 1
---UPD VariableDeclarationFragment@@pipe=new ArrayList<ProcessorDefinition>() @TO@ pipe=new ArrayList<ProcessorDefinition<?>>() @AT@ 3062 @LENGTH@ 43
------UPD ClassInstanceCreation@@ArrayList<ProcessorDefinition>[] @TO@ ArrayList<ProcessorDefinition<?>>[] @AT@ 3069 @LENGTH@ 36
---------UPD ParameterizedType@@ArrayList<ProcessorDefinition> @TO@ ArrayList<ProcessorDefinition<?>> @AT@ 3073 @LENGTH@ 30
------------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@ArrayList<ProcessorDefinition> @AT@ 3086 @LENGTH@ 22
---------------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 3083 @LENGTH@ 19
---------------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 3106 @LENGTH@ 1


UPD VariableDeclarationStatement@@final Collection<ServiceName> serviceNames=ConnectorServices.getResourceAdapterServiceNames(this.resourceAdapterName); @TO@ final Collection<ServiceName> serviceNames=ConnectorServices.getResourceAdapterDependencies(this.resourceAdapterName); @AT@ 5583 @LENGTH@ 120
---UPD VariableDeclarationFragment@@serviceNames=ConnectorServices.getResourceAdapterServiceNames(this.resourceAdapterName) @TO@ serviceNames=ConnectorServices.getResourceAdapterDependencies(this.resourceAdapterName) @AT@ 5613 @LENGTH@ 89
------UPD MethodInvocation@@ConnectorServices.getResourceAdapterServiceNames(this.resourceAdapterName) @TO@ ConnectorServices.getResourceAdapterDependencies(this.resourceAdapterName) @AT@ 5628 @LENGTH@ 74
---------UPD SimpleName@@MethodName:getResourceAdapterServiceNames:[this.resourceAdapterName] @TO@ MethodName:getResourceAdapterDependencies:[this.resourceAdapterName] @AT@ 5646 @LENGTH@ 56


UPD ExpressionStatement@@Assignment:error=error.substring(line.lastIndexOf(FAILURE_PREFIX) + FAILURE_PREFIX.length()) @TO@ Assignment:error=line.substring(line.lastIndexOf(FAILURE_PREFIX) + FAILURE_PREFIX.length()) @AT@ 14592 @LENGTH@ 84
---UPD Assignment@@error=error.substring(line.lastIndexOf(FAILURE_PREFIX) + FAILURE_PREFIX.length()) @TO@ error=line.substring(line.lastIndexOf(FAILURE_PREFIX) + FAILURE_PREFIX.length()) @AT@ 14592 @LENGTH@ 83
------UPD MethodInvocation@@error.substring(line.lastIndexOf(FAILURE_PREFIX) + FAILURE_PREFIX.length()) @TO@ line.substring(line.lastIndexOf(FAILURE_PREFIX) + FAILURE_PREFIX.length()) @AT@ 14600 @LENGTH@ 75
---------UPD SimpleName@@Name:error @TO@ Name:line @AT@ 14600 @LENGTH@ 5


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [ADVANCED_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ADVANCED_FILTER,ModelType.STRING,false).setXmlName("filter").setAlternatives(ModelDescriptionConstants.USERNAME_ATTRIBUTE).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @TO@ public, static, final, SimpleAttributeDefinition, [ADVANCED_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ADVANCED_FILTER,ModelType.STRING,false).setXmlName("filter").setAlternatives(ModelDescriptionConstants.USERNAME_ATTRIBUTE).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setValidateNull(false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 4156 @LENGTH@ 431
---UPD VariableDeclarationFragment@@ADVANCED_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ADVANCED_FILTER,ModelType.STRING,false).setXmlName("filter").setAlternatives(ModelDescriptionConstants.USERNAME_ATTRIBUTE).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ ADVANCED_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ADVANCED_FILTER,ModelType.STRING,false).setXmlName("filter").setAlternatives(ModelDescriptionConstants.USERNAME_ATTRIBUTE).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setValidateNull(false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 4202 @LENGTH@ 384
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ADVANCED_FILTER,ModelType.STRING,false).setXmlName("filter").setAlternatives(ModelDescriptionConstants.USERNAME_ATTRIBUTE).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ADVANCED_FILTER,ModelType.STRING,false).setXmlName("filter").setAlternatives(ModelDescriptionConstants.USERNAME_ATTRIBUTE).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setValidateNull(false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 4220 @LENGTH@ 366
---------INS MethodInvocation@@MethodName:setValidateNull:[false] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ADVANCED_FILTER,ModelType.STRING,false).setXmlName("filter").setAlternatives(ModelDescriptionConstants.USERNAME_ATTRIBUTE).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 4282 @LENGTH@ 337
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:setValidateNull:[false] @AT@ 4613 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:result.setInterfaces(new Class[]{repositoryInterface}) @TO@ MethodInvocation:result.setInterfaces(new Class[]{repositoryInterface,Repository.class}) @AT@ 5106 @LENGTH@ 58
---UPD MethodInvocation@@result.setInterfaces(new Class[]{repositoryInterface}) @TO@ result.setInterfaces(new Class[]{repositoryInterface,Repository.class}) @AT@ 5106 @LENGTH@ 57
------UPD SimpleName@@MethodName:setInterfaces:[new Class[]{repositoryInterface}] @TO@ MethodName:setInterfaces:[new Class[]{repositoryInterface,Repository.class}] @AT@ 5113 @LENGTH@ 50
---------UPD ArrayCreation@@new Class[]{repositoryInterface} @TO@ new Class[]{repositoryInterface,Repository.class} @AT@ 5127 @LENGTH@ 35
------------UPD ArrayInitializer@@{repositoryInterface} @TO@ {repositoryInterface,Repository.class} @AT@ 5139 @LENGTH@ 23
---------------INS TypeLiteral@@Repository.class @TO@ ArrayInitializer@@{repositoryInterface} @AT@ 5162 @LENGTH@ 16


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("enable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.enableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("enable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.enableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1998 @LENGTH@ 795
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("enable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.enableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2002 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2002 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2002 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2010 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2026 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2030 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2030 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2030 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2057 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2030 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2064 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2075 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2075 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2093 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2098 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2100 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 2002 @LENGTH@ 24


UPD IfStatement@@if (ch == '}' || ch == ';') {  ctx.leaveState();} @TO@ if (ch == '}' || ch == ';') {  ctx.leaveState();  return;} @AT@ 2965 @LENGTH@ 84
---UPD Block@@ThenBody:{  ctx.leaveState();} @TO@ ThenBody:{  ctx.leaveState();  return;} @AT@ 2992 @LENGTH@ 57
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ctx.leaveState();} @AT@ 3052 @LENGTH@ 7


UPD ReturnStatement@@NullLiteral:null @TO@ ThisExpression:this @AT@ 2369 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 2376 @LENGTH@ 4
---INS ThisExpression@@this @TO@ ReturnStatement@@NullLiteral:null @AT@ 2376 @LENGTH@ 4


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("enable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.enableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("enable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.enableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1998 @LENGTH@ 820
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2002 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2002 @LENGTH@ 17
------DEL Operator@@== @AT@ 2019 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2023 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2023 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2023 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2040 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2045 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("enable-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.enableContext(contexthost.webhost,contexthost.webcontext);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2002 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2002 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2002 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2010 @LENGTH@ 9


UPD Block@@ThenBody:{  final List<SecurityRoleMetaData> securityRoleMetaDatas=ejbJarMetaData.getAssemblyDescriptor().getAny(SecurityRoleMetaData.class);  final SecurityRolesMetaData roleMappings=new SecurityRolesMetaData();  if (securityRoleMetaDatas != null) {    for (    SecurityRoleMetaData securityRoleMetaData : securityRoleMetaDatas) {      roleMappings.add(securityRoleMetaData);    }  }  ejbComponentDescription.setSecurityRoles(roleMappings);} @TO@ ThenBody:{  final AssemblyDescriptorMetaData assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor();  if (assemblyDescriptorMetaData == null) {    return;  }  final List<SecurityRoleMetaData> securityRoleMetaDatas=assemblyDescriptorMetaData.getAny(SecurityRoleMetaData.class);  final SecurityRolesMetaData roleMappings=new SecurityRolesMetaData();  if (securityRoleMetaDatas != null) {    for (    SecurityRoleMetaData securityRoleMetaData : securityRoleMetaDatas) {      roleMappings.add(securityRoleMetaData);    }  }  ejbComponentDescription.setSecurityRoles(roleMappings);} @AT@ 2983 @LENGTH@ 690
---INS VariableDeclarationStatement@@final AssemblyDescriptorMetaData assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor(); @TO@ Block@@ThenBody:{  final List<SecurityRoleMetaData> securityRoleMetaDatas=ejbJarMetaData.getAssemblyDescriptor().getAny(SecurityRoleMetaData.class);  final SecurityRolesMetaData roleMappings=new SecurityRolesMetaData();  if (securityRoleMetaDatas != null) {    for (    SecurityRoleMetaData securityRoleMetaData : securityRoleMetaDatas) {      roleMappings.add(securityRoleMetaData);    }  }  ejbComponentDescription.setSecurityRoles(roleMappings);} @AT@ 3060 @LENGTH@ 101
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final AssemblyDescriptorMetaData assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor(); @AT@ 3060 @LENGTH@ 5
------INS SimpleType@@AssemblyDescriptorMetaData @TO@ VariableDeclarationStatement@@final AssemblyDescriptorMetaData assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor(); @AT@ 3066 @LENGTH@ 26
------INS VariableDeclarationFragment@@assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor() @TO@ VariableDeclarationStatement@@final AssemblyDescriptorMetaData assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor(); @AT@ 3093 @LENGTH@ 67
---------INS SimpleName@@assemblyDescriptorMetaData @TO@ VariableDeclarationFragment@@assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor() @AT@ 3093 @LENGTH@ 26
---------INS MethodInvocation@@ejbJarMetaData.getAssemblyDescriptor() @TO@ VariableDeclarationFragment@@assemblyDescriptorMetaData=ejbJarMetaData.getAssemblyDescriptor() @AT@ 3122 @LENGTH@ 38
------------INS SimpleName@@Name:ejbJarMetaData @TO@ MethodInvocation@@ejbJarMetaData.getAssemblyDescriptor() @AT@ 3122 @LENGTH@ 14
------------INS SimpleName@@MethodName:getAssemblyDescriptor:[] @TO@ MethodInvocation@@ejbJarMetaData.getAssemblyDescriptor() @AT@ 3137 @LENGTH@ 23
---UPD VariableDeclarationStatement@@final List<SecurityRoleMetaData> securityRoleMetaDatas=ejbJarMetaData.getAssemblyDescriptor().getAny(SecurityRoleMetaData.class); @TO@ final List<SecurityRoleMetaData> securityRoleMetaDatas=assemblyDescriptorMetaData.getAny(SecurityRoleMetaData.class); @AT@ 3094 @LENGTH@ 131
------UPD VariableDeclarationFragment@@securityRoleMetaDatas=ejbJarMetaData.getAssemblyDescriptor().getAny(SecurityRoleMetaData.class) @TO@ securityRoleMetaDatas=assemblyDescriptorMetaData.getAny(SecurityRoleMetaData.class) @AT@ 3127 @LENGTH@ 97
---------UPD MethodInvocation@@ejbJarMetaData.getAssemblyDescriptor().getAny(SecurityRoleMetaData.class) @TO@ assemblyDescriptorMetaData.getAny(SecurityRoleMetaData.class) @AT@ 3151 @LENGTH@ 73
------------DEL MethodInvocation@@MethodName:getAssemblyDescriptor:[] @AT@ 3151 @LENGTH@ 38
------------UPD SimpleName@@Name:ejbJarMetaData @TO@ Name:assemblyDescriptorMetaData @AT@ 3151 @LENGTH@ 14
---INS IfStatement@@if (assemblyDescriptorMetaData == null) {  return;} @TO@ Block@@ThenBody:{  final List<SecurityRoleMetaData> securityRoleMetaDatas=ejbJarMetaData.getAssemblyDescriptor().getAny(SecurityRoleMetaData.class);  final SecurityRolesMetaData roleMappings=new SecurityRolesMetaData();  if (securityRoleMetaDatas != null) {    for (    SecurityRoleMetaData securityRoleMetaData : securityRoleMetaDatas) {      roleMappings.add(securityRoleMetaData);    }  }  ejbComponentDescription.setSecurityRoles(roleMappings);} @AT@ 3174 @LENGTH@ 79
------INS InfixExpression@@assemblyDescriptorMetaData == null @TO@ IfStatement@@if (assemblyDescriptorMetaData == null) {  return;} @AT@ 3178 @LENGTH@ 34
---------INS SimpleName@@assemblyDescriptorMetaData @TO@ InfixExpression@@assemblyDescriptorMetaData == null @AT@ 3178 @LENGTH@ 26
---------INS Operator@@== @TO@ InfixExpression@@assemblyDescriptorMetaData == null @AT@ 3204 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@assemblyDescriptorMetaData == null @AT@ 3208 @LENGTH@ 4
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (assemblyDescriptorMetaData == null) {  return;} @AT@ 3214 @LENGTH@ 39
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 3232 @LENGTH@ 7


INS IfStatement@@if (proxy != null) {  String baseProxyURL=(!proxy.toString().endsWith("/")) ? proxy.toString() + "/" : proxy.toString();  sb.append("maven-download ").append(baseProxyURL).append(" ").append(groupId).append(" ").append(artifactId).append(" ").append(version).append(" ").append("tar.gz").append("\n");} @TO@ MethodDeclaration@@private, static, void, MethodName:extractTargzIntoDirectory, StringBuilder sb, URI proxy, String groupId, String artifactId, String version, URISyntaxException,  @AT@ 11511 @LENGTH@ 421
---INS InfixExpression@@proxy != null @TO@ IfStatement@@if (proxy != null) {  String baseProxyURL=(!proxy.toString().endsWith("/")) ? proxy.toString() + "/" : proxy.toString();  sb.append("maven-download ").append(baseProxyURL).append(" ").append(groupId).append(" ").append(artifactId).append(" ").append(version).append(" ").append("tar.gz").append("\n");} @AT@ 11515 @LENGTH@ 13
------INS SimpleName@@proxy @TO@ InfixExpression@@proxy != null @AT@ 11515 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@proxy != null @AT@ 11520 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@proxy != null @AT@ 11524 @LENGTH@ 4
---INS Block@@ThenBody:{  String baseProxyURL=(!proxy.toString().endsWith("/")) ? proxy.toString() + "/" : proxy.toString();  sb.append("maven-download ").append(baseProxyURL).append(" ").append(groupId).append(" ").append(artifactId).append(" ").append(version).append(" ").append("tar.gz").append("\n");} @TO@ IfStatement@@if (proxy != null) {  String baseProxyURL=(!proxy.toString().endsWith("/")) ? proxy.toString() + "/" : proxy.toString();  sb.append("maven-download ").append(baseProxyURL).append(" ").append(groupId).append(" ").append(artifactId).append(" ").append(version).append(" ").append("tar.gz").append("\n");} @AT@ 11530 @LENGTH@ 402
------MOV VariableDeclarationStatement@@String baseProxyURL=(!proxy.toString().endsWith("/")) ? proxy.toString() + "/" : proxy.toString(); @TO@ Block@@ThenBody:{  String baseProxyURL=(!proxy.toString().endsWith("/")) ? proxy.toString() + "/" : proxy.toString();  sb.append("maven-download ").append(baseProxyURL).append(" ").append(groupId).append(" ").append(artifactId).append(" ").append(version).append(" ").append("tar.gz").append("\n");} @AT@ 11452 @LENGTH@ 100
------MOV ExpressionStatement@@MethodInvocation:sb.append("maven-download ").append(baseProxyURL).append(" ").append(groupId).append(" ").append(artifactId).append(" ").append(version).append(" ").append("tar.gz").append("\n") @TO@ Block@@ThenBody:{  String baseProxyURL=(!proxy.toString().endsWith("/")) ? proxy.toString() + "/" : proxy.toString();  sb.append("maven-download ").append(baseProxyURL).append(" ").append(groupId).append(" ").append(artifactId).append(" ").append(version).append(" ").append("tar.gz").append("\n");} @AT@ 11563 @LENGTH@ 247


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [ALIAS=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,ModelType.STRING,true).setXmlName(ModelDescriptionConstants.ALIAS).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @TO@ public, static, final, SimpleAttributeDefinition, [ALIAS=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,ModelType.STRING,true).setXmlName(ModelDescriptionConstants.ALIAS).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 1744 @LENGTH@ 369
---UPD VariableDeclarationFragment@@ALIAS=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,ModelType.STRING,true).setXmlName(ModelDescriptionConstants.ALIAS).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ ALIAS=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,ModelType.STRING,true).setXmlName(ModelDescriptionConstants.ALIAS).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 1790 @LENGTH@ 322
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,ModelType.STRING,true).setXmlName(ModelDescriptionConstants.ALIAS).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.ALIAS,ModelType.STRING,true).setXmlName(ModelDescriptionConstants.ALIAS).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 1798 @LENGTH@ 314
---------UPD MethodInvocation@@MethodName:setValidator:[new StringLengthValidator(1,Integer.MAX_VALUE,true,true)] @TO@ MethodName:setValidator:[new StringLengthValidator(1,Integer.MAX_VALUE,true,false)] @AT@ 1798 @LENGTH@ 236
------------UPD ClassInstanceCreation@@StringLengthValidator[1, Integer.MAX_VALUE, true, true] @TO@ StringLengthValidator[1, Integer.MAX_VALUE, true, false] @AT@ 1974 @LENGTH@ 59
---------------UPD BooleanLiteral@@true @TO@ false @AT@ 2028 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:add(denied,InvocationType.SET_SESSION_CONTEXT,MethodType.TIMER_SERVICE_METHOD) @TO@ MethodDeclaration@@protected, void, MethodName:setup, Set<DeniedMethodKey> denied,  @AT@ 741 @LENGTH@ 81
---INS MethodInvocation@@add(denied,InvocationType.SET_SESSION_CONTEXT,MethodType.TIMER_SERVICE_METHOD) @TO@ ExpressionStatement@@MethodInvocation:add(denied,InvocationType.SET_SESSION_CONTEXT,MethodType.TIMER_SERVICE_METHOD) @AT@ 741 @LENGTH@ 80
------INS SimpleName@@MethodName:add:[denied, InvocationType.SET_SESSION_CONTEXT, MethodType.TIMER_SERVICE_METHOD] @TO@ MethodInvocation@@add(denied,InvocationType.SET_SESSION_CONTEXT,MethodType.TIMER_SERVICE_METHOD) @AT@ 741 @LENGTH@ 80
---------INS SimpleName@@denied @TO@ SimpleName@@MethodName:add:[denied, InvocationType.SET_SESSION_CONTEXT, MethodType.TIMER_SERVICE_METHOD] @AT@ 745 @LENGTH@ 6
---------INS QualifiedName@@InvocationType.SET_SESSION_CONTEXT @TO@ SimpleName@@MethodName:add:[denied, InvocationType.SET_SESSION_CONTEXT, MethodType.TIMER_SERVICE_METHOD] @AT@ 753 @LENGTH@ 34
------------INS SimpleName@@InvocationType @TO@ QualifiedName@@InvocationType.SET_SESSION_CONTEXT @AT@ 753 @LENGTH@ 14
------------INS SimpleName@@SET_SESSION_CONTEXT @TO@ QualifiedName@@InvocationType.SET_SESSION_CONTEXT @AT@ 768 @LENGTH@ 19
---------INS QualifiedName@@MethodType.TIMER_SERVICE_METHOD @TO@ SimpleName@@MethodName:add:[denied, InvocationType.SET_SESSION_CONTEXT, MethodType.TIMER_SERVICE_METHOD] @AT@ 789 @LENGTH@ 31
------------INS SimpleName@@MethodType @TO@ QualifiedName@@MethodType.TIMER_SERVICE_METHOD @AT@ 789 @LENGTH@ 10
------------INS SimpleName@@TIMER_SERVICE_METHOD @TO@ QualifiedName@@MethodType.TIMER_SERVICE_METHOD @AT@ 800 @LENGTH@ 20


INS MethodDeclaration@@protected, void, MethodName:preDestroy,  @TO@ TypeDeclaration@@[public]BasicComponentInstance, [ComponentInstance] @AT@ 4572 @LENGTH@ 36
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:preDestroy,  @AT@ 4572 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:preDestroy,  @AT@ 4582 @LENGTH@ 4
---INS SimpleName@@MethodName:preDestroy @TO@ MethodDeclaration@@protected, void, MethodName:preDestroy,  @AT@ 4587 @LENGTH@ 10


UPD ConstructorInvocation@@this(StringUtils.hasText(child) ? new Path(parent,child) : new Path(parent),fs); @TO@ this(StringUtils.hasText(child) ? new Path(new Path(URI.create(parent)),new Path(URI.create(child))) : new Path(URI.create(parent)),fs); @AT@ 1698 @LENGTH@ 82
---UPD ConditionalExpression@@StringUtils.hasText(child) ? new Path(parent,child) : new Path(parent) @TO@ StringUtils.hasText(child) ? new Path(new Path(URI.create(parent)),new Path(URI.create(child))) : new Path(URI.create(parent)) @AT@ 1703 @LENGTH@ 71
------UPD ClassInstanceCreation@@Path[parent, child] @TO@ Path[new Path(URI.create(parent)), new Path(URI.create(child))] @AT@ 1732 @LENGTH@ 23
---------INS ClassInstanceCreation@@Path[URI.create(parent)] @TO@ ClassInstanceCreation@@Path[parent, child] @AT@ 1741 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@Path[URI.create(parent)] @AT@ 1741 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[URI.create(parent)] @AT@ 1745 @LENGTH@ 4
------------INS MethodInvocation@@URI.create(parent) @TO@ ClassInstanceCreation@@Path[URI.create(parent)] @AT@ 1750 @LENGTH@ 18
---------------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create(parent) @AT@ 1750 @LENGTH@ 3
---------------INS SimpleName@@MethodName:create:[parent] @TO@ MethodInvocation@@URI.create(parent) @AT@ 1754 @LENGTH@ 14
------------------INS SimpleName@@parent @TO@ SimpleName@@MethodName:create:[parent] @AT@ 1761 @LENGTH@ 6
---------DEL SimpleName@@parent @AT@ 1741 @LENGTH@ 6
---------DEL SimpleName@@child @AT@ 1749 @LENGTH@ 5
---------INS ClassInstanceCreation@@Path[URI.create(child)] @TO@ ClassInstanceCreation@@Path[parent, child] @AT@ 1771 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@Path[URI.create(child)] @AT@ 1771 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[URI.create(child)] @AT@ 1775 @LENGTH@ 4
------------INS MethodInvocation@@URI.create(child) @TO@ ClassInstanceCreation@@Path[URI.create(child)] @AT@ 1780 @LENGTH@ 17
---------------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create(child) @AT@ 1780 @LENGTH@ 3
---------------INS SimpleName@@MethodName:create:[child] @TO@ MethodInvocation@@URI.create(child) @AT@ 1784 @LENGTH@ 13
------------------INS SimpleName@@child @TO@ SimpleName@@MethodName:create:[child] @AT@ 1791 @LENGTH@ 5
------UPD ClassInstanceCreation@@Path[parent] @TO@ Path[URI.create(parent)] @AT@ 1758 @LENGTH@ 16
---------DEL SimpleName@@parent @AT@ 1767 @LENGTH@ 6
---------INS MethodInvocation@@URI.create(parent) @TO@ ClassInstanceCreation@@Path[parent] @AT@ 1811 @LENGTH@ 18
------------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create(parent) @AT@ 1811 @LENGTH@ 3
------------INS SimpleName@@MethodName:create:[parent] @TO@ MethodInvocation@@URI.create(parent) @AT@ 1815 @LENGTH@ 14
---------------INS SimpleName@@parent @TO@ SimpleName@@MethodName:create:[parent] @AT@ 1822 @LENGTH@ 6


UPD ReturnStatement@@NumberLiteral:0 @TO@ MethodInvocation:delegate.getInvocationTimeout() @AT@ 1553 @LENGTH@ 9
---INS MethodInvocation@@delegate.getInvocationTimeout() @TO@ ReturnStatement@@NumberLiteral:0 @AT@ 1560 @LENGTH@ 31
------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.getInvocationTimeout() @AT@ 1560 @LENGTH@ 8
------INS SimpleName@@MethodName:getInvocationTimeout:[] @TO@ MethodInvocation@@delegate.getInvocationTimeout() @AT@ 1569 @LENGTH@ 22
---DEL NumberLiteral@@0 @AT@ 1560 @LENGTH@ 1


DEL MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1196 @LENGTH@ 109
---DEL Modifier@@public @AT@ 1196 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1203 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUp @AT@ 1208 @LENGTH@ 5
---DEL SimpleType@@Exception @AT@ 1223 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 1243 @LENGTH@ 33
------DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 1243 @LENGTH@ 32
---------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 1243 @LENGTH@ 32
------------DEL StringLiteral@@"activemq-data" @AT@ 1259 @LENGTH@ 15
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1285 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1285 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1291 @LENGTH@ 5


UPD MethodDeclaration@@public, ManagementRequestHandler<Void,ExecuteRequestContext>, MethodName:getRequestHandler, byte operationType,  @TO@ protected, ManagementRequestHandler<Void,ExecuteRequestContext>, MethodName:getRequestHandler, byte operationType,  @AT@ 4754 @LENGTH@ 897
---UPD Modifier@@public @TO@ protected @AT@ 4754 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:encoding=(encoding != null) ? encoding.toUpperCase() : null @TO@ Assignment:encoding=(encoding != null) ? encoding.toUpperCase(Locale.US) : null @AT@ 25368 @LENGTH@ 62
---UPD Assignment@@encoding=(encoding != null) ? encoding.toUpperCase() : null @TO@ encoding=(encoding != null) ? encoding.toUpperCase(Locale.US) : null @AT@ 25368 @LENGTH@ 61
------UPD ConditionalExpression@@(encoding != null) ? encoding.toUpperCase() : null @TO@ (encoding != null) ? encoding.toUpperCase(Locale.US) : null @AT@ 25379 @LENGTH@ 50
---------UPD MethodInvocation@@encoding.toUpperCase() @TO@ encoding.toUpperCase(Locale.US) @AT@ 25400 @LENGTH@ 22
------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.US] @AT@ 25409 @LENGTH@ 13
---------------INS QualifiedName@@Locale.US @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 25456 @LENGTH@ 9
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.US @AT@ 25456 @LENGTH@ 6
------------------INS SimpleName@@US @TO@ QualifiedName@@Locale.US @AT@ 25463 @LENGTH@ 2


INS MethodDeclaration@@protected, boolean, MethodName:isLazyLoadingTypeConverter,  @TO@ TypeDeclaration@@[public]XmlBeansConcurrencyTest, CamelTestSupport @AT@ 1201 @LENGTH@ 123
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:isLazyLoadingTypeConverter,  @AT@ 1201 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:isLazyLoadingTypeConverter,  @AT@ 1211 @LENGTH@ 7
---INS SimpleName@@MethodName:isLazyLoadingTypeConverter @TO@ MethodDeclaration@@protected, boolean, MethodName:isLazyLoadingTypeConverter,  @AT@ 1219 @LENGTH@ 26
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:isLazyLoadingTypeConverter,  @AT@ 1305 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1312 @LENGTH@ 5


UPD Block@@ThenBody:{  parameters.put("include_entities","true");} @TO@ ThenBody:{  searchUrl+="&include_entities={entities}";  parameters.put("entities","true");} @AT@ 2531 @LENGTH@ 67
---INS ExpressionStatement@@Assignment:searchUrl+="&include_entities={entities}" @TO@ Block@@ThenBody:{  parameters.put("include_entities","true");} @AT@ 2545 @LENGTH@ 44
------INS Assignment@@searchUrl+="&include_entities={entities}" @TO@ ExpressionStatement@@Assignment:searchUrl+="&include_entities={entities}" @AT@ 2545 @LENGTH@ 43
---------INS SimpleName@@searchUrl @TO@ Assignment@@searchUrl+="&include_entities={entities}" @AT@ 2545 @LENGTH@ 9
---------INS Operator@@+= @TO@ Assignment@@searchUrl+="&include_entities={entities}" @AT@ 2554 @LENGTH@ 2
---------INS StringLiteral@@"&include_entities={entities}" @TO@ Assignment@@searchUrl+="&include_entities={entities}" @AT@ 2558 @LENGTH@ 30
---UPD ExpressionStatement@@MethodInvocation:parameters.put("include_entities","true") @TO@ MethodInvocation:parameters.put("entities","true") @AT@ 2545 @LENGTH@ 43
------UPD MethodInvocation@@parameters.put("include_entities","true") @TO@ parameters.put("entities","true") @AT@ 2545 @LENGTH@ 42
---------UPD SimpleName@@MethodName:put:["include_entities", "true"] @TO@ MethodName:put:["entities", "true"] @AT@ 2556 @LENGTH@ 31
------------UPD StringLiteral@@"include_entities" @TO@ "entities" @AT@ 2560 @LENGTH@ 18


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3626 @LENGTH@ 395
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3714 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3714 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3720 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3727 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2047 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2047 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2055 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2069 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2085 @LENGTH@ 23


UPD TryStatement@@try {  if (tx.getStatus() == Status.STATUS_MARKED_ROLLBACK) {    rolledBack=true;  }} catch (SystemException e) {  throw new RuntimeException(e);} @TO@ try {  if (tx.getStatus() == Status.STATUS_MARKED_ROLLBACK) {    rolledBack=true;  }} catch (SystemException e) {  throw new RuntimeException(e);} finally {  super.endTransaction(tm,tx);} @AT@ 2453 @LENGTH@ 236
---INS Block@@FinallyBody:{  super.endTransaction(tm,tx);} @TO@ TryStatement@@try {  if (tx.getStatus() == Status.STATUS_MARKED_ROLLBACK) {    rolledBack=true;  }} catch (SystemException e) {  throw new RuntimeException(e);} @AT@ 2698 @LENGTH@ 61
------MOV ExpressionStatement@@SuperMethodInvocation:super.endTransaction(tm,tx) @TO@ Block@@FinallyBody:{  super.endTransaction(tm,tx);} @AT@ 2702 @LENGTH@ 29


UPD VariableDeclarationStatement@@ExtensionContext context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER); @TO@ ExtensionContext context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test"); @AT@ 28069 @LENGTH@ 123
---UPD VariableDeclarationFragment@@context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER) @TO@ context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 28086 @LENGTH@ 105
------INS MethodInvocation@@new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @TO@ VariableDeclarationFragment@@context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER) @AT@ 28120 @LENGTH@ 118
---------MOV ClassInstanceCreation@@ExtensionContextImpl[rootRegistration, deployments, persister, ProcessType.EMBEDDED_SERVER] @TO@ MethodInvocation@@new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 28096 @LENGTH@ 95
---------INS SimpleName@@MethodName:createTracking:["Test"] @TO@ MethodInvocation@@new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 28216 @LENGTH@ 22
------------INS StringLiteral@@"Test" @TO@ SimpleName@@MethodName:createTracking:["Test"] @AT@ 28231 @LENGTH@ 6


DEL MethodDeclaration@@protected, String, MethodName:getDefaultName,  @AT@ 8903 @LENGTH@ 92
---DEL Modifier@@protected @AT@ 8903 @LENGTH@ 9
---DEL SimpleType@@String @AT@ 8913 @LENGTH@ 6
---DEL SimpleName@@MethodName:getDefaultName @AT@ 8920 @LENGTH@ 14
---DEL ReturnStatement@@MethodInvocation:InetAddressUtil.getLocalHostName() @AT@ 8947 @LENGTH@ 42
------DEL MethodInvocation@@InetAddressUtil.getLocalHostName() @AT@ 8954 @LENGTH@ 34
---------DEL SimpleName@@Name:InetAddressUtil @AT@ 8954 @LENGTH@ 15
---------DEL SimpleName@@MethodName:getLocalHostName:[] @AT@ 8970 @LENGTH@ 18


UPD SuperConstructorInvocation@@super(PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USER),ManagementDescription.getResourceDescriptionResolver("core.management.security-realm.authentication.xml"),new SecurityRealmChildAddHandler(true),new SecurityRealmChildRemoveHandler(true),OperationEntry.Flag.RESTART_RESOURCE_SERVICES,OperationEntry.Flag.RESTART_RESOURCE_SERVICES);
 @TO@ super(PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USERS),ManagementDescription.getResourceDescriptionResolver("core.management.security-realm.authentication.xml"),new SecurityRealmChildAddHandler(true),new SecurityRealmChildRemoveHandler(true),OperationEntry.Flag.RESTART_RESOURCE_SERVICES,OperationEntry.Flag.RESTART_RESOURCE_SERVICES);
 @AT@ 1835 @LENGTH@ 437
---UPD MethodInvocation@@PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USER) @TO@ PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USERS) @AT@ 1841 @LENGTH@ 97
------UPD SimpleName@@MethodName:pathElement:[ModelDescriptionConstants.AUTHENTICATION, ModelDescriptionConstants.USER] @TO@ MethodName:pathElement:[ModelDescriptionConstants.AUTHENTICATION, ModelDescriptionConstants.USERS] @AT@ 1853 @LENGTH@ 85
---------UPD QualifiedName@@ModelDescriptionConstants.USER @TO@ ModelDescriptionConstants.USERS @AT@ 1907 @LENGTH@ 30
------------UPD SimpleName@@USER @TO@ USERS @AT@ 1933 @LENGTH@ 4


UPD IfStatement@@if (previousInvocationNodeName.equals("node-udp-0")) {  this.deployer.undeploy(DEPLOYMENT_1);  this.container.stop(CONTAINER_1);  container1Stopped=true;} else {  this.deployer.undeploy(DEPLOYMENT_2);  this.container.stop(CONTAINER_2);  container2Stopped=true;} @TO@ if (previousInvocationNodeName.equals(NODE_1)) {  this.deployer.undeploy(DEPLOYMENT_1);  this.container.stop(CONTAINER_1);  container1Stopped=true;} else {  this.deployer.undeploy(DEPLOYMENT_2);  this.container.stop(CONTAINER_2);  container2Stopped=true;} @AT@ 6983 @LENGTH@ 381
---UPD MethodInvocation@@previousInvocationNodeName.equals("node-udp-0") @TO@ previousInvocationNodeName.equals(NODE_1) @AT@ 6987 @LENGTH@ 47
------UPD SimpleName@@MethodName:equals:["node-udp-0"] @TO@ MethodName:equals:[NODE_1] @AT@ 7014 @LENGTH@ 20
---------INS SimpleName@@NODE_1 @TO@ SimpleName@@MethodName:equals:["node-udp-0"] @AT@ 6230 @LENGTH@ 6
---------DEL StringLiteral@@"node-udp-0" @AT@ 7021 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:returnsEmptyStringIfNoPathExpressionIsGiven,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]SpringDataMongodbSerializerUnitTests,  @AT@ 3042 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsEmptyStringIfNoPathExpressionIsGiven,  @AT@ 3042 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsEmptyStringIfNoPathExpressionIsGiven,  @AT@ 3049 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsEmptyStringIfNoPathExpressionIsGiven @TO@ MethodDeclaration@@public, void, MethodName:returnsEmptyStringIfNoPathExpressionIsGiven,  @AT@ 3054 @LENGTH@ 43
---INS VariableDeclarationStatement@@QAddress address=QPerson.person.shippingAddresses.any(); @TO@ MethodDeclaration@@public, void, MethodName:returnsEmptyStringIfNoPathExpressionIsGiven,  @AT@ 3105 @LENGTH@ 58
------INS SimpleType@@QAddress @TO@ VariableDeclarationStatement@@QAddress address=QPerson.person.shippingAddresses.any(); @AT@ 3105 @LENGTH@ 8
------INS VariableDeclarationFragment@@address=QPerson.person.shippingAddresses.any() @TO@ VariableDeclarationStatement@@QAddress address=QPerson.person.shippingAddresses.any(); @AT@ 3114 @LENGTH@ 48
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=QPerson.person.shippingAddresses.any() @AT@ 3114 @LENGTH@ 7
---------INS MethodInvocation@@QPerson.person.shippingAddresses.any() @TO@ VariableDeclarationFragment@@address=QPerson.person.shippingAddresses.any() @AT@ 3124 @LENGTH@ 38
------------INS QualifiedName@@Name:QPerson.person.shippingAddresses @TO@ MethodInvocation@@QPerson.person.shippingAddresses.any() @AT@ 3124 @LENGTH@ 32
------------INS SimpleName@@MethodName:any:[] @TO@ MethodInvocation@@QPerson.person.shippingAddresses.any() @AT@ 3157 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(serializer.getKeyForPath(address,address.getMetadata()),is("")) @TO@ MethodDeclaration@@public, void, MethodName:returnsEmptyStringIfNoPathExpressionIsGiven,  @AT@ 3166 @LENGTH@ 77
------INS MethodInvocation@@assertThat(serializer.getKeyForPath(address,address.getMetadata()),is("")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(serializer.getKeyForPath(address,address.getMetadata()),is("")) @AT@ 3166 @LENGTH@ 76
---------INS SimpleName@@MethodName:assertThat:[serializer.getKeyForPath(address,address.getMetadata()), is("")] @TO@ MethodInvocation@@assertThat(serializer.getKeyForPath(address,address.getMetadata()),is("")) @AT@ 3166 @LENGTH@ 76
------------INS MethodInvocation@@serializer.getKeyForPath(address,address.getMetadata()) @TO@ SimpleName@@MethodName:assertThat:[serializer.getKeyForPath(address,address.getMetadata()), is("")] @AT@ 3177 @LENGTH@ 56
---------------INS SimpleName@@Name:serializer @TO@ MethodInvocation@@serializer.getKeyForPath(address,address.getMetadata()) @AT@ 3177 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getKeyForPath:[address, address.getMetadata()] @TO@ MethodInvocation@@serializer.getKeyForPath(address,address.getMetadata()) @AT@ 3188 @LENGTH@ 45
------------------INS SimpleName@@address @TO@ SimpleName@@MethodName:getKeyForPath:[address, address.getMetadata()] @AT@ 3202 @LENGTH@ 7
------------------INS MethodInvocation@@address.getMetadata() @TO@ SimpleName@@MethodName:getKeyForPath:[address, address.getMetadata()] @AT@ 3211 @LENGTH@ 21
---------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.getMetadata() @AT@ 3211 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getMetadata:[] @TO@ MethodInvocation@@address.getMetadata() @AT@ 3219 @LENGTH@ 13
------------INS MethodInvocation@@is("") @TO@ SimpleName@@MethodName:assertThat:[serializer.getKeyForPath(address,address.getMetadata()), is("")] @AT@ 3235 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[""] @TO@ MethodInvocation@@is("") @AT@ 3235 @LENGTH@ 6
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:is:[""] @AT@ 3238 @LENGTH@ 2
---------------INS SimpleName@@MethodName:is:[""] @TO@ MethodInvocation@@is("") @AT@ 3235 @LENGTH@ 6
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:is:[""] @AT@ 3238 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), @SuppressWarnings("unused"), public]QueryMapperUnitTests,  @AT@ 3965 @LENGTH@ 397
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 3965 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 3972 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesEnumsInNotEqualCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 3977 @LENGTH@ 31
---INS VariableDeclarationStatement@@Query query=query(where("foo").ne(Enum.INSTANCE)); @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 4015 @LENGTH@ 52
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("foo").ne(Enum.INSTANCE)); @AT@ 4015 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("foo").ne(Enum.INSTANCE)) @TO@ VariableDeclarationStatement@@Query query=query(where("foo").ne(Enum.INSTANCE)); @AT@ 4021 @LENGTH@ 45
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("foo").ne(Enum.INSTANCE)) @AT@ 4021 @LENGTH@ 5
---------INS MethodInvocation@@query(where("foo").ne(Enum.INSTANCE)) @TO@ VariableDeclarationFragment@@query=query(where("foo").ne(Enum.INSTANCE)) @AT@ 4029 @LENGTH@ 37
------------INS SimpleName@@MethodName:query:[where("foo").ne(Enum.INSTANCE)] @TO@ MethodInvocation@@query(where("foo").ne(Enum.INSTANCE)) @AT@ 4029 @LENGTH@ 37
---------------INS MethodInvocation@@where("foo").ne(Enum.INSTANCE) @TO@ SimpleName@@MethodName:query:[where("foo").ne(Enum.INSTANCE)] @AT@ 4035 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:where:["foo"] @TO@ MethodInvocation@@where("foo").ne(Enum.INSTANCE) @AT@ 4035 @LENGTH@ 12
---------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:where:["foo"] @AT@ 4041 @LENGTH@ 5
------------------INS SimpleName@@MethodName:ne:[Enum.INSTANCE] @TO@ MethodInvocation@@where("foo").ne(Enum.INSTANCE) @AT@ 4048 @LENGTH@ 17
---------------------INS QualifiedName@@Enum.INSTANCE @TO@ SimpleName@@MethodName:ne:[Enum.INSTANCE] @AT@ 4051 @LENGTH@ 13
------------------------INS SimpleName@@Enum @TO@ QualifiedName@@Enum.INSTANCE @AT@ 4051 @LENGTH@ 4
------------------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@Enum.INSTANCE @AT@ 4056 @LENGTH@ 8
---INS VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),null); @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 4070 @LENGTH@ 71
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),null); @AT@ 4070 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),null) @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),null); @AT@ 4079 @LENGTH@ 61
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),null) @AT@ 4079 @LENGTH@ 6
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),null) @AT@ 4088 @LENGTH@ 52
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @AT@ 4088 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @AT@ 4095 @LENGTH@ 45
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @AT@ 4111 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 4111 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 4117 @LENGTH@ 16
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @AT@ 4135 @LENGTH@ 4
---INS VariableDeclarationStatement@@Object object=result.get("foo"); @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 4145 @LENGTH@ 34
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object object=result.get("foo"); @AT@ 4145 @LENGTH@ 6
------INS VariableDeclarationFragment@@object=result.get("foo") @TO@ VariableDeclarationStatement@@Object object=result.get("foo"); @AT@ 4152 @LENGTH@ 26
---------INS SimpleName@@object @TO@ VariableDeclarationFragment@@object=result.get("foo") @AT@ 4152 @LENGTH@ 6
---------INS MethodInvocation@@result.get("foo") @TO@ VariableDeclarationFragment@@object=result.get("foo") @AT@ 4161 @LENGTH@ 17
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get("foo") @AT@ 4161 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@result.get("foo") @AT@ 4168 @LENGTH@ 10
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 4172 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(object,is(DBObject.class)) @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 4182 @LENGTH@ 39
------INS MethodInvocation@@assertThat(object,is(DBObject.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(object,is(DBObject.class)) @AT@ 4182 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertThat:[object, is(DBObject.class)] @TO@ MethodInvocation@@assertThat(object,is(DBObject.class)) @AT@ 4182 @LENGTH@ 38
------------INS SimpleName@@object @TO@ SimpleName@@MethodName:assertThat:[object, is(DBObject.class)] @AT@ 4193 @LENGTH@ 6
------------INS MethodInvocation@@is(DBObject.class) @TO@ SimpleName@@MethodName:assertThat:[object, is(DBObject.class)] @AT@ 4201 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[DBObject.class] @TO@ MethodInvocation@@is(DBObject.class) @AT@ 4201 @LENGTH@ 18
------------------INS TypeLiteral@@DBObject.class @TO@ SimpleName@@MethodName:is:[DBObject.class] @AT@ 4204 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[DBObject.class] @TO@ MethodInvocation@@is(DBObject.class) @AT@ 4201 @LENGTH@ 18
------------------INS TypeLiteral@@DBObject.class @TO@ SimpleName@@MethodName:is:[DBObject.class] @AT@ 4204 @LENGTH@ 14
---INS VariableDeclarationStatement@@Object ne=((DBObject)object).get("$ne"); @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 4225 @LENGTH@ 43
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object ne=((DBObject)object).get("$ne"); @AT@ 4225 @LENGTH@ 6
------INS VariableDeclarationFragment@@ne=((DBObject)object).get("$ne") @TO@ VariableDeclarationStatement@@Object ne=((DBObject)object).get("$ne"); @AT@ 4232 @LENGTH@ 35
---------INS SimpleName@@ne @TO@ VariableDeclarationFragment@@ne=((DBObject)object).get("$ne") @AT@ 4232 @LENGTH@ 2
---------INS MethodInvocation@@((DBObject)object).get("$ne") @TO@ VariableDeclarationFragment@@ne=((DBObject)object).get("$ne") @AT@ 4237 @LENGTH@ 30
------------INS ParenthesizedExpression@@((DBObject)object) @TO@ MethodInvocation@@((DBObject)object).get("$ne") @AT@ 4237 @LENGTH@ 19
---------------INS CastExpression@@(DBObject)object @TO@ ParenthesizedExpression@@((DBObject)object) @AT@ 4238 @LENGTH@ 17
------------------INS SimpleType@@DBObject @TO@ CastExpression@@(DBObject)object @AT@ 4239 @LENGTH@ 8
------------------INS SimpleName@@object @TO@ CastExpression@@(DBObject)object @AT@ 4249 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:["$ne"] @TO@ MethodInvocation@@((DBObject)object).get("$ne") @AT@ 4257 @LENGTH@ 10
---------------INS StringLiteral@@"$ne" @TO@ SimpleName@@MethodName:get:["$ne"] @AT@ 4261 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(ne,is(String.class)) @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 4271 @LENGTH@ 33
------INS MethodInvocation@@assertThat(ne,is(String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ne,is(String.class)) @AT@ 4271 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[ne, is(String.class)] @TO@ MethodInvocation@@assertThat(ne,is(String.class)) @AT@ 4271 @LENGTH@ 32
------------INS SimpleName@@ne @TO@ SimpleName@@MethodName:assertThat:[ne, is(String.class)] @AT@ 4282 @LENGTH@ 2
------------INS MethodInvocation@@is(String.class) @TO@ SimpleName@@MethodName:assertThat:[ne, is(String.class)] @AT@ 4286 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:[String.class] @TO@ MethodInvocation@@is(String.class) @AT@ 4286 @LENGTH@ 16
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:is:[String.class] @AT@ 4289 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:[String.class] @TO@ MethodInvocation@@is(String.class) @AT@ 4286 @LENGTH@ 16
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:is:[String.class] @AT@ 4289 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(ne.toString(),is(Enum.INSTANCE.name())) @TO@ MethodDeclaration@@public, void, MethodName:handlesEnumsInNotEqualCorrectly,  @AT@ 4307 @LENGTH@ 52
------INS MethodInvocation@@assertThat(ne.toString(),is(Enum.INSTANCE.name())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(ne.toString(),is(Enum.INSTANCE.name())) @AT@ 4307 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[ne.toString(), is(Enum.INSTANCE.name())] @TO@ MethodInvocation@@assertThat(ne.toString(),is(Enum.INSTANCE.name())) @AT@ 4307 @LENGTH@ 51
------------INS MethodInvocation@@ne.toString() @TO@ SimpleName@@MethodName:assertThat:[ne.toString(), is(Enum.INSTANCE.name())] @AT@ 4318 @LENGTH@ 13
---------------INS SimpleName@@Name:ne @TO@ MethodInvocation@@ne.toString() @AT@ 4318 @LENGTH@ 2
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@ne.toString() @AT@ 4321 @LENGTH@ 10
------------INS MethodInvocation@@is(Enum.INSTANCE.name()) @TO@ SimpleName@@MethodName:assertThat:[ne.toString(), is(Enum.INSTANCE.name())] @AT@ 4333 @LENGTH@ 24
---------------INS SimpleName@@MethodName:is:[Enum.INSTANCE.name()] @TO@ MethodInvocation@@is(Enum.INSTANCE.name()) @AT@ 4333 @LENGTH@ 24
------------------INS MethodInvocation@@Enum.INSTANCE.name() @TO@ SimpleName@@MethodName:is:[Enum.INSTANCE.name()] @AT@ 4336 @LENGTH@ 20
---------------------INS QualifiedName@@Name:Enum.INSTANCE @TO@ MethodInvocation@@Enum.INSTANCE.name() @AT@ 4336 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@Enum.INSTANCE.name() @AT@ 4350 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[Enum.INSTANCE.name()] @TO@ MethodInvocation@@is(Enum.INSTANCE.name()) @AT@ 4333 @LENGTH@ 24
------------------INS MethodInvocation@@Enum.INSTANCE.name() @TO@ SimpleName@@MethodName:is:[Enum.INSTANCE.name()] @AT@ 4336 @LENGTH@ 20
---------------------INS QualifiedName@@Name:Enum.INSTANCE @TO@ MethodInvocation@@Enum.INSTANCE.name() @AT@ 4336 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@Enum.INSTANCE.name() @AT@ 4350 @LENGTH@ 6


UPD VariableDeclarationStatement@@SnsEndpoint endpoint=new SnsEndpoint(uri,getCamelContext(),configuration); @TO@ SnsEndpoint endpoint=new SnsEndpoint(uri,this,configuration); @AT@ 1976 @LENGTH@ 78
---UPD VariableDeclarationFragment@@endpoint=new SnsEndpoint(uri,getCamelContext(),configuration) @TO@ endpoint=new SnsEndpoint(uri,this,configuration) @AT@ 1988 @LENGTH@ 65
------UPD ClassInstanceCreation@@SnsEndpoint[uri, getCamelContext(), configuration] @TO@ SnsEndpoint[uri, this, configuration] @AT@ 1999 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 2020 @LENGTH@ 17
---------INS ThisExpression@@this @TO@ ClassInstanceCreation@@SnsEndpoint[uri, getCamelContext(), configuration] @AT@ 2020 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, IOException, MgmtOperationException,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, IOException, MgmtOperationException,  @AT@ 3430 @LENGTH@ 365
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, IOException, MgmtOperationException,  @AT@ 3492 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3492 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3498 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3505 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:copy.setDomain(targetServer) @TO@ MethodDeclaration@@public, static, Cookie, MethodName:copyCookie, Cookie toCopy, String targetServer,  @AT@ 11562 @LENGTH@ 29
---INS MethodInvocation@@copy.setDomain(targetServer) @TO@ ExpressionStatement@@MethodInvocation:copy.setDomain(targetServer) @AT@ 11562 @LENGTH@ 28
------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.setDomain(targetServer) @AT@ 11562 @LENGTH@ 4
------INS SimpleName@@MethodName:setDomain:[targetServer] @TO@ MethodInvocation@@copy.setDomain(targetServer) @AT@ 11567 @LENGTH@ 23
---------INS SimpleName@@targetServer @TO@ SimpleName@@MethodName:setDomain:[targetServer] @AT@ 11577 @LENGTH@ 12


UPD MethodDeclaration@@public, static, Class, MethodName:toClass, Object value, Exchange exchange,  @TO@ public, static, Class<?>, MethodName:toClass, Object value, Exchange exchange,  @AT@ 3493 @LENGTH@ 514
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@public, static, Class, MethodName:toClass, Object value, Exchange exchange,  @AT@ 3442 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3442 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3448 @LENGTH@ 1
---DEL SimpleType@@Class @AT@ 3507 @LENGTH@ 5
---UPD IfStatement@@if (value instanceof Class) {  return (Class)value;} else if (value instanceof String) {  if (exchange != null) {    return exchange.getContext().getClassResolver().resolveClass((String)value);  } else {    return ObjectHelper.loadClass((String)value);  }} else {  return null;} @TO@ if (value instanceof Class) {  return (Class<?>)value;} else if (value instanceof String) {  if (exchange != null) {    return exchange.getContext().getClassResolver().resolveClass((String)value);  } else {    return ObjectHelper.loadClass((String)value);  }} else {  return null;} @AT@ 3564 @LENGTH@ 437
------UPD Block@@ThenBody:{  return (Class)value;} @TO@ ThenBody:{  return (Class<?>)value;} @AT@ 3592 @LENGTH@ 45
---------UPD ReturnStatement@@CastExpression:(Class)value @TO@ CastExpression:(Class<?>)value @AT@ 3606 @LENGTH@ 21
------------UPD CastExpression@@(Class)value @TO@ (Class<?>)value @AT@ 3613 @LENGTH@ 13
---------------INS ParameterizedType@@Class<?> @TO@ CastExpression@@(Class)value @AT@ 3552 @LENGTH@ 8
------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3552 @LENGTH@ 5
------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3558 @LENGTH@ 1
---------------DEL SimpleType@@Class @AT@ 3614 @LENGTH@ 5


INS IfStatement@@if (environment == null) environment=new Hashtable<String,Object>(); @TO@ MethodDeclaration@@public, javax.naming.spi.InitialContextFactory, MethodName:createInitialContextFactory, Hashtable<?,?> environment, NamingException,  @AT@ 2185 @LENGTH@ 83
---INS InfixExpression@@environment == null @TO@ IfStatement@@if (environment == null) environment=new Hashtable<String,Object>(); @AT@ 2189 @LENGTH@ 19
------INS SimpleName@@environment @TO@ InfixExpression@@environment == null @AT@ 2189 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@environment == null @AT@ 2200 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@environment == null @AT@ 2204 @LENGTH@ 4
---INS Block@@ThenBody:environment=new Hashtable<String,Object>(); @TO@ IfStatement@@if (environment == null) environment=new Hashtable<String,Object>(); @AT@ 2222 @LENGTH@ 46
------INS ExpressionStatement@@Assignment:environment=new Hashtable<String,Object>() @TO@ Block@@ThenBody:environment=new Hashtable<String,Object>(); @AT@ 2222 @LENGTH@ 46
---------INS Assignment@@environment=new Hashtable<String,Object>() @TO@ ExpressionStatement@@Assignment:environment=new Hashtable<String,Object>() @AT@ 2222 @LENGTH@ 45
------------INS SimpleName@@environment @TO@ Assignment@@environment=new Hashtable<String,Object>() @AT@ 2222 @LENGTH@ 11
------------INS Operator@@= @TO@ Assignment@@environment=new Hashtable<String,Object>() @AT@ 2233 @LENGTH@ 1
------------INS ClassInstanceCreation@@Hashtable<String,Object>[] @TO@ Assignment@@environment=new Hashtable<String,Object>() @AT@ 2236 @LENGTH@ 31
---------------INS New@@new @TO@ ClassInstanceCreation@@Hashtable<String,Object>[] @AT@ 2236 @LENGTH@ 3
---------------INS ParameterizedType@@Hashtable<String,Object> @TO@ ClassInstanceCreation@@Hashtable<String,Object>[] @AT@ 2240 @LENGTH@ 25
------------------INS SimpleType@@Hashtable @TO@ ParameterizedType@@Hashtable<String,Object> @AT@ 2240 @LENGTH@ 9
------------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,Object> @AT@ 2250 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Hashtable<String,Object> @AT@ 2258 @LENGTH@ 6


INS MethodDeclaration@@public, boolean, MethodName:isEntity,  @TO@ TypeDeclaration@@[public, abstract]EJBComponentDescription, ComponentDescription @AT@ 21600 @LENGTH@ 55
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 21600 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 21607 @LENGTH@ 7
---INS SimpleName@@MethodName:isEntity @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 21615 @LENGTH@ 8
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 21636 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 21643 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:out.println(String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),"-")) @TO@ MethodInvocation:out.println(String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),getProvisionedStatus(agent))) @AT@ 1556 @LENGTH@ 123
---UPD MethodInvocation@@out.println(String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),"-")) @TO@ out.println(String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),getProvisionedStatus(agent))) @AT@ 1556 @LENGTH@ 122
------UPD SimpleName@@MethodName:println:[String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),"-")] @TO@ MethodName:println:[String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),getProvisionedStatus(agent))] @AT@ 1560 @LENGTH@ 118
---------UPD MethodInvocation@@String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),"-") @TO@ String.format("%-30s %-10s %-30s %-100s",agent.getId(),agent.isAlive(),toString(agent.getProfiles()),getProvisionedStatus(agent)) @AT@ 1568 @LENGTH@ 109
------------UPD SimpleName@@MethodName:format:["%-30s %-10s %-30s %-100s", agent.getId(), agent.isAlive(), toString(agent.getProfiles()), "-"] @TO@ MethodName:format:["%-30s %-10s %-30s %-100s", agent.getId(), agent.isAlive(), toString(agent.getProfiles()), getProvisionedStatus(agent)] @AT@ 1575 @LENGTH@ 102
---------------DEL StringLiteral@@"-" @AT@ 1673 @LENGTH@ 3
---------------INS MethodInvocation@@getProvisionedStatus(agent) @TO@ SimpleName@@MethodName:format:["%-30s %-10s %-30s %-100s", agent.getId(), agent.isAlive(), toString(agent.getProfiles()), "-"] @AT@ 1725 @LENGTH@ 27
------------------INS SimpleName@@MethodName:getProvisionedStatus:[agent] @TO@ MethodInvocation@@getProvisionedStatus(agent) @AT@ 1725 @LENGTH@ 27
---------------------INS SimpleName@@agent @TO@ SimpleName@@MethodName:getProvisionedStatus:[agent] @AT@ 1746 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:bar").expectedMessageCount(1) @TO@ MethodInvocation:getMockEndpoint("mock:bar").expectedMinimumMessageCount(1) @AT@ 1305 @LENGTH@ 52
---UPD MethodInvocation@@getMockEndpoint("mock:bar").expectedMessageCount(1) @TO@ getMockEndpoint("mock:bar").expectedMinimumMessageCount(1) @AT@ 1305 @LENGTH@ 51
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 1333 @LENGTH@ 23


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3768 @LENGTH@ 297
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3856 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3856 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3862 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3869 @LENGTH@ 11


UPD VariableDeclarationStatement@@final CommandContext ctx=CommandContextFactory.getInstance().newCommandContext(); @TO@ final CommandContext ctx=CLITestUtil.getCommandContext(); @AT@ 1766 @LENGTH@ 83
---UPD VariableDeclarationFragment@@ctx=CommandContextFactory.getInstance().newCommandContext() @TO@ ctx=CLITestUtil.getCommandContext() @AT@ 1787 @LENGTH@ 61
------UPD MethodInvocation@@CommandContextFactory.getInstance().newCommandContext() @TO@ CLITestUtil.getCommandContext() @AT@ 1793 @LENGTH@ 55
---------DEL MethodInvocation@@MethodName:getInstance:[] @AT@ 1793 @LENGTH@ 35
---------UPD SimpleName@@Name:CommandContextFactory @TO@ Name:CLITestUtil @AT@ 1793 @LENGTH@ 21
---------UPD SimpleName@@MethodName:newCommandContext:[] @TO@ MethodName:getCommandContext:[] @AT@ 1829 @LENGTH@ 19


UPD VariableDeclarationStatement@@InputStream in=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class); @TO@ InputStream in=exchange.getIn().getMandatoryBody(InputStream.class); @AT@ 8181 @LENGTH@ 80
---UPD VariableDeclarationFragment@@in=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ in=exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 8193 @LENGTH@ 67
------UPD MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 8198 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @AT@ 8153 @LENGTH@ 16
---------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 8198 @LENGTH@ 14
---------UPD SimpleName@@MethodName:getMandatoryInBody:[exchange, InputStream.class] @TO@ MethodName:getMandatoryBody:[InputStream.class] @AT@ 8213 @LENGTH@ 47
------------DEL SimpleName@@exchange @AT@ 8232 @LENGTH@ 8


UPD TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",EntityUtils.toString(response.getEntity()));}  finally {  httpclient.getConnectionManager().shutdown();} @TO@ try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  String s=EntityUtils.toString(response.getEntity());  boolean isJohn="{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s);  boolean isMary="{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s);  assertTrue("Should be John or Mary",isJohn || isMary);}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 3265 @LENGTH@ 372
---UPD ExpressionStatement@@MethodInvocation:assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",EntityUtils.toString(response.getEntity())) @TO@ MethodInvocation:assertTrue("Should be John or Mary",isJohn || isMary) @AT@ 3417 @LENGTH@ 132
------UPD MethodInvocation@@assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",EntityUtils.toString(response.getEntity())) @TO@ assertTrue("Should be John or Mary",isJohn || isMary) @AT@ 3417 @LENGTH@ 131
---------UPD SimpleName@@MethodName:assertEquals:["{\"Customer\":{\"id\":123,\"name\":\"John\"}}", EntityUtils.toString(response.getEntity())] @TO@ MethodName:assertTrue:["Should be John or Mary", isJohn || isMary] @AT@ 3417 @LENGTH@ 131
------------UPD StringLiteral@@"{\"Customer\":{\"id\":123,\"name\":\"John\"}}" @TO@ "Should be John or Mary" @AT@ 3430 @LENGTH@ 47
------------INS InfixExpression@@isJohn || isMary @TO@ SimpleName@@MethodName:assertEquals:["{\"Customer\":{\"id\":123,\"name\":\"John\"}}", EntityUtils.toString(response.getEntity())] @AT@ 3780 @LENGTH@ 16
---------------INS SimpleName@@isJohn @TO@ InfixExpression@@isJohn || isMary @AT@ 3780 @LENGTH@ 6
---------------INS Operator@@|| @TO@ InfixExpression@@isJohn || isMary @AT@ 3786 @LENGTH@ 2
---------------INS SimpleName@@isMary @TO@ InfixExpression@@isJohn || isMary @AT@ 3790 @LENGTH@ 6
---INS VariableDeclarationStatement@@String s=EntityUtils.toString(response.getEntity()); @TO@ TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",EntityUtils.toString(response.getEntity()));}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 3500 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=EntityUtils.toString(response.getEntity()); @AT@ 3500 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=EntityUtils.toString(response.getEntity()) @TO@ VariableDeclarationStatement@@String s=EntityUtils.toString(response.getEntity()); @AT@ 3507 @LENGTH@ 46
---------MOV MethodInvocation@@EntityUtils.toString(response.getEntity()) @TO@ VariableDeclarationFragment@@s=EntityUtils.toString(response.getEntity()) @AT@ 3505 @LENGTH@ 42
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=EntityUtils.toString(response.getEntity()) @AT@ 3507 @LENGTH@ 1
---INS VariableDeclarationStatement@@boolean isJohn="{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s); @TO@ TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",EntityUtils.toString(response.getEntity()));}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 3567 @LENGTH@ 75
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean isJohn="{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s); @AT@ 3567 @LENGTH@ 7
------INS VariableDeclarationFragment@@isJohn="{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s) @TO@ VariableDeclarationStatement@@boolean isJohn="{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s); @AT@ 3575 @LENGTH@ 66
---------INS SimpleName@@isJohn @TO@ VariableDeclarationFragment@@isJohn="{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s) @AT@ 3575 @LENGTH@ 6
---------INS MethodInvocation@@"{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s) @TO@ VariableDeclarationFragment@@isJohn="{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s) @AT@ 3584 @LENGTH@ 57
------------INS StringLiteral@@"{\"Customer\":{\"id\":123,\"name\":\"John\"}}" @TO@ MethodInvocation@@"{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s) @AT@ 3584 @LENGTH@ 47
------------INS SimpleName@@MethodName:equals:[s] @TO@ MethodInvocation@@"{\"Customer\":{\"id\":123,\"name\":\"John\"}}".equals(s) @AT@ 3632 @LENGTH@ 9
---------------INS SimpleName@@s @TO@ SimpleName@@MethodName:equals:[s] @AT@ 3639 @LENGTH@ 1
---INS VariableDeclarationStatement@@boolean isMary="{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s); @TO@ TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  assertEquals("{\"Customer\":{\"id\":123,\"name\":\"John\"}}",EntityUtils.toString(response.getEntity()));}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 3655 @LENGTH@ 75
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean isMary="{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s); @AT@ 3655 @LENGTH@ 7
------INS VariableDeclarationFragment@@isMary="{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s) @TO@ VariableDeclarationStatement@@boolean isMary="{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s); @AT@ 3663 @LENGTH@ 66
---------INS SimpleName@@isMary @TO@ VariableDeclarationFragment@@isMary="{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s) @AT@ 3663 @LENGTH@ 6
---------INS MethodInvocation@@"{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s) @TO@ VariableDeclarationFragment@@isMary="{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s) @AT@ 3672 @LENGTH@ 57
------------INS StringLiteral@@"{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}" @TO@ MethodInvocation@@"{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s) @AT@ 3672 @LENGTH@ 47
------------INS SimpleName@@MethodName:equals:[s] @TO@ MethodInvocation@@"{\"Customer\":{\"id\":123,\"name\":\"Mary\"}}".equals(s) @AT@ 3720 @LENGTH@ 9
---------------INS SimpleName@@s @TO@ SimpleName@@MethodName:equals:[s] @AT@ 3727 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\",\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"}}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @TO@ MethodInvocation:mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"},\"connect-type\":\"friend\"}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @AT@ 1833 @LENGTH@ 853
---UPD MethodInvocation@@mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\",\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"}}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @TO@ mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"},\"connect-type\":\"friend\"}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @AT@ 1833 @LENGTH@ 852
------UPD MethodInvocation@@MethodName:andExpect:[body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\",\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"}}}}")] @TO@ MethodName:andExpect:[body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"},\"connect-type\":\"friend\"}}}")] @AT@ 1833 @LENGTH@ 474
---------UPD MethodInvocation@@body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\",\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"}}}}") @TO@ body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"},\"connect-type\":\"friend\"}}}") @AT@ 1939 @LENGTH@ 367
------------UPD SimpleName@@MethodName:body:["{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\",\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"}}}}"] @TO@ MethodName:body:["{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"},\"connect-type\":\"friend\"}}}"] @AT@ 1939 @LENGTH@ 367
---------------UPD StringLiteral@@"{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\",\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"}}}}" @TO@ "{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/UB2kruYvvv\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"authorization\":{\"name\":\"NAME_SEARCH\",\"value\":\"aaaa\"},\"connect-type\":\"friend\"}}}" @AT@ 1944 @LENGTH@ 361


UPD ExpressionStatement@@Assignment:this.connectionURI=new URI(REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port) @TO@ Assignment:this.connectionURI=new URI(REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port) @AT@ 7000 @LENGTH@ 99
---UPD Assignment@@this.connectionURI=new URI(REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port) @TO@ this.connectionURI=new URI(REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port) @AT@ 7000 @LENGTH@ 98
------UPD ClassInstanceCreation@@URI[REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port] @TO@ URI[REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port] @AT@ 7021 @LENGTH@ 77
---------UPD InfixExpression@@REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port @TO@ REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port @AT@ 7029 @LENGTH@ 68
------------DEL MethodInvocation@@destinationAddress.getHostAddress() @AT@ 7049 @LENGTH@ 35
------------INS MethodInvocation@@NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) @TO@ InfixExpression@@REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port @AT@ 7091 @LENGTH@ 76
---------------INS SimpleName@@Name:NetworkUtils @TO@ MethodInvocation@@NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) @AT@ 7091 @LENGTH@ 12
---------------INS SimpleName@@MethodName:formatPossibleIpv6Address:[destinationAddress.getHostAddress()] @TO@ MethodInvocation@@NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) @AT@ 7104 @LENGTH@ 63
------------------INS MethodInvocation@@destinationAddress.getHostAddress() @TO@ SimpleName@@MethodName:formatPossibleIpv6Address:[destinationAddress.getHostAddress()] @AT@ 7131 @LENGTH@ 35
---------------------MOV SimpleName@@Name:destinationAddress @TO@ MethodInvocation@@destinationAddress.getHostAddress() @AT@ 7049 @LENGTH@ 18
---------------------MOV SimpleName@@MethodName:getHostAddress:[] @TO@ MethodInvocation@@destinationAddress.getHostAddress() @AT@ 7068 @LENGTH@ 16


UPD MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp, Exception,  @AT@ 1824 @LENGTH@ 263
---UPD Modifier@@protected @TO@ public @AT@ 1824 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals(expected.toUpperCase(),new String(actual)) @TO@ MethodInvocation:assertFalse(expected.equals(new String(actual))) @AT@ 12218 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(expected.toUpperCase(),new String(actual)) @TO@ assertFalse(expected.equals(new String(actual))) @AT@ 12218 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[expected.toUpperCase(), new String(actual)] @TO@ MethodName:assertFalse:[expected.equals(new String(actual))] @AT@ 12218 @LENGTH@ 56
---------INS MethodInvocation@@expected.equals(new String(actual)) @TO@ SimpleName@@MethodName:assertEquals:[expected.toUpperCase(), new String(actual)] @AT@ 12230 @LENGTH@ 35
------------MOV SimpleName@@Name:expected @TO@ MethodInvocation@@expected.equals(new String(actual)) @AT@ 12231 @LENGTH@ 8
------------INS SimpleName@@MethodName:equals:[new String(actual)] @TO@ MethodInvocation@@expected.equals(new String(actual)) @AT@ 12239 @LENGTH@ 26
---------------MOV ClassInstanceCreation@@String[actual] @TO@ SimpleName@@MethodName:equals:[new String(actual)] @AT@ 12255 @LENGTH@ 18
---------DEL MethodInvocation@@expected.toUpperCase() @AT@ 12231 @LENGTH@ 22
------------DEL SimpleName@@MethodName:toUpperCase:[] @AT@ 12240 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:builder.append("  --runtime_name=").append(runtimeName) @TO@ MethodInvocation:builder.append("  --runtime-name=").append(runtimeName) @AT@ 8392 @LENGTH@ 56
---UPD MethodInvocation@@builder.append("  --runtime_name=").append(runtimeName) @TO@ builder.append("  --runtime-name=").append(runtimeName) @AT@ 8392 @LENGTH@ 55
------UPD MethodInvocation@@MethodName:append:["  --runtime_name="] @TO@ MethodName:append:["  --runtime-name="] @AT@ 8392 @LENGTH@ 35
---------UPD StringLiteral@@"  --runtime_name=" @TO@ "  --runtime-name=" @AT@ 8407 @LENGTH@ 19


UPD ExpressionStatement@@Assignment:expression=expression.substring(2,expression.length() - 2) @TO@ Assignment:expression=expression.substring(2,expression.length() - 1) @AT@ 1643 @LENGTH@ 61
---UPD Assignment@@expression=expression.substring(2,expression.length() - 2) @TO@ expression=expression.substring(2,expression.length() - 1) @AT@ 1643 @LENGTH@ 60
------UPD MethodInvocation@@expression.substring(2,expression.length() - 2) @TO@ expression.substring(2,expression.length() - 1) @AT@ 1656 @LENGTH@ 47
---------UPD SimpleName@@MethodName:substring:[2, expression.length() - 2] @TO@ MethodName:substring:[2, expression.length() - 1] @AT@ 1667 @LENGTH@ 36
------------UPD InfixExpression@@expression.length() - 2 @TO@ expression.length() - 1 @AT@ 1680 @LENGTH@ 22
---------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 1701 @LENGTH@ 1


UPD IfStatement@@if (delegate instanceof ContinuousQueryListener) {  ((ContinuousQueryListener)delegate).onEvent(event);} @TO@ if (delegate instanceof ContinuousQueryListener) {  ((ContinuousQueryListener)delegate).onEvent(event);  return;} @AT@ 8582 @LENGTH@ 114
---UPD Block@@ThenBody:{  ((ContinuousQueryListener)delegate).onEvent(event);} @TO@ ThenBody:{  ((ContinuousQueryListener)delegate).onEvent(event);  return;} @AT@ 8631 @LENGTH@ 65
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ((ContinuousQueryListener)delegate).onEvent(event);} @AT@ 8694 @LENGTH@ 7


DEL MethodDeclaration@@public, static, ClassLoader, MethodName:addResourceFilesToClassPath, Configuration conf,  @AT@ 50666 @LENGTH@ 454
---DEL Modifier@@public @AT@ 50666 @LENGTH@ 6
---DEL Modifier@@static @AT@ 50673 @LENGTH@ 6
---DEL SimpleType@@ClassLoader @AT@ 50680 @LENGTH@ 11
---DEL SimpleName@@MethodName:addResourceFilesToClassPath @AT@ 50692 @LENGTH@ 27
---DEL SingleVariableDeclaration@@Configuration conf @AT@ 50720 @LENGTH@ 18
------DEL SimpleType@@Configuration @AT@ 50720 @LENGTH@ 13
------DEL SimpleName@@conf @AT@ 50734 @LENGTH@ 4
---DEL TryStatement@@try {  String addedJars=getResourceFiles(conf,SessionState.ResourceType.JAR);  if (!StringUtils.isNotBlank(addedJars)) {    return conf.getClassLoader();  }  return addToClassPath(conf.getClassLoader(),StringUtils.split(addedJars,','));} catch (Exception e) {  throw new RuntimeException("Error in adding jars to conf ",e);} @AT@ 50746 @LENGTH@ 370
------DEL VariableDeclarationStatement@@String addedJars=getResourceFiles(conf,SessionState.ResourceType.JAR); @AT@ 50758 @LENGTH@ 73
---------DEL SimpleType@@String @AT@ 50758 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@addedJars=getResourceFiles(conf,SessionState.ResourceType.JAR) @AT@ 50765 @LENGTH@ 65
------------DEL SimpleName@@addedJars @AT@ 50765 @LENGTH@ 9
------------DEL MethodInvocation@@getResourceFiles(conf,SessionState.ResourceType.JAR) @AT@ 50777 @LENGTH@ 53
---------------DEL SimpleName@@MethodName:getResourceFiles:[conf, SessionState.ResourceType.JAR] @AT@ 50777 @LENGTH@ 53
------------------DEL SimpleName@@conf @AT@ 50794 @LENGTH@ 4
------------------DEL QualifiedName@@SessionState.ResourceType.JAR @AT@ 50800 @LENGTH@ 29
---------------------DEL QualifiedName@@SessionState.ResourceType @AT@ 50800 @LENGTH@ 25
------------------------DEL SimpleName@@SessionState @AT@ 50800 @LENGTH@ 12
------------------------DEL SimpleName@@ResourceType @AT@ 50813 @LENGTH@ 12
---------------------DEL SimpleName@@JAR @AT@ 50826 @LENGTH@ 3
------DEL IfStatement@@if (!StringUtils.isNotBlank(addedJars)) {  return conf.getClassLoader();} @AT@ 50838 @LENGTH@ 87
---------DEL PrefixExpression@@!StringUtils.isNotBlank(addedJars) @AT@ 50842 @LENGTH@ 34
------------DEL Operator@@! @AT@ 50842 @LENGTH@ 1
------------DEL MethodInvocation@@StringUtils.isNotBlank(addedJars) @AT@ 50843 @LENGTH@ 33
---------------DEL SimpleName@@Name:StringUtils @AT@ 50843 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:isNotBlank:[addedJars] @AT@ 50855 @LENGTH@ 21
------------------DEL SimpleName@@addedJars @AT@ 50866 @LENGTH@ 9
---------DEL Block@@ThenBody:{  return conf.getClassLoader();} @AT@ 50878 @LENGTH@ 47
------------DEL ReturnStatement@@MethodInvocation:conf.getClassLoader() @AT@ 50888 @LENGTH@ 29
---------------DEL MethodInvocation@@conf.getClassLoader() @AT@ 50895 @LENGTH@ 21
------------------DEL SimpleName@@Name:conf @AT@ 50895 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getClassLoader:[] @AT@ 50900 @LENGTH@ 16
------DEL ReturnStatement@@MethodInvocation:addToClassPath(conf.getClassLoader(),StringUtils.split(addedJars,',')) @AT@ 50932 @LENGTH@ 80
---------DEL MethodInvocation@@addToClassPath(conf.getClassLoader(),StringUtils.split(addedJars,',')) @AT@ 50939 @LENGTH@ 72
------------DEL SimpleName@@MethodName:addToClassPath:[conf.getClassLoader(), StringUtils.split(addedJars,',')] @AT@ 50939 @LENGTH@ 72
---------------DEL MethodInvocation@@conf.getClassLoader() @AT@ 50954 @LENGTH@ 21
------------------DEL SimpleName@@Name:conf @AT@ 50954 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getClassLoader:[] @AT@ 50959 @LENGTH@ 16
---------------DEL MethodInvocation@@StringUtils.split(addedJars,',') @AT@ 50977 @LENGTH@ 33
------------------DEL SimpleName@@Name:StringUtils @AT@ 50977 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:split:[addedJars, ','] @AT@ 50989 @LENGTH@ 21
---------------------DEL SimpleName@@addedJars @AT@ 50995 @LENGTH@ 9
---------------------DEL CharacterLiteral@@',' @AT@ 51006 @LENGTH@ 3
------DEL CatchClause@@catch (Exception e) {  throw new RuntimeException("Error in adding jars to conf ",e);} @AT@ 51019 @LENGTH@ 97
---------DEL SingleVariableDeclaration@@Exception e @AT@ 51026 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 51026 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 51036 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new RuntimeException("Error in adding jars to conf ",e) @AT@ 51047 @LENGTH@ 63
------------DEL ClassInstanceCreation@@RuntimeException["Error in adding jars to conf ", e] @AT@ 51053 @LENGTH@ 56
---------------DEL New@@new @AT@ 51053 @LENGTH@ 3
---------------DEL SimpleType@@RuntimeException @AT@ 51057 @LENGTH@ 16
---------------DEL StringLiteral@@"Error in adding jars to conf " @AT@ 51074 @LENGTH@ 31
---------------DEL SimpleName@@e @AT@ 51107 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]FsShellTest,  @AT@ 11040 @LENGTH@ 316
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11040 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11047 @LENGTH@ 4
---INS SimpleName@@MethodName:testLSR @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11052 @LENGTH@ 7
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11069 @LENGTH@ 9
---INS VariableDeclarationStatement@@String fName1=UUID.randomUUID() + ".txt"; @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11083 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String fName1=UUID.randomUUID() + ".txt"; @AT@ 11083 @LENGTH@ 6
------INS VariableDeclarationFragment@@fName1=UUID.randomUUID() + ".txt" @TO@ VariableDeclarationStatement@@String fName1=UUID.randomUUID() + ".txt"; @AT@ 11090 @LENGTH@ 35
---------INS SimpleName@@fName1 @TO@ VariableDeclarationFragment@@fName1=UUID.randomUUID() + ".txt" @AT@ 11090 @LENGTH@ 6
---------INS InfixExpression@@UUID.randomUUID() + ".txt" @TO@ VariableDeclarationFragment@@fName1=UUID.randomUUID() + ".txt" @AT@ 11099 @LENGTH@ 26
------------INS MethodInvocation@@UUID.randomUUID() @TO@ InfixExpression@@UUID.randomUUID() + ".txt" @AT@ 11099 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 11099 @LENGTH@ 4
---------------INS SimpleName@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 11104 @LENGTH@ 12
------------INS Operator@@+ @TO@ InfixExpression@@UUID.randomUUID() + ".txt" @AT@ 11116 @LENGTH@ 1
------------INS StringLiteral@@".txt" @TO@ InfixExpression@@UUID.randomUUID() + ".txt" @AT@ 11119 @LENGTH@ 6
---INS VariableDeclarationStatement@@String name1="local/merge/" + fName1; @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11129 @LENGTH@ 39
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name1="local/merge/" + fName1; @AT@ 11129 @LENGTH@ 6
------INS VariableDeclarationFragment@@name1="local/merge/" + fName1 @TO@ VariableDeclarationStatement@@String name1="local/merge/" + fName1; @AT@ 11136 @LENGTH@ 31
---------INS SimpleName@@name1 @TO@ VariableDeclarationFragment@@name1="local/merge/" + fName1 @AT@ 11136 @LENGTH@ 5
---------INS InfixExpression@@"local/merge/" + fName1 @TO@ VariableDeclarationFragment@@name1="local/merge/" + fName1 @AT@ 11144 @LENGTH@ 23
------------INS StringLiteral@@"local/merge/" @TO@ InfixExpression@@"local/merge/" + fName1 @AT@ 11144 @LENGTH@ 14
------------INS Operator@@+ @TO@ InfixExpression@@"local/merge/" + fName1 @AT@ 11158 @LENGTH@ 1
------------INS SimpleName@@fName1 @TO@ InfixExpression@@"local/merge/" + fName1 @AT@ 11161 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,name1) @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11171 @LENGTH@ 32
------INS MethodInvocation@@TestUtils.writeToFS(cfg,name1) @TO@ ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,name1) @AT@ 11171 @LENGTH@ 31
---------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.writeToFS(cfg,name1) @AT@ 11171 @LENGTH@ 9
---------INS SimpleName@@MethodName:writeToFS:[cfg, name1] @TO@ MethodInvocation@@TestUtils.writeToFS(cfg,name1) @AT@ 11181 @LENGTH@ 21
------------INS SimpleName@@cfg @TO@ SimpleName@@MethodName:writeToFS:[cfg, name1] @AT@ 11191 @LENGTH@ 3
------------INS SimpleName@@name1 @TO@ SimpleName@@MethodName:writeToFS:[cfg, name1] @AT@ 11196 @LENGTH@ 5
---INS VariableDeclarationStatement@@Collection<FileStatus> lsr=shell.lsr("."); @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11207 @LENGTH@ 44
------INS ParameterizedType@@Collection<FileStatus> @TO@ VariableDeclarationStatement@@Collection<FileStatus> lsr=shell.lsr("."); @AT@ 11207 @LENGTH@ 22
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<FileStatus> @AT@ 11207 @LENGTH@ 10
---------INS SimpleType@@FileStatus @TO@ ParameterizedType@@Collection<FileStatus> @AT@ 11218 @LENGTH@ 10
------INS VariableDeclarationFragment@@lsr=shell.lsr(".") @TO@ VariableDeclarationStatement@@Collection<FileStatus> lsr=shell.lsr("."); @AT@ 11230 @LENGTH@ 20
---------INS SimpleName@@lsr @TO@ VariableDeclarationFragment@@lsr=shell.lsr(".") @AT@ 11230 @LENGTH@ 3
---------INS MethodInvocation@@shell.lsr(".") @TO@ VariableDeclarationFragment@@lsr=shell.lsr(".") @AT@ 11236 @LENGTH@ 14
------------INS SimpleName@@Name:shell @TO@ MethodInvocation@@shell.lsr(".") @AT@ 11236 @LENGTH@ 5
------------INS SimpleName@@MethodName:lsr:["."] @TO@ MethodInvocation@@shell.lsr(".") @AT@ 11242 @LENGTH@ 8
---------------INS StringLiteral@@"." @TO@ SimpleName@@MethodName:lsr:["."] @AT@ 11246 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertTrue(lsr.size() > 1) @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11254 @LENGTH@ 27
------INS MethodInvocation@@assertTrue(lsr.size() > 1) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(lsr.size() > 1) @AT@ 11254 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertTrue:[lsr.size() > 1] @TO@ MethodInvocation@@assertTrue(lsr.size() > 1) @AT@ 11254 @LENGTH@ 26
------------INS InfixExpression@@lsr.size() > 1 @TO@ SimpleName@@MethodName:assertTrue:[lsr.size() > 1] @AT@ 11265 @LENGTH@ 14
---------------INS MethodInvocation@@lsr.size() @TO@ InfixExpression@@lsr.size() > 1 @AT@ 11265 @LENGTH@ 10
------------------INS SimpleName@@Name:lsr @TO@ MethodInvocation@@lsr.size() @AT@ 11265 @LENGTH@ 3
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@lsr.size() @AT@ 11269 @LENGTH@ 6
---------------INS Operator@@> @TO@ InfixExpression@@lsr.size() > 1 @AT@ 11275 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@lsr.size() > 1 @AT@ 11278 @LENGTH@ 1
---INS VariableDeclarationStatement@@String output=lsr.toString(); @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11284 @LENGTH@ 31
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String output=lsr.toString(); @AT@ 11284 @LENGTH@ 6
------INS VariableDeclarationFragment@@output=lsr.toString() @TO@ VariableDeclarationStatement@@String output=lsr.toString(); @AT@ 11291 @LENGTH@ 23
---------INS SimpleName@@output @TO@ VariableDeclarationFragment@@output=lsr.toString() @AT@ 11291 @LENGTH@ 6
---------INS MethodInvocation@@lsr.toString() @TO@ VariableDeclarationFragment@@output=lsr.toString() @AT@ 11300 @LENGTH@ 14
------------INS SimpleName@@Name:lsr @TO@ MethodInvocation@@lsr.toString() @AT@ 11300 @LENGTH@ 3
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@lsr.toString() @AT@ 11304 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertTrue(output.contains(name1)) @TO@ MethodDeclaration@@public, void, MethodName:testLSR, Exception,  @AT@ 11318 @LENGTH@ 35
------INS MethodInvocation@@assertTrue(output.contains(name1)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(output.contains(name1)) @AT@ 11318 @LENGTH@ 34
---------INS SimpleName@@MethodName:assertTrue:[output.contains(name1)] @TO@ MethodInvocation@@assertTrue(output.contains(name1)) @AT@ 11318 @LENGTH@ 34
------------INS MethodInvocation@@output.contains(name1) @TO@ SimpleName@@MethodName:assertTrue:[output.contains(name1)] @AT@ 11329 @LENGTH@ 22
---------------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.contains(name1) @AT@ 11329 @LENGTH@ 6
---------------INS SimpleName@@MethodName:contains:[name1] @TO@ MethodInvocation@@output.contains(name1) @AT@ 11336 @LENGTH@ 15
------------------INS SimpleName@@name1 @TO@ SimpleName@@MethodName:contains:[name1] @AT@ 11345 @LENGTH@ 5


UPD IfStatement@@if (standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(serverConfigurationDir);} @TO@ if (standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory())) {  throw MESSAGES.configDirectoryDoesNotExist(serverConfigurationDir);} @AT@ 15135 @LENGTH@ 184
---INS InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @TO@ IfStatement@@if (standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(serverConfigurationDir);} @AT@ 15139 @LENGTH@ 89
------INS SimpleName@@standalone @TO@ InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15139 @LENGTH@ 10
------INS Operator@@&& @TO@ InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15149 @LENGTH@ 2
------INS ParenthesizedExpression@@(!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @TO@ InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15153 @LENGTH@ 75
---------MOV InfixExpression@@standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory() @TO@ ParenthesizedExpression@@(!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15139 @LENGTH@ 87
------------DEL SimpleName@@standalone @AT@ 15139 @LENGTH@ 10
------------UPD Operator@@&& @TO@ || @AT@ 15149 @LENGTH@ 2
------------MOV Operator@@&& @TO@ InfixExpression@@standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory() @AT@ 15149 @LENGTH@ 2
---UPD InfixExpression@@standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory() @TO@ !serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory() @AT@ 15139 @LENGTH@ 87


UPD TypeDeclaration@@[public]CmpAllowedMethodsInformation, SessionBeanAllowedMethodsInformation @TO@ [public]CmpAllowedMethodsInformation, AllowedMethodsInformation @AT@ 367 @LENGTH@ 554
---UPD SimpleType@@SessionBeanAllowedMethodsInformation @TO@ AllowedMethodsInformation @AT@ 417 @LENGTH@ 36


UPD Block@@ThenBody:{  String data=zooKeeper.getStringData(path);  List<String> parts=new ArrayList<String>(Arrays.asList(data.split(" ")));  boolean changed=false;  for (Iterator<String> it=parts.iterator(); it.hasNext(); ) {    String v=it.next();    if (v.matches(value)) {      it.remove();      changed=true;    }  }  if (changed) {    data="";    for (    String part : parts) {      if (data.length() > 0) {        data+=" ";      }      data+=part;    }    zooKeeper.setData(path,data);  }} @TO@ ThenBody:{  List<String> parts=new LinkedList<String>();  String data=zooKeeper.getStringData(path);  if (data != null) {    parts=new ArrayList<String>(Arrays.asList(data.split(" ")));  }  boolean changed=false;  for (Iterator<String> it=parts.iterator(); it.hasNext(); ) {    String v=it.next();    if (v.matches(value)) {      it.remove();      changed=true;    }  }  if (changed) {    data="";    for (    String part : parts) {      if (data.length() > 0) {        data+=" ";      }      data+=part;    }    zooKeeper.setData(path,data);  }} @AT@ 2981 @LENGTH@ 763
---MOV VariableDeclarationStatement@@String data=zooKeeper.getStringData(path); @TO@ Block@@ThenBody:{  String data=zooKeeper.getStringData(path);  List<String> parts=new ArrayList<String>(Arrays.asList(data.split(" ")));  boolean changed=false;  for (Iterator<String> it=parts.iterator(); it.hasNext(); ) {    String v=it.next();    if (v.matches(value)) {      it.remove();      changed=true;    }  }  if (changed) {    data="";    for (    String part : parts) {      if (data.length() > 0) {        data+=" ";      }      data+=part;    }    zooKeeper.setData(path,data);  }} @AT@ 2995 @LENGTH@ 46
---UPD VariableDeclarationStatement@@List<String> parts=new ArrayList<String>(Arrays.asList(data.split(" "))); @TO@ List<String> parts=new LinkedList<String>(); @AT@ 3054 @LENGTH@ 75
------UPD VariableDeclarationFragment@@parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @TO@ parts=new LinkedList<String>() @AT@ 3067 @LENGTH@ 61
---------INS ClassInstanceCreation@@LinkedList<String>[] @TO@ VariableDeclarationFragment@@parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @AT@ 3045 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 3045 @LENGTH@ 3
------------INS ParameterizedType@@LinkedList<String> @TO@ ClassInstanceCreation@@LinkedList<String>[] @AT@ 3049 @LENGTH@ 18
---------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<String> @AT@ 3049 @LENGTH@ 10
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedList<String> @AT@ 3060 @LENGTH@ 6
---INS IfStatement@@if (data != null) {  parts=new ArrayList<String>(Arrays.asList(data.split(" ")));} @TO@ Block@@ThenBody:{  String data=zooKeeper.getStringData(path);  List<String> parts=new ArrayList<String>(Arrays.asList(data.split(" ")));  boolean changed=false;  for (Iterator<String> it=parts.iterator(); it.hasNext(); ) {    String v=it.next();    if (v.matches(value)) {      it.remove();      changed=true;    }  }  if (changed) {    data="";    for (    String part : parts) {      if (data.length() > 0) {        data+=" ";      }      data+=part;    }    zooKeeper.setData(path,data);  }} @AT@ 3142 @LENGTH@ 112
------INS InfixExpression@@data != null @TO@ IfStatement@@if (data != null) {  parts=new ArrayList<String>(Arrays.asList(data.split(" ")));} @AT@ 3146 @LENGTH@ 12
---------INS SimpleName@@data @TO@ InfixExpression@@data != null @AT@ 3146 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@data != null @AT@ 3150 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@data != null @AT@ 3154 @LENGTH@ 4
------INS Block@@ThenBody:{  parts=new ArrayList<String>(Arrays.asList(data.split(" ")));} @TO@ IfStatement@@if (data != null) {  parts=new ArrayList<String>(Arrays.asList(data.split(" ")));} @AT@ 3160 @LENGTH@ 94
---------INS ExpressionStatement@@Assignment:parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @TO@ Block@@ThenBody:{  parts=new ArrayList<String>(Arrays.asList(data.split(" ")));} @AT@ 3178 @LENGTH@ 62
------------INS Assignment@@parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @TO@ ExpressionStatement@@Assignment:parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @AT@ 3178 @LENGTH@ 61
---------------MOV ClassInstanceCreation@@ArrayList<String>[Arrays.asList(data.split(" "))] @TO@ Assignment@@parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @AT@ 3075 @LENGTH@ 53
---------------INS SimpleName@@parts @TO@ Assignment@@parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @AT@ 3178 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@parts=new ArrayList<String>(Arrays.asList(data.split(" "))) @AT@ 3183 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:m.invoke(connector.getProtocolHandler(),ssl.get(Constants.CERTIFICATE_FILE)) @TO@ MethodInvocation:m.invoke(connector.getProtocolHandler(),ssl.get(Constants.CERTIFICATE_FILE).asString()) @AT@ 9450 @LENGTH@ 78
---UPD MethodInvocation@@m.invoke(connector.getProtocolHandler(),ssl.get(Constants.CERTIFICATE_FILE)) @TO@ m.invoke(connector.getProtocolHandler(),ssl.get(Constants.CERTIFICATE_FILE).asString()) @AT@ 9450 @LENGTH@ 77
------UPD SimpleName@@MethodName:invoke:[connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_FILE)] @TO@ MethodName:invoke:[connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_FILE).asString()] @AT@ 9452 @LENGTH@ 75
---------UPD MethodInvocation@@ssl.get(Constants.CERTIFICATE_FILE) @TO@ ssl.get(Constants.CERTIFICATE_FILE).asString() @AT@ 9491 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:get:[Constants.CERTIFICATE_FILE] @TO@ MethodInvocation@@ssl.get(Constants.CERTIFICATE_FILE) @AT@ 9491 @LENGTH@ 35
---------------INS QualifiedName@@Constants.CERTIFICATE_FILE @TO@ MethodInvocation@@MethodName:get:[Constants.CERTIFICATE_FILE] @AT@ 9499 @LENGTH@ 26
------------------MOV SimpleName@@Constants @TO@ QualifiedName@@Constants.CERTIFICATE_FILE @AT@ 9499 @LENGTH@ 9
------------------MOV SimpleName@@CERTIFICATE_FILE @TO@ QualifiedName@@Constants.CERTIFICATE_FILE @AT@ 9509 @LENGTH@ 16
------------DEL SimpleName@@MethodName:get:[Constants.CERTIFICATE_FILE] @AT@ 9495 @LENGTH@ 31
---------------DEL QualifiedName@@Constants.CERTIFICATE_FILE @AT@ 9499 @LENGTH@ 26
------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@ssl.get(Constants.CERTIFICATE_FILE) @AT@ 9527 @LENGTH@ 10


UPD IfStatement@@if (result.size() > 1 || (result.size() == 1 && result.values().iterator().next().size() > 1)) {  logMultipleValidInterfaces(result);  result=Collections.emptyMap();} @TO@ if (pruned.size() > 1 || (pruned.size() == 1 && pruned.values().iterator().next().size() > 1)) {  logMultipleValidInterfaces(pruned);  result=Collections.emptyMap();} @AT@ 3385 @LENGTH@ 199
---UPD InfixExpression@@result.size() > 1 || (result.size() == 1 && result.values().iterator().next().size() > 1) @TO@ pruned.size() > 1 || (pruned.size() == 1 && pruned.values().iterator().next().size() > 1) @AT@ 3389 @LENGTH@ 89
------UPD ParenthesizedExpression@@(result.size() == 1 && result.values().iterator().next().size() > 1) @TO@ (pruned.size() == 1 && pruned.values().iterator().next().size() > 1) @AT@ 3410 @LENGTH@ 68
---------UPD InfixExpression@@result.size() == 1 && result.values().iterator().next().size() > 1 @TO@ pruned.size() == 1 && pruned.values().iterator().next().size() > 1 @AT@ 3411 @LENGTH@ 66
------------UPD InfixExpression@@result.size() == 1 @TO@ pruned.size() == 1 @AT@ 3411 @LENGTH@ 18
---------------UPD MethodInvocation@@result.size() @TO@ pruned.size() @AT@ 3411 @LENGTH@ 13
------------------UPD SimpleName@@Name:result @TO@ Name:pruned @AT@ 3411 @LENGTH@ 6
------------UPD InfixExpression@@result.values().iterator().next().size() > 1 @TO@ pruned.values().iterator().next().size() > 1 @AT@ 3433 @LENGTH@ 44
---------------UPD MethodInvocation@@result.values().iterator().next().size() @TO@ pruned.values().iterator().next().size() @AT@ 3433 @LENGTH@ 40
------------------UPD SimpleName@@Name:result @TO@ Name:pruned @AT@ 3433 @LENGTH@ 6
------INS InfixExpression@@pruned.size() > 1 @TO@ InfixExpression@@result.size() > 1 || (result.size() == 1 && result.values().iterator().next().size() > 1) @AT@ 3531 @LENGTH@ 17
---------INS MethodInvocation@@pruned.size() @TO@ InfixExpression@@pruned.size() > 1 @AT@ 3531 @LENGTH@ 13
------------INS SimpleName@@Name:pruned @TO@ MethodInvocation@@pruned.size() @AT@ 3531 @LENGTH@ 6
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@pruned.size() @AT@ 3538 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@pruned.size() > 1 @AT@ 3544 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@pruned.size() > 1 @AT@ 3547 @LENGTH@ 1
---UPD Block@@ThenBody:{  logMultipleValidInterfaces(result);  result=Collections.emptyMap();} @TO@ ThenBody:{  logMultipleValidInterfaces(pruned);  result=Collections.emptyMap();} @AT@ 3480 @LENGTH@ 104
------UPD ExpressionStatement@@MethodInvocation:logMultipleValidInterfaces(result) @TO@ MethodInvocation:logMultipleValidInterfaces(pruned) @AT@ 3494 @LENGTH@ 35
---------UPD MethodInvocation@@logMultipleValidInterfaces(result) @TO@ logMultipleValidInterfaces(pruned) @AT@ 3494 @LENGTH@ 34
------------UPD SimpleName@@MethodName:logMultipleValidInterfaces:[result] @TO@ MethodName:logMultipleValidInterfaces:[pruned] @AT@ 3494 @LENGTH@ 34
---------------UPD SimpleName@@result @TO@ pruned @AT@ 3521 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:printerOperations=new PrinterOperations(printService,assignPrintJob(printService),assignDocFlavor(),assignPrintAttributes()) @TO@ Assignment:printerOperations=new PrinterOperations(printService,assignDocFlavor(),assignPrintAttributes()) @AT@ 5723 @LENGTH@ 130
---UPD Assignment@@printerOperations=new PrinterOperations(printService,assignPrintJob(printService),assignDocFlavor(),assignPrintAttributes()) @TO@ printerOperations=new PrinterOperations(printService,assignDocFlavor(),assignPrintAttributes()) @AT@ 5723 @LENGTH@ 129
------UPD ClassInstanceCreation@@PrinterOperations[printService, assignPrintJob(printService), assignDocFlavor(), assignPrintAttributes()] @TO@ PrinterOperations[printService, assignDocFlavor(), assignPrintAttributes()] @AT@ 5743 @LENGTH@ 109
---------DEL MethodInvocation@@assignPrintJob(printService) @AT@ 5779 @LENGTH@ 28
------------DEL SimpleName@@MethodName:assignPrintJob:[printService] @AT@ 5779 @LENGTH@ 28
---------------DEL SimpleName@@printService @AT@ 5794 @LENGTH@ 12


UPD Block@@ElseBody:if (webMetaData.is25()) validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput); else if (webMetaData.is30()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd",xmlInput); else validator.validate("-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN",xmlInput); @TO@ ElseBody:if (webMetaData.is25()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput); else if (webMetaData.is30()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd",xmlInput); else validator.validate("-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN",xmlInput); @AT@ 4687 @LENGTH@ 441
---UPD IfStatement@@if (webMetaData.is25()) validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput); else if (webMetaData.is30()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd",xmlInput); else validator.validate("-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN",xmlInput); @TO@ if (webMetaData.is25()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput); else if (webMetaData.is30()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd",xmlInput); else validator.validate("-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN",xmlInput); @AT@ 4687 @LENGTH@ 441
------UPD Block@@ThenBody:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput); @TO@ ThenBody:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput); @AT@ 4739 @LENGTH@ 80
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---UPD IfStatement@@if (webMetaData.is25()) validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput); else if (webMetaData.is30()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd",xmlInput); else validator.validate("-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN",xmlInput); @TO@ if (webMetaData.is25()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput); else if (webMetaData.is30()) validator.validate("http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd",xmlInput); else validator.validate("-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN",xmlInput); @AT@ 4687 @LENGTH@ 441
------UPD Block@@ThenBody:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput); @TO@ ThenBody:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput); @AT@ 4739 @LENGTH@ 80
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49
---------UPD ExpressionStatement@@MethodInvocation:validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ MethodInvocation:validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 80
------------UPD MethodInvocation@@validator.validate("http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd",xmlInput) @TO@ validator.validate("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd",xmlInput) @AT@ 4739 @LENGTH@ 79
---------------UPD SimpleName@@MethodName:validate:["http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd", xmlInput] @TO@ MethodName:validate:["http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd", xmlInput] @AT@ 4749 @LENGTH@ 69
------------------UPD StringLiteral@@"http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd" @TO@ "http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" @AT@ 4758 @LENGTH@ 49


INS IfStatement@@if (!"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext"))) {  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @TO@ MethodDeclaration@@protected, void, MethodName:assertValidContext, CamelContext context,  @AT@ 7693 @LENGTH@ 460
---INS PrefixExpression@@!"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext")) @TO@ IfStatement@@if (!"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext"))) {  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @AT@ 7697 @LENGTH@ 72
------INS Operator@@! @TO@ PrefixExpression@@!"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext")) @AT@ 7697 @LENGTH@ 1
------INS MethodInvocation@@"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext")) @TO@ PrefixExpression@@!"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext")) @AT@ 7698 @LENGTH@ 71
---------INS StringLiteral@@"true" @TO@ MethodInvocation@@"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext")) @AT@ 7698 @LENGTH@ 6
---------INS SimpleName@@MethodName:equalsIgnoreCase:[System.getProperty("skipStartingCamelContext")] @TO@ MethodInvocation@@"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext")) @AT@ 7705 @LENGTH@ 64
------------INS MethodInvocation@@System.getProperty("skipStartingCamelContext") @TO@ SimpleName@@MethodName:equalsIgnoreCase:[System.getProperty("skipStartingCamelContext")] @AT@ 7722 @LENGTH@ 46
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("skipStartingCamelContext") @AT@ 7722 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getProperty:["skipStartingCamelContext"] @TO@ MethodInvocation@@System.getProperty("skipStartingCamelContext") @AT@ 7729 @LENGTH@ 39
------------------INS StringLiteral@@"skipStartingCamelContext" @TO@ SimpleName@@MethodName:getProperty:["skipStartingCamelContext"] @AT@ 7741 @LENGTH@ 26
---INS Block@@ThenBody:{  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @TO@ IfStatement@@if (!"true".equalsIgnoreCase(System.getProperty("skipStartingCamelContext"))) {  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @AT@ 7771 @LENGTH@ 382
------MOV VariableDeclarationStatement@@List<Route> routes=context.getRoutes(); @TO@ Block@@ThenBody:{  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @AT@ 7694 @LENGTH@ 41
------MOV VariableDeclarationStatement@@int routeCount=getExpectedRouteCount(); @TO@ Block@@ThenBody:{  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @AT@ 7744 @LENGTH@ 41
------MOV IfStatement@@if (routeCount > 0) {  assertNotNull("Should have some routes defined",routes);  assertTrue("Should have at least one route",routes.size() >= routeCount);} @TO@ Block@@ThenBody:{  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @AT@ 7794 @LENGTH@ 188
------MOV ExpressionStatement@@MethodInvocation:log.debug("Camel Routes: " + routes) @TO@ Block@@ThenBody:{  List<Route> routes=context.getRoutes();  int routeCount=getExpectedRouteCount();  if (routeCount > 0) {    assertNotNull("Should have some routes defined",routes);    assertTrue("Should have at least one route",routes.size() >= routeCount);  }  log.debug("Camel Routes: " + routes);} @AT@ 7991 @LENGTH@ 37


UPD Block@@ThenBody:{  key=key.substring(1,key.length() - 1);  matcher.appendReplacement(buffer,key + '=' + replacement);} @TO@ ThenBody:{  key=key.substring(2,key.length() - 1);  matcher.appendReplacement(buffer,separator + key + '='+ replacement);  separator="&";} @AT@ 988 @LENGTH@ 114
---UPD ExpressionStatement@@Assignment:key=key.substring(1,key.length() - 1) @TO@ Assignment:key=key.substring(2,key.length() - 1) @AT@ 994 @LENGTH@ 39
------UPD Assignment@@key=key.substring(1,key.length() - 1) @TO@ key=key.substring(2,key.length() - 1) @AT@ 994 @LENGTH@ 38
---------UPD MethodInvocation@@key.substring(1,key.length() - 1) @TO@ key.substring(2,key.length() - 1) @AT@ 1000 @LENGTH@ 32
------------UPD SimpleName@@MethodName:substring:[1, key.length() - 1] @TO@ MethodName:substring:[2, key.length() - 1] @AT@ 1004 @LENGTH@ 28
---------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 1014 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:matcher.appendReplacement(buffer,key + '=' + replacement) @TO@ MethodInvocation:matcher.appendReplacement(buffer,separator + key + '='+ replacement) @AT@ 1038 @LENGTH@ 59
------UPD MethodInvocation@@matcher.appendReplacement(buffer,key + '=' + replacement) @TO@ matcher.appendReplacement(buffer,separator + key + '='+ replacement) @AT@ 1038 @LENGTH@ 58
---------UPD SimpleName@@MethodName:appendReplacement:[buffer, key + '=' + replacement] @TO@ MethodName:appendReplacement:[buffer, separator + key + '='+ replacement] @AT@ 1046 @LENGTH@ 50
------------UPD InfixExpression@@key + '=' + replacement @TO@ separator + key + '='+ replacement @AT@ 1072 @LENGTH@ 23
---------------UPD SimpleName@@key @TO@ separator @AT@ 1072 @LENGTH@ 3
---------------INS SimpleName@@key @TO@ InfixExpression@@key + '=' + replacement @AT@ 1109 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:separator="&" @TO@ Block@@ThenBody:{  key=key.substring(1,key.length() - 1);  matcher.appendReplacement(buffer,key + '=' + replacement);} @AT@ 1139 @LENGTH@ 16
------INS Assignment@@separator="&" @TO@ ExpressionStatement@@Assignment:separator="&" @AT@ 1139 @LENGTH@ 15
---------INS SimpleName@@separator @TO@ Assignment@@separator="&" @AT@ 1139 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@separator="&" @AT@ 1148 @LENGTH@ 1
---------INS StringLiteral@@"&" @TO@ Assignment@@separator="&" @AT@ 1151 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2778 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2778 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2786 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2799 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2799 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2799 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2816 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2832 @LENGTH@ 21


INS ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @TO@ MethodDeclaration@@public, void, MethodName:startClientConnetion, IOException, URISyntaxException,  @AT@ 4580 @LENGTH@ 55
---INS MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @TO@ ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4580 @LENGTH@ 54
------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4580 @LENGTH@ 13
------INS SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4594 @LENGTH@ 40
---------INS MethodInvocation@@channelServer.getEndpoint() @TO@ SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @AT@ 4606 @LENGTH@ 27
------------INS SimpleName@@Name:channelServer @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4606 @LENGTH@ 13
------------INS SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4620 @LENGTH@ 13


UPD MethodDeclaration@@private, voidMethodName:ModClusterRemoveSSL,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1453 @LENGTH@ 48
---UPD Modifier@@private @TO@ protected @AT@ 1453 @LENGTH@ 7
---UPD SimpleName@@MethodName:ModClusterRemoveSSL @TO@ MethodName:performRuntime @AT@ 1461 @LENGTH@ 19
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, voidMethodName:ModClusterRemoveSSL,  @AT@ 1583 @LENGTH@ 4
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@private, voidMethodName:ModClusterRemoveSSL,  @AT@ 1603 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1603 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1620 @LENGTH@ 7
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@private, voidMethodName:ModClusterRemoveSSL,  @AT@ 1629 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1629 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1639 @LENGTH@ 9
---INS SingleVariableDeclaration@@ModelNode model @TO@ MethodDeclaration@@private, voidMethodName:ModClusterRemoveSSL,  @AT@ 1650 @LENGTH@ 15
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 1650 @LENGTH@ 9
------INS SimpleName@@model @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 1660 @LENGTH@ 5
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@private, voidMethodName:ModClusterRemoveSSL,  @AT@ 1686 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:context.reloadRequired() @TO@ MethodDeclaration@@private, voidMethodName:ModClusterRemoveSSL,  @AT@ 1774 @LENGTH@ 25
------INS MethodInvocation@@context.reloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.reloadRequired() @AT@ 1774 @LENGTH@ 24
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.reloadRequired() @AT@ 1774 @LENGTH@ 7
---------INS SimpleName@@MethodName:reloadRequired:[] @TO@ MethodInvocation@@context.reloadRequired() @AT@ 1782 @LENGTH@ 16


UPD EnhancedForStatement@@for (ModelNode stack : stacks) {  String name=stack.require(NAME).asString();  List<ModelNode> nodes=stack.get(LOGIN_MODULES).asList();  final LoginModuleStackHolder holder=new LoginModuleStackHolder(name,null);  holders.put(name,holder);  authenticationInfo.add(holder);  for (  ModelNode login : nodes) {    processLoginModules(login,authenticationInfo,new LoginModuleContainer(){      public void addAppConfigurationEntry(      AppConfigurationEntry entry){        holder.addAppConfigurationEntry(entry);      }    });  }} @TO@ for (Property stack : stacks) {  String name=stack.getName();  List<ModelNode> nodes=stack.getValue().get(LOGIN_MODULES).asList();  final LoginModuleStackHolder holder=new LoginModuleStackHolder(name,null);  holders.put(name,holder);  authenticationInfo.add(holder);  for (  ModelNode login : nodes) {    processLoginModules(login,authenticationInfo,new LoginModuleContainer(){      public void addAppConfigurationEntry(      AppConfigurationEntry entry){        holder.addAppConfigurationEntry(entry);      }    });  }} @AT@ 15984 @LENGTH@ 689
---UPD SingleVariableDeclaration@@ModelNode stack @TO@ Property stack @AT@ 15989 @LENGTH@ 15
------UPD SimpleType@@ModelNode @TO@ Property @AT@ 15989 @LENGTH@ 9
---UPD VariableDeclarationStatement@@String name=stack.require(NAME).asString(); @TO@ String name=stack.getName(); @AT@ 16029 @LENGTH@ 45
------UPD VariableDeclarationFragment@@name=stack.require(NAME).asString() @TO@ name=stack.getName() @AT@ 16036 @LENGTH@ 37
---------UPD MethodInvocation@@stack.require(NAME).asString() @TO@ stack.getName() @AT@ 16043 @LENGTH@ 30
------------DEL MethodInvocation@@MethodName:require:[NAME] @AT@ 16043 @LENGTH@ 19
---------------DEL SimpleName@@NAME @AT@ 16057 @LENGTH@ 4
------------UPD SimpleName@@MethodName:asString:[] @TO@ MethodName:getName:[] @AT@ 16063 @LENGTH@ 10
---UPD VariableDeclarationStatement@@List<ModelNode> nodes=stack.get(LOGIN_MODULES).asList(); @TO@ List<ModelNode> nodes=stack.getValue().get(LOGIN_MODULES).asList(); @AT@ 16087 @LENGTH@ 58
------UPD VariableDeclarationFragment@@nodes=stack.get(LOGIN_MODULES).asList() @TO@ nodes=stack.getValue().get(LOGIN_MODULES).asList() @AT@ 16103 @LENGTH@ 41
---------UPD MethodInvocation@@stack.get(LOGIN_MODULES).asList() @TO@ stack.getValue().get(LOGIN_MODULES).asList() @AT@ 16111 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@stack.get(LOGIN_MODULES).asList() @AT@ 16101 @LENGTH@ 16


UPD TypeDeclaration@@[@RunWith(Suite.class), @Suite.SuiteClasses({CoreResourceManagementTestCase.class,ManagementReadsTestCase.class,DeploymentManagementTestCase.class,ServerManagementTestCase.class}), public]DomainTestSuite,  @TO@ [@RunWith(Suite.class), @Suite.SuiteClasses({CoreResourceManagementTestCase.class,ManagementReadsTestCase.class,DeploymentManagementTestCase.class,ServerManagementTestCase.class,ManagementAccessTestCase.class}), public]DomainTestSuite,  @AT@ 1439 @LENGTH@ 1673
---UPD SingleMemberAnnotation@@@Suite.SuiteClasses({CoreResourceManagementTestCase.class,ManagementReadsTestCase.class,DeploymentManagementTestCase.class,ServerManagementTestCase.class}) @TO@ @Suite.SuiteClasses({CoreResourceManagementTestCase.class,ManagementReadsTestCase.class,DeploymentManagementTestCase.class,ServerManagementTestCase.class,ManagementAccessTestCase.class}) @AT@ 1461 @LENGTH@ 193


INS IfStatement@@if (statusCode == HttpStatus.BAD_REQUEST) {  if (errorText.contains("Rate limit exceeded.")) {    throw new RateLimitExceededException();  }} else if (statusCode == HttpStatus.UNAUTHORIZED) {  if (errorText == null) {    throw new NotAuthorizedException(response.getStatusText());  } else   if (errorText.equals("Could not authenticate you.")) {    throw new MissingAuthorizationException();  } else   if (errorText.equals("Could not authenticate with OAuth.")) {    throw new RevokedAuthorizationException();  } else   if (errorText.equals("Invalid / expired Token")) {    throw new InvalidAuthorizationException(errorText);  } else {    throw new NotAuthorizedException(errorText);  }} else if (statusCode == HttpStatus.FORBIDDEN) {  if (errorText.equals(DUPLICATE_STATUS_TEXT) || errorText.contains("You already said that")) {    throw new DuplicateStatusException(errorText);  } else   if (errorText.equals(STATUS_TOO_LONG_TEXT) || errorText.contains(MESSAGE_TOO_LONG_TEXT)) {    throw new MessageTooLongException(errorText);  } else   if (errorText.equals(INVALID_MESSAGE_RECIPIENT_TEXT)) {    throw new InvalidMessageRecipientException(errorText);  } else   if (errorText.equals(DAILY_RATE_LIMIT_TEXT)) {    throw new RateLimitExceededException();  } else {    throw new OperationNotPermittedException(errorText);  }} else if (statusCode == HttpStatus.NOT_FOUND) {  throw new ResourceNotFoundException(errorText);} else if (statusCode == HttpStatus.valueOf(ENHANCE_YOUR_CALM)) {  throw new RateLimitExceededException();} @TO@ MethodDeclaration@@private, void, MethodName:handleClientErrors, ClientHttpResponse response, IOException,  @AT@ 3650 @LENGTH@ 1641
---INS InfixExpression@@statusCode == HttpStatus.BAD_REQUEST @TO@ IfStatement@@if (statusCode == HttpStatus.BAD_REQUEST) {  if (errorText.contains("Rate limit exceeded.")) {    throw new RateLimitExceededException();  }} else if (statusCode == HttpStatus.UNAUTHORIZED) {  if (errorText == null) {    throw new NotAuthorizedException(response.getStatusText());  } else   if (errorText.equals("Could not authenticate you.")) {    throw new MissingAuthorizationException();  } else   if (errorText.equals("Could not authenticate with OAuth.")) {    throw new RevokedAuthorizationException();  } else   if (errorText.equals("Invalid / expired Token")) {    throw new InvalidAuthorizationException(errorText);  } else {    throw new NotAuthorizedException(errorText);  }} else if (statusCode == HttpStatus.FORBIDDEN) {  if (errorText.equals(DUPLICATE_STATUS_TEXT) || errorText.contains("You already said that")) {    throw new DuplicateStatusException(errorText);  } else   if (errorText.equals(STATUS_TOO_LONG_TEXT) || errorText.contains(MESSAGE_TOO_LONG_TEXT)) {    throw new MessageTooLongException(errorText);  } else   if (errorText.equals(INVALID_MESSAGE_RECIPIENT_TEXT)) {    throw new InvalidMessageRecipientException(errorText);  } else   if (errorText.equals(DAILY_RATE_LIMIT_TEXT)) {    throw new RateLimitExceededException();  } else {    throw new OperationNotPermittedException(errorText);  }} else if (statusCode == HttpStatus.NOT_FOUND) {  throw new ResourceNotFoundException(errorText);} else if (statusCode == HttpStatus.valueOf(ENHANCE_YOUR_CALM)) {  throw new RateLimitExceededException();} @AT@ 3654 @LENGTH@ 36
------INS SimpleName@@statusCode @TO@ InfixExpression@@statusCode == HttpStatus.BAD_REQUEST @AT@ 3654 @LENGTH@ 10
------INS Operator@@== @TO@ InfixExpression@@statusCode == HttpStatus.BAD_REQUEST @AT@ 3664 @LENGTH@ 2
------INS QualifiedName@@HttpStatus.BAD_REQUEST @TO@ InfixExpression@@statusCode == HttpStatus.BAD_REQUEST @AT@ 3668 @LENGTH@ 22
---------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 3668 @LENGTH@ 10
---------INS SimpleName@@BAD_REQUEST @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 3679 @LENGTH@ 11
---INS Block@@ThenBody:{  if (errorText.contains("Rate limit exceeded.")) {    throw new RateLimitExceededException();  }} @TO@ IfStatement@@if (statusCode == HttpStatus.BAD_REQUEST) {  if (errorText.contains("Rate limit exceeded.")) {    throw new RateLimitExceededException();  }} else if (statusCode == HttpStatus.UNAUTHORIZED) {  if (errorText == null) {    throw new NotAuthorizedException(response.getStatusText());  } else   if (errorText.equals("Could not authenticate you.")) {    throw new MissingAuthorizationException();  } else   if (errorText.equals("Could not authenticate with OAuth.")) {    throw new RevokedAuthorizationException();  } else   if (errorText.equals("Invalid / expired Token")) {    throw new InvalidAuthorizationException(errorText);  } else {    throw new NotAuthorizedException(errorText);  }} else if (statusCode == HttpStatus.FORBIDDEN) {  if (errorText.equals(DUPLICATE_STATUS_TEXT) || errorText.contains("You already said that")) {    throw new DuplicateStatusException(errorText);  } else   if (errorText.equals(STATUS_TOO_LONG_TEXT) || errorText.contains(MESSAGE_TOO_LONG_TEXT)) {    throw new MessageTooLongException(errorText);  } else   if (errorText.equals(INVALID_MESSAGE_RECIPIENT_TEXT)) {    throw new InvalidMessageRecipientException(errorText);  } else   if (errorText.equals(DAILY_RATE_LIMIT_TEXT)) {    throw new RateLimitExceededException();  } else {    throw new OperationNotPermittedException(errorText);  }} else if (statusCode == HttpStatus.NOT_FOUND) {  throw new ResourceNotFoundException(errorText);} else if (statusCode == HttpStatus.valueOf(ENHANCE_YOUR_CALM)) {  throw new RateLimitExceededException();} @AT@ 3692 @LENGTH@ 107
------INS IfStatement@@if (errorText.contains("Rate limit exceeded.")) {  throw new RateLimitExceededException();} @TO@ Block@@ThenBody:{  if (errorText.contains("Rate limit exceeded.")) {    throw new RateLimitExceededException();  }} @AT@ 3697 @LENGTH@ 98
---------INS MethodInvocation@@errorText.contains("Rate limit exceeded.") @TO@ IfStatement@@if (errorText.contains("Rate limit exceeded.")) {  throw new RateLimitExceededException();} @AT@ 3701 @LENGTH@ 42
------------INS SimpleName@@Name:errorText @TO@ MethodInvocation@@errorText.contains("Rate limit exceeded.") @AT@ 3701 @LENGTH@ 9
------------INS SimpleName@@MethodName:contains:["Rate limit exceeded."] @TO@ MethodInvocation@@errorText.contains("Rate limit exceeded.") @AT@ 3711 @LENGTH@ 32
---------------INS StringLiteral@@"Rate limit exceeded." @TO@ SimpleName@@MethodName:contains:["Rate limit exceeded."] @AT@ 3720 @LENGTH@ 22
---------INS Block@@ThenBody:{  throw new RateLimitExceededException();} @TO@ IfStatement@@if (errorText.contains("Rate limit exceeded.")) {  throw new RateLimitExceededException();} @AT@ 3745 @LENGTH@ 50
------------INS ThrowStatement@@ClassInstanceCreation:new RateLimitExceededException() @TO@ Block@@ThenBody:{  throw new RateLimitExceededException();} @AT@ 3751 @LENGTH@ 39
---------------INS ClassInstanceCreation@@RateLimitExceededException[] @TO@ ThrowStatement@@ClassInstanceCreation:new RateLimitExceededException() @AT@ 3757 @LENGTH@ 32
------------------INS New@@new @TO@ ClassInstanceCreation@@RateLimitExceededException[] @AT@ 3757 @LENGTH@ 3
------------------INS SimpleType@@RateLimitExceededException @TO@ ClassInstanceCreation@@RateLimitExceededException[] @AT@ 3761 @LENGTH@ 26
---INS Block@@ElseBody:if (statusCode == HttpStatus.UNAUTHORIZED) {  if (errorText == null) {    throw new NotAuthorizedException(response.getStatusText());  } else   if (errorText.equals("Could not authenticate you.")) {    throw new MissingAuthorizationException();  } else   if (errorText.equals("Could not authenticate with OAuth.")) {    throw new RevokedAuthorizationException();  } else   if (errorText.equals("Invalid / expired Token")) {    throw new InvalidAuthorizationException(errorText);  } else {    throw new NotAuthorizedException(errorText);  }} else if (statusCode == HttpStatus.FORBIDDEN) {  if (errorText.equals(DUPLICATE_STATUS_TEXT) || errorText.contains("You already said that")) {    throw new DuplicateStatusException(errorText);  } else   if (errorText.equals(STATUS_TOO_LONG_TEXT) || errorText.contains(MESSAGE_TOO_LONG_TEXT)) {    throw new MessageTooLongException(errorText);  } else   if (errorText.equals(INVALID_MESSAGE_RECIPIENT_TEXT)) {    throw new InvalidMessageRecipientException(errorText);  } else   if (errorText.equals(DAILY_RATE_LIMIT_TEXT)) {    throw new RateLimitExceededException();  } else {    throw new OperationNotPermittedException(errorText);  }} else if (statusCode == HttpStatus.NOT_FOUND) {  throw new ResourceNotFoundException(errorText);} else if (statusCode == HttpStatus.valueOf(ENHANCE_YOUR_CALM)) {  throw new RateLimitExceededException();} @TO@ IfStatement@@if (statusCode == HttpStatus.BAD_REQUEST) {  if (errorText.contains("Rate limit exceeded.")) {    throw new RateLimitExceededException();  }} else if (statusCode == HttpStatus.UNAUTHORIZED) {  if (errorText == null) {    throw new NotAuthorizedException(response.getStatusText());  } else   if (errorText.equals("Could not authenticate you.")) {    throw new MissingAuthorizationException();  } else   if (errorText.equals("Could not authenticate with OAuth.")) {    throw new RevokedAuthorizationException();  } else   if (errorText.equals("Invalid / expired Token")) {    throw new InvalidAuthorizationException(errorText);  } else {    throw new NotAuthorizedException(errorText);  }} else if (statusCode == HttpStatus.FORBIDDEN) {  if (errorText.equals(DUPLICATE_STATUS_TEXT) || errorText.contains("You already said that")) {    throw new DuplicateStatusException(errorText);  } else   if (errorText.equals(STATUS_TOO_LONG_TEXT) || errorText.contains(MESSAGE_TOO_LONG_TEXT)) {    throw new MessageTooLongException(errorText);  } else   if (errorText.equals(INVALID_MESSAGE_RECIPIENT_TEXT)) {    throw new InvalidMessageRecipientException(errorText);  } else   if (errorText.equals(DAILY_RATE_LIMIT_TEXT)) {    throw new RateLimitExceededException();  } else {    throw new OperationNotPermittedException(errorText);  }} else if (statusCode == HttpStatus.NOT_FOUND) {  throw new ResourceNotFoundException(errorText);} else if (statusCode == HttpStatus.valueOf(ENHANCE_YOUR_CALM)) {  throw new RateLimitExceededException();} @AT@ 3805 @LENGTH@ 1486
------MOV IfStatement@@if (statusCode == HttpStatus.UNAUTHORIZED) {  if (errorText == null) {    throw new NotAuthorizedException(response.getStatusText());  } else   if (errorText.equals("Could not authenticate you.")) {    throw new MissingAuthorizationException();  } else   if (errorText.equals("Could not authenticate with OAuth.")) {    throw new RevokedAuthorizationException();  } else   if (errorText.equals("Invalid / expired Token")) {    throw new InvalidAuthorizationException(errorText);  } else {    throw new NotAuthorizedException(errorText);  }} else if (statusCode == HttpStatus.FORBIDDEN) {  if (errorText.equals(DUPLICATE_STATUS_TEXT) || errorText.contains("You already said that")) {    throw new DuplicateStatusException(errorText);  } else   if (errorText.equals(STATUS_TOO_LONG_TEXT) || errorText.contains(MESSAGE_TOO_LONG_TEXT)) {    throw new MessageTooLongException(errorText);  } else   if (errorText.equals(INVALID_MESSAGE_RECIPIENT_TEXT)) {    throw new InvalidMessageRecipientException(errorText);  } else   if (errorText.equals(DAILY_RATE_LIMIT_TEXT)) {    throw new RateLimitExceededException();  } else {    throw new OperationNotPermittedException(errorText);  }} else if (statusCode == HttpStatus.NOT_FOUND) {  throw new ResourceNotFoundException(errorText);} else if (statusCode == HttpStatus.valueOf(ENHANCE_YOUR_CALM)) {  throw new RateLimitExceededException();} @TO@ Block@@ElseBody:if (statusCode == HttpStatus.UNAUTHORIZED) {  if (errorText == null) {    throw new NotAuthorizedException(response.getStatusText());  } else   if (errorText.equals("Could not authenticate you.")) {    throw new MissingAuthorizationException();  } else   if (errorText.equals("Could not authenticate with OAuth.")) {    throw new RevokedAuthorizationException();  } else   if (errorText.equals("Invalid / expired Token")) {    throw new InvalidAuthorizationException(errorText);  } else {    throw new NotAuthorizedException(errorText);  }} else if (statusCode == HttpStatus.FORBIDDEN) {  if (errorText.equals(DUPLICATE_STATUS_TEXT) || errorText.contains("You already said that")) {    throw new DuplicateStatusException(errorText);  } else   if (errorText.equals(STATUS_TOO_LONG_TEXT) || errorText.contains(MESSAGE_TOO_LONG_TEXT)) {    throw new MessageTooLongException(errorText);  } else   if (errorText.equals(INVALID_MESSAGE_RECIPIENT_TEXT)) {    throw new InvalidMessageRecipientException(errorText);  } else   if (errorText.equals(DAILY_RATE_LIMIT_TEXT)) {    throw new RateLimitExceededException();  } else {    throw new OperationNotPermittedException(errorText);  }} else if (statusCode == HttpStatus.NOT_FOUND) {  throw new ResourceNotFoundException(errorText);} else if (statusCode == HttpStatus.valueOf(ENHANCE_YOUR_CALM)) {  throw new RateLimitExceededException();} @AT@ 3650 @LENGTH@ 1485


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 4015 @LENGTH@ 395
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 4077 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4077 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4083 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4090 @LENGTH@ 11


DEL MethodDeclaration@@void, MethodName:reference, EntityBeanComponentInstance instance,  @AT@ 3252 @LENGTH@ 48
---DEL PrimitiveType@@void @AT@ 3247 @LENGTH@ 4
---DEL SimpleName@@MethodName:reference @AT@ 3252 @LENGTH@ 9
---DEL SingleVariableDeclaration@@EntityBeanComponentInstance instance @AT@ 3262 @LENGTH@ 36
------DEL SimpleType@@EntityBeanComponentInstance @AT@ 3262 @LENGTH@ 27
------DEL SimpleName@@instance @AT@ 3290 @LENGTH@ 8


INS MethodDeclaration@@public, voidMethodName:NoXmlBodyValidationException, Exchange exchange, Throwable cause,  @TO@ TypeDeclaration@@[public]NoXmlBodyValidationException, ValidationException @AT@ 1321 @LENGTH@ 162
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:NoXmlBodyValidationException, Exchange exchange, Throwable cause,  @AT@ 1321 @LENGTH@ 6
---INS SimpleName@@MethodName:NoXmlBodyValidationException @TO@ MethodDeclaration@@public, voidMethodName:NoXmlBodyValidationException, Exchange exchange, Throwable cause,  @AT@ 1328 @LENGTH@ 28
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, voidMethodName:NoXmlBodyValidationException, Exchange exchange, Throwable cause,  @AT@ 1357 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1357 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1366 @LENGTH@ 8
---INS SingleVariableDeclaration@@Throwable cause @TO@ MethodDeclaration@@public, voidMethodName:NoXmlBodyValidationException, Exchange exchange, Throwable cause,  @AT@ 1376 @LENGTH@ 15
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1376 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 1386 @LENGTH@ 5
---INS SuperConstructorInvocation@@super("No XML body could be found on the input message",exchange,cause);
 @TO@ MethodDeclaration@@public, voidMethodName:NoXmlBodyValidationException, Exchange exchange, Throwable cause,  @AT@ 1403 @LENGTH@ 74
------INS StringLiteral@@"No XML body could be found on the input message" @TO@ SuperConstructorInvocation@@super("No XML body could be found on the input message",exchange,cause);
 @AT@ 1409 @LENGTH@ 49
------INS SimpleName@@exchange @TO@ SuperConstructorInvocation@@super("No XML body could be found on the input message",exchange,cause);
 @AT@ 1460 @LENGTH@ 8
------INS SimpleName@@cause @TO@ SuperConstructorInvocation@@super("No XML body could be found on the input message",exchange,cause);
 @AT@ 1470 @LENGTH@ 5


UPD MethodDeclaration@@public, static, void, MethodName:initOperations, final ManagementResourceRegistration root, final ContentRepository contentRepository, final ExtensibleConfigurationPersister extensibleConfigurationPersister, final ServerEnvironment serverEnvironment, final ControlledProcessState processState, final RunningModeControl runningModeControl, final AbstractVaultReader vaultReader, final ExtensionRegistry extensionRegistry, final boolean parallelBoot, final RemoteFileRepository remoteFileRepository,  @TO@ public, static, void, MethodName:initOperations, final ManagementResourceRegistration root, final ContentRepository contentRepository, final ExtensibleConfigurationPersister extensibleConfigurationPersister, final ServerEnvironment serverEnvironment, final ControlledProcessState processState, final RunningModeControl runningModeControl, final AbstractVaultReader vaultReader, final ExtensionRegistry extensionRegistry, final boolean parallelBoot, final DeploymentFileRepository remoteFileRepository,  @AT@ 11418 @LENGTH@ 15372
---UPD SingleVariableDeclaration@@final RemoteFileRepository remoteFileRepository @TO@ final DeploymentFileRepository remoteFileRepository @AT@ 12194 @LENGTH@ 47
------UPD SimpleType@@RemoteFileRepository @TO@ DeploymentFileRepository @AT@ 12200 @LENGTH@ 20
---UPD VariableDeclarationStatement@@final DeploymentReplaceHandler drh=new DeploymentReplaceHandler(contentRepository); @TO@ final DeploymentReplaceHandler drh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository); @AT@ 16744 @LENGTH@ 85
------UPD VariableDeclarationFragment@@drh=new DeploymentReplaceHandler(contentRepository) @TO@ drh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16775 @LENGTH@ 53
---------DEL ClassInstanceCreation@@DeploymentReplaceHandler[contentRepository] @AT@ 16781 @LENGTH@ 47
------------DEL New@@new @AT@ 16781 @LENGTH@ 3
------------DEL SimpleType@@DeploymentReplaceHandler @AT@ 16785 @LENGTH@ 24
------------DEL SimpleName@@contentRepository @AT@ 16810 @LENGTH@ 17
---------INS ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @TO@ VariableDeclarationFragment@@drh=new DeploymentReplaceHandler(contentRepository) @AT@ 16797 @LENGTH@ 255
------------INS InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16797 @LENGTH@ 83
---------------INS InfixExpression@@serverEnvironment == null @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16797 @LENGTH@ 25
------------------INS SimpleName@@serverEnvironment @TO@ InfixExpression@@serverEnvironment == null @AT@ 16797 @LENGTH@ 17
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment == null @AT@ 16814 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@serverEnvironment == null @AT@ 16818 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16822 @LENGTH@ 2
---------------INS InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16826 @LENGTH@ 54
------------------INS MethodInvocation@@serverEnvironment.getLaunchType() @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16826 @LENGTH@ 33
---------------------INS SimpleName@@Name:serverEnvironment @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 16826 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getLaunchType:[] @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 16844 @LENGTH@ 15
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16859 @LENGTH@ 2
------------------INS QualifiedName@@LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 16863 @LENGTH@ 17
---------------------INS SimpleName@@LaunchType @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 16863 @LENGTH@ 10
---------------------INS SimpleName@@DOMAIN @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 16874 @LENGTH@ 6
------------INS MethodInvocation@@DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16899 @LENGTH@ 87
---------------INS SimpleName@@Name:DeploymentReplaceHandler @TO@ MethodInvocation@@DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 16899 @LENGTH@ 24
---------------INS SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @TO@ MethodInvocation@@DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 16924 @LENGTH@ 62
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 16946 @LENGTH@ 17
------------------INS SimpleName@@remoteFileRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 16965 @LENGTH@ 20
------------INS MethodInvocation@@DeploymentReplaceHandler.createForStandalone(contentRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16989 @LENGTH@ 63
---------------INS SimpleName@@Name:DeploymentReplaceHandler @TO@ MethodInvocation@@DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 16989 @LENGTH@ 24
---------------INS SimpleName@@MethodName:createForStandalone:[contentRepository] @TO@ MethodInvocation@@DeploymentReplaceHandler.createForStandalone(contentRepository) @AT@ 17014 @LENGTH@ 38
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForStandalone:[contentRepository] @AT@ 17034 @LENGTH@ 17
---UPD VariableDeclarationStatement@@DeploymentFullReplaceHandler dfrh=new DeploymentFullReplaceHandler(contentRepository); @TO@ DeploymentFullReplaceHandler dfrh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository); @AT@ 16935 @LENGTH@ 88
------UPD VariableDeclarationFragment@@dfrh=new DeploymentFullReplaceHandler(contentRepository) @TO@ dfrh=serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 16964 @LENGTH@ 58
---------DEL ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepository] @AT@ 16971 @LENGTH@ 51
------------DEL New@@new @AT@ 16971 @LENGTH@ 3
------------DEL SimpleType@@DeploymentFullReplaceHandler @AT@ 16975 @LENGTH@ 28
------------DEL SimpleName@@contentRepository @AT@ 17004 @LENGTH@ 17
---------INS ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @TO@ VariableDeclarationFragment@@dfrh=new DeploymentFullReplaceHandler(contentRepository) @AT@ 17195 @LENGTH@ 263
------------INS InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17195 @LENGTH@ 83
---------------INS InfixExpression@@serverEnvironment == null @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17195 @LENGTH@ 25
------------------INS SimpleName@@serverEnvironment @TO@ InfixExpression@@serverEnvironment == null @AT@ 17195 @LENGTH@ 17
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment == null @AT@ 17212 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@serverEnvironment == null @AT@ 17216 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17220 @LENGTH@ 2
---------------INS InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17224 @LENGTH@ 54
------------------INS MethodInvocation@@serverEnvironment.getLaunchType() @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17224 @LENGTH@ 33
---------------------INS SimpleName@@Name:serverEnvironment @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 17224 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getLaunchType:[] @TO@ MethodInvocation@@serverEnvironment.getLaunchType() @AT@ 17242 @LENGTH@ 15
------------------INS Operator@@== @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17257 @LENGTH@ 2
------------------INS QualifiedName@@LaunchType.DOMAIN @TO@ InfixExpression@@serverEnvironment.getLaunchType() == LaunchType.DOMAIN @AT@ 17261 @LENGTH@ 17
---------------------INS SimpleName@@LaunchType @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 17261 @LENGTH@ 10
---------------------INS SimpleName@@DOMAIN @TO@ QualifiedName@@LaunchType.DOMAIN @AT@ 17272 @LENGTH@ 6
------------INS MethodInvocation@@DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17297 @LENGTH@ 91
---------------INS SimpleName@@Name:DeploymentFullReplaceHandler @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 17297 @LENGTH@ 28
---------------INS SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) @AT@ 17326 @LENGTH@ 62
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 17348 @LENGTH@ 17
------------------INS SimpleName@@remoteFileRepository @TO@ SimpleName@@MethodName:createForDomainServer:[contentRepository, remoteFileRepository] @AT@ 17367 @LENGTH@ 20
------------INS MethodInvocation@@DeploymentFullReplaceHandler.createForStandalone(contentRepository) @TO@ ConditionalExpression@@serverEnvironment == null || serverEnvironment.getLaunchType() == LaunchType.DOMAIN ? DeploymentFullReplaceHandler.createForDomainServer(contentRepository,remoteFileRepository) : DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17391 @LENGTH@ 67
---------------INS SimpleName@@Name:DeploymentFullReplaceHandler @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17391 @LENGTH@ 28
---------------INS SimpleName@@MethodName:createForStandalone:[contentRepository] @TO@ MethodInvocation@@DeploymentFullReplaceHandler.createForStandalone(contentRepository) @AT@ 17420 @LENGTH@ 38
------------------INS SimpleName@@contentRepository @TO@ SimpleName@@MethodName:createForStandalone:[contentRepository] @AT@ 17440 @LENGTH@ 17


UPD IfStatement@@if (isDeclaringDefaultExchange(exchange)) {  continue;} @TO@ if (!isDeclaringDefaultExchange(exchange)) {  channel.exchangeDeclare(exchange.getName(),exchange.getType(),exchange.isDurable(),exchange.isAutoDelete(),exchange.getArguments());} @AT@ 10790 @LENGTH@ 62
---INS PrefixExpression@@!isDeclaringDefaultExchange(exchange) @TO@ IfStatement@@if (isDeclaringDefaultExchange(exchange)) {  continue;} @AT@ 10783 @LENGTH@ 37
------INS Operator@@! @TO@ PrefixExpression@@!isDeclaringDefaultExchange(exchange) @AT@ 10783 @LENGTH@ 1
------MOV MethodInvocation@@isDeclaringDefaultExchange(exchange) @TO@ PrefixExpression@@!isDeclaringDefaultExchange(exchange) @AT@ 10794 @LENGTH@ 36
---UPD Block@@ThenBody:{  continue;} @TO@ ThenBody:{  channel.exchangeDeclare(exchange.getName(),exchange.getType(),exchange.isDurable(),exchange.isAutoDelete(),exchange.getArguments());} @AT@ 10832 @LENGTH@ 20
------DEL ContinueStatement@@ @AT@ 10838 @LENGTH@ 9
------MOV ExpressionStatement@@MethodInvocation:channel.exchangeDeclare(exchange.getName(),exchange.getType(),exchange.isDurable(),exchange.isAutoDelete(),exchange.getArguments()) @TO@ Block@@ThenBody:{  continue;} @AT@ 10860 @LENGTH@ 141


UPD IfStatement@@if (type.isArray()) {  if (value instanceof Collection) {    Collection collection=(Collection)value;    Object array=Array.newInstance(type.getComponentType(),collection.size());    if (array instanceof Object[]) {      collection.toArray((Object[])array);    } else {      int index=0;      for (      Object element : collection) {        Array.set(array,index++,element);      }    }    return (T)array;  } else   if (value != null && value.getClass().isArray()) {    int size=Array.getLength(value);    Object answer=Array.newInstance(type.getComponentType(),size);    for (int i=0; i < size; i++) {      Array.set(answer,i,Array.get(value,i));    }    return (T)answer;  }} else if (Collection.class.isAssignableFrom(type)) {  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List answer=new ArrayList(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @TO@ if (type.isArray()) {  if (value instanceof Collection) {    Collection<?> collection=(Collection<?>)value;    Object array=Array.newInstance(type.getComponentType(),collection.size());    if (array instanceof Object[]) {      collection.toArray((Object[])array);    } else {      int index=0;      for (      Object element : collection) {        Array.set(array,index++,element);      }    }    return (T)array;  } else   if (value != null && value.getClass().isArray()) {    int size=Array.getLength(value);    Object answer=Array.newInstance(type.getComponentType(),size);    for (int i=0; i < size; i++) {      Array.set(answer,i,Array.get(value,i));    }    return (T)answer;  }} else if (Collection.class.isAssignableFrom(type)) {  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List<Object> answer=new ArrayList<Object>(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @AT@ 1414 @LENGTH@ 1542
---UPD Block@@ThenBody:{  if (value instanceof Collection) {    Collection collection=(Collection)value;    Object array=Array.newInstance(type.getComponentType(),collection.size());    if (array instanceof Object[]) {      collection.toArray((Object[])array);    } else {      int index=0;      for (      Object element : collection) {        Array.set(array,index++,element);      }    }    return (T)array;  } else   if (value != null && value.getClass().isArray()) {    int size=Array.getLength(value);    Object answer=Array.newInstance(type.getComponentType(),size);    for (int i=0; i < size; i++) {      Array.set(answer,i,Array.get(value,i));    }    return (T)answer;  }} @TO@ ThenBody:{  if (value instanceof Collection) {    Collection<?> collection=(Collection<?>)value;    Object array=Array.newInstance(type.getComponentType(),collection.size());    if (array instanceof Object[]) {      collection.toArray((Object[])array);    } else {      int index=0;      for (      Object element : collection) {        Array.set(array,index++,element);      }    }    return (T)array;  } else   if (value != null && value.getClass().isArray()) {    int size=Array.getLength(value);    Object answer=Array.newInstance(type.getComponentType(),size);    for (int i=0; i < size; i++) {      Array.set(answer,i,Array.get(value,i));    }    return (T)answer;  }} @AT@ 1434 @LENGTH@ 947
------UPD IfStatement@@if (value instanceof Collection) {  Collection collection=(Collection)value;  Object array=Array.newInstance(type.getComponentType(),collection.size());  if (array instanceof Object[]) {    collection.toArray((Object[])array);  } else {    int index=0;    for (    Object element : collection) {      Array.set(array,index++,element);    }  }  return (T)array;} else if (value != null && value.getClass().isArray()) {  int size=Array.getLength(value);  Object answer=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(answer,i,Array.get(value,i));  }  return (T)answer;} @TO@ if (value instanceof Collection) {  Collection<?> collection=(Collection<?>)value;  Object array=Array.newInstance(type.getComponentType(),collection.size());  if (array instanceof Object[]) {    collection.toArray((Object[])array);  } else {    int index=0;    for (    Object element : collection) {      Array.set(array,index++,element);    }  }  return (T)array;} else if (value != null && value.getClass().isArray()) {  int size=Array.getLength(value);  Object answer=Array.newInstance(type.getComponentType(),size);  for (int i=0; i < size; i++) {    Array.set(answer,i,Array.get(value,i));  }  return (T)answer;} @AT@ 1448 @LENGTH@ 923
---------UPD Block@@ThenBody:{  Collection collection=(Collection)value;  Object array=Array.newInstance(type.getComponentType(),collection.size());  if (array instanceof Object[]) {    collection.toArray((Object[])array);  } else {    int index=0;    for (    Object element : collection) {      Array.set(array,index++,element);    }  }  return (T)array;} @TO@ ThenBody:{  Collection<?> collection=(Collection<?>)value;  Object array=Array.newInstance(type.getComponentType(),collection.size());  if (array instanceof Object[]) {    collection.toArray((Object[])array);  } else {    int index=0;    for (    Object element : collection) {      Array.set(array,index++,element);    }  }  return (T)array;} @AT@ 1481 @LENGTH@ 523
------------UPD VariableDeclarationStatement@@Collection collection=(Collection)value; @TO@ Collection<?> collection=(Collection<?>)value; @AT@ 1499 @LENGTH@ 42
---------------INS ParameterizedType@@Collection<?> @TO@ VariableDeclarationStatement@@Collection collection=(Collection)value; @AT@ 1499 @LENGTH@ 13
------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 1499 @LENGTH@ 10
------------------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 1510 @LENGTH@ 1
---------------DEL SimpleType@@Collection @AT@ 1499 @LENGTH@ 10
---------------UPD VariableDeclarationFragment@@collection=(Collection)value @TO@ collection=(Collection<?>)value @AT@ 1510 @LENGTH@ 30
------------------UPD CastExpression@@(Collection)value @TO@ (Collection<?>)value @AT@ 1523 @LENGTH@ 17
---------------------DEL SimpleType@@Collection @AT@ 1524 @LENGTH@ 10
---------------------INS ParameterizedType@@Collection<?> @TO@ CastExpression@@(Collection)value @AT@ 1527 @LENGTH@ 13
------------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 1527 @LENGTH@ 10
------------------------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 1538 @LENGTH@ 1
---UPD Block@@ElseBody:if (Collection.class.isAssignableFrom(type)) {  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List answer=new ArrayList(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @TO@ ElseBody:if (Collection.class.isAssignableFrom(type)) {  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List<Object> answer=new ArrayList<Object>(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @AT@ 2387 @LENGTH@ 569
------UPD IfStatement@@if (Collection.class.isAssignableFrom(type)) {  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List answer=new ArrayList(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @TO@ if (Collection.class.isAssignableFrom(type)) {  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List<Object> answer=new ArrayList<Object>(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @AT@ 2387 @LENGTH@ 569
---------UPD Block@@ThenBody:{  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List answer=new ArrayList(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @TO@ ThenBody:{  if (value != null) {    if (value instanceof Object[]) {      return (T)Arrays.asList((Object[])value);    } else     if (value.getClass().isArray()) {      int size=Array.getLength(value);      List<Object> answer=new ArrayList<Object>(size);      for (int i=0; i < size; i++) {        answer.add(Array.get(value,i));      }      return (T)answer;    }  }} @AT@ 2432 @LENGTH@ 524
------------UPD IfStatement@@if (value != null) {  if (value instanceof Object[]) {    return (T)Arrays.asList((Object[])value);  } else   if (value.getClass().isArray()) {    int size=Array.getLength(value);    List answer=new ArrayList(size);    for (int i=0; i < size; i++) {      answer.add(Array.get(value,i));    }    return (T)answer;  }} @TO@ if (value != null) {  if (value instanceof Object[]) {    return (T)Arrays.asList((Object[])value);  } else   if (value.getClass().isArray()) {    int size=Array.getLength(value);    List<Object> answer=new ArrayList<Object>(size);    for (int i=0; i < size; i++) {      answer.add(Array.get(value,i));    }    return (T)answer;  }} @AT@ 2446 @LENGTH@ 500
---------------UPD Block@@ThenBody:{  if (value instanceof Object[]) {    return (T)Arrays.asList((Object[])value);  } else   if (value.getClass().isArray()) {    int size=Array.getLength(value);    List answer=new ArrayList(size);    for (int i=0; i < size; i++) {      answer.add(Array.get(value,i));    }    return (T)answer;  }} @TO@ ThenBody:{  if (value instanceof Object[]) {    return (T)Arrays.asList((Object[])value);  } else   if (value.getClass().isArray()) {    int size=Array.getLength(value);    List<Object> answer=new ArrayList<Object>(size);    for (int i=0; i < size; i++) {      answer.add(Array.get(value,i));    }    return (T)answer;  }} @AT@ 2465 @LENGTH@ 481
------------------UPD IfStatement@@if (value instanceof Object[]) {  return (T)Arrays.asList((Object[])value);} else if (value.getClass().isArray()) {  int size=Array.getLength(value);  List answer=new ArrayList(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @TO@ if (value instanceof Object[]) {  return (T)Arrays.asList((Object[])value);} else if (value.getClass().isArray()) {  int size=Array.getLength(value);  List<Object> answer=new ArrayList<Object>(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @AT@ 2483 @LENGTH@ 449
---------------------UPD Block@@ElseBody:if (value.getClass().isArray()) {  int size=Array.getLength(value);  List answer=new ArrayList(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @TO@ ElseBody:if (value.getClass().isArray()) {  int size=Array.getLength(value);  List<Object> answer=new ArrayList<Object>(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @AT@ 2601 @LENGTH@ 331
------------------------UPD IfStatement@@if (value.getClass().isArray()) {  int size=Array.getLength(value);  List answer=new ArrayList(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @TO@ if (value.getClass().isArray()) {  int size=Array.getLength(value);  List<Object> answer=new ArrayList<Object>(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @AT@ 2601 @LENGTH@ 331
---------------------------UPD Block@@ThenBody:{  int size=Array.getLength(value);  List answer=new ArrayList(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @TO@ ThenBody:{  int size=Array.getLength(value);  List<Object> answer=new ArrayList<Object>(size);  for (int i=0; i < size; i++) {    answer.add(Array.get(value,i));  }  return (T)answer;} @AT@ 2633 @LENGTH@ 299
------------------------------UPD VariableDeclarationStatement@@List answer=new ArrayList(size); @TO@ List<Object> answer=new ArrayList<Object>(size); @AT@ 2710 @LENGTH@ 34
---------------------------------DEL SimpleType@@List @AT@ 2710 @LENGTH@ 4
---------------------------------UPD VariableDeclarationFragment@@answer=new ArrayList(size) @TO@ answer=new ArrayList<Object>(size) @AT@ 2715 @LENGTH@ 28
------------------------------------UPD ClassInstanceCreation@@ArrayList[size] @TO@ ArrayList<Object>[size] @AT@ 2724 @LENGTH@ 19
---------------------------------------DEL SimpleType@@ArrayList @AT@ 2728 @LENGTH@ 9
---------------------------------------INS ParameterizedType@@ArrayList<Object> @TO@ ClassInstanceCreation@@ArrayList[size] @AT@ 2742 @LENGTH@ 17
------------------------------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Object> @AT@ 2742 @LENGTH@ 9
------------------------------------------INS SimpleType@@Object @TO@ ParameterizedType@@ArrayList<Object> @AT@ 2752 @LENGTH@ 6
---------------------------------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List answer=new ArrayList(size); @AT@ 2716 @LENGTH@ 12
------------------------------------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 2716 @LENGTH@ 4
------------------------------------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 2721 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:deleteAll,  @TO@ public, void, MethodName:deleteAllInBatch,  @AT@ 5536 @LENGTH@ 89
---UPD SimpleName@@MethodName:deleteAll @TO@ MethodName:deleteAllInBatch @AT@ 5548 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:preValidateCreate() @AT@ 2328 @LENGTH@ 20
---DEL MethodInvocation@@MethodName:preValidateCreate:[] @AT@ 2328 @LENGTH@ 19


UPD ReturnStatement@@MethodInvocation:context.proceed() @TO@ SimpleName:existing @AT@ 3370 @LENGTH@ 25
---DEL MethodInvocation@@context.proceed() @AT@ 3377 @LENGTH@ 17
------DEL SimpleName@@Name:context @AT@ 3377 @LENGTH@ 7
------DEL SimpleName@@MethodName:proceed:[] @AT@ 3385 @LENGTH@ 9
---INS SimpleName@@existing @TO@ ReturnStatement@@MethodInvocation:context.proceed() @AT@ 3377 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 1249 @LENGTH@ 315
---INS MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @AT@ 1249 @LENGTH@ 314
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @AT@ 1249 @LENGTH@ 7
------INS SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
] @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @AT@ 1257 @LENGTH@ 306
---------INS ClassInstanceCreation@@OperationContext.RollbackHandler[] @TO@ SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
] @AT@ 1270 @LENGTH@ 292
------------INS New@@new @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 1270 @LENGTH@ 3
------------INS SimpleType@@OperationContext.RollbackHandler @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 1274 @LENGTH@ 32
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 1309 @LENGTH@ 253
---------------INS MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1345 @LENGTH@ 207
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1345 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1352 @LENGTH@ 4
------------------INS SimpleName@@MethodName:handleRollback @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1357 @LENGTH@ 14
------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1372 @LENGTH@ 24
---------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1372 @LENGTH@ 16
---------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1389 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1398 @LENGTH@ 19
---------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1398 @LENGTH@ 9
---------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1408 @LENGTH@ 9
------------------INS IfStatement@@if (context.isNormalServer()) {  context.revertReloadRequired();} @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1437 @LENGTH@ 101
---------------------INS MethodInvocation@@context.isNormalServer() @TO@ IfStatement@@if (context.isNormalServer()) {  context.revertReloadRequired();} @AT@ 1441 @LENGTH@ 24
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1441 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1449 @LENGTH@ 16
---------------------INS Block@@ThenBody:{  context.revertReloadRequired();} @TO@ IfStatement@@if (context.isNormalServer()) {  context.revertReloadRequired();} @AT@ 1467 @LENGTH@ 71
------------------------INS ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @TO@ Block@@ThenBody:{  context.revertReloadRequired();} @AT@ 1489 @LENGTH@ 31
---------------------------MOV MethodInvocation@@context.completeStep() @TO@ ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @AT@ 1249 @LENGTH@ 22
------------------------------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:revertReloadRequired:[] @AT@ 1257 @LENGTH@ 14


DEL ExpressionStatement@@MethodInvocation:resourceRegistration.registerOperationHandler(ModelDescriptionConstants.DESCRIBE,aliasHandler,GenericSubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE) @AT@ 4630 @LENGTH@ 195
---DEL MethodInvocation@@resourceRegistration.registerOperationHandler(ModelDescriptionConstants.DESCRIBE,aliasHandler,GenericSubsystemDescribeHandler.INSTANCE,false,OperationEntry.EntryType.PRIVATE) @AT@ 4630 @LENGTH@ 194
------DEL SimpleName@@Name:resourceRegistration @AT@ 4630 @LENGTH@ 20
------DEL SimpleName@@MethodName:registerOperationHandler:[ModelDescriptionConstants.DESCRIBE, aliasHandler, GenericSubsystemDescribeHandler.INSTANCE, false, OperationEntry.EntryType.PRIVATE] @AT@ 4651 @LENGTH@ 173
---------DEL QualifiedName@@ModelDescriptionConstants.DESCRIBE @AT@ 4676 @LENGTH@ 34
------------DEL SimpleName@@ModelDescriptionConstants @AT@ 4676 @LENGTH@ 25
------------DEL SimpleName@@DESCRIBE @AT@ 4702 @LENGTH@ 8
---------DEL SimpleName@@aliasHandler @AT@ 4712 @LENGTH@ 12
---------DEL QualifiedName@@GenericSubsystemDescribeHandler.INSTANCE @AT@ 4742 @LENGTH@ 40
------------DEL SimpleName@@GenericSubsystemDescribeHandler @AT@ 4742 @LENGTH@ 31
------------DEL SimpleName@@INSTANCE @AT@ 4774 @LENGTH@ 8
---------DEL BooleanLiteral@@false @AT@ 4784 @LENGTH@ 5
---------DEL QualifiedName@@OperationEntry.EntryType.PRIVATE @AT@ 4791 @LENGTH@ 32
------------DEL QualifiedName@@OperationEntry.EntryType @AT@ 4791 @LENGTH@ 24
---------------DEL SimpleName@@OperationEntry @AT@ 4791 @LENGTH@ 14
---------------DEL SimpleName@@EntryType @AT@ 4806 @LENGTH@ 9
------------DEL SimpleName@@PRIVATE @AT@ 4816 @LENGTH@ 7


INS MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ServerMessages,  @AT@ 3442 @LENGTH@ 83
---INS SimpleType@@RuntimeException @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3425 @LENGTH@ 16
---INS SimpleName@@MethodName:cannotCreateVault @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3442 @LENGTH@ 17
---INS SingleVariableDeclaration@@@Param SecurityVaultException cause @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3460 @LENGTH@ 35
------INS SimpleType@@SecurityVaultException @TO@ SingleVariableDeclaration@@@Param SecurityVaultException cause @AT@ 3467 @LENGTH@ 22
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Param SecurityVaultException cause @AT@ 3490 @LENGTH@ 5
---INS SingleVariableDeclaration@@SecurityVaultException msg @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateVault, @Param SecurityVaultException cause, SecurityVaultException msg,  @AT@ 3497 @LENGTH@ 26
------INS SimpleType@@SecurityVaultException @TO@ SingleVariableDeclaration@@SecurityVaultException msg @AT@ 3497 @LENGTH@ 22
------INS SimpleName@@msg @TO@ SingleVariableDeclaration@@SecurityVaultException msg @AT@ 3520 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @TO@ MethodInvocation:MGMT_OP_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 3343 @LENGTH@ 184
---UPD MethodInvocation@@ROOT_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @TO@ MGMT_OP_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 3343 @LENGTH@ 183
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 3343 @LENGTH@ 11


UPD IfStatement@@if (instance.isRemoved()) {  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ if (instance.isRemoved()) {  component.getCache().release(instance,true);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 3052 @LENGTH@ 149
---UPD Block@@ThenBody:{  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ ThenBody:{  component.getCache().release(instance,true);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 3078 @LENGTH@ 123
------INS ExpressionStatement@@MethodInvocation:component.getCache().release(instance,true) @TO@ Block@@ThenBody:{  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 3104 @LENGTH@ 45
---------INS MethodInvocation@@component.getCache().release(instance,true) @TO@ ExpressionStatement@@MethodInvocation:component.getCache().release(instance,true) @AT@ 3104 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getCache:[] @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 3104 @LENGTH@ 20
------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 3104 @LENGTH@ 9
------------INS SimpleName@@MethodName:release:[instance, true] @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 3125 @LENGTH@ 23
---------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 3133 @LENGTH@ 8
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 3143 @LENGTH@ 4


DEL FieldDeclaration@@private, Route, [route] @AT@ 1425 @LENGTH@ 20
---DEL Modifier@@private @AT@ 1425 @LENGTH@ 7
---DEL SimpleType@@Route @AT@ 1433 @LENGTH@ 5
---DEL VariableDeclarationFragment@@route @AT@ 1439 @LENGTH@ 5
------DEL SimpleName@@route @AT@ 1439 @LENGTH@ 5


UPD VariableDeclarationStatement@@StartMode startMode=operation.hasDefined(ModelKeys.START) ? StartMode.valueOf(operation.get(ModelKeys.START).asString()) : StartMode.LAZY; @TO@ StartMode startMode=model.hasDefined(ModelKeys.START) ? StartMode.valueOf(model.get(ModelKeys.START).asString()) : StartMode.LAZY; @AT@ 4957 @LENGTH@ 140
---UPD VariableDeclarationFragment@@startMode=operation.hasDefined(ModelKeys.START) ? StartMode.valueOf(operation.get(ModelKeys.START).asString()) : StartMode.LAZY @TO@ startMode=model.hasDefined(ModelKeys.START) ? StartMode.valueOf(model.get(ModelKeys.START).asString()) : StartMode.LAZY @AT@ 4967 @LENGTH@ 129
------UPD ConditionalExpression@@operation.hasDefined(ModelKeys.START) ? StartMode.valueOf(operation.get(ModelKeys.START).asString()) : StartMode.LAZY @TO@ model.hasDefined(ModelKeys.START) ? StartMode.valueOf(model.get(ModelKeys.START).asString()) : StartMode.LAZY @AT@ 4979 @LENGTH@ 117
---------UPD MethodInvocation@@operation.hasDefined(ModelKeys.START) @TO@ model.hasDefined(ModelKeys.START) @AT@ 4979 @LENGTH@ 37
------------UPD SimpleName@@Name:operation @TO@ Name:model @AT@ 4979 @LENGTH@ 9
---------UPD MethodInvocation@@StartMode.valueOf(operation.get(ModelKeys.START).asString()) @TO@ StartMode.valueOf(model.get(ModelKeys.START).asString()) @AT@ 5019 @LENGTH@ 60
------------UPD SimpleName@@MethodName:valueOf:[operation.get(ModelKeys.START).asString()] @TO@ MethodName:valueOf:[model.get(ModelKeys.START).asString()] @AT@ 5029 @LENGTH@ 50
---------------UPD MethodInvocation@@operation.get(ModelKeys.START).asString() @TO@ model.get(ModelKeys.START).asString() @AT@ 5037 @LENGTH@ 41
------------------UPD SimpleName@@Name:operation @TO@ Name:model @AT@ 5037 @LENGTH@ 9


UPD MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @TO@ protected, void, MethodName:preCreateProcessor,  @AT@ 3267 @LENGTH@ 705
---UPD SimpleName@@MethodName:configureChild @TO@ MethodName:preCreateProcessor @AT@ 3282 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ProcessorDefinition output @AT@ 3297 @LENGTH@ 26
------DEL SimpleType@@ProcessorDefinition @AT@ 3297 @LENGTH@ 19
------DEL SimpleName@@output @AT@ 3317 @LENGTH@ 6
---UPD IfStatement@@if (expression instanceof ExpressionClause) {  ExpressionClause clause=(ExpressionClause)expression;  if (clause.getExpressionType() != null) {    expression=clause.getExpressionType();  }} @TO@ if (exp instanceof ExpressionClause) {  ExpressionClause clause=(ExpressionClause)exp;  if (clause.getExpressionType() != null) {    expression=clause.getExpressionType();  }} @AT@ 3335 @LENGTH@ 631
------UPD InstanceofExpression@@expression instanceof ExpressionClause @TO@ exp instanceof ExpressionClause @AT@ 3339 @LENGTH@ 38
---------UPD SimpleName@@expression @TO@ exp @AT@ 3339 @LENGTH@ 10
------UPD Block@@ThenBody:{  ExpressionClause clause=(ExpressionClause)expression;  if (clause.getExpressionType() != null) {    expression=clause.getExpressionType();  }} @TO@ ThenBody:{  ExpressionClause clause=(ExpressionClause)exp;  if (clause.getExpressionType() != null) {    expression=clause.getExpressionType();  }} @AT@ 3379 @LENGTH@ 587
---------UPD VariableDeclarationStatement@@ExpressionClause clause=(ExpressionClause)expression; @TO@ ExpressionClause clause=(ExpressionClause)exp; @AT@ 3393 @LENGTH@ 56
------------UPD VariableDeclarationFragment@@clause=(ExpressionClause)expression @TO@ clause=(ExpressionClause)exp @AT@ 3410 @LENGTH@ 38
---------------UPD CastExpression@@(ExpressionClause)expression @TO@ (ExpressionClause)exp @AT@ 3419 @LENGTH@ 29
------------------UPD SimpleName@@expression @TO@ exp @AT@ 3438 @LENGTH@ 10
---INS VariableDeclarationStatement@@Expression exp=expression; @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3481 @LENGTH@ 28
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression exp=expression; @AT@ 3481 @LENGTH@ 10
------INS VariableDeclarationFragment@@exp=expression @TO@ VariableDeclarationStatement@@Expression exp=expression; @AT@ 3492 @LENGTH@ 16
---------INS SimpleName@@exp @TO@ VariableDeclarationFragment@@exp=expression @AT@ 3492 @LENGTH@ 3
---------INS SimpleName@@expression @TO@ VariableDeclarationFragment@@exp=expression @AT@ 3498 @LENGTH@ 10
---INS IfStatement@@if (expression.getExpressionValue() != null) {  exp=expression.getExpressionValue();} @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3518 @LENGTH@ 107
------INS InfixExpression@@expression.getExpressionValue() != null @TO@ IfStatement@@if (expression.getExpressionValue() != null) {  exp=expression.getExpressionValue();} @AT@ 3522 @LENGTH@ 39
---------INS MethodInvocation@@expression.getExpressionValue() @TO@ InfixExpression@@expression.getExpressionValue() != null @AT@ 3522 @LENGTH@ 31
------------INS SimpleName@@Name:expression @TO@ MethodInvocation@@expression.getExpressionValue() @AT@ 3522 @LENGTH@ 10
------------INS SimpleName@@MethodName:getExpressionValue:[] @TO@ MethodInvocation@@expression.getExpressionValue() @AT@ 3533 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@expression.getExpressionValue() != null @AT@ 3553 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@expression.getExpressionValue() != null @AT@ 3557 @LENGTH@ 4
------INS Block@@ThenBody:{  exp=expression.getExpressionValue();} @TO@ IfStatement@@if (expression.getExpressionValue() != null) {  exp=expression.getExpressionValue();} @AT@ 3563 @LENGTH@ 62
---------INS ExpressionStatement@@Assignment:exp=expression.getExpressionValue() @TO@ Block@@ThenBody:{  exp=expression.getExpressionValue();} @AT@ 3577 @LENGTH@ 38
------------INS Assignment@@exp=expression.getExpressionValue() @TO@ ExpressionStatement@@Assignment:exp=expression.getExpressionValue() @AT@ 3577 @LENGTH@ 37
---------------INS SimpleName@@exp @TO@ Assignment@@exp=expression.getExpressionValue() @AT@ 3577 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@exp=expression.getExpressionValue() @AT@ 3580 @LENGTH@ 1
---------------INS MethodInvocation@@expression.getExpressionValue() @TO@ Assignment@@exp=expression.getExpressionValue() @AT@ 3583 @LENGTH@ 31
------------------INS SimpleName@@Name:expression @TO@ MethodInvocation@@expression.getExpressionValue() @AT@ 3583 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getExpressionValue:[] @TO@ MethodInvocation@@expression.getExpressionValue() @AT@ 3594 @LENGTH@ 20


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]EnumTypeConverter, [TypeConverter] @AT@ 2610 @LENGTH@ 217
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2610 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2621 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2623 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2636 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2636 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2636 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2642 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2645 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2651 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2651 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2658 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2675 @LENGTH@ 146
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2724 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2731 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2731 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2741 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2747 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2765 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2772 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2772 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2782 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2799 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2806 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:DeploymentDescription.getDeployDeploymentOperation(locale) @TO@ MethodInvocation:DeploymentDescription.getReplaceDeploymentOperation(locale) @AT@ 3566 @LENGTH@ 66
---UPD MethodInvocation@@DeploymentDescription.getDeployDeploymentOperation(locale) @TO@ DeploymentDescription.getReplaceDeploymentOperation(locale) @AT@ 3573 @LENGTH@ 58
------UPD SimpleName@@MethodName:getDeployDeploymentOperation:[locale] @TO@ MethodName:getReplaceDeploymentOperation:[locale] @AT@ 3595 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)) @TO@ MethodInvocation:extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test")) @AT@ 11423 @LENGTH@ 125
---UPD MethodInvocation@@extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)) @TO@ extension.initialize(new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test")) @AT@ 11423 @LENGTH@ 124
------UPD SimpleName@@MethodName:initialize:[new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)] @TO@ MethodName:initialize:[new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test")] @AT@ 11433 @LENGTH@ 114
---------INS MethodInvocation@@new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @TO@ SimpleName@@MethodName:initialize:[new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER)] @AT@ 11445 @LENGTH@ 125
------------MOV ClassInstanceCreation@@ExtensionContextImpl[MOCK_RESOURCE_REG, MOCK_RESOURCE_REG, persister, ProcessType.EMBEDDED_SERVER] @TO@ MethodInvocation@@new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 11444 @LENGTH@ 102
------------INS SimpleName@@MethodName:createTracking:["Test"] @TO@ MethodInvocation@@new ExtensionContextImpl(MOCK_RESOURCE_REG,MOCK_RESOURCE_REG,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 11548 @LENGTH@ 22
---------------INS StringLiteral@@"Test" @TO@ SimpleName@@MethodName:createTracking:["Test"] @AT@ 11563 @LENGTH@ 6


INS MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS")]ThreadsLogger, [BasicLogger] @AT@ 2305 @LENGTH@ 207
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2300 @LENGTH@ 4
---INS SimpleName@@MethodName:perCpuNotSupported @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2305 @LENGTH@ 18
---INS SingleVariableDeclaration@@Attribute perCpuAttr @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2324 @LENGTH@ 20
------INS SimpleType@@Attribute @TO@ SingleVariableDeclaration@@Attribute perCpuAttr @AT@ 2324 @LENGTH@ 9
------INS SimpleName@@perCpuAttr @TO@ SingleVariableDeclaration@@Attribute perCpuAttr @AT@ 2334 @LENGTH@ 10
---INS SingleVariableDeclaration@@BigDecimal count @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2346 @LENGTH@ 16
------INS SimpleType@@BigDecimal @TO@ SingleVariableDeclaration@@BigDecimal count @AT@ 2346 @LENGTH@ 10
------INS SimpleName@@count @TO@ SingleVariableDeclaration@@BigDecimal count @AT@ 2357 @LENGTH@ 5
---INS SingleVariableDeclaration@@Attribute countAttr @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2364 @LENGTH@ 19
------INS SimpleType@@Attribute @TO@ SingleVariableDeclaration@@Attribute countAttr @AT@ 2364 @LENGTH@ 9
------INS SimpleName@@countAttr @TO@ SingleVariableDeclaration@@Attribute countAttr @AT@ 2374 @LENGTH@ 9
---INS SingleVariableDeclaration@@BigDecimal perCpu @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2385 @LENGTH@ 17
------INS SimpleType@@BigDecimal @TO@ SingleVariableDeclaration@@BigDecimal perCpu @AT@ 2385 @LENGTH@ 10
------INS SimpleName@@perCpu @TO@ SingleVariableDeclaration@@BigDecimal perCpu @AT@ 2396 @LENGTH@ 6
---INS SingleVariableDeclaration@@Attribute perCpuAgain @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2404 @LENGTH@ 21
------INS SimpleType@@Attribute @TO@ SingleVariableDeclaration@@Attribute perCpuAgain @AT@ 2404 @LENGTH@ 9
------INS SimpleName@@perCpuAgain @TO@ SingleVariableDeclaration@@Attribute perCpuAgain @AT@ 2414 @LENGTH@ 11
---INS SingleVariableDeclaration@@int processors @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2455 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int processors @AT@ 2455 @LENGTH@ 3
------INS SimpleName@@processors @TO@ SingleVariableDeclaration@@int processors @AT@ 2459 @LENGTH@ 10
---INS SingleVariableDeclaration@@int fullCount @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2471 @LENGTH@ 13
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int fullCount @AT@ 2471 @LENGTH@ 3
------INS SimpleName@@fullCount @TO@ SingleVariableDeclaration@@int fullCount @AT@ 2475 @LENGTH@ 9
---INS SingleVariableDeclaration@@Attribute countAttrAgain @TO@ MethodDeclaration@@void, MethodName:perCpuNotSupported, Attribute perCpuAttr, BigDecimal count, Attribute countAttr, BigDecimal perCpu, Attribute perCpuAgain, int processors, int fullCount, Attribute countAttrAgain,  @AT@ 2486 @LENGTH@ 24
------INS SimpleType@@Attribute @TO@ SingleVariableDeclaration@@Attribute countAttrAgain @AT@ 2486 @LENGTH@ 9
------INS SimpleName@@countAttrAgain @TO@ SingleVariableDeclaration@@Attribute countAttrAgain @AT@ 2496 @LENGTH@ 14


UPD ReturnStatement@@InfixExpression:context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @TO@ MethodInvocation:context.isNormalServer() @AT@ 1904 @LENGTH@ 91
---DEL InfixExpression@@context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 1911 @LENGTH@ 83
------DEL MethodInvocation@@context.isNormalServer() @AT@ 1911 @LENGTH@ 24
------DEL Operator@@|| @AT@ 1935 @LENGTH@ 2
------DEL InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 1939 @LENGTH@ 55
---------DEL MethodInvocation@@context.getProcessType() @AT@ 1939 @LENGTH@ 24
------------DEL SimpleName@@Name:context @AT@ 1939 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getProcessType:[] @AT@ 1947 @LENGTH@ 16
---------DEL Operator@@== @AT@ 1963 @LENGTH@ 2
---------DEL QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 1967 @LENGTH@ 27
------------DEL SimpleName@@ProcessType @AT@ 1967 @LENGTH@ 11
------------DEL SimpleName@@HOST_CONTROLLER @AT@ 1979 @LENGTH@ 15
---INS MethodInvocation@@context.isNormalServer() @TO@ ReturnStatement@@InfixExpression:context.isNormalServer() || context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 1911 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1911 @LENGTH@ 7
------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1919 @LENGTH@ 16


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1781 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1781 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1791 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1799 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1815 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1815 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1821 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1838 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1857 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1864 @LENGTH@ 4


INS VariableDeclarationStatement@@String parentName=FabricServiceImpl.getParentFromURI(agentUri); @TO@ MethodDeclaration@@public, void, MethodName:create, URI proxyUri, final URI agentUri, final String name, final String zooKeeperUrl, final boolean isClusterServer, final boolean debugAgent, final int number,  @AT@ 1526 @LENGTH@ 65
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String parentName=FabricServiceImpl.getParentFromURI(agentUri); @AT@ 1526 @LENGTH@ 6
---INS VariableDeclarationFragment@@parentName=FabricServiceImpl.getParentFromURI(agentUri) @TO@ VariableDeclarationStatement@@String parentName=FabricServiceImpl.getParentFromURI(agentUri); @AT@ 1533 @LENGTH@ 57
------INS SimpleName@@parentName @TO@ VariableDeclarationFragment@@parentName=FabricServiceImpl.getParentFromURI(agentUri) @AT@ 1533 @LENGTH@ 10
------INS MethodInvocation@@FabricServiceImpl.getParentFromURI(agentUri) @TO@ VariableDeclarationFragment@@parentName=FabricServiceImpl.getParentFromURI(agentUri) @AT@ 1546 @LENGTH@ 44
---------INS SimpleName@@Name:FabricServiceImpl @TO@ MethodInvocation@@FabricServiceImpl.getParentFromURI(agentUri) @AT@ 1546 @LENGTH@ 17
---------INS SimpleName@@MethodName:getParentFromURI:[agentUri] @TO@ MethodInvocation@@FabricServiceImpl.getParentFromURI(agentUri) @AT@ 1564 @LENGTH@ 26
------------INS SimpleName@@agentUri @TO@ SimpleName@@MethodName:getParentFromURI:[agentUri] @AT@ 1581 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:RootContextUtil.undeploy(managementClient.getControllerClient(),"root-context.war") @AT@ 2608 @LENGTH@ 85
---DEL MethodInvocation@@RootContextUtil.undeploy(managementClient.getControllerClient(),"root-context.war") @AT@ 2608 @LENGTH@ 84
------DEL SimpleName@@Name:RootContextUtil @AT@ 2608 @LENGTH@ 15
------DEL SimpleName@@MethodName:undeploy:[managementClient.getControllerClient(), "root-context.war"] @AT@ 2624 @LENGTH@ 68
---------DEL MethodInvocation@@managementClient.getControllerClient() @AT@ 2633 @LENGTH@ 38
------------DEL SimpleName@@Name:managementClient @AT@ 2633 @LENGTH@ 16
------------DEL SimpleName@@MethodName:getControllerClient:[] @AT@ 2650 @LENGTH@ 21
---------DEL StringLiteral@@"root-context.war" @AT@ 2673 @LENGTH@ 18


UPD VariableDeclarationStatement@@PersistenceUnitMetadataHolder result=new PersistenceUnitMetadataHolder().setPersistenceUnits(PUs); @TO@ PersistenceUnitMetadataHolder result=new PersistenceUnitMetadataHolder(PUs); @AT@ 5480 @LENGTH@ 100
---UPD VariableDeclarationFragment@@result=new PersistenceUnitMetadataHolder().setPersistenceUnits(PUs) @TO@ result=new PersistenceUnitMetadataHolder(PUs) @AT@ 5510 @LENGTH@ 69
------DEL MethodInvocation@@new PersistenceUnitMetadataHolder().setPersistenceUnits(PUs) @AT@ 5519 @LENGTH@ 60
---------DEL ClassInstanceCreation@@PersistenceUnitMetadataHolder[] @AT@ 5519 @LENGTH@ 35
---------DEL SimpleName@@MethodName:setPersistenceUnits:[PUs] @AT@ 5555 @LENGTH@ 24
------------DEL SimpleName@@PUs @AT@ 5575 @LENGTH@ 3
------INS ClassInstanceCreation@@PersistenceUnitMetadataHolder[PUs] @TO@ VariableDeclarationFragment@@result=new PersistenceUnitMetadataHolder().setPersistenceUnits(PUs) @AT@ 5519 @LENGTH@ 38
---------MOV New@@new @TO@ ClassInstanceCreation@@PersistenceUnitMetadataHolder[PUs] @AT@ 5519 @LENGTH@ 3
---------MOV SimpleType@@PersistenceUnitMetadataHolder @TO@ ClassInstanceCreation@@PersistenceUnitMetadataHolder[PUs] @AT@ 5523 @LENGTH@ 29
---------INS SimpleName@@PUs @TO@ ClassInstanceCreation@@PersistenceUnitMetadataHolder[PUs] @AT@ 5553 @LENGTH@ 3


UPD MethodDeclaration@@private, synchronized, void, MethodName:persistProperties, IOException,  @TO@ public, synchronized, void, MethodName:persistProperties, IOException,  @AT@ 4550 @LENGTH@ 2031
---UPD Modifier@@private @TO@ public @AT@ 4550 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:model.setEmptyObject() @TO@ MethodDeclaration@@protected, void, MethodName:populateModel, final ModelNode operation, final ModelNode model, OperationFailedException,  @AT@ 4339 @LENGTH@ 23
---INS MethodInvocation@@model.setEmptyObject() @TO@ ExpressionStatement@@MethodInvocation:model.setEmptyObject() @AT@ 4339 @LENGTH@ 22
------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.setEmptyObject() @AT@ 4339 @LENGTH@ 5
------INS SimpleName@@MethodName:setEmptyObject:[] @TO@ MethodInvocation@@model.setEmptyObject() @AT@ 4345 @LENGTH@ 16


UPD VariableDeclarationStatement@@final File policyDir=new File((File)null,"test-JBossPDP-Med-" + System.currentTimeMillis()); @TO@ final File policyDir=new File("test-JBossPDP-Med-" + System.currentTimeMillis()); @AT@ 7590 @LENGTH@ 96
---UPD VariableDeclarationFragment@@policyDir=new File((File)null,"test-JBossPDP-Med-" + System.currentTimeMillis()) @TO@ policyDir=new File("test-JBossPDP-Med-" + System.currentTimeMillis()) @AT@ 7601 @LENGTH@ 84
------UPD ClassInstanceCreation@@File[(File)null, "test-JBossPDP-Med-" + System.currentTimeMillis()] @TO@ File["test-JBossPDP-Med-" + System.currentTimeMillis()] @AT@ 7613 @LENGTH@ 72
---------DEL CastExpression@@(File)null @AT@ 7622 @LENGTH@ 11
------------DEL SimpleType@@File @AT@ 7623 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 7629 @LENGTH@ 4


UPD Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)));} @TO@ ThenBody:{  String indent="";  for (Container c=container; !c.isRoot(); c=c.getParent()) {    indent+="  ";  }  String marker="";  if (container.getId().equals(fabricService.getCurrentContainer().getId())) {    marker="*";  }  out.println(String.format(VERBOSE_FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)));} @AT@ 3895 @LENGTH@ 322
---DEL VariableDeclarationStatement@@String indent=container.isRoot() ? "" : "  "; @AT@ 3913 @LENGTH@ 47
------DEL VariableDeclarationFragment@@indent=container.isRoot() ? "" : "  " @AT@ 3920 @LENGTH@ 39
---------DEL ConditionalExpression@@container.isRoot() ? "" : "  " @AT@ 3929 @LENGTH@ 30
------------DEL MethodInvocation@@container.isRoot() @AT@ 3929 @LENGTH@ 18
------------DEL StringLiteral@@"" @AT@ 3950 @LENGTH@ 2
------------DEL StringLiteral@@"  " @AT@ 3955 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:out.println(String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container))) @TO@ MethodInvocation:out.println(String.format(VERBOSE_FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container))) @AT@ 3977 @LENGTH@ 226
------UPD MethodInvocation@@out.println(String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container))) @TO@ out.println(String.format(VERBOSE_FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container))) @AT@ 3977 @LENGTH@ 225
---------UPD SimpleName@@MethodName:println:[String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container))] @TO@ MethodName:println:[String.format(VERBOSE_FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container))] @AT@ 3981 @LENGTH@ 221
------------UPD MethodInvocation@@String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)) @TO@ String.format(VERBOSE_FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)) @AT@ 3989 @LENGTH@ 212
---------------UPD SimpleName@@MethodName:format:[VERBOSE_FORMAT, indent + container.getId(), container.getVersion().getName(), container.isAlive(), toString(container.getProfiles()), container.getSshUrl(), container.getJmxUrl(), status(container)] @TO@ MethodName:format:[VERBOSE_FORMAT, indent + container.getId() + marker, container.getVersion().getName(), container.isAlive(), toString(container.getProfiles()), container.getSshUrl(), container.getJmxUrl(), status(container)] @AT@ 3996 @LENGTH@ 205
------------------MOV MethodInvocation@@toString(container.getProfiles()) @TO@ SimpleName@@MethodName:format:[VERBOSE_FORMAT, indent + container.getId(), container.getVersion().getName(), container.isAlive(), toString(container.getProfiles()), container.getSshUrl(), container.getJmxUrl(), status(container)] @AT@ 3538 @LENGTH@ 33
------------------UPD InfixExpression@@indent + container.getId() @TO@ indent + container.getId() + marker @AT@ 4019 @LENGTH@ 26
---------------------INS SimpleName@@marker @TO@ InfixExpression@@indent + container.getId() @AT@ 4745 @LENGTH@ 6
---INS VariableDeclarationStatement@@String indent=""; @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)));} @AT@ 4265 @LENGTH@ 19
------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String indent=""; @AT@ 3913 @LENGTH@ 6
------INS VariableDeclarationFragment@@indent="" @TO@ VariableDeclarationStatement@@String indent=""; @AT@ 4272 @LENGTH@ 11
---------MOV SimpleName@@indent @TO@ VariableDeclarationFragment@@indent="" @AT@ 3920 @LENGTH@ 6
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@indent="" @AT@ 4281 @LENGTH@ 2
---INS ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)));} @AT@ 4301 @LENGTH@ 117
------INS VariableDeclarationExpression@@Container c=container @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 4306 @LENGTH@ 23
---------INS SimpleType@@Container @TO@ VariableDeclarationExpression@@Container c=container @AT@ 4306 @LENGTH@ 9
---------INS VariableDeclarationFragment@@c=container @TO@ VariableDeclarationExpression@@Container c=container @AT@ 4316 @LENGTH@ 13
------------INS SimpleName@@c @TO@ VariableDeclarationFragment@@c=container @AT@ 4316 @LENGTH@ 1
------------INS SimpleName@@container @TO@ VariableDeclarationFragment@@c=container @AT@ 4320 @LENGTH@ 9
------INS PrefixExpression@@!c.isRoot() @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 4331 @LENGTH@ 11
---------INS Operator@@! @TO@ PrefixExpression@@!c.isRoot() @AT@ 4331 @LENGTH@ 1
---------INS MethodInvocation@@c.isRoot() @TO@ PrefixExpression@@!c.isRoot() @AT@ 4332 @LENGTH@ 10
------------MOV SimpleName@@Name:container @TO@ MethodInvocation@@c.isRoot() @AT@ 3929 @LENGTH@ 9
------------MOV SimpleName@@MethodName:isRoot:[] @TO@ MethodInvocation@@c.isRoot() @AT@ 3939 @LENGTH@ 8
------INS Assignment@@c=c.getParent() @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 4344 @LENGTH@ 17
---------INS SimpleName@@c @TO@ Assignment@@c=c.getParent() @AT@ 4344 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@c=c.getParent() @AT@ 4345 @LENGTH@ 1
---------INS MethodInvocation@@c.getParent() @TO@ Assignment@@c=c.getParent() @AT@ 4348 @LENGTH@ 13
------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.getParent() @AT@ 4348 @LENGTH@ 1
------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@c.getParent() @AT@ 4350 @LENGTH@ 11
------INS ExpressionStatement@@Assignment:indent+="  " @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 4385 @LENGTH@ 15
---------INS Assignment@@indent+="  " @TO@ ExpressionStatement@@Assignment:indent+="  " @AT@ 4385 @LENGTH@ 14
------------INS SimpleName@@indent @TO@ Assignment@@indent+="  " @AT@ 4385 @LENGTH@ 6
------------INS Operator@@+= @TO@ Assignment@@indent+="  " @AT@ 4391 @LENGTH@ 2
------------INS StringLiteral@@"  " @TO@ Assignment@@indent+="  " @AT@ 4395 @LENGTH@ 4
---INS VariableDeclarationStatement@@String marker=""; @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)));} @AT@ 4493 @LENGTH@ 19
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String marker=""; @AT@ 4493 @LENGTH@ 6
------INS VariableDeclarationFragment@@marker="" @TO@ VariableDeclarationStatement@@String marker=""; @AT@ 4500 @LENGTH@ 11
---------INS SimpleName@@marker @TO@ VariableDeclarationFragment@@marker="" @AT@ 4500 @LENGTH@ 6
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@marker="" @AT@ 4509 @LENGTH@ 2
---INS IfStatement@@if (container.getId().equals(fabricService.getCurrentContainer().getId())) {  marker="*";} @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(VERBOSE_FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),container.getSshUrl(),container.getJmxUrl(),status(container)));} @AT@ 4529 @LENGTH@ 128
------INS MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @TO@ IfStatement@@if (container.getId().equals(fabricService.getCurrentContainer().getId())) {  marker="*";} @AT@ 4533 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @AT@ 4533 @LENGTH@ 17
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @AT@ 4533 @LENGTH@ 9
---------INS SimpleName@@MethodName:equals:[fabricService.getCurrentContainer().getId()] @TO@ MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @AT@ 4551 @LENGTH@ 51
------------INS MethodInvocation@@fabricService.getCurrentContainer().getId() @TO@ SimpleName@@MethodName:equals:[fabricService.getCurrentContainer().getId()] @AT@ 4558 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getCurrentContainer:[] @TO@ MethodInvocation@@fabricService.getCurrentContainer().getId() @AT@ 4558 @LENGTH@ 35
---------------INS SimpleName@@Name:fabricService @TO@ MethodInvocation@@fabricService.getCurrentContainer().getId() @AT@ 4558 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@fabricService.getCurrentContainer().getId() @AT@ 4594 @LENGTH@ 7
------INS Block@@ThenBody:{  marker="*";} @TO@ IfStatement@@if (container.getId().equals(fabricService.getCurrentContainer().getId())) {  marker="*";} @AT@ 4604 @LENGTH@ 53
---------INS ExpressionStatement@@Assignment:marker="*" @TO@ Block@@ThenBody:{  marker="*";} @AT@ 4626 @LENGTH@ 13
------------INS Assignment@@marker="*" @TO@ ExpressionStatement@@Assignment:marker="*" @AT@ 4626 @LENGTH@ 12
---------------INS SimpleName@@marker @TO@ Assignment@@marker="*" @AT@ 4626 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@marker="*" @AT@ 4632 @LENGTH@ 1
---------------INS StringLiteral@@"*" @TO@ Assignment@@marker="*" @AT@ 4635 @LENGTH@ 3


UPD MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @TO@ public, static, WebArchive, MethodName:deployment, Exception,  @AT@ 2394 @LENGTH@ 1115
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2418 @LENGTH@ 9
---DEL TryStatement@@try {  createSecurityDomain();} catch (Exception e) {} @AT@ 2517 @LENGTH@ 152
------DEL ExpressionStatement@@MethodInvocation:createSecurityDomain() @AT@ 2583 @LENGTH@ 23
------DEL CatchClause@@catch (Exception e) {} @AT@ 2617 @LENGTH@ 52
---------DEL SingleVariableDeclaration@@Exception e @AT@ 2624 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 2624 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 2634 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:createSecurityDomain() @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2557 @LENGTH@ 23
------MOV MethodInvocation@@MethodName:createSecurityDomain:[] @TO@ ExpressionStatement@@MethodInvocation:createSecurityDomain() @AT@ 2583 @LENGTH@ 22


INS MethodDeclaration@@public, K, MethodName:createIdentifier,  @TO@ TypeDeclaration@@[public, abstract]AbstractCache, [Cache<K,V>] @AT@ 1724 @LENGTH@ 88
---INS Modifier@@public @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 1724 @LENGTH@ 6
---INS SimpleType@@K @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 1731 @LENGTH@ 1
---INS SimpleName@@MethodName:createIdentifier @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 1733 @LENGTH@ 16
---INS ReturnStatement@@MethodInvocation:this.backingCache.createIdentifier() @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 1762 @LENGTH@ 44
------INS MethodInvocation@@this.backingCache.createIdentifier() @TO@ ReturnStatement@@MethodInvocation:this.backingCache.createIdentifier() @AT@ 1769 @LENGTH@ 36
---------INS FieldAccess@@this.backingCache @TO@ MethodInvocation@@this.backingCache.createIdentifier() @AT@ 1769 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ FieldAccess@@this.backingCache @AT@ 1769 @LENGTH@ 4
------------INS SimpleName@@backingCache @TO@ FieldAccess@@this.backingCache @AT@ 1774 @LENGTH@ 12
---------INS SimpleName@@MethodName:createIdentifier:[] @TO@ MethodInvocation@@this.backingCache.createIdentifier() @AT@ 1787 @LENGTH@ 18


UPD MethodDeclaration@@TransactionSynchronizationRegistry, MethodName:getTransactionSynchronizationRegistry,  @TO@ Value<TransactionSynchronizationRegistry>, MethodName:getTransactionSynchronizationRegistry,  @AT@ 1811 @LENGTH@ 40
---DEL SimpleType@@TransactionSynchronizationRegistry @AT@ 1776 @LENGTH@ 34
---INS ParameterizedType@@Value<TransactionSynchronizationRegistry> @TO@ MethodDeclaration@@TransactionSynchronizationRegistry, MethodName:getTransactionSynchronizationRegistry,  @AT@ 1817 @LENGTH@ 41
------INS SimpleType@@Value @TO@ ParameterizedType@@Value<TransactionSynchronizationRegistry> @AT@ 1817 @LENGTH@ 5
------INS SimpleType@@TransactionSynchronizationRegistry @TO@ ParameterizedType@@Value<TransactionSynchronizationRegistry> @AT@ 1823 @LENGTH@ 34


UPD FieldDeclaration@@SimpleAttributeDefinition, [QUEUE_LENGTH=new SimpleAttributeDefinitionBuilder(CommonAttributes.QUEUE_LENGTH,ModelType.INT,false).setValidator(new IntRangeValidator(0,Integer.MAX_VALUE,false,true)).setAllowExpression(true).build()] @TO@ SimpleAttributeDefinition, [QUEUE_LENGTH=new SimpleAttributeDefinitionBuilder(CommonAttributes.QUEUE_LENGTH,ModelType.INT,false).setValidator(new IntRangeValidator(0,Integer.MAX_VALUE,false,true)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build()] @AT@ 2805 @LENGTH@ 248
---UPD VariableDeclarationFragment@@QUEUE_LENGTH=new SimpleAttributeDefinitionBuilder(CommonAttributes.QUEUE_LENGTH,ModelType.INT,false).setValidator(new IntRangeValidator(0,Integer.MAX_VALUE,false,true)).setAllowExpression(true).build() @TO@ QUEUE_LENGTH=new SimpleAttributeDefinitionBuilder(CommonAttributes.QUEUE_LENGTH,ModelType.INT,false).setValidator(new IntRangeValidator(0,Integer.MAX_VALUE,false,true)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2831 @LENGTH@ 221
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(CommonAttributes.QUEUE_LENGTH,ModelType.INT,false).setValidator(new IntRangeValidator(0,Integer.MAX_VALUE,false,true)).setAllowExpression(true).build() @TO@ new SimpleAttributeDefinitionBuilder(CommonAttributes.QUEUE_LENGTH,ModelType.INT,false).setValidator(new IntRangeValidator(0,Integer.MAX_VALUE,false,true)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2846 @LENGTH@ 206
---------INS MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_ALL_SERVICES] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(CommonAttributes.QUEUE_LENGTH,ModelType.INT,false).setValidator(new IntRangeValidator(0,Integer.MAX_VALUE,false,true)).setAllowExpression(true).build() @AT@ 2846 @LENGTH@ 250
------------INS QualifiedName@@AttributeAccess.Flag.RESTART_ALL_SERVICES @TO@ MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_ALL_SERVICES] @AT@ 3054 @LENGTH@ 41
---------------INS QualifiedName@@AttributeAccess.Flag @TO@ QualifiedName@@AttributeAccess.Flag.RESTART_ALL_SERVICES @AT@ 3054 @LENGTH@ 20
------------------INS SimpleName@@AttributeAccess @TO@ QualifiedName@@AttributeAccess.Flag @AT@ 3054 @LENGTH@ 15
------------------INS SimpleName@@Flag @TO@ QualifiedName@@AttributeAccess.Flag @AT@ 3070 @LENGTH@ 4
---------------INS SimpleName@@RESTART_ALL_SERVICES @TO@ QualifiedName@@AttributeAccess.Flag.RESTART_ALL_SERVICES @AT@ 3075 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:attrTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @TO@ MethodInvocation:childrenTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @AT@ 16835 @LENGTH@ 62
---UPD MethodInvocation@@attrTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @TO@ childrenTable.addLine(new String[]{prop.getName(),"n/a","n/a"}) @AT@ 16835 @LENGTH@ 61
------UPD SimpleName@@Name:attrTable @TO@ Name:childrenTable @AT@ 16835 @LENGTH@ 9


UPD FieldDeclaration@@static, SimpleAttributeDefinition, [PARTICIPANT_STATUS=(new SimpleAttributeDefinitionBuilder("status",ModelType.STRING)).setAllowExpression(false).setAllowNull(true).setDefaultValue(new ModelNode()).setMeasurementUnit(MeasurementUnit.NONE).setValidator(new EnumValidator(ParticipantStatus.class,false,false)).build()] @TO@ static, SimpleAttributeDefinition, [PARTICIPANT_STATUS=(new SimpleAttributeDefinitionBuilder("status",ModelType.STRING)).setAllowExpression(false).setAllowNull(true).setDefaultValue(new ModelNode()).setMeasurementUnit(MeasurementUnit.NONE).setValidator(new EnumValidator(ParticipantStatus.class,true,false)).build()] @AT@ 4741 @LENGTH@ 397
---UPD VariableDeclarationFragment@@PARTICIPANT_STATUS=(new SimpleAttributeDefinitionBuilder("status",ModelType.STRING)).setAllowExpression(false).setAllowNull(true).setDefaultValue(new ModelNode()).setMeasurementUnit(MeasurementUnit.NONE).setValidator(new EnumValidator(ParticipantStatus.class,false,false)).build() @TO@ PARTICIPANT_STATUS=(new SimpleAttributeDefinitionBuilder("status",ModelType.STRING)).setAllowExpression(false).setAllowNull(true).setDefaultValue(new ModelNode()).setMeasurementUnit(MeasurementUnit.NONE).setValidator(new EnumValidator(ParticipantStatus.class,true,false)).build() @AT@ 4774 @LENGTH@ 363
------UPD MethodInvocation@@(new SimpleAttributeDefinitionBuilder("status",ModelType.STRING)).setAllowExpression(false).setAllowNull(true).setDefaultValue(new ModelNode()).setMeasurementUnit(MeasurementUnit.NONE).setValidator(new EnumValidator(ParticipantStatus.class,false,false)).build() @TO@ (new SimpleAttributeDefinitionBuilder("status",ModelType.STRING)).setAllowExpression(false).setAllowNull(true).setDefaultValue(new ModelNode()).setMeasurementUnit(MeasurementUnit.NONE).setValidator(new EnumValidator(ParticipantStatus.class,true,false)).build() @AT@ 4795 @LENGTH@ 342
---------UPD MethodInvocation@@MethodName:setValidator:[new EnumValidator(ParticipantStatus.class,false,false)] @TO@ MethodName:setValidator:[new EnumValidator(ParticipantStatus.class,true,false)] @AT@ 4795 @LENGTH@ 321
------------UPD ClassInstanceCreation@@EnumValidator[ParticipantStatus.class, false, false] @TO@ EnumValidator[ParticipantStatus.class, true, false] @AT@ 5059 @LENGTH@ 56
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 5102 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @TO@ MethodInvocation:sendLine("connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort(),false) @AT@ 3449 @LENGTH@ 101
---UPD MethodInvocation@@sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @TO@ sendLine("connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort(),false) @AT@ 3449 @LENGTH@ 100
------UPD SimpleName@@MethodName:sendLine:["connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(), false] @TO@ MethodName:sendLine:["connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort(), false] @AT@ 3449 @LENGTH@ 100
---------UPD InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @TO@ "connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort() @AT@ 3458 @LENGTH@ 83
------------UPD MethodInvocation@@ServerAddress.getServerAddress() @TO@ TestSuiteEnvironment.getServerAddress() @AT@ 3471 @LENGTH@ 32
---------------UPD SimpleName@@Name:ServerAddress @TO@ Name:TestSuiteEnvironment @AT@ 3471 @LENGTH@ 13
------------UPD MethodInvocation@@ServerAddress.getServerPort() @TO@ TestSuiteEnvironment.getServerPort() @AT@ 3512 @LENGTH@ 29
---------------UPD SimpleName@@Name:ServerAddress @TO@ Name:TestSuiteEnvironment @AT@ 3512 @LENGTH@ 13


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PromptPasswordState, ConsoleWrapper theConsole, StateValues stateValues,  @AT@ 1816 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1820 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1820 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1820 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1831 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1843 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1847 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1853 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 1867 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 1873 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1873 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1882 @LENGTH@ 20


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]EnumTypeConverter, [TypeConverter] @AT@ 2385 @LENGTH@ 205
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2385 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2396 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2398 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2411 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2411 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2411 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2417 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2420 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2426 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2426 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2435 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2445 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2445 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2452 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2469 @LENGTH@ 115
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2487 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2494 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2494 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2504 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2510 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2528 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2535 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2535 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2545 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2562 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2569 @LENGTH@ 4


UPD SwitchStatement@@switch (element) {case ARCHIVE_VALIDATION:{    list.add(parseArchiveValidation(reader,address));    break;  }case BEAN_VALIDATION:{  list.add(parseBeanValidation(reader,address));  break;}case DEFAULT_WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,true);final ModelNode bootstrapContextOperation=new ModelNode();bootstrapContextOperation.get(OP).set(ADD);final ModelNode bootStrapCOntextAddress=address.clone();bootStrapCOntextAddress.add(BOOTSTRAP_CONTEXT,DEFAULT_NAME);bootStrapCOntextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootStrapCOntextAddress);bootstrapContextOperation.get(WORKMANAGER).set(DEFAULT_NAME);bootstrapContextOperation.get(NAME).set(DEFAULT_NAME);list.add(bootstrapContextOperation);requiredElement.remove(Element.DEFAULT_WORKMANAGER);break;}case CACHED_CONNECTION_MANAGER:{list.add(parseCcm(reader,address));ccmAdded=true;break;}case WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,false);break;}case BOOTSTRAP_CONTEXTS:{ModelNode operation=parseBootstrapContexts(reader,address);if (operation != null) {list.add(operation);}break;}default :throw unexpectedElement(reader);} @TO@ switch (element) {case ARCHIVE_VALIDATION:{    list.add(parseArchiveValidation(reader,address));    break;  }case BEAN_VALIDATION:{  list.add(parseBeanValidation(reader,address));  break;}case DEFAULT_WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,true);final ModelNode bootstrapContextOperation=new ModelNode();bootstrapContextOperation.get(OP).set(ADD);final ModelNode bootStrapCOntextAddress=address.clone();bootStrapCOntextAddress.add(BOOTSTRAP_CONTEXT,DEFAULT_NAME);bootStrapCOntextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootStrapCOntextAddress);bootstrapContextOperation.get(WORKMANAGER).set(DEFAULT_NAME);bootstrapContextOperation.get(NAME).set(DEFAULT_NAME);list.add(bootstrapContextOperation);requiredElement.remove(Element.DEFAULT_WORKMANAGER);break;}case CACHED_CONNECTION_MANAGER:{list.add(parseCcm(reader,address));ccmAdded=true;break;}case WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,false);visited.remove(Element.WORKMANAGER);break;}case BOOTSTRAP_CONTEXTS:{parseBootstrapContexts(reader,address,list);break;}default :throw unexpectedElement(reader);} @AT@ 19789 @LENGTH@ 2452
---INS ExpressionStatement@@MethodInvocation:visited.remove(Element.WORKMANAGER) @TO@ SwitchStatement@@switch (element) {case ARCHIVE_VALIDATION:{    list.add(parseArchiveValidation(reader,address));    break;  }case BEAN_VALIDATION:{  list.add(parseBeanValidation(reader,address));  break;}case DEFAULT_WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,true);final ModelNode bootstrapContextOperation=new ModelNode();bootstrapContextOperation.get(OP).set(ADD);final ModelNode bootStrapCOntextAddress=address.clone();bootStrapCOntextAddress.add(BOOTSTRAP_CONTEXT,DEFAULT_NAME);bootStrapCOntextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootStrapCOntextAddress);bootstrapContextOperation.get(WORKMANAGER).set(DEFAULT_NAME);bootstrapContextOperation.get(NAME).set(DEFAULT_NAME);list.add(bootstrapContextOperation);requiredElement.remove(Element.DEFAULT_WORKMANAGER);break;}case CACHED_CONNECTION_MANAGER:{list.add(parseCcm(reader,address));ccmAdded=true;break;}case WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,false);break;}case BOOTSTRAP_CONTEXTS:{ModelNode operation=parseBootstrapContexts(reader,address);if (operation != null) {list.add(operation);}break;}default :throw unexpectedElement(reader);} @AT@ 21790 @LENGTH@ 36
------INS MethodInvocation@@visited.remove(Element.WORKMANAGER) @TO@ ExpressionStatement@@MethodInvocation:visited.remove(Element.WORKMANAGER) @AT@ 21790 @LENGTH@ 35
---------INS SimpleName@@Name:visited @TO@ MethodInvocation@@visited.remove(Element.WORKMANAGER) @AT@ 21790 @LENGTH@ 7
---------INS SimpleName@@MethodName:remove:[Element.WORKMANAGER] @TO@ MethodInvocation@@visited.remove(Element.WORKMANAGER) @AT@ 21798 @LENGTH@ 27
------------INS QualifiedName@@Element.WORKMANAGER @TO@ SimpleName@@MethodName:remove:[Element.WORKMANAGER] @AT@ 21805 @LENGTH@ 19
---------------INS SimpleName@@Element @TO@ QualifiedName@@Element.WORKMANAGER @AT@ 21805 @LENGTH@ 7
---------------INS SimpleName@@WORKMANAGER @TO@ QualifiedName@@Element.WORKMANAGER @AT@ 21813 @LENGTH@ 11
---DEL VariableDeclarationStatement@@ModelNode operation=parseBootstrapContexts(reader,address); @AT@ 21835 @LENGTH@ 62
------DEL SimpleType@@ModelNode @AT@ 21835 @LENGTH@ 9
------DEL VariableDeclarationFragment@@operation=parseBootstrapContexts(reader,address) @AT@ 21845 @LENGTH@ 51
---------DEL SimpleName@@operation @AT@ 21845 @LENGTH@ 9
---------DEL MethodInvocation@@parseBootstrapContexts(reader,address) @AT@ 21857 @LENGTH@ 39
---DEL IfStatement@@if (operation != null) {  list.add(operation);} @AT@ 21930 @LENGTH@ 115
------DEL InfixExpression@@operation != null @AT@ 21934 @LENGTH@ 17
---------DEL SimpleName@@operation @AT@ 21934 @LENGTH@ 9
---------DEL Operator@@!= @AT@ 21943 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 21947 @LENGTH@ 4
------DEL Block@@ThenBody:{  list.add(operation);} @AT@ 21953 @LENGTH@ 92
---------DEL ExpressionStatement@@MethodInvocation:list.add(operation) @AT@ 21991 @LENGTH@ 20
------------DEL MethodInvocation@@list.add(operation) @AT@ 21991 @LENGTH@ 19
---------------DEL SimpleName@@Name:list @AT@ 21991 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:add:[operation] @AT@ 21996 @LENGTH@ 14
------------------DEL SimpleName@@operation @AT@ 22000 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:parseBootstrapContexts(reader,address,list) @TO@ SwitchStatement@@switch (element) {case ARCHIVE_VALIDATION:{    list.add(parseArchiveValidation(reader,address));    break;  }case BEAN_VALIDATION:{  list.add(parseBeanValidation(reader,address));  break;}case DEFAULT_WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,true);final ModelNode bootstrapContextOperation=new ModelNode();bootstrapContextOperation.get(OP).set(ADD);final ModelNode bootStrapCOntextAddress=address.clone();bootStrapCOntextAddress.add(BOOTSTRAP_CONTEXT,DEFAULT_NAME);bootStrapCOntextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootStrapCOntextAddress);bootstrapContextOperation.get(WORKMANAGER).set(DEFAULT_NAME);bootstrapContextOperation.get(NAME).set(DEFAULT_NAME);list.add(bootstrapContextOperation);requiredElement.remove(Element.DEFAULT_WORKMANAGER);break;}case CACHED_CONNECTION_MANAGER:{list.add(parseCcm(reader,address));ccmAdded=true;break;}case WORKMANAGER:{parseWorkManager(reader,address,list,subsystem,false);break;}case BOOTSTRAP_CONTEXTS:{ModelNode operation=parseBootstrapContexts(reader,address);if (operation != null) {list.add(operation);}break;}default :throw unexpectedElement(reader);} @AT@ 21983 @LENGTH@ 46
------INS MethodInvocation@@parseBootstrapContexts(reader,address,list) @TO@ ExpressionStatement@@MethodInvocation:parseBootstrapContexts(reader,address,list) @AT@ 21983 @LENGTH@ 45
---------MOV SimpleName@@MethodName:parseBootstrapContexts:[reader, address] @TO@ MethodInvocation@@parseBootstrapContexts(reader,address,list) @AT@ 21857 @LENGTH@ 39
------------INS SimpleName@@list @TO@ SimpleName@@MethodName:parseBootstrapContexts:[reader, address] @AT@ 22023 @LENGTH@ 4


UPD ReturnStatement@@InfixExpression:"StrictMaxPoolConfig{" + "name=" + this.poolName + "maxPoolSize="+ maxPoolSize+ ", timeoutUnit="+ timeoutUnit+ ", timeout="+ timeout+ '}' @TO@ InfixExpression:"StrictMaxPoolConfig{" + "name=" + this.poolName + ", maxPoolSize="+ maxPoolSize+ ", timeoutUnit="+ timeoutUnit+ ", timeout="+ timeout+ '}' @AT@ 2632 @LENGTH@ 231
---UPD InfixExpression@@"StrictMaxPoolConfig{" + "name=" + this.poolName + "maxPoolSize="+ maxPoolSize+ ", timeoutUnit="+ timeoutUnit+ ", timeout="+ timeout+ '}' @TO@ "StrictMaxPoolConfig{" + "name=" + this.poolName + ", maxPoolSize="+ maxPoolSize+ ", timeoutUnit="+ timeoutUnit+ ", timeout="+ timeout+ '}' @AT@ 2639 @LENGTH@ 223
------UPD StringLiteral@@"maxPoolSize=" @TO@ ", maxPoolSize=" @AT@ 2722 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:realm=securityRealm.getName() @TO@ Assignment:realm=securityRealm != null ? securityRealm.getName() : null @AT@ 968 @LENGTH@ 32
---UPD Assignment@@realm=securityRealm.getName() @TO@ realm=securityRealm != null ? securityRealm.getName() : null @AT@ 968 @LENGTH@ 31
------INS ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @TO@ Assignment@@realm=securityRealm.getName() @AT@ 976 @LENGTH@ 54
---------INS InfixExpression@@securityRealm != null @TO@ ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @AT@ 976 @LENGTH@ 21
------------INS SimpleName@@securityRealm @TO@ InfixExpression@@securityRealm != null @AT@ 976 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@securityRealm != null @AT@ 989 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@securityRealm != null @AT@ 993 @LENGTH@ 4
---------INS MethodInvocation@@securityRealm.getName() @TO@ ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @AT@ 1000 @LENGTH@ 23
------------MOV SimpleName@@Name:securityRealm @TO@ MethodInvocation@@securityRealm.getName() @AT@ 976 @LENGTH@ 13
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@securityRealm.getName() @AT@ 990 @LENGTH@ 9
---------INS NullLiteral@@null @TO@ ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @AT@ 1026 @LENGTH@ 4
------DEL MethodInvocation@@securityRealm.getName() @AT@ 976 @LENGTH@ 23


UPD ExpressionStatement@@Assignment:lastChar=line.charAt(line.length() - 1) @TO@ Assignment:lastChar='\n' @AT@ 3957 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:context.addComponent("proerties",pc) @TO@ MethodInvocation:context.addComponent("properties",pc) @AT@ 1859 @LENGTH@ 38
---UPD MethodInvocation@@context.addComponent("proerties",pc) @TO@ context.addComponent("properties",pc) @AT@ 1859 @LENGTH@ 37
------UPD SimpleName@@MethodName:addComponent:["proerties", pc] @TO@ MethodName:addComponent:["properties", pc] @AT@ 1867 @LENGTH@ 29
---------UPD StringLiteral@@"proerties" @TO@ "properties" @AT@ 1880 @LENGTH@ 11


INS FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 17310 @LENGTH@ 77
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17310 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17317 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17324 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17330 @LENGTH@ 3
---INS VariableDeclarationFragment@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508 @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508] @AT@ 17334 @LENGTH@ 52
------INS SimpleName@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508 @AT@ 17334 @LENGTH@ 35
------INS NumberLiteral@@0x0508 @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_MDB_POOL_NAME_MERGE=0x0508 @AT@ 17380 @LENGTH@ 6


INS IfStatement@@if (exchange != null) {  return exchange.getContext().getTypeConverter().convertTo(String.class,exchange,bytes);} @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ChannelBuffer buffer, Exchange exchange,  @AT@ 1716 @LENGTH@ 135
---INS InfixExpression@@exchange != null @TO@ IfStatement@@if (exchange != null) {  return exchange.getContext().getTypeConverter().convertTo(String.class,exchange,bytes);} @AT@ 1720 @LENGTH@ 16
------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 1720 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 1728 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 1732 @LENGTH@ 4
---INS Block@@ThenBody:{  return exchange.getContext().getTypeConverter().convertTo(String.class,exchange,bytes);} @TO@ IfStatement@@if (exchange != null) {  return exchange.getContext().getTypeConverter().convertTo(String.class,exchange,bytes);} @AT@ 1738 @LENGTH@ 113
------MOV ReturnStatement@@MethodInvocation:exchange.getContext().getTypeConverter().convertTo(String.class,exchange,bytes) @TO@ Block@@ThenBody:{  return exchange.getContext().getTypeConverter().convertTo(String.class,exchange,bytes);} @AT@ 1716 @LENGTH@ 89


INS MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MongoQueryCreatorUnitTests,  @AT@ 7588 @LENGTH@ 406
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @AT@ 7588 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @AT@ 7595 @LENGTH@ 4
---INS SimpleName@@MethodName:createsOrQueryCorrectly @TO@ MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @AT@ 7600 @LENGTH@ 23
---INS VariableDeclarationStatement@@PartTree tree=new PartTree("findByFirstNameOrAge",Person.class); @TO@ MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @AT@ 7631 @LENGTH@ 67
------INS SimpleType@@PartTree @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByFirstNameOrAge",Person.class); @AT@ 7631 @LENGTH@ 8
------INS VariableDeclarationFragment@@tree=new PartTree("findByFirstNameOrAge",Person.class) @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByFirstNameOrAge",Person.class); @AT@ 7640 @LENGTH@ 57
---------INS SimpleName@@tree @TO@ VariableDeclarationFragment@@tree=new PartTree("findByFirstNameOrAge",Person.class) @AT@ 7640 @LENGTH@ 4
---------INS ClassInstanceCreation@@PartTree["findByFirstNameOrAge", Person.class] @TO@ VariableDeclarationFragment@@tree=new PartTree("findByFirstNameOrAge",Person.class) @AT@ 7647 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@PartTree["findByFirstNameOrAge", Person.class] @AT@ 7647 @LENGTH@ 3
------------INS SimpleType@@PartTree @TO@ ClassInstanceCreation@@PartTree["findByFirstNameOrAge", Person.class] @AT@ 7651 @LENGTH@ 8
------------INS StringLiteral@@"findByFirstNameOrAge" @TO@ ClassInstanceCreation@@PartTree["findByFirstNameOrAge", Person.class] @AT@ 7660 @LENGTH@ 22
------------INS TypeLiteral@@Person.class @TO@ ClassInstanceCreation@@PartTree["findByFirstNameOrAge", Person.class] @AT@ 7684 @LENGTH@ 12
---INS VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,"Dave",42),context); @TO@ MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @AT@ 7701 @LENGTH@ 101
------INS SimpleType@@MongoQueryCreator @TO@ VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,"Dave",42),context); @AT@ 7701 @LENGTH@ 17
------INS VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,"Dave",42),context) @TO@ VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,"Dave",42),context); @AT@ 7719 @LENGTH@ 82
---------INS SimpleName@@creator @TO@ VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,"Dave",42),context) @AT@ 7719 @LENGTH@ 7
---------INS ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,"Dave",42), context] @TO@ VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,"Dave",42),context) @AT@ 7729 @LENGTH@ 72
------------INS New@@new @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,"Dave",42), context] @AT@ 7729 @LENGTH@ 3
------------INS SimpleType@@MongoQueryCreator @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,"Dave",42), context] @AT@ 7733 @LENGTH@ 17
------------INS SimpleName@@tree @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,"Dave",42), context] @AT@ 7751 @LENGTH@ 4
------------INS MethodInvocation@@getAccessor(converter,"Dave",42) @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,"Dave",42), context] @AT@ 7757 @LENGTH@ 34
---------------INS SimpleName@@MethodName:getAccessor:[converter, "Dave", 42] @TO@ MethodInvocation@@getAccessor(converter,"Dave",42) @AT@ 7757 @LENGTH@ 34
------------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, "Dave", 42] @AT@ 7769 @LENGTH@ 9
------------------INS StringLiteral@@"Dave" @TO@ SimpleName@@MethodName:getAccessor:[converter, "Dave", 42] @AT@ 7780 @LENGTH@ 6
------------------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:getAccessor:[converter, "Dave", 42] @AT@ 7788 @LENGTH@ 2
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,"Dave",42), context] @AT@ 7793 @LENGTH@ 7
---INS VariableDeclarationStatement@@Query query=creator.createQuery(); @TO@ MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @AT@ 7806 @LENGTH@ 36
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=creator.createQuery(); @AT@ 7806 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=creator.createQuery() @TO@ VariableDeclarationStatement@@Query query=creator.createQuery(); @AT@ 7812 @LENGTH@ 29
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=creator.createQuery() @AT@ 7812 @LENGTH@ 5
---------INS MethodInvocation@@creator.createQuery() @TO@ VariableDeclarationFragment@@query=creator.createQuery() @AT@ 7820 @LENGTH@ 21
------------INS SimpleName@@Name:creator @TO@ MethodInvocation@@creator.createQuery() @AT@ 7820 @LENGTH@ 7
------------INS SimpleName@@MethodName:createQuery:[] @TO@ MethodInvocation@@creator.createQuery() @AT@ 7828 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject(),is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject())) @TO@ MethodDeclaration@@public, void, MethodName:createsOrQueryCorrectly,  @AT@ 7845 @LENGTH@ 146
------INS MethodInvocation@@assertThat(query.getQueryObject(),is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject(),is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject())) @AT@ 7845 @LENGTH@ 145
---------INS SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject())] @TO@ MethodInvocation@@assertThat(query.getQueryObject(),is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject())) @AT@ 7845 @LENGTH@ 145
------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject())] @AT@ 7856 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 7856 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 7862 @LENGTH@ 16
------------INS MethodInvocation@@is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject()) @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject())] @AT@ 7884 @LENGTH@ 105
---------------INS SimpleName@@MethodName:is:[query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject()] @TO@ MethodInvocation@@is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject()) @AT@ 7884 @LENGTH@ 105
------------------INS MethodInvocation@@query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject() @TO@ SimpleName@@MethodName:is:[query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject()] @AT@ 7887 @LENGTH@ 101
---------------------INS MethodInvocation@@MethodName:query:[new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))] @TO@ MethodInvocation@@query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject() @AT@ 7887 @LENGTH@ 84
------------------------INS MethodInvocation@@new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42)) @TO@ MethodInvocation@@MethodName:query:[new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))] @AT@ 7893 @LENGTH@ 77
---------------------------INS ClassInstanceCreation@@Criteria[] @TO@ MethodInvocation@@new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42)) @AT@ 7893 @LENGTH@ 14
------------------------------INS New@@new @TO@ ClassInstanceCreation@@Criteria[] @AT@ 7893 @LENGTH@ 3
------------------------------INS SimpleType@@Criteria @TO@ ClassInstanceCreation@@Criteria[] @AT@ 7897 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:orOperator:[where("firstName").is("Dave"), where("age").is(42)] @TO@ MethodInvocation@@new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42)) @AT@ 7908 @LENGTH@ 62
------------------------------INS MethodInvocation@@where("firstName").is("Dave") @TO@ SimpleName@@MethodName:orOperator:[where("firstName").is("Dave"), where("age").is(42)] @AT@ 7919 @LENGTH@ 29
---------------------------------INS MethodInvocation@@MethodName:where:["firstName"] @TO@ MethodInvocation@@where("firstName").is("Dave") @AT@ 7919 @LENGTH@ 18
------------------------------------INS StringLiteral@@"firstName" @TO@ MethodInvocation@@MethodName:where:["firstName"] @AT@ 7925 @LENGTH@ 11
---------------------------------INS SimpleName@@MethodName:is:["Dave"] @TO@ MethodInvocation@@where("firstName").is("Dave") @AT@ 7938 @LENGTH@ 10
------------------------------------INS StringLiteral@@"Dave" @TO@ SimpleName@@MethodName:is:["Dave"] @AT@ 7941 @LENGTH@ 6
------------------------------INS MethodInvocation@@where("age").is(42) @TO@ SimpleName@@MethodName:orOperator:[where("firstName").is("Dave"), where("age").is(42)] @AT@ 7950 @LENGTH@ 19
---------------------------------INS MethodInvocation@@MethodName:where:["age"] @TO@ MethodInvocation@@where("age").is(42) @AT@ 7950 @LENGTH@ 12
------------------------------------INS StringLiteral@@"age" @TO@ MethodInvocation@@MethodName:where:["age"] @AT@ 7956 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:is:[42] @TO@ MethodInvocation@@where("age").is(42) @AT@ 7963 @LENGTH@ 6
------------------------------------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:is:[42] @AT@ 7966 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject() @AT@ 7972 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:[query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject()] @TO@ MethodInvocation@@is(query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject()) @AT@ 7884 @LENGTH@ 105
------------------INS MethodInvocation@@query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject() @TO@ SimpleName@@MethodName:is:[query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject()] @AT@ 7887 @LENGTH@ 101
---------------------INS MethodInvocation@@MethodName:query:[new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))] @TO@ MethodInvocation@@query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject() @AT@ 7887 @LENGTH@ 84
------------------------INS MethodInvocation@@new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42)) @TO@ MethodInvocation@@MethodName:query:[new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))] @AT@ 7893 @LENGTH@ 77
---------------------------INS ClassInstanceCreation@@Criteria[] @TO@ MethodInvocation@@new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42)) @AT@ 7893 @LENGTH@ 14
------------------------------INS New@@new @TO@ ClassInstanceCreation@@Criteria[] @AT@ 7893 @LENGTH@ 3
------------------------------INS SimpleType@@Criteria @TO@ ClassInstanceCreation@@Criteria[] @AT@ 7897 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:orOperator:[where("firstName").is("Dave"), where("age").is(42)] @TO@ MethodInvocation@@new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42)) @AT@ 7908 @LENGTH@ 62
------------------------------INS MethodInvocation@@where("firstName").is("Dave") @TO@ SimpleName@@MethodName:orOperator:[where("firstName").is("Dave"), where("age").is(42)] @AT@ 7919 @LENGTH@ 29
---------------------------------INS MethodInvocation@@MethodName:where:["firstName"] @TO@ MethodInvocation@@where("firstName").is("Dave") @AT@ 7919 @LENGTH@ 18
------------------------------------INS StringLiteral@@"firstName" @TO@ MethodInvocation@@MethodName:where:["firstName"] @AT@ 7925 @LENGTH@ 11
---------------------------------INS SimpleName@@MethodName:is:["Dave"] @TO@ MethodInvocation@@where("firstName").is("Dave") @AT@ 7938 @LENGTH@ 10
------------------------------------INS StringLiteral@@"Dave" @TO@ SimpleName@@MethodName:is:["Dave"] @AT@ 7941 @LENGTH@ 6
------------------------------INS MethodInvocation@@where("age").is(42) @TO@ SimpleName@@MethodName:orOperator:[where("firstName").is("Dave"), where("age").is(42)] @AT@ 7950 @LENGTH@ 19
---------------------------------INS MethodInvocation@@MethodName:where:["age"] @TO@ MethodInvocation@@where("age").is(42) @AT@ 7950 @LENGTH@ 12
------------------------------------INS StringLiteral@@"age" @TO@ MethodInvocation@@MethodName:where:["age"] @AT@ 7956 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:is:[42] @TO@ MethodInvocation@@where("age").is(42) @AT@ 7963 @LENGTH@ 6
------------------------------------INS NumberLiteral@@42 @TO@ SimpleName@@MethodName:is:[42] @AT@ 7966 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query(new Criteria().orOperator(where("firstName").is("Dave"),where("age").is(42))).getQueryObject() @AT@ 7972 @LENGTH@ 16


INS TryStatement@@try {  instance=component.getCache().get(primaryKey);  if (instance.isRemoved()) {    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 2950 @LENGTH@ 709
---MOV IfStatement@@if (instance.isRemoved()) {  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ TryStatement@@try {  instance=component.getCache().get(primaryKey);  if (instance.isRemoved()) {    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @AT@ 2871 @LENGTH@ 139
---INS ExpressionStatement@@Assignment:instance=component.getCache().get(primaryKey) @TO@ TryStatement@@try {  instance=component.getCache().get(primaryKey);  if (instance.isRemoved()) {    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @AT@ 2976 @LENGTH@ 48
------INS Assignment@@instance=component.getCache().get(primaryKey) @TO@ ExpressionStatement@@Assignment:instance=component.getCache().get(primaryKey) @AT@ 2976 @LENGTH@ 47
---------MOV MethodInvocation@@component.getCache().get(primaryKey) @TO@ Assignment@@instance=component.getCache().get(primaryKey) @AT@ 2816 @LENGTH@ 36
---------INS SimpleName@@instance @TO@ Assignment@@instance=component.getCache().get(primaryKey) @AT@ 2976 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@instance=component.getCache().get(primaryKey) @AT@ 2984 @LENGTH@ 1
---INS CatchClause@@catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @TO@ TryStatement@@try {  instance=component.getCache().get(primaryKey);  if (instance.isRemoved()) {    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @AT@ 3214 @LENGTH@ 445
------INS SingleVariableDeclaration@@javax.ejb.NoSuchEntityException e @TO@ CatchClause@@catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @AT@ 3221 @LENGTH@ 33
---------INS SimpleType@@javax.ejb.NoSuchEntityException @TO@ SingleVariableDeclaration@@javax.ejb.NoSuchEntityException e @AT@ 3221 @LENGTH@ 31
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@javax.ejb.NoSuchEntityException e @AT@ 3253 @LENGTH@ 1
------INS IfStatement@@if (context.getPrivateData(TimerInvocationMarker.class) != null) {  throw new BeanRemovedException(e);} @TO@ CatchClause@@catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @AT@ 3465 @LENGTH@ 147
---------INS InfixExpression@@context.getPrivateData(TimerInvocationMarker.class) != null @TO@ IfStatement@@if (context.getPrivateData(TimerInvocationMarker.class) != null) {  throw new BeanRemovedException(e);} @AT@ 3469 @LENGTH@ 59
------------INS MethodInvocation@@context.getPrivateData(TimerInvocationMarker.class) @TO@ InfixExpression@@context.getPrivateData(TimerInvocationMarker.class) != null @AT@ 3469 @LENGTH@ 51
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPrivateData(TimerInvocationMarker.class) @AT@ 3469 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getPrivateData:[TimerInvocationMarker.class] @TO@ MethodInvocation@@context.getPrivateData(TimerInvocationMarker.class) @AT@ 3477 @LENGTH@ 43
------------------INS TypeLiteral@@TimerInvocationMarker.class @TO@ SimpleName@@MethodName:getPrivateData:[TimerInvocationMarker.class] @AT@ 3492 @LENGTH@ 27
------------INS Operator@@!= @TO@ InfixExpression@@context.getPrivateData(TimerInvocationMarker.class) != null @AT@ 3520 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@context.getPrivateData(TimerInvocationMarker.class) != null @AT@ 3524 @LENGTH@ 4
---------INS Block@@ThenBody:{  throw new BeanRemovedException(e);} @TO@ IfStatement@@if (context.getPrivateData(TimerInvocationMarker.class) != null) {  throw new BeanRemovedException(e);} @AT@ 3530 @LENGTH@ 82
------------INS ThrowStatement@@ClassInstanceCreation:new BeanRemovedException(e) @TO@ Block@@ThenBody:{  throw new BeanRemovedException(e);} @AT@ 3556 @LENGTH@ 34
---------------INS ClassInstanceCreation@@BeanRemovedException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new BeanRemovedException(e) @AT@ 3562 @LENGTH@ 27
------------------INS New@@new @TO@ ClassInstanceCreation@@BeanRemovedException[e] @AT@ 3562 @LENGTH@ 3
------------------INS SimpleType@@BeanRemovedException @TO@ ClassInstanceCreation@@BeanRemovedException[e] @AT@ 3566 @LENGTH@ 20
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@BeanRemovedException[e] @AT@ 3587 @LENGTH@ 1
------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (javax.ejb.NoSuchEntityException e) {  if (context.getPrivateData(TimerInvocationMarker.class) != null) {    throw new BeanRemovedException(e);  }  throw e;} @AT@ 3633 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 3639 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:ejbRemoteConnectorServiceBuilder.addDependency(RemotingServices.connectorServiceName(connectorName)) @TO@ MethodDeclaration@@ServiceController<EJBRemoteConnectorService>, MethodName:installRuntimeService, final OperationContext context, final ModelNode model, final ServiceVerificationHandler verificationHandler,  @AT@ 6061 @LENGTH@ 101
---INS MethodInvocation@@ejbRemoteConnectorServiceBuilder.addDependency(RemotingServices.connectorServiceName(connectorName)) @TO@ ExpressionStatement@@MethodInvocation:ejbRemoteConnectorServiceBuilder.addDependency(RemotingServices.connectorServiceName(connectorName)) @AT@ 6061 @LENGTH@ 100
------INS SimpleName@@Name:ejbRemoteConnectorServiceBuilder @TO@ MethodInvocation@@ejbRemoteConnectorServiceBuilder.addDependency(RemotingServices.connectorServiceName(connectorName)) @AT@ 6061 @LENGTH@ 32
------INS SimpleName@@MethodName:addDependency:[RemotingServices.connectorServiceName(connectorName)] @TO@ MethodInvocation@@ejbRemoteConnectorServiceBuilder.addDependency(RemotingServices.connectorServiceName(connectorName)) @AT@ 6094 @LENGTH@ 67
---------INS MethodInvocation@@RemotingServices.connectorServiceName(connectorName) @TO@ SimpleName@@MethodName:addDependency:[RemotingServices.connectorServiceName(connectorName)] @AT@ 6108 @LENGTH@ 52
------------INS SimpleName@@Name:RemotingServices @TO@ MethodInvocation@@RemotingServices.connectorServiceName(connectorName) @AT@ 6108 @LENGTH@ 16
------------INS SimpleName@@MethodName:connectorServiceName:[connectorName] @TO@ MethodInvocation@@RemotingServices.connectorServiceName(connectorName) @AT@ 6125 @LENGTH@ 35
---------------INS SimpleName@@connectorName @TO@ SimpleName@@MethodName:connectorServiceName:[connectorName] @AT@ 6146 @LENGTH@ 13


UPD FieldDeclaration@@private, static, Map<String,SecurityRealm>, [realms=new HashMap<String,SecurityRealm>()] @TO@ private, static, ConcurrentMap<String,SecurityRealm>, [realms=new ConcurrentHashMap<String,SecurityRealm>(2,0.75f,2)] @AT@ 1641 @LENGTH@ 88
---UPD ParameterizedType@@Map<String,SecurityRealm> @TO@ ConcurrentMap<String,SecurityRealm> @AT@ 1656 @LENGTH@ 26
------UPD SimpleType@@Map @TO@ ConcurrentMap @AT@ 1656 @LENGTH@ 3
---UPD VariableDeclarationFragment@@realms=new HashMap<String,SecurityRealm>() @TO@ realms=new ConcurrentHashMap<String,SecurityRealm>(2,0.75f,2) @AT@ 1683 @LENGTH@ 45
------UPD ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @TO@ ConcurrentHashMap<String,SecurityRealm>[2, 0.75f, 2] @AT@ 1692 @LENGTH@ 36
---------UPD ParameterizedType@@HashMap<String,SecurityRealm> @TO@ ConcurrentHashMap<String,SecurityRealm> @AT@ 1696 @LENGTH@ 30
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 1696 @LENGTH@ 7
---------INS NumberLiteral@@2 @TO@ ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @AT@ 1837 @LENGTH@ 1
---------INS NumberLiteral@@0.75f @TO@ ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @AT@ 1840 @LENGTH@ 5
---------INS NumberLiteral@@2 @TO@ ClassInstanceCreation@@HashMap<String,SecurityRealm>[] @AT@ 1847 @LENGTH@ 1


INS MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @TO@ TypeDeclaration@@[public]InfinispanSubsystemDescribe, [OperationStepHandler] @AT@ 13361 @LENGTH@ 610
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13361 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13369 @LENGTH@ 4
---INS SimpleName@@MethodName:addCacheStorePropertyCommands @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13374 @LENGTH@ 29
---INS SingleVariableDeclaration@@ModelNode store @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13404 @LENGTH@ 15
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode store @AT@ 13404 @LENGTH@ 9
------INS SimpleName@@store @TO@ SingleVariableDeclaration@@ModelNode store @AT@ 13414 @LENGTH@ 5
---INS SingleVariableDeclaration@@ModelNode address @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13421 @LENGTH@ 17
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode address @AT@ 13421 @LENGTH@ 9
------INS SimpleName@@address @TO@ SingleVariableDeclaration@@ModelNode address @AT@ 13431 @LENGTH@ 7
---INS SingleVariableDeclaration@@ModelNode result @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13440 @LENGTH@ 16
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode result @AT@ 13440 @LENGTH@ 9
------INS SimpleName@@result @TO@ SingleVariableDeclaration@@ModelNode result @AT@ 13450 @LENGTH@ 6
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13465 @LENGTH@ 24
---INS IfStatement@@if (store.hasDefined(ModelKeys.PROPERTY)) {  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());    AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};    result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));  }} @TO@ MethodDeclaration@@private, void, MethodName:addCacheStorePropertyCommands, ModelNode store, ModelNode address, ModelNode result, OperationFailedException,  @AT@ 13501 @LENGTH@ 464
------INS MethodInvocation@@store.hasDefined(ModelKeys.PROPERTY) @TO@ IfStatement@@if (store.hasDefined(ModelKeys.PROPERTY)) {  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());    AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};    result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));  }} @AT@ 13505 @LENGTH@ 36
---------INS SimpleName@@Name:store @TO@ MethodInvocation@@store.hasDefined(ModelKeys.PROPERTY) @AT@ 13505 @LENGTH@ 5
---------INS SimpleName@@MethodName:hasDefined:[ModelKeys.PROPERTY] @TO@ MethodInvocation@@store.hasDefined(ModelKeys.PROPERTY) @AT@ 13511 @LENGTH@ 30
------------INS QualifiedName@@ModelKeys.PROPERTY @TO@ SimpleName@@MethodName:hasDefined:[ModelKeys.PROPERTY] @AT@ 13522 @LENGTH@ 18
---------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.PROPERTY @AT@ 13522 @LENGTH@ 9
---------------INS SimpleName@@PROPERTY @TO@ QualifiedName@@ModelKeys.PROPERTY @AT@ 13532 @LENGTH@ 8
------INS Block@@ThenBody:{  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());    AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};    result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));  }} @TO@ IfStatement@@if (store.hasDefined(ModelKeys.PROPERTY)) {  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());    AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};    result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));  }} @AT@ 13543 @LENGTH@ 422
---------INS EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());  AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};  result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));} @TO@ Block@@ThenBody:{  for (  Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {    ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());    AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};    result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));  }} @AT@ 13558 @LENGTH@ 397
------------INS SingleVariableDeclaration@@Property property @TO@ EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());  AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};  result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));} @AT@ 13563 @LENGTH@ 17
---------------INS SimpleType@@Property @TO@ SingleVariableDeclaration@@Property property @AT@ 13563 @LENGTH@ 8
---------------INS SimpleName@@property @TO@ SingleVariableDeclaration@@Property property @AT@ 13572 @LENGTH@ 8
------------INS MethodInvocation@@store.get(ModelKeys.PROPERTY).asPropertyList() @TO@ EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());  AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};  result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));} @AT@ 13583 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:get:[ModelKeys.PROPERTY] @TO@ MethodInvocation@@store.get(ModelKeys.PROPERTY).asPropertyList() @AT@ 13583 @LENGTH@ 29
------------------INS QualifiedName@@ModelKeys.PROPERTY @TO@ MethodInvocation@@MethodName:get:[ModelKeys.PROPERTY] @AT@ 13593 @LENGTH@ 18
---------------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.PROPERTY @AT@ 13593 @LENGTH@ 9
---------------------INS SimpleName@@PROPERTY @TO@ QualifiedName@@ModelKeys.PROPERTY @AT@ 13603 @LENGTH@ 8
---------------INS SimpleName@@Name:store @TO@ MethodInvocation@@store.get(ModelKeys.PROPERTY).asPropertyList() @AT@ 13583 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@store.get(ModelKeys.PROPERTY).asPropertyList() @AT@ 13613 @LENGTH@ 16
------------INS VariableDeclarationStatement@@ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName()); @TO@ EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());  AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};  result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));} @AT@ 13650 @LENGTH@ 88
---------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName()); @AT@ 13650 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName()) @TO@ VariableDeclarationStatement@@ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName()); @AT@ 13660 @LENGTH@ 77
------------------INS SimpleName@@propertyAddress @TO@ VariableDeclarationFragment@@propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName()) @AT@ 13660 @LENGTH@ 15
------------------INS MethodInvocation@@address.clone().add(ModelKeys.PROPERTY,property.getName()) @TO@ VariableDeclarationFragment@@propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName()) @AT@ 13678 @LENGTH@ 59
---------------------INS MethodInvocation@@MethodName:clone:[] @TO@ MethodInvocation@@address.clone().add(ModelKeys.PROPERTY,property.getName()) @AT@ 13678 @LENGTH@ 15
---------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.clone().add(ModelKeys.PROPERTY,property.getName()) @AT@ 13678 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:add:[ModelKeys.PROPERTY, property.getName()] @TO@ MethodInvocation@@address.clone().add(ModelKeys.PROPERTY,property.getName()) @AT@ 13694 @LENGTH@ 43
------------------------INS QualifiedName@@ModelKeys.PROPERTY @TO@ SimpleName@@MethodName:add:[ModelKeys.PROPERTY, property.getName()] @AT@ 13698 @LENGTH@ 18
---------------------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.PROPERTY @AT@ 13698 @LENGTH@ 9
---------------------------INS SimpleName@@PROPERTY @TO@ QualifiedName@@ModelKeys.PROPERTY @AT@ 13708 @LENGTH@ 8
------------------------INS MethodInvocation@@property.getName() @TO@ SimpleName@@MethodName:add:[ModelKeys.PROPERTY, property.getName()] @AT@ 13718 @LENGTH@ 18
---------------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 13718 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 13727 @LENGTH@ 9
------------INS VariableDeclarationStatement@@AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE}; @TO@ EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());  AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};  result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));} @AT@ 13756 @LENGTH@ 60
---------------INS ArrayType@@AttributeDefinition[] @TO@ VariableDeclarationStatement@@AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE}; @AT@ 13756 @LENGTH@ 21
------------------INS SimpleType@@AttributeDefinition @TO@ ArrayType@@AttributeDefinition[] @AT@ 13756 @LENGTH@ 19
---------------INS VariableDeclarationFragment@@ATTRIBUTE={CommonAttributes.VALUE} @TO@ VariableDeclarationStatement@@AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE}; @AT@ 13778 @LENGTH@ 36
------------------INS SimpleName@@ATTRIBUTE @TO@ VariableDeclarationFragment@@ATTRIBUTE={CommonAttributes.VALUE} @AT@ 13778 @LENGTH@ 9
------------------INS ArrayInitializer@@{CommonAttributes.VALUE} @TO@ VariableDeclarationFragment@@ATTRIBUTE={CommonAttributes.VALUE} @AT@ 13790 @LENGTH@ 24
---------------------INS QualifiedName@@CommonAttributes.VALUE @TO@ ArrayInitializer@@{CommonAttributes.VALUE} @AT@ 13791 @LENGTH@ 22
------------------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.VALUE @AT@ 13791 @LENGTH@ 16
------------------------INS SimpleName@@VALUE @TO@ QualifiedName@@CommonAttributes.VALUE @AT@ 13808 @LENGTH@ 5
------------INS ExpressionStatement@@MethodInvocation:result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue())) @TO@ EnhancedForStatement@@for (Property property : store.get(ModelKeys.PROPERTY).asPropertyList()) {  ModelNode propertyAddress=address.clone().add(ModelKeys.PROPERTY,property.getName());  AttributeDefinition[] ATTRIBUTE={CommonAttributes.VALUE};  result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()));} @AT@ 13834 @LENGTH@ 106
---------------INS MethodInvocation@@result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue())) @TO@ ExpressionStatement@@MethodInvocation:result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue())) @AT@ 13834 @LENGTH@ 105
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue())) @AT@ 13834 @LENGTH@ 6
------------------INS SimpleName@@MethodName:add:[CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue())] @TO@ MethodInvocation@@result.add(CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue())) @AT@ 13841 @LENGTH@ 98
---------------------INS MethodInvocation@@CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()) @TO@ SimpleName@@MethodName:add:[CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue())] @AT@ 13845 @LENGTH@ 93
------------------------INS SimpleName@@Name:CacheConfigOperationHandlers @TO@ MethodInvocation@@CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()) @AT@ 13845 @LENGTH@ 28
------------------------INS SimpleName@@MethodName:createOperation:[ATTRIBUTE, propertyAddress, property.getValue()] @TO@ MethodInvocation@@CacheConfigOperationHandlers.createOperation(ATTRIBUTE,propertyAddress,property.getValue()) @AT@ 13874 @LENGTH@ 64
---------------------------INS SimpleName@@ATTRIBUTE @TO@ SimpleName@@MethodName:createOperation:[ATTRIBUTE, propertyAddress, property.getValue()] @AT@ 13890 @LENGTH@ 9
---------------------------INS SimpleName@@propertyAddress @TO@ SimpleName@@MethodName:createOperation:[ATTRIBUTE, propertyAddress, property.getValue()] @AT@ 13901 @LENGTH@ 15
---------------------------INS MethodInvocation@@property.getValue() @TO@ SimpleName@@MethodName:createOperation:[ATTRIBUTE, propertyAddress, property.getValue()] @AT@ 13918 @LENGTH@ 19
------------------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getValue() @AT@ 13918 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@property.getValue() @AT@ 13927 @LENGTH@ 10


INS IfStatement@@if (classOrInterfaceDetailsBuilder == null) {  return null;} @TO@ MethodDeclaration@@public, FieldMetadata, MethodName:getInvokedField,  @AT@ 6278 @LENGTH@ 65
---INS InfixExpression@@classOrInterfaceDetailsBuilder == null @TO@ IfStatement@@if (classOrInterfaceDetailsBuilder == null) {  return null;} @AT@ 6282 @LENGTH@ 38
------INS SimpleName@@classOrInterfaceDetailsBuilder @TO@ InfixExpression@@classOrInterfaceDetailsBuilder == null @AT@ 6282 @LENGTH@ 30
------INS Operator@@== @TO@ InfixExpression@@classOrInterfaceDetailsBuilder == null @AT@ 6312 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@classOrInterfaceDetailsBuilder == null @AT@ 6316 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (classOrInterfaceDetailsBuilder == null) {  return null;} @AT@ 6322 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 6327 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 6334 @LENGTH@ 4


INS MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ TypeDeclaration@@[public]UnitOfWorkProcessor, DelegateAsyncProcessor @AT@ 2926 @LENGTH@ 402
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2926 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2936 @LENGTH@ 4
---INS SimpleName@@MethodName:doStart @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2941 @LENGTH@ 7
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2958 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 3306 @LENGTH@ 16
------INS SuperMethodInvocation@@super.doStart() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doStart() @AT@ 3306 @LENGTH@ 15
---------INS SimpleName@@MethodName:doStart:[] @TO@ SuperMethodInvocation@@super.doStart() @AT@ 3312 @LENGTH@ 7
---MOV IfStatement@@if (routeContext != null) {  processor=new RouteContextProcessor(routeContext,processor);} @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 3990 @LENGTH@ 121


DEL MethodDeclaration@@public, void, MethodName:convertsUUIDToBinaryCorrectly,  @AT@ 1773 @LENGTH@ 335
---DEL Modifier@@public @AT@ 1773 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1780 @LENGTH@ 4
---DEL SimpleName@@MethodName:convertsUUIDToBinaryCorrectly @AT@ 1785 @LENGTH@ 29
---DEL VariableDeclarationStatement@@UUID uuid=UUID.randomUUID(); @AT@ 1822 @LENGTH@ 30
------DEL SimpleType@@UUID @AT@ 1822 @LENGTH@ 4
------DEL VariableDeclarationFragment@@uuid=UUID.randomUUID() @AT@ 1827 @LENGTH@ 24
---------DEL SimpleName@@uuid @AT@ 1827 @LENGTH@ 4
---------DEL MethodInvocation@@UUID.randomUUID() @AT@ 1834 @LENGTH@ 17
------------DEL SimpleName@@Name:UUID @AT@ 1834 @LENGTH@ 4
------------DEL SimpleName@@MethodName:randomUUID:[] @AT@ 1839 @LENGTH@ 12
---DEL VariableDeclarationStatement@@Binary binary=UUIDToBinaryConverter.INSTANCE.convert(uuid); @AT@ 1855 @LENGTH@ 61
------DEL SimpleType@@Binary @AT@ 1855 @LENGTH@ 6
------DEL VariableDeclarationFragment@@binary=UUIDToBinaryConverter.INSTANCE.convert(uuid) @AT@ 1862 @LENGTH@ 53
---------DEL SimpleName@@binary @AT@ 1862 @LENGTH@ 6
---------DEL MethodInvocation@@UUIDToBinaryConverter.INSTANCE.convert(uuid) @AT@ 1871 @LENGTH@ 44
------------DEL QualifiedName@@Name:UUIDToBinaryConverter.INSTANCE @AT@ 1871 @LENGTH@ 30
------------DEL SimpleName@@MethodName:convert:[uuid] @AT@ 1902 @LENGTH@ 13
---------------DEL SimpleName@@uuid @AT@ 1910 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:assertThat(binary,is(notNullValue())) @AT@ 1920 @LENGTH@ 39
------DEL MethodInvocation@@assertThat(binary,is(notNullValue())) @AT@ 1920 @LENGTH@ 38
---------DEL SimpleName@@MethodName:assertThat:[binary, is(notNullValue())] @AT@ 1920 @LENGTH@ 38
------------DEL SimpleName@@binary @AT@ 1931 @LENGTH@ 6
------------DEL MethodInvocation@@is(notNullValue()) @AT@ 1939 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:is:[notNullValue()] @AT@ 1939 @LENGTH@ 18
------------------DEL MethodInvocation@@MethodName:notNullValue:[] @AT@ 1942 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:assertThat(binary.getType(),is(BSON.B_UUID)) @AT@ 1962 @LENGTH@ 46
------DEL MethodInvocation@@assertThat(binary.getType(),is(BSON.B_UUID)) @AT@ 1962 @LENGTH@ 45
---------DEL SimpleName@@MethodName:assertThat:[binary.getType(), is(BSON.B_UUID)] @AT@ 1962 @LENGTH@ 45
------------DEL MethodInvocation@@binary.getType() @AT@ 1973 @LENGTH@ 16
---------------DEL SimpleName@@Name:binary @AT@ 1973 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getType:[] @AT@ 1980 @LENGTH@ 9
------------DEL MethodInvocation@@is(BSON.B_UUID) @AT@ 1991 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:is:[BSON.B_UUID] @AT@ 1991 @LENGTH@ 15
------------------DEL QualifiedName@@BSON.B_UUID @AT@ 1994 @LENGTH@ 11
---------------------DEL SimpleName@@BSON @AT@ 1994 @LENGTH@ 4
---------------------DEL SimpleName@@B_UUID @AT@ 1999 @LENGTH@ 6
---DEL VariableDeclarationStatement@@UUID result=BinaryToUUIDConverter.INSTANCE.convert(binary); @AT@ 2012 @LENGTH@ 61
------DEL SimpleType@@UUID @AT@ 2012 @LENGTH@ 4
------DEL VariableDeclarationFragment@@result=BinaryToUUIDConverter.INSTANCE.convert(binary) @AT@ 2017 @LENGTH@ 55
---------DEL SimpleName@@result @AT@ 2017 @LENGTH@ 6
---------DEL MethodInvocation@@BinaryToUUIDConverter.INSTANCE.convert(binary) @AT@ 2026 @LENGTH@ 46
------------DEL QualifiedName@@Name:BinaryToUUIDConverter.INSTANCE @AT@ 2026 @LENGTH@ 30
------------DEL SimpleName@@MethodName:convert:[binary] @AT@ 2057 @LENGTH@ 15
---------------DEL SimpleName@@binary @AT@ 2065 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:assertThat(result,is(uuid)) @AT@ 2076 @LENGTH@ 29
------DEL MethodInvocation@@assertThat(result,is(uuid)) @AT@ 2076 @LENGTH@ 28
---------DEL SimpleName@@MethodName:assertThat:[result, is(uuid)] @AT@ 2076 @LENGTH@ 28
------------DEL SimpleName@@result @AT@ 2087 @LENGTH@ 6
------------DEL MethodInvocation@@is(uuid) @AT@ 2095 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:is:[uuid] @AT@ 2095 @LENGTH@ 8
------------------DEL SimpleName@@uuid @AT@ 2098 @LENGTH@ 4


UPD EnhancedForStatement@@for (final String item : items) {  final VirtualFile classPathFile=resourceRoot.getRoot().getParent().getChild(item);  final VirtualFile topLevelClassPathFile=deploymentRoot.getRoot().getParent().getChild(item);  if (item.startsWith("/")) {    final ModuleIdentifier moduleIdentifier=externalModuleService.addExternalModule(item);    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleIdentifier);    ServerLogger.DEPLOYMENT_LOGGER.debugf("Resource %s added as external jar %s",classPathFile,resourceRoot.getRoot());  } else {    if (classPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,classPathFile);    } else     if (topLevelClassPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,topLevelClassPathFile);    } else {      ServerLogger.DEPLOYMENT_LOGGER.warn("Class Path entry " + item + " in "+ resourceRoot.getRoot()+ "  does not point to a valid jar for a Class-Path reference.");    }  }} @TO@ for (final String item : items) {  if (item.isEmpty()) {    continue;  }  final VirtualFile classPathFile=resourceRoot.getRoot().getParent().getChild(item);  final VirtualFile topLevelClassPathFile=deploymentRoot.getRoot().getParent().getChild(item);  if (item.startsWith("/")) {    final ModuleIdentifier moduleIdentifier=externalModuleService.addExternalModule(item);    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleIdentifier);    ServerLogger.DEPLOYMENT_LOGGER.debugf("Resource %s added as external jar %s",classPathFile,resourceRoot.getRoot());  } else {    if (classPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,classPathFile);    } else     if (topLevelClassPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,topLevelClassPathFile);    } else {      ServerLogger.DEPLOYMENT_LOGGER.warn("Class Path entry " + item + " in "+ resourceRoot.getRoot()+ "  does not point to a valid jar for a Class-Path reference.");    }  }} @AT@ 7054 @LENGTH@ 1630
---INS IfStatement@@if (item.isEmpty()) {  continue;} @TO@ EnhancedForStatement@@for (final String item : items) {  final VirtualFile classPathFile=resourceRoot.getRoot().getParent().getChild(item);  final VirtualFile topLevelClassPathFile=deploymentRoot.getRoot().getParent().getChild(item);  if (item.startsWith("/")) {    final ModuleIdentifier moduleIdentifier=externalModuleService.addExternalModule(item);    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleIdentifier);    ServerLogger.DEPLOYMENT_LOGGER.debugf("Resource %s added as external jar %s",classPathFile,resourceRoot.getRoot());  } else {    if (classPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,classPathFile);    } else     if (topLevelClassPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,topLevelClassPathFile);    } else {      ServerLogger.DEPLOYMENT_LOGGER.warn("Class Path entry " + item + " in "+ resourceRoot.getRoot()+ "  does not point to a valid jar for a Class-Path reference.");    }  }} @AT@ 7104 @LENGTH@ 68
------INS MethodInvocation@@item.isEmpty() @TO@ IfStatement@@if (item.isEmpty()) {  continue;} @AT@ 7107 @LENGTH@ 14
---------INS SimpleName@@Name:item @TO@ MethodInvocation@@item.isEmpty() @AT@ 7107 @LENGTH@ 4
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@item.isEmpty() @AT@ 7112 @LENGTH@ 9
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (item.isEmpty()) {  continue;} @AT@ 7123 @LENGTH@ 49
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 7145 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from("jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=1000").routeId("foo").noAutoStartup().to("mock:start").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    SendEmail send=exchange.getIn().getBody(SendEmail.class);
    if ("kaboom@beer.org".equals(send.getAddress())) {
      kaboom.incrementAndGet();
      throw new IllegalArgumentException("Forced");
    }
    if ("foo@beer.org".equals(send.getAddress())) {
      foo.incrementAndGet();
    }
 else     if ("bar@beer.org".equals(send.getAddress())) {
      bar.incrementAndGet();
    }
  }
}
).to("mock:result") @TO@ MethodInvocation:from("jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=100").routeId("foo").noAutoStartup().to("mock:start").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    SendEmail send=exchange.getIn().getBody(SendEmail.class);
    if ("kaboom@beer.org".equals(send.getAddress())) {
      kaboom.incrementAndGet();
      throw new IllegalArgumentException("Forced");
    }
    if ("foo@beer.org".equals(send.getAddress())) {
      foo.incrementAndGet();
    }
 else     if ("bar@beer.org".equals(send.getAddress())) {
      bar.incrementAndGet();
    }
  }
}
).to("mock:result") @AT@ 3362 @LENGTH@ 1106
---UPD MethodInvocation@@from("jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=1000").routeId("foo").noAutoStartup().to("mock:start").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    SendEmail send=exchange.getIn().getBody(SendEmail.class);
    if ("kaboom@beer.org".equals(send.getAddress())) {
      kaboom.incrementAndGet();
      throw new IllegalArgumentException("Forced");
    }
    if ("foo@beer.org".equals(send.getAddress())) {
      foo.incrementAndGet();
    }
 else     if ("bar@beer.org".equals(send.getAddress())) {
      bar.incrementAndGet();
    }
  }
}
).to("mock:result") @TO@ from("jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=100").routeId("foo").noAutoStartup().to("mock:start").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    SendEmail send=exchange.getIn().getBody(SendEmail.class);
    if ("kaboom@beer.org".equals(send.getAddress())) {
      kaboom.incrementAndGet();
      throw new IllegalArgumentException("Forced");
    }
    if ("foo@beer.org".equals(send.getAddress())) {
      foo.incrementAndGet();
    }
 else     if ("bar@beer.org".equals(send.getAddress())) {
      bar.incrementAndGet();
    }
  }
}
).to("mock:result") @AT@ 3362 @LENGTH@ 1105
------UPD MethodInvocation@@MethodName:from:["jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=1000"] @TO@ MethodName:from:["jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=100"] @AT@ 3362 @LENGTH@ 84
---------UPD InfixExpression@@"jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=1000" @TO@ "jpa://" + SendEmail.class.getName() + "?consumer.transacted=false&delay=100" @AT@ 3367 @LENGTH@ 78
------------UPD StringLiteral@@"?consumer.transacted=false&delay=1000" @TO@ "?consumer.transacted=false&delay=100" @AT@ 3406 @LENGTH@ 39


INS MethodDeclaration@@String, MethodName:argMasterAddress,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS")]ProcessMessages,  @AT@ 10632 @LENGTH@ 19
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:argMasterAddress,  @AT@ 10625 @LENGTH@ 6
---INS SimpleName@@MethodName:argMasterAddress @TO@ MethodDeclaration@@String, MethodName:argMasterAddress,  @AT@ 10632 @LENGTH@ 16


INS FieldDeclaration@@Object, [myObject] @TO@ TypeDeclaration@@Inner,  @AT@ 2499 @LENGTH@ 16
---INS SimpleType@@Object @TO@ FieldDeclaration@@Object, [myObject] @AT@ 2499 @LENGTH@ 6
---INS VariableDeclarationFragment@@myObject @TO@ FieldDeclaration@@Object, [myObject] @AT@ 2506 @LENGTH@ 8
------INS SimpleName@@myObject @TO@ VariableDeclarationFragment@@myObject @AT@ 2506 @LENGTH@ 8


UPD TypeDeclaration@@[@Stateless, @SecurityDomain("ejb3-tests"), public]InherritanceAnnOnlyCheckSFSB, ParentAnnOnlyCheck @TO@ [@Stateful, @SecurityDomain("ejb3-tests"), public]InherritanceAnnOnlyCheckSFSB, ParentAnnOnlyCheck[SimpleAuthorizationRemote] @AT@ 1243 @LENGTH@ 112
---UPD MarkerAnnotation@@@Stateless @TO@ @Stateful @AT@ 1243 @LENGTH@ 10
---INS SimpleType@@SimpleAuthorizationRemote @TO@ TypeDeclaration@@[@Stateless, @SecurityDomain("ejb3-tests"), public]InherritanceAnnOnlyCheckSFSB, ParentAnnOnlyCheck @AT@ 1362 @LENGTH@ 25


UPD IfStatement@@if (currentTx == null) {  this.cancelTimeout();  timerService.persistTimer(this);} else {  this.registerTimerCancellationWithTx(currentTx);} @TO@ if (timerService.transactionActive()) {  final Transaction currentTx=this.timerService.getTransaction();  this.registerTimerCancellationWithTx(currentTx);} else {  this.cancelTimeout();  timerService.persistTimer(this);} @AT@ 7627 @LENGTH@ 280
---INS MethodInvocation@@timerService.transactionActive() @TO@ IfStatement@@if (currentTx == null) {  this.cancelTimeout();  timerService.persistTimer(this);} else {  this.registerTimerCancellationWithTx(currentTx);} @AT@ 7492 @LENGTH@ 32
------INS SimpleName@@Name:timerService @TO@ MethodInvocation@@timerService.transactionActive() @AT@ 7492 @LENGTH@ 12
------INS SimpleName@@MethodName:transactionActive:[] @TO@ MethodInvocation@@timerService.transactionActive() @AT@ 7505 @LENGTH@ 19
---DEL InfixExpression@@currentTx == null @AT@ 7631 @LENGTH@ 17
------DEL SimpleName@@currentTx @AT@ 7631 @LENGTH@ 9
------DEL Operator@@== @AT@ 7640 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 7644 @LENGTH@ 4
---UPD Block@@ThenBody:{  this.cancelTimeout();  timerService.persistTimer(this);} @TO@ ElseBody:{  this.cancelTimeout();  timerService.persistTimer(this);} @AT@ 7650 @LENGTH@ 179
---MOV Block@@ThenBody:{  this.cancelTimeout();  timerService.persistTimer(this);} @TO@ IfStatement@@if (currentTx == null) {  this.cancelTimeout();  timerService.persistTimer(this);} else {  this.registerTimerCancellationWithTx(currentTx);} @AT@ 7650 @LENGTH@ 179
---UPD Block@@ElseBody:{  this.registerTimerCancellationWithTx(currentTx);} @TO@ ThenBody:{  final Transaction currentTx=this.timerService.getTransaction();  this.registerTimerCancellationWithTx(currentTx);} @AT@ 7835 @LENGTH@ 72
------MOV VariableDeclarationStatement@@final Transaction currentTx=this.timerService.getTransaction(); @TO@ Block@@ElseBody:{  this.registerTimerCancellationWithTx(currentTx);} @AT@ 7553 @LENGTH@ 65


UPD EnhancedForStatement@@for (final String item : items) {  final VirtualFile classPathFile=resourceRoot.getRoot().getParent().getChild(item);  final VirtualFile topLevelClassPathFile=deploymentRoot.getRoot().getParent().getChild(item);  if (item.startsWith("/")) {    final ModuleIdentifier moduleIdentifier=externalModuleService.addExternalModule(item);    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleIdentifier);    ServerLogger.DEPLOYMENT_LOGGER.debugf("Resource %s added as external jar %s",classPathFile,resourceRoot.getRoot());  } else {    if (classPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,classPathFile);    } else     if (topLevelClassPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,topLevelClassPathFile);    } else {      ServerLogger.DEPLOYMENT_LOGGER.warn("Class Path entry " + item + " in "+ resourceRoot.getRoot()+ "  does not point to a valid jar for a Class-Path reference.");    }  }} @TO@ for (final String item : items) {  if (item.isEmpty()) {    continue;  }  final VirtualFile classPathFile=resourceRoot.getRoot().getParent().getChild(item);  final VirtualFile topLevelClassPathFile=deploymentRoot.getRoot().getParent().getChild(item);  if (item.startsWith("/")) {    final ModuleIdentifier moduleIdentifier=externalModuleService.addExternalModule(item);    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleIdentifier);    ServerLogger.DEPLOYMENT_LOGGER.debugf("Resource %s added as external jar %s",classPathFile,resourceRoot.getRoot());  } else {    if (classPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,classPathFile);    } else     if (topLevelClassPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,topLevelClassPathFile);    } else {      ServerLogger.DEPLOYMENT_LOGGER.warn("Class Path entry " + item + " in "+ resourceRoot.getRoot()+ "  does not point to a valid jar for a Class-Path reference.");    }  }} @AT@ 7054 @LENGTH@ 1630
---INS IfStatement@@if (item.isEmpty()) {  continue;} @TO@ EnhancedForStatement@@for (final String item : items) {  final VirtualFile classPathFile=resourceRoot.getRoot().getParent().getChild(item);  final VirtualFile topLevelClassPathFile=deploymentRoot.getRoot().getParent().getChild(item);  if (item.startsWith("/")) {    final ModuleIdentifier moduleIdentifier=externalModuleService.addExternalModule(item);    target.addToAttachmentList(Attachments.CLASS_PATH_ENTRIES,moduleIdentifier);    ServerLogger.DEPLOYMENT_LOGGER.debugf("Resource %s added as external jar %s",classPathFile,resourceRoot.getRoot());  } else {    if (classPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,classPathFile);    } else     if (topLevelClassPathFile.exists()) {      handlingExistingClassPathEntry(deploymentUnit,resourceRoots,topLevelDeployment,topLevelRoot,subDeployments,additionalModules,existingAccessibleRoots,resourceRoot,target,topLevelClassPathFile);    } else {      ServerLogger.DEPLOYMENT_LOGGER.warn("Class Path entry " + item + " in "+ resourceRoot.getRoot()+ "  does not point to a valid jar for a Class-Path reference.");    }  }} @AT@ 7104 @LENGTH@ 68
------INS MethodInvocation@@item.isEmpty() @TO@ IfStatement@@if (item.isEmpty()) {  continue;} @AT@ 7107 @LENGTH@ 14
---------INS SimpleName@@Name:item @TO@ MethodInvocation@@item.isEmpty() @AT@ 7107 @LENGTH@ 4
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@item.isEmpty() @AT@ 7112 @LENGTH@ 9
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (item.isEmpty()) {  continue;} @AT@ 7123 @LENGTH@ 49
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 7145 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [DEFAULT_RESOURCE_ADAPTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME,ModelType.STRING,true).setAllowExpression(true).build()] @TO@ public, static, final, SimpleAttributeDefinition, [DEFAULT_RESOURCE_ADAPTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME,ModelType.STRING,true).setDefaultValue(new ModelNode().set("hornetq-ra")).setAllowExpression(true).build()] @AT@ 2583 @LENGTH@ 255
---UPD VariableDeclarationFragment@@DEFAULT_RESOURCE_ADAPTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME,ModelType.STRING,true).setAllowExpression(true).build() @TO@ DEFAULT_RESOURCE_ADAPTER_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME,ModelType.STRING,true).setDefaultValue(new ModelNode().set("hornetq-ra")).setAllowExpression(true).build() @AT@ 2629 @LENGTH@ 208
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME,ModelType.STRING,true).setAllowExpression(true).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME,ModelType.STRING,true).setDefaultValue(new ModelNode().set("hornetq-ra")).setAllowExpression(true).build() @AT@ 2673 @LENGTH@ 164
---------INS MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set("hornetq-ra")] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME,ModelType.STRING,true).setAllowExpression(true).build() @AT@ 2673 @LENGTH@ 182
------------INS MethodInvocation@@new ModelNode().set("hornetq-ra") @TO@ MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set("hornetq-ra")] @AT@ 2821 @LENGTH@ 33
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ MethodInvocation@@new ModelNode().set("hornetq-ra") @AT@ 2821 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2821 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2825 @LENGTH@ 9
---------------INS SimpleName@@MethodName:set:["hornetq-ra"] @TO@ MethodInvocation@@new ModelNode().set("hornetq-ra") @AT@ 2837 @LENGTH@ 17
------------------INS StringLiteral@@"hornetq-ra" @TO@ SimpleName@@MethodName:set:["hornetq-ra"] @AT@ 2841 @LENGTH@ 12


UPD VariableDeclarationStatement@@byte[] decoded=Base64Encoder.decode(encoded).getBytes(ContainerImpl.macRomanCharSet); @TO@ byte[] decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet); @AT@ 2789 @LENGTH@ 87
---UPD VariableDeclarationFragment@@decoded=Base64Encoder.decode(encoded).getBytes(ContainerImpl.macRomanCharSet) @TO@ decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet) @AT@ 2796 @LENGTH@ 79
------UPD MethodInvocation@@Base64Encoder.decode(encoded).getBytes(ContainerImpl.macRomanCharSet) @TO@ Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet) @AT@ 2806 @LENGTH@ 69
---------UPD SimpleName@@MethodName:getBytes:[ContainerImpl.macRomanCharSet] @TO@ MethodName:getBytes:[Base64Encoder.macRomanCharSet] @AT@ 2836 @LENGTH@ 39
------------UPD QualifiedName@@ContainerImpl.macRomanCharSet @TO@ Base64Encoder.macRomanCharSet @AT@ 2845 @LENGTH@ 29
---------------UPD SimpleName@@ContainerImpl @TO@ Base64Encoder @AT@ 2845 @LENGTH@ 13


INS FieldDeclaration@@ControllerLogger, [MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation")] @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]ControllerLogger, [BasicLogger] @AT@ 1950 @LENGTH@ 155
---INS SimpleType@@ControllerLogger @TO@ FieldDeclaration@@ControllerLogger, [MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation")] @AT@ 1950 @LENGTH@ 16
---INS VariableDeclarationFragment@@MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @TO@ FieldDeclaration@@ControllerLogger, [MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation")] @AT@ 1967 @LENGTH@ 137
------INS SimpleName@@MGMT_OP_LOGGER @TO@ VariableDeclarationFragment@@MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1967 @LENGTH@ 14
------INS MethodInvocation@@Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @TO@ VariableDeclarationFragment@@MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1984 @LENGTH@ 120
---------INS SimpleName@@Name:Logger @TO@ MethodInvocation@@Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1984 @LENGTH@ 6
---------INS SimpleName@@MethodName:getMessageLogger:[ControllerLogger.class, ControllerLogger.class.getPackage().getName() + ".management-operation"] @TO@ MethodInvocation@@Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1991 @LENGTH@ 113
------------INS TypeLiteral@@ControllerLogger.class @TO@ SimpleName@@MethodName:getMessageLogger:[ControllerLogger.class, ControllerLogger.class.getPackage().getName() + ".management-operation"] @AT@ 2008 @LENGTH@ 22
------------INS InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @TO@ SimpleName@@MethodName:getMessageLogger:[ControllerLogger.class, ControllerLogger.class.getPackage().getName() + ".management-operation"] @AT@ 2032 @LENGTH@ 71
---------------INS MethodInvocation@@ControllerLogger.class.getPackage().getName() @TO@ InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @AT@ 2032 @LENGTH@ 45
------------------INS MethodInvocation@@MethodName:getPackage:[] @TO@ MethodInvocation@@ControllerLogger.class.getPackage().getName() @AT@ 2032 @LENGTH@ 35
------------------INS TypeLiteral@@ControllerLogger.class @TO@ MethodInvocation@@ControllerLogger.class.getPackage().getName() @AT@ 2032 @LENGTH@ 22
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ControllerLogger.class.getPackage().getName() @AT@ 2068 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @AT@ 2077 @LENGTH@ 1
---------------INS StringLiteral@@".management-operation" @TO@ InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @AT@ 2080 @LENGTH@ 23


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ProxyInfo %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ProxyInfo %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2048 @LENGTH@ 1311
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2052 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2052 @LENGTH@ 17
------DEL Operator@@== @AT@ 2069 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2073 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2073 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2073 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2090 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2095 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyInfo();      ROOT_LOGGER.debugf("Mod_cluster ProxyInfo %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2052 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2052 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2052 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2060 @LENGTH@ 9


INS IfStatement@@if (policy != null && zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null) {  zookeeper.createOrSetWithParents(ZkPath.CONTAINER_RESOLVER.getPath(container),policy,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} @TO@ MethodDeclaration@@private, static, String, MethodName:getContainerResolutionPolicy, IZKClient zookeeper, String container, InterruptedException, KeeperException,  @AT@ 10674 @LENGTH@ 259
---INS InfixExpression@@policy != null && zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @TO@ IfStatement@@if (policy != null && zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null) {  zookeeper.createOrSetWithParents(ZkPath.CONTAINER_RESOLVER.getPath(container),policy,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} @AT@ 10678 @LENGTH@ 88
------INS InfixExpression@@policy != null @TO@ InfixExpression@@policy != null && zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @AT@ 10678 @LENGTH@ 14
---------INS SimpleName@@policy @TO@ InfixExpression@@policy != null @AT@ 10678 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@policy != null @AT@ 10684 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@policy != null @AT@ 10688 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@policy != null && zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @AT@ 10692 @LENGTH@ 2
------INS InfixExpression@@zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @TO@ InfixExpression@@policy != null && zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @AT@ 10696 @LENGTH@ 70
---------INS MethodInvocation@@zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) @TO@ InfixExpression@@zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @AT@ 10696 @LENGTH@ 62
------------INS SimpleName@@Name:zookeeper @TO@ MethodInvocation@@zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) @AT@ 10696 @LENGTH@ 9
------------INS SimpleName@@MethodName:exists:[ZkPath.CONTAINER_RESOLVER.getPath(container)] @TO@ MethodInvocation@@zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) @AT@ 10706 @LENGTH@ 52
---------------INS MethodInvocation@@ZkPath.CONTAINER_RESOLVER.getPath(container) @TO@ SimpleName@@MethodName:exists:[ZkPath.CONTAINER_RESOLVER.getPath(container)] @AT@ 10713 @LENGTH@ 44
------------------INS QualifiedName@@Name:ZkPath.CONTAINER_RESOLVER @TO@ MethodInvocation@@ZkPath.CONTAINER_RESOLVER.getPath(container) @AT@ 10713 @LENGTH@ 25
------------------INS SimpleName@@MethodName:getPath:[container] @TO@ MethodInvocation@@ZkPath.CONTAINER_RESOLVER.getPath(container) @AT@ 10739 @LENGTH@ 18
---------------------INS SimpleName@@container @TO@ SimpleName@@MethodName:getPath:[container] @AT@ 10747 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @AT@ 10758 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null @AT@ 10762 @LENGTH@ 4
---INS Block@@ThenBody:{  zookeeper.createOrSetWithParents(ZkPath.CONTAINER_RESOLVER.getPath(container),policy,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} @TO@ IfStatement@@if (policy != null && zookeeper.exists(ZkPath.CONTAINER_RESOLVER.getPath(container)) == null) {  zookeeper.createOrSetWithParents(ZkPath.CONTAINER_RESOLVER.getPath(container),policy,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} @AT@ 10768 @LENGTH@ 165
------MOV ExpressionStatement@@MethodInvocation:zookeeper.createOrSetWithParents(ZkPath.CONTAINER_RESOLVER.getPath(container),policy,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @TO@ Block@@ThenBody:{  zookeeper.createOrSetWithParents(ZkPath.CONTAINER_RESOLVER.getPath(container),policy,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} @AT@ 10674 @LENGTH@ 139


INS MethodDeclaration@@public, void, MethodName:transformsArraysCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), @SuppressWarnings("unused"), public]QueryMapperUnitTests,  @AT@ 5641 @LENGTH@ 250
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:transformsArraysCorrectly,  @AT@ 5641 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:transformsArraysCorrectly,  @AT@ 5648 @LENGTH@ 4
---INS SimpleName@@MethodName:transformsArraysCorrectly @TO@ MethodDeclaration@@public, void, MethodName:transformsArraysCorrectly,  @AT@ 5653 @LENGTH@ 25
---INS VariableDeclarationStatement@@Query query=new BasicQuery("{ 'tags' : { '$all' : [ 'green', 'orange']}}"); @TO@ MethodDeclaration@@public, void, MethodName:transformsArraysCorrectly,  @AT@ 5686 @LENGTH@ 77
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=new BasicQuery("{ 'tags' : { '$all' : [ 'green', 'orange']}}"); @AT@ 5686 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=new BasicQuery("{ 'tags' : { '$all' : [ 'green', 'orange']}}") @TO@ VariableDeclarationStatement@@Query query=new BasicQuery("{ 'tags' : { '$all' : [ 'green', 'orange']}}"); @AT@ 5692 @LENGTH@ 70
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new BasicQuery("{ 'tags' : { '$all' : [ 'green', 'orange']}}") @AT@ 5692 @LENGTH@ 5
---------INS ClassInstanceCreation@@BasicQuery["{ 'tags' : { '$all' : [ 'green', 'orange']}}"] @TO@ VariableDeclarationFragment@@query=new BasicQuery("{ 'tags' : { '$all' : [ 'green', 'orange']}}") @AT@ 5700 @LENGTH@ 62
------------INS New@@new @TO@ ClassInstanceCreation@@BasicQuery["{ 'tags' : { '$all' : [ 'green', 'orange']}}"] @AT@ 5700 @LENGTH@ 3
------------INS SimpleType@@BasicQuery @TO@ ClassInstanceCreation@@BasicQuery["{ 'tags' : { '$all' : [ 'green', 'orange']}}"] @AT@ 5704 @LENGTH@ 10
------------INS StringLiteral@@"{ 'tags' : { '$all' : [ 'green', 'orange']}}" @TO@ ClassInstanceCreation@@BasicQuery["{ 'tags' : { '$all' : [ 'green', 'orange']}}"] @AT@ 5715 @LENGTH@ 46
---INS VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),null); @TO@ MethodDeclaration@@public, void, MethodName:transformsArraysCorrectly,  @AT@ 5767 @LENGTH@ 71
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),null); @AT@ 5767 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),null) @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),null); @AT@ 5776 @LENGTH@ 61
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),null) @AT@ 5776 @LENGTH@ 6
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),null) @AT@ 5785 @LENGTH@ 52
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @AT@ 5785 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),null) @AT@ 5792 @LENGTH@ 45
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @AT@ 5808 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 5808 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 5814 @LENGTH@ 16
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), null] @AT@ 5832 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result,is(query.getQueryObject())) @TO@ MethodDeclaration@@public, void, MethodName:transformsArraysCorrectly,  @AT@ 5841 @LENGTH@ 47
------INS MethodInvocation@@assertThat(result,is(query.getQueryObject())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,is(query.getQueryObject())) @AT@ 5841 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertThat:[result, is(query.getQueryObject())] @TO@ MethodInvocation@@assertThat(result,is(query.getQueryObject())) @AT@ 5841 @LENGTH@ 46
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, is(query.getQueryObject())] @AT@ 5852 @LENGTH@ 6
------------INS MethodInvocation@@is(query.getQueryObject()) @TO@ SimpleName@@MethodName:assertThat:[result, is(query.getQueryObject())] @AT@ 5860 @LENGTH@ 26
---------------INS SimpleName@@MethodName:is:[query.getQueryObject()] @TO@ MethodInvocation@@is(query.getQueryObject()) @AT@ 5860 @LENGTH@ 26
------------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:is:[query.getQueryObject()] @AT@ 5863 @LENGTH@ 22
---------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 5863 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 5869 @LENGTH@ 16


UPD MethodDeclaration@@protected, SplitDefinition, MethodName:firstSplitterType, List<ProcessorDefinition> outputs,  @TO@ protected, SplitDefinition, MethodName:firstSplitterType, List<ProcessorDefinition<?>> outputs,  @AT@ 2737 @LENGTH@ 531
---UPD SingleVariableDeclaration@@List<ProcessorDefinition> outputs @TO@ List<ProcessorDefinition<?>> outputs @AT@ 2781 @LENGTH@ 33
------UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 2781 @LENGTH@ 25
---------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 2737 @LENGTH@ 22
------------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2757 @LENGTH@ 1
------------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2786 @LENGTH@ 19
---UPD EnhancedForStatement@@for (ProcessorDefinition processorType : outputs) {  if (processorType instanceof SplitDefinition) {    result=(SplitDefinition)processorType;  } else {    result=firstSplitterType(processorType.getOutputs());  }  if (result != null) {    break;  }} @TO@ for (ProcessorDefinition<?> processorType : outputs) {  if (processorType instanceof SplitDefinition) {    result=(SplitDefinition)processorType;  } else {    result=firstSplitterType(processorType.getOutputs());  }  if (result != null) {    break;  }} @AT@ 2874 @LENGTH@ 357
------UPD SingleVariableDeclaration@@ProcessorDefinition processorType @TO@ ProcessorDefinition<?> processorType @AT@ 2879 @LENGTH@ 33
---------INS ParameterizedType@@ProcessorDefinition<?> @TO@ SingleVariableDeclaration@@ProcessorDefinition processorType @AT@ 2833 @LENGTH@ 22
------------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2833 @LENGTH@ 19
------------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2853 @LENGTH@ 1
---------DEL SimpleType@@ProcessorDefinition @AT@ 2879 @LENGTH@ 19


DEL MethodDeclaration@@public, EJBLocalObject, MethodName:getEjbLocalObject,  @AT@ 4466 @LENGTH@ 115
---DEL Modifier@@public @AT@ 4466 @LENGTH@ 6
---DEL SimpleType@@EJBLocalObject @AT@ 4473 @LENGTH@ 14
---DEL SimpleName@@MethodName:getEjbLocalObject @AT@ 4488 @LENGTH@ 17
---DEL ReturnStatement@@MethodInvocation:getComponent().getEjbLocalObject(getPrimaryKey()) @AT@ 4518 @LENGTH@ 57
------DEL MethodInvocation@@getComponent().getEjbLocalObject(getPrimaryKey()) @AT@ 4525 @LENGTH@ 49
---------DEL MethodInvocation@@MethodName:getComponent:[] @AT@ 4525 @LENGTH@ 14
---------DEL SimpleName@@MethodName:getEjbLocalObject:[getPrimaryKey()] @AT@ 4540 @LENGTH@ 34
------------DEL MethodInvocation@@MethodName:getPrimaryKey:[] @AT@ 4558 @LENGTH@ 15


UPD Block@@ThenBody:{  logger.debug("    " + op.getJavaName() + "\n                "+ op.getIDLName());  final Method realSetmethod=translateMethod(deploymentReflectionIndex,setop);  beanMethodMap.put(op.getIDLName(),new SkeletonStrategy(realSetmethod));} @TO@ ThenBody:{  logger.debug("    " + setop.getJavaName() + "\n                "+ setop.getIDLName());  final Method realSetmethod=translateMethod(deploymentReflectionIndex,setop);  beanMethodMap.put(setop.getIDLName(),new SkeletonStrategy(realSetmethod));} @AT@ 10063 @LENGTH@ 453
---UPD ExpressionStatement@@MethodInvocation:logger.debug("    " + op.getJavaName() + "\n                "+ op.getIDLName()) @TO@ MethodInvocation:logger.debug("    " + setop.getJavaName() + "\n                "+ setop.getIDLName()) @AT@ 10081 @LENGTH@ 81
------UPD MethodInvocation@@logger.debug("    " + op.getJavaName() + "\n                "+ op.getIDLName()) @TO@ logger.debug("    " + setop.getJavaName() + "\n                "+ setop.getIDLName()) @AT@ 10081 @LENGTH@ 80
---------UPD SimpleName@@MethodName:debug:["    " + op.getJavaName() + "\n                "+ op.getIDLName()] @TO@ MethodName:debug:["    " + setop.getJavaName() + "\n                "+ setop.getIDLName()] @AT@ 10088 @LENGTH@ 73
------------UPD InfixExpression@@"    " + op.getJavaName() + "\n                "+ op.getIDLName() @TO@ "    " + setop.getJavaName() + "\n                "+ setop.getIDLName() @AT@ 10094 @LENGTH@ 66
---------------UPD MethodInvocation@@op.getJavaName() @TO@ setop.getJavaName() @AT@ 10103 @LENGTH@ 16
------------------UPD SimpleName@@Name:op @TO@ Name:setop @AT@ 10103 @LENGTH@ 2
---------------UPD MethodInvocation@@op.getIDLName() @TO@ setop.getIDLName() @AT@ 10145 @LENGTH@ 15
------------------UPD SimpleName@@Name:op @TO@ Name:setop @AT@ 10145 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:beanMethodMap.put(op.getIDLName(),new SkeletonStrategy(realSetmethod)) @TO@ MethodInvocation:beanMethodMap.put(setop.getIDLName(),new SkeletonStrategy(realSetmethod)) @AT@ 10430 @LENGTH@ 72
------UPD MethodInvocation@@beanMethodMap.put(op.getIDLName(),new SkeletonStrategy(realSetmethod)) @TO@ beanMethodMap.put(setop.getIDLName(),new SkeletonStrategy(realSetmethod)) @AT@ 10430 @LENGTH@ 71
---------UPD SimpleName@@MethodName:put:[op.getIDLName(), new SkeletonStrategy(realSetmethod)] @TO@ MethodName:put:[setop.getIDLName(), new SkeletonStrategy(realSetmethod)] @AT@ 10444 @LENGTH@ 57
------------UPD MethodInvocation@@op.getIDLName() @TO@ setop.getIDLName() @AT@ 10448 @LENGTH@ 15
---------------UPD SimpleName@@Name:op @TO@ Name:setop @AT@ 10448 @LENGTH@ 2


UPD MethodDeclaration@@void, MethodName:warnIgnoringSocketBindingGroupIgnore, Location location,  @TO@ void, MethodName:warnIgnoringSocketBindingGroupInclude, Location location,  @AT@ 3038 @LENGTH@ 56
---UPD SimpleName@@MethodName:warnIgnoringSocketBindingGroupIgnore @TO@ MethodName:warnIgnoringSocketBindingGroupInclude @AT@ 3038 @LENGTH@ 36


INS MethodDeclaration@@String, MethodName:argMasterAddress,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS")]ProcessMessages,  @AT@ 10632 @LENGTH@ 19
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:argMasterAddress,  @AT@ 10625 @LENGTH@ 6
---INS SimpleName@@MethodName:argMasterAddress @TO@ MethodDeclaration@@String, MethodName:argMasterAddress,  @AT@ 10632 @LENGTH@ 16


UPD VariableDeclarationStatement@@final InterceptorFactory interceptorFactory=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  Component component,  InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
; @TO@ final InterceptorFactory interceptorFactory=StatefulSessionSynchronizationInterceptor.FACTORY; @AT@ 6509 @LENGTH@ 347
---UPD VariableDeclarationFragment@@interceptorFactory=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  Component component,  InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
 @TO@ interceptorFactory=StatefulSessionSynchronizationInterceptor.FACTORY @AT@ 6534 @LENGTH@ 321
------DEL ClassInstanceCreation@@ComponentInstanceInterceptorFactory[] @AT@ 6555 @LENGTH@ 300
---------DEL New@@new @AT@ 6555 @LENGTH@ 3
---------DEL SimpleType@@ComponentInstanceInterceptorFactory @AT@ 6559 @LENGTH@ 35
---------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 6597 @LENGTH@ 258
------------DEL MethodDeclaration@@protected, Interceptor, MethodName:create, Component component, InterceptorFactoryContext context,  @AT@ 6649 @LENGTH@ 188
---------------DEL Modifier@@protected @AT@ 6649 @LENGTH@ 9
---------------DEL SimpleType@@Interceptor @AT@ 6659 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:create @AT@ 6671 @LENGTH@ 6
---------------DEL SingleVariableDeclaration@@Component component @AT@ 6678 @LENGTH@ 19
------------------DEL SimpleType@@Component @AT@ 6678 @LENGTH@ 9
------------------DEL SimpleName@@component @AT@ 6688 @LENGTH@ 9
---------------DEL SingleVariableDeclaration@@InterceptorFactoryContext context @AT@ 6699 @LENGTH@ 33
------------------DEL SimpleType@@InterceptorFactoryContext @AT@ 6699 @LENGTH@ 25
------------------DEL SimpleName@@context @AT@ 6725 @LENGTH@ 7
---------------DEL ReturnStatement@@ClassInstanceCreation:new StatefulSessionSynchronizationInterceptor() @AT@ 6760 @LENGTH@ 55
------------------DEL ClassInstanceCreation@@StatefulSessionSynchronizationInterceptor[] @AT@ 6767 @LENGTH@ 47
---------------------DEL New@@new @AT@ 6767 @LENGTH@ 3
---------------------DEL SimpleType@@StatefulSessionSynchronizationInterceptor @AT@ 6771 @LENGTH@ 41
------INS QualifiedName@@StatefulSessionSynchronizationInterceptor.FACTORY @TO@ VariableDeclarationFragment@@interceptorFactory=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  Component component,  InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
 @AT@ 6555 @LENGTH@ 49
---------INS SimpleName@@StatefulSessionSynchronizationInterceptor @TO@ QualifiedName@@StatefulSessionSynchronizationInterceptor.FACTORY @AT@ 6555 @LENGTH@ 41
---------INS SimpleName@@FACTORY @TO@ QualifiedName@@StatefulSessionSynchronizationInterceptor.FACTORY @AT@ 6597 @LENGTH@ 7


INS IfStatement@@if (maxRequestsExpression == null) {  throw new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this);} @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, RouteContext routeContext, Exception,  @AT@ 3447 @LENGTH@ 157
---INS InfixExpression@@maxRequestsExpression == null @TO@ IfStatement@@if (maxRequestsExpression == null) {  throw new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this);} @AT@ 3451 @LENGTH@ 29
------INS SimpleName@@maxRequestsExpression @TO@ InfixExpression@@maxRequestsExpression == null @AT@ 3451 @LENGTH@ 21
------INS Operator@@== @TO@ InfixExpression@@maxRequestsExpression == null @AT@ 3472 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@maxRequestsExpression == null @AT@ 3476 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this);} @TO@ IfStatement@@if (maxRequestsExpression == null) {  throw new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this);} @AT@ 3482 @LENGTH@ 122
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this);} @AT@ 3496 @LENGTH@ 98
---------INS ClassInstanceCreation@@IllegalArgumentException["MaxRequestsPerPeriod expression must be provided on " + this] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("MaxRequestsPerPeriod expression must be provided on " + this) @AT@ 3502 @LENGTH@ 91
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["MaxRequestsPerPeriod expression must be provided on " + this] @AT@ 3502 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["MaxRequestsPerPeriod expression must be provided on " + this] @AT@ 3506 @LENGTH@ 24
------------INS InfixExpression@@"MaxRequestsPerPeriod expression must be provided on " + this @TO@ ClassInstanceCreation@@IllegalArgumentException["MaxRequestsPerPeriod expression must be provided on " + this] @AT@ 3531 @LENGTH@ 61
---------------INS StringLiteral@@"MaxRequestsPerPeriod expression must be provided on " @TO@ InfixExpression@@"MaxRequestsPerPeriod expression must be provided on " + this @AT@ 3531 @LENGTH@ 54
---------------INS Operator@@+ @TO@ InfixExpression@@"MaxRequestsPerPeriod expression must be provided on " + this @AT@ 3585 @LENGTH@ 1
---------------INS ThisExpression@@this @TO@ InfixExpression@@"MaxRequestsPerPeriod expression must be provided on " + this @AT@ 3588 @LENGTH@ 4


UPD TypeDeclaration@@[public]CreateSshContainerMetadata, CreateContainerBasicMetadata @TO@ [public]CreateSshContainerMetadata, CreateContainerBasicMetadata<CreateSshContainerOptions> @AT@ 661 @LENGTH@ 81
---INS ParameterizedType@@CreateContainerBasicMetadata<CreateSshContainerOptions> @TO@ TypeDeclaration@@[public]CreateSshContainerMetadata, CreateContainerBasicMetadata @AT@ 709 @LENGTH@ 55
------INS SimpleType@@CreateContainerBasicMetadata @TO@ ParameterizedType@@CreateContainerBasicMetadata<CreateSshContainerOptions> @AT@ 709 @LENGTH@ 28
------INS SimpleType@@CreateSshContainerOptions @TO@ ParameterizedType@@CreateContainerBasicMetadata<CreateSshContainerOptions> @AT@ 738 @LENGTH@ 25
---DEL SimpleType@@CreateContainerBasicMetadata @AT@ 709 @LENGTH@ 28


DEL MethodDeclaration@@public, String, MethodName:access, RemoteException,  @AT@ 1327 @LENGTH@ 46
---DEL Modifier@@public @AT@ 1327 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1334 @LENGTH@ 6
---DEL SimpleName@@MethodName:access @AT@ 1341 @LENGTH@ 6
---DEL SimpleType@@RemoteException @AT@ 1357 @LENGTH@ 15


UPD ReturnStatement@@StringLiteral:"create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255), PROCESSED BOOLEAN DEFAULT false)" @TO@ StringLiteral:"create table ACCOUNT (ACC_ID INTEGER, ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255), PROCESSED BOOLEAN DEFAULT false)" @AT@ 1204 @LENGTH@ 163
---UPD StringLiteral@@"create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255), PROCESSED BOOLEAN DEFAULT false)" @TO@ "create table ACCOUNT (ACC_ID INTEGER, ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255), PROCESSED BOOLEAN DEFAULT false)" @AT@ 1211 @LENGTH@ 155


UPD ExpressionStatement@@MethodInvocation:zooKeeper.setData(requirementsJsonPath,json) @TO@ MethodInvocation:zooKeeper.createOrSetWithParents(requirementsJsonPath,json,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @AT@ 22695 @LENGTH@ 46
---UPD MethodInvocation@@zooKeeper.setData(requirementsJsonPath,json) @TO@ zooKeeper.createOrSetWithParents(requirementsJsonPath,json,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @AT@ 22695 @LENGTH@ 45
------UPD SimpleName@@MethodName:setData:[requirementsJsonPath, json] @TO@ MethodName:createOrSetWithParents:[requirementsJsonPath, json, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @AT@ 22705 @LENGTH@ 35
---------INS QualifiedName@@ZooDefs.Ids.OPEN_ACL_UNSAFE @TO@ SimpleName@@MethodName:setData:[requirementsJsonPath, json] @AT@ 22756 @LENGTH@ 27
------------INS QualifiedName@@ZooDefs.Ids @TO@ QualifiedName@@ZooDefs.Ids.OPEN_ACL_UNSAFE @AT@ 22756 @LENGTH@ 11
---------------INS SimpleName@@ZooDefs @TO@ QualifiedName@@ZooDefs.Ids @AT@ 22756 @LENGTH@ 7
---------------INS SimpleName@@Ids @TO@ QualifiedName@@ZooDefs.Ids @AT@ 22764 @LENGTH@ 3
------------INS SimpleName@@OPEN_ACL_UNSAFE @TO@ QualifiedName@@ZooDefs.Ids.OPEN_ACL_UNSAFE @AT@ 22768 @LENGTH@ 15
---------INS QualifiedName@@CreateMode.PERSISTENT @TO@ SimpleName@@MethodName:setData:[requirementsJsonPath, json] @AT@ 22785 @LENGTH@ 21
------------INS SimpleName@@CreateMode @TO@ QualifiedName@@CreateMode.PERSISTENT @AT@ 22785 @LENGTH@ 10
------------INS SimpleName@@PERSISTENT @TO@ QualifiedName@@CreateMode.PERSISTENT @AT@ 22796 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR))) @TO@ MethodInvocation:MGMT_OP_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 6194 @LENGTH@ 278
---UPD MethodInvocation@@ROOT_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR))) @TO@ MGMT_OP_LOGGER.errorRevertingOperation(e,getClass().getSimpleName(),operation.require(ModelDescriptionConstants.OP).asString(),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 6194 @LENGTH@ 277
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 6194 @LENGTH@ 11
------UPD SimpleName@@MethodName:errorRevertingOperation:[e, getClass().getSimpleName(), operation.require(ModelDescriptionConstants.OP).asString(), PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR))] @TO@ MethodName:errorRevertingOperation:[e, getClass().getSimpleName(), operation.require(ModelDescriptionConstants.OP).asString(), PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))] @AT@ 6206 @LENGTH@ 265
---------UPD MethodInvocation@@PathAddress.pathAddress(operation.require(ModelDescriptionConstants.OP_ADDR)) @TO@ PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)) @AT@ 6393 @LENGTH@ 77
------------UPD SimpleName@@MethodName:pathAddress:[operation.require(ModelDescriptionConstants.OP_ADDR)] @TO@ MethodName:pathAddress:[operation.get(ModelDescriptionConstants.OP_ADDR)] @AT@ 6405 @LENGTH@ 65
---------------UPD MethodInvocation@@operation.require(ModelDescriptionConstants.OP_ADDR) @TO@ operation.get(ModelDescriptionConstants.OP_ADDR) @AT@ 6417 @LENGTH@ 52
------------------UPD SimpleName@@MethodName:require:[ModelDescriptionConstants.OP_ADDR] @TO@ MethodName:get:[ModelDescriptionConstants.OP_ADDR] @AT@ 6427 @LENGTH@ 42


INS ReturnStatement@@ClassInstanceCreation:new String(bytes) @TO@ MethodDeclaration@@public, static, String, MethodName:toString, ChannelBuffer buffer, Exchange exchange,  @AT@ 1860 @LENGTH@ 25
---INS ClassInstanceCreation@@String[bytes] @TO@ ReturnStatement@@ClassInstanceCreation:new String(bytes) @AT@ 1867 @LENGTH@ 17
------INS New@@new @TO@ ClassInstanceCreation@@String[bytes] @AT@ 1867 @LENGTH@ 3
------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[bytes] @AT@ 1871 @LENGTH@ 6
------INS SimpleName@@bytes @TO@ ClassInstanceCreation@@String[bytes] @AT@ 1878 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:inputData=new AS400Text(value.length()).toBytes(value) @TO@ Assignment:inputData=new AS400Text(getISeriesEndpoint().getOutputFieldLength(i)).toBytes(value) @AT@ 3401 @LENGTH@ 57
---UPD Assignment@@inputData=new AS400Text(value.length()).toBytes(value) @TO@ inputData=new AS400Text(getISeriesEndpoint().getOutputFieldLength(i)).toBytes(value) @AT@ 3401 @LENGTH@ 56
------UPD MethodInvocation@@new AS400Text(value.length()).toBytes(value) @TO@ new AS400Text(getISeriesEndpoint().getOutputFieldLength(i)).toBytes(value) @AT@ 3413 @LENGTH@ 44
---------UPD ClassInstanceCreation@@AS400Text[value.length()] @TO@ AS400Text[getISeriesEndpoint().getOutputFieldLength(i)] @AT@ 3413 @LENGTH@ 29
------------UPD MethodInvocation@@value.length() @TO@ getISeriesEndpoint().getOutputFieldLength(i) @AT@ 3427 @LENGTH@ 14
---------------DEL SimpleName@@Name:value @AT@ 3427 @LENGTH@ 5
---------------INS MethodInvocation@@MethodName:getISeriesEndpoint:[] @TO@ MethodInvocation@@value.length() @AT@ 3427 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:length:[] @TO@ MethodName:getOutputFieldLength:[i] @AT@ 3433 @LENGTH@ 8
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:length:[] @AT@ 3469 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:stop, Exception,  @TO@ protected, void, MethodName:doStop, Exception,  @AT@ 1588 @LENGTH@ 86
---UPD Modifier@@public @TO@ protected @AT@ 1588 @LENGTH@ 6
---UPD SimpleName@@MethodName:stop @TO@ MethodName:doStop @AT@ 1600 @LENGTH@ 4


UPD IfStatement@@if (isEndOfFile(lastChar) || (isDelimiter(lastChar) && isEndOfFile(c))) {  tkn.type=EOF;  return tkn;} @TO@ if (isEndOfFile(lastChar) || (!isDelimiter(lastChar) && isEndOfFile(c))) {  tkn.type=EOF;  return tkn;} @AT@ 2905 @LENGTH@ 135
---UPD InfixExpression@@isEndOfFile(lastChar) || (isDelimiter(lastChar) && isEndOfFile(c)) @TO@ isEndOfFile(lastChar) || (!isDelimiter(lastChar) && isEndOfFile(c)) @AT@ 2909 @LENGTH@ 66
------UPD ParenthesizedExpression@@(isDelimiter(lastChar) && isEndOfFile(c)) @TO@ (!isDelimiter(lastChar) && isEndOfFile(c)) @AT@ 2934 @LENGTH@ 41
---------UPD InfixExpression@@isDelimiter(lastChar) && isEndOfFile(c) @TO@ !isDelimiter(lastChar) && isEndOfFile(c) @AT@ 2935 @LENGTH@ 39
------------INS PrefixExpression@@!isDelimiter(lastChar) @TO@ InfixExpression@@isDelimiter(lastChar) && isEndOfFile(c) @AT@ 2935 @LENGTH@ 22
---------------MOV MethodInvocation@@isDelimiter(lastChar) @TO@ PrefixExpression@@!isDelimiter(lastChar) @AT@ 2935 @LENGTH@ 21
---------------INS Operator@@! @TO@ PrefixExpression@@!isDelimiter(lastChar) @AT@ 2935 @LENGTH@ 1


UPD FieldDeclaration@@private, static, BeanManagerProvider, [bmp=null] @TO@ private, static, BeanManagerProvider, [bmp] @AT@ 2037 @LENGTH@ 46
---UPD VariableDeclarationFragment@@bmp=null @TO@ bmp @AT@ 2072 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 2078 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("There should be 7 processors to navigate",7,count) @TO@ MethodInvocation:assertEquals("There should be 8 processors to navigate",8,count) @AT@ 1607 @LENGTH@ 67
---UPD MethodInvocation@@assertEquals("There should be 7 processors to navigate",7,count) @TO@ assertEquals("There should be 8 processors to navigate",8,count) @AT@ 1607 @LENGTH@ 66
------UPD SimpleName@@MethodName:assertEquals:["There should be 7 processors to navigate", 7, count] @TO@ MethodName:assertEquals:["There should be 8 processors to navigate", 8, count] @AT@ 1607 @LENGTH@ 66
---------UPD StringLiteral@@"There should be 7 processors to navigate" @TO@ "There should be 8 processors to navigate" @AT@ 1620 @LENGTH@ 42
---------UPD NumberLiteral@@7 @TO@ 8 @AT@ 1664 @LENGTH@ 1


UPD VariableDeclarationStatement@@List nds=config.getExpressionEngine().query(config.getRoot(),"database.tables.table"); @TO@ List<ConfigurationNode> nds=config.getExpressionEngine().query(config.getRoot(),"database.tables.table"); @AT@ 6391 @LENGTH@ 105
---DEL SimpleType@@List @AT@ 6391 @LENGTH@ 4
---INS ParameterizedType@@List<ConfigurationNode> @TO@ VariableDeclarationStatement@@List nds=config.getExpressionEngine().query(config.getRoot(),"database.tables.table"); @AT@ 6631 @LENGTH@ 23
------INS SimpleType@@List @TO@ ParameterizedType@@List<ConfigurationNode> @AT@ 6631 @LENGTH@ 4
------INS SimpleType@@ConfigurationNode @TO@ ParameterizedType@@List<ConfigurationNode> @AT@ 6636 @LENGTH@ 17


UPD IfStatement@@if (assemblyDescriptorMetaData == null) {  return;} @TO@ if (assemblyDescriptorMetaData != null) {  final List<SecurityRoleMetaData> securityRoleMetaDatas=assemblyDescriptorMetaData.getAny(SecurityRoleMetaData.class);  if (securityRoleMetaDatas != null) {    for (    SecurityRoleMetaData securityRoleMetaData : securityRoleMetaDatas) {      roleMappings.add(securityRoleMetaData);    }  }} @AT@ 3552 @LENGTH@ 79
---UPD InfixExpression@@assemblyDescriptorMetaData == null @TO@ assemblyDescriptorMetaData != null @AT@ 3556 @LENGTH@ 34
------UPD Operator@@== @TO@ != @AT@ 3582 @LENGTH@ 2
---UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  final List<SecurityRoleMetaData> securityRoleMetaDatas=assemblyDescriptorMetaData.getAny(SecurityRoleMetaData.class);  if (securityRoleMetaDatas != null) {    for (    SecurityRoleMetaData securityRoleMetaData : securityRoleMetaDatas) {      roleMappings.add(securityRoleMetaData);    }  }} @AT@ 3592 @LENGTH@ 39
------DEL ReturnStatement@@ @AT@ 3610 @LENGTH@ 7
------MOV VariableDeclarationStatement@@final List<SecurityRoleMetaData> securityRoleMetaDatas=assemblyDescriptorMetaData.getAny(SecurityRoleMetaData.class); @TO@ Block@@ThenBody:{  return;} @AT@ 3741 @LENGTH@ 119
------MOV IfStatement@@if (securityRoleMetaDatas != null) {  for (  SecurityRoleMetaData securityRoleMetaData : securityRoleMetaDatas) {    roleMappings.add(securityRoleMetaData);  }} @TO@ Block@@ThenBody:{  return;} @AT@ 3873 @LENGTH@ 218


INS MethodDeclaration@@String, MethodName:transitiveDependencies,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 99389 @LENGTH@ 25
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:transitiveDependencies,  @AT@ 99382 @LENGTH@ 6
---INS SimpleName@@MethodName:transitiveDependencies @TO@ MethodDeclaration@@String, MethodName:transitiveDependencies,  @AT@ 99389 @LENGTH@ 22


UPD IfStatement@@if (rootUrl == null) {  return null;} @TO@ if (rootUrl == null) {  throw new IllegalStateException("The jmx url for container '" + container.getId() + "' is not specified");} @AT@ 5480 @LENGTH@ 57
---UPD Block@@ThenBody:{  return null;} @TO@ ThenBody:{  throw new IllegalStateException("The jmx url for container '" + container.getId() + "' is not specified");} @AT@ 5501 @LENGTH@ 36
------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("The jmx url for container '" + container.getId() + "' is not specified") @TO@ Block@@ThenBody:{  return null;} @AT@ 5515 @LENGTH@ 106
---------INS ClassInstanceCreation@@IllegalStateException["The jmx url for container '" + container.getId() + "' is not specified"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("The jmx url for container '" + container.getId() + "' is not specified") @AT@ 5521 @LENGTH@ 99
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["The jmx url for container '" + container.getId() + "' is not specified"] @AT@ 5521 @LENGTH@ 3
------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["The jmx url for container '" + container.getId() + "' is not specified"] @AT@ 5525 @LENGTH@ 21
------------INS InfixExpression@@"The jmx url for container '" + container.getId() + "' is not specified" @TO@ ClassInstanceCreation@@IllegalStateException["The jmx url for container '" + container.getId() + "' is not specified"] @AT@ 5547 @LENGTH@ 72
---------------INS StringLiteral@@"The jmx url for container '" @TO@ InfixExpression@@"The jmx url for container '" + container.getId() + "' is not specified" @AT@ 5547 @LENGTH@ 29
---------------INS Operator@@+ @TO@ InfixExpression@@"The jmx url for container '" + container.getId() + "' is not specified" @AT@ 5576 @LENGTH@ 1
---------------INS MethodInvocation@@container.getId() @TO@ InfixExpression@@"The jmx url for container '" + container.getId() + "' is not specified" @AT@ 5579 @LENGTH@ 17
------------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.getId() @AT@ 5579 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@container.getId() @AT@ 5589 @LENGTH@ 7
---------------INS StringLiteral@@"' is not specified" @TO@ InfixExpression@@"The jmx url for container '" + container.getId() + "' is not specified" @AT@ 5599 @LENGTH@ 20
------DEL ReturnStatement@@NullLiteral:null @AT@ 5515 @LENGTH@ 12
---------DEL NullLiteral@@null @AT@ 5522 @LENGTH@ 4


UPD IfStatement@@if (module.getIdentifier().equals(identifier)) {  it.remove();  notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,identifier.toString()));  return module;} @TO@ if (module.getIdentifier().equals(id)) {  it.remove();  notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,id));  return module;} @AT@ 5007 @LENGTH@ 240
---UPD MethodInvocation@@module.getIdentifier().equals(identifier) @TO@ module.getIdentifier().equals(id) @AT@ 5011 @LENGTH@ 41
------UPD SimpleName@@MethodName:equals:[identifier] @TO@ MethodName:equals:[id] @AT@ 5034 @LENGTH@ 18
---------UPD SimpleName@@identifier @TO@ id @AT@ 5041 @LENGTH@ 10
---UPD Block@@ThenBody:{  it.remove();  notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,identifier.toString()));  return module;} @TO@ ThenBody:{  it.remove();  notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,id));  return module;} @AT@ 5054 @LENGTH@ 193
------UPD ExpressionStatement@@MethodInvocation:notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,identifier.toString())) @TO@ MethodInvocation:notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,id)) @AT@ 5109 @LENGTH@ 85
---------UPD MethodInvocation@@notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,identifier.toString())) @TO@ notifyObservers(new ChangeEvent(ChangeType.CAPABILITY,true,id)) @AT@ 5109 @LENGTH@ 84
------------UPD SimpleName@@MethodName:notifyObservers:[new ChangeEvent(ChangeType.CAPABILITY,true,identifier.toString())] @TO@ MethodName:notifyObservers:[new ChangeEvent(ChangeType.CAPABILITY,true,id)] @AT@ 5109 @LENGTH@ 84
---------------UPD ClassInstanceCreation@@ChangeEvent[ChangeType.CAPABILITY, true, identifier.toString()] @TO@ ChangeEvent[ChangeType.CAPABILITY, true, id] @AT@ 5125 @LENGTH@ 67
------------------INS SimpleName@@id @TO@ ClassInstanceCreation@@ChangeEvent[ChangeType.CAPABILITY, true, identifier.toString()] @AT@ 5048 @LENGTH@ 2
------------------DEL MethodInvocation@@identifier.toString() @AT@ 5170 @LENGTH@ 21
---------------------DEL SimpleName@@Name:identifier @AT@ 5170 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:toString:[] @AT@ 5181 @LENGTH@ 10


UPD IfStatement@@if (pAddress.length() == 0) {  pAttributes.put(JNDI_PROPNAME,String.valueOf(i));  pAddress=pAttributes.get(JNDI_PROPNAME);} @TO@ if (pAddress == null || pAddress.length() == 0) {  pAttributes.put(JNDI_PROPNAME,String.valueOf(i++));  pAddress=pAttributes.get(JNDI_PROPNAME);} @AT@ 4633 @LENGTH@ 169
---INS InfixExpression@@pAddress == null || pAddress.length() == 0 @TO@ IfStatement@@if (pAddress.length() == 0) {  pAttributes.put(JNDI_PROPNAME,String.valueOf(i));  pAddress=pAttributes.get(JNDI_PROPNAME);} @AT@ 4637 @LENGTH@ 42
------MOV InfixExpression@@pAddress.length() == 0 @TO@ InfixExpression@@pAddress == null || pAddress.length() == 0 @AT@ 4637 @LENGTH@ 22
------INS InfixExpression@@pAddress == null @TO@ InfixExpression@@pAddress == null || pAddress.length() == 0 @AT@ 4637 @LENGTH@ 16
---------INS SimpleName@@pAddress @TO@ InfixExpression@@pAddress == null @AT@ 4637 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@pAddress == null @AT@ 4645 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@pAddress == null @AT@ 4649 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@pAddress == null || pAddress.length() == 0 @AT@ 4653 @LENGTH@ 2
---UPD Block@@ThenBody:{  pAttributes.put(JNDI_PROPNAME,String.valueOf(i));  pAddress=pAttributes.get(JNDI_PROPNAME);} @TO@ ThenBody:{  pAttributes.put(JNDI_PROPNAME,String.valueOf(i++));  pAddress=pAttributes.get(JNDI_PROPNAME);} @AT@ 4661 @LENGTH@ 141
------UPD ExpressionStatement@@MethodInvocation:pAttributes.put(JNDI_PROPNAME,String.valueOf(i)) @TO@ MethodInvocation:pAttributes.put(JNDI_PROPNAME,String.valueOf(i++)) @AT@ 4679 @LENGTH@ 50
---------UPD MethodInvocation@@pAttributes.put(JNDI_PROPNAME,String.valueOf(i)) @TO@ pAttributes.put(JNDI_PROPNAME,String.valueOf(i++)) @AT@ 4679 @LENGTH@ 49
------------UPD SimpleName@@MethodName:put:[JNDI_PROPNAME, String.valueOf(i)] @TO@ MethodName:put:[JNDI_PROPNAME, String.valueOf(i++)] @AT@ 4691 @LENGTH@ 37
---------------UPD MethodInvocation@@String.valueOf(i) @TO@ String.valueOf(i++) @AT@ 4710 @LENGTH@ 17
------------------UPD SimpleName@@MethodName:valueOf:[i] @TO@ MethodName:valueOf:[i++] @AT@ 4717 @LENGTH@ 10
---------------------DEL SimpleName@@i @AT@ 4725 @LENGTH@ 1
---------------------INS PostfixExpression@@i++ @TO@ SimpleName@@MethodName:valueOf:[i] @AT@ 4745 @LENGTH@ 3
------------------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 4745 @LENGTH@ 1
------------------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 4747 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3303 @LENGTH@ 989
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 3362 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3362 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3368 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3375 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @TO@ TypeDeclaration@@[public]FlowPartialViewContextTests, TestCase @AT@ 1593 @LENGTH@ 502
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1593 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1600 @LENGTH@ 4
---INS SimpleName@@MethodName:testReturnFragmentIdsMutable @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1605 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1643 @LENGTH@ 9
---INS VariableDeclarationStatement@@String[] fragmentIds=new String[]{"foo","bar"}; @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1657 @LENGTH@ 53
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] fragmentIds=new String[]{"foo","bar"}; @AT@ 1657 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1657 @LENGTH@ 6
------INS VariableDeclarationFragment@@fragmentIds=new String[]{"foo","bar"} @TO@ VariableDeclarationStatement@@String[] fragmentIds=new String[]{"foo","bar"}; @AT@ 1666 @LENGTH@ 43
---------INS SimpleName@@fragmentIds @TO@ VariableDeclarationFragment@@fragmentIds=new String[]{"foo","bar"} @AT@ 1666 @LENGTH@ 11
---------INS ArrayCreation@@new String[]{"foo","bar"} @TO@ VariableDeclarationFragment@@fragmentIds=new String[]{"foo","bar"} @AT@ 1680 @LENGTH@ 29
------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"foo","bar"} @AT@ 1684 @LENGTH@ 8
---------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1684 @LENGTH@ 6
------------INS ArrayInitializer@@{"foo","bar"} @TO@ ArrayCreation@@new String[]{"foo","bar"} @AT@ 1693 @LENGTH@ 16
---------------INS StringLiteral@@"foo" @TO@ ArrayInitializer@@{"foo","bar"} @AT@ 1695 @LENGTH@ 5
---------------INS StringLiteral@@"bar" @TO@ ArrayInitializer@@{"foo","bar"} @AT@ 1702 @LENGTH@ 5
---INS VariableDeclarationStatement@@RequestContext requestContext=new MockRequestContext(); @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1714 @LENGTH@ 57
------INS SimpleType@@RequestContext @TO@ VariableDeclarationStatement@@RequestContext requestContext=new MockRequestContext(); @AT@ 1714 @LENGTH@ 14
------INS VariableDeclarationFragment@@requestContext=new MockRequestContext() @TO@ VariableDeclarationStatement@@RequestContext requestContext=new MockRequestContext(); @AT@ 1729 @LENGTH@ 41
---------INS SimpleName@@requestContext @TO@ VariableDeclarationFragment@@requestContext=new MockRequestContext() @AT@ 1729 @LENGTH@ 14
---------INS ClassInstanceCreation@@MockRequestContext[] @TO@ VariableDeclarationFragment@@requestContext=new MockRequestContext() @AT@ 1746 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@MockRequestContext[] @AT@ 1746 @LENGTH@ 3
------------INS SimpleType@@MockRequestContext @TO@ ClassInstanceCreation@@MockRequestContext[] @AT@ 1750 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:requestContext.getFlashScope().asMap().put(View.RENDER_FRAGMENTS_ATTRIBUTE,fragmentIds) @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1774 @LENGTH@ 89
------INS MethodInvocation@@requestContext.getFlashScope().asMap().put(View.RENDER_FRAGMENTS_ATTRIBUTE,fragmentIds) @TO@ ExpressionStatement@@MethodInvocation:requestContext.getFlashScope().asMap().put(View.RENDER_FRAGMENTS_ATTRIBUTE,fragmentIds) @AT@ 1774 @LENGTH@ 88
---------INS MethodInvocation@@MethodName:asMap:[] @TO@ MethodInvocation@@requestContext.getFlashScope().asMap().put(View.RENDER_FRAGMENTS_ATTRIBUTE,fragmentIds) @AT@ 1774 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getFlashScope:[] @TO@ MethodInvocation@@requestContext.getFlashScope().asMap().put(View.RENDER_FRAGMENTS_ATTRIBUTE,fragmentIds) @AT@ 1774 @LENGTH@ 30
---------INS SimpleName@@Name:requestContext @TO@ MethodInvocation@@requestContext.getFlashScope().asMap().put(View.RENDER_FRAGMENTS_ATTRIBUTE,fragmentIds) @AT@ 1774 @LENGTH@ 14
---------INS SimpleName@@MethodName:put:[View.RENDER_FRAGMENTS_ATTRIBUTE, fragmentIds] @TO@ MethodInvocation@@requestContext.getFlashScope().asMap().put(View.RENDER_FRAGMENTS_ATTRIBUTE,fragmentIds) @AT@ 1813 @LENGTH@ 49
------------INS QualifiedName@@View.RENDER_FRAGMENTS_ATTRIBUTE @TO@ SimpleName@@MethodName:put:[View.RENDER_FRAGMENTS_ATTRIBUTE, fragmentIds] @AT@ 1817 @LENGTH@ 31
---------------INS SimpleName@@View @TO@ QualifiedName@@View.RENDER_FRAGMENTS_ATTRIBUTE @AT@ 1817 @LENGTH@ 4
---------------INS SimpleName@@RENDER_FRAGMENTS_ATTRIBUTE @TO@ QualifiedName@@View.RENDER_FRAGMENTS_ATTRIBUTE @AT@ 1822 @LENGTH@ 26
------------INS SimpleName@@fragmentIds @TO@ SimpleName@@MethodName:put:[View.RENDER_FRAGMENTS_ATTRIBUTE, fragmentIds] @AT@ 1850 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:RequestContextHolder.setRequestContext(requestContext) @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1866 @LENGTH@ 55
------INS MethodInvocation@@RequestContextHolder.setRequestContext(requestContext) @TO@ ExpressionStatement@@MethodInvocation:RequestContextHolder.setRequestContext(requestContext) @AT@ 1866 @LENGTH@ 54
---------INS SimpleName@@Name:RequestContextHolder @TO@ MethodInvocation@@RequestContextHolder.setRequestContext(requestContext) @AT@ 1866 @LENGTH@ 20
---------INS SimpleName@@MethodName:setRequestContext:[requestContext] @TO@ MethodInvocation@@RequestContextHolder.setRequestContext(requestContext) @AT@ 1887 @LENGTH@ 33
------------INS SimpleName@@requestContext @TO@ SimpleName@@MethodName:setRequestContext:[requestContext] @AT@ 1905 @LENGTH@ 14
---INS VariableDeclarationStatement@@Collection<String> renderIds=new FlowPartialViewContext(null).getRenderIds(); @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 1925 @LENGTH@ 79
------INS ParameterizedType@@Collection<String> @TO@ VariableDeclarationStatement@@Collection<String> renderIds=new FlowPartialViewContext(null).getRenderIds(); @AT@ 1925 @LENGTH@ 18
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<String> @AT@ 1925 @LENGTH@ 10
---------INS SimpleType@@String @TO@ ParameterizedType@@Collection<String> @AT@ 1936 @LENGTH@ 6
------INS VariableDeclarationFragment@@renderIds=new FlowPartialViewContext(null).getRenderIds() @TO@ VariableDeclarationStatement@@Collection<String> renderIds=new FlowPartialViewContext(null).getRenderIds(); @AT@ 1944 @LENGTH@ 59
---------INS SimpleName@@renderIds @TO@ VariableDeclarationFragment@@renderIds=new FlowPartialViewContext(null).getRenderIds() @AT@ 1944 @LENGTH@ 9
---------INS MethodInvocation@@new FlowPartialViewContext(null).getRenderIds() @TO@ VariableDeclarationFragment@@renderIds=new FlowPartialViewContext(null).getRenderIds() @AT@ 1956 @LENGTH@ 47
------------INS ClassInstanceCreation@@FlowPartialViewContext[null] @TO@ MethodInvocation@@new FlowPartialViewContext(null).getRenderIds() @AT@ 1956 @LENGTH@ 32
---------------INS New@@new @TO@ ClassInstanceCreation@@FlowPartialViewContext[null] @AT@ 1956 @LENGTH@ 3
---------------INS SimpleType@@FlowPartialViewContext @TO@ ClassInstanceCreation@@FlowPartialViewContext[null] @AT@ 1960 @LENGTH@ 22
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@FlowPartialViewContext[null] @AT@ 1983 @LENGTH@ 4
------------INS SimpleName@@MethodName:getRenderIds:[] @TO@ MethodInvocation@@new FlowPartialViewContext(null).getRenderIds() @AT@ 1989 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:renderIds.add("baz") @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 2007 @LENGTH@ 21
------INS MethodInvocation@@renderIds.add("baz") @TO@ ExpressionStatement@@MethodInvocation:renderIds.add("baz") @AT@ 2007 @LENGTH@ 20
---------INS SimpleName@@Name:renderIds @TO@ MethodInvocation@@renderIds.add("baz") @AT@ 2007 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:["baz"] @TO@ MethodInvocation@@renderIds.add("baz") @AT@ 2017 @LENGTH@ 10
------------INS StringLiteral@@"baz" @TO@ SimpleName@@MethodName:add:["baz"] @AT@ 2021 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(Arrays.asList("foo","bar","baz"),renderIds) @TO@ MethodDeclaration@@public, void, MethodName:testReturnFragmentIdsMutable, Exception,  @AT@ 2032 @LENGTH@ 60
------INS MethodInvocation@@assertEquals(Arrays.asList("foo","bar","baz"),renderIds) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(Arrays.asList("foo","bar","baz"),renderIds) @AT@ 2032 @LENGTH@ 59
---------INS SimpleName@@MethodName:assertEquals:[Arrays.asList("foo","bar","baz"), renderIds] @TO@ MethodInvocation@@assertEquals(Arrays.asList("foo","bar","baz"),renderIds) @AT@ 2032 @LENGTH@ 59
------------INS MethodInvocation@@Arrays.asList("foo","bar","baz") @TO@ SimpleName@@MethodName:assertEquals:[Arrays.asList("foo","bar","baz"), renderIds] @AT@ 2045 @LENGTH@ 34
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("foo","bar","baz") @AT@ 2045 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["foo", "bar", "baz"] @TO@ MethodInvocation@@Arrays.asList("foo","bar","baz") @AT@ 2052 @LENGTH@ 27
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:asList:["foo", "bar", "baz"] @AT@ 2059 @LENGTH@ 5
------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:asList:["foo", "bar", "baz"] @AT@ 2066 @LENGTH@ 5
------------------INS StringLiteral@@"baz" @TO@ SimpleName@@MethodName:asList:["foo", "bar", "baz"] @AT@ 2073 @LENGTH@ 5
------------INS SimpleName@@renderIds @TO@ SimpleName@@MethodName:assertEquals:[Arrays.asList("foo","bar","baz"), renderIds] @AT@ 2081 @LENGTH@ 9


UPD FieldDeclaration@@private, static, char[], [VALID_PUNCTUATION={'.','@','\\','=',','}] @TO@ private, static, char[], [VALID_PUNCTUATION={'.','@','\\','=',',','/'}] @AT@ 3207 @LENGTH@ 69
---UPD VariableDeclarationFragment@@VALID_PUNCTUATION={'.','@','\\','=',','} @TO@ VALID_PUNCTUATION={'.','@','\\','=',',','/'} @AT@ 3229 @LENGTH@ 46
------UPD ArrayInitializer@@{'.','@','\\','=',','} @TO@ {'.','@','\\','=',',','/'} @AT@ 3249 @LENGTH@ 26
---------INS CharacterLiteral@@'/' @TO@ ArrayInitializer@@{'.','@','\\','=',','} @AT@ 3275 @LENGTH@ 3


UPD FieldDeclaration@@private, static, final, Map<PersistenceUnitMetadata,Map<URL,Set<Package>>>, [PACKAGES_IN_JAR_CACHE=new WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>()] @TO@ private, static, final, Map<PersistenceUnitMetadata,Map<URL,Set<Package>>>, [PACKAGES_IN_JAR_CACHE=new HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>()] @AT@ 2249 @LENGTH@ 164
---UPD VariableDeclarationFragment@@PACKAGES_IN_JAR_CACHE=new WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>() @TO@ PACKAGES_IN_JAR_CACHE=new HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>() @AT@ 2323 @LENGTH@ 89
------UPD ClassInstanceCreation@@WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>[] @TO@ HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>[] @AT@ 2347 @LENGTH@ 65
---------UPD ParameterizedType@@WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>> @TO@ HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>> @AT@ 2351 @LENGTH@ 59
------------UPD SimpleType@@WeakHashMap @TO@ HashMap @AT@ 2351 @LENGTH@ 11


DEL FieldDeclaration@@private, static, final, transient, Logger, [LOG=LoggerFactory.getLogger(AtomEntryPollingConsumer.class)] @AT@ 1416 @LENGTH@ 100
---DEL Modifier@@private @AT@ 1416 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1424 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1431 @LENGTH@ 5
---DEL Modifier@@transient @AT@ 1437 @LENGTH@ 9
---DEL SimpleType@@Logger @AT@ 1447 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(AtomEntryPollingConsumer.class) @AT@ 1454 @LENGTH@ 61
------DEL SimpleName@@LOG @AT@ 1454 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(AtomEntryPollingConsumer.class) @AT@ 1460 @LENGTH@ 55
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1460 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[AtomEntryPollingConsumer.class] @AT@ 1474 @LENGTH@ 41
------------DEL TypeLiteral@@AtomEntryPollingConsumer.class @AT@ 1484 @LENGTH@ 30


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build()] @AT@ 1042 @LENGTH@ 462
---UPD VariableDeclarationFragment@@NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @TO@ NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @AT@ 1091 @LENGTH@ 412
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @TO@ new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @AT@ 1110 @LENGTH@ 393
---------UPD MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodName:setAllowExpression:[false] @AT@ 1110 @LENGTH@ 193
------------UPD BooleanLiteral@@true @TO@ false @AT@ 1298 @LENGTH@ 4


DEL VariableDeclarationStatement@@ModelNode preHandlers=null; @AT@ 11770 @LENGTH@ 29
---DEL SimpleType@@ModelNode @AT@ 11770 @LENGTH@ 9
---DEL VariableDeclarationFragment@@preHandlers=null @AT@ 11780 @LENGTH@ 18
------DEL SimpleName@@preHandlers @AT@ 11780 @LENGTH@ 11
------DEL NullLiteral@@null @AT@ 11794 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:domainSupport=new DomainTestSupport(CLITestSuite.class.getSimpleName(),"domain-configs/domain-standard.xml","host-configs/host-master.xml","host-configs/host-slave.xml") @TO@ Assignment:domainSupport=new DomainTestSupport(CLITestSuite.class.getSimpleName(),"domain-configs" + File.separatorChar + "domain-standard.xml","host-configs" + File.separatorChar + "host-master.xml","host-configs" + File.separatorChar + "host-slave.xml") @AT@ 2879 @LENGTH@ 191
---UPD Assignment@@domainSupport=new DomainTestSupport(CLITestSuite.class.getSimpleName(),"domain-configs/domain-standard.xml","host-configs/host-master.xml","host-configs/host-slave.xml") @TO@ domainSupport=new DomainTestSupport(CLITestSuite.class.getSimpleName(),"domain-configs" + File.separatorChar + "domain-standard.xml","host-configs" + File.separatorChar + "host-master.xml","host-configs" + File.separatorChar + "host-slave.xml") @AT@ 2879 @LENGTH@ 190
------UPD ClassInstanceCreation@@DomainTestSupport[CLITestSuite.class.getSimpleName(), "domain-configs/domain-standard.xml", "host-configs/host-master.xml", "host-configs/host-slave.xml"] @TO@ DomainTestSupport[CLITestSuite.class.getSimpleName(), "domain-configs" + File.separatorChar + "domain-standard.xml", "host-configs" + File.separatorChar + "host-master.xml", "host-configs" + File.separatorChar + "host-slave.xml"] @AT@ 2895 @LENGTH@ 174
---------DEL StringLiteral@@"domain-configs/domain-standard.xml" @AT@ 2969 @LENGTH@ 36
---------INS InfixExpression@@"domain-configs" + File.separatorChar + "domain-standard.xml" @TO@ ClassInstanceCreation@@DomainTestSupport[CLITestSuite.class.getSimpleName(), "domain-configs/domain-standard.xml", "host-configs/host-master.xml", "host-configs/host-slave.xml"] @AT@ 2990 @LENGTH@ 58
------------INS StringLiteral@@"domain-configs" @TO@ InfixExpression@@"domain-configs" + File.separatorChar + "domain-standard.xml" @AT@ 2990 @LENGTH@ 16
------------INS Operator@@+ @TO@ InfixExpression@@"domain-configs" + File.separatorChar + "domain-standard.xml" @AT@ 3006 @LENGTH@ 1
------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@"domain-configs" + File.separatorChar + "domain-standard.xml" @AT@ 3008 @LENGTH@ 18
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 3008 @LENGTH@ 4
---------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 3013 @LENGTH@ 13
------------INS StringLiteral@@"domain-standard.xml" @TO@ InfixExpression@@"domain-configs" + File.separatorChar + "domain-standard.xml" @AT@ 3027 @LENGTH@ 21
---------DEL StringLiteral@@"host-configs/host-master.xml" @AT@ 3007 @LENGTH@ 30
---------DEL StringLiteral@@"host-configs/host-slave.xml" @AT@ 3039 @LENGTH@ 29
---------INS InfixExpression@@"host-configs" + File.separatorChar + "host-master.xml" @TO@ ClassInstanceCreation@@DomainTestSupport[CLITestSuite.class.getSimpleName(), "domain-configs/domain-standard.xml", "host-configs/host-master.xml", "host-configs/host-slave.xml"] @AT@ 3050 @LENGTH@ 51
------------INS StringLiteral@@"host-configs" @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-master.xml" @AT@ 3050 @LENGTH@ 14
------------INS Operator@@+ @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-master.xml" @AT@ 3064 @LENGTH@ 1
------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-master.xml" @AT@ 3065 @LENGTH@ 18
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 3065 @LENGTH@ 4
---------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 3070 @LENGTH@ 13
------------INS StringLiteral@@"host-master.xml" @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-master.xml" @AT@ 3084 @LENGTH@ 17
---------INS InfixExpression@@"host-configs" + File.separatorChar + "host-slave.xml" @TO@ ClassInstanceCreation@@DomainTestSupport[CLITestSuite.class.getSimpleName(), "domain-configs/domain-standard.xml", "host-configs/host-master.xml", "host-configs/host-slave.xml"] @AT@ 3103 @LENGTH@ 50
------------INS StringLiteral@@"host-configs" @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-slave.xml" @AT@ 3103 @LENGTH@ 14
------------INS Operator@@+ @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-slave.xml" @AT@ 3117 @LENGTH@ 1
------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-slave.xml" @AT@ 3118 @LENGTH@ 18
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 3118 @LENGTH@ 4
---------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 3123 @LENGTH@ 13
------------INS StringLiteral@@"host-slave.xml" @TO@ InfixExpression@@"host-configs" + File.separatorChar + "host-slave.xml" @AT@ 3137 @LENGTH@ 16


UPD TryStatement@@try {  HttpResponse response=client.execute(new HttpGet(url + "simple"));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),1);  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url + "simple"));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),2);  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @TO@ try {  HttpResponse response=client.execute(new HttpGet(url + "simple"));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url + "simple"));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @AT@ 3941 @LENGTH@ 1030
---UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),1) @TO@ MethodInvocation:Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 4142 @LENGTH@ 86
------UPD MethodInvocation@@Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),1) @TO@ Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 4142 @LENGTH@ 85
---------UPD SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 1] @TO@ MethodName:assertEquals:[1, Integer.parseInt(response.getFirstHeader("value").getValue())] @AT@ 4149 @LENGTH@ 78
------------MOV MethodInvocation@@Integer.parseInt(response.getFirstHeader("value").getValue()) @TO@ SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 1] @AT@ 4162 @LENGTH@ 61
---UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),2) @TO@ MethodInvocation:Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 4566 @LENGTH@ 86
------UPD MethodInvocation@@Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),2) @TO@ Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 4566 @LENGTH@ 85
---------UPD SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 2] @TO@ MethodName:assertEquals:[2, Integer.parseInt(response.getFirstHeader("value").getValue())] @AT@ 4573 @LENGTH@ 78
------------MOV MethodInvocation@@Integer.parseInt(response.getFirstHeader("value").getValue()) @TO@ SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 2] @AT@ 4586 @LENGTH@ 61


DEL ExpressionStatement@@MethodInvocation:assertTrue(result.isDefined()) @AT@ 6591 @LENGTH@ 31
---DEL MethodInvocation@@assertTrue(result.isDefined()) @AT@ 6591 @LENGTH@ 30
------DEL SimpleName@@MethodName:assertTrue:[result.isDefined()] @AT@ 6591 @LENGTH@ 30
---------DEL MethodInvocation@@result.isDefined() @AT@ 6602 @LENGTH@ 18


INS VariableDeclarationStatement@@MailComponent comp=new MailComponent(cfg); @TO@ MethodDeclaration@@public, void, MethodName:testMailEndpointCtrEndpointConfig, Exception,  @AT@ 2626 @LENGTH@ 44
---INS SimpleType@@MailComponent @TO@ VariableDeclarationStatement@@MailComponent comp=new MailComponent(cfg); @AT@ 2626 @LENGTH@ 13
---INS VariableDeclarationFragment@@comp=new MailComponent(cfg) @TO@ VariableDeclarationStatement@@MailComponent comp=new MailComponent(cfg); @AT@ 2640 @LENGTH@ 29
------INS SimpleName@@comp @TO@ VariableDeclarationFragment@@comp=new MailComponent(cfg) @AT@ 2640 @LENGTH@ 4
------INS ClassInstanceCreation@@MailComponent[cfg] @TO@ VariableDeclarationFragment@@comp=new MailComponent(cfg) @AT@ 2647 @LENGTH@ 22
---------INS New@@new @TO@ ClassInstanceCreation@@MailComponent[cfg] @AT@ 2647 @LENGTH@ 3
---------INS SimpleType@@MailComponent @TO@ ClassInstanceCreation@@MailComponent[cfg] @AT@ 2651 @LENGTH@ 13
---------INS SimpleName@@cfg @TO@ ClassInstanceCreation@@MailComponent[cfg] @AT@ 2665 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:hosts.registerReadWriteAttribute(Constants.ENABLE_WELCOME_ROOT,null,new WriteAttributeHandlers.ModelTypeValidatingHandler(ModelType.BOOLEAN,true),Storage.CONFIGURATION) @TO@ MethodInvocation:hosts.registerReadWriteAttribute(Constants.ENABLE_WELCOME_ROOT,null,WriteEnableWelcomeRoot.INSTANCE,Storage.CONFIGURATION) @AT@ 10043 @LENGTH@ 173
---UPD MethodInvocation@@hosts.registerReadWriteAttribute(Constants.ENABLE_WELCOME_ROOT,null,new WriteAttributeHandlers.ModelTypeValidatingHandler(ModelType.BOOLEAN,true),Storage.CONFIGURATION) @TO@ hosts.registerReadWriteAttribute(Constants.ENABLE_WELCOME_ROOT,null,WriteEnableWelcomeRoot.INSTANCE,Storage.CONFIGURATION) @AT@ 10043 @LENGTH@ 172
------UPD SimpleName@@MethodName:registerReadWriteAttribute:[Constants.ENABLE_WELCOME_ROOT, null, new WriteAttributeHandlers.ModelTypeValidatingHandler(ModelType.BOOLEAN,true), Storage.CONFIGURATION] @TO@ MethodName:registerReadWriteAttribute:[Constants.ENABLE_WELCOME_ROOT, null, WriteEnableWelcomeRoot.INSTANCE, Storage.CONFIGURATION] @AT@ 10049 @LENGTH@ 166
---------DEL ClassInstanceCreation@@WriteAttributeHandlers.ModelTypeValidatingHandler[ModelType.BOOLEAN, true] @AT@ 10113 @LENGTH@ 78
------------DEL New@@new @AT@ 10113 @LENGTH@ 3
------------DEL SimpleType@@WriteAttributeHandlers.ModelTypeValidatingHandler @AT@ 10117 @LENGTH@ 49
------------DEL QualifiedName@@ModelType.BOOLEAN @AT@ 10167 @LENGTH@ 17
------------DEL BooleanLiteral@@true @AT@ 10186 @LENGTH@ 4
---------INS QualifiedName@@WriteEnableWelcomeRoot.INSTANCE @TO@ SimpleName@@MethodName:registerReadWriteAttribute:[Constants.ENABLE_WELCOME_ROOT, null, new WriteAttributeHandlers.ModelTypeValidatingHandler(ModelType.BOOLEAN,true), Storage.CONFIGURATION] @AT@ 10152 @LENGTH@ 31
------------MOV SimpleName@@ModelType @TO@ QualifiedName@@WriteEnableWelcomeRoot.INSTANCE @AT@ 10167 @LENGTH@ 9
------------MOV SimpleName@@BOOLEAN @TO@ QualifiedName@@WriteEnableWelcomeRoot.INSTANCE @AT@ 10177 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"classpath:application-context.xml"}), @Transactional, public]UserRepositoryTests,  @AT@ 3712 @LENGTH@ 220
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 3712 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 3719 @LENGTH@ 4
---INS SimpleName@@MethodName:findsAllByGivenIds @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 3724 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 3752 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 3752 @LENGTH@ 16
---INS VariableDeclarationStatement@@Iterable<User> result=repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())); @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 3775 @LENGTH@ 97
------INS ParameterizedType@@Iterable<User> @TO@ VariableDeclarationStatement@@Iterable<User> result=repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())); @AT@ 3775 @LENGTH@ 14
---------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<User> @AT@ 3775 @LENGTH@ 8
---------INS SimpleType@@User @TO@ ParameterizedType@@Iterable<User> @AT@ 3784 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())) @TO@ VariableDeclarationStatement@@Iterable<User> result=repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())); @AT@ 3790 @LENGTH@ 81
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())) @AT@ 3790 @LENGTH@ 6
---------INS MethodInvocation@@repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())) @TO@ VariableDeclarationFragment@@result=repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())) @AT@ 3799 @LENGTH@ 72
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())) @AT@ 3799 @LENGTH@ 10
------------INS SimpleName@@MethodName:findAll:[Arrays.asList(firstUser.getId(),secondUser.getId())] @TO@ MethodInvocation@@repository.findAll(Arrays.asList(firstUser.getId(),secondUser.getId())) @AT@ 3810 @LENGTH@ 61
---------------INS MethodInvocation@@Arrays.asList(firstUser.getId(),secondUser.getId()) @TO@ SimpleName@@MethodName:findAll:[Arrays.asList(firstUser.getId(),secondUser.getId())] @AT@ 3818 @LENGTH@ 52
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(firstUser.getId(),secondUser.getId()) @AT@ 3818 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:[firstUser.getId(), secondUser.getId()] @TO@ MethodInvocation@@Arrays.asList(firstUser.getId(),secondUser.getId()) @AT@ 3825 @LENGTH@ 45
---------------------INS MethodInvocation@@firstUser.getId() @TO@ SimpleName@@MethodName:asList:[firstUser.getId(), secondUser.getId()] @AT@ 3832 @LENGTH@ 17
------------------------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.getId() @AT@ 3832 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@firstUser.getId() @AT@ 3842 @LENGTH@ 7
---------------------INS MethodInvocation@@secondUser.getId() @TO@ SimpleName@@MethodName:asList:[firstUser.getId(), secondUser.getId()] @AT@ 3851 @LENGTH@ 18
------------------------INS SimpleName@@Name:secondUser @TO@ MethodInvocation@@secondUser.getId() @AT@ 3851 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@secondUser.getId() @AT@ 3862 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 3876 @LENGTH@ 52
------INS MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @AT@ 3876 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @TO@ MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @AT@ 3876 @LENGTH@ 51
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 3887 @LENGTH@ 6
------------INS MethodInvocation@@hasItems(firstUser,secondUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 3895 @LENGTH@ 31
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 3895 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 3904 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 3915 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 3895 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 3904 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 3915 @LENGTH@ 10


MOV ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@private, void, MethodName:testFilter, final String uri, Exception,  @AT@ 3126 @LENGTH@ 31


INS IfStatement@@if (property == null) {  throw new MappingException(String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()));} @TO@ MethodDeclaration@@public, T, T, MethodName:getParameterValue, Parameter<T,P> parameter,  @AT@ 3180 @LENGTH@ 188
---INS InfixExpression@@property == null @TO@ IfStatement@@if (property == null) {  throw new MappingException(String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()));} @AT@ 3184 @LENGTH@ 16
------INS SimpleName@@property @TO@ InfixExpression@@property == null @AT@ 3184 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@property == null @AT@ 3192 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@property == null @AT@ 3196 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new MappingException(String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()));} @TO@ IfStatement@@if (property == null) {  throw new MappingException(String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()));} @AT@ 3202 @LENGTH@ 166
------INS ThrowStatement@@ClassInstanceCreation:new MappingException(String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType())) @TO@ Block@@ThenBody:{  throw new MappingException(String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()));} @AT@ 3207 @LENGTH@ 157
---------INS ClassInstanceCreation@@MappingException[String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType())] @TO@ ThrowStatement@@ClassInstanceCreation:new MappingException(String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType())) @AT@ 3213 @LENGTH@ 150
------------INS New@@new @TO@ ClassInstanceCreation@@MappingException[String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType())] @AT@ 3213 @LENGTH@ 3
------------INS SimpleType@@MappingException @TO@ ClassInstanceCreation@@MappingException[String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType())] @AT@ 3217 @LENGTH@ 16
------------INS MethodInvocation@@String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()) @TO@ ClassInstanceCreation@@MappingException[String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType())] @AT@ 3234 @LENGTH@ 128
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()) @AT@ 3234 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:["No property %s found on entity %s to bind constructor parameter to!", parameter.getName(), entity.getType()] @TO@ MethodInvocation@@String.format("No property %s found on entity %s to bind constructor parameter to!",parameter.getName(),entity.getType()) @AT@ 3241 @LENGTH@ 121
------------------INS StringLiteral@@"No property %s found on entity %s to bind constructor parameter to!" @TO@ SimpleName@@MethodName:format:["No property %s found on entity %s to bind constructor parameter to!", parameter.getName(), entity.getType()] @AT@ 3248 @LENGTH@ 69
------------------INS MethodInvocation@@parameter.getName() @TO@ SimpleName@@MethodName:format:["No property %s found on entity %s to bind constructor parameter to!", parameter.getName(), entity.getType()] @AT@ 3324 @LENGTH@ 19
---------------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getName() @AT@ 3324 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@parameter.getName() @AT@ 3334 @LENGTH@ 9
------------------INS MethodInvocation@@entity.getType() @TO@ SimpleName@@MethodName:format:["No property %s found on entity %s to bind constructor parameter to!", parameter.getName(), entity.getType()] @AT@ 3345 @LENGTH@ 16
---------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getType() @AT@ 3345 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@entity.getType() @AT@ 3352 @LENGTH@ 9


UPD VariableDeclarationStatement@@ExtensionContext context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER); @TO@ ExtensionContext context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test"); @AT@ 28069 @LENGTH@ 123
---UPD VariableDeclarationFragment@@context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER) @TO@ context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 28086 @LENGTH@ 105
------INS MethodInvocation@@new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @TO@ VariableDeclarationFragment@@context=new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER) @AT@ 28120 @LENGTH@ 118
---------MOV ClassInstanceCreation@@ExtensionContextImpl[rootRegistration, deployments, persister, ProcessType.EMBEDDED_SERVER] @TO@ MethodInvocation@@new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 28096 @LENGTH@ 95
---------INS SimpleName@@MethodName:createTracking:["Test"] @TO@ MethodInvocation@@new ExtensionContextImpl(rootRegistration,deployments,persister,ProcessType.EMBEDDED_SERVER).createTracking("Test") @AT@ 28216 @LENGTH@ 22
------------INS StringLiteral@@"Test" @TO@ SimpleName@@MethodName:createTracking:["Test"] @AT@ 28231 @LENGTH@ 6


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]ContainerImpl, [Container] @AT@ 19650 @LENGTH@ 76
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 19650 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 19657 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 19661 @LENGTH@ 8
---INS ReturnStatement@@ConditionalExpression:id != null ? id.hashCode() : 0 @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 19682 @LENGTH@ 38
------INS ConditionalExpression@@id != null ? id.hashCode() : 0 @TO@ ReturnStatement@@ConditionalExpression:id != null ? id.hashCode() : 0 @AT@ 19689 @LENGTH@ 30
---------INS InfixExpression@@id != null @TO@ ConditionalExpression@@id != null ? id.hashCode() : 0 @AT@ 19689 @LENGTH@ 10
------------INS SimpleName@@id @TO@ InfixExpression@@id != null @AT@ 19689 @LENGTH@ 2
------------INS Operator@@!= @TO@ InfixExpression@@id != null @AT@ 19691 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@id != null @AT@ 19695 @LENGTH@ 4
---------INS MethodInvocation@@id.hashCode() @TO@ ConditionalExpression@@id != null ? id.hashCode() : 0 @AT@ 19702 @LENGTH@ 13
------------INS SimpleName@@Name:id @TO@ MethodInvocation@@id.hashCode() @AT@ 19702 @LENGTH@ 2
------------INS SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@id.hashCode() @AT@ 19705 @LENGTH@ 10
---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@id != null ? id.hashCode() : 0 @AT@ 19718 @LENGTH@ 1


UPD MethodDeclaration@@public, TransactionSynchronizationRegistry, MethodName:getTransactionSynchronizationRegistry,  @TO@ public, Value<TransactionSynchronizationRegistry>, MethodName:getTransactionSynchronizationRegistry,  @AT@ 35065 @LENGTH@ 172
---INS ParameterizedType@@Value<TransactionSynchronizationRegistry> @TO@ MethodDeclaration@@public, TransactionSynchronizationRegistry, MethodName:getTransactionSynchronizationRegistry,  @AT@ 35060 @LENGTH@ 41
------INS SimpleType@@Value @TO@ ParameterizedType@@Value<TransactionSynchronizationRegistry> @AT@ 35060 @LENGTH@ 5
------INS SimpleType@@TransactionSynchronizationRegistry @TO@ ParameterizedType@@Value<TransactionSynchronizationRegistry> @AT@ 35066 @LENGTH@ 34
---DEL SimpleType@@TransactionSynchronizationRegistry @AT@ 35072 @LENGTH@ 34
---UPD ReturnStatement@@MethodInvocation:this.transactionSynchronizationRegistry.getOptionalValue() @TO@ FieldAccess:this.transactionSynchronizationRegistry @AT@ 35161 @LENGTH@ 66
------INS FieldAccess@@this.transactionSynchronizationRegistry @TO@ ReturnStatement@@MethodInvocation:this.transactionSynchronizationRegistry.getOptionalValue() @AT@ 35163 @LENGTH@ 39
---------MOV ThisExpression@@this @TO@ FieldAccess@@this.transactionSynchronizationRegistry @AT@ 35168 @LENGTH@ 4
---------MOV SimpleName@@transactionSynchronizationRegistry @TO@ FieldAccess@@this.transactionSynchronizationRegistry @AT@ 35173 @LENGTH@ 34
------DEL MethodInvocation@@this.transactionSynchronizationRegistry.getOptionalValue() @AT@ 35168 @LENGTH@ 58
---------DEL FieldAccess@@this.transactionSynchronizationRegistry @AT@ 35168 @LENGTH@ 39
---------DEL SimpleName@@MethodName:getOptionalValue:[] @AT@ 35208 @LENGTH@ 18


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [USERNAME_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE,ModelType.STRING,false).setXmlName("attribute").setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @TO@ public, static, final, SimpleAttributeDefinition, [USERNAME_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE,ModelType.STRING,false).setXmlName("attribute").setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setValidateNull(false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 3729 @LENGTH@ 421
---UPD VariableDeclarationFragment@@USERNAME_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE,ModelType.STRING,false).setXmlName("attribute").setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ USERNAME_FILTER=new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE,ModelType.STRING,false).setXmlName("attribute").setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setValidateNull(false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 3775 @LENGTH@ 374
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE,ModelType.STRING,false).setXmlName("attribute").setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE,ModelType.STRING,false).setXmlName("attribute").setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setValidateNull(false).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 3793 @LENGTH@ 356
---------INS MethodInvocation@@MethodName:setValidateNull:[false] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelDescriptionConstants.USERNAME_ATTRIBUTE,ModelType.STRING,false).setXmlName("attribute").setAlternatives(ModelDescriptionConstants.ADVANCED_FILTER).setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,true,false)).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 3793 @LENGTH@ 340
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:setValidateNull:[false] @AT@ 4127 @LENGTH@ 5


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1781 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1781 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1791 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1799 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1815 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1815 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1821 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1838 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1857 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1864 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:allResourceRoots.addAll(deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS)) @AT@ 4899 @LENGTH@ 97
---DEL MethodInvocation@@allResourceRoots.addAll(deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS)) @AT@ 4899 @LENGTH@ 96
------DEL SimpleName@@Name:allResourceRoots @AT@ 4899 @LENGTH@ 16
------DEL SimpleName@@MethodName:addAll:[deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS)] @AT@ 4916 @LENGTH@ 79
---------DEL MethodInvocation@@deploymentUnit.getAttachmentList(Attachments.CLASS_PATH_RESOURCE_ROOTS) @AT@ 4923 @LENGTH@ 71
------------DEL SimpleName@@Name:deploymentUnit @AT@ 4923 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getAttachmentList:[Attachments.CLASS_PATH_RESOURCE_ROOTS] @AT@ 4938 @LENGTH@ 56
---------------DEL QualifiedName@@Attachments.CLASS_PATH_RESOURCE_ROOTS @AT@ 4956 @LENGTH@ 37
------------------DEL SimpleName@@Attachments @AT@ 4956 @LENGTH@ 11
------------------DEL SimpleName@@CLASS_PATH_RESOURCE_ROOTS @AT@ 4968 @LENGTH@ 25


UPD SwitchStatement@@switch (modelType) {case BIG_DECIMAL:  value.asBigDecimal();break;case BIG_INTEGER:value.asBigInteger();break;case BOOLEAN:value.asBoolean();break;case BYTES:value.asBytes();break;case DOUBLE:value.asDouble();break;case EXPRESSION:value.asString();break;case INT:value.asInt();break;case LIST:value.asList();break;case LONG:value.asLong();break;case OBJECT:value.asObject();break;case PROPERTY:value.asProperty();break;case STRING:value.asString();break;case TYPE:value.asType();break;} @TO@ switch (modelType) {case BIG_DECIMAL:  value.resolve().asBigDecimal();break;case BIG_INTEGER:value.resolve().asBigInteger();break;case BOOLEAN:value.resolve().asBoolean();break;case BYTES:value.resolve().asBytes();break;case DOUBLE:value.resolve().asDouble();break;case EXPRESSION:value.asString();break;case INT:value.resolve().asInt();break;case LIST:value.asList();break;case LONG:value.resolve().asLong();break;case OBJECT:value.asObject();break;case PROPERTY:value.asProperty();break;case STRING:value.asString();break;case TYPE:value.resolve().asType();break;} @AT@ 21105 @LENGTH@ 1104
---UPD ExpressionStatement@@MethodInvocation:value.asBigDecimal() @TO@ MethodInvocation:value.resolve().asBigDecimal() @AT@ 21172 @LENGTH@ 21
------UPD MethodInvocation@@value.asBigDecimal() @TO@ value.resolve().asBigDecimal() @AT@ 21172 @LENGTH@ 20
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBigDecimal() @AT@ 21172 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asBigInteger() @TO@ MethodInvocation:value.resolve().asBigInteger() @AT@ 21263 @LENGTH@ 21
------UPD MethodInvocation@@value.asBigInteger() @TO@ value.resolve().asBigInteger() @AT@ 21263 @LENGTH@ 20
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBigInteger() @AT@ 21273 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asBoolean() @TO@ MethodInvocation:value.resolve().asBoolean() @AT@ 21350 @LENGTH@ 18
------UPD MethodInvocation@@value.asBoolean() @TO@ value.resolve().asBoolean() @AT@ 21350 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBoolean() @AT@ 21370 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asBytes() @TO@ MethodInvocation:value.resolve().asBytes() @AT@ 21432 @LENGTH@ 16
------UPD MethodInvocation@@value.asBytes() @TO@ value.resolve().asBytes() @AT@ 21432 @LENGTH@ 15
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBytes() @AT@ 21462 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asDouble() @TO@ MethodInvocation:value.resolve().asDouble() @AT@ 21513 @LENGTH@ 17
------UPD MethodInvocation@@value.asDouble() @TO@ value.resolve().asDouble() @AT@ 21513 @LENGTH@ 16
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asDouble() @AT@ 21553 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asInt() @TO@ MethodInvocation:value.resolve().asInt() @AT@ 21678 @LENGTH@ 14
------UPD MethodInvocation@@value.asInt() @TO@ value.resolve().asInt() @AT@ 21678 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asInt() @AT@ 21728 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asLong() @TO@ MethodInvocation:value.resolve().asLong() @AT@ 21833 @LENGTH@ 15
------UPD MethodInvocation@@value.asLong() @TO@ value.resolve().asLong() @AT@ 21833 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asLong() @AT@ 21893 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asType() @TO@ MethodInvocation:value.resolve().asType() @AT@ 22161 @LENGTH@ 15
------UPD MethodInvocation@@value.asType() @TO@ value.resolve().asType() @AT@ 22161 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asType() @AT@ 22231 @LENGTH@ 15


DEL VariableDeclarationStatement@@Object instance=ctx.getComponent().getCache().get(ctx.getPrimaryKey()); @AT@ 5860 @LENGTH@ 73
---DEL SimpleType@@Object @AT@ 5860 @LENGTH@ 6
---DEL VariableDeclarationFragment@@instance=ctx.getComponent().getCache().get(ctx.getPrimaryKey()) @AT@ 5867 @LENGTH@ 65
------DEL SimpleName@@instance @AT@ 5867 @LENGTH@ 8
------DEL MethodInvocation@@ctx.getComponent().getCache().get(ctx.getPrimaryKey()) @AT@ 5878 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getCache:[] @AT@ 5878 @LENGTH@ 29
---------DEL MethodInvocation@@MethodName:getComponent:[] @AT@ 5878 @LENGTH@ 18
---------DEL SimpleName@@Name:ctx @AT@ 5878 @LENGTH@ 3
---------DEL SimpleName@@MethodName:get:[ctx.getPrimaryKey()] @AT@ 5908 @LENGTH@ 24
------------DEL MethodInvocation@@ctx.getPrimaryKey() @AT@ 5912 @LENGTH@ 19
---------------DEL SimpleName@@Name:ctx @AT@ 5912 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:getPrimaryKey:[] @AT@ 5916 @LENGTH@ 15


INS MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @TO@ TypeDeclaration@@[@XmlAccessorType(XmlAccessType.FIELD), public]ExpressionNode, ProcessorDefinition<ExpressionNode> @AT@ 3267 @LENGTH@ 148
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3267 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3277 @LENGTH@ 4
---INS SimpleName@@MethodName:configureChild @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3282 @LENGTH@ 14
---INS SingleVariableDeclaration@@ProcessorDefinition output @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3297 @LENGTH@ 26
------INS SimpleType@@ProcessorDefinition @TO@ SingleVariableDeclaration@@ProcessorDefinition output @AT@ 3297 @LENGTH@ 19
------INS SimpleName@@output @TO@ SingleVariableDeclaration@@ProcessorDefinition output @AT@ 3317 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:preCreateProcessor() @TO@ MethodDeclaration@@protected, void, MethodName:configureChild, ProcessorDefinition output,  @AT@ 3388 @LENGTH@ 21
------INS MethodInvocation@@MethodName:preCreateProcessor:[] @TO@ ExpressionStatement@@MethodInvocation:preCreateProcessor() @AT@ 3388 @LENGTH@ 20


UPD MethodDeclaration@@public, static, InputStream, MethodName:genericFileToInputStream, GenericFile<?> file, Exchange exchange, IOException,  @TO@ public, static, InputStream, MethodName:genericFileToInputStream, GenericFile<?> file, Exchange exchange, IOException, NoTypeConversionAvailableException,  @AT@ 2335 @LENGTH@ 766
---INS SimpleType@@NoTypeConversionAvailableException @TO@ MethodDeclaration@@public, static, InputStream, MethodName:genericFileToInputStream, GenericFile<?> file, Exchange exchange, IOException,  @AT@ 2435 @LENGTH@ 34
---UPD IfStatement@@if (exchange != null) {  if (file.getFile() instanceof java.io.File) {    return IOHelper.buffered(new FileInputStream((File)file.getFile()));  }  file.getBinding().loadContent(exchange,file);  return exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,file.getBody());} else {  return null;} @TO@ if (exchange != null) {  if (file.getFile() instanceof java.io.File) {    File f=(File)file.getFile();    InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f);    if (is != null) {      return is;    }  }  file.getBinding().loadContent(exchange,file);  return exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,file.getBody());} else {  return null;} @AT@ 2455 @LENGTH@ 640
------UPD Block@@ThenBody:{  if (file.getFile() instanceof java.io.File) {    return IOHelper.buffered(new FileInputStream((File)file.getFile()));  }  file.getBinding().loadContent(exchange,file);  return exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,file.getBody());} @TO@ ThenBody:{  if (file.getFile() instanceof java.io.File) {    File f=(File)file.getFile();    InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f);    if (is != null) {      return is;    }  }  file.getBinding().loadContent(exchange,file);  return exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,file.getBody());} @AT@ 2477 @LENGTH@ 496
---------UPD IfStatement@@if (file.getFile() instanceof java.io.File) {  return IOHelper.buffered(new FileInputStream((File)file.getFile()));} @TO@ if (file.getFile() instanceof java.io.File) {  File f=(File)file.getFile();  InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f);  if (is != null) {    return is;  }} @AT@ 2552 @LENGTH@ 145
------------UPD Block@@ThenBody:{  return IOHelper.buffered(new FileInputStream((File)file.getFile()));} @TO@ ThenBody:{  File f=(File)file.getFile();  InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f);  if (is != null) {    return is;  }} @AT@ 2596 @LENGTH@ 101
---------------DEL ReturnStatement@@MethodInvocation:IOHelper.buffered(new FileInputStream((File)file.getFile())) @AT@ 2614 @LENGTH@ 69
------------------DEL MethodInvocation@@IOHelper.buffered(new FileInputStream((File)file.getFile())) @AT@ 2621 @LENGTH@ 61
---------------INS VariableDeclarationStatement@@File f=(File)file.getFile(); @TO@ Block@@ThenBody:{  return IOHelper.buffered(new FileInputStream((File)file.getFile()));} @AT@ 2704 @LENGTH@ 31
------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File f=(File)file.getFile(); @AT@ 2704 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@f=(File)file.getFile() @TO@ VariableDeclarationStatement@@File f=(File)file.getFile(); @AT@ 2709 @LENGTH@ 25
---------------------MOV CastExpression@@(File)file.getFile() @TO@ VariableDeclarationFragment@@f=(File)file.getFile() @AT@ 2659 @LENGTH@ 21
---------------------INS SimpleName@@f @TO@ VariableDeclarationFragment@@f=(File)file.getFile() @AT@ 2709 @LENGTH@ 1
---------------INS VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f); @TO@ Block@@ThenBody:{  return IOHelper.buffered(new FileInputStream((File)file.getFile()));} @AT@ 2752 @LENGTH@ 100
------------------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f); @AT@ 2752 @LENGTH@ 11
------------------INS VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @TO@ VariableDeclarationStatement@@InputStream is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f); @AT@ 2764 @LENGTH@ 87
---------------------INS SimpleName@@is @TO@ VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @AT@ 2764 @LENGTH@ 2
---------------------INS MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @TO@ VariableDeclarationFragment@@is=exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @AT@ 2769 @LENGTH@ 82
------------------------MOV SimpleName@@Name:IOHelper @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @AT@ 2621 @LENGTH@ 8
------------------------MOV SimpleName@@MethodName:buffered:[new FileInputStream((File)file.getFile())] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @AT@ 2630 @LENGTH@ 52
---------------------------DEL ClassInstanceCreation@@FileInputStream[(File)file.getFile()] @AT@ 2639 @LENGTH@ 42
------------------------------DEL New@@new @AT@ 2639 @LENGTH@ 3
------------------------------DEL SimpleType@@FileInputStream @AT@ 2643 @LENGTH@ 15
---------------------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:buffered:[new FileInputStream((File)file.getFile())] @AT@ 2820 @LENGTH@ 17
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:buffered:[new FileInputStream((File)file.getFile())] @AT@ 2839 @LENGTH@ 8
---------------------------INS SimpleName@@f @TO@ SimpleName@@MethodName:buffered:[new FileInputStream((File)file.getFile())] @AT@ 2849 @LENGTH@ 1
------------------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @AT@ 2769 @LENGTH@ 40
------------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(InputStream.class,exchange,f) @AT@ 2769 @LENGTH@ 21
---------------INS IfStatement@@if (is != null) {  return is;} @TO@ Block@@ThenBody:{  return IOHelper.buffered(new FileInputStream((File)file.getFile()));} @AT@ 2869 @LENGTH@ 66
------------------INS InfixExpression@@is != null @TO@ IfStatement@@if (is != null) {  return is;} @AT@ 2873 @LENGTH@ 10
---------------------INS SimpleName@@is @TO@ InfixExpression@@is != null @AT@ 2873 @LENGTH@ 2
---------------------INS Operator@@!= @TO@ InfixExpression@@is != null @AT@ 2875 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@is != null @AT@ 2879 @LENGTH@ 4
------------------INS Block@@ThenBody:{  return is;} @TO@ IfStatement@@if (is != null) {  return is;} @AT@ 2885 @LENGTH@ 50
---------------------INS ReturnStatement@@SimpleName:is @TO@ Block@@ThenBody:{  return is;} @AT@ 2907 @LENGTH@ 10
------------------------INS SimpleName@@is @TO@ ReturnStatement@@SimpleName:is @AT@ 2914 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2076 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2076 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2084 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2098 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2114 @LENGTH@ 23


UPD FieldDeclaration@@private, final, static, transient, Logger, [LOG=LoggerFactory.getLogger(WireTapProcessor.class)] @TO@ private, static, final, transient, Logger, [LOG=LoggerFactory.getLogger(WireTapProcessor.class)] @AT@ 1793 @LENGTH@ 92
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, transient, Logger, [LOG=LoggerFactory.getLogger(WireTapProcessor.class)] @AT@ 1801 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1807 @LENGTH@ 6


UPD ReturnStatement@@CastExpression:(ConfigurationNode)nds.get(0) @TO@ MethodInvocation:nds.get(0) @AT@ 6558 @LENGTH@ 38
---DEL CastExpression@@(ConfigurationNode)nds.get(0) @AT@ 6565 @LENGTH@ 30
------DEL SimpleType@@ConfigurationNode @AT@ 6566 @LENGTH@ 17
---MOV MethodInvocation@@nds.get(0) @TO@ ReturnStatement@@CastExpression:(ConfigurationNode)nds.get(0) @AT@ 6585 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:executesMethodWithNamedParametersCorrectly, Exception,  @TO@ public, void, MethodName:deleteAllInBatch,  @AT@ 12344 @LENGTH@ 288
---UPD SimpleName@@MethodName:executesMethodWithNamedParametersCorrectly @TO@ MethodName:deleteAllInBatch @AT@ 12356 @LENGTH@ 42
---DEL SimpleType@@Exception @AT@ 12408 @LENGTH@ 9
---UPD ExpressionStatement@@Assignment:firstUser=repository.save(firstUser) @TO@ MethodInvocation:flushTestUsers() @AT@ 12425 @LENGTH@ 39
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@Assignment:firstUser=repository.save(firstUser) @AT@ 8462 @LENGTH@ 16
------DEL Assignment@@firstUser=repository.save(firstUser) @AT@ 12425 @LENGTH@ 38
---------DEL SimpleName@@firstUser @AT@ 12425 @LENGTH@ 9
---------DEL Operator@@= @AT@ 12434 @LENGTH@ 1
---------DEL MethodInvocation@@repository.save(firstUser) @AT@ 12437 @LENGTH@ 26
------------DEL SimpleName@@Name:repository @AT@ 12437 @LENGTH@ 10
------------DEL SimpleName@@MethodName:save:[firstUser] @AT@ 12448 @LENGTH@ 15
---------------DEL SimpleName@@firstUser @AT@ 12453 @LENGTH@ 9
---UPD ExpressionStatement@@Assignment:secondUser=repository.save(secondUser) @TO@ MethodInvocation:repository.deleteAllInBatch() @AT@ 12468 @LENGTH@ 41
------INS MethodInvocation@@repository.deleteAllInBatch() @TO@ ExpressionStatement@@Assignment:secondUser=repository.save(secondUser) @AT@ 8485 @LENGTH@ 29
---------MOV SimpleName@@Name:repository @TO@ MethodInvocation@@repository.deleteAllInBatch() @AT@ 12481 @LENGTH@ 10
---------MOV SimpleName@@MethodName:save:[secondUser] @TO@ MethodInvocation@@repository.deleteAllInBatch() @AT@ 12492 @LENGTH@ 16
------DEL Assignment@@secondUser=repository.save(secondUser) @AT@ 12468 @LENGTH@ 40
---------DEL SimpleName@@secondUser @AT@ 12468 @LENGTH@ 10
---------DEL Operator@@= @AT@ 12478 @LENGTH@ 1
---------DEL MethodInvocation@@repository.save(secondUser) @AT@ 12481 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:assertThat(repository.findByLastnameOrFirstnameUnannotated("Oliver","Arrasz"),hasItems(firstUser,secondUser)) @TO@ MethodInvocation:assertThat(repository.count(),is(0L)) @AT@ 12515 @LENGTH@ 113
------UPD MethodInvocation@@assertThat(repository.findByLastnameOrFirstnameUnannotated("Oliver","Arrasz"),hasItems(firstUser,secondUser)) @TO@ assertThat(repository.count(),is(0L)) @AT@ 12515 @LENGTH@ 112
---------UPD SimpleName@@MethodName:assertThat:[repository.findByLastnameOrFirstnameUnannotated("Oliver","Arrasz"), hasItems(firstUser,secondUser)] @TO@ MethodName:assertThat:[repository.count(), is(0L)] @AT@ 12515 @LENGTH@ 112
------------UPD MethodInvocation@@repository.findByLastnameOrFirstnameUnannotated("Oliver","Arrasz") @TO@ repository.count() @AT@ 12526 @LENGTH@ 67
---------------UPD SimpleName@@MethodName:findByLastnameOrFirstnameUnannotated:["Oliver", "Arrasz"] @TO@ MethodName:count:[] @AT@ 12537 @LENGTH@ 56
------------------DEL StringLiteral@@"Oliver" @AT@ 12574 @LENGTH@ 8
------------------DEL StringLiteral@@"Arrasz" @AT@ 12584 @LENGTH@ 8
------------UPD MethodInvocation@@hasItems(firstUser,secondUser) @TO@ is(0L) @AT@ 12595 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodName:is:[0L] @AT@ 12595 @LENGTH@ 31
------------------INS NumberLiteral@@0L @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 8555 @LENGTH@ 2
------------------DEL SimpleName@@firstUser @AT@ 12604 @LENGTH@ 9
------------------DEL SimpleName@@secondUser @AT@ 12615 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodName:is:[0L] @AT@ 12595 @LENGTH@ 31
------------------INS NumberLiteral@@0L @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 8555 @LENGTH@ 2
------------------DEL SimpleName@@firstUser @AT@ 12604 @LENGTH@ 9
------------------DEL SimpleName@@secondUser @AT@ 12615 @LENGTH@ 10


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1957 @LENGTH@ 166
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 1972 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2589 @LENGTH@ 185
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 2651 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2651 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2657 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2664 @LENGTH@ 11


UPD IfStatement@@if (shouldHandled(exchange,data) || shouldContinue(exchange,data)) {  exchange.getIn().removeHeader(Exchange.REDELIVERED);  exchange.getIn().removeHeader(Exchange.REDELIVERY_COUNTER);  exchange.getIn().removeHeader(Exchange.REDELIVERY_MAX_COUNTER);  handled=true;} else {  decrementRedeliveryCounter(exchange);} @TO@ if (shouldHandled(exchange,data) || shouldContinue(exchange,data)) {  exchange.getIn().removeHeader(Exchange.REDELIVERED);  exchange.getIn().removeHeader(Exchange.REDELIVERY_COUNTER);  exchange.getIn().removeHeader(Exchange.REDELIVERY_MAX_COUNTER);  exchange.removeProperty(Exchange.ROLLBACK_ONLY);  exchange.removeProperty(Exchange.UNIT_OF_WORK_EXHAUSTED);  handled=true;} else {  decrementRedeliveryCounter(exchange);} @AT@ 32094 @LENGTH@ 654
---UPD Block@@ThenBody:{  exchange.getIn().removeHeader(Exchange.REDELIVERED);  exchange.getIn().removeHeader(Exchange.REDELIVERY_COUNTER);  exchange.getIn().removeHeader(Exchange.REDELIVERY_MAX_COUNTER);  handled=true;} @TO@ ThenBody:{  exchange.getIn().removeHeader(Exchange.REDELIVERED);  exchange.getIn().removeHeader(Exchange.REDELIVERY_COUNTER);  exchange.getIn().removeHeader(Exchange.REDELIVERY_MAX_COUNTER);  exchange.removeProperty(Exchange.ROLLBACK_ONLY);  exchange.removeProperty(Exchange.UNIT_OF_WORK_EXHAUSTED);  handled=true;} @AT@ 32163 @LENGTH@ 322
------INS ExpressionStatement@@MethodInvocation:exchange.removeProperty(Exchange.ROLLBACK_ONLY) @TO@ Block@@ThenBody:{  exchange.getIn().removeHeader(Exchange.REDELIVERED);  exchange.getIn().removeHeader(Exchange.REDELIVERY_COUNTER);  exchange.getIn().removeHeader(Exchange.REDELIVERY_MAX_COUNTER);  handled=true;} @AT@ 32537 @LENGTH@ 48
---------INS MethodInvocation@@exchange.removeProperty(Exchange.ROLLBACK_ONLY) @TO@ ExpressionStatement@@MethodInvocation:exchange.removeProperty(Exchange.ROLLBACK_ONLY) @AT@ 32537 @LENGTH@ 47
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.removeProperty(Exchange.ROLLBACK_ONLY) @AT@ 32537 @LENGTH@ 8
------------INS SimpleName@@MethodName:removeProperty:[Exchange.ROLLBACK_ONLY] @TO@ MethodInvocation@@exchange.removeProperty(Exchange.ROLLBACK_ONLY) @AT@ 32546 @LENGTH@ 38
---------------INS QualifiedName@@Exchange.ROLLBACK_ONLY @TO@ SimpleName@@MethodName:removeProperty:[Exchange.ROLLBACK_ONLY] @AT@ 32561 @LENGTH@ 22
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.ROLLBACK_ONLY @AT@ 32561 @LENGTH@ 8
------------------INS SimpleName@@ROLLBACK_ONLY @TO@ QualifiedName@@Exchange.ROLLBACK_ONLY @AT@ 32570 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:exchange.removeProperty(Exchange.UNIT_OF_WORK_EXHAUSTED) @TO@ Block@@ThenBody:{  exchange.getIn().removeHeader(Exchange.REDELIVERED);  exchange.getIn().removeHeader(Exchange.REDELIVERY_COUNTER);  exchange.getIn().removeHeader(Exchange.REDELIVERY_MAX_COUNTER);  handled=true;} @AT@ 32598 @LENGTH@ 57
---------INS MethodInvocation@@exchange.removeProperty(Exchange.UNIT_OF_WORK_EXHAUSTED) @TO@ ExpressionStatement@@MethodInvocation:exchange.removeProperty(Exchange.UNIT_OF_WORK_EXHAUSTED) @AT@ 32598 @LENGTH@ 56
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.removeProperty(Exchange.UNIT_OF_WORK_EXHAUSTED) @AT@ 32598 @LENGTH@ 8
------------INS SimpleName@@MethodName:removeProperty:[Exchange.UNIT_OF_WORK_EXHAUSTED] @TO@ MethodInvocation@@exchange.removeProperty(Exchange.UNIT_OF_WORK_EXHAUSTED) @AT@ 32607 @LENGTH@ 47
---------------INS QualifiedName@@Exchange.UNIT_OF_WORK_EXHAUSTED @TO@ SimpleName@@MethodName:removeProperty:[Exchange.UNIT_OF_WORK_EXHAUSTED] @AT@ 32622 @LENGTH@ 31
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.UNIT_OF_WORK_EXHAUSTED @AT@ 32622 @LENGTH@ 8
------------------INS SimpleName@@UNIT_OF_WORK_EXHAUSTED @TO@ QualifiedName@@Exchange.UNIT_OF_WORK_EXHAUSTED @AT@ 32631 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:addOutput, ProcessorDefinition output,  @TO@ public, void, MethodName:addOutput, ProcessorDefinition<?> output,  @AT@ 2125 @LENGTH@ 157
---UPD SingleVariableDeclaration@@ProcessorDefinition output @TO@ ProcessorDefinition<?> output @AT@ 2147 @LENGTH@ 26
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ SingleVariableDeclaration@@ProcessorDefinition output @AT@ 2116 @LENGTH@ 22
---------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2116 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 2136 @LENGTH@ 1
------DEL SimpleType@@ProcessorDefinition @AT@ 2147 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2984 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2984 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2992 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3005 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3005 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3005 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3022 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3038 @LENGTH@ 21


UPD SwitchStatement@@switch (version) {case JBOSS_WEB_3_0:  wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_3_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_0:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_5_0:wmd=new JBoss50DTDWebMetaData();break;case JBOSS_WEB_5_1:wmd=new JBoss50WebMetaData();break;case JBOSS_WEB_6_0:wmd=new JBoss60WebMetaData();break;} @TO@ switch (version) {case JBOSS_WEB_3_0:  wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_3_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_0:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_5_0:wmd=new JBoss50DTDWebMetaData();break;case JBOSS_WEB_5_1:wmd=new JBoss50WebMetaData();break;case JBOSS_WEB_6_0:wmd=new JBoss60WebMetaData();break;case JBOSS_WEB_7_0:wmd=new JBoss70WebMetaData();break;} @AT@ 3394 @LENGTH@ 540
---INS SwitchCase@@case JBOSS_WEB_7_0: @TO@ SwitchStatement@@switch (version) {case JBOSS_WEB_3_0:  wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_3_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_0:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_5_0:wmd=new JBoss50DTDWebMetaData();break;case JBOSS_WEB_5_1:wmd=new JBoss50WebMetaData();break;case JBOSS_WEB_6_0:wmd=new JBoss60WebMetaData();break;} @AT@ 3992 @LENGTH@ 19
------INS SimpleName@@JBOSS_WEB_7_0 @TO@ SwitchCase@@case JBOSS_WEB_7_0: @AT@ 3997 @LENGTH@ 13
---INS ExpressionStatement@@Assignment:wmd=new JBoss70WebMetaData() @TO@ SwitchStatement@@switch (version) {case JBOSS_WEB_3_0:  wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_3_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_0:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_5_0:wmd=new JBoss50DTDWebMetaData();break;case JBOSS_WEB_5_1:wmd=new JBoss50WebMetaData();break;case JBOSS_WEB_6_0:wmd=new JBoss60WebMetaData();break;} @AT@ 4012 @LENGTH@ 31
------INS Assignment@@wmd=new JBoss70WebMetaData() @TO@ ExpressionStatement@@Assignment:wmd=new JBoss70WebMetaData() @AT@ 4012 @LENGTH@ 30
---------INS SimpleName@@wmd @TO@ Assignment@@wmd=new JBoss70WebMetaData() @AT@ 4012 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@wmd=new JBoss70WebMetaData() @AT@ 4015 @LENGTH@ 1
---------INS ClassInstanceCreation@@JBoss70WebMetaData[] @TO@ Assignment@@wmd=new JBoss70WebMetaData() @AT@ 4018 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@JBoss70WebMetaData[] @AT@ 4018 @LENGTH@ 3
------------INS SimpleType@@JBoss70WebMetaData @TO@ ClassInstanceCreation@@JBoss70WebMetaData[] @AT@ 4022 @LENGTH@ 18
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (version) {case JBOSS_WEB_3_0:  wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_3_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_0:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_4_2:wmd=new JBoss4xDTDWebMetaData();break;case JBOSS_WEB_5_0:wmd=new JBoss50DTDWebMetaData();break;case JBOSS_WEB_5_1:wmd=new JBoss50WebMetaData();break;case JBOSS_WEB_6_0:wmd=new JBoss60WebMetaData();break;} @AT@ 4044 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2151 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2305 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2340 @LENGTH@ 86
------INS MethodInvocation@@QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2340 @LENGTH@ 85
---------INS QualifiedName@@Name:QueuelessThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2340 @LENGTH@ 31
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@QueuelessThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2372 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2387 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2396 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2407 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2414 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2420 @LENGTH@ 4


INS MethodDeclaration@@IllegalStateException, MethodName:cannotCallTimerServiceMethod, String methodName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]EjbMessages,  @AT@ 78051 @LENGTH@ 48
---INS SimpleType@@IllegalStateException @TO@ MethodDeclaration@@IllegalStateException, MethodName:cannotCallTimerServiceMethod, String methodName,  @AT@ 78029 @LENGTH@ 21
---INS SimpleName@@MethodName:cannotCallTimerServiceMethod @TO@ MethodDeclaration@@IllegalStateException, MethodName:cannotCallTimerServiceMethod, String methodName,  @AT@ 78051 @LENGTH@ 28
---INS SingleVariableDeclaration@@String methodName @TO@ MethodDeclaration@@IllegalStateException, MethodName:cannotCallTimerServiceMethod, String methodName,  @AT@ 78080 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String methodName @AT@ 78080 @LENGTH@ 6
------INS SimpleName@@methodName @TO@ SingleVariableDeclaration@@String methodName @AT@ 78087 @LENGTH@ 10


UPD VariableDeclarationStatement@@String url="vm://test-broker-" + id + "?broker.persistent=true&broker.useJmx=false"; @TO@ String url="vm://test-broker-" + id + "?broker.persistent=true&broker.useJmx=false&broker.dataDirectory="+ dir; @AT@ 3119 @LENGTH@ 86
---UPD VariableDeclarationFragment@@url="vm://test-broker-" + id + "?broker.persistent=true&broker.useJmx=false" @TO@ url="vm://test-broker-" + id + "?broker.persistent=true&broker.useJmx=false&broker.dataDirectory="+ dir @AT@ 3126 @LENGTH@ 78
------UPD InfixExpression@@"vm://test-broker-" + id + "?broker.persistent=true&broker.useJmx=false" @TO@ "vm://test-broker-" + id + "?broker.persistent=true&broker.useJmx=false&broker.dataDirectory="+ dir @AT@ 3132 @LENGTH@ 72
---------UPD StringLiteral@@"?broker.persistent=true&broker.useJmx=false" @TO@ "?broker.persistent=true&broker.useJmx=false&broker.dataDirectory=" @AT@ 3159 @LENGTH@ 45
---------INS SimpleName@@dir @TO@ InfixExpression@@"vm://test-broker-" + id + "?broker.persistent=true&broker.useJmx=false" @AT@ 3332 @LENGTH@ 3


UPD MethodDeclaration@@protected, void, MethodName:applyOperation, final OperationContext context, ModelNode operation, String attributeName, ServiceController<?> service,  @TO@ protected, void, MethodName:applyOperation, final OperationContext context, ModelNode operation, String attributeName, ServiceController<?> service, boolean forRollback,  @AT@ 1919 @LENGTH@ 347
---DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unexpected attribute '" + attributeName + "'") @AT@ 2065 @LENGTH@ 83
------DEL ClassInstanceCreation@@IllegalArgumentException["Unexpected attribute '" + attributeName + "'"] @AT@ 2071 @LENGTH@ 76
---------DEL New@@new @AT@ 2071 @LENGTH@ 3
---------DEL SimpleType@@IllegalArgumentException @AT@ 2075 @LENGTH@ 24
---------DEL InfixExpression@@"Unexpected attribute '" + attributeName + "'" @AT@ 2100 @LENGTH@ 46
------------DEL StringLiteral@@"Unexpected attribute '" @AT@ 2100 @LENGTH@ 24
------------DEL Operator@@+ @AT@ 2124 @LENGTH@ 1
------------DEL SimpleName@@attributeName @AT@ 2127 @LENGTH@ 13
------------DEL StringLiteral@@"'" @AT@ 2143 @LENGTH@ 3
---INS SingleVariableDeclaration@@boolean forRollback @TO@ MethodDeclaration@@protected, void, MethodName:applyOperation, final OperationContext context, ModelNode operation, String attributeName, ServiceController<?> service,  @AT@ 2088 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean forRollback @AT@ 2088 @LENGTH@ 7
------INS SimpleName@@forRollback @TO@ SingleVariableDeclaration@@boolean forRollback @AT@ 2096 @LENGTH@ 11
---INS IfStatement@@if (!forRollback) {  throw ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName);} @TO@ MethodDeclaration@@protected, void, MethodName:applyOperation, final OperationContext context, ModelNode operation, String attributeName, ServiceController<?> service,  @AT@ 2119 @LENGTH@ 225
------INS PrefixExpression@@!forRollback @TO@ IfStatement@@if (!forRollback) {  throw ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName);} @AT@ 2123 @LENGTH@ 12
---------INS Operator@@! @TO@ PrefixExpression@@!forRollback @AT@ 2123 @LENGTH@ 1
---------INS SimpleName@@forRollback @TO@ PrefixExpression@@!forRollback @AT@ 2124 @LENGTH@ 11
------INS Block@@ThenBody:{  throw ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName);} @TO@ IfStatement@@if (!forRollback) {  throw ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName);} @AT@ 2137 @LENGTH@ 207
---------INS ThrowStatement@@MethodInvocation:ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName) @TO@ Block@@ThenBody:{  throw ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName);} @AT@ 2248 @LENGTH@ 86
------------INS MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName) @TO@ ThrowStatement@@MethodInvocation:ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName) @AT@ 2254 @LENGTH@ 79
---------------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName) @AT@ 2254 @LENGTH@ 24
---------------INS SimpleName@@MethodName:unsupportedScheduledThreadPoolAttribute:[attributeName] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolAttribute(attributeName) @AT@ 2279 @LENGTH@ 54
------------------INS SimpleName@@attributeName @TO@ SimpleName@@MethodName:unsupportedScheduledThreadPoolAttribute:[attributeName] @AT@ 2319 @LENGTH@ 13


UPD FieldDeclaration@@private, final, boolean, [includeOnMenu=true] @TO@ private, boolean, [includeOnMenu=true] @AT@ 945 @LENGTH@ 43
---DEL Modifier@@final @AT@ 953 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3150 @LENGTH@ 324
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3212 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3212 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3218 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3225 @LENGTH@ 11


MOV MethodDeclaration@@protected, SessionID, MethodName:openSession, final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName, Exception,  @TO@ TypeDeclaration@@[public]LocalEjbReceiver, EJBReceiver[Service<LocalEjbReceiver>] @AT@ 9690 @LENGTH@ 777


UPD MethodDeclaration@@public, void, MethodName:testNullValue, Exception,  @TO@ public, void, MethodName:testProperty, Exception,  @AT@ 1561 @LENGTH@ 313
---UPD SimpleName@@MethodName:testNullValue @TO@ MethodName:testProperty @AT@ 1573 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:warFile=new File(tempDir + File.separator + "SimpleServlet.war") @TO@ Assignment:warFile=new File(tempDir,"SimpleServlet.war") @AT@ 2438 @LENGTH@ 67
---UPD Assignment@@warFile=new File(tempDir + File.separator + "SimpleServlet.war") @TO@ warFile=new File(tempDir,"SimpleServlet.war") @AT@ 2438 @LENGTH@ 66
------UPD ClassInstanceCreation@@File[tempDir + File.separator + "SimpleServlet.war"] @TO@ File[tempDir, "SimpleServlet.war"] @AT@ 2448 @LENGTH@ 56
---------DEL InfixExpression@@tempDir + File.separator + "SimpleServlet.war" @AT@ 2457 @LENGTH@ 46
------------DEL SimpleName@@tempDir @AT@ 2457 @LENGTH@ 7
------------DEL Operator@@+ @AT@ 2464 @LENGTH@ 1
------------DEL QualifiedName@@File.separator @AT@ 2467 @LENGTH@ 14
---------------DEL SimpleName@@File @AT@ 2467 @LENGTH@ 4
---------------DEL SimpleName@@separator @AT@ 2472 @LENGTH@ 9
------------DEL StringLiteral@@"SimpleServlet.war" @AT@ 2484 @LENGTH@ 19
---------INS SimpleName@@tempDir @TO@ ClassInstanceCreation@@File[tempDir + File.separator + "SimpleServlet.war"] @AT@ 2457 @LENGTH@ 7
---------INS StringLiteral@@"SimpleServlet.war" @TO@ ClassInstanceCreation@@File[tempDir + File.separator + "SimpleServlet.war"] @AT@ 2466 @LENGTH@ 19


UPD ExpressionStatement@@ClassInstanceCreation:new MagicNumberFileFilter((String)"",-1) @TO@ ClassInstanceCreation:new MagicNumberFileFilter("0",-1) @AT@ 45223 @LENGTH@ 42
---UPD ClassInstanceCreation@@MagicNumberFileFilter[(String)"", -1] @TO@ MagicNumberFileFilter["0", -1] @AT@ 45223 @LENGTH@ 41
------DEL CastExpression@@(String)"" @AT@ 45249 @LENGTH@ 10
---------DEL SimpleType@@String @AT@ 45250 @LENGTH@ 6
---------DEL StringLiteral@@"" @AT@ 45257 @LENGTH@ 2
------INS StringLiteral@@"0" @TO@ ClassInstanceCreation@@MagicNumberFileFilter[(String)"", -1] @AT@ 45249 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:cli.sendLine("connect",false) @TO@ MethodInvocation:cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @AT@ 2017 @LENGTH@ 31
---UPD MethodInvocation@@cli.sendLine("connect",false) @TO@ cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @AT@ 2017 @LENGTH@ 30
------UPD SimpleName@@MethodName:sendLine:["connect", false] @TO@ MethodName:sendLine:["connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(), false] @AT@ 2021 @LENGTH@ 26
---------INS InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @TO@ SimpleName@@MethodName:sendLine:["connect", false] @AT@ 1975 @LENGTH@ 83
------------INS StringLiteral@@"connect " @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1975 @LENGTH@ 10
------------INS Operator@@+ @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1985 @LENGTH@ 1
------------INS MethodInvocation@@ServerAddress.getServerAddress() @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 1988 @LENGTH@ 32
---------------INS SimpleName@@Name:ServerAddress @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 1988 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 2002 @LENGTH@ 18
------------INS StringLiteral@@":" @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 2023 @LENGTH@ 3
------------INS MethodInvocation@@ServerAddress.getServerPort() @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 2029 @LENGTH@ 29
---------------INS SimpleName@@Name:ServerAddress @TO@ MethodInvocation@@ServerAddress.getServerPort() @AT@ 2029 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getServerPort:[] @TO@ MethodInvocation@@ServerAddress.getServerPort() @AT@ 2043 @LENGTH@ 15
---------DEL StringLiteral@@"connect" @AT@ 2030 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:destroy,  @TO@ public, final, void, MethodName:destroy,  @AT@ 3748 @LENGTH@ 697
---INS Modifier@@final @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3755 @LENGTH@ 5
---UPD IfStatement@@if (doneUpdater.compareAndSet(this,0,1)) try {  final ManagedReference reference=instanceReference.get();  if (reference != null) {    final InterceptorContext interceptorContext=prepareInterceptorContext();    interceptorContext.setTarget(reference.getInstance());    interceptorContext.putPrivateData(InvocationType.class,InvocationType.PRE_DESTROY);    preDestroy.processInvocation(interceptorContext);  }} catch (Exception e) {  ROOT_LOGGER.componentDestroyFailure(e,this);} finally {  component.finishDestroy();} @TO@ if (doneUpdater.compareAndSet(this,0,1)) try {  preDestroy();  final ManagedReference reference=instanceReference.get();  if (reference != null) {    final InterceptorContext interceptorContext=prepareInterceptorContext();    interceptorContext.setTarget(reference.getInstance());    interceptorContext.putPrivateData(InvocationType.class,InvocationType.PRE_DESTROY);    preDestroy.processInvocation(interceptorContext);  }} catch (Exception e) {  ROOT_LOGGER.componentDestroyFailure(e,this);} finally {  component.finishDestroy();} @AT@ 3780 @LENGTH@ 659
------UPD Block@@ThenBody:try {  final ManagedReference reference=instanceReference.get();  if (reference != null) {    final InterceptorContext interceptorContext=prepareInterceptorContext();    interceptorContext.setTarget(reference.getInstance());    interceptorContext.putPrivateData(InvocationType.class,InvocationType.PRE_DESTROY);    preDestroy.processInvocation(interceptorContext);  }} catch (Exception e) {  ROOT_LOGGER.componentDestroyFailure(e,this);} finally {  component.finishDestroy();} @TO@ ThenBody:try {  preDestroy();  final ManagedReference reference=instanceReference.get();  if (reference != null) {    final InterceptorContext interceptorContext=prepareInterceptorContext();    interceptorContext.setTarget(reference.getInstance());    interceptorContext.putPrivateData(InvocationType.class,InvocationType.PRE_DESTROY);    preDestroy.processInvocation(interceptorContext);  }} catch (Exception e) {  ROOT_LOGGER.componentDestroyFailure(e,this);} finally {  component.finishDestroy();} @AT@ 3823 @LENGTH@ 616
---------UPD TryStatement@@try {  final ManagedReference reference=instanceReference.get();  if (reference != null) {    final InterceptorContext interceptorContext=prepareInterceptorContext();    interceptorContext.setTarget(reference.getInstance());    interceptorContext.putPrivateData(InvocationType.class,InvocationType.PRE_DESTROY);    preDestroy.processInvocation(interceptorContext);  }} catch (Exception e) {  ROOT_LOGGER.componentDestroyFailure(e,this);} finally {  component.finishDestroy();} @TO@ try {  preDestroy();  final ManagedReference reference=instanceReference.get();  if (reference != null) {    final InterceptorContext interceptorContext=prepareInterceptorContext();    interceptorContext.setTarget(reference.getInstance());    interceptorContext.putPrivateData(InvocationType.class,InvocationType.PRE_DESTROY);    preDestroy.processInvocation(interceptorContext);  }} catch (Exception e) {  ROOT_LOGGER.componentDestroyFailure(e,this);} finally {  component.finishDestroy();} @AT@ 3823 @LENGTH@ 616
------------INS ExpressionStatement@@MethodInvocation:preDestroy() @TO@ TryStatement@@try {  final ManagedReference reference=instanceReference.get();  if (reference != null) {    final InterceptorContext interceptorContext=prepareInterceptorContext();    interceptorContext.setTarget(reference.getInstance());    interceptorContext.putPrivateData(InvocationType.class,InvocationType.PRE_DESTROY);    preDestroy.processInvocation(interceptorContext);  }} catch (Exception e) {  ROOT_LOGGER.componentDestroyFailure(e,this);} finally {  component.finishDestroy();} @AT@ 3847 @LENGTH@ 13
---------------INS MethodInvocation@@MethodName:preDestroy:[] @TO@ ExpressionStatement@@MethodInvocation:preDestroy() @AT@ 3847 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:this.connectionURI=new URI(REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port) @TO@ Assignment:this.connectionURI=new URI(REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port) @AT@ 7000 @LENGTH@ 99
---UPD Assignment@@this.connectionURI=new URI(REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port) @TO@ this.connectionURI=new URI(REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port) @AT@ 7000 @LENGTH@ 98
------UPD ClassInstanceCreation@@URI[REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port] @TO@ URI[REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port] @AT@ 7021 @LENGTH@ 77
---------UPD InfixExpression@@REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port @TO@ REMOTE_URI_SCHEME + NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) + ":"+ port @AT@ 7029 @LENGTH@ 68
------------DEL MethodInvocation@@destinationAddress.getHostAddress() @AT@ 7049 @LENGTH@ 35
------------INS MethodInvocation@@NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) @TO@ InfixExpression@@REMOTE_URI_SCHEME + destinationAddress.getHostAddress() + ":"+ port @AT@ 7091 @LENGTH@ 76
---------------INS SimpleName@@Name:NetworkUtils @TO@ MethodInvocation@@NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) @AT@ 7091 @LENGTH@ 12
---------------INS SimpleName@@MethodName:formatPossibleIpv6Address:[destinationAddress.getHostAddress()] @TO@ MethodInvocation@@NetworkUtils.formatPossibleIpv6Address(destinationAddress.getHostAddress()) @AT@ 7104 @LENGTH@ 63
------------------INS MethodInvocation@@destinationAddress.getHostAddress() @TO@ SimpleName@@MethodName:formatPossibleIpv6Address:[destinationAddress.getHostAddress()] @AT@ 7131 @LENGTH@ 35
---------------------MOV SimpleName@@Name:destinationAddress @TO@ MethodInvocation@@destinationAddress.getHostAddress() @AT@ 7049 @LENGTH@ 18
---------------------MOV SimpleName@@MethodName:getHostAddress:[] @TO@ MethodInvocation@@destinationAddress.getHostAddress() @AT@ 7068 @LENGTH@ 16


UPD ThrowStatement@@ClassInstanceCreation:new MojoExecutionException(String.format("Could not execute goal %s on %s. Reason: %s",goal(),file().getName(),e.getMessage()),e) @TO@ ClassInstanceCreation:new MojoExecutionException(String.format("Could not execute goal %s on %s. Reason: %s",goal(),file(),e.getMessage()),e) @AT@ 8682 @LENGTH@ 140
---UPD ClassInstanceCreation@@MojoExecutionException[String.format("Could not execute goal %s on %s. Reason: %s",goal(),file().getName(),e.getMessage()), e] @TO@ MojoExecutionException[String.format("Could not execute goal %s on %s. Reason: %s",goal(),file(),e.getMessage()), e] @AT@ 8688 @LENGTH@ 133
------UPD MethodInvocation@@String.format("Could not execute goal %s on %s. Reason: %s",goal(),file().getName(),e.getMessage()) @TO@ String.format("Could not execute goal %s on %s. Reason: %s",goal(),file(),e.getMessage()) @AT@ 8715 @LENGTH@ 102
---------UPD SimpleName@@MethodName:format:["Could not execute goal %s on %s. Reason: %s", goal(), file().getName(), e.getMessage()] @TO@ MethodName:format:["Could not execute goal %s on %s. Reason: %s", goal(), file(), e.getMessage()] @AT@ 8722 @LENGTH@ 95
------------DEL MethodInvocation@@file().getName() @AT@ 8784 @LENGTH@ 16
---------------DEL MethodInvocation@@MethodName:file:[] @AT@ 8784 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 8791 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:file:[] @TO@ SimpleName@@MethodName:format:["Could not execute goal %s on %s. Reason: %s", goal(), file().getName(), e.getMessage()] @AT@ 8784 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:new CoreGroupCommunicationService(SCOPE_ID).build(target,container).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:new CoreGroupCommunicationService(SCOPE_ID).build(target,container).addDependency(cacheServiceName).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 7020 @LENGTH@ 128
---UPD MethodInvocation@@new CoreGroupCommunicationService(SCOPE_ID).build(target,container).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ new CoreGroupCommunicationService(SCOPE_ID).build(target,container).addDependency(cacheServiceName).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 7020 @LENGTH@ 127
------INS MethodInvocation@@MethodName:addDependency:[cacheServiceName] @TO@ MethodInvocation@@new CoreGroupCommunicationService(SCOPE_ID).build(target,container).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 7137 @LENGTH@ 100
---------INS SimpleName@@cacheServiceName @TO@ MethodInvocation@@MethodName:addDependency:[cacheServiceName] @AT@ 7220 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:instance.removeAllTimers() @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 3779 @LENGTH@ 27
---INS MethodInvocation@@instance.removeAllTimers() @TO@ ExpressionStatement@@MethodInvocation:instance.removeAllTimers() @AT@ 3779 @LENGTH@ 26
------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.removeAllTimers() @AT@ 3779 @LENGTH@ 8
------INS SimpleName@@MethodName:removeAllTimers:[] @TO@ MethodInvocation@@instance.removeAllTimers() @AT@ 3788 @LENGTH@ 17


DEL ExpressionStatement@@MethodInvocation:tokenStore.storeRefreshToken(refreshToken,authentication) @AT@ 8923 @LENGTH@ 59
---DEL MethodInvocation@@tokenStore.storeRefreshToken(refreshToken,authentication) @AT@ 8923 @LENGTH@ 58
------DEL SimpleName@@Name:tokenStore @AT@ 8923 @LENGTH@ 10
------DEL SimpleName@@MethodName:storeRefreshToken:[refreshToken, authentication] @AT@ 8934 @LENGTH@ 47
---------DEL SimpleName@@refreshToken @AT@ 8952 @LENGTH@ 12
---------DEL SimpleName@@authentication @AT@ 8966 @LENGTH@ 14


DEL ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_RESOLVE_EJB_INJECTIONS,new EjbInjectionResolutionProcessor()) @AT@ 13262 @LENGTH@ 131
---DEL MethodInvocation@@processorTarget.addDeploymentProcessor(Phase.INSTALL,Phase.INSTALL_RESOLVE_EJB_INJECTIONS,new EjbInjectionResolutionProcessor()) @AT@ 13262 @LENGTH@ 130
------DEL SimpleName@@Name:processorTarget @AT@ 13262 @LENGTH@ 15
------DEL SimpleName@@MethodName:addDeploymentProcessor:[Phase.INSTALL, Phase.INSTALL_RESOLVE_EJB_INJECTIONS, new EjbInjectionResolutionProcessor()] @AT@ 13278 @LENGTH@ 114
---------DEL QualifiedName@@Phase.INSTALL @AT@ 13301 @LENGTH@ 13
------------DEL SimpleName@@Phase @AT@ 13301 @LENGTH@ 5
------------DEL SimpleName@@INSTALL @AT@ 13307 @LENGTH@ 7
---------DEL QualifiedName@@Phase.INSTALL_RESOLVE_EJB_INJECTIONS @AT@ 13316 @LENGTH@ 36
------------DEL SimpleName@@Phase @AT@ 13316 @LENGTH@ 5
------------DEL SimpleName@@INSTALL_RESOLVE_EJB_INJECTIONS @AT@ 13322 @LENGTH@ 30
---------DEL ClassInstanceCreation@@EjbInjectionResolutionProcessor[] @AT@ 13354 @LENGTH@ 37
------------DEL New@@new @AT@ 13354 @LENGTH@ 3
------------DEL SimpleType@@EjbInjectionResolutionProcessor @AT@ 13358 @LENGTH@ 31


UPD MethodDeclaration@@public, void, MethodName:testGetConstumerWithHttpCentralClientAPI, Exception,  @TO@ public, void, MethodName:testGetCostumerWithHttpCentralClientAPI, Exception,  @AT@ 2739 @LENGTH@ 139
---UPD SimpleName@@MethodName:testGetConstumerWithHttpCentralClientAPI @TO@ MethodName:testGetCostumerWithHttpCentralClientAPI @AT@ 2751 @LENGTH@ 40


UPD VariableDeclarationStatement@@List<ProcessorDefinition> list=getOutputs(); @TO@ List<ProcessorDefinition<?>> list=getOutputs(); @AT@ 1897 @LENGTH@ 46
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 1897 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 1902 @LENGTH@ 22
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1902 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1922 @LENGTH@ 1


INS MethodDeclaration@@public, String, MethodName:createSessionId,  @TO@ TypeDeclaration@@[public]MockDistributedCacheManager, [DistributedCacheManager<OutgoingDistributableSessionData>] @AT@ 4196 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 4196 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 4203 @LENGTH@ 6
---INS SimpleName@@MethodName:createSessionId @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 4210 @LENGTH@ 15
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 4238 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4245 @LENGTH@ 4


UPD TryStatement@@try {  String node0=System.getProperty("node0","not-defined");  URL url=new URL("http://" + node0 + ":8080/jbws3207/?wsdl");  System.out.println("Reading response from " + url + ":");  conn=url.openConnection();  conn.setDoInput(true);  in=new BufferedInputStream(conn.getInputStream());  int i=in.read();  while (i != -1) {    System.out.print((char)i);    i=in.read();  }  System.out.println("");}  finally {  safeClose(in);} @TO@ try {  URL url=new URL("http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl");  System.out.println("Reading response from " + url + ":");  conn=url.openConnection();  conn.setDoInput(true);  in=new BufferedInputStream(conn.getInputStream());  int i=in.read();  while (i != -1) {    System.out.print((char)i);    i=in.read();  }  System.out.println("");}  finally {  safeClose(in);} @AT@ 3975 @LENGTH@ 605
---DEL VariableDeclarationStatement@@String node0=System.getProperty("node0","not-defined"); @AT@ 3993 @LENGTH@ 58
------DEL SimpleType@@String @AT@ 3993 @LENGTH@ 6
------DEL VariableDeclarationFragment@@node0=System.getProperty("node0","not-defined") @AT@ 4000 @LENGTH@ 50
---------DEL SimpleName@@node0 @AT@ 4000 @LENGTH@ 5
---------DEL MethodInvocation@@System.getProperty("node0","not-defined") @AT@ 4008 @LENGTH@ 42
------------DEL SimpleName@@Name:System @AT@ 4008 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["node0", "not-defined"] @AT@ 4015 @LENGTH@ 35
---------------DEL StringLiteral@@"node0" @AT@ 4027 @LENGTH@ 7
---------------DEL StringLiteral@@"not-defined" @AT@ 4036 @LENGTH@ 13
---UPD VariableDeclarationStatement@@URL url=new URL("http://" + node0 + ":8080/jbws3207/?wsdl"); @TO@ URL url=new URL("http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl"); @AT@ 4064 @LENGTH@ 62
------UPD VariableDeclarationFragment@@url=new URL("http://" + node0 + ":8080/jbws3207/?wsdl") @TO@ url=new URL("http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl") @AT@ 4068 @LENGTH@ 57
---------UPD ClassInstanceCreation@@URL["http://" + node0 + ":8080/jbws3207/?wsdl"] @TO@ URL["http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl"] @AT@ 4074 @LENGTH@ 51
------------UPD InfixExpression@@"http://" + node0 + ":8080/jbws3207/?wsdl" @TO@ "http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl" @AT@ 4082 @LENGTH@ 42
---------------INS MethodInvocation@@ServerAddress.getServerAddress() @TO@ InfixExpression@@"http://" + node0 + ":8080/jbws3207/?wsdl" @AT@ 4070 @LENGTH@ 32
------------------INS SimpleName@@Name:ServerAddress @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 4070 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 4084 @LENGTH@ 18
---------------DEL SimpleName@@node0 @AT@ 4094 @LENGTH@ 5


UPD IfStatement@@if (obj instanceof List) {  return maybeConvertList((List<?>)obj);} @TO@ if (obj instanceof Collection) {  return maybeConvertList((Collection<?>)obj);} @AT@ 28591 @LENGTH@ 73
---UPD InstanceofExpression@@obj instanceof List @TO@ obj instanceof Collection @AT@ 28595 @LENGTH@ 19
------UPD SimpleType@@List @TO@ Collection @AT@ 28610 @LENGTH@ 4
---UPD Block@@ThenBody:{  return maybeConvertList((List<?>)obj);} @TO@ ThenBody:{  return maybeConvertList((Collection<?>)obj);} @AT@ 28616 @LENGTH@ 48
------UPD ReturnStatement@@MethodInvocation:maybeConvertList((List<?>)obj) @TO@ MethodInvocation:maybeConvertList((Collection<?>)obj) @AT@ 28621 @LENGTH@ 39
---------UPD MethodInvocation@@maybeConvertList((List<?>)obj) @TO@ maybeConvertList((Collection<?>)obj) @AT@ 28628 @LENGTH@ 31
------------UPD SimpleName@@MethodName:maybeConvertList:[(List<?>)obj] @TO@ MethodName:maybeConvertList:[(Collection<?>)obj] @AT@ 28628 @LENGTH@ 31
---------------UPD CastExpression@@(List<?>)obj @TO@ (Collection<?>)obj @AT@ 28645 @LENGTH@ 13
------------------UPD ParameterizedType@@List<?> @TO@ Collection<?> @AT@ 28646 @LENGTH@ 7
---------------------UPD SimpleType@@List @TO@ Collection @AT@ 28646 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:TimerServiceDisabledTacker.assertEnabled() @TO@ MethodDeclaration@@protected, void, MethodName:assertTimerState,  @AT@ 16378 @LENGTH@ 43
---INS MethodInvocation@@TimerServiceDisabledTacker.assertEnabled() @TO@ ExpressionStatement@@MethodInvocation:TimerServiceDisabledTacker.assertEnabled() @AT@ 16378 @LENGTH@ 42
------INS SimpleName@@Name:TimerServiceDisabledTacker @TO@ MethodInvocation@@TimerServiceDisabledTacker.assertEnabled() @AT@ 16378 @LENGTH@ 26
------INS SimpleName@@MethodName:assertEnabled:[] @TO@ MethodInvocation@@TimerServiceDisabledTacker.assertEnabled() @AT@ 16405 @LENGTH@ 15


UPD IfStatement@@if (expression.getExpressionValue() != null) {  exp=expression.getExpressionValue();} @TO@ if (expression != null && expression.getExpressionValue() != null) {  exp=expression.getExpressionValue();} @AT@ 4132 @LENGTH@ 107
---INS InfixExpression@@expression != null && expression.getExpressionValue() != null @TO@ IfStatement@@if (expression.getExpressionValue() != null) {  exp=expression.getExpressionValue();} @AT@ 4136 @LENGTH@ 61
------MOV InfixExpression@@expression.getExpressionValue() != null @TO@ InfixExpression@@expression != null && expression.getExpressionValue() != null @AT@ 4136 @LENGTH@ 39
------INS InfixExpression@@expression != null @TO@ InfixExpression@@expression != null && expression.getExpressionValue() != null @AT@ 4136 @LENGTH@ 18
---------INS SimpleName@@expression @TO@ InfixExpression@@expression != null @AT@ 4136 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@expression != null @AT@ 4146 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@expression != null @AT@ 4150 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@expression != null && expression.getExpressionValue() != null @AT@ 4154 @LENGTH@ 2


INS MethodDeclaration@@String, MethodName:argMasterPort,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS")]ProcessMessages,  @AT@ 11056 @LENGTH@ 16
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:argMasterPort,  @AT@ 11049 @LENGTH@ 6
---INS SimpleName@@MethodName:argMasterPort @TO@ MethodDeclaration@@String, MethodName:argMasterPort,  @AT@ 11056 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @TO@ MethodInvocation:MGMT_OP_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 3343 @LENGTH@ 184
---UPD MethodInvocation@@ROOT_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @TO@ MGMT_OP_LOGGER.failedExecutingOperation(e,operation.require(ModelDescriptionConstants.OP),PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR))) @AT@ 3343 @LENGTH@ 183
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 3343 @LENGTH@ 11


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Set<String> ids=blueprintContainer.getComponentIds(); @TO@ Set<String> ids=blueprintContainer.getComponentIds(); @AT@ 2800 @LENGTH@ 94


UPD ExpressionStatement@@MethodInvocation:cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @TO@ MethodInvocation:cli.sendLine("connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort(),false) @AT@ 1962 @LENGTH@ 105
---UPD MethodInvocation@@cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @TO@ cli.sendLine("connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort(),false) @AT@ 1962 @LENGTH@ 104
------UPD SimpleName@@MethodName:sendLine:["connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(), false] @TO@ MethodName:sendLine:["connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort(), false] @AT@ 1966 @LENGTH@ 100
---------UPD InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @TO@ "connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort() @AT@ 1975 @LENGTH@ 83
------------UPD MethodInvocation@@ServerAddress.getServerAddress() @TO@ TestSuiteEnvironment.getServerAddress() @AT@ 1988 @LENGTH@ 32
---------------UPD SimpleName@@Name:ServerAddress @TO@ Name:TestSuiteEnvironment @AT@ 1988 @LENGTH@ 13
------------UPD MethodInvocation@@ServerAddress.getServerPort() @TO@ TestSuiteEnvironment.getServerPort() @AT@ 2029 @LENGTH@ 29
---------------UPD SimpleName@@Name:ServerAddress @TO@ Name:TestSuiteEnvironment @AT@ 2029 @LENGTH@ 13


UPD IfStatement@@if (tconfig == null || support == 0 || sslPort < 0) {  tc=new TaggedComponent(TAG_NULL_TAG.value,new byte[0]);} else {  String host;  try {    host=InetAddress.getLocalHost().getHostAddress();  } catch (  java.net.UnknownHostException e) {    host="127.0.0.1";  }  TransportAddress[] taList=createTransportAddress(host,sslPort);  TLS_SEC_TRANS tst=new TLS_SEC_TRANS((short)support,(short)require,taList);  try {    Any any=orb.create_any();    TLS_SEC_TRANSHelper.insert(any,tst);    byte[] b=codec.encode_value(any);    tc=new TaggedComponent(TAG_TLS_SEC_TRANS.value,b);  } catch (  InvalidTypeForEncoding e) {    log.warn("Caught unexcepted exception while encoding TLS_SEC_TRANS",e);    throw new RuntimeException(e);  }} @TO@ if (tconfig == null || support == 0 || sslPort < 0) {  tc=new TaggedComponent(TAG_NULL_TAG.value,new byte[0]);} else {  String host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS);  TransportAddress[] taList=createTransportAddress(host,sslPort);  TLS_SEC_TRANS tst=new TLS_SEC_TRANS((short)support,(short)require,taList);  try {    Any any=orb.create_any();    TLS_SEC_TRANSHelper.insert(any,tst);    byte[] b=codec.encode_value(any);    tc=new TaggedComponent(TAG_TLS_SEC_TRANS.value,b);  } catch (  InvalidTypeForEncoding e) {    log.warn("Caught unexcepted exception while encoding TLS_SEC_TRANS",e);    throw new RuntimeException(e);  }} @AT@ 15222 @LENGTH@ 1204
---UPD Block@@ElseBody:{  String host;  try {    host=InetAddress.getLocalHost().getHostAddress();  } catch (  java.net.UnknownHostException e) {    host="127.0.0.1";  }  TransportAddress[] taList=createTransportAddress(host,sslPort);  TLS_SEC_TRANS tst=new TLS_SEC_TRANS((short)support,(short)require,taList);  try {    Any any=orb.create_any();    TLS_SEC_TRANSHelper.insert(any,tst);    byte[] b=codec.encode_value(any);    tc=new TaggedComponent(TAG_TLS_SEC_TRANS.value,b);  } catch (  InvalidTypeForEncoding e) {    log.warn("Caught unexcepted exception while encoding TLS_SEC_TRANS",e);    throw new RuntimeException(e);  }} @TO@ ElseBody:{  String host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS);  TransportAddress[] taList=createTransportAddress(host,sslPort);  TLS_SEC_TRANS tst=new TLS_SEC_TRANS((short)support,(short)require,taList);  try {    Any any=orb.create_any();    TLS_SEC_TRANSHelper.insert(any,tst);    byte[] b=codec.encode_value(any);    tc=new TaggedComponent(TAG_TLS_SEC_TRANS.value,b);  } catch (  InvalidTypeForEncoding e) {    log.warn("Caught unexcepted exception while encoding TLS_SEC_TRANS",e);    throw new RuntimeException(e);  }} @AT@ 15412 @LENGTH@ 1014
------DEL VariableDeclarationStatement@@String host; @AT@ 15456 @LENGTH@ 12
---------DEL VariableDeclarationFragment@@host @AT@ 15463 @LENGTH@ 4
------DEL TryStatement@@try {  host=InetAddress.getLocalHost().getHostAddress();} catch (java.net.UnknownHostException e) {  host="127.0.0.1";} @AT@ 15481 @LENGTH@ 179
---------DEL ExpressionStatement@@Assignment:host=InetAddress.getLocalHost().getHostAddress() @AT@ 15503 @LENGTH@ 51
------------DEL Assignment@@host=InetAddress.getLocalHost().getHostAddress() @AT@ 15503 @LENGTH@ 50
---------------DEL SimpleName@@host @AT@ 15503 @LENGTH@ 4
---------------DEL Operator@@= @AT@ 15507 @LENGTH@ 1
---------------DEL MethodInvocation@@InetAddress.getLocalHost().getHostAddress() @AT@ 15510 @LENGTH@ 43
------------------DEL MethodInvocation@@MethodName:getLocalHost:[] @AT@ 15510 @LENGTH@ 26
---------DEL CatchClause@@catch (java.net.UnknownHostException e) {  host="127.0.0.1";} @AT@ 15569 @LENGTH@ 91
------------DEL SingleVariableDeclaration@@java.net.UnknownHostException e @AT@ 15576 @LENGTH@ 31
---------------DEL SimpleType@@java.net.UnknownHostException @AT@ 15576 @LENGTH@ 29
---------------DEL SimpleName@@e @AT@ 15606 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:host="127.0.0.1" @AT@ 15627 @LENGTH@ 19
---------------DEL Assignment@@host="127.0.0.1" @AT@ 15627 @LENGTH@ 18
------------------DEL SimpleName@@host @AT@ 15627 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 15631 @LENGTH@ 1
------------------DEL StringLiteral@@"127.0.0.1" @AT@ 15634 @LENGTH@ 11
------INS VariableDeclarationStatement@@String host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS); @TO@ Block@@ElseBody:{  String host;  try {    host=InetAddress.getLocalHost().getHostAddress();  } catch (  java.net.UnknownHostException e) {    host="127.0.0.1";  }  TransportAddress[] taList=createTransportAddress(host,sslPort);  TLS_SEC_TRANS tst=new TLS_SEC_TRANS((short)support,(short)require,taList);  try {    Any any=orb.create_any();    TLS_SEC_TRANSHelper.insert(any,tst);    byte[] b=codec.encode_value(any);    tc=new TaggedComponent(TAG_TLS_SEC_TRANS.value,b);  } catch (  InvalidTypeForEncoding e) {    log.warn("Caught unexcepted exception while encoding TLS_SEC_TRANS",e);    throw new RuntimeException(e);  }} @AT@ 15532 @LENGTH@ 83
---------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS); @AT@ 15456 @LENGTH@ 6
---------INS VariableDeclarationFragment@@host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS) @TO@ VariableDeclarationStatement@@String host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS); @AT@ 15539 @LENGTH@ 75
------------MOV SimpleName@@host @TO@ VariableDeclarationFragment@@host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS) @AT@ 15463 @LENGTH@ 4
------------INS MethodInvocation@@CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS) @TO@ VariableDeclarationFragment@@host=CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS) @AT@ 15546 @LENGTH@ 68
---------------MOV SimpleName@@Name:InetAddress @TO@ MethodInvocation@@CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS) @AT@ 15510 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:getHostAddress:[] @TO@ MethodInvocation@@CorbaORBService.getORBProperty(JacORBSubsystemConstants.ORB_ADDRESS) @AT@ 15537 @LENGTH@ 16
------------------INS QualifiedName@@JacORBSubsystemConstants.ORB_ADDRESS @TO@ SimpleName@@MethodName:getHostAddress:[] @AT@ 15577 @LENGTH@ 36
---------------------INS SimpleName@@JacORBSubsystemConstants @TO@ QualifiedName@@JacORBSubsystemConstants.ORB_ADDRESS @AT@ 15577 @LENGTH@ 24
---------------------INS SimpleName@@ORB_ADDRESS @TO@ QualifiedName@@JacORBSubsystemConstants.ORB_ADDRESS @AT@ 15602 @LENGTH@ 11


UPD IfStatement@@if (configuration != null) {  Dictionary dictionary=configuration.getProperties();  if (dictionary == null) {    dictionary=new Properties();  }  dictionary.put("provider",provider);  dictionary.put("credential",credential);  dictionary.put("identity",identity);  dictionary.put("credential-store","zookeeper");  if (provider != null && provider.equals("aws-ec2") && props != null && props.containsKey("owner") && props.get("owner") != null) {    dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));  }  configuration.update(dictionary);  if (zooKeeper.isConnected()) {    if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {      ZooKeeperUtils.create(zooKeeper,ZkPath.CLOUD_PROVIDER.getPath(provider));    }    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider),identity);    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider),credential);  } else {    System.out.println("Fabric has not been initialized. Provider registration will be local to the current container.");  }} @TO@ if (configuration != null) {  Dictionary dictionary=configuration.getProperties();  if (dictionary == null) {    dictionary=new Properties();  }  dictionary.put("provider",provider);  dictionary.put("credential",credential);  dictionary.put("identity",identity);  dictionary.put("credential-store","zookeeper");  dictionary.put("jclouds.ssh.max-retries","40");  if (provider != null && provider.equals("aws-ec2") && props != null && props.containsKey("owner") && props.get("owner") != null) {    dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));  }  for (  Map.Entry<String,String> entry : props.entrySet()) {    String key=entry.getKey();    String value=entry.getValue();    dictionary.put(key,value);  }  configuration.update(dictionary);  if (zooKeeper.isConnected()) {    if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {      ZooKeeperUtils.create(zooKeeper,ZkPath.CLOUD_PROVIDER.getPath(provider));    }    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider),identity);    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider),credential);  } else {    System.out.println("Fabric has not been initialized. Provider registration will be local to the current container.");  }} @AT@ 2938 @LENGTH@ 1597
---UPD Block@@ThenBody:{  Dictionary dictionary=configuration.getProperties();  if (dictionary == null) {    dictionary=new Properties();  }  dictionary.put("provider",provider);  dictionary.put("credential",credential);  dictionary.put("identity",identity);  dictionary.put("credential-store","zookeeper");  if (provider != null && provider.equals("aws-ec2") && props != null && props.containsKey("owner") && props.get("owner") != null) {    dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));  }  configuration.update(dictionary);  if (zooKeeper.isConnected()) {    if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {      ZooKeeperUtils.create(zooKeeper,ZkPath.CLOUD_PROVIDER.getPath(provider));    }    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider),identity);    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider),credential);  } else {    System.out.println("Fabric has not been initialized. Provider registration will be local to the current container.");  }} @TO@ ThenBody:{  Dictionary dictionary=configuration.getProperties();  if (dictionary == null) {    dictionary=new Properties();  }  dictionary.put("provider",provider);  dictionary.put("credential",credential);  dictionary.put("identity",identity);  dictionary.put("credential-store","zookeeper");  dictionary.put("jclouds.ssh.max-retries","40");  if (provider != null && provider.equals("aws-ec2") && props != null && props.containsKey("owner") && props.get("owner") != null) {    dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));  }  for (  Map.Entry<String,String> entry : props.entrySet()) {    String key=entry.getKey();    String value=entry.getValue();    dictionary.put(key,value);  }  configuration.update(dictionary);  if (zooKeeper.isConnected()) {    if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {      ZooKeeperUtils.create(zooKeeper,ZkPath.CLOUD_PROVIDER.getPath(provider));    }    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider),identity);    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider),credential);  } else {    System.out.println("Fabric has not been initialized. Provider registration will be local to the current container.");  }} @AT@ 2965 @LENGTH@ 1570
------INS ExpressionStatement@@MethodInvocation:dictionary.put("jclouds.ssh.max-retries","40") @TO@ Block@@ThenBody:{  Dictionary dictionary=configuration.getProperties();  if (dictionary == null) {    dictionary=new Properties();  }  dictionary.put("provider",provider);  dictionary.put("credential",credential);  dictionary.put("identity",identity);  dictionary.put("credential-store","zookeeper");  if (provider != null && provider.equals("aws-ec2") && props != null && props.containsKey("owner") && props.get("owner") != null) {    dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));  }  configuration.update(dictionary);  if (zooKeeper.isConnected()) {    if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {      ZooKeeperUtils.create(zooKeeper,ZkPath.CLOUD_PROVIDER.getPath(provider));    }    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider),identity);    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider),credential);  } else {    System.out.println("Fabric has not been initialized. Provider registration will be local to the current container.");  }} @AT@ 3648 @LENGTH@ 48
---------INS MethodInvocation@@dictionary.put("jclouds.ssh.max-retries","40") @TO@ ExpressionStatement@@MethodInvocation:dictionary.put("jclouds.ssh.max-retries","40") @AT@ 3648 @LENGTH@ 47
------------INS SimpleName@@Name:dictionary @TO@ MethodInvocation@@dictionary.put("jclouds.ssh.max-retries","40") @AT@ 3648 @LENGTH@ 10
------------INS SimpleName@@MethodName:put:["jclouds.ssh.max-retries", "40"] @TO@ MethodInvocation@@dictionary.put("jclouds.ssh.max-retries","40") @AT@ 3659 @LENGTH@ 36
---------------INS StringLiteral@@"jclouds.ssh.max-retries" @TO@ SimpleName@@MethodName:put:["jclouds.ssh.max-retries", "40"] @AT@ 3663 @LENGTH@ 25
---------------INS StringLiteral@@"40" @TO@ SimpleName@@MethodName:put:["jclouds.ssh.max-retries", "40"] @AT@ 3690 @LENGTH@ 4
------INS EnhancedForStatement@@for (Map.Entry<String,String> entry : props.entrySet()) {  String key=entry.getKey();  String value=entry.getValue();  dictionary.put(key,value);} @TO@ Block@@ThenBody:{  Dictionary dictionary=configuration.getProperties();  if (dictionary == null) {    dictionary=new Properties();  }  dictionary.put("provider",provider);  dictionary.put("credential",credential);  dictionary.put("identity",identity);  dictionary.put("credential-store","zookeeper");  if (provider != null && provider.equals("aws-ec2") && props != null && props.containsKey("owner") && props.get("owner") != null) {    dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));  }  configuration.update(dictionary);  if (zooKeeper.isConnected()) {    if (zooKeeper.exists(ZkPath.CLOUD_PROVIDER.getPath(provider)) == null) {      ZooKeeperUtils.create(zooKeeper,ZkPath.CLOUD_PROVIDER.getPath(provider));    }    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_IDENTIY.getPath(provider),identity);    ZooKeeperUtils.set(zooKeeper,ZkPath.CLOUD_PROVIDER_CREDENTIAL.getPath(provider),credential);  } else {    System.out.println("Fabric has not been initialized. Provider registration will be local to the current container.");  }} @AT@ 3993 @LENGTH@ 254
---------INS SingleVariableDeclaration@@Map.Entry<String,String> entry @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : props.entrySet()) {  String key=entry.getKey();  String value=entry.getValue();  dictionary.put(key,value);} @AT@ 3998 @LENGTH@ 30
------------INS ParameterizedType@@Map.Entry<String,String> @TO@ SingleVariableDeclaration@@Map.Entry<String,String> entry @AT@ 3998 @LENGTH@ 24
---------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,String> @AT@ 3998 @LENGTH@ 9
---------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,String> @AT@ 4008 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,String> @AT@ 4015 @LENGTH@ 6
------------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<String,String> entry @AT@ 4023 @LENGTH@ 5
---------INS MethodInvocation@@props.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : props.entrySet()) {  String key=entry.getKey();  String value=entry.getValue();  dictionary.put(key,value);} @AT@ 4029 @LENGTH@ 16
------------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.entrySet() @AT@ 4029 @LENGTH@ 5
------------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@props.entrySet() @AT@ 4035 @LENGTH@ 10
---------INS VariableDeclarationStatement@@String key=entry.getKey(); @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : props.entrySet()) {  String key=entry.getKey();  String value=entry.getValue();  dictionary.put(key,value);} @AT@ 4077 @LENGTH@ 28
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 4077 @LENGTH@ 6
------------INS VariableDeclarationFragment@@key=entry.getKey() @TO@ VariableDeclarationStatement@@String key=entry.getKey(); @AT@ 4084 @LENGTH@ 20
---------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 4084 @LENGTH@ 3
---------------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@key=entry.getKey() @AT@ 4090 @LENGTH@ 14
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 4090 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 4096 @LENGTH@ 8
---------INS VariableDeclarationStatement@@String value=entry.getValue(); @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : props.entrySet()) {  String key=entry.getKey();  String value=entry.getValue();  dictionary.put(key,value);} @AT@ 4134 @LENGTH@ 32
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=entry.getValue(); @AT@ 4134 @LENGTH@ 6
------------INS VariableDeclarationFragment@@value=entry.getValue() @TO@ VariableDeclarationStatement@@String value=entry.getValue(); @AT@ 4141 @LENGTH@ 24
---------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 4141 @LENGTH@ 5
---------------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 4149 @LENGTH@ 16
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 4149 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 4155 @LENGTH@ 10
---------INS ExpressionStatement@@MethodInvocation:dictionary.put(key,value) @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : props.entrySet()) {  String key=entry.getKey();  String value=entry.getValue();  dictionary.put(key,value);} @AT@ 4195 @LENGTH@ 26
------------INS MethodInvocation@@dictionary.put(key,value) @TO@ ExpressionStatement@@MethodInvocation:dictionary.put(key,value) @AT@ 4195 @LENGTH@ 25
---------------INS SimpleName@@Name:dictionary @TO@ MethodInvocation@@dictionary.put(key,value) @AT@ 4195 @LENGTH@ 10
---------------INS SimpleName@@MethodName:put:[key, value] @TO@ MethodInvocation@@dictionary.put(key,value) @AT@ 4206 @LENGTH@ 14
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 4210 @LENGTH@ 3
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 4214 @LENGTH@ 5


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:ErrorState, ConsoleWrapper theConsole, String errorMessage, State nextState, StateValues stateValues,  @AT@ 2228 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2232 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2232 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2232 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2243 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2255 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2259 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2265 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2279 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2285 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2285 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2294 @LENGTH@ 20


UPD ExpressionStatement@@Assignment:this.stream=new BufferedInputStream(new FileInputStream(file)) @TO@ Assignment:this.stream=IOHelper.buffered(new FileInputStream(file)) @AT@ 1454 @LENGTH@ 65
---UPD Assignment@@this.stream=new BufferedInputStream(new FileInputStream(file)) @TO@ this.stream=IOHelper.buffered(new FileInputStream(file)) @AT@ 1454 @LENGTH@ 64
------INS MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @TO@ Assignment@@this.stream=new BufferedInputStream(new FileInputStream(file)) @AT@ 1406 @LENGTH@ 44
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @AT@ 1406 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[new FileInputStream(file)] @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @AT@ 1415 @LENGTH@ 35
------------INS ClassInstanceCreation@@FileInputStream[file] @TO@ SimpleName@@MethodName:buffered:[new FileInputStream(file)] @AT@ 1424 @LENGTH@ 25
---------------MOV New@@new @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 1492 @LENGTH@ 3
---------------MOV SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 1496 @LENGTH@ 15
---------------MOV SimpleName@@file @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 1512 @LENGTH@ 4
------DEL ClassInstanceCreation@@BufferedInputStream[new FileInputStream(file)] @AT@ 1468 @LENGTH@ 50
---------DEL New@@new @AT@ 1468 @LENGTH@ 3
---------DEL SimpleType@@BufferedInputStream @AT@ 1472 @LENGTH@ 19
---------DEL ClassInstanceCreation@@FileInputStream[file] @AT@ 1492 @LENGTH@ 25


UPD ExpressionStatement@@Assignment:content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,file.getFile()) @TO@ Assignment:content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file.getFile()) @AT@ 2290 @LENGTH@ 100
---UPD Assignment@@content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,file.getFile()) @TO@ content=exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file.getFile()) @AT@ 2290 @LENGTH@ 99
------UPD MethodInvocation@@exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,file.getFile()) @TO@ exchange.getContext().getTypeConverter().mandatoryConvertTo(byte[].class,exchange,file.getFile()) @AT@ 2300 @LENGTH@ 89
---------UPD SimpleName@@MethodName:mandatoryConvertTo:[byte[].class, file.getFile()] @TO@ MethodName:mandatoryConvertTo:[byte[].class, exchange, file.getFile()] @AT@ 2341 @LENGTH@ 48
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[byte[].class, file.getFile()] @AT@ 2374 @LENGTH@ 8


DEL MethodDeclaration@@protected, ValidationConfiguration, MethodName:getModelValidationConfiguration,  @AT@ 3575 @LENGTH@ 199
---DEL Modifier@@protected @AT@ 3575 @LENGTH@ 9
---DEL SimpleType@@ValidationConfiguration @AT@ 3585 @LENGTH@ 23
---DEL SimpleName@@MethodName:getModelValidationConfiguration @AT@ 3609 @LENGTH@ 31
---DEL ReturnStatement@@NullLiteral:null @AT@ 3748 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 3755 @LENGTH@ 4


UPD EnhancedForStatement@@for (final AttributeDefinition attribute : attributes) {  attribute.validateAndSet(operation,subModel);} @TO@ for (final AttributeDefinition attribute : attributes) {  if (attribute.getName().equals(CommonAttributes.PROPERTIES.getName()))   continue;  attribute.validateAndSet(operation,subModel);} @AT@ 8734 @LENGTH@ 132
---INS IfStatement@@if (attribute.getName().equals(CommonAttributes.PROPERTIES.getName())) continue; @TO@ EnhancedForStatement@@for (final AttributeDefinition attribute : attributes) {  attribute.validateAndSet(operation,subModel);} @AT@ 8971 @LENGTH@ 101
------INS MethodInvocation@@attribute.getName().equals(CommonAttributes.PROPERTIES.getName()) @TO@ IfStatement@@if (attribute.getName().equals(CommonAttributes.PROPERTIES.getName())) continue; @AT@ 8975 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@attribute.getName().equals(CommonAttributes.PROPERTIES.getName()) @AT@ 8975 @LENGTH@ 19
---------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getName().equals(CommonAttributes.PROPERTIES.getName()) @AT@ 8975 @LENGTH@ 9
---------INS SimpleName@@MethodName:equals:[CommonAttributes.PROPERTIES.getName()] @TO@ MethodInvocation@@attribute.getName().equals(CommonAttributes.PROPERTIES.getName()) @AT@ 8995 @LENGTH@ 45
------------INS MethodInvocation@@CommonAttributes.PROPERTIES.getName() @TO@ SimpleName@@MethodName:equals:[CommonAttributes.PROPERTIES.getName()] @AT@ 9002 @LENGTH@ 37
---------------INS QualifiedName@@Name:CommonAttributes.PROPERTIES @TO@ MethodInvocation@@CommonAttributes.PROPERTIES.getName() @AT@ 9002 @LENGTH@ 27
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@CommonAttributes.PROPERTIES.getName() @AT@ 9030 @LENGTH@ 9
------INS Block@@ThenBody:continue; @TO@ IfStatement@@if (attribute.getName().equals(CommonAttributes.PROPERTIES.getName())) continue; @AT@ 9062 @LENGTH@ 10
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:continue; @AT@ 9062 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2797 @LENGTH@ 252
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 2885 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2885 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2891 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2898 @LENGTH@ 11


UPD TryStatement@@try {  if (credentials != null) {    response=computeService.runScriptOnNode(id,script,templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));  } else {    response=computeService.runScriptOnNode(id,script,templateOptions);  }  doRetry=false;} catch (AuthorizationException ex) {  doRetry=true;}catch (SshException ex) {  doRetry=true;} @TO@ try {  if (credentials != null) {    response=computeService.runScriptOnNode(id,script,templateOptions.overrideLoginCredentials(credentials).runAsRoot(false));  } else {    response=computeService.runScriptOnNode(id,script,templateOptions);  }} catch (AuthorizationException ex) {  throw new Exception("Failed to connect to the container via ssh.");}catch (SshException ex) {  throw new Exception("Failed to connect to the container via ssh.");} @AT@ 15538 @LENGTH@ 707


UPD IfStatement@@if (options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx")) {  jvmOptsBuilder.append("-Xmx512m");} @TO@ if (options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx")) {  jvmOptsBuilder.append(" -Xmx512m");} else if (options.getJvmOpts() != null) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @AT@ 2758 @LENGTH@ 150
---UPD Block@@ThenBody:{  jvmOptsBuilder.append("-Xmx512m");} @TO@ ThenBody:{  jvmOptsBuilder.append(" -Xmx512m");} @AT@ 2834 @LENGTH@ 74
------UPD ExpressionStatement@@MethodInvocation:jvmOptsBuilder.append("-Xmx512m") @TO@ MethodInvocation:jvmOptsBuilder.append(" -Xmx512m") @AT@ 2856 @LENGTH@ 34
---------UPD MethodInvocation@@jvmOptsBuilder.append("-Xmx512m") @TO@ jvmOptsBuilder.append(" -Xmx512m") @AT@ 2856 @LENGTH@ 33
------------UPD SimpleName@@MethodName:append:["-Xmx512m"] @TO@ MethodName:append:[" -Xmx512m"] @AT@ 2871 @LENGTH@ 18
---------------UPD StringLiteral@@"-Xmx512m" @TO@ " -Xmx512m" @AT@ 2878 @LENGTH@ 10
---INS Block@@ElseBody:if (options.getJvmOpts() != null) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @TO@ IfStatement@@if (options.getJvmOpts() == null || !options.getJvmOpts().contains("-Xmx")) {  jvmOptsBuilder.append("-Xmx512m");} @AT@ 2849 @LENGTH@ 130
------INS IfStatement@@if (options.getJvmOpts() != null) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @TO@ Block@@ElseBody:if (options.getJvmOpts() != null) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @AT@ 2849 @LENGTH@ 130
---------INS InfixExpression@@options.getJvmOpts() != null @TO@ IfStatement@@if (options.getJvmOpts() != null) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @AT@ 2853 @LENGTH@ 28
------------INS MethodInvocation@@options.getJvmOpts() @TO@ InfixExpression@@options.getJvmOpts() != null @AT@ 2853 @LENGTH@ 20
---------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getJvmOpts() @AT@ 2853 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getJvmOpts:[] @TO@ MethodInvocation@@options.getJvmOpts() @AT@ 2861 @LENGTH@ 12
------------INS Operator@@!= @TO@ InfixExpression@@options.getJvmOpts() != null @AT@ 2873 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@options.getJvmOpts() != null @AT@ 2877 @LENGTH@ 4
---------INS Block@@ThenBody:{  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @TO@ IfStatement@@if (options.getJvmOpts() != null) {  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @AT@ 2883 @LENGTH@ 96
------------INS ExpressionStatement@@MethodInvocation:jvmOptsBuilder.append(" ").append(options.getJvmOpts()) @TO@ Block@@ThenBody:{  jvmOptsBuilder.append(" ").append(options.getJvmOpts());} @AT@ 2905 @LENGTH@ 56
---------------INS MethodInvocation@@jvmOptsBuilder.append(" ").append(options.getJvmOpts()) @TO@ ExpressionStatement@@MethodInvocation:jvmOptsBuilder.append(" ").append(options.getJvmOpts()) @AT@ 2905 @LENGTH@ 55
------------------INS MethodInvocation@@MethodName:append:[" "] @TO@ MethodInvocation@@jvmOptsBuilder.append(" ").append(options.getJvmOpts()) @AT@ 2905 @LENGTH@ 26
---------------------INS StringLiteral@@" " @TO@ MethodInvocation@@MethodName:append:[" "] @AT@ 2927 @LENGTH@ 3
------------------INS SimpleName@@Name:jvmOptsBuilder @TO@ MethodInvocation@@jvmOptsBuilder.append(" ").append(options.getJvmOpts()) @AT@ 2905 @LENGTH@ 14
------------------INS SimpleName@@MethodName:append:[options.getJvmOpts()] @TO@ MethodInvocation@@jvmOptsBuilder.append(" ").append(options.getJvmOpts()) @AT@ 2932 @LENGTH@ 28
---------------------INS MethodInvocation@@options.getJvmOpts() @TO@ SimpleName@@MethodName:append:[options.getJvmOpts()] @AT@ 2939 @LENGTH@ 20
------------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getJvmOpts() @AT@ 2939 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getJvmOpts:[] @TO@ MethodInvocation@@options.getJvmOpts() @AT@ 2947 @LENGTH@ 12


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[private, static]MyOrderTypeConverter, [TypeConverter] @AT@ 3305 @LENGTH@ 216
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3305 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3316 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3318 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3331 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3331 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3331 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3337 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3340 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3346 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3346 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3353 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3374 @LENGTH@ 137
------INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @AT@ 3396 @LENGTH@ 36
---------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 3403 @LENGTH@ 28
------------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 3403 @LENGTH@ 28
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 3413 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 3419 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 3425 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @AT@ 3447 @LENGTH@ 64
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3454 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3454 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3464 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3485 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3492 @LENGTH@ 4


UPD FieldDeclaration@@EjbLogger, [EJB3_INVOCATION_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.ejb3.invocation")] @TO@ EjbLogger, [EJB3_INVOCATION_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.as.ejb3.invocation")] @AT@ 3879 @LENGTH@ 105
---UPD VariableDeclarationFragment@@EJB3_INVOCATION_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.ejb3.invocation") @TO@ EJB3_INVOCATION_LOGGER=Logger.getMessageLogger(EjbLogger.class,"org.jboss.as.ejb3.invocation") @AT@ 3889 @LENGTH@ 94
------UPD MethodInvocation@@Logger.getMessageLogger(EjbLogger.class,"org.jboss.ejb3.invocation") @TO@ Logger.getMessageLogger(EjbLogger.class,"org.jboss.as.ejb3.invocation") @AT@ 3914 @LENGTH@ 69
---------UPD SimpleName@@MethodName:getMessageLogger:[EjbLogger.class, "org.jboss.ejb3.invocation"] @TO@ MethodName:getMessageLogger:[EjbLogger.class, "org.jboss.as.ejb3.invocation"] @AT@ 3921 @LENGTH@ 62
------------UPD StringLiteral@@"org.jboss.ejb3.invocation" @TO@ "org.jboss.as.ejb3.invocation" @AT@ 3955 @LENGTH@ 27


INS MethodDeclaration@@OperationFailedException, MethodName:invalidEnumValue, String value, String parameterName, Set<?> allowedValues,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 94243 @LENGTH@ 75
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidEnumValue, String value, String parameterName, Set<?> allowedValues,  @AT@ 94218 @LENGTH@ 24
---INS SimpleName@@MethodName:invalidEnumValue @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidEnumValue, String value, String parameterName, Set<?> allowedValues,  @AT@ 94243 @LENGTH@ 16
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidEnumValue, String value, String parameterName, Set<?> allowedValues,  @AT@ 94260 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 94260 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 94267 @LENGTH@ 5
---INS SingleVariableDeclaration@@String parameterName @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidEnumValue, String value, String parameterName, Set<?> allowedValues,  @AT@ 94274 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String parameterName @AT@ 94274 @LENGTH@ 6
------INS SimpleName@@parameterName @TO@ SingleVariableDeclaration@@String parameterName @AT@ 94281 @LENGTH@ 13
---INS SingleVariableDeclaration@@Set<?> allowedValues @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidEnumValue, String value, String parameterName, Set<?> allowedValues,  @AT@ 94296 @LENGTH@ 20
------INS ParameterizedType@@Set<?> @TO@ SingleVariableDeclaration@@Set<?> allowedValues @AT@ 94296 @LENGTH@ 6
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<?> @AT@ 94296 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Set<?> @AT@ 94300 @LENGTH@ 1
------INS SimpleName@@allowedValues @TO@ SingleVariableDeclaration@@Set<?> allowedValues @AT@ 94303 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:elementsMap.put(new QName(NAMESPACE_1_1,"system"),Element.SYSTEM) @TO@ Initializer@@Initializer @AT@ 4364 @LENGTH@ 68
---INS MethodInvocation@@elementsMap.put(new QName(NAMESPACE_1_1,"system"),Element.SYSTEM) @TO@ ExpressionStatement@@MethodInvocation:elementsMap.put(new QName(NAMESPACE_1_1,"system"),Element.SYSTEM) @AT@ 4364 @LENGTH@ 67
------INS SimpleName@@Name:elementsMap @TO@ MethodInvocation@@elementsMap.put(new QName(NAMESPACE_1_1,"system"),Element.SYSTEM) @AT@ 4364 @LENGTH@ 11
------INS SimpleName@@MethodName:put:[new QName(NAMESPACE_1_1,"system"), Element.SYSTEM] @TO@ MethodInvocation@@elementsMap.put(new QName(NAMESPACE_1_1,"system"),Element.SYSTEM) @AT@ 4376 @LENGTH@ 55
---------INS ClassInstanceCreation@@QName[NAMESPACE_1_1, "system"] @TO@ SimpleName@@MethodName:put:[new QName(NAMESPACE_1_1,"system"), Element.SYSTEM] @AT@ 4380 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "system"] @AT@ 4380 @LENGTH@ 3
------------INS SimpleType@@QName @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "system"] @AT@ 4384 @LENGTH@ 5
------------INS SimpleName@@NAMESPACE_1_1 @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "system"] @AT@ 4390 @LENGTH@ 13
------------INS StringLiteral@@"system" @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "system"] @AT@ 4405 @LENGTH@ 8
---------INS QualifiedName@@Element.SYSTEM @TO@ SimpleName@@MethodName:put:[new QName(NAMESPACE_1_1,"system"), Element.SYSTEM] @AT@ 4416 @LENGTH@ 14
------------INS SimpleName@@Element @TO@ QualifiedName@@Element.SYSTEM @AT@ 4416 @LENGTH@ 7
------------INS SimpleName@@SYSTEM @TO@ QualifiedName@@Element.SYSTEM @AT@ 4424 @LENGTH@ 6


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:ConfirmationChoice, ConsoleWrapper theConsole, final String message, final String prompt, final State yesState, final State noState,  @AT@ 2237 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2241 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2241 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2241 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2252 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2264 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2268 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2274 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2288 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2294 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2294 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2303 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue())) @TO@ MethodInvocation:Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue())) @AT@ 4726 @LENGTH@ 86
---UPD MethodInvocation@@Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue())) @TO@ Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue())) @AT@ 4726 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertFalse:[Boolean.valueOf(response.getFirstHeader("serialized").getValue())] @TO@ MethodName:assertTrue:[Boolean.valueOf(response.getFirstHeader("serialized").getValue())] @AT@ 4733 @LENGTH@ 78


UPD IfStatement@@if (!c.isInterface() && c.getSuperclass() != Object.class) {  collectParameterAnnotations(c.getSuperclass(),m,a);} @TO@ if (!c.isInterface() && c.getSuperclass() != null) {  collectParameterAnnotations(c.getSuperclass(),m,a);} @AT@ 17304 @LENGTH@ 136
---UPD InfixExpression@@!c.isInterface() && c.getSuperclass() != Object.class @TO@ !c.isInterface() && c.getSuperclass() != null @AT@ 17308 @LENGTH@ 53
------UPD InfixExpression@@c.getSuperclass() != Object.class @TO@ c.getSuperclass() != null @AT@ 17328 @LENGTH@ 33
---------DEL TypeLiteral@@Object.class @AT@ 17349 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ InfixExpression@@c.getSuperclass() != Object.class @AT@ 17349 @LENGTH@ 4


UPD VariableDeclarationStatement@@final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,0); @TO@ final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,1); @AT@ 2483 @LENGTH@ 88
---UPD VariableDeclarationFragment@@subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,0) @TO@ subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,1) @AT@ 2511 @LENGTH@ 59
------UPD MethodInvocation@@context.registerSubsystem(SUBSYSTEM_NAME,1,0) @TO@ context.registerSubsystem(SUBSYSTEM_NAME,1,1) @AT@ 2523 @LENGTH@ 47
---------UPD SimpleName@@MethodName:registerSubsystem:[SUBSYSTEM_NAME, 1, 0] @TO@ MethodName:registerSubsystem:[SUBSYSTEM_NAME, 1, 1] @AT@ 2531 @LENGTH@ 39
------------UPD NumberLiteral@@0 @TO@ 1 @AT@ 2568 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @TO@ TypeDeclaration@@[public]CharSequenceInputStreamTest,  @AT@ 4168 @LENGTH@ 211
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @AT@ 4168 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @AT@ 4175 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadZeroEmptyString @TO@ MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @AT@ 4180 @LENGTH@ 23
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @AT@ 4213 @LENGTH@ 9
---INS VariableDeclarationStatement@@InputStream r=new CharSequenceInputStream("","UTF-8"); @TO@ MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @AT@ 4233 @LENGTH@ 57
------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream r=new CharSequenceInputStream("","UTF-8"); @AT@ 4233 @LENGTH@ 11
------INS VariableDeclarationFragment@@r=new CharSequenceInputStream("","UTF-8") @TO@ VariableDeclarationStatement@@InputStream r=new CharSequenceInputStream("","UTF-8"); @AT@ 4245 @LENGTH@ 44
---------INS SimpleName@@r @TO@ VariableDeclarationFragment@@r=new CharSequenceInputStream("","UTF-8") @AT@ 4245 @LENGTH@ 1
---------INS ClassInstanceCreation@@CharSequenceInputStream["", "UTF-8"] @TO@ VariableDeclarationFragment@@r=new CharSequenceInputStream("","UTF-8") @AT@ 4249 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@CharSequenceInputStream["", "UTF-8"] @AT@ 4249 @LENGTH@ 3
------------INS SimpleType@@CharSequenceInputStream @TO@ ClassInstanceCreation@@CharSequenceInputStream["", "UTF-8"] @AT@ 4253 @LENGTH@ 23
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@CharSequenceInputStream["", "UTF-8"] @AT@ 4277 @LENGTH@ 2
------------INS StringLiteral@@"UTF-8" @TO@ ClassInstanceCreation@@CharSequenceInputStream["", "UTF-8"] @AT@ 4281 @LENGTH@ 7
---INS VariableDeclarationStatement@@byte[] bytes=new byte[30]; @TO@ MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @AT@ 4299 @LENGTH@ 28
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] bytes=new byte[30]; @AT@ 4299 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4299 @LENGTH@ 4
------INS VariableDeclarationFragment@@bytes=new byte[30] @TO@ VariableDeclarationStatement@@byte[] bytes=new byte[30]; @AT@ 4306 @LENGTH@ 20
---------INS SimpleName@@bytes @TO@ VariableDeclarationFragment@@bytes=new byte[30] @AT@ 4306 @LENGTH@ 5
---------INS ArrayCreation@@new byte[30] @TO@ VariableDeclarationFragment@@bytes=new byte[30] @AT@ 4314 @LENGTH@ 12
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[30] @AT@ 4318 @LENGTH@ 8
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4318 @LENGTH@ 4
------------INS NumberLiteral@@30 @TO@ ArrayCreation@@new byte[30] @AT@ 4323 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,r.read(bytes,0,0)) @TO@ MethodDeclaration@@public, void, MethodName:testReadZeroEmptyString, Exception,  @AT@ 4336 @LENGTH@ 37
------INS MethodInvocation@@assertEquals(0,r.read(bytes,0,0)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,r.read(bytes,0,0)) @AT@ 4336 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertEquals:[0, r.read(bytes,0,0)] @TO@ MethodInvocation@@assertEquals(0,r.read(bytes,0,0)) @AT@ 4336 @LENGTH@ 36
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, r.read(bytes,0,0)] @AT@ 4349 @LENGTH@ 1
------------INS MethodInvocation@@r.read(bytes,0,0) @TO@ SimpleName@@MethodName:assertEquals:[0, r.read(bytes,0,0)] @AT@ 4352 @LENGTH@ 19
---------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.read(bytes,0,0) @AT@ 4352 @LENGTH@ 1
---------------INS SimpleName@@MethodName:read:[bytes, 0, 0] @TO@ MethodInvocation@@r.read(bytes,0,0) @AT@ 4354 @LENGTH@ 17
------------------INS SimpleName@@bytes @TO@ SimpleName@@MethodName:read:[bytes, 0, 0] @AT@ 4359 @LENGTH@ 5
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:read:[bytes, 0, 0] @AT@ 4366 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:read:[bytes, 0, 0] @AT@ 4369 @LENGTH@ 1


DEL MethodDeclaration@@public, voidMethodName:CxfSpringEndpoint, CamelContext context, String address, Exception,  @AT@ 1847 @LENGTH@ 120
---DEL Modifier@@public @AT@ 1847 @LENGTH@ 6
---DEL SimpleName@@MethodName:CxfSpringEndpoint @AT@ 1854 @LENGTH@ 17
---DEL SingleVariableDeclaration@@CamelContext context @AT@ 1872 @LENGTH@ 20
------DEL SimpleType@@CamelContext @AT@ 1872 @LENGTH@ 12
------DEL SimpleName@@context @AT@ 1885 @LENGTH@ 7
---DEL SingleVariableDeclaration@@String address @AT@ 1894 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 1894 @LENGTH@ 6
------DEL SimpleName@@address @AT@ 1901 @LENGTH@ 7
---DEL SimpleType@@Exception @AT@ 1917 @LENGTH@ 9
---DEL SuperConstructorInvocation@@super(address,context);
 @AT@ 1937 @LENGTH@ 24
------DEL SimpleName@@address @AT@ 1943 @LENGTH@ 7
------DEL SimpleName@@context @AT@ 1952 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]TransactionRollbackException, RuntimeException @AT@ 1034 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1034 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1042 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1049 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1055 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1060 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1060 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1079 @LENGTH@ 2


UPD IfStatement@@if (format.isCommentingDisabled()) {  return;} @TO@ if (!format.isCommentingEnabled()) {  return;} @AT@ 3391 @LENGTH@ 66
---DEL MethodInvocation@@format.isCommentingDisabled() @AT@ 3395 @LENGTH@ 29
---INS PrefixExpression@@!format.isCommentingEnabled() @TO@ IfStatement@@if (format.isCommentingDisabled()) {  return;} @AT@ 3395 @LENGTH@ 29
------INS Operator@@! @TO@ PrefixExpression@@!format.isCommentingEnabled() @AT@ 3395 @LENGTH@ 1
------INS MethodInvocation@@format.isCommentingEnabled() @TO@ PrefixExpression@@!format.isCommentingEnabled() @AT@ 3396 @LENGTH@ 28
---------MOV SimpleName@@Name:format @TO@ MethodInvocation@@format.isCommentingEnabled() @AT@ 3395 @LENGTH@ 6
---------MOV SimpleName@@MethodName:isCommentingDisabled:[] @TO@ MethodInvocation@@format.isCommentingEnabled() @AT@ 3402 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3045 @LENGTH@ 463
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3133 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3133 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3139 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3146 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:parseDeployments(reader,address,DOMAIN_1_0,list,true) @TO@ MethodInvocation:parseDeployments(reader,address,DOMAIN_1_0,list,EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED),EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED)) @AT@ 11091 @LENGTH@ 58
---UPD MethodInvocation@@parseDeployments(reader,address,DOMAIN_1_0,list,true) @TO@ parseDeployments(reader,address,DOMAIN_1_0,list,EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED),EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED)) @AT@ 11091 @LENGTH@ 57
------UPD SimpleName@@MethodName:parseDeployments:[reader, address, DOMAIN_1_0, list, true] @TO@ MethodName:parseDeployments:[reader, address, DOMAIN_1_0, list, EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED), EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED)] @AT@ 11091 @LENGTH@ 57
---------INS MethodInvocation@@EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED) @TO@ SimpleName@@MethodName:parseDeployments:[reader, address, DOMAIN_1_0, list, true] @AT@ 11143 @LENGTH@ 69
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED) @AT@ 11143 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @TO@ MethodInvocation@@EnumSet.of(Attribute.NAME,Attribute.RUNTIME_NAME,Attribute.ENABLED) @AT@ 11151 @LENGTH@ 61
---------------INS QualifiedName@@Attribute.NAME @TO@ SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @AT@ 11154 @LENGTH@ 14
------------------INS SimpleName@@Attribute @TO@ QualifiedName@@Attribute.NAME @AT@ 11154 @LENGTH@ 9
------------------INS SimpleName@@NAME @TO@ QualifiedName@@Attribute.NAME @AT@ 11164 @LENGTH@ 4
---------------INS QualifiedName@@Attribute.RUNTIME_NAME @TO@ SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @AT@ 11170 @LENGTH@ 22
------------------INS SimpleName@@Attribute @TO@ QualifiedName@@Attribute.RUNTIME_NAME @AT@ 11170 @LENGTH@ 9
------------------INS SimpleName@@RUNTIME_NAME @TO@ QualifiedName@@Attribute.RUNTIME_NAME @AT@ 11180 @LENGTH@ 12
---------------INS QualifiedName@@Attribute.ENABLED @TO@ SimpleName@@MethodName:of:[Attribute.NAME, Attribute.RUNTIME_NAME, Attribute.ENABLED] @AT@ 11194 @LENGTH@ 17
------------------INS SimpleName@@Attribute @TO@ QualifiedName@@Attribute.ENABLED @AT@ 11194 @LENGTH@ 9
------------------INS SimpleName@@ENABLED @TO@ QualifiedName@@Attribute.ENABLED @AT@ 11204 @LENGTH@ 7
---------DEL BooleanLiteral@@true @AT@ 11143 @LENGTH@ 4
---------INS MethodInvocation@@EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED) @TO@ SimpleName@@MethodName:parseDeployments:[reader, address, DOMAIN_1_0, list, true] @AT@ 11234 @LENGTH@ 68
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED) @AT@ 11234 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @TO@ MethodInvocation@@EnumSet.of(Element.CONTENT,Element.FS_ARCHIVE,Element.FS_EXPLODED) @AT@ 11242 @LENGTH@ 60
---------------INS QualifiedName@@Element.CONTENT @TO@ SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @AT@ 11245 @LENGTH@ 15
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.CONTENT @AT@ 11245 @LENGTH@ 7
------------------INS SimpleName@@CONTENT @TO@ QualifiedName@@Element.CONTENT @AT@ 11253 @LENGTH@ 7
---------------INS QualifiedName@@Element.FS_ARCHIVE @TO@ SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @AT@ 11262 @LENGTH@ 18
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.FS_ARCHIVE @AT@ 11262 @LENGTH@ 7
------------------INS SimpleName@@FS_ARCHIVE @TO@ QualifiedName@@Element.FS_ARCHIVE @AT@ 11270 @LENGTH@ 10
---------------INS QualifiedName@@Element.FS_EXPLODED @TO@ SimpleName@@MethodName:of:[Element.CONTENT, Element.FS_ARCHIVE, Element.FS_EXPLODED] @AT@ 11282 @LENGTH@ 19
------------------INS SimpleName@@Element @TO@ QualifiedName@@Element.FS_EXPLODED @AT@ 11282 @LENGTH@ 7
------------------INS SimpleName@@FS_EXPLODED @TO@ QualifiedName@@Element.FS_EXPLODED @AT@ 11290 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new DefaultCompositeOption(new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(40),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","35"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))}) @TO@ ClassInstanceCreation:new DefaultCompositeOption(new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))}) @AT@ 9307 @LENGTH@ 709
---UPD ClassInstanceCreation@@DefaultCompositeOption[new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(40),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","35"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))}] @TO@ DefaultCompositeOption[new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))}] @AT@ 9314 @LENGTH@ 701
------UPD ArrayCreation@@new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(40),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","35"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))} @TO@ new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))} @AT@ 9358 @LENGTH@ 656
---------UPD ArrayInitializer@@{karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(40),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","35"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))} @TO@ {karafDistributionConfiguration().frameworkUrl(maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion(getKarafVersion()).name("Fabric Karaf Distro").unpackDirectory(new File("target/paxexam/unpack/")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50"),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf"))} @AT@ 9370 @LENGTH@ 644
------------UPD MethodInvocation@@useOwnExamBundlesStartLevel(40) @TO@ useOwnExamBundlesStartLevel(50) @AT@ 9691 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:useOwnExamBundlesStartLevel:[40] @TO@ MethodName:useOwnExamBundlesStartLevel:[50] @AT@ 9691 @LENGTH@ 31
------------------UPD NumberLiteral@@40 @TO@ 50 @AT@ 9719 @LENGTH@ 2
------------UPD MethodInvocation@@editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","35") @TO@ editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50") @AT@ 9746 @LENGTH@ 82
---------------UPD SimpleName@@MethodName:editConfigurationFilePut:["etc/config.properties", "karaf.startlevel.bundle", "35"] @TO@ MethodName:editConfigurationFilePut:["etc/config.properties", "karaf.startlevel.bundle", "50"] @AT@ 9746 @LENGTH@ 82
------------------UPD StringLiteral@@"35" @TO@ "50" @AT@ 9823 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1742 @LENGTH@ 166
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 1757 @LENGTH@ 13


DEL MethodDeclaration@@void, MethodName:removeTimer, TimerEntity timerEntity,  @AT@ 1821 @LENGTH@ 37
---DEL PrimitiveType@@void @AT@ 1816 @LENGTH@ 4
---DEL SimpleName@@MethodName:removeTimer @AT@ 1821 @LENGTH@ 11
---DEL SingleVariableDeclaration@@TimerEntity timerEntity @AT@ 1833 @LENGTH@ 23
------DEL SimpleType@@TimerEntity @AT@ 1833 @LENGTH@ 11
------DEL SimpleName@@timerEntity @AT@ 1845 @LENGTH@ 11


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.enable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.enable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1901 @LENGTH@ 621
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1905 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1905 @LENGTH@ 17
------DEL Operator@@== @AT@ 1922 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 1926 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 1926 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 1926 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 1943 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 1948 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.enable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1905 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1905 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1905 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1913 @LENGTH@ 9


INS IfStatement@@if (domainSteps.size() == 0) {  return null;} @TO@ MethodDeclaration@@public, ModelNode, MethodName:getDomainOperation,  @AT@ 18057 @LENGTH@ 130
---INS InfixExpression@@domainSteps.size() == 0 @TO@ IfStatement@@if (domainSteps.size() == 0) {  return null;} @AT@ 18061 @LENGTH@ 23
------INS MethodInvocation@@domainSteps.size() @TO@ InfixExpression@@domainSteps.size() == 0 @AT@ 18061 @LENGTH@ 18
---------INS SimpleName@@Name:domainSteps @TO@ MethodInvocation@@domainSteps.size() @AT@ 18061 @LENGTH@ 11
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@domainSteps.size() @AT@ 18073 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@domainSteps.size() == 0 @AT@ 18079 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@domainSteps.size() == 0 @AT@ 18083 @LENGTH@ 1
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (domainSteps.size() == 0) {  return null;} @AT@ 18086 @LENGTH@ 101
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 18157 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 18164 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2098 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2098 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2106 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2120 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2136 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:AccessType.valueOf(currentNode.get(descriptor).asString().toUpperCase().replace('-','_')) @TO@ MethodInvocation:AccessType.valueOf(currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH).replace('-','_')) @AT@ 24285 @LENGTH@ 91
---UPD MethodInvocation@@AccessType.valueOf(currentNode.get(descriptor).asString().toUpperCase().replace('-','_')) @TO@ AccessType.valueOf(currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH).replace('-','_')) @AT@ 24285 @LENGTH@ 90
------UPD SimpleName@@MethodName:valueOf:[currentNode.get(descriptor).asString().toUpperCase().replace('-','_')] @TO@ MethodName:valueOf:[currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH).replace('-','_')] @AT@ 24296 @LENGTH@ 79
---------UPD MethodInvocation@@currentNode.get(descriptor).asString().toUpperCase().replace('-','_') @TO@ currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH).replace('-','_') @AT@ 24304 @LENGTH@ 70
------------UPD MethodInvocation@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 24304 @LENGTH@ 52
---------------INS QualifiedName@@Locale.ENGLISH @TO@ MethodInvocation@@MethodName:toUpperCase:[] @AT@ 24380 @LENGTH@ 14
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 24380 @LENGTH@ 6
------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 24387 @LENGTH@ 7


UPD MethodDeclaration@@public, static, ScheduledExecutorService, MethodName:getConfiguredScheduledExecutorService, RouteContext routeContext, String name, ExecutorServiceAwareDefinition<?> definition, IllegalArgumentException, NoSuchBeanException,  @TO@ public, static, ScheduledExecutorService, MethodName:getConfiguredScheduledExecutorService, RouteContext routeContext, String name, ExecutorServiceAwareDefinition<?> definition, boolean useDefault, IllegalArgumentException,  @AT@ 11642 @LENGTH@ 1843
---DEL SimpleType@@NoSuchBeanException @AT@ 11901 @LENGTH@ 19
---UPD IfStatement@@if (definition.getExecutorService() != null) {  ExecutorService executorService=definition.getExecutorService();  if (executorService instanceof ScheduledExecutorService) {    return (ScheduledExecutorService)executorService;  }  throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " is not an ScheduledExecutorService instance");} else if (definition.getExecutorServiceRef() != null) {  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService");  }  return answer;} @TO@ if (definition.getExecutorService() != null) {  ExecutorService executorService=definition.getExecutorService();  if (executorService instanceof ScheduledExecutorService) {    return (ScheduledExecutorService)executorService;  }  throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " is not an ScheduledExecutorService instance");} else if (definition.getExecutorServiceRef() != null) {  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} else if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 12202 @LENGTH@ 1255
------UPD Block@@ElseBody:if (definition.getExecutorServiceRef() != null) {  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService");  }  return answer;} @TO@ ElseBody:if (definition.getExecutorServiceRef() != null) {  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} else if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 12652 @LENGTH@ 805
---------UPD IfStatement@@if (definition.getExecutorServiceRef() != null) {  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService");  }  return answer;} @TO@ if (definition.getExecutorServiceRef() != null) {  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} else if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 12652 @LENGTH@ 805
------------UPD Block@@ThenBody:{  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService");  }  return answer;} @TO@ ThenBody:{  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} @AT@ 12700 @LENGTH@ 757
---------------UPD IfStatement@@if (answer == null) {  throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService");} @TO@ if (answer == null) {  throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");} @AT@ 13274 @LENGTH@ 146
------------------UPD Block@@ThenBody:{  throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService");} @TO@ ThenBody:{  throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");} @AT@ 13294 @LENGTH@ 126
---------------------UPD ThrowStatement@@ClassInstanceCreation:new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService") @TO@ ClassInstanceCreation:new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.") @AT@ 13312 @LENGTH@ 94
------------------------UPD ClassInstanceCreation@@NoSuchBeanException[definition.getExecutorServiceRef(), "ScheduledExecutorService"] @TO@ IllegalArgumentException["ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile."] @AT@ 13318 @LENGTH@ 87
---------------------------UPD SimpleType@@NoSuchBeanException @TO@ IllegalArgumentException @AT@ 13322 @LENGTH@ 19
---------------------------DEL MethodInvocation@@definition.getExecutorServiceRef() @AT@ 13342 @LENGTH@ 34
---------------------------DEL StringLiteral@@"ScheduledExecutorService" @AT@ 13378 @LENGTH@ 26
---------------------------INS InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @TO@ ClassInstanceCreation@@NoSuchBeanException[definition.getExecutorServiceRef(), "ScheduledExecutorService"] @AT@ 13842 @LENGTH@ 114
------------------------------INS StringLiteral@@"ExecutorServiceRef " @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 13842 @LENGTH@ 21
------------------------------INS Operator@@+ @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 13863 @LENGTH@ 1
------------------------------INS MethodInvocation@@definition.getExecutorServiceRef() @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 13866 @LENGTH@ 34
---------------------------------MOV SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 13342 @LENGTH@ 10
---------------------------------MOV SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 13342 @LENGTH@ 10
---------------------------------MOV SimpleName@@MethodName:getExecutorServiceRef:[] @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 13353 @LENGTH@ 23
---------------------------------MOV SimpleName@@MethodName:getExecutorServiceRef:[] @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 13353 @LENGTH@ 23
------------------------------INS StringLiteral@@" not found in registry or as a thread pool profile." @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 13903 @LENGTH@ 53
------------INS Block@@ElseBody:if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @TO@ IfStatement@@if (definition.getExecutorServiceRef() != null) {  ScheduledExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ScheduledExecutorService.class);  if (answer == null) {    ThreadPoolProfile profile=manager.getThreadPoolProfile(definition.getExecutorServiceRef());    if (profile != null) {      answer=manager.newScheduledThreadPool(definition,name,profile);    }  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ScheduledExecutorService");  }  return answer;} @AT@ 14015 @LENGTH@ 103
---------------INS IfStatement@@if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @TO@ Block@@ElseBody:if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14015 @LENGTH@ 103
------------------INS SimpleName@@useDefault @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14019 @LENGTH@ 10
------------------INS Block@@ThenBody:{  return manager.newDefaultScheduledThreadPool(definition,name);} @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14031 @LENGTH@ 87
---------------------INS ReturnStatement@@MethodInvocation:manager.newDefaultScheduledThreadPool(definition,name) @TO@ Block@@ThenBody:{  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14045 @LENGTH@ 63
------------------------INS MethodInvocation@@manager.newDefaultScheduledThreadPool(definition,name) @TO@ ReturnStatement@@MethodInvocation:manager.newDefaultScheduledThreadPool(definition,name) @AT@ 14052 @LENGTH@ 55
---------------------------INS SimpleName@@Name:manager @TO@ MethodInvocation@@manager.newDefaultScheduledThreadPool(definition,name) @AT@ 14052 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:newDefaultScheduledThreadPool:[definition, name] @TO@ MethodInvocation@@manager.newDefaultScheduledThreadPool(definition,name) @AT@ 14060 @LENGTH@ 47
------------------------------INS SimpleName@@definition @TO@ SimpleName@@MethodName:newDefaultScheduledThreadPool:[definition, name] @AT@ 14090 @LENGTH@ 10
------------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:newDefaultScheduledThreadPool:[definition, name] @AT@ 14102 @LENGTH@ 4
---------------INS IfStatement@@if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @TO@ Block@@ElseBody:if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14015 @LENGTH@ 103
------------------INS SimpleName@@useDefault @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14019 @LENGTH@ 10
------------------INS Block@@ThenBody:{  return manager.newDefaultScheduledThreadPool(definition,name);} @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14031 @LENGTH@ 87
---------------------INS ReturnStatement@@MethodInvocation:manager.newDefaultScheduledThreadPool(definition,name) @TO@ Block@@ThenBody:{  return manager.newDefaultScheduledThreadPool(definition,name);} @AT@ 14045 @LENGTH@ 63
------------------------INS MethodInvocation@@manager.newDefaultScheduledThreadPool(definition,name) @TO@ ReturnStatement@@MethodInvocation:manager.newDefaultScheduledThreadPool(definition,name) @AT@ 14052 @LENGTH@ 55
---------------------------INS SimpleName@@Name:manager @TO@ MethodInvocation@@manager.newDefaultScheduledThreadPool(definition,name) @AT@ 14052 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:newDefaultScheduledThreadPool:[definition, name] @TO@ MethodInvocation@@manager.newDefaultScheduledThreadPool(definition,name) @AT@ 14060 @LENGTH@ 47
------------------------------INS SimpleName@@definition @TO@ SimpleName@@MethodName:newDefaultScheduledThreadPool:[definition, name] @AT@ 14090 @LENGTH@ 10
------------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:newDefaultScheduledThreadPool:[definition, name] @AT@ 14102 @LENGTH@ 4
---INS SingleVariableDeclaration@@boolean useDefault @TO@ MethodDeclaration@@public, static, ScheduledExecutorService, MethodName:getConfiguredScheduledExecutorService, RouteContext routeContext, String name, ExecutorServiceAwareDefinition<?> definition, IllegalArgumentException, NoSuchBeanException,  @AT@ 12364 @LENGTH@ 18
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean useDefault @AT@ 12364 @LENGTH@ 7
------INS SimpleName@@useDefault @TO@ SingleVariableDeclaration@@boolean useDefault @AT@ 12372 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:unmodifiableBoundedCollection(coll) @TO@ ClassInstanceCreation:new UnmodifiableBoundedCollection<E>(coll) @AT@ 2355 @LENGTH@ 43
---DEL MethodInvocation@@unmodifiableBoundedCollection(coll) @AT@ 2362 @LENGTH@ 35
------DEL SimpleName@@MethodName:unmodifiableBoundedCollection:[coll] @AT@ 2362 @LENGTH@ 35
---------DEL SimpleName@@coll @AT@ 2392 @LENGTH@ 4
---INS ClassInstanceCreation@@UnmodifiableBoundedCollection<E>[coll] @TO@ ReturnStatement@@MethodInvocation:unmodifiableBoundedCollection(coll) @AT@ 2379 @LENGTH@ 42
------INS New@@new @TO@ ClassInstanceCreation@@UnmodifiableBoundedCollection<E>[coll] @AT@ 2379 @LENGTH@ 3
------INS ParameterizedType@@UnmodifiableBoundedCollection<E> @TO@ ClassInstanceCreation@@UnmodifiableBoundedCollection<E>[coll] @AT@ 2383 @LENGTH@ 32
---------INS SimpleType@@UnmodifiableBoundedCollection @TO@ ParameterizedType@@UnmodifiableBoundedCollection<E> @AT@ 2383 @LENGTH@ 29
---------INS SimpleType@@E @TO@ ParameterizedType@@UnmodifiableBoundedCollection<E> @AT@ 2413 @LENGTH@ 1
------INS SimpleName@@coll @TO@ ClassInstanceCreation@@UnmodifiableBoundedCollection<E>[coll] @AT@ 2416 @LENGTH@ 4


UPD MethodDeclaration@@protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory, final InterceptorFactoryContext context,  @TO@ protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory,  @AT@ 5367 @LENGTH@ 277
---DEL SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 5441 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5441 @LENGTH@ 5
------DEL SimpleType@@InterceptorFactoryContext @AT@ 5447 @LENGTH@ 25
------DEL SimpleName@@context @AT@ 5473 @LENGTH@ 7
---INS VariableDeclarationStatement@@final InterceptorFactoryContext context=new SimpleInterceptorFactoryContext(); @TO@ MethodDeclaration@@protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory, final InterceptorFactoryContext context,  @AT@ 5546 @LENGTH@ 80
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final InterceptorFactoryContext context=new SimpleInterceptorFactoryContext(); @AT@ 5546 @LENGTH@ 5
------INS SimpleType@@InterceptorFactoryContext @TO@ VariableDeclarationStatement@@final InterceptorFactoryContext context=new SimpleInterceptorFactoryContext(); @AT@ 5552 @LENGTH@ 25
------INS VariableDeclarationFragment@@context=new SimpleInterceptorFactoryContext() @TO@ VariableDeclarationStatement@@final InterceptorFactoryContext context=new SimpleInterceptorFactoryContext(); @AT@ 5578 @LENGTH@ 47
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=new SimpleInterceptorFactoryContext() @AT@ 5578 @LENGTH@ 7
---------INS ClassInstanceCreation@@SimpleInterceptorFactoryContext[] @TO@ VariableDeclarationFragment@@context=new SimpleInterceptorFactoryContext() @AT@ 5588 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@SimpleInterceptorFactoryContext[] @AT@ 5588 @LENGTH@ 3
------------INS SimpleType@@SimpleInterceptorFactoryContext @TO@ ClassInstanceCreation@@SimpleInterceptorFactoryContext[] @AT@ 5592 @LENGTH@ 31


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("remove-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.removeProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("remove-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.removeProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1990 @LENGTH@ 752
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("remove-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.removeProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1994 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1994 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1994 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2002 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2018 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2022 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2022 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2022 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2049 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2022 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2056 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2067 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2067 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2085 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2090 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2092 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1994 @LENGTH@ 24


UPD VariableDeclarationStatement@@byte[] decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet); @TO@ byte[] decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.DEFAULT_CHAR_SET); @AT@ 18077 @LENGTH@ 87
---UPD VariableDeclarationFragment@@decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet) @TO@ decoded=Base64Encoder.decode(encoded).getBytes(Base64Encoder.DEFAULT_CHAR_SET) @AT@ 18084 @LENGTH@ 79
------UPD MethodInvocation@@Base64Encoder.decode(encoded).getBytes(Base64Encoder.macRomanCharSet) @TO@ Base64Encoder.decode(encoded).getBytes(Base64Encoder.DEFAULT_CHAR_SET) @AT@ 18094 @LENGTH@ 69
---------UPD SimpleName@@MethodName:getBytes:[Base64Encoder.macRomanCharSet] @TO@ MethodName:getBytes:[Base64Encoder.DEFAULT_CHAR_SET] @AT@ 18124 @LENGTH@ 39
------------UPD QualifiedName@@Base64Encoder.macRomanCharSet @TO@ Base64Encoder.DEFAULT_CHAR_SET @AT@ 18133 @LENGTH@ 29
---------------UPD SimpleName@@macRomanCharSet @TO@ DEFAULT_CHAR_SET @AT@ 18147 @LENGTH@ 15


UPD CatchClause@@catch (NoTypeConversionAvailableException e) {  assertEquals("java.lang.IllegalArgumentException: String must have exactly a length of 1: ABC",e.getCause().getMessage());} @TO@ catch (TypeConversionException e) {  assertEquals("java.lang.IllegalArgumentException: String must have exactly a length of 1: ABC",e.getCause().getMessage());} @AT@ 9857 @LENGTH@ 192
---UPD SingleVariableDeclaration@@NoTypeConversionAvailableException e @TO@ TypeConversionException e @AT@ 9864 @LENGTH@ 36
------UPD SimpleType@@NoTypeConversionAvailableException @TO@ TypeConversionException @AT@ 9864 @LENGTH@ 34


UPD ExpressionStatement@@Assignment:this.ejb2XRemoveMethod=Interceptors.getChainedInterceptorFactory(StatefulSessionSynchronizationInterceptor.FACTORY,new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)),Interceptors.getTerminalInterceptorFactory()) @TO@ Assignment:this.ejb2XRemoveMethod=Interceptors.getChainedInterceptorFactory(StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()),new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)),Interceptors.getTerminalInterceptorFactory()) @AT@ 5626 @LENGTH@ 235
---UPD Assignment@@this.ejb2XRemoveMethod=Interceptors.getChainedInterceptorFactory(StatefulSessionSynchronizationInterceptor.FACTORY,new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)),Interceptors.getTerminalInterceptorFactory()) @TO@ this.ejb2XRemoveMethod=Interceptors.getChainedInterceptorFactory(StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()),new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)),Interceptors.getTerminalInterceptorFactory()) @AT@ 5626 @LENGTH@ 234
------UPD MethodInvocation@@Interceptors.getChainedInterceptorFactory(StatefulSessionSynchronizationInterceptor.FACTORY,new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)),Interceptors.getTerminalInterceptorFactory()) @TO@ Interceptors.getChainedInterceptorFactory(StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()),new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)),Interceptors.getTerminalInterceptorFactory()) @AT@ 5651 @LENGTH@ 209
---------UPD SimpleName@@MethodName:getChainedInterceptorFactory:[StatefulSessionSynchronizationInterceptor.FACTORY, new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)), Interceptors.getTerminalInterceptorFactory()] @TO@ MethodName:getChainedInterceptorFactory:[StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()), new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)), Interceptors.getTerminalInterceptorFactory()] @AT@ 5664 @LENGTH@ 196
------------INS MethodInvocation@@StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()) @TO@ SimpleName@@MethodName:getChainedInterceptorFactory:[StatefulSessionSynchronizationInterceptor.FACTORY, new ImmediateInterceptorFactory(new StatefulRemoveInterceptor(false)), Interceptors.getTerminalInterceptorFactory()] @AT@ 5693 @LENGTH@ 102
---------------INS SimpleName@@Name:StatefulSessionSynchronizationInterceptor @TO@ MethodInvocation@@StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()) @AT@ 5693 @LENGTH@ 41
---------------INS SimpleName@@MethodName:factory:[componentDescription.getTransactionManagementType()] @TO@ MethodInvocation@@StatefulSessionSynchronizationInterceptor.factory(componentDescription.getTransactionManagementType()) @AT@ 5735 @LENGTH@ 60
------------------INS MethodInvocation@@componentDescription.getTransactionManagementType() @TO@ SimpleName@@MethodName:factory:[componentDescription.getTransactionManagementType()] @AT@ 5743 @LENGTH@ 51
---------------------INS SimpleName@@Name:componentDescription @TO@ MethodInvocation@@componentDescription.getTransactionManagementType() @AT@ 5743 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:getTransactionManagementType:[] @TO@ MethodInvocation@@componentDescription.getTransactionManagementType() @AT@ 5764 @LENGTH@ 30
------------DEL QualifiedName@@StatefulSessionSynchronizationInterceptor.FACTORY @AT@ 5693 @LENGTH@ 49
---------------DEL SimpleName@@StatefulSessionSynchronizationInterceptor @AT@ 5693 @LENGTH@ 41
---------------DEL SimpleName@@FACTORY @AT@ 5735 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:archive.addClasses(OSGiTestSupport.class,Echo.class,TargetBundleActivator.class) @TO@ MethodInvocation:archive.addClasses(HttpTestSupport.class,Echo.class,TargetBundleActivator.class) @AT@ 2851 @LENGTH@ 83
---UPD MethodInvocation@@archive.addClasses(OSGiTestSupport.class,Echo.class,TargetBundleActivator.class) @TO@ archive.addClasses(HttpTestSupport.class,Echo.class,TargetBundleActivator.class) @AT@ 2851 @LENGTH@ 82
------UPD SimpleName@@MethodName:addClasses:[OSGiTestSupport.class, Echo.class, TargetBundleActivator.class] @TO@ MethodName:addClasses:[HttpTestSupport.class, Echo.class, TargetBundleActivator.class] @AT@ 2859 @LENGTH@ 74
---------UPD TypeLiteral@@OSGiTestSupport.class @TO@ HttpTestSupport.class @AT@ 2870 @LENGTH@ 21


INS FieldDeclaration@@P, [property] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]PersistentEntityParameterValueProviderUnitTests,  @AT@ 1617 @LENGTH@ 11
---INS SimpleType@@P @TO@ FieldDeclaration@@P, [property] @AT@ 1617 @LENGTH@ 1
---INS VariableDeclarationFragment@@property @TO@ FieldDeclaration@@P, [property] @AT@ 1619 @LENGTH@ 8
------INS SimpleName@@property @TO@ VariableDeclarationFragment@@property @AT@ 1619 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:Mockito.when(sc.getState()).thenReturn(State.UP) @TO@ MethodDeclaration@@public, void, MethodName:testActivateOperation, Exception,  @AT@ 2108 @LENGTH@ 49
---INS MethodInvocation@@Mockito.when(sc.getState()).thenReturn(State.UP) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(sc.getState()).thenReturn(State.UP) @AT@ 2108 @LENGTH@ 48
------INS MethodInvocation@@MethodName:when:[sc.getState()] @TO@ MethodInvocation@@Mockito.when(sc.getState()).thenReturn(State.UP) @AT@ 2108 @LENGTH@ 27
---------INS MethodInvocation@@sc.getState() @TO@ MethodInvocation@@MethodName:when:[sc.getState()] @AT@ 2121 @LENGTH@ 13
------------INS SimpleName@@Name:sc @TO@ MethodInvocation@@sc.getState() @AT@ 2121 @LENGTH@ 2
------------INS SimpleName@@MethodName:getState:[] @TO@ MethodInvocation@@sc.getState() @AT@ 2124 @LENGTH@ 10
------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(sc.getState()).thenReturn(State.UP) @AT@ 2108 @LENGTH@ 7
------INS SimpleName@@MethodName:thenReturn:[State.UP] @TO@ MethodInvocation@@Mockito.when(sc.getState()).thenReturn(State.UP) @AT@ 2136 @LENGTH@ 20
---------INS QualifiedName@@State.UP @TO@ SimpleName@@MethodName:thenReturn:[State.UP] @AT@ 2147 @LENGTH@ 8
------------INS SimpleName@@State @TO@ QualifiedName@@State.UP @AT@ 2147 @LENGTH@ 5
------------INS SimpleName@@UP @TO@ QualifiedName@@State.UP @AT@ 2153 @LENGTH@ 2


UPD Block@@ElseBody:if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} @TO@ ElseBody:if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} else {  ServerLogger.AS_ROOT_LOGGER.logNoConsole();} @AT@ 7440 @LENGTH@ 164
---UPD IfStatement@@if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} @TO@ if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} else {  ServerLogger.AS_ROOT_LOGGER.logNoConsole();} @AT@ 7440 @LENGTH@ 164
------INS Block@@ElseBody:{  ServerLogger.AS_ROOT_LOGGER.logNoConsole();} @TO@ IfStatement@@if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} @AT@ 7610 @LENGTH@ 75
---------INS ExpressionStatement@@MethodInvocation:ServerLogger.AS_ROOT_LOGGER.logNoConsole() @TO@ Block@@ElseBody:{  ServerLogger.AS_ROOT_LOGGER.logNoConsole();} @AT@ 7628 @LENGTH@ 43
------------INS MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.logNoConsole() @TO@ ExpressionStatement@@MethodInvocation:ServerLogger.AS_ROOT_LOGGER.logNoConsole() @AT@ 7628 @LENGTH@ 42
---------------INS QualifiedName@@Name:ServerLogger.AS_ROOT_LOGGER @TO@ MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.logNoConsole() @AT@ 7628 @LENGTH@ 27
---------------INS SimpleName@@MethodName:logNoConsole:[] @TO@ MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.logNoConsole() @AT@ 7656 @LENGTH@ 14
---UPD IfStatement@@if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} @TO@ if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} else {  ServerLogger.AS_ROOT_LOGGER.logNoConsole();} @AT@ 7440 @LENGTH@ 164
------INS Block@@ElseBody:{  ServerLogger.AS_ROOT_LOGGER.logNoConsole();} @TO@ IfStatement@@if (hasHttps) {  ServerLogger.AS_ROOT_LOGGER.logHttpsConsole(mgmt.getHttpsNetworkInterfaceBinding().getAddress(),mgmt.getHttpsPort());} @AT@ 7610 @LENGTH@ 75
---------INS ExpressionStatement@@MethodInvocation:ServerLogger.AS_ROOT_LOGGER.logNoConsole() @TO@ Block@@ElseBody:{  ServerLogger.AS_ROOT_LOGGER.logNoConsole();} @AT@ 7628 @LENGTH@ 43
------------INS MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.logNoConsole() @TO@ ExpressionStatement@@MethodInvocation:ServerLogger.AS_ROOT_LOGGER.logNoConsole() @AT@ 7628 @LENGTH@ 42
---------------INS QualifiedName@@Name:ServerLogger.AS_ROOT_LOGGER @TO@ MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.logNoConsole() @AT@ 7628 @LENGTH@ 27
---------------INS SimpleName@@MethodName:logNoConsole:[] @TO@ MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.logNoConsole() @AT@ 7656 @LENGTH@ 14


UPD IfStatement@@if (loopbackAddress.getScopeId() > 0) {  assertEquals(loopbackAddress,criteria.isAcceptable(loopbackInterface,loopbackAddress));} else {  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ if (loopbackAddress.getScopeId() > 0) {  assertEquals(loopbackAddress,criteria.isAcceptable(loopbackInterface,loopbackAddress));} else {  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @AT@ 3895 @LENGTH@ 325
---UPD Block@@ElseBody:{  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ ThenBody:{  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4052 @LENGTH@ 168
---INS Block@@ElseBody:{  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @TO@ IfStatement@@if (loopbackAddress.getScopeId() > 0) {  assertEquals(loopbackAddress,criteria.isAcceptable(loopbackInterface,loopbackAddress));} else {  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4077 @LENGTH@ 368
------INS VariableDeclarationStatement@@InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress); @TO@ Block@@ElseBody:{  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @AT@ 4091 @LENGTH@ 78
---------INS SimpleType@@InetAddress @TO@ VariableDeclarationStatement@@InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress); @AT@ 4091 @LENGTH@ 11
---------INS VariableDeclarationFragment@@match=criteria.isAcceptable(loopbackInterface,loopbackAddress) @TO@ VariableDeclarationStatement@@InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress); @AT@ 4103 @LENGTH@ 65
------------INS SimpleName@@match @TO@ VariableDeclarationFragment@@match=criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4103 @LENGTH@ 5
------------INS MethodInvocation@@criteria.isAcceptable(loopbackInterface,loopbackAddress) @TO@ VariableDeclarationFragment@@match=criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4111 @LENGTH@ 57
---------------INS SimpleName@@Name:criteria @TO@ MethodInvocation@@criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4111 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isAcceptable:[loopbackInterface, loopbackAddress] @TO@ MethodInvocation@@criteria.isAcceptable(loopbackInterface,loopbackAddress) @AT@ 4120 @LENGTH@ 48
------------------INS SimpleName@@loopbackInterface @TO@ SimpleName@@MethodName:isAcceptable:[loopbackInterface, loopbackAddress] @AT@ 4133 @LENGTH@ 17
------------------INS SimpleName@@loopbackAddress @TO@ SimpleName@@MethodName:isAcceptable:[loopbackInterface, loopbackAddress] @AT@ 4152 @LENGTH@ 15
------INS IfStatement@@if (!loopbackAddress.equals(match)) {  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ Block@@ElseBody:{  InetAddress match=criteria.isAcceptable(loopbackInterface,loopbackAddress);  if (!loopbackAddress.equals(match)) {    assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));  }} @AT@ 4182 @LENGTH@ 253
---------MOV Block@@ElseBody:{  assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress));} @TO@ IfStatement@@if (!loopbackAddress.equals(match)) {  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4052 @LENGTH@ 168
------------UPD ExpressionStatement@@MethodInvocation:assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress)) @TO@ MethodInvocation:assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress)) @AT@ 4140 @LENGTH@ 70
---------------UPD MethodInvocation@@assertNull(criteria.isAcceptable(loopbackInterface,loopbackAddress)) @TO@ assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress)) @AT@ 4140 @LENGTH@ 69
------------------UPD SimpleName@@MethodName:assertNull:[criteria.isAcceptable(loopbackInterface,loopbackAddress)] @TO@ MethodName:assertNull:[match + " is invalid", criteria.isAcceptable(loopbackInterface,loopbackAddress)] @AT@ 4140 @LENGTH@ 69
---------------------INS InfixExpression@@match + " is invalid" @TO@ SimpleName@@MethodName:assertNull:[criteria.isAcceptable(loopbackInterface,loopbackAddress)] @AT@ 4339 @LENGTH@ 21
------------------------INS SimpleName@@match @TO@ InfixExpression@@match + " is invalid" @AT@ 4339 @LENGTH@ 5
------------------------INS Operator@@+ @TO@ InfixExpression@@match + " is invalid" @AT@ 4344 @LENGTH@ 1
------------------------INS StringLiteral@@" is invalid" @TO@ InfixExpression@@match + " is invalid" @AT@ 4347 @LENGTH@ 13
---------INS PrefixExpression@@!loopbackAddress.equals(match) @TO@ IfStatement@@if (!loopbackAddress.equals(match)) {  assertNull(match + " is invalid",criteria.isAcceptable(loopbackInterface,loopbackAddress));} @AT@ 4186 @LENGTH@ 30
------------INS Operator@@! @TO@ PrefixExpression@@!loopbackAddress.equals(match) @AT@ 4186 @LENGTH@ 1
------------INS MethodInvocation@@loopbackAddress.equals(match) @TO@ PrefixExpression@@!loopbackAddress.equals(match) @AT@ 4187 @LENGTH@ 29
---------------INS SimpleName@@Name:loopbackAddress @TO@ MethodInvocation@@loopbackAddress.equals(match) @AT@ 4187 @LENGTH@ 15
---------------INS SimpleName@@MethodName:equals:[match] @TO@ MethodInvocation@@loopbackAddress.equals(match) @AT@ 4203 @LENGTH@ 13
------------------INS SimpleName@@match @TO@ SimpleName@@MethodName:equals:[match] @AT@ 4210 @LENGTH@ 5


UPD VariableDeclarationStatement@@final Map<NetworkInterface,Set<InetAddress>> clone=new HashMap<NetworkInterface,Set<InetAddress>>(); @TO@ final Map<NetworkInterface,Set<InetAddress>> clone=new LinkedHashMap<NetworkInterface,Set<InetAddress>>(); @AT@ 3589 @LENGTH@ 104
---UPD VariableDeclarationFragment@@clone=new HashMap<NetworkInterface,Set<InetAddress>>() @TO@ clone=new LinkedHashMap<NetworkInterface,Set<InetAddress>>() @AT@ 3635 @LENGTH@ 57
------UPD ClassInstanceCreation@@HashMap<NetworkInterface,Set<InetAddress>>[] @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>>[] @AT@ 3643 @LENGTH@ 49
---------UPD ParameterizedType@@HashMap<NetworkInterface,Set<InetAddress>> @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>> @AT@ 3647 @LENGTH@ 43
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 3647 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 4518 @LENGTH@ 33
---DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 4518 @LENGTH@ 32
------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 4518 @LENGTH@ 32
---------DEL StringLiteral@@"activemq-data" @AT@ 4534 @LENGTH@ 15


INS IfStatement@@if (connector == null) {  throw new IllegalStateException("JMX connector can not be created");} @TO@ MethodDeclaration@@public, T, T, MethodName:execute, JmxConnectorCallback<T> callback,  @AT@ 1285 @LENGTH@ 115
---INS InfixExpression@@connector == null @TO@ IfStatement@@if (connector == null) {  throw new IllegalStateException("JMX connector can not be created");} @AT@ 1289 @LENGTH@ 17
------INS SimpleName@@connector @TO@ InfixExpression@@connector == null @AT@ 1289 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@connector == null @AT@ 1298 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@connector == null @AT@ 1302 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new IllegalStateException("JMX connector can not be created");} @TO@ IfStatement@@if (connector == null) {  throw new IllegalStateException("JMX connector can not be created");} @AT@ 1308 @LENGTH@ 92
------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("JMX connector can not be created") @TO@ Block@@ThenBody:{  throw new IllegalStateException("JMX connector can not be created");} @AT@ 1322 @LENGTH@ 68
---------INS ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("JMX connector can not be created") @AT@ 1328 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @AT@ 1328 @LENGTH@ 3
------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @AT@ 1332 @LENGTH@ 21
------------INS StringLiteral@@"JMX connector can not be created" @TO@ ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @AT@ 1354 @LENGTH@ 34


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, boolean, MethodName:requireNoChildResources,  @AT@ 1796 @LENGTH@ 427
---UPD PrimitiveType@@void @TO@ boolean @AT@ 1806 @LENGTH@ 4
---DEL SimpleName@@MethodName:performRemove @AT@ 1811 @LENGTH@ 13
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 1825 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 1825 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1842 @LENGTH@ 7
---DEL SingleVariableDeclaration@@ModelNode operation @AT@ 1851 @LENGTH@ 19
------DEL SimpleType@@ModelNode @AT@ 1851 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 1861 @LENGTH@ 9
---DEL SingleVariableDeclaration@@ModelNode model @AT@ 1872 @LENGTH@ 15
------DEL SimpleType@@ModelNode @AT@ 1872 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 1882 @LENGTH@ 5
---DEL SimpleType@@OperationFailedException @AT@ 1896 @LENGTH@ 24
---DEL IfStatement@@if (context.readModel(PathAddress.EMPTY_ADDRESS).get(SUBSYSTEM).keys().size() > 0) {  throw new OperationFailedException(new ModelNode().set("subsytems are not empty"));} @AT@ 1931 @LENGTH@ 230
------DEL InfixExpression@@context.readModel(PathAddress.EMPTY_ADDRESS).get(SUBSYSTEM).keys().size() > 0 @AT@ 1935 @LENGTH@ 77
---------DEL MethodInvocation@@context.readModel(PathAddress.EMPTY_ADDRESS).get(SUBSYSTEM).keys().size() @AT@ 1935 @LENGTH@ 73
------------DEL MethodInvocation@@MethodName:keys:[] @AT@ 1935 @LENGTH@ 66
------------DEL MethodInvocation@@MethodName:get:[SUBSYSTEM] @AT@ 1935 @LENGTH@ 59
---------------DEL SimpleName@@SUBSYSTEM @AT@ 1984 @LENGTH@ 9
------------DEL MethodInvocation@@MethodName:readModel:[PathAddress.EMPTY_ADDRESS] @AT@ 1935 @LENGTH@ 44
---------------DEL QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 1953 @LENGTH@ 25
------------------DEL SimpleName@@PathAddress @AT@ 1953 @LENGTH@ 11
------------------DEL SimpleName@@EMPTY_ADDRESS @AT@ 1965 @LENGTH@ 13
------------DEL SimpleName@@Name:context @AT@ 1935 @LENGTH@ 7
------------DEL SimpleName@@MethodName:size:[] @AT@ 2002 @LENGTH@ 6
---------DEL Operator@@> @AT@ 2008 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 2011 @LENGTH@ 1
------DEL Block@@ThenBody:{  throw new OperationFailedException(new ModelNode().set("subsytems are not empty"));} @AT@ 2014 @LENGTH@ 147
---------DEL ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("subsytems are not empty")) @AT@ 2068 @LENGTH@ 83
------------DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("subsytems are not empty")] @AT@ 2074 @LENGTH@ 76
---------------DEL New@@new @AT@ 2074 @LENGTH@ 3
---------------DEL SimpleType@@OperationFailedException @AT@ 2078 @LENGTH@ 24
---------------DEL MethodInvocation@@new ModelNode().set("subsytems are not empty") @AT@ 2103 @LENGTH@ 46
------------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2103 @LENGTH@ 15
---------------------DEL New@@new @AT@ 2103 @LENGTH@ 3
---------------------DEL SimpleType@@ModelNode @AT@ 2107 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:set:["subsytems are not empty"] @AT@ 2119 @LENGTH@ 30
---------------------DEL StringLiteral@@"subsytems are not empty" @AT@ 2123 @LENGTH@ 25
---INS SimpleName@@MethodName:requireNoChildResources @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1937 @LENGTH@ 23
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1973 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1980 @LENGTH@ 4
---DEL ExpressionStatement@@SuperMethodInvocation:super.performRemove(context,operation,model) @AT@ 2170 @LENGTH@ 47
------DEL SuperMethodInvocation@@super.performRemove(context,operation,model) @AT@ 2170 @LENGTH@ 46
---------DEL SimpleName@@MethodName:performRemove:[context, operation, model] @AT@ 2176 @LENGTH@ 13
---------DEL SimpleName@@context @AT@ 2190 @LENGTH@ 7
---------DEL SimpleName@@operation @AT@ 2199 @LENGTH@ 9
---------DEL SimpleName@@model @AT@ 2210 @LENGTH@ 5


MOV ExpressionStatement@@MethodInvocation:Assert.assertTrue(warFile.delete()) @TO@ MethodDeclaration@@public, static, void, MethodName:after, Exception,  @AT@ 2716 @LENGTH@ 36


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3309 @LENGTH@ 323
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3371 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3371 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3377 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3384 @LENGTH@ 11


UPD IfStatement@@if (domainOperationContext.getServerResults().size() > 0) {  populateServerGroupResults(context,context.getResult());} @TO@ if (domainOperationContext.getServerResults().size() > 0) {  populateServerGroupResults(context,context.getResult());} else {  context.getServerResults();} @AT@ 4250 @LENGTH@ 147
---INS Block@@ElseBody:{  context.getServerResults();} @TO@ IfStatement@@if (domainOperationContext.getServerResults().size() > 0) {  populateServerGroupResults(context,context.getResult());} @AT@ 4403 @LENGTH@ 135
------INS ExpressionStatement@@MethodInvocation:context.getServerResults() @TO@ Block@@ElseBody:{  context.getServerResults();} @AT@ 4497 @LENGTH@ 27
---------INS MethodInvocation@@context.getServerResults() @TO@ ExpressionStatement@@MethodInvocation:context.getServerResults() @AT@ 4497 @LENGTH@ 26
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServerResults() @AT@ 4497 @LENGTH@ 7
------------INS SimpleName@@MethodName:getServerResults:[] @TO@ MethodInvocation@@context.getServerResults() @AT@ 4505 @LENGTH@ 18


UPD EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @TO@ for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  final StringBuilder missing=new StringBuilder();  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }  } else {    missing.append(MESSAGES.transitiveDependencies());  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @AT@ 4120 @LENGTH@ 1128
---UPD IfStatement@@if (!immediatelyUnavailable.isEmpty()) {  final StringBuilder missing=new StringBuilder();  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @TO@ if (!immediatelyUnavailable.isEmpty()) {  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }} else {  missing.append(MESSAGES.transitiveDependencies());} @AT@ 4593 @LENGTH@ 641
------UPD Block@@ThenBody:{  final StringBuilder missing=new StringBuilder();  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @TO@ ThenBody:{  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }} @AT@ 4632 @LENGTH@ 602
------INS Block@@ElseBody:{  missing.append(MESSAGES.transitiveDependencies());} @TO@ IfStatement@@if (!immediatelyUnavailable.isEmpty()) {  final StringBuilder missing=new StringBuilder();  for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {    ServiceName missingSvc=i.next();    missing.append(missingSvc.getCanonicalName());    if (i.hasNext()) {      missing.append(", ");    }  }  problem.append(" ").append(MESSAGES.servicesMissing(missing));  problemList.add(problem.toString());} @AT@ 5099 @LENGTH@ 536
---------INS ExpressionStatement@@MethodInvocation:missing.append(MESSAGES.transitiveDependencies()) @TO@ Block@@ElseBody:{  missing.append(MESSAGES.transitiveDependencies());} @AT@ 5567 @LENGTH@ 50
------------INS MethodInvocation@@missing.append(MESSAGES.transitiveDependencies()) @TO@ ExpressionStatement@@MethodInvocation:missing.append(MESSAGES.transitiveDependencies()) @AT@ 5567 @LENGTH@ 49
---------------INS SimpleName@@Name:missing @TO@ MethodInvocation@@missing.append(MESSAGES.transitiveDependencies()) @AT@ 5567 @LENGTH@ 7
---------------INS SimpleName@@MethodName:append:[MESSAGES.transitiveDependencies()] @TO@ MethodInvocation@@missing.append(MESSAGES.transitiveDependencies()) @AT@ 5575 @LENGTH@ 41
------------------INS MethodInvocation@@MESSAGES.transitiveDependencies() @TO@ SimpleName@@MethodName:append:[MESSAGES.transitiveDependencies()] @AT@ 5582 @LENGTH@ 33
---------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.transitiveDependencies() @AT@ 5582 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:transitiveDependencies:[] @TO@ MethodInvocation@@MESSAGES.transitiveDependencies() @AT@ 5591 @LENGTH@ 24
---MOV VariableDeclarationStatement@@final StringBuilder missing=new StringBuilder(); @TO@ EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @AT@ 4654 @LENGTH@ 50
---MOV ExpressionStatement@@MethodInvocation:problem.append(" ").append(MESSAGES.servicesMissing(missing)) @TO@ EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @AT@ 5097 @LENGTH@ 62
---MOV ExpressionStatement@@MethodInvocation:problemList.add(problem.toString()) @TO@ EnhancedForStatement@@for (ServiceController<?> controller : problem) {  if (problemList == null) {    problemList=failureDescription.get(MESSAGES.servicesMissingDependencies());  }  final StringBuilder problem=new StringBuilder();  problem.append(controller.getName().getCanonicalName());  Set<ServiceName> immediatelyUnavailable=controller.getImmediateUnavailableDependencies();  if (!immediatelyUnavailable.isEmpty()) {    final StringBuilder missing=new StringBuilder();    for (Iterator<ServiceName> i=immediatelyUnavailable.iterator(); i.hasNext(); ) {      ServiceName missingSvc=i.next();      missing.append(missingSvc.getCanonicalName());      if (i.hasNext()) {        missing.append(", ");      }    }    problem.append(" ").append(MESSAGES.servicesMissing(missing));    problemList.add(problem.toString());  }} @AT@ 5180 @LENGTH@ 36


UPD SuperConstructorInvocation@@super(address);
 @TO@ super(address,(CxfComponent)null);
 @AT@ 1692 @LENGTH@ 15
---INS CastExpression@@(CxfComponent)null @TO@ SuperConstructorInvocation@@super(address);
 @AT@ 1707 @LENGTH@ 18
------INS SimpleType@@CxfComponent @TO@ CastExpression@@(CxfComponent)null @AT@ 1708 @LENGTH@ 12
------INS NullLiteral@@null @TO@ CastExpression@@(CxfComponent)null @AT@ 1721 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:med=eclass[fmap[(lo + hi) >> 1]] @TO@ Assignment:med=eclass[fmap[(lo + hi) >>> 1]] @AT@ 13376 @LENGTH@ 31
---UPD Assignment@@med=eclass[fmap[(lo + hi) >> 1]] @TO@ med=eclass[fmap[(lo + hi) >>> 1]] @AT@ 13376 @LENGTH@ 30
------UPD ArrayAccess@@eclass[fmap[(lo + hi) >> 1]] @TO@ eclass[fmap[(lo + hi) >>> 1]] @AT@ 13382 @LENGTH@ 24
---------UPD ArrayAccess@@fmap[(lo + hi) >> 1] @TO@ fmap[(lo + hi) >>> 1] @AT@ 13389 @LENGTH@ 16
------------UPD InfixExpression@@(lo + hi) >> 1 @TO@ (lo + hi) >>> 1 @AT@ 13394 @LENGTH@ 10
---------------UPD Operator@@>> @TO@ >>> @AT@ 13401 @LENGTH@ 2


DEL MethodDeclaration@@protected, InterceptorFactory, MethodName:createHomeRemoveInterceptorFactory, final Method remove,  @AT@ 1839 @LENGTH@ 162
---DEL Modifier@@protected @AT@ 1839 @LENGTH@ 9
---DEL SimpleType@@InterceptorFactory @AT@ 1849 @LENGTH@ 18
---DEL SimpleName@@MethodName:createHomeRemoveInterceptorFactory @AT@ 1868 @LENGTH@ 34
---DEL SingleVariableDeclaration@@final Method remove @AT@ 1903 @LENGTH@ 19
------DEL Modifier@@final @AT@ 1903 @LENGTH@ 5
------DEL SimpleType@@Method @AT@ 1909 @LENGTH@ 6
------DEL SimpleName@@remove @AT@ 1916 @LENGTH@ 6
---DEL ReturnStatement@@ClassInstanceCreation:new CmpEntityBeanHomeRemoveInterceptorFactory(remove) @AT@ 1934 @LENGTH@ 61
------DEL ClassInstanceCreation@@CmpEntityBeanHomeRemoveInterceptorFactory[remove] @AT@ 1941 @LENGTH@ 53
---------DEL New@@new @AT@ 1941 @LENGTH@ 3
---------DEL SimpleType@@CmpEntityBeanHomeRemoveInterceptorFactory @AT@ 1945 @LENGTH@ 41
---------DEL SimpleName@@remove @AT@ 1987 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:repositories.add(new RemoteRepository("local","default",localRepository)) @TO@ MethodInvocation:repositories.add(new RemoteRepository("local","default","file://" + localRepository)) @AT@ 4694 @LENGTH@ 76
---UPD MethodInvocation@@repositories.add(new RemoteRepository("local","default",localRepository)) @TO@ repositories.add(new RemoteRepository("local","default","file://" + localRepository)) @AT@ 4694 @LENGTH@ 75
------UPD SimpleName@@MethodName:add:[new RemoteRepository("local","default",localRepository)] @TO@ MethodName:add:[new RemoteRepository("local","default","file://" + localRepository)] @AT@ 4707 @LENGTH@ 62
---------UPD ClassInstanceCreation@@RemoteRepository["local", "default", localRepository] @TO@ RemoteRepository["local", "default", "file://" + localRepository] @AT@ 4711 @LENGTH@ 57
------------INS InfixExpression@@"file://" + localRepository @TO@ ClassInstanceCreation@@RemoteRepository["local", "default", localRepository] @AT@ 4752 @LENGTH@ 27
---------------INS StringLiteral@@"file://" @TO@ InfixExpression@@"file://" + localRepository @AT@ 4752 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@"file://" + localRepository @AT@ 4761 @LENGTH@ 1
---------------INS SimpleName@@localRepository @TO@ InfixExpression@@"file://" + localRepository @AT@ 4764 @LENGTH@ 15
------------DEL SimpleName@@localRepository @AT@ 4752 @LENGTH@ 15


INS MethodDeclaration@@public, String, MethodName:createSessionId,  @TO@ TypeDeclaration@@[public]DistributableSessionManager, AbstractSessionManager[LocalDistributableSessionManager, ClusteredSessionManager<O>, DistributableSessionManagerMBean, LifecycleListener] @AT@ 35333 @LENGTH@ 122
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 35333 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 35340 @LENGTH@ 6
---INS SimpleName@@MethodName:createSessionId @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 35347 @LENGTH@ 15
---INS ReturnStatement@@SuperMethodInvocation:super.generateSessionId(this.getEngine().getService().getRandom()) @TO@ MethodDeclaration@@public, String, MethodName:createSessionId,  @AT@ 35375 @LENGTH@ 74
------INS SuperMethodInvocation@@super.generateSessionId(this.getEngine().getService().getRandom()) @TO@ ReturnStatement@@SuperMethodInvocation:super.generateSessionId(this.getEngine().getService().getRandom()) @AT@ 35382 @LENGTH@ 66
---------INS SimpleName@@MethodName:generateSessionId:[this.getEngine().getService().getRandom()] @TO@ SuperMethodInvocation@@super.generateSessionId(this.getEngine().getService().getRandom()) @AT@ 35388 @LENGTH@ 17
---------INS MethodInvocation@@this.getEngine().getService().getRandom() @TO@ SuperMethodInvocation@@super.generateSessionId(this.getEngine().getService().getRandom()) @AT@ 35406 @LENGTH@ 41
------------INS MethodInvocation@@MethodName:getService:[] @TO@ MethodInvocation@@this.getEngine().getService().getRandom() @AT@ 35406 @LENGTH@ 29
------------INS MethodInvocation@@MethodName:getEngine:[] @TO@ MethodInvocation@@this.getEngine().getService().getRandom() @AT@ 35406 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getEngine().getService().getRandom() @AT@ 35406 @LENGTH@ 4
------------INS SimpleName@@MethodName:getRandom:[] @TO@ MethodInvocation@@this.getEngine().getService().getRandom() @AT@ 35436 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:mailboxItem.put("itemContent",new ItemContent()) @TO@ MethodInvocation:mailboxItem.put("item-content",new ItemContent()) @AT@ 2839 @LENGTH@ 50
---UPD MethodInvocation@@mailboxItem.put("itemContent",new ItemContent()) @TO@ mailboxItem.put("item-content",new ItemContent()) @AT@ 2839 @LENGTH@ 49
------UPD SimpleName@@MethodName:put:["itemContent", new ItemContent()] @TO@ MethodName:put:["item-content", new ItemContent()] @AT@ 2851 @LENGTH@ 37
---------UPD StringLiteral@@"itemContent" @TO@ "item-content" @AT@ 2855 @LENGTH@ 13


UPD Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @TO@ ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();  int byteCount=0;  byte[] buffer=new byte[4096];  int bytesRead=-1;  while ((bytesRead=gzipInputStream.read(buffer)) != -1) {    byteArrayOutputStream.write(buffer,0,bytesRead);    byteCount+=bytesRead;  }  byteArrayOutputStream.flush();  gzipInputStream.close();  assertEquals("Content length does not match",body.length,byteCount);  assertTrue("Invalid body",Arrays.equals(byteArrayOutputStream.toByteArray(),body));} @AT@ 17040 @LENGTH@ 265
---INS VariableDeclarationStatement@@ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream(); @TO@ Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @AT@ 17127 @LENGTH@ 74
------INS SimpleType@@ByteArrayOutputStream @TO@ VariableDeclarationStatement@@ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream(); @AT@ 17127 @LENGTH@ 21
------INS VariableDeclarationFragment@@byteArrayOutputStream=new ByteArrayOutputStream() @TO@ VariableDeclarationStatement@@ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream(); @AT@ 17149 @LENGTH@ 51
---------INS SimpleName@@byteArrayOutputStream @TO@ VariableDeclarationFragment@@byteArrayOutputStream=new ByteArrayOutputStream() @AT@ 17149 @LENGTH@ 21
---------INS ClassInstanceCreation@@ByteArrayOutputStream[] @TO@ VariableDeclarationFragment@@byteArrayOutputStream=new ByteArrayOutputStream() @AT@ 17173 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@ByteArrayOutputStream[] @AT@ 17173 @LENGTH@ 3
------------INS SimpleType@@ByteArrayOutputStream @TO@ ClassInstanceCreation@@ByteArrayOutputStream[] @AT@ 17177 @LENGTH@ 21
---DEL VariableDeclarationStatement@@byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream); @AT@ 17127 @LENGTH@ 73
------DEL VariableDeclarationFragment@@decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream) @AT@ 17134 @LENGTH@ 65
---------DEL MethodInvocation@@FileCopyUtils.copyToByteArray(gzipInputStream) @AT@ 17153 @LENGTH@ 46
---INS VariableDeclarationStatement@@int byteCount=0; @TO@ Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @AT@ 17206 @LENGTH@ 18
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int byteCount=0; @AT@ 17206 @LENGTH@ 3
------INS VariableDeclarationFragment@@byteCount=0 @TO@ VariableDeclarationStatement@@int byteCount=0; @AT@ 17210 @LENGTH@ 13
---------INS SimpleName@@byteCount @TO@ VariableDeclarationFragment@@byteCount=0 @AT@ 17210 @LENGTH@ 9
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@byteCount=0 @AT@ 17222 @LENGTH@ 1
---INS VariableDeclarationStatement@@byte[] buffer=new byte[4096]; @TO@ Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @AT@ 17229 @LENGTH@ 31
------MOV ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] buffer=new byte[4096]; @AT@ 17127 @LENGTH@ 6
------INS VariableDeclarationFragment@@buffer=new byte[4096] @TO@ VariableDeclarationStatement@@byte[] buffer=new byte[4096]; @AT@ 17236 @LENGTH@ 23
---------MOV SimpleName@@decompressedBody @TO@ VariableDeclarationFragment@@buffer=new byte[4096] @AT@ 17134 @LENGTH@ 16
---------INS ArrayCreation@@new byte[4096] @TO@ VariableDeclarationFragment@@buffer=new byte[4096] @AT@ 17245 @LENGTH@ 14
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[4096] @AT@ 17249 @LENGTH@ 10
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 17249 @LENGTH@ 4
------------INS NumberLiteral@@4096 @TO@ ArrayCreation@@new byte[4096] @AT@ 17254 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:assertTrue("Invalid body",Arrays.equals(decompressedBody,body)) @TO@ MethodInvocation:assertTrue("Invalid body",Arrays.equals(byteArrayOutputStream.toByteArray(),body)) @AT@ 17234 @LENGTH@ 66
------UPD MethodInvocation@@assertTrue("Invalid body",Arrays.equals(decompressedBody,body)) @TO@ assertTrue("Invalid body",Arrays.equals(byteArrayOutputStream.toByteArray(),body)) @AT@ 17234 @LENGTH@ 65
---------UPD SimpleName@@MethodName:assertTrue:["Invalid body", Arrays.equals(decompressedBody,body)] @TO@ MethodName:assertTrue:["Invalid body", Arrays.equals(byteArrayOutputStream.toByteArray(),body)] @AT@ 17234 @LENGTH@ 65
------------UPD MethodInvocation@@Arrays.equals(decompressedBody,body) @TO@ Arrays.equals(byteArrayOutputStream.toByteArray(),body) @AT@ 17261 @LENGTH@ 37
---------------UPD SimpleName@@MethodName:equals:[decompressedBody, body] @TO@ MethodName:equals:[byteArrayOutputStream.toByteArray(), body] @AT@ 17268 @LENGTH@ 30
------------------DEL SimpleName@@decompressedBody @AT@ 17275 @LENGTH@ 16
------------------INS MethodInvocation@@byteArrayOutputStream.toByteArray() @TO@ SimpleName@@MethodName:equals:[decompressedBody, body] @AT@ 17623 @LENGTH@ 35
---------------------INS SimpleName@@Name:byteArrayOutputStream @TO@ MethodInvocation@@byteArrayOutputStream.toByteArray() @AT@ 17623 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:toByteArray:[] @TO@ MethodInvocation@@byteArrayOutputStream.toByteArray() @AT@ 17645 @LENGTH@ 13
---INS VariableDeclarationStatement@@int bytesRead=-1; @TO@ Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @AT@ 17265 @LENGTH@ 19
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int bytesRead=-1; @AT@ 17265 @LENGTH@ 3
------INS VariableDeclarationFragment@@bytesRead=-1 @TO@ VariableDeclarationStatement@@int bytesRead=-1; @AT@ 17269 @LENGTH@ 14
---------INS SimpleName@@bytesRead @TO@ VariableDeclarationFragment@@bytesRead=-1 @AT@ 17269 @LENGTH@ 9
---------INS PrefixExpression@@-1 @TO@ VariableDeclarationFragment@@bytesRead=-1 @AT@ 17281 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 17281 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 17282 @LENGTH@ 1
---INS WhileStatement@@while ((bytesRead=gzipInputStream.read(buffer)) != -1) {  byteArrayOutputStream.write(buffer,0,bytesRead);  byteCount+=bytesRead;} @TO@ Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @AT@ 17289 @LENGTH@ 149
------INS InfixExpression@@(bytesRead=gzipInputStream.read(buffer)) != -1 @TO@ WhileStatement@@while ((bytesRead=gzipInputStream.read(buffer)) != -1) {  byteArrayOutputStream.write(buffer,0,bytesRead);  byteCount+=bytesRead;} @AT@ 17296 @LENGTH@ 48
---------INS ParenthesizedExpression@@(bytesRead=gzipInputStream.read(buffer)) @TO@ InfixExpression@@(bytesRead=gzipInputStream.read(buffer)) != -1 @AT@ 17296 @LENGTH@ 42
------------INS Assignment@@bytesRead=gzipInputStream.read(buffer) @TO@ ParenthesizedExpression@@(bytesRead=gzipInputStream.read(buffer)) @AT@ 17297 @LENGTH@ 40
---------------INS SimpleName@@bytesRead @TO@ Assignment@@bytesRead=gzipInputStream.read(buffer) @AT@ 17297 @LENGTH@ 9
---------------INS Operator@@= @TO@ Assignment@@bytesRead=gzipInputStream.read(buffer) @AT@ 17306 @LENGTH@ 1
---------------INS MethodInvocation@@gzipInputStream.read(buffer) @TO@ Assignment@@bytesRead=gzipInputStream.read(buffer) @AT@ 17309 @LENGTH@ 28
------------------MOV SimpleName@@Name:FileCopyUtils @TO@ MethodInvocation@@gzipInputStream.read(buffer) @AT@ 17153 @LENGTH@ 13
------------------MOV SimpleName@@MethodName:copyToByteArray:[gzipInputStream] @TO@ MethodInvocation@@gzipInputStream.read(buffer) @AT@ 17167 @LENGTH@ 32
---------------------UPD SimpleName@@gzipInputStream @TO@ buffer @AT@ 17183 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@(bytesRead=gzipInputStream.read(buffer)) != -1 @AT@ 17338 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@(bytesRead=gzipInputStream.read(buffer)) != -1 @AT@ 17342 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 17342 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 17343 @LENGTH@ 1
------INS Block@@WhileBody:{  byteArrayOutputStream.write(buffer,0,bytesRead);  byteCount+=bytesRead;} @TO@ WhileStatement@@while ((bytesRead=gzipInputStream.read(buffer)) != -1) {  byteArrayOutputStream.write(buffer,0,bytesRead);  byteCount+=bytesRead;} @AT@ 17346 @LENGTH@ 92
---------INS ExpressionStatement@@MethodInvocation:byteArrayOutputStream.write(buffer,0,bytesRead) @TO@ Block@@WhileBody:{  byteArrayOutputStream.write(buffer,0,bytesRead);  byteCount+=bytesRead;} @AT@ 17353 @LENGTH@ 50
------------INS MethodInvocation@@byteArrayOutputStream.write(buffer,0,bytesRead) @TO@ ExpressionStatement@@MethodInvocation:byteArrayOutputStream.write(buffer,0,bytesRead) @AT@ 17353 @LENGTH@ 49
---------------INS SimpleName@@Name:byteArrayOutputStream @TO@ MethodInvocation@@byteArrayOutputStream.write(buffer,0,bytesRead) @AT@ 17353 @LENGTH@ 21
---------------INS SimpleName@@MethodName:write:[buffer, 0, bytesRead] @TO@ MethodInvocation@@byteArrayOutputStream.write(buffer,0,bytesRead) @AT@ 17375 @LENGTH@ 27
------------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:write:[buffer, 0, bytesRead] @AT@ 17381 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:write:[buffer, 0, bytesRead] @AT@ 17389 @LENGTH@ 1
------------------INS SimpleName@@bytesRead @TO@ SimpleName@@MethodName:write:[buffer, 0, bytesRead] @AT@ 17392 @LENGTH@ 9
---------INS ExpressionStatement@@Assignment:byteCount+=bytesRead @TO@ Block@@WhileBody:{  byteArrayOutputStream.write(buffer,0,bytesRead);  byteCount+=bytesRead;} @AT@ 17409 @LENGTH@ 23
------------INS Assignment@@byteCount+=bytesRead @TO@ ExpressionStatement@@Assignment:byteCount+=bytesRead @AT@ 17409 @LENGTH@ 22
---------------INS SimpleName@@byteCount @TO@ Assignment@@byteCount+=bytesRead @AT@ 17409 @LENGTH@ 9
---------------INS Operator@@+= @TO@ Assignment@@byteCount+=bytesRead @AT@ 17418 @LENGTH@ 2
---------------INS SimpleName@@bytesRead @TO@ Assignment@@byteCount+=bytesRead @AT@ 17422 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:byteArrayOutputStream.flush() @TO@ Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @AT@ 17443 @LENGTH@ 30
------INS MethodInvocation@@byteArrayOutputStream.flush() @TO@ ExpressionStatement@@MethodInvocation:byteArrayOutputStream.flush() @AT@ 17443 @LENGTH@ 29
---------INS SimpleName@@Name:byteArrayOutputStream @TO@ MethodInvocation@@byteArrayOutputStream.flush() @AT@ 17443 @LENGTH@ 21
---------INS SimpleName@@MethodName:flush:[] @TO@ MethodInvocation@@byteArrayOutputStream.flush() @AT@ 17465 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals("Content length does not match",body.length,byteCount) @TO@ Block@@ThenBody:{  GZIPInputStream gzipInputStream=new GZIPInputStream(req.getInputStream());  byte[] decompressedBody=FileCopyUtils.copyToByteArray(gzipInputStream);  gzipInputStream.close();  assertTrue("Invalid body",Arrays.equals(decompressedBody,body));} @AT@ 17507 @LENGTH@ 70
------INS MethodInvocation@@assertEquals("Content length does not match",body.length,byteCount) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Content length does not match",body.length,byteCount) @AT@ 17507 @LENGTH@ 69
---------INS SimpleName@@MethodName:assertEquals:["Content length does not match", body.length, byteCount] @TO@ MethodInvocation@@assertEquals("Content length does not match",body.length,byteCount) @AT@ 17507 @LENGTH@ 69
------------INS StringLiteral@@"Content length does not match" @TO@ SimpleName@@MethodName:assertEquals:["Content length does not match", body.length, byteCount] @AT@ 17520 @LENGTH@ 31
------------INS QualifiedName@@body.length @TO@ SimpleName@@MethodName:assertEquals:["Content length does not match", body.length, byteCount] @AT@ 17553 @LENGTH@ 11
---------------INS SimpleName@@body @TO@ QualifiedName@@body.length @AT@ 17553 @LENGTH@ 4
---------------INS SimpleName@@length @TO@ QualifiedName@@body.length @AT@ 17558 @LENGTH@ 6
------------INS SimpleName@@byteCount @TO@ SimpleName@@MethodName:assertEquals:["Content length does not match", body.length, byteCount] @AT@ 17566 @LENGTH@ 9


UPD TypeDeclaration@@[@RunWith(Arquillian.class), public]EntityListenersTestCase,  @TO@ [@RunWith(Arquillian.class), @Ignore("AS7-2968"), public]EntityListenersTestCase,  @AT@ 1666 @LENGTH@ 2709
---INS SingleMemberAnnotation@@@Ignore("AS7-2968") @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]EntityListenersTestCase,  @AT@ 1718 @LENGTH@ 19


UPD SwitchStatement@@switch (reusableToken.type) {case TOKEN:  record.add(reusableToken.content.toString());break;case EORECORD:record.add(reusableToken.content.toString());break;case EOF:if (reusableToken.isReady) {record.add(reusableToken.content.toString());} else {result=null;}break;case INVALID:throw new IOException("(line " + getLineNumber() + ") invalid parse sequence");case COMMENT:break;} @TO@ switch (reusableToken.type) {case TOKEN:  record.add(reusableToken.content.toString());break;case EORECORD:record.add(reusableToken.content.toString());break;case EOF:if (reusableToken.isReady) {record.add(reusableToken.content.toString());} else {result=null;}break;case INVALID:throw new IOException("(line " + getLineNumber() + ") invalid parse sequence");case COMMENT:reusableToken.type=TOKEN;break;} @AT@ 5020 @LENGTH@ 758
---INS ExpressionStatement@@Assignment:reusableToken.type=TOKEN @TO@ SwitchStatement@@switch (reusableToken.type) {case TOKEN:  record.add(reusableToken.content.toString());break;case EORECORD:record.add(reusableToken.content.toString());break;case EOF:if (reusableToken.isReady) {record.add(reusableToken.content.toString());} else {result=null;}break;case INVALID:throw new IOException("(line " + getLineNumber() + ") invalid parse sequence");case COMMENT:break;} @AT@ 5758 @LENGTH@ 27
------INS Assignment@@reusableToken.type=TOKEN @TO@ ExpressionStatement@@Assignment:reusableToken.type=TOKEN @AT@ 5758 @LENGTH@ 26
---------INS QualifiedName@@reusableToken.type @TO@ Assignment@@reusableToken.type=TOKEN @AT@ 5758 @LENGTH@ 18
------------INS SimpleName@@reusableToken @TO@ QualifiedName@@reusableToken.type @AT@ 5758 @LENGTH@ 13
------------INS SimpleName@@type @TO@ QualifiedName@@reusableToken.type @AT@ 5772 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@reusableToken.type=TOKEN @AT@ 5776 @LENGTH@ 1
---------INS SimpleName@@TOKEN @TO@ Assignment@@reusableToken.type=TOKEN @AT@ 5779 @LENGTH@ 5


UPD ReturnStatement@@QualifiedName:ManagementProtocol.TYPE_PING @TO@ QualifiedName:ManagementProtocol.TYPE_PONG @AT@ 1318 @LENGTH@ 36
---UPD QualifiedName@@ManagementProtocol.TYPE_PING @TO@ ManagementProtocol.TYPE_PONG @AT@ 1325 @LENGTH@ 28
------UPD SimpleName@@TYPE_PING @TO@ TYPE_PONG @AT@ 1344 @LENGTH@ 9


INS ReturnStatement@@ClassInstanceCreation:new FilterProcessor(createPredicate(routeContext),childProcessor) @TO@ MethodDeclaration@@protected, FilterProcessor, MethodName:createFilterProcessor, RouteContext routeContext, Exception,  @AT@ 3445 @LENGTH@ 74
---INS ClassInstanceCreation@@FilterProcessor[createPredicate(routeContext), childProcessor] @TO@ ReturnStatement@@ClassInstanceCreation:new FilterProcessor(createPredicate(routeContext),childProcessor) @AT@ 3452 @LENGTH@ 66
------INS New@@new @TO@ ClassInstanceCreation@@FilterProcessor[createPredicate(routeContext), childProcessor] @AT@ 3452 @LENGTH@ 3
------INS SimpleType@@FilterProcessor @TO@ ClassInstanceCreation@@FilterProcessor[createPredicate(routeContext), childProcessor] @AT@ 3456 @LENGTH@ 15
------INS MethodInvocation@@createPredicate(routeContext) @TO@ ClassInstanceCreation@@FilterProcessor[createPredicate(routeContext), childProcessor] @AT@ 3472 @LENGTH@ 29
---------INS SimpleName@@MethodName:createPredicate:[routeContext] @TO@ MethodInvocation@@createPredicate(routeContext) @AT@ 3472 @LENGTH@ 29
------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:createPredicate:[routeContext] @AT@ 3488 @LENGTH@ 12
------INS SimpleName@@childProcessor @TO@ ClassInstanceCreation@@FilterProcessor[createPredicate(routeContext), childProcessor] @AT@ 3503 @LENGTH@ 14


INS IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @TO@ MethodDeclaration@@protected, void, MethodName:manageTransaction, Throwable,  @AT@ 2898 @LENGTH@ 365
---INS InfixExpression@@transaction == null @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2901 @LENGTH@ 19
------INS SimpleName@@transaction @TO@ InfixExpression@@transaction == null @AT@ 2901 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@transaction == null @AT@ 2912 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@transaction == null @AT@ 2916 @LENGTH@ 4
---INS Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2922 @LENGTH@ 341
------INS IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2936 @LENGTH@ 297
---------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2939 @LENGTH@ 49
------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 2939 @LENGTH@ 32
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 2972 @LENGTH@ 16
---------INS Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2990 @LENGTH@ 243
------------INS ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 3086 @LENGTH@ 133
---------------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 3086 @LENGTH@ 132
------------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 3086 @LENGTH@ 32
------------------INS SimpleName@@MethodName:debug:["Not committing transaction " + this.xidTransactionID + " as is was not found on the server"] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 3119 @LENGTH@ 99
---------------------INS InfixExpression@@"Not committing transaction " + this.xidTransactionID + " as is was not found on the server" @TO@ SimpleName@@MethodName:debug:["Not committing transaction " + this.xidTransactionID + " as is was not found on the server"] @AT@ 3125 @LENGTH@ 92
------------------------INS StringLiteral@@"Not committing transaction " @TO@ InfixExpression@@"Not committing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 3125 @LENGTH@ 29
------------------------INS Operator@@+ @TO@ InfixExpression@@"Not committing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 3154 @LENGTH@ 1
------------------------INS FieldAccess@@this.xidTransactionID @TO@ InfixExpression@@"Not committing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 3157 @LENGTH@ 21
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.xidTransactionID @AT@ 3157 @LENGTH@ 4
---------------------------INS SimpleName@@xidTransactionID @TO@ FieldAccess@@this.xidTransactionID @AT@ 3162 @LENGTH@ 16
------------------------INS StringLiteral@@" as is was not found on the server" @TO@ InfixExpression@@"Not committing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 3181 @LENGTH@ 36
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not committing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 3246 @LENGTH@ 7


UPD IfStatement@@if (ctx.getCharacter() == ',') {  return;} @TO@ if (ctx.getCharacter() == ',' || ctx.getCharacter() == '}') {  return;} @AT@ 2228 @LENGTH@ 77
---INS InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @TO@ IfStatement@@if (ctx.getCharacter() == ',') {  return;} @AT@ 2231 @LENGTH@ 54
------MOV InfixExpression@@ctx.getCharacter() == ',' @TO@ InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @AT@ 2231 @LENGTH@ 25
------INS Operator@@|| @TO@ InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @AT@ 2256 @LENGTH@ 2
------INS InfixExpression@@ctx.getCharacter() == '}' @TO@ InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @AT@ 2260 @LENGTH@ 25
---------INS MethodInvocation@@ctx.getCharacter() @TO@ InfixExpression@@ctx.getCharacter() == '}' @AT@ 2260 @LENGTH@ 18
------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getCharacter() @AT@ 2260 @LENGTH@ 3
------------INS SimpleName@@MethodName:getCharacter:[] @TO@ MethodInvocation@@ctx.getCharacter() @AT@ 2264 @LENGTH@ 14
---------INS Operator@@== @TO@ InfixExpression@@ctx.getCharacter() == '}' @AT@ 2278 @LENGTH@ 2
---------INS CharacterLiteral@@'}' @TO@ InfixExpression@@ctx.getCharacter() == '}' @AT@ 2282 @LENGTH@ 3


UPD TryStatement@@try {  if (!synchronizationRegistered) {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    final int status=transactionSynchronizationRegistry.getTransactionStatus();    if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {      final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);      transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);      wasTxSyncRegistered=true;      if (ROOT_LOGGER.isTraceEnabled()) {        ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);      }      instance.afterBegin();    }    synchronizationRegistered=true;  }  return context.proceed();}  finally {  if (!wasTxSyncRegistered) {    releaseInstance(instance);  }} @TO@ try {  if (!synchronizationRegistered) {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    final int status=transactionSynchronizationRegistry.getTransactionStatus();    if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {      final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);      transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);      wasTxSyncRegistered=true;      if (ROOT_LOGGER.isTraceEnabled()) {        ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);      }      instance.afterBegin();    }    synchronizationRegistered=true;    context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true));  } else {    context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false));  }  return context.proceed();}  finally {  if (!wasTxSyncRegistered && !synchronizationRegistered) {    releaseInstance(instance);  } else   if (!wasTxSyncRegistered) {    releaseLock();  }} @AT@ 5213 @LENGTH@ 2243
---UPD IfStatement@@if (!synchronizationRegistered) {  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  final int status=transactionSynchronizationRegistry.getTransactionStatus();  if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {    final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);    wasTxSyncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }    instance.afterBegin();  }  synchronizationRegistered=true;} @TO@ if (!synchronizationRegistered) {  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  final int status=transactionSynchronizationRegistry.getTransactionStatus();  if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {    final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);    wasTxSyncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }    instance.afterBegin();  }  synchronizationRegistered=true;  context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true));} else {  context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false));} @AT@ 5239 @LENGTH@ 1619
------UPD Block@@ThenBody:{  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  final int status=transactionSynchronizationRegistry.getTransactionStatus();  if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {    final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);    wasTxSyncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }    instance.afterBegin();  }  synchronizationRegistered=true;} @TO@ ThenBody:{  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  final int status=transactionSynchronizationRegistry.getTransactionStatus();  if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {    final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);    wasTxSyncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }    instance.afterBegin();  }  synchronizationRegistered=true;  context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true));} @AT@ 5271 @LENGTH@ 1587
---------INS ExpressionStatement@@MethodInvocation:context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true)) @TO@ Block@@ThenBody:{  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  final int status=transactionSynchronizationRegistry.getTransactionStatus();  if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {    final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);    wasTxSyncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }    instance.afterBegin();  }  synchronizationRegistered=true;} @AT@ 7378 @LENGTH@ 92
------------INS MethodInvocation@@context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true)) @TO@ ExpressionStatement@@MethodInvocation:context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true)) @AT@ 7378 @LENGTH@ 91
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true)) @AT@ 7378 @LENGTH@ 7
---------------INS SimpleName@@MethodName:putPrivateData:[StatefulTransactionMarker.class, StatefulTransactionMarker.of(true)] @TO@ MethodInvocation@@context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(true)) @AT@ 7386 @LENGTH@ 83
------------------INS TypeLiteral@@StatefulTransactionMarker.class @TO@ SimpleName@@MethodName:putPrivateData:[StatefulTransactionMarker.class, StatefulTransactionMarker.of(true)] @AT@ 7401 @LENGTH@ 31
------------------INS MethodInvocation@@StatefulTransactionMarker.of(true) @TO@ SimpleName@@MethodName:putPrivateData:[StatefulTransactionMarker.class, StatefulTransactionMarker.of(true)] @AT@ 7434 @LENGTH@ 34
---------------------INS SimpleName@@Name:StatefulTransactionMarker @TO@ MethodInvocation@@StatefulTransactionMarker.of(true) @AT@ 7434 @LENGTH@ 25
---------------------INS SimpleName@@MethodName:of:[true] @TO@ MethodInvocation@@StatefulTransactionMarker.of(true) @AT@ 7460 @LENGTH@ 8
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:of:[true] @AT@ 7463 @LENGTH@ 4
------INS Block@@ElseBody:{  context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false));} @TO@ IfStatement@@if (!synchronizationRegistered) {  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  final int status=transactionSynchronizationRegistry.getTransactionStatus();  if (currentTransactionKey != null && status != Status.STATUS_COMMITTED) {    final Synchronization statefulSessionSync=new StatefulSessionSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(statefulSessionSync);    wasTxSyncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + statefulSessionSync + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }    instance.afterBegin();  }  synchronizationRegistered=true;} @AT@ 7498 @LENGTH@ 141
---------INS ExpressionStatement@@MethodInvocation:context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false)) @TO@ Block@@ElseBody:{  context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false));} @AT@ 7524 @LENGTH@ 93
------------INS MethodInvocation@@context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false)) @TO@ ExpressionStatement@@MethodInvocation:context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false)) @AT@ 7524 @LENGTH@ 92
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false)) @AT@ 7524 @LENGTH@ 7
---------------INS SimpleName@@MethodName:putPrivateData:[StatefulTransactionMarker.class, StatefulTransactionMarker.of(false)] @TO@ MethodInvocation@@context.putPrivateData(StatefulTransactionMarker.class,StatefulTransactionMarker.of(false)) @AT@ 7532 @LENGTH@ 84
------------------INS TypeLiteral@@StatefulTransactionMarker.class @TO@ SimpleName@@MethodName:putPrivateData:[StatefulTransactionMarker.class, StatefulTransactionMarker.of(false)] @AT@ 7547 @LENGTH@ 31
------------------INS MethodInvocation@@StatefulTransactionMarker.of(false) @TO@ SimpleName@@MethodName:putPrivateData:[StatefulTransactionMarker.class, StatefulTransactionMarker.of(false)] @AT@ 7580 @LENGTH@ 35
---------------------INS SimpleName@@Name:StatefulTransactionMarker @TO@ MethodInvocation@@StatefulTransactionMarker.of(false) @AT@ 7580 @LENGTH@ 25
---------------------INS SimpleName@@MethodName:of:[false] @TO@ MethodInvocation@@StatefulTransactionMarker.of(false) @AT@ 7606 @LENGTH@ 9
------------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:of:[false] @AT@ 7609 @LENGTH@ 5
---UPD Block@@FinallyBody:{  if (!wasTxSyncRegistered) {    releaseInstance(instance);  }} @TO@ FinallyBody:{  if (!wasTxSyncRegistered && !synchronizationRegistered) {    releaseInstance(instance);  } else   if (!wasTxSyncRegistered) {    releaseLock();  }} @AT@ 6983 @LENGTH@ 473
------UPD IfStatement@@if (!wasTxSyncRegistered) {  releaseInstance(instance);} @TO@ if (!wasTxSyncRegistered) {  releaseLock();} @AT@ 7338 @LENGTH@ 100
------INS IfStatement@@if (!wasTxSyncRegistered && !synchronizationRegistered) {  releaseInstance(instance);} else if (!wasTxSyncRegistered) {  releaseLock();} @TO@ Block@@FinallyBody:{  if (!wasTxSyncRegistered) {    releaseInstance(instance);  }} @AT@ 8119 @LENGTH@ 372
---------MOV Block@@ThenBody:{  releaseInstance(instance);} @TO@ IfStatement@@if (!wasTxSyncRegistered && !synchronizationRegistered) {  releaseInstance(instance);} else if (!wasTxSyncRegistered) {  releaseLock();} @AT@ 7364 @LENGTH@ 74
---------INS InfixExpression@@!wasTxSyncRegistered && !synchronizationRegistered @TO@ IfStatement@@if (!wasTxSyncRegistered && !synchronizationRegistered) {  releaseInstance(instance);} else if (!wasTxSyncRegistered) {  releaseLock();} @AT@ 8123 @LENGTH@ 50
------------INS PrefixExpression@@!wasTxSyncRegistered @TO@ InfixExpression@@!wasTxSyncRegistered && !synchronizationRegistered @AT@ 8123 @LENGTH@ 20
---------------INS Operator@@! @TO@ PrefixExpression@@!wasTxSyncRegistered @AT@ 8123 @LENGTH@ 1
---------------INS SimpleName@@wasTxSyncRegistered @TO@ PrefixExpression@@!wasTxSyncRegistered @AT@ 8124 @LENGTH@ 19
------------INS Operator@@&& @TO@ InfixExpression@@!wasTxSyncRegistered && !synchronizationRegistered @AT@ 8143 @LENGTH@ 2
------------INS PrefixExpression@@!synchronizationRegistered @TO@ InfixExpression@@!wasTxSyncRegistered && !synchronizationRegistered @AT@ 8147 @LENGTH@ 26
---------------INS Operator@@! @TO@ PrefixExpression@@!synchronizationRegistered @AT@ 8147 @LENGTH@ 1
---------------INS SimpleName@@synchronizationRegistered @TO@ PrefixExpression@@!synchronizationRegistered @AT@ 8148 @LENGTH@ 25
---------INS Block@@ElseBody:if (!wasTxSyncRegistered) {  releaseLock();} @TO@ IfStatement@@if (!wasTxSyncRegistered && !synchronizationRegistered) {  releaseInstance(instance);} else if (!wasTxSyncRegistered) {  releaseLock();} @AT@ 8255 @LENGTH@ 236
------------MOV IfStatement@@if (!wasTxSyncRegistered) {  releaseInstance(instance);} @TO@ Block@@ElseBody:if (!wasTxSyncRegistered) {  releaseLock();} @AT@ 7338 @LENGTH@ 100
---------------INS Block@@ThenBody:{  releaseLock();} @TO@ IfStatement@@if (!wasTxSyncRegistered) {  releaseInstance(instance);} @AT@ 8280 @LENGTH@ 211
------------------INS ExpressionStatement@@MethodInvocation:releaseLock() @TO@ Block@@ThenBody:{  releaseLock();} @AT@ 8455 @LENGTH@ 14
---------------------INS MethodInvocation@@MethodName:releaseLock:[] @TO@ ExpressionStatement@@MethodInvocation:releaseLock() @AT@ 8455 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, IOException, MgmtOperationException,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, IOException, MgmtOperationException,  @AT@ 3410 @LENGTH@ 351
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, IOException, MgmtOperationException,  @AT@ 3472 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3472 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3478 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3485 @LENGTH@ 11


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]ArrayTypeConverter, [TypeConverter] @AT@ 3435 @LENGTH@ 205
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3435 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3446 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3448 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3461 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3461 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3461 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3467 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3470 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3476 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3476 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3485 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3495 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3495 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3502 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3519 @LENGTH@ 115
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 3537 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3544 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3544 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3554 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3560 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 3578 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3585 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3585 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3595 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3612 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3619 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:customHandler.registerReadOnlyAttribute(CommonAttributes.CLASS,null) @TO@ MethodDeclaration@@public, void, MethodName:initialize, ExtensionContext context,  @AT@ 17791 @LENGTH@ 70
---INS MethodInvocation@@customHandler.registerReadOnlyAttribute(CommonAttributes.CLASS,null) @TO@ ExpressionStatement@@MethodInvocation:customHandler.registerReadOnlyAttribute(CommonAttributes.CLASS,null) @AT@ 17791 @LENGTH@ 69
------INS SimpleName@@Name:customHandler @TO@ MethodInvocation@@customHandler.registerReadOnlyAttribute(CommonAttributes.CLASS,null) @AT@ 17791 @LENGTH@ 13
------INS SimpleName@@MethodName:registerReadOnlyAttribute:[CommonAttributes.CLASS, null] @TO@ MethodInvocation@@customHandler.registerReadOnlyAttribute(CommonAttributes.CLASS,null) @AT@ 17805 @LENGTH@ 55
---------INS QualifiedName@@CommonAttributes.CLASS @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[CommonAttributes.CLASS, null] @AT@ 17831 @LENGTH@ 22
------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.CLASS @AT@ 17831 @LENGTH@ 16
------------INS SimpleName@@CLASS @TO@ QualifiedName@@CommonAttributes.CLASS @AT@ 17848 @LENGTH@ 5
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[CommonAttributes.CLASS, null] @AT@ 17855 @LENGTH@ 4


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [THREAD_POOL_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.THREAD_POOL_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build()] @TO@ static, final, SimpleAttributeDefinition, [THREAD_POOL_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.THREAD_POOL_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build()] @AT@ 1846 @LENGTH@ 321
---UPD VariableDeclarationFragment@@THREAD_POOL_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.THREAD_POOL_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ THREAD_POOL_NAME=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.THREAD_POOL_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 1885 @LENGTH@ 281
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.THREAD_POOL_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.THREAD_POOL_NAME,ModelType.STRING,true).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 1916 @LENGTH@ 250
---------UPD MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_RESOURCE_SERVICES] @TO@ MethodName:setFlags:[AttributeAccess.Flag.RESTART_ALL_SERVICES] @AT@ 1916 @LENGTH@ 221
------------UPD QualifiedName@@AttributeAccess.Flag.RESTART_RESOURCE_SERVICES @TO@ AttributeAccess.Flag.RESTART_ALL_SERVICES @AT@ 2090 @LENGTH@ 46
---------------UPD SimpleName@@RESTART_RESOURCE_SERVICES @TO@ RESTART_ALL_SERVICES @AT@ 2111 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName()) @TO@ MethodInvocation:writer.writeAttribute(Attribute.TYPE.getLocalName(),property.getName()) @AT@ 55119 @LENGTH@ 73
---UPD MethodInvocation@@writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName()) @TO@ writer.writeAttribute(Attribute.TYPE.getLocalName(),property.getName()) @AT@ 55119 @LENGTH@ 72
------UPD SimpleName@@MethodName:writeAttribute:[Attribute.NAME.getLocalName(), property.getName()] @TO@ MethodName:writeAttribute:[Attribute.TYPE.getLocalName(), property.getName()] @AT@ 55126 @LENGTH@ 65
---------UPD MethodInvocation@@Attribute.NAME.getLocalName() @TO@ Attribute.TYPE.getLocalName() @AT@ 55141 @LENGTH@ 29
------------UPD QualifiedName@@Name:Attribute.NAME @TO@ Name:Attribute.TYPE @AT@ 55141 @LENGTH@ 14


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [KEY_ALIAS=new SimpleAttributeDefinitionBuilder(Constants.KEY_ALIAS,ModelType.STRING).setXmlName(Constants.KEY_ALIAS).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [KEY_ALIAS=new SimpleAttributeDefinitionBuilder(Constants.KEY_ALIAS,ModelType.STRING).setXmlName(Constants.KEY_ALIAS).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode("jboss")).build()] @AT@ 1343 @LENGTH@ 414
---UPD VariableDeclarationFragment@@KEY_ALIAS=new SimpleAttributeDefinitionBuilder(Constants.KEY_ALIAS,ModelType.STRING).setXmlName(Constants.KEY_ALIAS).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @TO@ KEY_ALIAS=new SimpleAttributeDefinitionBuilder(Constants.KEY_ALIAS,ModelType.STRING).setXmlName(Constants.KEY_ALIAS).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode("jboss")).build() @AT@ 1392 @LENGTH@ 364
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.KEY_ALIAS,ModelType.STRING).setXmlName(Constants.KEY_ALIAS).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @TO@ new SimpleAttributeDefinitionBuilder(Constants.KEY_ALIAS,ModelType.STRING).setXmlName(Constants.KEY_ALIAS).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setDefaultValue(new ModelNode("jboss")).build() @AT@ 1416 @LENGTH@ 340
---------INS MethodInvocation@@MethodName:setDefaultValue:[new ModelNode("jboss")] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.KEY_ALIAS,ModelType.STRING).setXmlName(Constants.KEY_ALIAS).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 1416 @LENGTH@ 372
------------INS ClassInstanceCreation@@ModelNode["jboss"] @TO@ MethodInvocation@@MethodName:setDefaultValue:[new ModelNode("jboss")] @AT@ 1765 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode["jboss"] @AT@ 1765 @LENGTH@ 3
---------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode["jboss"] @AT@ 1769 @LENGTH@ 9
---------------INS StringLiteral@@"jboss" @TO@ ClassInstanceCreation@@ModelNode["jboss"] @AT@ 1779 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:zooKeeper.createOrSetWithParents(CONTAINER_ADDRESS.getPath(name,resolver),getContainerPointer(zooKeeper,name),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @TO@ MethodInvocation:zooKeeper.createOrSetWithParents(CONTAINER_ADDRESS.getPath(name,resolver),address,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @AT@ 6484 @LENGTH@ 166
---UPD MethodInvocation@@zooKeeper.createOrSetWithParents(CONTAINER_ADDRESS.getPath(name,resolver),getContainerPointer(zooKeeper,name),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @TO@ zooKeeper.createOrSetWithParents(CONTAINER_ADDRESS.getPath(name,resolver),address,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @AT@ 6484 @LENGTH@ 165
------UPD SimpleName@@MethodName:createOrSetWithParents:[CONTAINER_ADDRESS.getPath(name,resolver), getContainerPointer(zooKeeper,name), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @TO@ MethodName:createOrSetWithParents:[CONTAINER_ADDRESS.getPath(name,resolver), address, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @AT@ 6494 @LENGTH@ 155
---------DEL MethodInvocation@@getContainerPointer(zooKeeper,name) @AT@ 6560 @LENGTH@ 36
------------DEL SimpleName@@MethodName:getContainerPointer:[zooKeeper, name] @AT@ 6560 @LENGTH@ 36
---------------DEL SimpleName@@name @AT@ 6591 @LENGTH@ 4
---------MOV SimpleName@@zooKeeper @TO@ SimpleName@@MethodName:createOrSetWithParents:[CONTAINER_ADDRESS.getPath(name,resolver), getContainerPointer(zooKeeper,name), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @AT@ 6580 @LENGTH@ 9


INS MethodDeclaration@@public, boolean, MethodName:isSession,  @TO@ TypeDeclaration@@[public, abstract]SessionBeanComponentDescription, EJBComponentDescription @AT@ 15842 @LENGTH@ 55
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 15842 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 15849 @LENGTH@ 7
---INS SimpleName@@MethodName:isSession @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 15857 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 15879 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 15886 @LENGTH@ 4


UPD FieldDeclaration@@public, final, static, long, [WAIT_TIMEOUT=10000] @TO@ public, final, static, long, [WAIT_TIMEOUT=30000] @AT@ 1402 @LENGTH@ 46
---UPD VariableDeclarationFragment@@WAIT_TIMEOUT=10000 @TO@ WAIT_TIMEOUT=30000 @AT@ 1427 @LENGTH@ 20
------UPD NumberLiteral@@10000 @TO@ 30000 @AT@ 1442 @LENGTH@ 5


INS IfStatement@@if (entry != null) {  if (instance == entry.replacedInstance) {    entry.replacedInstance=null;  } else   if (entry.replacedInstance == null) {    cache.remove(instance.getPrimaryKey());  }} @TO@ MethodDeclaration@@public, void, MethodName:discard, final EntityBeanComponentInstance instance,  @AT@ 5302 @LENGTH@ 461
---INS InfixExpression@@entry != null @TO@ IfStatement@@if (entry != null) {  if (instance == entry.replacedInstance) {    entry.replacedInstance=null;  } else   if (entry.replacedInstance == null) {    cache.remove(instance.getPrimaryKey());  }} @AT@ 5306 @LENGTH@ 13
------INS SimpleName@@entry @TO@ InfixExpression@@entry != null @AT@ 5306 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@entry != null @AT@ 5311 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@entry != null @AT@ 5315 @LENGTH@ 4
---INS Block@@ThenBody:{  if (instance == entry.replacedInstance) {    entry.replacedInstance=null;  } else   if (entry.replacedInstance == null) {    cache.remove(instance.getPrimaryKey());  }} @TO@ IfStatement@@if (entry != null) {  if (instance == entry.replacedInstance) {    entry.replacedInstance=null;  } else   if (entry.replacedInstance == null) {    cache.remove(instance.getPrimaryKey());  }} @AT@ 5321 @LENGTH@ 442
------MOV IfStatement@@if (instance == entry.replacedInstance) {  entry.replacedInstance=null;} else if (entry.replacedInstance == null) {  cache.remove(instance.getPrimaryKey());} @TO@ Block@@ThenBody:{  if (instance == entry.replacedInstance) {    entry.replacedInstance=null;  } else   if (entry.replacedInstance == null) {    cache.remove(instance.getPrimaryKey());  }} @AT@ 5286 @LENGTH@ 389


UPD ExpressionStatement@@MethodInvocation:archive.addClasses(OSGiTestSupport.class,Echo.class,TargetBundleActivator.class) @TO@ MethodInvocation:archive.addClasses(HttpTestSupport.class,Echo.class,TargetBundleActivator.class) @AT@ 2734 @LENGTH@ 83
---UPD MethodInvocation@@archive.addClasses(OSGiTestSupport.class,Echo.class,TargetBundleActivator.class) @TO@ archive.addClasses(HttpTestSupport.class,Echo.class,TargetBundleActivator.class) @AT@ 2734 @LENGTH@ 82
------UPD SimpleName@@MethodName:addClasses:[OSGiTestSupport.class, Echo.class, TargetBundleActivator.class] @TO@ MethodName:addClasses:[HttpTestSupport.class, Echo.class, TargetBundleActivator.class] @AT@ 2742 @LENGTH@ 74
---------UPD TypeLiteral@@OSGiTestSupport.class @TO@ HttpTestSupport.class @AT@ 2753 @LENGTH@ 21


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build()] @AT@ 1042 @LENGTH@ 462
---UPD VariableDeclarationFragment@@NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @TO@ NAME=new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @AT@ 1091 @LENGTH@ 412
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(true).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @TO@ new SimpleAttributeDefinitionBuilder(CommonAttributes.NAME,ModelType.STRING,false).setXmlName(Attribute.NAME.getLocalName()).setAllowExpression(false).setValidator(new StringLengthValidator(1)).setDefaultValue(new ModelNode().set(DeploymentScannerExtension.DEFAULT_SCANNER_NAME)).build() @AT@ 1110 @LENGTH@ 393
---------UPD MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodName:setAllowExpression:[false] @AT@ 1110 @LENGTH@ 193
------------UPD BooleanLiteral@@true @TO@ false @AT@ 1298 @LENGTH@ 4


UPD ThrowStatement@@MethodInvocation:MESSAGES.deploymentUnitNotFound(absolutePath,puName,current) @TO@ MethodInvocation:MESSAGES.persistenceUnitNotFound(absolutePath,puName,current) @AT@ 9341 @LENGTH@ 69
---UPD MethodInvocation@@MESSAGES.deploymentUnitNotFound(absolutePath,puName,current) @TO@ MESSAGES.persistenceUnitNotFound(absolutePath,puName,current) @AT@ 9347 @LENGTH@ 62
------UPD SimpleName@@MethodName:deploymentUnitNotFound:[absolutePath, puName, current] @TO@ MethodName:persistenceUnitNotFound:[absolutePath, puName, current] @AT@ 9356 @LENGTH@ 53


INS FieldDeclaration@@public, static, final, int, [PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 13991 @LENGTH@ 77
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00] @AT@ 13991 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00] @AT@ 13998 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00] @AT@ 14005 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00] @AT@ 14011 @LENGTH@ 3
---INS VariableDeclarationFragment@@PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00 @TO@ FieldDeclaration@@public, static, final, int, [PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00] @AT@ 14015 @LENGTH@ 52
------INS SimpleName@@PARSE_WEB_INITIALIZE_IN_ORDER @TO@ VariableDeclarationFragment@@PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00 @AT@ 14015 @LENGTH@ 29
------INS NumberLiteral@@0x3C00 @TO@ VariableDeclarationFragment@@PARSE_WEB_INITIALIZE_IN_ORDER=0x3C00 @AT@ 14061 @LENGTH@ 6


UPD IfStatement@@if (!tracking) {  String version=zooKeeper.getStringData(ZkPath.CONFIG_CONTAINER.getPath(name));  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }  if (!this.version.equals(version)) {    this.version=version;    node=ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,name);    track(node);  }  final Set<String> pids=getPids();  List<Configuration> configs=asList(getConfigAdmin().listConfigurations("(" + FABRIC_ZOOKEEPER_PID + "=*)"));  for (  String pid : pids) {    Dictionary c=load(pid);    String p[]=parsePid(pid);    Configuration config=getConfiguration(pid,p[0],p[1]);    configs.remove(config);    Dictionary props=config.getProperties();    Hashtable old=props != null ? new Hashtable() : null;    if (old != null) {      for (Enumeration e=props.keys(); e.hasMoreElements(); ) {        Object key=e.nextElement();        Object val=props.get(key);        old.put(key,val);      }      old.remove(FABRIC_ZOOKEEPER_PID);      old.remove(org.osgi.framework.Constants.SERVICE_PID);      old.remove(ConfigurationAdmin.SERVICE_FACTORYPID);    }    if (!c.equals(old)) {      LOGGER.info("Updating configuration {}",config.getPid());      c.put(FABRIC_ZOOKEEPER_PID,pid);      if (config.getBundleLocation() != null) {        config.setBundleLocation(null);      }      config.update(c);    } else {      LOGGER.info("Ignoring configuration {} (no changes)",config.getPid());    }  }  for (  Configuration config : configs) {    LOGGER.info("Deleting configuration {}",config.getPid());    config.delete();  }} @TO@ if (!tracking) {  String version=zooKeeper.getStringData(ZkPath.CONFIG_CONTAINER.getPath(name));  if (zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null) {    String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));    resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));    if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {      zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");    }  }  if (!this.version.equals(version)) {    this.version=version;    node=ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,name);    track(node);  }  final Set<String> pids=getPids();  List<Configuration> configs=asList(getConfigAdmin().listConfigurations("(" + FABRIC_ZOOKEEPER_PID + "=*)"));  for (  String pid : pids) {    Dictionary c=load(pid);    String p[]=parsePid(pid);    Configuration config=getConfiguration(pid,p[0],p[1]);    configs.remove(config);    Dictionary props=config.getProperties();    Hashtable old=props != null ? new Hashtable() : null;    if (old != null) {      for (Enumeration e=props.keys(); e.hasMoreElements(); ) {        Object key=e.nextElement();        Object val=props.get(key);        old.put(key,val);      }      old.remove(FABRIC_ZOOKEEPER_PID);      old.remove(org.osgi.framework.Constants.SERVICE_PID);      old.remove(ConfigurationAdmin.SERVICE_FACTORYPID);    }    if (!c.equals(old)) {      LOGGER.info("Updating configuration {}",config.getPid());      c.put(FABRIC_ZOOKEEPER_PID,pid);      if (config.getBundleLocation() != null) {        config.setBundleLocation(null);      }      config.update(c);    } else {      LOGGER.info("Ignoring configuration {} (no changes)",config.getPid());    }  }  for (  Configuration config : configs) {    LOGGER.info("Deleting configuration {}",config.getPid());    config.delete();  }} @AT@ 10330 @LENGTH@ 2643
---UPD Block@@ThenBody:{  String version=zooKeeper.getStringData(ZkPath.CONFIG_CONTAINER.getPath(name));  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }  if (!this.version.equals(version)) {    this.version=version;    node=ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,name);    track(node);  }  final Set<String> pids=getPids();  List<Configuration> configs=asList(getConfigAdmin().listConfigurations("(" + FABRIC_ZOOKEEPER_PID + "=*)"));  for (  String pid : pids) {    Dictionary c=load(pid);    String p[]=parsePid(pid);    Configuration config=getConfiguration(pid,p[0],p[1]);    configs.remove(config);    Dictionary props=config.getProperties();    Hashtable old=props != null ? new Hashtable() : null;    if (old != null) {      for (Enumeration e=props.keys(); e.hasMoreElements(); ) {        Object key=e.nextElement();        Object val=props.get(key);        old.put(key,val);      }      old.remove(FABRIC_ZOOKEEPER_PID);      old.remove(org.osgi.framework.Constants.SERVICE_PID);      old.remove(ConfigurationAdmin.SERVICE_FACTORYPID);    }    if (!c.equals(old)) {      LOGGER.info("Updating configuration {}",config.getPid());      c.put(FABRIC_ZOOKEEPER_PID,pid);      if (config.getBundleLocation() != null) {        config.setBundleLocation(null);      }      config.update(c);    } else {      LOGGER.info("Ignoring configuration {} (no changes)",config.getPid());    }  }  for (  Configuration config : configs) {    LOGGER.info("Deleting configuration {}",config.getPid());    config.delete();  }} @TO@ ThenBody:{  String version=zooKeeper.getStringData(ZkPath.CONFIG_CONTAINER.getPath(name));  if (zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null) {    String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));    resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));    if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {      zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");    }  }  if (!this.version.equals(version)) {    this.version=version;    node=ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,name);    track(node);  }  final Set<String> pids=getPids();  List<Configuration> configs=asList(getConfigAdmin().listConfigurations("(" + FABRIC_ZOOKEEPER_PID + "=*)"));  for (  String pid : pids) {    Dictionary c=load(pid);    String p[]=parsePid(pid);    Configuration config=getConfiguration(pid,p[0],p[1]);    configs.remove(config);    Dictionary props=config.getProperties();    Hashtable old=props != null ? new Hashtable() : null;    if (old != null) {      for (Enumeration e=props.keys(); e.hasMoreElements(); ) {        Object key=e.nextElement();        Object val=props.get(key);        old.put(key,val);      }      old.remove(FABRIC_ZOOKEEPER_PID);      old.remove(org.osgi.framework.Constants.SERVICE_PID);      old.remove(ConfigurationAdmin.SERVICE_FACTORYPID);    }    if (!c.equals(old)) {      LOGGER.info("Updating configuration {}",config.getPid());      c.put(FABRIC_ZOOKEEPER_PID,pid);      if (config.getBundleLocation() != null) {        config.setBundleLocation(null);      }      config.update(c);    } else {      LOGGER.info("Ignoring configuration {} (no changes)",config.getPid());    }  }  for (  Configuration config : configs) {    LOGGER.info("Deleting configuration {}",config.getPid());    config.delete();  }} @AT@ 10345 @LENGTH@ 2628
------INS IfStatement@@if (zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null) {  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }} @TO@ Block@@ThenBody:{  String version=zooKeeper.getStringData(ZkPath.CONFIG_CONTAINER.getPath(name));  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }  if (!this.version.equals(version)) {    this.version=version;    node=ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,name);    track(node);  }  final Set<String> pids=getPids();  List<Configuration> configs=asList(getConfigAdmin().listConfigurations("(" + FABRIC_ZOOKEEPER_PID + "=*)"));  for (  String pid : pids) {    Dictionary c=load(pid);    String p[]=parsePid(pid);    Configuration config=getConfiguration(pid,p[0],p[1]);    configs.remove(config);    Dictionary props=config.getProperties();    Hashtable old=props != null ? new Hashtable() : null;    if (old != null) {      for (Enumeration e=props.keys(); e.hasMoreElements(); ) {        Object key=e.nextElement();        Object val=props.get(key);        old.put(key,val);      }      old.remove(FABRIC_ZOOKEEPER_PID);      old.remove(org.osgi.framework.Constants.SERVICE_PID);      old.remove(ConfigurationAdmin.SERVICE_FACTORYPID);    }    if (!c.equals(old)) {      LOGGER.info("Updating configuration {}",config.getPid());      c.put(FABRIC_ZOOKEEPER_PID,pid);      if (config.getBundleLocation() != null) {        config.setBundleLocation(null);      }      config.update(c);    } else {      LOGGER.info("Ignoring configuration {} (no changes)",config.getPid());    }  }  for (  Configuration config : configs) {    LOGGER.info("Deleting configuration {}",config.getPid());    config.delete();  }} @AT@ 10461 @LENGTH@ 545
---------INS InfixExpression@@zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null @TO@ IfStatement@@if (zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null) {  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }} @AT@ 10465 @LENGTH@ 59
------------INS MethodInvocation@@zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) @TO@ InfixExpression@@zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null @AT@ 10465 @LENGTH@ 51
---------------INS SimpleName@@Name:zooKeeper @TO@ MethodInvocation@@zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) @AT@ 10465 @LENGTH@ 9
---------------INS SimpleName@@MethodName:exists:[ZkPath.CONTAINER_IP.getPath(name)] @TO@ MethodInvocation@@zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) @AT@ 10475 @LENGTH@ 41
------------------INS MethodInvocation@@ZkPath.CONTAINER_IP.getPath(name) @TO@ SimpleName@@MethodName:exists:[ZkPath.CONTAINER_IP.getPath(name)] @AT@ 10482 @LENGTH@ 33
---------------------INS QualifiedName@@Name:ZkPath.CONTAINER_IP @TO@ MethodInvocation@@ZkPath.CONTAINER_IP.getPath(name) @AT@ 10482 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:getPath:[name] @TO@ MethodInvocation@@ZkPath.CONTAINER_IP.getPath(name) @AT@ 10502 @LENGTH@ 13
------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:getPath:[name] @AT@ 10510 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null @AT@ 10516 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null @AT@ 10520 @LENGTH@ 4
---------INS Block@@ThenBody:{  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }} @TO@ IfStatement@@if (zooKeeper.exists(ZkPath.CONTAINER_IP.getPath(name)) != null) {  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }} @AT@ 10526 @LENGTH@ 480
------------MOV VariableDeclarationStatement@@String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name)); @TO@ Block@@ThenBody:{  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }} @AT@ 10460 @LENGTH@ 86
------------MOV ExpressionStatement@@Assignment:resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name)) @TO@ Block@@ThenBody:{  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }} @AT@ 10563 @LENGTH@ 84
------------MOV IfStatement@@if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {  zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");} @TO@ Block@@ThenBody:{  String resolutionPointer=zooKeeper.getStringData(ZkPath.CONTAINER_IP.getPath(name));  resolutionPolicy=zooKeeper.getStringData(ZkPath.CONTAINER_RESOLVER.getPath(name));  if (resolutionPointer == null || !resolutionPointer.contains(resolutionPolicy)) {    zooKeeper.setData(ZkPath.CONTAINER_IP.getPath(name),"${zk:" + name + "/"+ resolutionPolicy+ "}");  }} @AT@ 10664 @LENGTH@ 213


INS IfStatement@@if (flag == null) {  throw EjbMessages.MESSAGES.noAsynchronousInvocationInProgress();} @TO@ MethodDeclaration@@public, boolean, MethodName:wasCancelCalled, IllegalStateException,  @AT@ 4631 @LENGTH@ 106
---INS InfixExpression@@flag == null @TO@ IfStatement@@if (flag == null) {  throw EjbMessages.MESSAGES.noAsynchronousInvocationInProgress();} @AT@ 4635 @LENGTH@ 12
------INS SimpleName@@flag @TO@ InfixExpression@@flag == null @AT@ 4635 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@flag == null @AT@ 4639 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@flag == null @AT@ 4643 @LENGTH@ 4
---INS Block@@ThenBody:{  throw EjbMessages.MESSAGES.noAsynchronousInvocationInProgress();} @TO@ IfStatement@@if (flag == null) {  throw EjbMessages.MESSAGES.noAsynchronousInvocationInProgress();} @AT@ 4649 @LENGTH@ 88
------INS ThrowStatement@@MethodInvocation:EjbMessages.MESSAGES.noAsynchronousInvocationInProgress() @TO@ Block@@ThenBody:{  throw EjbMessages.MESSAGES.noAsynchronousInvocationInProgress();} @AT@ 4663 @LENGTH@ 64
---------INS MethodInvocation@@EjbMessages.MESSAGES.noAsynchronousInvocationInProgress() @TO@ ThrowStatement@@MethodInvocation:EjbMessages.MESSAGES.noAsynchronousInvocationInProgress() @AT@ 4669 @LENGTH@ 57
------------INS QualifiedName@@Name:EjbMessages.MESSAGES @TO@ MethodInvocation@@EjbMessages.MESSAGES.noAsynchronousInvocationInProgress() @AT@ 4669 @LENGTH@ 20
------------INS SimpleName@@MethodName:noAsynchronousInvocationInProgress:[] @TO@ MethodInvocation@@EjbMessages.MESSAGES.noAsynchronousInvocationInProgress() @AT@ 4690 @LENGTH@ 36


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,false,false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build()] @TO@ public, static, final, SimpleAttributeDefinition, [DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_NONE).build()] @AT@ 3463 @LENGTH@ 712
---UPD VariableDeclarationFragment@@DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,false,false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @TO@ DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 3509 @LENGTH@ 665
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,false,false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_STATEFUL_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 3560 @LENGTH@ 614
---------UPD MethodInvocation@@MethodName:setValidator:[new LongRangeValidator(1,Integer.MAX_VALUE,false,false)] @TO@ MethodName:setValidator:[new LongRangeValidator(1,Integer.MAX_VALUE,true,true)] @AT@ 3560 @LENGTH@ 520
------------UPD ClassInstanceCreation@@LongRangeValidator[1, Integer.MAX_VALUE, false, false] @TO@ LongRangeValidator[1, Integer.MAX_VALUE, true, true] @AT@ 4021 @LENGTH@ 58
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 4066 @LENGTH@ 5
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 4073 @LENGTH@ 5


UPD IfStatement@@if (indexDirectory != null) {  indexSearcher=new IndexSearcher(new NIOFSDirectory(indexDirectory),true);} else {  indexSearcher=new IndexSearcher(new NIOFSDirectory(new File("./indexDirectory")),true);} @TO@ if (indexDirectory != null) {  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true));} else {  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true));} @AT@ 1842 @LENGTH@ 252
---UPD Block@@ThenBody:{  indexSearcher=new IndexSearcher(new NIOFSDirectory(indexDirectory),true);} @TO@ ThenBody:{  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true));} @AT@ 1870 @LENGTH@ 103
------UPD ExpressionStatement@@Assignment:indexSearcher=new IndexSearcher(new NIOFSDirectory(indexDirectory),true) @TO@ Assignment:indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true)) @AT@ 1884 @LENGTH@ 76
---------UPD Assignment@@indexSearcher=new IndexSearcher(new NIOFSDirectory(indexDirectory),true) @TO@ indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true)) @AT@ 1884 @LENGTH@ 75
------------UPD ClassInstanceCreation@@IndexSearcher[new NIOFSDirectory(indexDirectory), true] @TO@ IndexSearcher[IndexReader.open(new NIOFSDirectory(indexDirectory),true)] @AT@ 1900 @LENGTH@ 59
---------------DEL ClassInstanceCreation@@NIOFSDirectory[indexDirectory] @AT@ 1918 @LENGTH@ 34
---------------DEL BooleanLiteral@@true @AT@ 1954 @LENGTH@ 4
---------------INS MethodInvocation@@IndexReader.open(new NIOFSDirectory(indexDirectory),true) @TO@ ClassInstanceCreation@@IndexSearcher[new NIOFSDirectory(indexDirectory), true] @AT@ 1962 @LENGTH@ 58
------------------INS SimpleName@@Name:IndexReader @TO@ MethodInvocation@@IndexReader.open(new NIOFSDirectory(indexDirectory),true) @AT@ 1962 @LENGTH@ 11
------------------INS SimpleName@@MethodName:open:[new NIOFSDirectory(indexDirectory), true] @TO@ MethodInvocation@@IndexReader.open(new NIOFSDirectory(indexDirectory),true) @AT@ 1974 @LENGTH@ 46
---------------------INS ClassInstanceCreation@@NIOFSDirectory[indexDirectory] @TO@ SimpleName@@MethodName:open:[new NIOFSDirectory(indexDirectory), true] @AT@ 1979 @LENGTH@ 34
------------------------MOV New@@new @TO@ ClassInstanceCreation@@NIOFSDirectory[indexDirectory] @AT@ 1918 @LENGTH@ 3
------------------------MOV SimpleType@@NIOFSDirectory @TO@ ClassInstanceCreation@@NIOFSDirectory[indexDirectory] @AT@ 1922 @LENGTH@ 14
------------------------MOV SimpleName@@indexDirectory @TO@ ClassInstanceCreation@@NIOFSDirectory[indexDirectory] @AT@ 1937 @LENGTH@ 14
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:open:[new NIOFSDirectory(indexDirectory), true] @AT@ 2015 @LENGTH@ 4
---UPD Block@@ElseBody:{  indexSearcher=new IndexSearcher(new NIOFSDirectory(new File("./indexDirectory")),true);} @TO@ ElseBody:{  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true));} @AT@ 1979 @LENGTH@ 115
------UPD ExpressionStatement@@Assignment:indexSearcher=new IndexSearcher(new NIOFSDirectory(new File("./indexDirectory")),true) @TO@ Assignment:indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true)) @AT@ 1993 @LENGTH@ 90
---------UPD Assignment@@indexSearcher=new IndexSearcher(new NIOFSDirectory(new File("./indexDirectory")),true) @TO@ indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true)) @AT@ 1993 @LENGTH@ 89
------------UPD ClassInstanceCreation@@IndexSearcher[new NIOFSDirectory(new File("./indexDirectory")), true] @TO@ IndexSearcher[IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true)] @AT@ 2009 @LENGTH@ 73
---------------DEL BooleanLiteral@@true @AT@ 2077 @LENGTH@ 4
---------------INS MethodInvocation@@IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true) @TO@ ClassInstanceCreation@@IndexSearcher[new NIOFSDirectory(new File("./indexDirectory")), true] @AT@ 2086 @LENGTH@ 72
------------------INS SimpleName@@Name:IndexReader @TO@ MethodInvocation@@IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true) @AT@ 2086 @LENGTH@ 11
------------------INS SimpleName@@MethodName:open:[new NIOFSDirectory(new File("./indexDirectory")), true] @TO@ MethodInvocation@@IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true) @AT@ 2098 @LENGTH@ 60
---------------------MOV ClassInstanceCreation@@NIOFSDirectory[new File("./indexDirectory")] @TO@ SimpleName@@MethodName:open:[new NIOFSDirectory(new File("./indexDirectory")), true] @AT@ 2027 @LENGTH@ 48
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:open:[new NIOFSDirectory(new File("./indexDirectory")), true] @AT@ 2153 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testLS, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]FsShellTest,  @AT@ 11366 @LENGTH@ 380
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11366 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11373 @LENGTH@ 4
---INS SimpleName@@MethodName:testLS @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11378 @LENGTH@ 6
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11394 @LENGTH@ 9
---INS VariableDeclarationStatement@@String fName1=UUID.randomUUID() + ".txt"; @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11408 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String fName1=UUID.randomUUID() + ".txt"; @AT@ 11408 @LENGTH@ 6
------INS VariableDeclarationFragment@@fName1=UUID.randomUUID() + ".txt" @TO@ VariableDeclarationStatement@@String fName1=UUID.randomUUID() + ".txt"; @AT@ 11415 @LENGTH@ 35
---------INS SimpleName@@fName1 @TO@ VariableDeclarationFragment@@fName1=UUID.randomUUID() + ".txt" @AT@ 11415 @LENGTH@ 6
---------INS InfixExpression@@UUID.randomUUID() + ".txt" @TO@ VariableDeclarationFragment@@fName1=UUID.randomUUID() + ".txt" @AT@ 11424 @LENGTH@ 26
------------INS MethodInvocation@@UUID.randomUUID() @TO@ InfixExpression@@UUID.randomUUID() + ".txt" @AT@ 11424 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 11424 @LENGTH@ 4
---------------INS SimpleName@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 11429 @LENGTH@ 12
------------INS Operator@@+ @TO@ InfixExpression@@UUID.randomUUID() + ".txt" @AT@ 11441 @LENGTH@ 1
------------INS StringLiteral@@".txt" @TO@ InfixExpression@@UUID.randomUUID() + ".txt" @AT@ 11444 @LENGTH@ 6
---INS VariableDeclarationStatement@@String name1="local/merge/" + fName1; @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11454 @LENGTH@ 39
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name1="local/merge/" + fName1; @AT@ 11454 @LENGTH@ 6
------INS VariableDeclarationFragment@@name1="local/merge/" + fName1 @TO@ VariableDeclarationStatement@@String name1="local/merge/" + fName1; @AT@ 11461 @LENGTH@ 31
---------INS SimpleName@@name1 @TO@ VariableDeclarationFragment@@name1="local/merge/" + fName1 @AT@ 11461 @LENGTH@ 5
---------INS InfixExpression@@"local/merge/" + fName1 @TO@ VariableDeclarationFragment@@name1="local/merge/" + fName1 @AT@ 11469 @LENGTH@ 23
------------INS StringLiteral@@"local/merge/" @TO@ InfixExpression@@"local/merge/" + fName1 @AT@ 11469 @LENGTH@ 14
------------INS Operator@@+ @TO@ InfixExpression@@"local/merge/" + fName1 @AT@ 11483 @LENGTH@ 1
------------INS SimpleName@@fName1 @TO@ InfixExpression@@"local/merge/" + fName1 @AT@ 11486 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,name1) @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11496 @LENGTH@ 32
------INS MethodInvocation@@TestUtils.writeToFS(cfg,name1) @TO@ ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,name1) @AT@ 11496 @LENGTH@ 31
---------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.writeToFS(cfg,name1) @AT@ 11496 @LENGTH@ 9
---------INS SimpleName@@MethodName:writeToFS:[cfg, name1] @TO@ MethodInvocation@@TestUtils.writeToFS(cfg,name1) @AT@ 11506 @LENGTH@ 21
------------INS SimpleName@@cfg @TO@ SimpleName@@MethodName:writeToFS:[cfg, name1] @AT@ 11516 @LENGTH@ 3
------------INS SimpleName@@name1 @TO@ SimpleName@@MethodName:writeToFS:[cfg, name1] @AT@ 11521 @LENGTH@ 5
---INS VariableDeclarationStatement@@Collection<FileStatus> ls=shell.ls("."); @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11532 @LENGTH@ 42
------INS ParameterizedType@@Collection<FileStatus> @TO@ VariableDeclarationStatement@@Collection<FileStatus> ls=shell.ls("."); @AT@ 11532 @LENGTH@ 22
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<FileStatus> @AT@ 11532 @LENGTH@ 10
---------INS SimpleType@@FileStatus @TO@ ParameterizedType@@Collection<FileStatus> @AT@ 11543 @LENGTH@ 10
------INS VariableDeclarationFragment@@ls=shell.ls(".") @TO@ VariableDeclarationStatement@@Collection<FileStatus> ls=shell.ls("."); @AT@ 11555 @LENGTH@ 18
---------INS SimpleName@@ls @TO@ VariableDeclarationFragment@@ls=shell.ls(".") @AT@ 11555 @LENGTH@ 2
---------INS MethodInvocation@@shell.ls(".") @TO@ VariableDeclarationFragment@@ls=shell.ls(".") @AT@ 11560 @LENGTH@ 13
------------INS SimpleName@@Name:shell @TO@ MethodInvocation@@shell.ls(".") @AT@ 11560 @LENGTH@ 5
------------INS SimpleName@@MethodName:ls:["."] @TO@ MethodInvocation@@shell.ls(".") @AT@ 11566 @LENGTH@ 7
---------------INS StringLiteral@@"." @TO@ SimpleName@@MethodName:ls:["."] @AT@ 11569 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertTrue(ls.size() >= 1) @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11577 @LENGTH@ 27
------INS MethodInvocation@@assertTrue(ls.size() >= 1) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(ls.size() >= 1) @AT@ 11577 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertTrue:[ls.size() >= 1] @TO@ MethodInvocation@@assertTrue(ls.size() >= 1) @AT@ 11577 @LENGTH@ 26
------------INS InfixExpression@@ls.size() >= 1 @TO@ SimpleName@@MethodName:assertTrue:[ls.size() >= 1] @AT@ 11588 @LENGTH@ 14
---------------INS MethodInvocation@@ls.size() @TO@ InfixExpression@@ls.size() >= 1 @AT@ 11588 @LENGTH@ 9
------------------INS SimpleName@@Name:ls @TO@ MethodInvocation@@ls.size() @AT@ 11588 @LENGTH@ 2
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@ls.size() @AT@ 11591 @LENGTH@ 6
---------------INS Operator@@>= @TO@ InfixExpression@@ls.size() >= 1 @AT@ 11597 @LENGTH@ 2
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@ls.size() >= 1 @AT@ 11601 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertTrue(ls.toString().contains("drwx")) @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11607 @LENGTH@ 43
------INS MethodInvocation@@assertTrue(ls.toString().contains("drwx")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(ls.toString().contains("drwx")) @AT@ 11607 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertTrue:[ls.toString().contains("drwx")] @TO@ MethodInvocation@@assertTrue(ls.toString().contains("drwx")) @AT@ 11607 @LENGTH@ 42
------------INS MethodInvocation@@ls.toString().contains("drwx") @TO@ SimpleName@@MethodName:assertTrue:[ls.toString().contains("drwx")] @AT@ 11618 @LENGTH@ 30
---------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@ls.toString().contains("drwx") @AT@ 11618 @LENGTH@ 13
---------------INS SimpleName@@Name:ls @TO@ MethodInvocation@@ls.toString().contains("drwx") @AT@ 11618 @LENGTH@ 2
---------------INS SimpleName@@MethodName:contains:["drwx"] @TO@ MethodInvocation@@ls.toString().contains("drwx") @AT@ 11632 @LENGTH@ 16
------------------INS StringLiteral@@"drwx" @TO@ SimpleName@@MethodName:contains:["drwx"] @AT@ 11641 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertFalse(ls.toString().contains(name1)) @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11653 @LENGTH@ 43
------INS MethodInvocation@@assertFalse(ls.toString().contains(name1)) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(ls.toString().contains(name1)) @AT@ 11653 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertFalse:[ls.toString().contains(name1)] @TO@ MethodInvocation@@assertFalse(ls.toString().contains(name1)) @AT@ 11653 @LENGTH@ 42
------------INS MethodInvocation@@ls.toString().contains(name1) @TO@ SimpleName@@MethodName:assertFalse:[ls.toString().contains(name1)] @AT@ 11665 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@ls.toString().contains(name1) @AT@ 11665 @LENGTH@ 13
---------------INS SimpleName@@Name:ls @TO@ MethodInvocation@@ls.toString().contains(name1) @AT@ 11665 @LENGTH@ 2
---------------INS SimpleName@@MethodName:contains:[name1] @TO@ MethodInvocation@@ls.toString().contains(name1) @AT@ 11679 @LENGTH@ 15
------------------INS SimpleName@@name1 @TO@ SimpleName@@MethodName:contains:[name1] @AT@ 11688 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertTrue(shell.ls(name1).contains(name1)) @TO@ MethodDeclaration@@public, void, MethodName:testLS, Exception,  @AT@ 11699 @LENGTH@ 44
------INS MethodInvocation@@assertTrue(shell.ls(name1).contains(name1)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(shell.ls(name1).contains(name1)) @AT@ 11699 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertTrue:[shell.ls(name1).contains(name1)] @TO@ MethodInvocation@@assertTrue(shell.ls(name1).contains(name1)) @AT@ 11699 @LENGTH@ 43
------------INS MethodInvocation@@shell.ls(name1).contains(name1) @TO@ SimpleName@@MethodName:assertTrue:[shell.ls(name1).contains(name1)] @AT@ 11710 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:ls:[name1] @TO@ MethodInvocation@@shell.ls(name1).contains(name1) @AT@ 11710 @LENGTH@ 15
------------------INS SimpleName@@name1 @TO@ MethodInvocation@@MethodName:ls:[name1] @AT@ 11719 @LENGTH@ 5
---------------INS SimpleName@@Name:shell @TO@ MethodInvocation@@shell.ls(name1).contains(name1) @AT@ 11710 @LENGTH@ 5
---------------INS SimpleName@@MethodName:contains:[name1] @TO@ MethodInvocation@@shell.ls(name1).contains(name1) @AT@ 11726 @LENGTH@ 15
------------------INS SimpleName@@name1 @TO@ SimpleName@@MethodName:contains:[name1] @AT@ 11735 @LENGTH@ 5


UPD VariableDeclarationStatement@@List list=DomConverter.toList(document.getElementsByTagName("foo")); @TO@ List<?> list=DomConverter.toList(document.getElementsByTagName("foo")); @AT@ 2843 @LENGTH@ 70
---INS ParameterizedType@@List<?> @TO@ VariableDeclarationStatement@@List list=DomConverter.toList(document.getElementsByTagName("foo")); @AT@ 2843 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 2843 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 2848 @LENGTH@ 1
---DEL SimpleType@@List @AT@ 2843 @LENGTH@ 4


INS MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]DomainControllerLogger, [BasicLogger] @AT@ 3219 @LENGTH@ 46
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @AT@ 3214 @LENGTH@ 4
---INS SimpleName@@MethodName:warnIgnoringProfileInclude @TO@ MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @AT@ 3219 @LENGTH@ 26
---INS SingleVariableDeclaration@@Location location @TO@ MethodDeclaration@@void, MethodName:warnIgnoringProfileInclude, Location location,  @AT@ 3246 @LENGTH@ 17
------INS SimpleType@@Location @TO@ SingleVariableDeclaration@@Location location @AT@ 3246 @LENGTH@ 8
------INS SimpleName@@location @TO@ SingleVariableDeclaration@@Location location @AT@ 3255 @LENGTH@ 8


UPD Block@@ThenBody:{  final OperationRequestHeader rolloutPlan=ctx.getConfig().getRolloutPlan(planRef);  if (rolloutPlan == null) {    throw new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.");  }  rolloutPlan.addTo(ctx,headers);  return;} @TO@ ThenBody:{  ModelNode rolloutPlan=Util.getRolloutPlan(ctx.getModelControllerClient(),planRef);  headers.set(rolloutPlan);  return;} @AT@ 4764 @LENGTH@ 336
---UPD VariableDeclarationStatement@@final OperationRequestHeader rolloutPlan=ctx.getConfig().getRolloutPlan(planRef); @TO@ ModelNode rolloutPlan=Util.getRolloutPlan(ctx.getModelControllerClient(),planRef); @AT@ 4778 @LENGTH@ 83
------DEL Modifier@@final @AT@ 4778 @LENGTH@ 5
------UPD SimpleType@@OperationRequestHeader @TO@ ModelNode @AT@ 4784 @LENGTH@ 22
------UPD VariableDeclarationFragment@@rolloutPlan=ctx.getConfig().getRolloutPlan(planRef) @TO@ rolloutPlan=Util.getRolloutPlan(ctx.getModelControllerClient(),planRef) @AT@ 4807 @LENGTH@ 53
---------UPD MethodInvocation@@ctx.getConfig().getRolloutPlan(planRef) @TO@ Util.getRolloutPlan(ctx.getModelControllerClient(),planRef) @AT@ 4821 @LENGTH@ 39
------------DEL MethodInvocation@@MethodName:getConfig:[] @AT@ 4821 @LENGTH@ 15
------------UPD SimpleName@@Name:ctx @TO@ Name:Util @AT@ 4821 @LENGTH@ 3
------------UPD SimpleName@@MethodName:getRolloutPlan:[planRef] @TO@ MethodName:getRolloutPlan:[ctx.getModelControllerClient(), planRef] @AT@ 4837 @LENGTH@ 23
---------------INS MethodInvocation@@ctx.getModelControllerClient() @TO@ SimpleName@@MethodName:getRolloutPlan:[planRef] @AT@ 5132 @LENGTH@ 30
------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 5132 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getModelControllerClient:[] @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 5136 @LENGTH@ 26
---DEL IfStatement@@if (rolloutPlan == null) {  throw new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.");} @AT@ 4874 @LENGTH@ 151
------DEL InfixExpression@@rolloutPlan == null @AT@ 4877 @LENGTH@ 19
---------DEL SimpleName@@rolloutPlan @AT@ 4877 @LENGTH@ 11
---------DEL Operator@@== @AT@ 4888 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4892 @LENGTH@ 4
------DEL Block@@ThenBody:{  throw new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.");} @AT@ 4898 @LENGTH@ 127
---------DEL ThrowStatement@@ClassInstanceCreation:new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.") @AT@ 4916 @LENGTH@ 95
------------DEL ClassInstanceCreation@@CommandFormatException["Rollout plan with id '" + planRef + "' could not be found."] @AT@ 4922 @LENGTH@ 88
---------------DEL New@@new @AT@ 4922 @LENGTH@ 3
---------------DEL SimpleType@@CommandFormatException @AT@ 4926 @LENGTH@ 22
---------------DEL InfixExpression@@"Rollout plan with id '" + planRef + "' could not be found." @AT@ 4949 @LENGTH@ 60
------------------DEL StringLiteral@@"Rollout plan with id '" @AT@ 4949 @LENGTH@ 24
------------------DEL Operator@@+ @AT@ 4973 @LENGTH@ 1
------------------DEL SimpleName@@planRef @AT@ 4976 @LENGTH@ 7
------------------DEL StringLiteral@@"' could not be found." @AT@ 4986 @LENGTH@ 23
---UPD ExpressionStatement@@MethodInvocation:rolloutPlan.addTo(ctx,headers) @TO@ MethodInvocation:headers.set(rolloutPlan) @AT@ 5038 @LENGTH@ 32
------UPD MethodInvocation@@rolloutPlan.addTo(ctx,headers) @TO@ headers.set(rolloutPlan) @AT@ 5038 @LENGTH@ 31
---------UPD SimpleName@@Name:rolloutPlan @TO@ Name:headers @AT@ 5038 @LENGTH@ 11
---------UPD SimpleName@@MethodName:addTo:[ctx, headers] @TO@ MethodName:set:[rolloutPlan] @AT@ 5050 @LENGTH@ 19
------------UPD SimpleName@@ctx @TO@ rolloutPlan @AT@ 5056 @LENGTH@ 3
------------DEL SimpleName@@headers @AT@ 5061 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]JNDITestCase,  @AT@ 3250 @LENGTH@ 616
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3250 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3257 @LENGTH@ 4
---INS SimpleName@@MethodName:testInitialContextFactoryBuilderService @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3262 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3311 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:bundle.start() @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3331 @LENGTH@ 15
------INS MethodInvocation@@bundle.start() @TO@ ExpressionStatement@@MethodInvocation:bundle.start() @AT@ 3331 @LENGTH@ 14
---------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.start() @AT@ 3331 @LENGTH@ 6
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@bundle.start() @AT@ 3338 @LENGTH@ 7
---INS VariableDeclarationStatement@@BundleContext context=bundle.getBundleContext(); @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3355 @LENGTH@ 50
------INS SimpleType@@BundleContext @TO@ VariableDeclarationStatement@@BundleContext context=bundle.getBundleContext(); @AT@ 3355 @LENGTH@ 13
------INS VariableDeclarationFragment@@context=bundle.getBundleContext() @TO@ VariableDeclarationStatement@@BundleContext context=bundle.getBundleContext(); @AT@ 3369 @LENGTH@ 35
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=bundle.getBundleContext() @AT@ 3369 @LENGTH@ 7
---------INS MethodInvocation@@bundle.getBundleContext() @TO@ VariableDeclarationFragment@@context=bundle.getBundleContext() @AT@ 3379 @LENGTH@ 25
------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getBundleContext() @AT@ 3379 @LENGTH@ 6
------------INS SimpleName@@MethodName:getBundleContext:[] @TO@ MethodInvocation@@bundle.getBundleContext() @AT@ 3386 @LENGTH@ 18
---INS VariableDeclarationStatement@@ServiceReference ref=context.getServiceReference(InitialContextFactoryBuilder.class.getName()); @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3414 @LENGTH@ 97
------INS SimpleType@@ServiceReference @TO@ VariableDeclarationStatement@@ServiceReference ref=context.getServiceReference(InitialContextFactoryBuilder.class.getName()); @AT@ 3414 @LENGTH@ 16
------INS VariableDeclarationFragment@@ref=context.getServiceReference(InitialContextFactoryBuilder.class.getName()) @TO@ VariableDeclarationStatement@@ServiceReference ref=context.getServiceReference(InitialContextFactoryBuilder.class.getName()); @AT@ 3431 @LENGTH@ 79
---------INS SimpleName@@ref @TO@ VariableDeclarationFragment@@ref=context.getServiceReference(InitialContextFactoryBuilder.class.getName()) @AT@ 3431 @LENGTH@ 3
---------INS MethodInvocation@@context.getServiceReference(InitialContextFactoryBuilder.class.getName()) @TO@ VariableDeclarationFragment@@ref=context.getServiceReference(InitialContextFactoryBuilder.class.getName()) @AT@ 3437 @LENGTH@ 73
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceReference(InitialContextFactoryBuilder.class.getName()) @AT@ 3437 @LENGTH@ 7
------------INS SimpleName@@MethodName:getServiceReference:[InitialContextFactoryBuilder.class.getName()] @TO@ MethodInvocation@@context.getServiceReference(InitialContextFactoryBuilder.class.getName()) @AT@ 3445 @LENGTH@ 65
---------------INS MethodInvocation@@InitialContextFactoryBuilder.class.getName() @TO@ SimpleName@@MethodName:getServiceReference:[InitialContextFactoryBuilder.class.getName()] @AT@ 3465 @LENGTH@ 44
------------------INS TypeLiteral@@InitialContextFactoryBuilder.class @TO@ MethodInvocation@@InitialContextFactoryBuilder.class.getName() @AT@ 3465 @LENGTH@ 34
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@InitialContextFactoryBuilder.class.getName() @AT@ 3500 @LENGTH@ 9
---INS VariableDeclarationStatement@@InitialContextFactoryBuilder builder=(InitialContextFactoryBuilder)context.getService(ref); @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3520 @LENGTH@ 94
------INS SimpleType@@InitialContextFactoryBuilder @TO@ VariableDeclarationStatement@@InitialContextFactoryBuilder builder=(InitialContextFactoryBuilder)context.getService(ref); @AT@ 3520 @LENGTH@ 28
------INS VariableDeclarationFragment@@builder=(InitialContextFactoryBuilder)context.getService(ref) @TO@ VariableDeclarationStatement@@InitialContextFactoryBuilder builder=(InitialContextFactoryBuilder)context.getService(ref); @AT@ 3549 @LENGTH@ 64
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=(InitialContextFactoryBuilder)context.getService(ref) @AT@ 3549 @LENGTH@ 7
---------INS CastExpression@@(InitialContextFactoryBuilder)context.getService(ref) @TO@ VariableDeclarationFragment@@builder=(InitialContextFactoryBuilder)context.getService(ref) @AT@ 3559 @LENGTH@ 54
------------INS SimpleType@@InitialContextFactoryBuilder @TO@ CastExpression@@(InitialContextFactoryBuilder)context.getService(ref) @AT@ 3560 @LENGTH@ 28
------------INS MethodInvocation@@context.getService(ref) @TO@ CastExpression@@(InitialContextFactoryBuilder)context.getService(ref) @AT@ 3590 @LENGTH@ 23
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getService(ref) @AT@ 3590 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getService:[ref] @TO@ MethodInvocation@@context.getService(ref) @AT@ 3598 @LENGTH@ 15
------------------INS SimpleName@@ref @TO@ SimpleName@@MethodName:getService:[ref] @AT@ 3609 @LENGTH@ 3
---INS VariableDeclarationStatement@@InitialContextFactory factory=builder.createInitialContextFactory(null); @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3624 @LENGTH@ 74
------INS SimpleType@@InitialContextFactory @TO@ VariableDeclarationStatement@@InitialContextFactory factory=builder.createInitialContextFactory(null); @AT@ 3624 @LENGTH@ 21
------INS VariableDeclarationFragment@@factory=builder.createInitialContextFactory(null) @TO@ VariableDeclarationStatement@@InitialContextFactory factory=builder.createInitialContextFactory(null); @AT@ 3646 @LENGTH@ 51
---------INS SimpleName@@factory @TO@ VariableDeclarationFragment@@factory=builder.createInitialContextFactory(null) @AT@ 3646 @LENGTH@ 7
---------INS MethodInvocation@@builder.createInitialContextFactory(null) @TO@ VariableDeclarationFragment@@factory=builder.createInitialContextFactory(null) @AT@ 3656 @LENGTH@ 41
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.createInitialContextFactory(null) @AT@ 3656 @LENGTH@ 7
------------INS SimpleName@@MethodName:createInitialContextFactory:[null] @TO@ MethodInvocation@@builder.createInitialContextFactory(null) @AT@ 3664 @LENGTH@ 33
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createInitialContextFactory:[null] @AT@ 3692 @LENGTH@ 4
---INS VariableDeclarationStatement@@Context iniCtx=factory.getInitialContext(null); @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3707 @LENGTH@ 49
------INS SimpleType@@Context @TO@ VariableDeclarationStatement@@Context iniCtx=factory.getInitialContext(null); @AT@ 3707 @LENGTH@ 7
------INS VariableDeclarationFragment@@iniCtx=factory.getInitialContext(null) @TO@ VariableDeclarationStatement@@Context iniCtx=factory.getInitialContext(null); @AT@ 3715 @LENGTH@ 40
---------INS SimpleName@@iniCtx @TO@ VariableDeclarationFragment@@iniCtx=factory.getInitialContext(null) @AT@ 3715 @LENGTH@ 6
---------INS MethodInvocation@@factory.getInitialContext(null) @TO@ VariableDeclarationFragment@@iniCtx=factory.getInitialContext(null) @AT@ 3724 @LENGTH@ 31
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getInitialContext(null) @AT@ 3724 @LENGTH@ 7
------------INS SimpleName@@MethodName:getInitialContext:[null] @TO@ MethodInvocation@@factory.getInitialContext(null) @AT@ 3732 @LENGTH@ 23
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getInitialContext:[null] @AT@ 3750 @LENGTH@ 4
---INS VariableDeclarationStatement@@Object lookup=iniCtx.lookup("java:jboss"); @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3766 @LENGTH@ 44
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object lookup=iniCtx.lookup("java:jboss"); @AT@ 3766 @LENGTH@ 6
------INS VariableDeclarationFragment@@lookup=iniCtx.lookup("java:jboss") @TO@ VariableDeclarationStatement@@Object lookup=iniCtx.lookup("java:jboss"); @AT@ 3773 @LENGTH@ 36
---------INS SimpleName@@lookup @TO@ VariableDeclarationFragment@@lookup=iniCtx.lookup("java:jboss") @AT@ 3773 @LENGTH@ 6
---------INS MethodInvocation@@iniCtx.lookup("java:jboss") @TO@ VariableDeclarationFragment@@lookup=iniCtx.lookup("java:jboss") @AT@ 3782 @LENGTH@ 27
------------INS SimpleName@@Name:iniCtx @TO@ MethodInvocation@@iniCtx.lookup("java:jboss") @AT@ 3782 @LENGTH@ 6
------------INS SimpleName@@MethodName:lookup:["java:jboss"] @TO@ MethodInvocation@@iniCtx.lookup("java:jboss") @AT@ 3789 @LENGTH@ 20
---------------INS StringLiteral@@"java:jboss" @TO@ SimpleName@@MethodName:lookup:["java:jboss"] @AT@ 3796 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNotNull("Lookup not null",lookup) @TO@ MethodDeclaration@@public, void, MethodName:testInitialContextFactoryBuilderService, Exception,  @AT@ 3819 @LENGTH@ 41
------INS MethodInvocation@@assertNotNull("Lookup not null",lookup) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("Lookup not null",lookup) @AT@ 3819 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertNotNull:["Lookup not null", lookup] @TO@ MethodInvocation@@assertNotNull("Lookup not null",lookup) @AT@ 3819 @LENGTH@ 40
------------INS StringLiteral@@"Lookup not null" @TO@ SimpleName@@MethodName:assertNotNull:["Lookup not null", lookup] @AT@ 3833 @LENGTH@ 17
------------INS SimpleName@@lookup @TO@ SimpleName@@MethodName:assertNotNull:["Lookup not null", lookup] @AT@ 3852 @LENGTH@ 6


UPD FieldDeclaration@@SimpleAttributeDefinition, [PAGE_SIZE_BYTES_NODE_NAME=new SimpleAttributeDefinition("page-size-bytes",new ModelNode(AddressSettings.DEFAULT_PAGE_SIZE),ModelType.LONG,true)] @TO@ SimpleAttributeDefinition, [PAGE_SIZE_BYTES=new SimpleAttributeDefinitionBuilder("page-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)).setAllowNull(true).build()] @AT@ 28004 @LENGTH@ 187
---UPD VariableDeclarationFragment@@PAGE_SIZE_BYTES_NODE_NAME=new SimpleAttributeDefinition("page-size-bytes",new ModelNode(AddressSettings.DEFAULT_PAGE_SIZE),ModelType.LONG,true) @TO@ PAGE_SIZE_BYTES=new SimpleAttributeDefinitionBuilder("page-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)).setAllowNull(true).build() @AT@ 28030 @LENGTH@ 160
------UPD SimpleName@@PAGE_SIZE_BYTES_NODE_NAME @TO@ PAGE_SIZE_BYTES @AT@ 28030 @LENGTH@ 25
------DEL ClassInstanceCreation@@SimpleAttributeDefinition["page-size-bytes", new ModelNode(AddressSettings.DEFAULT_PAGE_SIZE), ModelType.LONG, true] @AT@ 28058 @LENGTH@ 132
---------DEL ClassInstanceCreation@@ModelNode[AddressSettings.DEFAULT_PAGE_SIZE] @AT@ 28119 @LENGTH@ 48
------------DEL QualifiedName@@AddressSettings.DEFAULT_PAGE_SIZE @AT@ 28133 @LENGTH@ 33
---------DEL QualifiedName@@ModelType.LONG @AT@ 28169 @LENGTH@ 14
------------DEL SimpleName@@ModelType @AT@ 28169 @LENGTH@ 9
------------DEL SimpleName@@LONG @AT@ 28179 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 28185 @LENGTH@ 4
------INS MethodInvocation@@new SimpleAttributeDefinitionBuilder("page-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)).setAllowNull(true).build() @TO@ VariableDeclarationFragment@@PAGE_SIZE_BYTES_NODE_NAME=new SimpleAttributeDefinition("page-size-bytes",new ModelNode(AddressSettings.DEFAULT_PAGE_SIZE),ModelType.LONG,true) @AT@ 28099 @LENGTH@ 199
---------INS MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("page-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)).setAllowNull(true).build() @AT@ 28099 @LENGTH@ 178
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowNull:[true] @AT@ 28272 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("page-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)).setAllowNull(true).build() @AT@ 28099 @LENGTH@ 146
------------INS MethodInvocation@@new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE) @TO@ MethodInvocation@@MethodName:setDefaultValue:[new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)] @AT@ 28190 @LENGTH@ 54
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ MethodInvocation@@new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE) @AT@ 28190 @LENGTH@ 15
------------------MOV New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 28119 @LENGTH@ 3
------------------MOV SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 28123 @LENGTH@ 9
---------------INS SimpleName@@MethodName:set:[AddressSettings.DEFAULT_PAGE_SIZE] @TO@ MethodInvocation@@new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE) @AT@ 28206 @LENGTH@ 38
------------------INS QualifiedName@@AddressSettings.DEFAULT_PAGE_SIZE @TO@ SimpleName@@MethodName:set:[AddressSettings.DEFAULT_PAGE_SIZE] @AT@ 28210 @LENGTH@ 33
---------------------MOV SimpleName@@AddressSettings @TO@ QualifiedName@@AddressSettings.DEFAULT_PAGE_SIZE @AT@ 28133 @LENGTH@ 15
---------------------MOV SimpleName@@DEFAULT_PAGE_SIZE @TO@ QualifiedName@@AddressSettings.DEFAULT_PAGE_SIZE @AT@ 28149 @LENGTH@ 17
---------INS ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["page-size-bytes", LONG] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("page-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)).setAllowNull(true).build() @AT@ 28099 @LENGTH@ 61
------------MOV New@@new @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["page-size-bytes", LONG] @AT@ 28058 @LENGTH@ 3
------------MOV SimpleType@@SimpleAttributeDefinition @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["page-size-bytes", LONG] @AT@ 28062 @LENGTH@ 25
------------MOV StringLiteral@@"page-size-bytes" @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["page-size-bytes", LONG] @AT@ 28088 @LENGTH@ 17
------------INS SimpleName@@LONG @TO@ ClassInstanceCreation@@SimpleAttributeDefinitionBuilder["page-size-bytes", LONG] @AT@ 28155 @LENGTH@ 4
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new SimpleAttributeDefinitionBuilder("page-size-bytes",LONG).setDefaultValue(new ModelNode().set(AddressSettings.DEFAULT_PAGE_SIZE)).setAllowNull(true).build() @AT@ 28291 @LENGTH@ 7


INS MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @TO@ TypeDeclaration@@[public]ChannelServer, [Closeable] @AT@ 3968 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3968 @LENGTH@ 6
---INS SimpleType@@Endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3975 @LENGTH@ 8
---INS SimpleName@@MethodName:getEndpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3984 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 4008 @LENGTH@ 16
------INS SimpleName@@endpoint @TO@ ReturnStatement@@SimpleName:endpoint @AT@ 4015 @LENGTH@ 8


UPD MethodDeclaration@@public, String, MethodName:getBody, UnsupportedEncodingException,  @TO@ public, byte[], MethodName:getBody,  @AT@ 5006 @LENGTH@ 110
---DEL SimpleType@@String @AT@ 5013 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, String, MethodName:getBody, UnsupportedEncodingException,  @AT@ 5013 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 5013 @LENGTH@ 4
---DEL SimpleType@@UnsupportedEncodingException @AT@ 5037 @LENGTH@ 28
---UPD ReturnStatement@@SuperMethodInvocation:super.getResponseContent() @TO@ SuperMethodInvocation:super.getResponseContentBytes() @AT@ 5076 @LENGTH@ 34
------UPD SuperMethodInvocation@@super.getResponseContent() @TO@ super.getResponseContentBytes() @AT@ 5083 @LENGTH@ 26
---------UPD SimpleName@@MethodName:getResponseContent:[] @TO@ MethodName:getResponseContentBytes:[] @AT@ 5089 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName()) @TO@ MethodInvocation:writer.writeAttribute(Attribute.TYPE.getLocalName(),property.getName()) @AT@ 55119 @LENGTH@ 73
---UPD MethodInvocation@@writer.writeAttribute(Attribute.NAME.getLocalName(),property.getName()) @TO@ writer.writeAttribute(Attribute.TYPE.getLocalName(),property.getName()) @AT@ 55119 @LENGTH@ 72
------UPD SimpleName@@MethodName:writeAttribute:[Attribute.NAME.getLocalName(), property.getName()] @TO@ MethodName:writeAttribute:[Attribute.TYPE.getLocalName(), property.getName()] @AT@ 55126 @LENGTH@ 65
---------UPD MethodInvocation@@Attribute.NAME.getLocalName() @TO@ Attribute.TYPE.getLocalName() @AT@ 55141 @LENGTH@ 29
------------UPD QualifiedName@@Name:Attribute.NAME @TO@ Name:Attribute.TYPE @AT@ 55141 @LENGTH@ 14


UPD IfStatement@@if (original.getException() != null) {  original.setProperty(Exchange.REDELIVERY_EXHAUSTED,exhaust);} @TO@ if (original.getException() != null || subExchange != null && subExchange.getException() != null) {  original.setProperty(Exchange.REDELIVERY_EXHAUSTED,exhaust);} @AT@ 35383 @LENGTH@ 401
---INS InfixExpression@@original.getException() != null || subExchange != null && subExchange.getException() != null @TO@ IfStatement@@if (original.getException() != null) {  original.setProperty(Exchange.REDELIVERY_EXHAUSTED,exhaust);} @AT@ 35387 @LENGTH@ 92
------MOV InfixExpression@@original.getException() != null @TO@ InfixExpression@@original.getException() != null || subExchange != null && subExchange.getException() != null @AT@ 35387 @LENGTH@ 31
------INS Operator@@|| @TO@ InfixExpression@@original.getException() != null || subExchange != null && subExchange.getException() != null @AT@ 35418 @LENGTH@ 2
------INS InfixExpression@@subExchange != null && subExchange.getException() != null @TO@ InfixExpression@@original.getException() != null || subExchange != null && subExchange.getException() != null @AT@ 35422 @LENGTH@ 57
---------INS InfixExpression@@subExchange != null @TO@ InfixExpression@@subExchange != null && subExchange.getException() != null @AT@ 35422 @LENGTH@ 19
------------INS SimpleName@@subExchange @TO@ InfixExpression@@subExchange != null @AT@ 35422 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@subExchange != null @AT@ 35433 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@subExchange != null @AT@ 35437 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@subExchange != null && subExchange.getException() != null @AT@ 35441 @LENGTH@ 2
---------INS InfixExpression@@subExchange.getException() != null @TO@ InfixExpression@@subExchange != null && subExchange.getException() != null @AT@ 35445 @LENGTH@ 34
------------INS MethodInvocation@@subExchange.getException() @TO@ InfixExpression@@subExchange.getException() != null @AT@ 35445 @LENGTH@ 26
---------------INS SimpleName@@Name:subExchange @TO@ MethodInvocation@@subExchange.getException() @AT@ 35445 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@subExchange.getException() @AT@ 35457 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@subExchange.getException() != null @AT@ 35471 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@subExchange.getException() != null @AT@ 35475 @LENGTH@ 4


UPD Block@@ThenBody:{  final OperationRequestHeader rolloutPlan=ctx.getConfig().getRolloutPlan(planRef);  if (rolloutPlan == null) {    throw new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.");  }  rolloutPlan.addTo(ctx,headers);  return;} @TO@ ThenBody:{  ModelNode rolloutPlan=Util.getRolloutPlan(ctx.getModelControllerClient(),planRef);  headers.set(rolloutPlan);  return;} @AT@ 4764 @LENGTH@ 336
---UPD VariableDeclarationStatement@@final OperationRequestHeader rolloutPlan=ctx.getConfig().getRolloutPlan(planRef); @TO@ ModelNode rolloutPlan=Util.getRolloutPlan(ctx.getModelControllerClient(),planRef); @AT@ 4778 @LENGTH@ 83
------DEL Modifier@@final @AT@ 4778 @LENGTH@ 5
------UPD SimpleType@@OperationRequestHeader @TO@ ModelNode @AT@ 4784 @LENGTH@ 22
------UPD VariableDeclarationFragment@@rolloutPlan=ctx.getConfig().getRolloutPlan(planRef) @TO@ rolloutPlan=Util.getRolloutPlan(ctx.getModelControllerClient(),planRef) @AT@ 4807 @LENGTH@ 53
---------UPD MethodInvocation@@ctx.getConfig().getRolloutPlan(planRef) @TO@ Util.getRolloutPlan(ctx.getModelControllerClient(),planRef) @AT@ 4821 @LENGTH@ 39
------------DEL MethodInvocation@@MethodName:getConfig:[] @AT@ 4821 @LENGTH@ 15
------------UPD SimpleName@@Name:ctx @TO@ Name:Util @AT@ 4821 @LENGTH@ 3
------------UPD SimpleName@@MethodName:getRolloutPlan:[planRef] @TO@ MethodName:getRolloutPlan:[ctx.getModelControllerClient(), planRef] @AT@ 4837 @LENGTH@ 23
---------------INS MethodInvocation@@ctx.getModelControllerClient() @TO@ SimpleName@@MethodName:getRolloutPlan:[planRef] @AT@ 5132 @LENGTH@ 30
------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 5132 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getModelControllerClient:[] @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 5136 @LENGTH@ 26
---DEL IfStatement@@if (rolloutPlan == null) {  throw new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.");} @AT@ 4874 @LENGTH@ 151
------DEL InfixExpression@@rolloutPlan == null @AT@ 4877 @LENGTH@ 19
---------DEL SimpleName@@rolloutPlan @AT@ 4877 @LENGTH@ 11
---------DEL Operator@@== @AT@ 4888 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4892 @LENGTH@ 4
------DEL Block@@ThenBody:{  throw new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.");} @AT@ 4898 @LENGTH@ 127
---------DEL ThrowStatement@@ClassInstanceCreation:new CommandFormatException("Rollout plan with id '" + planRef + "' could not be found.") @AT@ 4916 @LENGTH@ 95
------------DEL ClassInstanceCreation@@CommandFormatException["Rollout plan with id '" + planRef + "' could not be found."] @AT@ 4922 @LENGTH@ 88
---------------DEL New@@new @AT@ 4922 @LENGTH@ 3
---------------DEL SimpleType@@CommandFormatException @AT@ 4926 @LENGTH@ 22
---------------DEL InfixExpression@@"Rollout plan with id '" + planRef + "' could not be found." @AT@ 4949 @LENGTH@ 60
------------------DEL StringLiteral@@"Rollout plan with id '" @AT@ 4949 @LENGTH@ 24
------------------DEL Operator@@+ @AT@ 4973 @LENGTH@ 1
------------------DEL SimpleName@@planRef @AT@ 4976 @LENGTH@ 7
------------------DEL StringLiteral@@"' could not be found." @AT@ 4986 @LENGTH@ 23
---UPD ExpressionStatement@@MethodInvocation:rolloutPlan.addTo(ctx,headers) @TO@ MethodInvocation:headers.set(rolloutPlan) @AT@ 5038 @LENGTH@ 32
------UPD MethodInvocation@@rolloutPlan.addTo(ctx,headers) @TO@ headers.set(rolloutPlan) @AT@ 5038 @LENGTH@ 31
---------UPD SimpleName@@Name:rolloutPlan @TO@ Name:headers @AT@ 5038 @LENGTH@ 11
---------UPD SimpleName@@MethodName:addTo:[ctx, headers] @TO@ MethodName:set:[rolloutPlan] @AT@ 5050 @LENGTH@ 19
------------UPD SimpleName@@ctx @TO@ rolloutPlan @AT@ 5056 @LENGTH@ 3
------------DEL SimpleName@@headers @AT@ 5061 @LENGTH@ 7


UPD MethodDeclaration@@BackingCacheEntryStore<K,V,E>, E extends SerializationGroupMember<K,V,G>, MethodName:createIntegratedObjectStore, String beanName, PassivationManager<K,E> passivationManager, StatefulTimeoutInfo timeout,  @TO@ BackingCacheEntryStore<K,V,E>, E extends SerializationGroupMember<K,V,G>, MethodName:createIntegratedObjectStore, String beanName, IdentifierFactory<K> identifierFactory, PassivationManager<K,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 2302 @LENGTH@ 119
---INS SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @TO@ MethodDeclaration@@BackingCacheEntryStore<K,V,E>, E extends SerializationGroupMember<K,V,G>, MethodName:createIntegratedObjectStore, String beanName, PassivationManager<K,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 2437 @LENGTH@ 38
------INS ParameterizedType@@IdentifierFactory<K> @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 2437 @LENGTH@ 20
---------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2437 @LENGTH@ 17
---------INS SimpleType@@K @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2455 @LENGTH@ 1
------INS SimpleName@@identifierFactory @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 2458 @LENGTH@ 17


UPD Block@@ThenBody:{  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @TO@ ThenBody:{  final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE);  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @AT@ 25745 @LENGTH@ 380
---UPD VariableDeclarationStatement@@ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry); @TO@ ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25759 @LENGTH@ 204
------UPD VariableDeclarationFragment@@armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry) @TO@ armdmh=new ApplyRemoteMasterDomainModelHandler(fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry) @AT@ 25795 @LENGTH@ 167
---------UPD ClassInstanceCreation@@ApplyRemoteMasterDomainModelHandler[extensionRegistry, fileRepository, contentRepo, hostControllerInfo, ignoredDomainResourceRegistry] @TO@ ApplyRemoteMasterDomainModelHandler[fileRepository, contentRepo, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25804 @LENGTH@ 158
------------DEL SimpleName@@extensionRegistry @AT@ 25844 @LENGTH@ 17
---INS VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @TO@ Block@@ThenBody:{  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @AT@ 25832 @LENGTH@ 133
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25832 @LENGTH@ 5
------INS SimpleType@@ApplyExtensionsHandler @TO@ VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25838 @LENGTH@ 22
------INS VariableDeclarationFragment@@aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry) @TO@ VariableDeclarationStatement@@final ApplyExtensionsHandler aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry); @AT@ 25861 @LENGTH@ 103
---------INS SimpleName@@aexh @TO@ VariableDeclarationFragment@@aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry) @AT@ 25861 @LENGTH@ 4
---------INS ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @TO@ VariableDeclarationFragment@@aexh=new ApplyExtensionsHandler(extensionRegistry,hostControllerInfo,ignoredDomainResourceRegistry) @AT@ 25868 @LENGTH@ 96
------------INS New@@new @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25868 @LENGTH@ 3
------------INS SimpleType@@ApplyExtensionsHandler @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25872 @LENGTH@ 22
------------INS SimpleName@@extensionRegistry @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25895 @LENGTH@ 17
------------INS SimpleName@@hostControllerInfo @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25914 @LENGTH@ 18
------------INS SimpleName@@ignoredDomainResourceRegistry @TO@ ClassInstanceCreation@@ApplyExtensionsHandler[extensionRegistry, hostControllerInfo, ignoredDomainResourceRegistry] @AT@ 25934 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @TO@ Block@@ThenBody:{  ApplyRemoteMasterDomainModelHandler armdmh=new ApplyRemoteMasterDomainModelHandler(extensionRegistry,fileRepository,contentRepo,hostControllerInfo,ignoredDomainResourceRegistry);  root.registerOperationHandler(ApplyRemoteMasterDomainModelHandler.OPERATION_NAME,armdmh,armdmh,false,OperationEntry.EntryType.PRIVATE);} @AT@ 25978 @LENGTH@ 107
------INS MethodInvocation@@root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @TO@ ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @AT@ 25978 @LENGTH@ 106
---------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @AT@ 25978 @LENGTH@ 4
---------INS SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @TO@ MethodInvocation@@root.registerOperationHandler(ApplyExtensionsHandler.OPERATION_NAME,aexh,aexh,false,EntryType.PRIVATE) @AT@ 25983 @LENGTH@ 101
------------INS QualifiedName@@ApplyExtensionsHandler.OPERATION_NAME @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26008 @LENGTH@ 37
---------------INS SimpleName@@ApplyExtensionsHandler @TO@ QualifiedName@@ApplyExtensionsHandler.OPERATION_NAME @AT@ 26008 @LENGTH@ 22
---------------INS SimpleName@@OPERATION_NAME @TO@ QualifiedName@@ApplyExtensionsHandler.OPERATION_NAME @AT@ 26031 @LENGTH@ 14
------------INS SimpleName@@aexh @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26047 @LENGTH@ 4
------------INS SimpleName@@aexh @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26053 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26059 @LENGTH@ 5
------------INS QualifiedName@@EntryType.PRIVATE @TO@ SimpleName@@MethodName:registerOperationHandler:[ApplyExtensionsHandler.OPERATION_NAME, aexh, aexh, false, EntryType.PRIVATE] @AT@ 26066 @LENGTH@ 17
---------------INS SimpleName@@EntryType @TO@ QualifiedName@@EntryType.PRIVATE @AT@ 26066 @LENGTH@ 9
---------------INS SimpleName@@PRIVATE @TO@ QualifiedName@@EntryType.PRIVATE @AT@ 26076 @LENGTH@ 7


UPD TypeDeclaration@@[public]CXFFeaturesFilterTest,  @TO@ [public]CxfFeaturesFilterTest,  @AT@ 1238 @LENGTH@ 4816
---UPD SimpleName@@ClassName:CXFFeaturesFilterTest @TO@ ClassName:CxfFeaturesFilterTest @AT@ 1251 @LENGTH@ 21


INS MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @TO@ TypeDeclaration@@[public]SimpleAttributeDefinition, AttributeDefinition @AT@ 11507 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11507 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11514 @LENGTH@ 4
---INS SimpleName@@MethodName:parseAndSetParameter @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11519 @LENGTH@ 20
---INS SingleVariableDeclaration@@final String value @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11540 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String value @AT@ 11540 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String value @AT@ 11546 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@final String value @AT@ 11553 @LENGTH@ 5
---INS SingleVariableDeclaration@@final ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11560 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 11560 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 11566 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 11576 @LENGTH@ 9
---INS SingleVariableDeclaration@@final XMLStreamReader reader @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11587 @LENGTH@ 28
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 11587 @LENGTH@ 5
------INS SimpleType@@XMLStreamReader @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 11593 @LENGTH@ 15
------INS SimpleName@@reader @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 11609 @LENGTH@ 6
---INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11624 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:checkParseAndSetParameter(value,operation,reader) @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11653 @LENGTH@ 52
------INS MethodInvocation@@checkParseAndSetParameter(value,operation,reader) @TO@ ExpressionStatement@@MethodInvocation:checkParseAndSetParameter(value,operation,reader) @AT@ 11653 @LENGTH@ 51
---------INS SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @TO@ MethodInvocation@@checkParseAndSetParameter(value,operation,reader) @AT@ 11653 @LENGTH@ 51
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @AT@ 11679 @LENGTH@ 5
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @AT@ 11686 @LENGTH@ 9
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @AT@ 11697 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.debugf("Reloading properties file '%s%",propertiesFile.getAbsolutePath()) @TO@ MethodInvocation:ROOT_LOGGER.debugf("Reloading properties file '%s'",propertiesFile.getAbsolutePath()) @AT@ 5339 @LENGTH@ 87
---UPD MethodInvocation@@ROOT_LOGGER.debugf("Reloading properties file '%s%",propertiesFile.getAbsolutePath()) @TO@ ROOT_LOGGER.debugf("Reloading properties file '%s'",propertiesFile.getAbsolutePath()) @AT@ 5339 @LENGTH@ 86
------UPD SimpleName@@MethodName:debugf:["Reloading properties file '%s%", propertiesFile.getAbsolutePath()] @TO@ MethodName:debugf:["Reloading properties file '%s'", propertiesFile.getAbsolutePath()] @AT@ 5351 @LENGTH@ 74
---------UPD StringLiteral@@"Reloading properties file '%s%" @TO@ "Reloading properties file '%s'" @AT@ 5358 @LENGTH@ 32


INS MethodDeclaration@@public, String, MethodName:getMessage,  @TO@ TypeDeclaration@@[public]CDIManagedBean,  @AT@ 523 @LENGTH@ 58
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 523 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 530 @LENGTH@ 6
---INS SimpleName@@MethodName:getMessage @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 537 @LENGTH@ 10
---INS ReturnStatement@@StringLiteral:"World" @TO@ MethodDeclaration@@public, String, MethodName:getMessage,  @AT@ 560 @LENGTH@ 15
------INS StringLiteral@@"World" @TO@ ReturnStatement@@StringLiteral:"World" @AT@ 567 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 1208 @LENGTH@ 315
---INS MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @AT@ 1208 @LENGTH@ 314
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @AT@ 1208 @LENGTH@ 7
------INS SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
] @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
) @AT@ 1216 @LENGTH@ 306
---------INS ClassInstanceCreation@@OperationContext.RollbackHandler[] @TO@ SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    if (context.isNormalServer()) {
      context.revertReloadRequired();
    }
  }
}
] @AT@ 1229 @LENGTH@ 292
------------INS New@@new @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 1229 @LENGTH@ 3
------------INS SimpleType@@OperationContext.RollbackHandler @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 1233 @LENGTH@ 32
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 1268 @LENGTH@ 253
---------------INS MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1304 @LENGTH@ 207
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1304 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1311 @LENGTH@ 4
------------------INS SimpleName@@MethodName:handleRollback @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1316 @LENGTH@ 14
------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1331 @LENGTH@ 24
---------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1331 @LENGTH@ 16
---------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 1348 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1357 @LENGTH@ 19
---------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1357 @LENGTH@ 9
---------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1367 @LENGTH@ 9
------------------INS IfStatement@@if (context.isNormalServer()) {  context.revertReloadRequired();} @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 1396 @LENGTH@ 101
---------------------INS MethodInvocation@@context.isNormalServer() @TO@ IfStatement@@if (context.isNormalServer()) {  context.revertReloadRequired();} @AT@ 1400 @LENGTH@ 24
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1400 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1408 @LENGTH@ 16
---------------------INS Block@@ThenBody:{  context.revertReloadRequired();} @TO@ IfStatement@@if (context.isNormalServer()) {  context.revertReloadRequired();} @AT@ 1426 @LENGTH@ 71
------------------------INS ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @TO@ Block@@ThenBody:{  context.revertReloadRequired();} @AT@ 1448 @LENGTH@ 31
---------------------------MOV MethodInvocation@@context.completeStep() @TO@ ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @AT@ 1208 @LENGTH@ 22
------------------------------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:revertReloadRequired:[] @AT@ 1216 @LENGTH@ 14


UPD TryStatement@@try {  Module.registerURLStreamHandlerFactoryModule(Module.getBootModuleLoader().loadModule(ModuleIdentifier.create("org.jboss.vfs")));  final ParsedOptions options=determineEnvironment(args,new Properties(SecurityActions.getSystemProperties()),SecurityActions.getSystemEnvironment(),ServerEnvironment.LaunchType.APPCLIENT);  ServerEnvironment serverEnvironment=options.environment;  final List<String> clientArgs=options.clientArguments;  if (clientArgs.isEmpty()) {    System.err.println(MESSAGES.appClientNotSpecified());    usage();    abort(null);  } else {    final QName rootElement=new QName(Namespace.CURRENT.getUriString(),"server");    final String file=clientArgs.get(0);    final List<String> params=clientArgs.subList(1,clientArgs.size());    final String deploymentName;    final String earPath;    int pos=file.lastIndexOf("#");    if (pos == -1) {      earPath=file;      deploymentName=null;    } else {      deploymentName=file.substring(pos + 1);      earPath=file.substring(0,pos);    }    File realFile=new File(earPath);    if (!realFile.exists()) {      throw MESSAGES.cannotFindAppClientFile(realFile.getAbsoluteFile());    }    final Bootstrap bootstrap=Bootstrap.Factory.newInstance();    final Bootstrap.Configuration configuration=new Bootstrap.Configuration(serverEnvironment);    configuration.setModuleLoader(Module.getBootModuleLoader());    final ExtensionRegistry extensionRegistry=configuration.getExtensionRegistry();    final AppClientXml parser=new AppClientXml(Module.getBootModuleLoader(),extensionRegistry);    final Bootstrap.ConfigurationPersisterFactory configurationPersisterFactory=new Bootstrap.ConfigurationPersisterFactory(){      @Override public ExtensibleConfigurationPersister createConfigurationPersister(      ServerEnvironment serverEnvironment,      ExecutorService executorService){        ApplicationClientConfigurationPersister persister=new ApplicationClientConfigurationPersister(earPath,deploymentName,options.hostUrl,options.propertiesFile,params,serverEnvironment.getServerConfigurationFile().getBootFile(),rootElement,parser);        for (        Namespace namespace : Namespace.domainValues()) {          if (!namespace.equals(Namespace.CURRENT)) {            persister.registerAdditionalRootElement(new QName(namespace.getUriString(),"server"),parser);          }        }        extensionRegistry.setWriterRegistry(persister);        return persister;      }    };    configuration.setConfigurationPersisterFactory(configurationPersisterFactory);    bootstrap.bootstrap(configuration,Collections.<ServiceActivator>emptyList()).get();  }} catch (Throwable t) {  abort(t);} @TO@ try {  Module.registerURLStreamHandlerFactoryModule(Module.getBootModuleLoader().loadModule(ModuleIdentifier.create("org.jboss.vfs")));  final ParsedOptions options=determineEnvironment(args,new Properties(SecurityActions.getSystemProperties()),SecurityActions.getSystemEnvironment(),ServerEnvironment.LaunchType.APPCLIENT);  if (options == null) {    return;  }  ServerEnvironment serverEnvironment=options.environment;  final List<String> clientArgs=options.clientArguments;  if (clientArgs.isEmpty()) {    System.err.println(MESSAGES.appClientNotSpecified());    usage();    abort(null);  } else {    final QName rootElement=new QName(Namespace.CURRENT.getUriString(),"server");    final String file=clientArgs.get(0);    final List<String> params=clientArgs.subList(1,clientArgs.size());    final String deploymentName;    final String earPath;    int pos=file.lastIndexOf("#");    if (pos == -1) {      earPath=file;      deploymentName=null;    } else {      deploymentName=file.substring(pos + 1);      earPath=file.substring(0,pos);    }    File realFile=new File(earPath);    if (!realFile.exists()) {      throw MESSAGES.cannotFindAppClientFile(realFile.getAbsoluteFile());    }    final Bootstrap bootstrap=Bootstrap.Factory.newInstance();    final Bootstrap.Configuration configuration=new Bootstrap.Configuration(serverEnvironment);    configuration.setModuleLoader(Module.getBootModuleLoader());    final ExtensionRegistry extensionRegistry=configuration.getExtensionRegistry();    final AppClientXml parser=new AppClientXml(Module.getBootModuleLoader(),extensionRegistry);    final Bootstrap.ConfigurationPersisterFactory configurationPersisterFactory=new Bootstrap.ConfigurationPersisterFactory(){      @Override public ExtensibleConfigurationPersister createConfigurationPersister(      ServerEnvironment serverEnvironment,      ExecutorService executorService){        ApplicationClientConfigurationPersister persister=new ApplicationClientConfigurationPersister(earPath,deploymentName,options.hostUrl,options.propertiesFile,params,serverEnvironment.getServerConfigurationFile().getBootFile(),rootElement,parser);        for (        Namespace namespace : Namespace.domainValues()) {          if (!namespace.equals(Namespace.CURRENT)) {            persister.registerAdditionalRootElement(new QName(namespace.getUriString(),"server"),parser);          }        }        extensionRegistry.setWriterRegistry(persister);        return persister;      }    };    configuration.setConfigurationPersisterFactory(configurationPersisterFactory);    bootstrap.bootstrap(configuration,Collections.<ServiceActivator>emptyList()).get();  }} catch (Throwable t) {  abort(t);} @AT@ 3074 @LENGTH@ 3403
---INS IfStatement@@if (options == null) {  return;} @TO@ TryStatement@@try {  Module.registerURLStreamHandlerFactoryModule(Module.getBootModuleLoader().loadModule(ModuleIdentifier.create("org.jboss.vfs")));  final ParsedOptions options=determineEnvironment(args,new Properties(SecurityActions.getSystemProperties()),SecurityActions.getSystemEnvironment(),ServerEnvironment.LaunchType.APPCLIENT);  ServerEnvironment serverEnvironment=options.environment;  final List<String> clientArgs=options.clientArguments;  if (clientArgs.isEmpty()) {    System.err.println(MESSAGES.appClientNotSpecified());    usage();    abort(null);  } else {    final QName rootElement=new QName(Namespace.CURRENT.getUriString(),"server");    final String file=clientArgs.get(0);    final List<String> params=clientArgs.subList(1,clientArgs.size());    final String deploymentName;    final String earPath;    int pos=file.lastIndexOf("#");    if (pos == -1) {      earPath=file;      deploymentName=null;    } else {      deploymentName=file.substring(pos + 1);      earPath=file.substring(0,pos);    }    File realFile=new File(earPath);    if (!realFile.exists()) {      throw MESSAGES.cannotFindAppClientFile(realFile.getAbsoluteFile());    }    final Bootstrap bootstrap=Bootstrap.Factory.newInstance();    final Bootstrap.Configuration configuration=new Bootstrap.Configuration(serverEnvironment);    configuration.setModuleLoader(Module.getBootModuleLoader());    final ExtensionRegistry extensionRegistry=configuration.getExtensionRegistry();    final AppClientXml parser=new AppClientXml(Module.getBootModuleLoader(),extensionRegistry);    final Bootstrap.ConfigurationPersisterFactory configurationPersisterFactory=new Bootstrap.ConfigurationPersisterFactory(){      @Override public ExtensibleConfigurationPersister createConfigurationPersister(      ServerEnvironment serverEnvironment,      ExecutorService executorService){        ApplicationClientConfigurationPersister persister=new ApplicationClientConfigurationPersister(earPath,deploymentName,options.hostUrl,options.propertiesFile,params,serverEnvironment.getServerConfigurationFile().getBootFile(),rootElement,parser);        for (        Namespace namespace : Namespace.domainValues()) {          if (!namespace.equals(Namespace.CURRENT)) {            persister.registerAdditionalRootElement(new QName(namespace.getUriString(),"server"),parser);          }        }        extensionRegistry.setWriterRegistry(persister);        return persister;      }    };    configuration.setConfigurationPersisterFactory(configurationPersisterFactory);    bootstrap.bootstrap(configuration,Collections.<ServiceActivator>emptyList()).get();  }} catch (Throwable t) {  abort(t);} @AT@ 3439 @LENGTH@ 117
------INS InfixExpression@@options == null @TO@ IfStatement@@if (options == null) {  return;} @AT@ 3442 @LENGTH@ 15
---------INS SimpleName@@options @TO@ InfixExpression@@options == null @AT@ 3442 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@options == null @AT@ 3449 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@options == null @AT@ 3453 @LENGTH@ 4
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (options == null) {  return;} @AT@ 3459 @LENGTH@ 97
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 3535 @LENGTH@ 7


UPD SwitchStatement@@switch (modelType) {case BIG_DECIMAL:  value.asBigDecimal();break;case BIG_INTEGER:value.asBigInteger();break;case BOOLEAN:value.asBoolean();break;case BYTES:value.asBytes();break;case DOUBLE:value.asDouble();break;case EXPRESSION:value.asString();break;case INT:value.asInt();break;case LIST:value.asList();break;case LONG:value.asLong();break;case OBJECT:value.asObject();break;case PROPERTY:value.asProperty();break;case STRING:value.asString();break;case TYPE:value.asType();break;} @TO@ switch (modelType) {case BIG_DECIMAL:  value.resolve().asBigDecimal();break;case BIG_INTEGER:value.resolve().asBigInteger();break;case BOOLEAN:value.resolve().asBoolean();break;case BYTES:value.resolve().asBytes();break;case DOUBLE:value.resolve().asDouble();break;case EXPRESSION:value.asString();break;case INT:value.resolve().asInt();break;case LIST:value.asList();break;case LONG:value.resolve().asLong();break;case OBJECT:value.asObject();break;case PROPERTY:value.asProperty();break;case STRING:value.asString();break;case TYPE:value.resolve().asType();break;} @AT@ 21105 @LENGTH@ 1104
---UPD ExpressionStatement@@MethodInvocation:value.asBigDecimal() @TO@ MethodInvocation:value.resolve().asBigDecimal() @AT@ 21172 @LENGTH@ 21
------UPD MethodInvocation@@value.asBigDecimal() @TO@ value.resolve().asBigDecimal() @AT@ 21172 @LENGTH@ 20
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBigDecimal() @AT@ 21172 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asBigInteger() @TO@ MethodInvocation:value.resolve().asBigInteger() @AT@ 21263 @LENGTH@ 21
------UPD MethodInvocation@@value.asBigInteger() @TO@ value.resolve().asBigInteger() @AT@ 21263 @LENGTH@ 20
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBigInteger() @AT@ 21273 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asBoolean() @TO@ MethodInvocation:value.resolve().asBoolean() @AT@ 21350 @LENGTH@ 18
------UPD MethodInvocation@@value.asBoolean() @TO@ value.resolve().asBoolean() @AT@ 21350 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBoolean() @AT@ 21370 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asBytes() @TO@ MethodInvocation:value.resolve().asBytes() @AT@ 21432 @LENGTH@ 16
------UPD MethodInvocation@@value.asBytes() @TO@ value.resolve().asBytes() @AT@ 21432 @LENGTH@ 15
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asBytes() @AT@ 21462 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asDouble() @TO@ MethodInvocation:value.resolve().asDouble() @AT@ 21513 @LENGTH@ 17
------UPD MethodInvocation@@value.asDouble() @TO@ value.resolve().asDouble() @AT@ 21513 @LENGTH@ 16
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asDouble() @AT@ 21553 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asInt() @TO@ MethodInvocation:value.resolve().asInt() @AT@ 21678 @LENGTH@ 14
------UPD MethodInvocation@@value.asInt() @TO@ value.resolve().asInt() @AT@ 21678 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asInt() @AT@ 21728 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asLong() @TO@ MethodInvocation:value.resolve().asLong() @AT@ 21833 @LENGTH@ 15
------UPD MethodInvocation@@value.asLong() @TO@ value.resolve().asLong() @AT@ 21833 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asLong() @AT@ 21893 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:value.asType() @TO@ MethodInvocation:value.resolve().asType() @AT@ 22161 @LENGTH@ 15
------UPD MethodInvocation@@value.asType() @TO@ value.resolve().asType() @AT@ 22161 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:resolve:[] @TO@ MethodInvocation@@value.asType() @AT@ 22231 @LENGTH@ 15


UPD AssertStatement@@InfixExpression:serverEnvironment == null, Msg-StringLiteral:"serverEnvironment is null" @TO@ InfixExpression:serverEnvironment != null, Msg-StringLiteral:"serverEnvironment is null" @AT@ 3679 @LENGTH@ 63
---UPD InfixExpression@@serverEnvironment == null @TO@ serverEnvironment != null @AT@ 3686 @LENGTH@ 25
------UPD Operator@@== @TO@ != @AT@ 3703 @LENGTH@ 2


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]DefaultWebsocket, [WebSocket, OnTextMessage, Serializable] @AT@ 1154 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1154 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1162 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1169 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1175 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1180 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1180 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1199 @LENGTH@ 2


UPD IfStatement@@if (ctx.getCharacter() == ',') {  return;} @TO@ if (ctx.getCharacter() == ',' || ctx.getCharacter() == '}') {  return;} @AT@ 2228 @LENGTH@ 77
---INS InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @TO@ IfStatement@@if (ctx.getCharacter() == ',') {  return;} @AT@ 2231 @LENGTH@ 54
------MOV InfixExpression@@ctx.getCharacter() == ',' @TO@ InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @AT@ 2231 @LENGTH@ 25
------INS Operator@@|| @TO@ InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @AT@ 2256 @LENGTH@ 2
------INS InfixExpression@@ctx.getCharacter() == '}' @TO@ InfixExpression@@ctx.getCharacter() == ',' || ctx.getCharacter() == '}' @AT@ 2260 @LENGTH@ 25
---------INS MethodInvocation@@ctx.getCharacter() @TO@ InfixExpression@@ctx.getCharacter() == '}' @AT@ 2260 @LENGTH@ 18
------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getCharacter() @AT@ 2260 @LENGTH@ 3
------------INS SimpleName@@MethodName:getCharacter:[] @TO@ MethodInvocation@@ctx.getCharacter() @AT@ 2264 @LENGTH@ 14
---------INS Operator@@== @TO@ InfixExpression@@ctx.getCharacter() == '}' @AT@ 2278 @LENGTH@ 2
---------INS CharacterLiteral@@'}' @TO@ InfixExpression@@ctx.getCharacter() == '}' @AT@ 2282 @LENGTH@ 3


INS MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @TO@ TypeDeclaration@@[public]SecurityTest,  @AT@ 2999 @LENGTH@ 153
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 2999 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 3006 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 3013 @LENGTH@ 4
---INS SimpleName@@MethodName:createSecurityDomain @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 3018 @LENGTH@ 20
---INS SingleVariableDeclaration@@final String securityDomainName @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 3039 @LENGTH@ 31
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String securityDomainName @AT@ 3039 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String securityDomainName @AT@ 3045 @LENGTH@ 6
------INS SimpleName@@securityDomainName @TO@ SingleVariableDeclaration@@final String securityDomainName @AT@ 3052 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 3079 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:createSecurityDomain(securityDomainName,true) @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 3099 @LENGTH@ 47
------INS MethodInvocation@@createSecurityDomain(securityDomainName,true) @TO@ ExpressionStatement@@MethodInvocation:createSecurityDomain(securityDomainName,true) @AT@ 3099 @LENGTH@ 46
---------INS SimpleName@@MethodName:createSecurityDomain:[securityDomainName, true] @TO@ MethodInvocation@@createSecurityDomain(securityDomainName,true) @AT@ 3099 @LENGTH@ 46
------------INS SimpleName@@securityDomainName @TO@ SimpleName@@MethodName:createSecurityDomain:[securityDomainName, true] @AT@ 3120 @LENGTH@ 18
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:createSecurityDomain:[securityDomainName, true] @AT@ 3140 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:expression=expression.substring(2,expression.length() - 2) @TO@ Assignment:expression=expression.substring(2,expression.length() - 1) @AT@ 1643 @LENGTH@ 61
---UPD Assignment@@expression=expression.substring(2,expression.length() - 2) @TO@ expression=expression.substring(2,expression.length() - 1) @AT@ 1643 @LENGTH@ 60
------UPD MethodInvocation@@expression.substring(2,expression.length() - 2) @TO@ expression.substring(2,expression.length() - 1) @AT@ 1656 @LENGTH@ 47
---------UPD SimpleName@@MethodName:substring:[2, expression.length() - 2] @TO@ MethodName:substring:[2, expression.length() - 1] @AT@ 1667 @LENGTH@ 36
------------UPD InfixExpression@@expression.length() - 2 @TO@ expression.length() - 1 @AT@ 1680 @LENGTH@ 22
---------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 1701 @LENGTH@ 1


UPD Block@@ThenBody:{  Dictionary<?,?> dic=bundleContext.getBundle().getHeaders();  System.err.println("Test bundle headers: " + explode(dic));  for (  ServiceReference<?> ref : asCollection(bundleContext.getAllServiceReferences(null,null))) {    System.err.println("ServiceReference: " + ref);  }  for (  ServiceReference<?> ref : asCollection(bundleContext.getAllServiceReferences(null,flt))) {    System.err.println("Filtered ServiceReference: " + ref);  }  throw new RuntimeException("Gave up waiting for service " + flt);} @TO@ ThenBody:{  Dictionary<?,?> dic=bundleContext.getBundle().getHeaders();  System.err.println("Test bundle headers: " + explode(dic));  for (  ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null,null))) {    System.err.println("ServiceReference: " + ref);  }  for (  ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null,flt))) {    System.err.println("Filtered ServiceReference: " + ref);  }  throw new RuntimeException("Gave up waiting for service " + flt);} @AT@ 6001 @LENGTH@ 663
---UPD EnhancedForStatement@@for (ServiceReference<?> ref : asCollection(bundleContext.getAllServiceReferences(null,null))) {  System.err.println("ServiceReference: " + ref);} @TO@ for (ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null,null))) {  System.err.println("ServiceReference: " + ref);} @AT@ 6175 @LENGTH@ 183
------UPD SingleVariableDeclaration@@ServiceReference<?> ref @TO@ ServiceReference ref @AT@ 6180 @LENGTH@ 23
---------DEL ParameterizedType@@ServiceReference<?> @AT@ 6180 @LENGTH@ 19
------------DEL SimpleType@@ServiceReference @AT@ 6180 @LENGTH@ 16
------------DEL WildcardType@@? @AT@ 6197 @LENGTH@ 1
---------INS SimpleType@@ServiceReference @TO@ SingleVariableDeclaration@@ServiceReference<?> ref @AT@ 6180 @LENGTH@ 16
---UPD EnhancedForStatement@@for (ServiceReference<?> ref : asCollection(bundleContext.getAllServiceReferences(null,flt))) {  System.err.println("Filtered ServiceReference: " + ref);} @TO@ for (ServiceReference ref : asCollection(bundleContext.getAllServiceReferences(null,flt))) {  System.err.println("Filtered ServiceReference: " + ref);} @AT@ 6376 @LENGTH@ 191
------UPD SingleVariableDeclaration@@ServiceReference<?> ref @TO@ ServiceReference ref @AT@ 6381 @LENGTH@ 23
---------INS SimpleType@@ServiceReference @TO@ SingleVariableDeclaration@@ServiceReference<?> ref @AT@ 6378 @LENGTH@ 16
---------DEL ParameterizedType@@ServiceReference<?> @AT@ 6381 @LENGTH@ 19
------------DEL SimpleType@@ServiceReference @AT@ 6381 @LENGTH@ 16
------------DEL WildcardType@@? @AT@ 6398 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @TO@ TypeDeclaration@@[public, abstract]TestTokenStoreBase,  @AT@ 4681 @LENGTH@ 707
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 4681 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 4688 @LENGTH@ 4
---INS SimpleName@@MethodName:testRefreshTokenIsNotStoredDuringAccessToken @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 4693 @LENGTH@ 44
---INS VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 4744 @LENGTH@ 165
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)); @AT@ 4744 @LENGTH@ 20
------INS VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)) @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)); @AT@ 4765 @LENGTH@ 143
---------INS SimpleName@@expectedAuthentication @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)) @AT@ 4765 @LENGTH@ 22
---------INS ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)) @AT@ 4790 @LENGTH@ 118
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 4790 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 4794 @LENGTH@ 20
------------INS ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 4815 @LENGTH@ 52
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 4815 @LENGTH@ 3
---------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 4819 @LENGTH@ 20
---------------INS StringLiteral@@"id" @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 4840 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 4846 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 4856 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 4862 @LENGTH@ 4
------------INS ClassInstanceCreation@@TestAuthentication["test2", false] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 4869 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 4869 @LENGTH@ 3
---------------INS SimpleType@@TestAuthentication @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 4873 @LENGTH@ 18
---------------INS StringLiteral@@"test2" @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 4892 @LENGTH@ 7
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 4901 @LENGTH@ 5
---INS VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new OAuth2AccessToken("testToken"); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 4912 @LENGTH@ 81
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new OAuth2AccessToken("testToken"); @AT@ 4912 @LENGTH@ 17
------INS VariableDeclarationFragment@@expectedOAuth2AccessToken=new OAuth2AccessToken("testToken") @TO@ VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new OAuth2AccessToken("testToken"); @AT@ 4930 @LENGTH@ 62
---------INS SimpleName@@expectedOAuth2AccessToken @TO@ VariableDeclarationFragment@@expectedOAuth2AccessToken=new OAuth2AccessToken("testToken") @AT@ 4930 @LENGTH@ 25
---------INS ClassInstanceCreation@@OAuth2AccessToken["testToken"] @TO@ VariableDeclarationFragment@@expectedOAuth2AccessToken=new OAuth2AccessToken("testToken") @AT@ 4958 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AccessToken["testToken"] @AT@ 4958 @LENGTH@ 3
------------INS SimpleType@@OAuth2AccessToken @TO@ ClassInstanceCreation@@OAuth2AccessToken["testToken"] @AT@ 4962 @LENGTH@ 17
------------INS StringLiteral@@"testToken" @TO@ ClassInstanceCreation@@OAuth2AccessToken["testToken"] @AT@ 4980 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:expectedOAuth2AccessToken.setRefreshToken(new OAuth2RefreshToken("refreshToken")) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 4996 @LENGTH@ 82
------INS MethodInvocation@@expectedOAuth2AccessToken.setRefreshToken(new OAuth2RefreshToken("refreshToken")) @TO@ ExpressionStatement@@MethodInvocation:expectedOAuth2AccessToken.setRefreshToken(new OAuth2RefreshToken("refreshToken")) @AT@ 4996 @LENGTH@ 81
---------INS SimpleName@@Name:expectedOAuth2AccessToken @TO@ MethodInvocation@@expectedOAuth2AccessToken.setRefreshToken(new OAuth2RefreshToken("refreshToken")) @AT@ 4996 @LENGTH@ 25
---------INS SimpleName@@MethodName:setRefreshToken:[new OAuth2RefreshToken("refreshToken")] @TO@ MethodInvocation@@expectedOAuth2AccessToken.setRefreshToken(new OAuth2RefreshToken("refreshToken")) @AT@ 5022 @LENGTH@ 55
------------INS ClassInstanceCreation@@OAuth2RefreshToken["refreshToken"] @TO@ SimpleName@@MethodName:setRefreshToken:[new OAuth2RefreshToken("refreshToken")] @AT@ 5038 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2RefreshToken["refreshToken"] @AT@ 5038 @LENGTH@ 3
---------------INS SimpleType@@OAuth2RefreshToken @TO@ ClassInstanceCreation@@OAuth2RefreshToken["refreshToken"] @AT@ 5042 @LENGTH@ 18
---------------INS StringLiteral@@"refreshToken" @TO@ ClassInstanceCreation@@OAuth2RefreshToken["refreshToken"] @AT@ 5061 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 5081 @LENGTH@ 84
------INS MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 5081 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 5081 @LENGTH@ 15
---------INS SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 5097 @LENGTH@ 67
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 5114 @LENGTH@ 25
------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 5141 @LENGTH@ 22
---INS VariableDeclarationStatement@@OAuth2AccessToken actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken"); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 5169 @LENGTH@ 89
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken"); @AT@ 5169 @LENGTH@ 17
------INS VariableDeclarationFragment@@actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken") @TO@ VariableDeclarationStatement@@OAuth2AccessToken actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken"); @AT@ 5187 @LENGTH@ 70
---------INS SimpleName@@actualOAuth2AccessToken @TO@ VariableDeclarationFragment@@actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken") @AT@ 5187 @LENGTH@ 23
---------INS MethodInvocation@@getTokenStore().readAccessToken("testToken") @TO@ VariableDeclarationFragment@@actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken") @AT@ 5213 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().readAccessToken("testToken") @AT@ 5213 @LENGTH@ 15
------------INS SimpleName@@MethodName:readAccessToken:["testToken"] @TO@ MethodInvocation@@getTokenStore().readAccessToken("testToken") @AT@ 5229 @LENGTH@ 28
---------------INS StringLiteral@@"testToken" @TO@ SimpleName@@MethodName:readAccessToken:["testToken"] @AT@ 5245 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertNotNull(actualOAuth2AccessToken.getRefreshToken()) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 5261 @LENGTH@ 57
------INS MethodInvocation@@assertNotNull(actualOAuth2AccessToken.getRefreshToken()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(actualOAuth2AccessToken.getRefreshToken()) @AT@ 5261 @LENGTH@ 56
---------INS SimpleName@@MethodName:assertNotNull:[actualOAuth2AccessToken.getRefreshToken()] @TO@ MethodInvocation@@assertNotNull(actualOAuth2AccessToken.getRefreshToken()) @AT@ 5261 @LENGTH@ 56
------------INS MethodInvocation@@actualOAuth2AccessToken.getRefreshToken() @TO@ SimpleName@@MethodName:assertNotNull:[actualOAuth2AccessToken.getRefreshToken()] @AT@ 5275 @LENGTH@ 41
---------------INS SimpleName@@Name:actualOAuth2AccessToken @TO@ MethodInvocation@@actualOAuth2AccessToken.getRefreshToken() @AT@ 5275 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@actualOAuth2AccessToken.getRefreshToken() @AT@ 5299 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readRefreshToken("refreshToken")) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenIsNotStoredDuringAccessToken,  @AT@ 5324 @LENGTH@ 61
------INS MethodInvocation@@assertNull(getTokenStore().readRefreshToken("refreshToken")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readRefreshToken("refreshToken")) @AT@ 5324 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertNull:[getTokenStore().readRefreshToken("refreshToken")] @TO@ MethodInvocation@@assertNull(getTokenStore().readRefreshToken("refreshToken")) @AT@ 5324 @LENGTH@ 60
------------INS MethodInvocation@@getTokenStore().readRefreshToken("refreshToken") @TO@ SimpleName@@MethodName:assertNull:[getTokenStore().readRefreshToken("refreshToken")] @AT@ 5335 @LENGTH@ 48
---------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().readRefreshToken("refreshToken") @AT@ 5335 @LENGTH@ 15
---------------INS SimpleName@@MethodName:readRefreshToken:["refreshToken"] @TO@ MethodInvocation@@getTokenStore().readRefreshToken("refreshToken") @AT@ 5351 @LENGTH@ 32
------------------INS StringLiteral@@"refreshToken" @TO@ SimpleName@@MethodName:readRefreshToken:["refreshToken"] @AT@ 5368 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:headers.set("WWW-Authenticate",String.format("%s, %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary())) @TO@ MethodInvocation:headers.set("WWW-Authenticate",String.format("%s %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary())) @AT@ 3032 @LENGTH@ 104
---UPD MethodInvocation@@headers.set("WWW-Authenticate",String.format("%s, %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary())) @TO@ headers.set("WWW-Authenticate",String.format("%s %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary())) @AT@ 3032 @LENGTH@ 103
------UPD SimpleName@@MethodName:set:["WWW-Authenticate", String.format("%s, %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary())] @TO@ MethodName:set:["WWW-Authenticate", String.format("%s %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary())] @AT@ 3040 @LENGTH@ 95
---------UPD MethodInvocation@@String.format("%s, %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary()) @TO@ String.format("%s %s",OAuth2AccessToken.BEARER_TYPE,e.getSummary()) @AT@ 3064 @LENGTH@ 70
------------UPD SimpleName@@MethodName:format:["%s, %s", OAuth2AccessToken.BEARER_TYPE, e.getSummary()] @TO@ MethodName:format:["%s %s", OAuth2AccessToken.BEARER_TYPE, e.getSummary()] @AT@ 3071 @LENGTH@ 63
---------------UPD StringLiteral@@"%s, %s" @TO@ "%s %s" @AT@ 3078 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:planString=planString.replace(System.getProperty("line.separator")," ") @TO@ Assignment:planString=planString.replace("\n"," ") @AT@ 3513 @LENGTH@ 75
---UPD Assignment@@planString=planString.replace(System.getProperty("line.separator")," ") @TO@ planString=planString.replace("\n"," ") @AT@ 3513 @LENGTH@ 74
------UPD MethodInvocation@@planString.replace(System.getProperty("line.separator")," ") @TO@ planString.replace("\n"," ") @AT@ 3526 @LENGTH@ 61
---------UPD SimpleName@@MethodName:replace:[System.getProperty("line.separator"), " "] @TO@ MethodName:replace:["\n", " "] @AT@ 3537 @LENGTH@ 50
------------DEL MethodInvocation@@System.getProperty("line.separator") @AT@ 3545 @LENGTH@ 36
---------------DEL SimpleName@@Name:System @AT@ 3545 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getProperty:["line.separator"] @AT@ 3552 @LENGTH@ 29
------------MOV StringLiteral@@"line.separator" @TO@ SimpleName@@MethodName:replace:[System.getProperty("line.separator"), " "] @AT@ 3564 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:start").expectedMinimumMessageCount(4) @TO@ MethodInvocation:getMockEndpoint("mock:start").expectedMinimumMessageCount(5) @AT@ 2650 @LENGTH@ 61
---UPD MethodInvocation@@getMockEndpoint("mock:start").expectedMinimumMessageCount(4) @TO@ getMockEndpoint("mock:start").expectedMinimumMessageCount(5) @AT@ 2650 @LENGTH@ 60
------UPD SimpleName@@MethodName:expectedMinimumMessageCount:[4] @TO@ MethodName:expectedMinimumMessageCount:[5] @AT@ 2680 @LENGTH@ 30
---------UPD NumberLiteral@@4 @TO@ 5 @AT@ 2708 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 4320 @LENGTH@ 597
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 4408 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4408 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4414 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 4421 @LENGTH@ 11


UPD EnhancedForStatement@@for (final MethodPermissionMetaData methodPermissionMetaData : methodPermissions) {  EJBMethodSecurityAttribute ejbMethodSecurityMetaData;  if (methodPermissionMetaData.isNotChecked())   ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll(); else   ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles());  final MethodsMetaData methods=methodPermissionMetaData.getMethods();  for (  final MethodMetaData method : methods) {    final String methodName=method.getMethodName();    final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf());    if (methodName.equals("*")) {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle1(methodIntf,null);      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,null,ejbMethodSecurityMetaData);    } else {      final MethodParametersMetaData methodParams=method.getMethodParams();      if (methodParams == null) {        final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle2(methodIntf,methodName);        ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);        componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,methodName);      } else {        final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle3(methodIntf,null,methodName,this.getMethodParams(methodParams));        ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);        componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,null,methodName,this.getMethodParams(methodParams));      }    }  }} @TO@ for (final MethodPermissionMetaData methodPermissionMetaData : methodPermissions) {  final MethodsMetaData methods=methodPermissionMetaData.getMethods();  for (  final MethodMetaData method : methods) {    EJBMethodSecurityAttribute ejbMethodSecurityMetaData;    if (methodPermissionMetaData.isNotChecked()) {      ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll();    } else {      ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles());    }    final String methodName=method.getMethodName();    final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf());    if (methodName.equals("*")) {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle1(methodIntf,null);      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,null,ejbMethodSecurityMetaData);    } else {      final MethodParametersMetaData methodParams=method.getMethodParams();      if (methodParams == null) {        final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle2(methodIntf,methodName);        ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);        componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,methodName);      } else {        final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle3(methodIntf,null,methodName,this.getMethodParams(methodParams));        ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);        componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,null,methodName,this.getMethodParams(methodParams));      }    }  }} @AT@ 9155 @LENGTH@ 2925
---UPD IfStatement@@if (methodPermissionMetaData.isNotChecked()) ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll(); else ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles()); @TO@ if (methodPermissionMetaData.isNotChecked()) {  ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll();} else {  ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles());} @AT@ 9516 @LENGTH@ 303
---UPD EnhancedForStatement@@for (final MethodMetaData method : methods) {  final String methodName=method.getMethodName();  final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf());  if (methodName.equals("*")) {    final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle1(methodIntf,null);    ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);    componentConfiguration.getMethodPermissions().setAttribute(methodIntf,null,ejbMethodSecurityMetaData);  } else {    final MethodParametersMetaData methodParams=method.getMethodParams();    if (methodParams == null) {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle2(methodIntf,methodName);      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,methodName);    } else {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle3(methodIntf,null,methodName,this.getMethodParams(methodParams));      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,null,methodName,this.getMethodParams(methodParams));    }  }} @TO@ for (final MethodMetaData method : methods) {  EJBMethodSecurityAttribute ejbMethodSecurityMetaData;  if (methodPermissionMetaData.isNotChecked()) {    ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll();  } else {    ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles());  }  final String methodName=method.getMethodName();  final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf());  if (methodName.equals("*")) {    final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle1(methodIntf,null);    ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);    componentConfiguration.getMethodPermissions().setAttribute(methodIntf,null,ejbMethodSecurityMetaData);  } else {    final MethodParametersMetaData methodParams=method.getMethodParams();    if (methodParams == null) {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle2(methodIntf,methodName);      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,methodName);    } else {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle3(methodIntf,null,methodName,this.getMethodParams(methodParams));      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,null,methodName,this.getMethodParams(methodParams));    }  }} @AT@ 9939 @LENGTH@ 2119
------MOV VariableDeclarationStatement@@EJBMethodSecurityAttribute ejbMethodSecurityMetaData; @TO@ EnhancedForStatement@@for (final MethodMetaData method : methods) {  final String methodName=method.getMethodName();  final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf());  if (methodName.equals("*")) {    final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle1(methodIntf,null);    ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);    componentConfiguration.getMethodPermissions().setAttribute(methodIntf,null,ejbMethodSecurityMetaData);  } else {    final MethodParametersMetaData methodParams=method.getMethodParams();    if (methodParams == null) {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle2(methodIntf,methodName);      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,methodName);    } else {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle3(methodIntf,null,methodName,this.getMethodParams(methodParams));      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,null,methodName,this.getMethodParams(methodParams));    }  }} @AT@ 9263 @LENGTH@ 53
------MOV IfStatement@@if (methodPermissionMetaData.isNotChecked()) ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll(); else ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles()); @TO@ EnhancedForStatement@@for (final MethodMetaData method : methods) {  final String methodName=method.getMethodName();  final MethodIntf methodIntf=this.getMethodIntf(method.getMethodIntf());  if (methodName.equals("*")) {    final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle1(methodIntf,null);    ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);    componentConfiguration.getMethodPermissions().setAttribute(methodIntf,null,ejbMethodSecurityMetaData);  } else {    final MethodParametersMetaData methodParams=method.getMethodParams();    if (methodParams == null) {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle2(methodIntf,methodName);      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,methodName);    } else {      final EJBMethodSecurityAttribute existingRoles=componentConfiguration.getMethodPermissions().getAttributeStyle3(methodIntf,null,methodName,this.getMethodParams(methodParams));      ejbMethodSecurityMetaData=mergeExistingRoles(ejbMethodSecurityMetaData,existingRoles);      componentConfiguration.getMethodPermissions().setAttribute(methodIntf,ejbMethodSecurityMetaData,null,methodName,this.getMethodParams(methodParams));    }  }} @AT@ 9516 @LENGTH@ 303
---------UPD Block@@ThenBody:ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll(); @TO@ ThenBody:{  ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.permitAll();} @AT@ 9589 @LENGTH@ 67
---------UPD Block@@ElseBody:ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles()); @TO@ ElseBody:{  ejbMethodSecurityMetaData=EJBMethodSecurityAttribute.rolesAllowed(methodPermissionMetaData.getRoles());} @AT@ 9714 @LENGTH@ 105


UPD TypeDeclaration@@[public]DistributedCacheManager,  @TO@ [public]DistributedCacheManager, [SessionIdFactory] @AT@ 1183 @LENGTH@ 4581
---INS SimpleType@@SessionIdFactory @TO@ TypeDeclaration@@[public]DistributedCacheManager,  @AT@ 1276 @LENGTH@ 16


UPD IfStatement@@if (metaData instanceof SessionBeanMetaData) {  final SessionBeanMetaData sessionBeanMetadata=(SessionBeanMetaData)metaData;  final LifecycleCallbacksMetaData prePassivates=sessionBeanMetadata.getPrePassivates();  if (prePassivates != null) {    for (    final LifecycleCallbackMetaData prePassivate : prePassivates) {      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();      final String methodName=prePassivate.getMethodName();      final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);      builder.setPrePassivate(methodIdentifier);      if (prePassivate.getClassName() == null || prePassivate.getClassName().isEmpty()) {        final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();        component.addInterceptorMethodOverride(className,builder.build());      } else {        component.addInterceptorMethodOverride(prePassivate.getClassName(),builder.build());      }    }  }  final LifecycleCallbacksMetaData postActivates=sessionBeanMetadata.getPostActivates();  if (postActivates != null) {    for (    final LifecycleCallbackMetaData postActivate : postActivates) {      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();      final String methodName=postActivate.getMethodName();      final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);      builder.setPostActivate(methodIdentifier);      if (postActivate.getClassName() == null || postActivate.getClassName().isEmpty()) {        final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();        component.addInterceptorMethodOverride(className,builder.build());      } else {        component.addInterceptorMethodOverride(postActivate.getClassName(),builder.build());      }    }  }} @TO@ if (component.isStateful()) {  final SessionBeanMetaData sessionBeanMetadata=(SessionBeanMetaData)metaData;  final LifecycleCallbacksMetaData prePassivates=sessionBeanMetadata.getPrePassivates();  if (prePassivates != null) {    for (    final LifecycleCallbackMetaData prePassivate : prePassivates) {      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();      final String methodName=prePassivate.getMethodName();      final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);      builder.setPrePassivate(methodIdentifier);      if (prePassivate.getClassName() == null || prePassivate.getClassName().isEmpty()) {        final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();        component.addInterceptorMethodOverride(className,builder.build());      } else {        component.addInterceptorMethodOverride(prePassivate.getClassName(),builder.build());      }    }  }  final LifecycleCallbacksMetaData postActivates=sessionBeanMetadata.getPostActivates();  if (postActivates != null) {    for (    final LifecycleCallbackMetaData postActivate : postActivates) {      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();      final String methodName=postActivate.getMethodName();      final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);      builder.setPostActivate(methodIdentifier);      if (postActivate.getClassName() == null || postActivate.getClassName().isEmpty()) {        final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();        component.addInterceptorMethodOverride(className,builder.build());      } else {        component.addInterceptorMethodOverride(postActivate.getClassName(),builder.build());      }    }  }} @AT@ 10279 @LENGTH@ 2602
---DEL InstanceofExpression@@metaData instanceof SessionBeanMetaData @AT@ 10283 @LENGTH@ 39
------DEL SimpleName@@metaData @AT@ 10283 @LENGTH@ 8
------DEL Instanceof@@instanceof @AT@ 10292 @LENGTH@ 10
------DEL SimpleType@@SessionBeanMetaData @AT@ 10303 @LENGTH@ 19
---INS MethodInvocation@@component.isStateful() @TO@ IfStatement@@if (metaData instanceof SessionBeanMetaData) {  final SessionBeanMetaData sessionBeanMetadata=(SessionBeanMetaData)metaData;  final LifecycleCallbacksMetaData prePassivates=sessionBeanMetadata.getPrePassivates();  if (prePassivates != null) {    for (    final LifecycleCallbackMetaData prePassivate : prePassivates) {      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();      final String methodName=prePassivate.getMethodName();      final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);      builder.setPrePassivate(methodIdentifier);      if (prePassivate.getClassName() == null || prePassivate.getClassName().isEmpty()) {        final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();        component.addInterceptorMethodOverride(className,builder.build());      } else {        component.addInterceptorMethodOverride(prePassivate.getClassName(),builder.build());      }    }  }  final LifecycleCallbacksMetaData postActivates=sessionBeanMetadata.getPostActivates();  if (postActivates != null) {    for (    final LifecycleCallbackMetaData postActivate : postActivates) {      final InterceptorClassDescription.Builder builder=InterceptorClassDescription.builder();      final String methodName=postActivate.getMethodName();      final MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifier(void.class,methodName);      builder.setPostActivate(methodIdentifier);      if (postActivate.getClassName() == null || postActivate.getClassName().isEmpty()) {        final String className=ClassReflectionIndexUtil.findRequiredMethod(reflectionIndex,componentClass.getModuleClass(),methodIdentifier).getDeclaringClass().getName();        component.addInterceptorMethodOverride(className,builder.build());      } else {        component.addInterceptorMethodOverride(postActivate.getClassName(),builder.build());      }    }  }} @AT@ 10283 @LENGTH@ 22
------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.isStateful() @AT@ 10283 @LENGTH@ 9
------INS SimpleName@@MethodName:isStateful:[] @TO@ MethodInvocation@@component.isStateful() @AT@ 10293 @LENGTH@ 12


UPD VariableDeclarationStatement@@NoTypeConversionAvailableException cause=assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause()); @TO@ TypeConversionException cause=assertIsInstanceOf(TypeConversionException.class,e.getCause()); @AT@ 1558 @LENGTH@ 118
---UPD SimpleType@@NoTypeConversionAvailableException @TO@ TypeConversionException @AT@ 1558 @LENGTH@ 34
---UPD VariableDeclarationFragment@@cause=assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause()) @TO@ cause=assertIsInstanceOf(TypeConversionException.class,e.getCause()) @AT@ 1593 @LENGTH@ 82
------UPD MethodInvocation@@assertIsInstanceOf(NoTypeConversionAvailableException.class,e.getCause()) @TO@ assertIsInstanceOf(TypeConversionException.class,e.getCause()) @AT@ 1601 @LENGTH@ 74
---------UPD SimpleName@@MethodName:assertIsInstanceOf:[NoTypeConversionAvailableException.class, e.getCause()] @TO@ MethodName:assertIsInstanceOf:[TypeConversionException.class, e.getCause()] @AT@ 1601 @LENGTH@ 74
------------UPD TypeLiteral@@NoTypeConversionAvailableException.class @TO@ TypeConversionException.class @AT@ 1620 @LENGTH@ 40


UPD IfStatement@@if (standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(serverConfigurationDir);} @TO@ if (standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory())) {  throw MESSAGES.configDirectoryDoesNotExist(serverConfigurationDir);} @AT@ 15135 @LENGTH@ 184
---INS InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @TO@ IfStatement@@if (standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(serverConfigurationDir);} @AT@ 15139 @LENGTH@ 89
------INS SimpleName@@standalone @TO@ InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15139 @LENGTH@ 10
------INS Operator@@&& @TO@ InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15149 @LENGTH@ 2
------INS ParenthesizedExpression@@(!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @TO@ InfixExpression@@standalone && (!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15153 @LENGTH@ 75
---------MOV InfixExpression@@standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory() @TO@ ParenthesizedExpression@@(!serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory()) @AT@ 15139 @LENGTH@ 87
------------DEL SimpleName@@standalone @AT@ 15139 @LENGTH@ 10
------------UPD Operator@@&& @TO@ || @AT@ 15149 @LENGTH@ 2
------------MOV Operator@@&& @TO@ InfixExpression@@standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory() @AT@ 15149 @LENGTH@ 2
---UPD InfixExpression@@standalone && !serverConfigurationDir.exists() && !serverConfigurationDir.isDirectory() @TO@ !serverConfigurationDir.exists() || !serverConfigurationDir.isDirectory() @AT@ 15139 @LENGTH@ 87


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2076 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2076 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2084 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2098 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2114 @LENGTH@ 23


UPD MethodDeclaration@@protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory,  @TO@ protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory, final InterceptorFactoryContext context,  @AT@ 9238 @LENGTH@ 331
---INS SingleVariableDeclaration@@final InterceptorFactoryContext context @TO@ MethodDeclaration@@protected, Interceptor, MethodName:createInterceptor, final InterceptorFactory factory,  @AT@ 9251 @LENGTH@ 39
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 9251 @LENGTH@ 5
------INS SimpleType@@InterceptorFactoryContext @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 9257 @LENGTH@ 25
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 9283 @LENGTH@ 7
---DEL VariableDeclarationStatement@@final SimpleInterceptorFactoryContext context=new SimpleInterceptorFactoryContext(); @AT@ 9376 @LENGTH@ 86
------DEL Modifier@@final @AT@ 9376 @LENGTH@ 5
------DEL SimpleType@@SimpleInterceptorFactoryContext @AT@ 9382 @LENGTH@ 31
------DEL VariableDeclarationFragment@@context=new SimpleInterceptorFactoryContext() @AT@ 9414 @LENGTH@ 47
---------DEL SimpleName@@context @AT@ 9414 @LENGTH@ 7
---------DEL ClassInstanceCreation@@SimpleInterceptorFactoryContext[] @AT@ 9424 @LENGTH@ 37
------------DEL New@@new @AT@ 9424 @LENGTH@ 3
------------DEL SimpleType@@SimpleInterceptorFactoryContext @AT@ 9428 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.REF,server.get(SOCKET_BINDING_GROUP).asString()) @TO@ MethodInvocation:writeAttribute(writer,Attribute.SOCKET_BINDING_GROUP,server.get(SOCKET_BINDING_GROUP).asString()) @AT@ 49040 @LENGTH@ 83
---UPD MethodInvocation@@writeAttribute(writer,Attribute.REF,server.get(SOCKET_BINDING_GROUP).asString()) @TO@ writeAttribute(writer,Attribute.SOCKET_BINDING_GROUP,server.get(SOCKET_BINDING_GROUP).asString()) @AT@ 49040 @LENGTH@ 82
------UPD SimpleName@@MethodName:writeAttribute:[writer, Attribute.REF, server.get(SOCKET_BINDING_GROUP).asString()] @TO@ MethodName:writeAttribute:[writer, Attribute.SOCKET_BINDING_GROUP, server.get(SOCKET_BINDING_GROUP).asString()] @AT@ 49040 @LENGTH@ 82
---------UPD QualifiedName@@Attribute.REF @TO@ Attribute.SOCKET_BINDING_GROUP @AT@ 49063 @LENGTH@ 13
------------UPD SimpleName@@REF @TO@ SOCKET_BINDING_GROUP @AT@ 49073 @LENGTH@ 3


UPD EnhancedForStatement@@for (Property stack : stacks) {  String name=stack.getName();  List<ModelNode> nodes=stack.getValue().get(LOGIN_MODULES).asList();  final LoginModuleStackHolder holder=new LoginModuleStackHolder(name,null);  holders.put(name,holder);  authenticationInfo.add(holder);  for (  ModelNode login : nodes) {    processLoginModules(login,authenticationInfo,new LoginModuleContainer(){      public void addAppConfigurationEntry(      AppConfigurationEntry entry){        holder.addAppConfigurationEntry(entry);      }    });  }} @TO@ for (Property stack : stacks) {  String name=stack.getName();  ModelNode stackNode=stack.getValue();  final LoginModuleStackHolder holder=new LoginModuleStackHolder(name,null);  holders.put(name,holder);  authenticationInfo.add(holder);  if (stackNode.hasDefined(LOGIN_MODULES)) {    processLoginModules(stackNode.get(LOGIN_MODULES),authenticationInfo,new LoginModuleContainer(){      public void addAppConfigurationEntry(      AppConfigurationEntry entry){        holder.addAppConfigurationEntry(entry);      }    });  }} @AT@ 17460 @LENGTH@ 684
---UPD VariableDeclarationStatement@@List<ModelNode> nodes=stack.getValue().get(LOGIN_MODULES).asList(); @TO@ ModelNode stackNode=stack.getValue(); @AT@ 17547 @LENGTH@ 69
------DEL ParameterizedType@@List<ModelNode> @AT@ 17547 @LENGTH@ 15
---------DEL SimpleType@@List @AT@ 17547 @LENGTH@ 4
---------DEL SimpleType@@ModelNode @AT@ 17552 @LENGTH@ 9
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@List<ModelNode> nodes=stack.getValue().get(LOGIN_MODULES).asList(); @AT@ 17547 @LENGTH@ 9
------UPD VariableDeclarationFragment@@nodes=stack.getValue().get(LOGIN_MODULES).asList() @TO@ stackNode=stack.getValue() @AT@ 17563 @LENGTH@ 52
---------UPD SimpleName@@nodes @TO@ stackNode @AT@ 17563 @LENGTH@ 5
---------UPD MethodInvocation@@stack.getValue().get(LOGIN_MODULES).asList() @TO@ stack.getValue() @AT@ 17571 @LENGTH@ 44
------------DEL MethodInvocation@@MethodName:get:[LOGIN_MODULES] @AT@ 17571 @LENGTH@ 35
---------------DEL SimpleName@@LOGIN_MODULES @AT@ 17592 @LENGTH@ 13
------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 17571 @LENGTH@ 16
------------UPD SimpleName@@MethodName:asList:[] @TO@ MethodName:getValue:[] @AT@ 17607 @LENGTH@ 8
---INS IfStatement@@if (stackNode.hasDefined(LOGIN_MODULES)) {  processLoginModules(stackNode.get(LOGIN_MODULES),authenticationInfo,new LoginModuleContainer(){    public void addAppConfigurationEntry(    AppConfigurationEntry entry){      holder.addAppConfigurationEntry(entry);    }  });} @TO@ EnhancedForStatement@@for (Property stack : stacks) {  String name=stack.getName();  List<ModelNode> nodes=stack.getValue().get(LOGIN_MODULES).asList();  final LoginModuleStackHolder holder=new LoginModuleStackHolder(name,null);  holders.put(name,holder);  authenticationInfo.add(holder);  for (  ModelNode login : nodes) {    processLoginModules(login,authenticationInfo,new LoginModuleContainer(){      public void addAppConfigurationEntry(      AppConfigurationEntry entry){        holder.addAppConfigurationEntry(entry);      }    });  }} @AT@ 17773 @LENGTH@ 365
------INS MethodInvocation@@stackNode.hasDefined(LOGIN_MODULES) @TO@ IfStatement@@if (stackNode.hasDefined(LOGIN_MODULES)) {  processLoginModules(stackNode.get(LOGIN_MODULES),authenticationInfo,new LoginModuleContainer(){    public void addAppConfigurationEntry(    AppConfigurationEntry entry){      holder.addAppConfigurationEntry(entry);    }  });} @AT@ 17777 @LENGTH@ 35
---------INS SimpleName@@Name:stackNode @TO@ MethodInvocation@@stackNode.hasDefined(LOGIN_MODULES) @AT@ 17777 @LENGTH@ 9
---------INS SimpleName@@MethodName:hasDefined:[LOGIN_MODULES] @TO@ MethodInvocation@@stackNode.hasDefined(LOGIN_MODULES) @AT@ 17787 @LENGTH@ 25
------------INS SimpleName@@LOGIN_MODULES @TO@ SimpleName@@MethodName:hasDefined:[LOGIN_MODULES] @AT@ 17798 @LENGTH@ 13
------INS Block@@ThenBody:{  processLoginModules(stackNode.get(LOGIN_MODULES),authenticationInfo,new LoginModuleContainer(){    public void addAppConfigurationEntry(    AppConfigurationEntry entry){      holder.addAppConfigurationEntry(entry);    }  });} @TO@ IfStatement@@if (stackNode.hasDefined(LOGIN_MODULES)) {  processLoginModules(stackNode.get(LOGIN_MODULES),authenticationInfo,new LoginModuleContainer(){    public void addAppConfigurationEntry(    AppConfigurationEntry entry){      holder.addAppConfigurationEntry(entry);    }  });} @AT@ 17814 @LENGTH@ 324
---------MOV ExpressionStatement@@MethodInvocation:processLoginModules(login,authenticationInfo,new LoginModuleContainer(){
  public void addAppConfigurationEntry(  AppConfigurationEntry entry){
    holder.addAppConfigurationEntry(entry);
  }
}
) @TO@ Block@@ThenBody:{  processLoginModules(stackNode.get(LOGIN_MODULES),authenticationInfo,new LoginModuleContainer(){    public void addAppConfigurationEntry(    AppConfigurationEntry entry){      holder.addAppConfigurationEntry(entry);    }  });} @AT@ 17851 @LENGTH@ 269
---DEL EnhancedForStatement@@for (ModelNode login : nodes) {  processLoginModules(login,authenticationInfo,new LoginModuleContainer(){    public void addAppConfigurationEntry(    AppConfigurationEntry entry){      holder.addAppConfigurationEntry(entry);    }  });} @AT@ 17803 @LENGTH@ 331
------DEL SingleVariableDeclaration@@ModelNode login @AT@ 17808 @LENGTH@ 15
---------DEL SimpleType@@ModelNode @AT@ 17808 @LENGTH@ 9
---------DEL SimpleName@@login @AT@ 17818 @LENGTH@ 5
------DEL SimpleName@@nodes @AT@ 17826 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new SesEndpoint(uri,getCamelContext(),configuration) @TO@ ClassInstanceCreation:new SesEndpoint(uri,this,configuration) @AT@ 1961 @LENGTH@ 62
---UPD ClassInstanceCreation@@SesEndpoint[uri, getCamelContext(), configuration] @TO@ SesEndpoint[uri, this, configuration] @AT@ 1968 @LENGTH@ 54
------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 1989 @LENGTH@ 17
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@SesEndpoint[uri, getCamelContext(), configuration] @AT@ 1989 @LENGTH@ 4


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[@Converter, public, final]FutureTypeConverter, [TypeConverter] @AT@ 4383 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4383 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4394 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4396 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4409 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4409 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 4409 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 4415 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4418 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4424 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 4424 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 4431 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 4448 @LENGTH@ 121
------INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @AT@ 4466 @LENGTH@ 36
---------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 4473 @LENGTH@ 28
------------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 4473 @LENGTH@ 28
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 4483 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 4489 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 4495 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @AT@ 4513 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 4520 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 4520 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 4530 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 4547 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4554 @LENGTH@ 4


UPD CatchClause@@catch (Exception e) {  if (e instanceof ExecutionException) {  } else   if (e instanceof IOException) {    throw (IOException)e;  } else {    throw new RuntimeException(e);  }} @TO@ catch (Exception e) {  if (e instanceof IOException) {    final Throwable cause=e.getCause();    if (cause instanceof ExecutionException) {    } else {      throw (IOException)e;    }  } else {    throw new RuntimeException(e);  }} @AT@ 12780 @LENGTH@ 350
---DEL IfStatement@@if (e instanceof ExecutionException) {} else if (e instanceof IOException) {  throw (IOException)e;} else {  throw new RuntimeException(e);} @AT@ 12813 @LENGTH@ 307
------DEL InstanceofExpression@@e instanceof ExecutionException @AT@ 12816 @LENGTH@ 31
---------DEL SimpleName@@e @AT@ 12816 @LENGTH@ 1
---------DEL Instanceof@@instanceof @AT@ 12818 @LENGTH@ 10
---------DEL SimpleType@@ExecutionException @AT@ 12829 @LENGTH@ 18
------DEL Block@@ThenBody:{} @AT@ 12849 @LENGTH@ 114
------DEL Block@@ElseBody:if (e instanceof IOException) {  throw (IOException)e;} else {  throw new RuntimeException(e);} @AT@ 12969 @LENGTH@ 151
---MOV IfStatement@@if (e instanceof IOException) {  throw (IOException)e;} else {  throw new RuntimeException(e);} @TO@ CatchClause@@catch (Exception e) {  if (e instanceof ExecutionException) {  } else   if (e instanceof IOException) {    throw (IOException)e;  } else {    throw new RuntimeException(e);  }} @AT@ 12969 @LENGTH@ 151
------INS Block@@ThenBody:{  final Throwable cause=e.getCause();  if (cause instanceof ExecutionException) {  } else {    throw (IOException)e;  }} @TO@ IfStatement@@if (e instanceof IOException) {  throw (IOException)e;} else {  throw new RuntimeException(e);} @AT@ 12842 @LENGTH@ 316
---------INS VariableDeclarationStatement@@final Throwable cause=e.getCause(); @TO@ Block@@ThenBody:{  final Throwable cause=e.getCause();  if (cause instanceof ExecutionException) {  } else {    throw (IOException)e;  }} @AT@ 12860 @LENGTH@ 37
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Throwable cause=e.getCause(); @AT@ 12860 @LENGTH@ 5
------------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@final Throwable cause=e.getCause(); @AT@ 12866 @LENGTH@ 9
------------INS VariableDeclarationFragment@@cause=e.getCause() @TO@ VariableDeclarationStatement@@final Throwable cause=e.getCause(); @AT@ 12876 @LENGTH@ 20
---------------INS SimpleName@@cause @TO@ VariableDeclarationFragment@@cause=e.getCause() @AT@ 12876 @LENGTH@ 5
---------------INS MethodInvocation@@e.getCause() @TO@ VariableDeclarationFragment@@cause=e.getCause() @AT@ 12884 @LENGTH@ 12
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 12884 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 12886 @LENGTH@ 10
---------INS IfStatement@@if (cause instanceof ExecutionException) {} else {  throw (IOException)e;} @TO@ Block@@ThenBody:{  final Throwable cause=e.getCause();  if (cause instanceof ExecutionException) {  } else {    throw (IOException)e;  }} @AT@ 12914 @LENGTH@ 230
------------INS InstanceofExpression@@cause instanceof ExecutionException @TO@ IfStatement@@if (cause instanceof ExecutionException) {} else {  throw (IOException)e;} @AT@ 12917 @LENGTH@ 35
---------------INS SimpleName@@cause @TO@ InstanceofExpression@@cause instanceof ExecutionException @AT@ 12917 @LENGTH@ 5
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@cause instanceof ExecutionException @AT@ 12923 @LENGTH@ 10
---------------INS SimpleType@@ExecutionException @TO@ InstanceofExpression@@cause instanceof ExecutionException @AT@ 12934 @LENGTH@ 18
------------INS Block@@ThenBody:{} @TO@ IfStatement@@if (cause instanceof ExecutionException) {} else {  throw (IOException)e;} @AT@ 12954 @LENGTH@ 122
------------MOV Block@@ThenBody:{  throw (IOException)e;} @TO@ IfStatement@@if (cause instanceof ExecutionException) {} else {  throw (IOException)e;} @AT@ 12998 @LENGTH@ 54
------UPD Block@@ThenBody:{  throw (IOException)e;} @TO@ ElseBody:{  throw (IOException)e;} @AT@ 12998 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.failedToCloseResource(t,closeable) @TO@ MethodInvocation:MGMT_OP_LOGGER.failedToCloseResource(t,closeable) @AT@ 3902 @LENGTH@ 48
---UPD MethodInvocation@@ROOT_LOGGER.failedToCloseResource(t,closeable) @TO@ MGMT_OP_LOGGER.failedToCloseResource(t,closeable) @AT@ 3902 @LENGTH@ 47
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 3902 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3859 @LENGTH@ 1001
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 3918 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3918 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3924 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3931 @LENGTH@ 11


UPD FieldDeclaration@@private, final, static, Logger, [LOG=LoggerFactory.getLogger(CdiBeanRegistry.class)] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(CdiBeanRegistry.class)] @AT@ 1240 @LENGTH@ 81
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, Logger, [LOG=LoggerFactory.getLogger(CdiBeanRegistry.class)] @AT@ 1248 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1254 @LENGTH@ 6


UPD TryStatement@@try {  processor=builder.createErrorHandler(routeContext,processor);  ServiceHelper.startServices(processor);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ try {  processor=builder.createErrorHandler(routeContext,processor);  answer=createUnitOfWorkProcessor(routeContext,processor,exchange);  ServiceHelper.startServices(answer);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 41398 @LENGTH@ 305
---UPD ExpressionStatement@@MethodInvocation:ServiceHelper.startServices(processor) @TO@ MethodInvocation:ServiceHelper.startServices(answer) @AT@ 41549 @LENGTH@ 39
------UPD MethodInvocation@@ServiceHelper.startServices(processor) @TO@ ServiceHelper.startServices(answer) @AT@ 41549 @LENGTH@ 38
---------UPD SimpleName@@MethodName:startServices:[processor] @TO@ MethodName:startServices:[answer] @AT@ 41563 @LENGTH@ 24
------------UPD SimpleName@@processor @TO@ answer @AT@ 41577 @LENGTH@ 9
---MOV ExpressionStatement@@Assignment:answer=createUnitOfWorkProcessor(routeContext,processor,exchange) @TO@ TryStatement@@try {  processor=builder.createErrorHandler(routeContext,processor);  ServiceHelper.startServices(processor);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 41811 @LENGTH@ 70


UPD ExpressionStatement@@MethodInvocation:ParsingUtils.setPropertyValue(element,builder,"pdx-disk-store","pdxDiskStore") @TO@ MethodInvocation:ParsingUtils.setPropertyValue(element,builder,"pdx-disk-store","pdxDiskStoreName") @AT@ 1811 @LENGTH@ 82
---UPD MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"pdx-disk-store","pdxDiskStore") @TO@ ParsingUtils.setPropertyValue(element,builder,"pdx-disk-store","pdxDiskStoreName") @AT@ 1811 @LENGTH@ 81
------UPD SimpleName@@MethodName:setPropertyValue:[element, builder, "pdx-disk-store", "pdxDiskStore"] @TO@ MethodName:setPropertyValue:[element, builder, "pdx-disk-store", "pdxDiskStoreName"] @AT@ 1824 @LENGTH@ 68
---------UPD StringLiteral@@"pdxDiskStore" @TO@ "pdxDiskStoreName" @AT@ 1877 @LENGTH@ 14


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public, static, final]MyFooBean, [TypeConverter, Serializable] @AT@ 9418 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 9418 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 9429 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 9431 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 9444 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9444 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 9444 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 9450 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 9453 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 9459 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 9459 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 9466 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 9487 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 9494 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 9494 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9504 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 9510 @LENGTH@ 5


UPD VariableDeclarationStatement@@URL url=new URL("http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl"); @TO@ URL url=new URL("http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207/?wsdl"); @AT@ 4040 @LENGTH@ 89
---UPD VariableDeclarationFragment@@url=new URL("http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl") @TO@ url=new URL("http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207/?wsdl") @AT@ 4044 @LENGTH@ 84
------UPD ClassInstanceCreation@@URL["http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl"] @TO@ URL["http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207/?wsdl"] @AT@ 4050 @LENGTH@ 78
---------UPD InfixExpression@@"http://" + ServerAddress.getServerAddress() + ":8080/jbws3207/?wsdl" @TO@ "http://" + TestSuiteEnvironment.getServerAddress() + ":8080/jbws3207/?wsdl" @AT@ 4058 @LENGTH@ 69
------------UPD MethodInvocation@@ServerAddress.getServerAddress() @TO@ TestSuiteEnvironment.getServerAddress() @AT@ 4070 @LENGTH@ 32
---------------UPD SimpleName@@Name:ServerAddress @TO@ Name:TestSuiteEnvironment @AT@ 4070 @LENGTH@ 13


UPD EnhancedForStatement@@for (String bindingName : bindings.keys()) {  ModelNode binding=bindings.get(bindingName);  writer.writeStartElement(Element.SOCKET_BINDING.getLocalName());  writeAttribute(writer,Attribute.NAME,bindingName);  ModelNode attr=binding.get(INTERFACE);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.INTERFACE,attr.asString());  }  attr=binding.get(PORT);  writeAttribute(writer,Attribute.PORT,attr.asString());  attr=binding.get(FIXED_PORT);  if (attr.isDefined() && attr.asBoolean()) {    writeAttribute(writer,Attribute.FIXED_PORT,attr.asString());  }  attr=binding.get(MULTICAST_ADDRESS);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_ADDRESS,attr.asString());  }  attr=binding.get(MULTICAST_PORT);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_PORT,attr.asString());  }  attr=binding.get(CLIENT_MAPPINGS);  if (attr.isDefined()) {    for (    ModelNode mapping : attr.asList()) {      writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());      attr=mapping.get(SOURCE_NETWORK);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());      }      attr=mapping.get(DESTINATION_ADDRESS);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());      }      attr=mapping.get(DESTINATION_PORT);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());      }    }  }  writer.writeEndElement();  attr=binding.get(CLIENT_MAPPINGS);  if (attr.isDefined()) {    for (    ModelNode mapping : attr.asList()) {      writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());      attr=binding.get(SOURCE_NETWORK);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());      }      attr=binding.get(DESTINATION_ADDRESS);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());      }      attr=binding.get(DESTINATION_PORT);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());      }    }  }} @TO@ for (String bindingName : bindings.keys()) {  ModelNode binding=bindings.get(bindingName);  writer.writeStartElement(Element.SOCKET_BINDING.getLocalName());  writeAttribute(writer,Attribute.NAME,bindingName);  ModelNode attr=binding.get(INTERFACE);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.INTERFACE,attr.asString());  }  attr=binding.get(PORT);  writeAttribute(writer,Attribute.PORT,attr.asString());  attr=binding.get(FIXED_PORT);  if (attr.isDefined() && attr.asBoolean()) {    writeAttribute(writer,Attribute.FIXED_PORT,attr.asString());  }  attr=binding.get(MULTICAST_ADDRESS);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_ADDRESS,attr.asString());  }  attr=binding.get(MULTICAST_PORT);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_PORT,attr.asString());  }  attr=binding.get(CLIENT_MAPPINGS);  if (attr.isDefined()) {    for (    ModelNode mapping : attr.asList()) {      writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());      attr=mapping.get(SOURCE_NETWORK);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());      }      attr=mapping.get(DESTINATION_ADDRESS);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());      }      attr=mapping.get(DESTINATION_PORT);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());      }    }  }  writer.writeEndElement();} @AT@ 78779 @LENGTH@ 3215
---DEL ExpressionStatement@@Assignment:attr=binding.get(CLIENT_MAPPINGS) @AT@ 81009 @LENGTH@ 36
------DEL Assignment@@attr=binding.get(CLIENT_MAPPINGS) @AT@ 81009 @LENGTH@ 35
---------DEL SimpleName@@attr @AT@ 81009 @LENGTH@ 4
---------DEL Operator@@= @AT@ 81013 @LENGTH@ 1
---------DEL MethodInvocation@@binding.get(CLIENT_MAPPINGS) @AT@ 81016 @LENGTH@ 28
------------DEL SimpleName@@Name:binding @AT@ 81016 @LENGTH@ 7
------------DEL SimpleName@@MethodName:get:[CLIENT_MAPPINGS] @AT@ 81024 @LENGTH@ 20
---------------DEL SimpleName@@CLIENT_MAPPINGS @AT@ 81028 @LENGTH@ 15
---DEL IfStatement@@if (attr.isDefined()) {  for (  ModelNode mapping : attr.asList()) {    writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());    attr=binding.get(SOURCE_NETWORK);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());    }    attr=binding.get(DESTINATION_ADDRESS);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());    }    attr=binding.get(DESTINATION_PORT);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());    }  }} @AT@ 81062 @LENGTH@ 918
------DEL MethodInvocation@@attr.isDefined() @AT@ 81066 @LENGTH@ 16
---------DEL SimpleName@@Name:attr @AT@ 81066 @LENGTH@ 4
---------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81071 @LENGTH@ 11
------DEL Block@@ThenBody:{  for (  ModelNode mapping : attr.asList()) {    writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());    attr=binding.get(SOURCE_NETWORK);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());    }    attr=binding.get(DESTINATION_ADDRESS);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());    }    attr=binding.get(DESTINATION_PORT);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());    }  }} @AT@ 81084 @LENGTH@ 896
---------DEL EnhancedForStatement@@for (ModelNode mapping : attr.asList()) {  writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());  attr=binding.get(SOURCE_NETWORK);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());  }  attr=binding.get(DESTINATION_ADDRESS);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());  }  attr=binding.get(DESTINATION_PORT);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());  }} @AT@ 81106 @LENGTH@ 856
------------DEL SingleVariableDeclaration@@ModelNode mapping @AT@ 81111 @LENGTH@ 17
---------------DEL SimpleType@@ModelNode @AT@ 81111 @LENGTH@ 9
---------------DEL SimpleName@@mapping @AT@ 81121 @LENGTH@ 7
------------DEL MethodInvocation@@attr.asList() @AT@ 81131 @LENGTH@ 13
---------------DEL SimpleName@@Name:attr @AT@ 81131 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:asList:[] @AT@ 81136 @LENGTH@ 8
------------DEL ExpressionStatement@@MethodInvocation:writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName()) @AT@ 81172 @LENGTH@ 64
---------------DEL MethodInvocation@@writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName()) @AT@ 81172 @LENGTH@ 63
------------------DEL SimpleName@@Name:writer @AT@ 81172 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:writeEmptyElement:[Element.CLIENT_MAPPING.getLocalName()] @AT@ 81179 @LENGTH@ 56
---------------------DEL MethodInvocation@@Element.CLIENT_MAPPING.getLocalName() @AT@ 81197 @LENGTH@ 37
------------------------DEL QualifiedName@@Name:Element.CLIENT_MAPPING @AT@ 81197 @LENGTH@ 22
------------------------DEL SimpleName@@MethodName:getLocalName:[] @AT@ 81220 @LENGTH@ 14
------------DEL ExpressionStatement@@Assignment:attr=binding.get(SOURCE_NETWORK) @AT@ 81262 @LENGTH@ 35
---------------DEL Assignment@@attr=binding.get(SOURCE_NETWORK) @AT@ 81262 @LENGTH@ 34
------------------DEL SimpleName@@attr @AT@ 81262 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 81266 @LENGTH@ 1
------------------DEL MethodInvocation@@binding.get(SOURCE_NETWORK) @AT@ 81269 @LENGTH@ 27
---------------------DEL SimpleName@@Name:binding @AT@ 81269 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:get:[SOURCE_NETWORK] @AT@ 81277 @LENGTH@ 19
------------------------DEL SimpleName@@SOURCE_NETWORK @AT@ 81281 @LENGTH@ 14
------------DEL IfStatement@@if (attr.isDefined()) {  writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());} @AT@ 81322 @LENGTH@ 144
---------------DEL MethodInvocation@@attr.isDefined() @AT@ 81326 @LENGTH@ 16
------------------DEL SimpleName@@Name:attr @AT@ 81326 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81331 @LENGTH@ 11
---------------DEL Block@@ThenBody:{  writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());} @AT@ 81344 @LENGTH@ 122
------------------DEL ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString()) @AT@ 81374 @LENGTH@ 66
---------------------DEL MethodInvocation@@writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString()) @AT@ 81374 @LENGTH@ 65
------------------------DEL SimpleName@@MethodName:writeAttribute:[writer, Attribute.SOURCE_NETWORK, attr.asString()] @AT@ 81374 @LENGTH@ 65
---------------------------DEL SimpleName@@writer @AT@ 81389 @LENGTH@ 6
---------------------------DEL QualifiedName@@Attribute.SOURCE_NETWORK @AT@ 81397 @LENGTH@ 24
------------------------------DEL SimpleName@@Attribute @AT@ 81397 @LENGTH@ 9
------------------------------DEL SimpleName@@SOURCE_NETWORK @AT@ 81407 @LENGTH@ 14
---------------------------DEL MethodInvocation@@attr.asString() @AT@ 81423 @LENGTH@ 15
------------------------------DEL SimpleName@@Name:attr @AT@ 81423 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 81428 @LENGTH@ 10
------------DEL ExpressionStatement@@Assignment:attr=binding.get(DESTINATION_ADDRESS) @AT@ 81492 @LENGTH@ 40
---------------DEL Assignment@@attr=binding.get(DESTINATION_ADDRESS) @AT@ 81492 @LENGTH@ 39
------------------DEL SimpleName@@attr @AT@ 81492 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 81496 @LENGTH@ 1
------------------DEL MethodInvocation@@binding.get(DESTINATION_ADDRESS) @AT@ 81499 @LENGTH@ 32
---------------------DEL SimpleName@@Name:binding @AT@ 81499 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:get:[DESTINATION_ADDRESS] @AT@ 81507 @LENGTH@ 24
------------------------DEL SimpleName@@DESTINATION_ADDRESS @AT@ 81511 @LENGTH@ 19
------------DEL IfStatement@@if (attr.isDefined()) {  writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());} @AT@ 81557 @LENGTH@ 149
---------------DEL MethodInvocation@@attr.isDefined() @AT@ 81561 @LENGTH@ 16
------------------DEL SimpleName@@Name:attr @AT@ 81561 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81566 @LENGTH@ 11
---------------DEL Block@@ThenBody:{  writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());} @AT@ 81579 @LENGTH@ 127
------------------DEL ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString()) @AT@ 81609 @LENGTH@ 71
---------------------DEL MethodInvocation@@writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString()) @AT@ 81609 @LENGTH@ 70
------------------------DEL SimpleName@@MethodName:writeAttribute:[writer, Attribute.DESTINATION_ADDRESS, attr.asString()] @AT@ 81609 @LENGTH@ 70
---------------------------DEL SimpleName@@writer @AT@ 81624 @LENGTH@ 6
---------------------------DEL QualifiedName@@Attribute.DESTINATION_ADDRESS @AT@ 81632 @LENGTH@ 29
------------------------------DEL SimpleName@@Attribute @AT@ 81632 @LENGTH@ 9
------------------------------DEL SimpleName@@DESTINATION_ADDRESS @AT@ 81642 @LENGTH@ 19
---------------------------DEL MethodInvocation@@attr.asString() @AT@ 81663 @LENGTH@ 15
------------------------------DEL SimpleName@@Name:attr @AT@ 81663 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 81668 @LENGTH@ 10
------------DEL ExpressionStatement@@Assignment:attr=binding.get(DESTINATION_PORT) @AT@ 81732 @LENGTH@ 37
---------------DEL Assignment@@attr=binding.get(DESTINATION_PORT) @AT@ 81732 @LENGTH@ 36
------------------DEL SimpleName@@attr @AT@ 81732 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 81736 @LENGTH@ 1
------------------DEL MethodInvocation@@binding.get(DESTINATION_PORT) @AT@ 81739 @LENGTH@ 29
---------------------DEL SimpleName@@Name:binding @AT@ 81739 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:get:[DESTINATION_PORT] @AT@ 81747 @LENGTH@ 21
------------------------DEL SimpleName@@DESTINATION_PORT @AT@ 81751 @LENGTH@ 16
------------DEL IfStatement@@if (attr.isDefined()) {  writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());} @AT@ 81794 @LENGTH@ 146
---------------DEL MethodInvocation@@attr.isDefined() @AT@ 81798 @LENGTH@ 16
------------------DEL SimpleName@@Name:attr @AT@ 81798 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81803 @LENGTH@ 11
---------------DEL Block@@ThenBody:{  writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());} @AT@ 81816 @LENGTH@ 124
------------------DEL ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString()) @AT@ 81846 @LENGTH@ 68
---------------------DEL MethodInvocation@@writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString()) @AT@ 81846 @LENGTH@ 67
------------------------DEL SimpleName@@MethodName:writeAttribute:[writer, Attribute.DESTINATION_PORT, attr.asString()] @AT@ 81846 @LENGTH@ 67
---------------------------DEL SimpleName@@writer @AT@ 81861 @LENGTH@ 6
---------------------------DEL QualifiedName@@Attribute.DESTINATION_PORT @AT@ 81869 @LENGTH@ 26
------------------------------DEL SimpleName@@Attribute @AT@ 81869 @LENGTH@ 9
------------------------------DEL SimpleName@@DESTINATION_PORT @AT@ 81879 @LENGTH@ 16
---------------------------DEL MethodInvocation@@attr.asString() @AT@ 81897 @LENGTH@ 15
------------------------------DEL SimpleName@@Name:attr @AT@ 81897 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 81902 @LENGTH@ 10


INS MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @TO@ TypeDeclaration@@[public]S3Endpoint, ScheduledPollEndpoint @AT@ 2240 @LENGTH@ 154
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @AT@ 2240 @LENGTH@ 6
---INS SimpleName@@MethodName:S3Endpoint @TO@ MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @AT@ 2247 @LENGTH@ 10
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @AT@ 2258 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 2258 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 2265 @LENGTH@ 3
---INS SingleVariableDeclaration@@Component comp @TO@ MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @AT@ 2270 @LENGTH@ 14
------INS SimpleType@@Component @TO@ SingleVariableDeclaration@@Component comp @AT@ 2270 @LENGTH@ 9
------INS SimpleName@@comp @TO@ SingleVariableDeclaration@@Component comp @AT@ 2280 @LENGTH@ 4
---INS SingleVariableDeclaration@@S3Configuration configuration @TO@ MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @AT@ 2286 @LENGTH@ 29
------INS SimpleType@@S3Configuration @TO@ SingleVariableDeclaration@@S3Configuration configuration @AT@ 2286 @LENGTH@ 15
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@S3Configuration configuration @AT@ 2302 @LENGTH@ 13
---INS SuperConstructorInvocation@@super(uri,comp);
 @TO@ MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @AT@ 2327 @LENGTH@ 17
------INS SimpleName@@uri @TO@ SuperConstructorInvocation@@super(uri,comp);
 @AT@ 2333 @LENGTH@ 3
------INS SimpleName@@comp @TO@ SuperConstructorInvocation@@super(uri,comp);
 @AT@ 2338 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:this.configuration=configuration @TO@ MethodDeclaration@@public, voidMethodName:S3Endpoint, String uri, Component comp, S3Configuration configuration,  @AT@ 2353 @LENGTH@ 35
------INS Assignment@@this.configuration=configuration @TO@ ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 2353 @LENGTH@ 34
---------INS FieldAccess@@this.configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2353 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.configuration @AT@ 2353 @LENGTH@ 4
------------INS SimpleName@@configuration @TO@ FieldAccess@@this.configuration @AT@ 2358 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.configuration=configuration @AT@ 2371 @LENGTH@ 1
---------INS SimpleName@@configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2374 @LENGTH@ 13


INS IfStatement@@if (options.getProxyUri() != null) {  appendToLineInFile(sb,"etc/org.ops4j.pax.url.mvn.cfg","repositories=",options.getProxyUri().toString() + ",");} @TO@ MethodDeclaration@@public, static, String, MethodName:buildInstallAndStartScript, CreateContainerOptions options, MalformedURLException, URISyntaxException,  @AT@ 7165 @LENGTH@ 172
---INS InfixExpression@@options.getProxyUri() != null @TO@ IfStatement@@if (options.getProxyUri() != null) {  appendToLineInFile(sb,"etc/org.ops4j.pax.url.mvn.cfg","repositories=",options.getProxyUri().toString() + ",");} @AT@ 7169 @LENGTH@ 29
------INS MethodInvocation@@options.getProxyUri() @TO@ InfixExpression@@options.getProxyUri() != null @AT@ 7169 @LENGTH@ 21
---------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getProxyUri() @AT@ 7169 @LENGTH@ 7
---------INS SimpleName@@MethodName:getProxyUri:[] @TO@ MethodInvocation@@options.getProxyUri() @AT@ 7177 @LENGTH@ 13
------INS Operator@@!= @TO@ InfixExpression@@options.getProxyUri() != null @AT@ 7190 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@options.getProxyUri() != null @AT@ 7194 @LENGTH@ 4
---INS Block@@ThenBody:{  appendToLineInFile(sb,"etc/org.ops4j.pax.url.mvn.cfg","repositories=",options.getProxyUri().toString() + ",");} @TO@ IfStatement@@if (options.getProxyUri() != null) {  appendToLineInFile(sb,"etc/org.ops4j.pax.url.mvn.cfg","repositories=",options.getProxyUri().toString() + ",");} @AT@ 7200 @LENGTH@ 137
------MOV ExpressionStatement@@MethodInvocation:appendToLineInFile(sb,"etc/org.ops4j.pax.url.mvn.cfg","repositories=",options.getProxyUri().toString() + ",") @TO@ Block@@ThenBody:{  appendToLineInFile(sb,"etc/org.ops4j.pax.url.mvn.cfg","repositories=",options.getProxyUri().toString() + ",");} @AT@ 7165 @LENGTH@ 113


UPD IfStatement@@if (descriptorData.isSession() || descriptorData.isMessageDriven()) {  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }  parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex);} @TO@ if (description.isSession() || description.isMessageDriven()) {  assert descriptorData instanceof ITimeoutTarget : descriptorData + " is not an ITimeoutTarget";  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }  parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex);} @AT@ 4491 @LENGTH@ 445
---UPD InfixExpression@@descriptorData.isSession() || descriptorData.isMessageDriven() @TO@ description.isSession() || description.isMessageDriven() @AT@ 4495 @LENGTH@ 62
------UPD MethodInvocation@@descriptorData.isSession() @TO@ description.isSession() @AT@ 4495 @LENGTH@ 26
---------UPD SimpleName@@Name:descriptorData @TO@ Name:description @AT@ 4495 @LENGTH@ 14
------UPD MethodInvocation@@descriptorData.isMessageDriven() @TO@ description.isMessageDriven() @AT@ 4525 @LENGTH@ 32
---------UPD SimpleName@@Name:descriptorData @TO@ Name:description @AT@ 4525 @LENGTH@ 14
---UPD Block@@ThenBody:{  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }  parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex);} @TO@ ThenBody:{  assert descriptorData instanceof ITimeoutTarget : descriptorData + " is not an ITimeoutTarget";  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }  parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex);} @AT@ 4559 @LENGTH@ 377
------INS AssertStatement@@InstanceofExpression:descriptorData instanceof ITimeoutTarget, Msg-InfixExpression:descriptorData + " is not an ITimeoutTarget" @TO@ Block@@ThenBody:{  ITimeoutTarget target=(ITimeoutTarget)descriptorData;  if (target.getTimeoutMethod() != null) {    parseTimeoutMethod(target,description,componentClass,deploymentReflectionIndex);  }  parseScheduleMethods(descriptorData,description,componentClass,deploymentReflectionIndex);} @AT@ 4571 @LENGTH@ 95
---------INS InstanceofExpression@@descriptorData instanceof ITimeoutTarget @TO@ AssertStatement@@InstanceofExpression:descriptorData instanceof ITimeoutTarget, Msg-InfixExpression:descriptorData + " is not an ITimeoutTarget" @AT@ 4578 @LENGTH@ 40
------------INS SimpleName@@descriptorData @TO@ InstanceofExpression@@descriptorData instanceof ITimeoutTarget @AT@ 4578 @LENGTH@ 14
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@descriptorData instanceof ITimeoutTarget @AT@ 4593 @LENGTH@ 10
------------INS SimpleType@@ITimeoutTarget @TO@ InstanceofExpression@@descriptorData instanceof ITimeoutTarget @AT@ 4604 @LENGTH@ 14
---------INS InfixExpression@@descriptorData + " is not an ITimeoutTarget" @TO@ AssertStatement@@InstanceofExpression:descriptorData instanceof ITimeoutTarget, Msg-InfixExpression:descriptorData + " is not an ITimeoutTarget" @AT@ 4621 @LENGTH@ 44
------------INS SimpleName@@descriptorData @TO@ InfixExpression@@descriptorData + " is not an ITimeoutTarget" @AT@ 4621 @LENGTH@ 14
------------INS Operator@@+ @TO@ InfixExpression@@descriptorData + " is not an ITimeoutTarget" @AT@ 4635 @LENGTH@ 1
------------INS StringLiteral@@" is not an ITimeoutTarget" @TO@ InfixExpression@@descriptorData + " is not an ITimeoutTarget" @AT@ 4638 @LENGTH@ 27


INS ExpressionStatement@@MethodInvocation:war.addClass(AbstractSecurityDomainSetup.class) @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 3980 @LENGTH@ 48
---INS MethodInvocation@@war.addClass(AbstractSecurityDomainSetup.class) @TO@ ExpressionStatement@@MethodInvocation:war.addClass(AbstractSecurityDomainSetup.class) @AT@ 3980 @LENGTH@ 47
------INS SimpleName@@Name:war @TO@ MethodInvocation@@war.addClass(AbstractSecurityDomainSetup.class) @AT@ 3980 @LENGTH@ 3
------INS SimpleName@@MethodName:addClass:[AbstractSecurityDomainSetup.class] @TO@ MethodInvocation@@war.addClass(AbstractSecurityDomainSetup.class) @AT@ 3984 @LENGTH@ 43
---------INS TypeLiteral@@AbstractSecurityDomainSetup.class @TO@ SimpleName@@MethodName:addClass:[AbstractSecurityDomainSetup.class] @AT@ 3993 @LENGTH@ 33


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[private, static]MyLocalDateTimeConverter, [TypeConverter] @AT@ 2993 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2993 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3004 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3006 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3019 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3019 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3019 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3025 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3028 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3034 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3034 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3041 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3062 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3069 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3069 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3079 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3085 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:testcontentEqualsIgnoreEOL, Exception,  @TO@ public, void, MethodName:testContentEqualsIgnoreEOL, Exception,  @AT@ 24632 @LENGTH@ 959
---UPD SimpleName@@MethodName:testcontentEqualsIgnoreEOL @TO@ MethodName:testContentEqualsIgnoreEOL @AT@ 24644 @LENGTH@ 26


INS MethodDeclaration@@public, List<T>, MethodName:findAll, Iterable<ID> ids,  @TO@ TypeDeclaration@@[@org.springframework.stereotype.Repository, @Transactional(readOnly=true), public]SimpleJpaRepository, [JpaRepository<T,ID>, JpaSpecificationExecutor<T>] @AT@ 7180 @LENGTH@ 364
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<T>, MethodName:findAll, Iterable<ID> ids,  @AT@ 7180 @LENGTH@ 6
---INS ParameterizedType@@List<T> @TO@ MethodDeclaration@@public, List<T>, MethodName:findAll, Iterable<ID> ids,  @AT@ 7187 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<T> @AT@ 7187 @LENGTH@ 4
------INS SimpleType@@T @TO@ ParameterizedType@@List<T> @AT@ 7192 @LENGTH@ 1
---INS SimpleName@@MethodName:findAll @TO@ MethodDeclaration@@public, List<T>, MethodName:findAll, Iterable<ID> ids,  @AT@ 7195 @LENGTH@ 7
---INS SingleVariableDeclaration@@Iterable<ID> ids @TO@ MethodDeclaration@@public, List<T>, MethodName:findAll, Iterable<ID> ids,  @AT@ 7203 @LENGTH@ 16
------INS ParameterizedType@@Iterable<ID> @TO@ SingleVariableDeclaration@@Iterable<ID> ids @AT@ 7203 @LENGTH@ 12
---------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<ID> @AT@ 7203 @LENGTH@ 8
---------INS SimpleType@@ID @TO@ ParameterizedType@@Iterable<ID> @AT@ 7212 @LENGTH@ 2
------INS SimpleName@@ids @TO@ SingleVariableDeclaration@@Iterable<ID> ids @AT@ 7216 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:getQuery(new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
,(Sort)null).setParameter("ids",ids).getResultList() @TO@ MethodDeclaration@@public, List<T>, MethodName:findAll, Iterable<ID> ids,  @AT@ 7226 @LENGTH@ 315
------INS MethodInvocation@@getQuery(new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
,(Sort)null).setParameter("ids",ids).getResultList() @TO@ ReturnStatement@@MethodInvocation:getQuery(new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
,(Sort)null).setParameter("ids",ids).getResultList() @AT@ 7233 @LENGTH@ 307
---------INS MethodInvocation@@MethodName:setParameter:["ids", ids] @TO@ MethodInvocation@@getQuery(new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
,(Sort)null).setParameter("ids",ids).getResultList() @AT@ 7233 @LENGTH@ 291
------------INS StringLiteral@@"ids" @TO@ MethodInvocation@@MethodName:setParameter:["ids", ids] @AT@ 7513 @LENGTH@ 5
------------INS SimpleName@@ids @TO@ MethodInvocation@@MethodName:setParameter:["ids", ids] @AT@ 7520 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:getQuery:[new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
, (Sort)null] @TO@ MethodInvocation@@getQuery(new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
,(Sort)null).setParameter("ids",ids).getResultList() @AT@ 7233 @LENGTH@ 266
------------INS ClassInstanceCreation@@Specification<T>[] @TO@ MethodInvocation@@MethodName:getQuery:[new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
, (Sort)null] @AT@ 7242 @LENGTH@ 243
---------------INS New@@new @TO@ ClassInstanceCreation@@Specification<T>[] @AT@ 7242 @LENGTH@ 3
---------------INS ParameterizedType@@Specification<T> @TO@ ClassInstanceCreation@@Specification<T>[] @AT@ 7246 @LENGTH@ 16
------------------INS SimpleType@@Specification @TO@ ParameterizedType@@Specification<T> @AT@ 7246 @LENGTH@ 13
------------------INS SimpleType@@T @TO@ ParameterizedType@@Specification<T> @AT@ 7260 @LENGTH@ 1
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Specification<T>[] @AT@ 7265 @LENGTH@ 220
------------------INS MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7270 @LENGTH@ 211
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7270 @LENGTH@ 6
---------------------INS SimpleType@@Predicate @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7277 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:toPredicate @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7287 @LENGTH@ 11
---------------------INS SingleVariableDeclaration@@Root<T> root @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7299 @LENGTH@ 12
------------------------INS ParameterizedType@@Root<T> @TO@ SingleVariableDeclaration@@Root<T> root @AT@ 7299 @LENGTH@ 7
---------------------------INS SimpleType@@Root @TO@ ParameterizedType@@Root<T> @AT@ 7299 @LENGTH@ 4
---------------------------INS SimpleType@@T @TO@ ParameterizedType@@Root<T> @AT@ 7304 @LENGTH@ 1
------------------------INS SimpleName@@root @TO@ SingleVariableDeclaration@@Root<T> root @AT@ 7307 @LENGTH@ 4
---------------------INS SingleVariableDeclaration@@CriteriaQuery<?> query @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7313 @LENGTH@ 22
------------------------INS ParameterizedType@@CriteriaQuery<?> @TO@ SingleVariableDeclaration@@CriteriaQuery<?> query @AT@ 7313 @LENGTH@ 16
---------------------------INS SimpleType@@CriteriaQuery @TO@ ParameterizedType@@CriteriaQuery<?> @AT@ 7313 @LENGTH@ 13
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@CriteriaQuery<?> @AT@ 7327 @LENGTH@ 1
------------------------INS SimpleName@@query @TO@ SingleVariableDeclaration@@CriteriaQuery<?> query @AT@ 7330 @LENGTH@ 5
---------------------INS SingleVariableDeclaration@@CriteriaBuilder cb @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7337 @LENGTH@ 18
------------------------INS SimpleType@@CriteriaBuilder @TO@ SingleVariableDeclaration@@CriteriaBuilder cb @AT@ 7337 @LENGTH@ 15
------------------------INS SimpleName@@cb @TO@ SingleVariableDeclaration@@CriteriaBuilder cb @AT@ 7353 @LENGTH@ 2
---------------------INS VariableDeclarationStatement@@Path<?> path=root.get(entityInformation.getIdAttribute()); @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7363 @LENGTH@ 60
------------------------INS ParameterizedType@@Path<?> @TO@ VariableDeclarationStatement@@Path<?> path=root.get(entityInformation.getIdAttribute()); @AT@ 7363 @LENGTH@ 7
---------------------------INS SimpleType@@Path @TO@ ParameterizedType@@Path<?> @AT@ 7363 @LENGTH@ 4
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Path<?> @AT@ 7368 @LENGTH@ 1
------------------------INS VariableDeclarationFragment@@path=root.get(entityInformation.getIdAttribute()) @TO@ VariableDeclarationStatement@@Path<?> path=root.get(entityInformation.getIdAttribute()); @AT@ 7371 @LENGTH@ 51
---------------------------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=root.get(entityInformation.getIdAttribute()) @AT@ 7371 @LENGTH@ 4
---------------------------INS MethodInvocation@@root.get(entityInformation.getIdAttribute()) @TO@ VariableDeclarationFragment@@path=root.get(entityInformation.getIdAttribute()) @AT@ 7378 @LENGTH@ 44
------------------------------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.get(entityInformation.getIdAttribute()) @AT@ 7378 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:get:[entityInformation.getIdAttribute()] @TO@ MethodInvocation@@root.get(entityInformation.getIdAttribute()) @AT@ 7383 @LENGTH@ 39
---------------------------------INS MethodInvocation@@entityInformation.getIdAttribute() @TO@ SimpleName@@MethodName:get:[entityInformation.getIdAttribute()] @AT@ 7387 @LENGTH@ 34
------------------------------------INS SimpleName@@Name:entityInformation @TO@ MethodInvocation@@entityInformation.getIdAttribute() @AT@ 7387 @LENGTH@ 17
------------------------------------INS SimpleName@@MethodName:getIdAttribute:[] @TO@ MethodInvocation@@entityInformation.getIdAttribute() @AT@ 7405 @LENGTH@ 16
---------------------INS ReturnStatement@@MethodInvocation:path.in(cb.parameter(List.class,"ids")) @TO@ MethodDeclaration@@public, Predicate, MethodName:toPredicate, Root<T> root, CriteriaQuery<?> query, CriteriaBuilder cb,  @AT@ 7428 @LENGTH@ 48
------------------------INS MethodInvocation@@path.in(cb.parameter(List.class,"ids")) @TO@ ReturnStatement@@MethodInvocation:path.in(cb.parameter(List.class,"ids")) @AT@ 7435 @LENGTH@ 40
---------------------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.in(cb.parameter(List.class,"ids")) @AT@ 7435 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:in:[cb.parameter(List.class,"ids")] @TO@ MethodInvocation@@path.in(cb.parameter(List.class,"ids")) @AT@ 7440 @LENGTH@ 35
------------------------------INS MethodInvocation@@cb.parameter(List.class,"ids") @TO@ SimpleName@@MethodName:in:[cb.parameter(List.class,"ids")] @AT@ 7443 @LENGTH@ 31
---------------------------------INS SimpleName@@Name:cb @TO@ MethodInvocation@@cb.parameter(List.class,"ids") @AT@ 7443 @LENGTH@ 2
---------------------------------INS SimpleName@@MethodName:parameter:[List.class, "ids"] @TO@ MethodInvocation@@cb.parameter(List.class,"ids") @AT@ 7446 @LENGTH@ 28
------------------------------------INS TypeLiteral@@List.class @TO@ SimpleName@@MethodName:parameter:[List.class, "ids"] @AT@ 7456 @LENGTH@ 10
------------------------------------INS StringLiteral@@"ids" @TO@ SimpleName@@MethodName:parameter:[List.class, "ids"] @AT@ 7468 @LENGTH@ 5
------------INS CastExpression@@(Sort)null @TO@ MethodInvocation@@MethodName:getQuery:[new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
, (Sort)null] @AT@ 7487 @LENGTH@ 11
---------------INS SimpleType@@Sort @TO@ CastExpression@@(Sort)null @AT@ 7488 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ CastExpression@@(Sort)null @AT@ 7494 @LENGTH@ 4
---------INS SimpleName@@MethodName:getResultList:[] @TO@ MethodInvocation@@getQuery(new Specification<T>(){
  public Predicate toPredicate(  Root<T> root,  CriteriaQuery<?> query,  CriteriaBuilder cb){
    Path<?> path=root.get(entityInformation.getIdAttribute());
    return path.in(cb.parameter(List.class,"ids"));
  }
}
,(Sort)null).setParameter("ids",ids).getResultList() @AT@ 7525 @LENGTH@ 15


DEL VariableDeclarationStatement@@Map.Entry<NetworkInterface,Set<InetAddress>> entry=allCandidates.entrySet().iterator().next(); @AT@ 1716 @LENGTH@ 97
---DEL VariableDeclarationFragment@@entry=allCandidates.entrySet().iterator().next() @AT@ 1762 @LENGTH@ 50
------DEL SimpleName@@entry @AT@ 1762 @LENGTH@ 5
------DEL MethodInvocation@@allCandidates.entrySet().iterator().next() @AT@ 1770 @LENGTH@ 42
---------DEL MethodInvocation@@MethodName:iterator:[] @AT@ 1770 @LENGTH@ 35
---------DEL MethodInvocation@@MethodName:entrySet:[] @AT@ 1770 @LENGTH@ 24


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("add-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.addProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("add-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.addProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1978 @LENGTH@ 746
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("add-proxy: %s",operation);      Proxy proxy=new Proxy(operation);      modcluster.addProxy(proxy.host,proxy.port);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1982 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1982 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1982 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1990 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2006 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2010 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2010 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2010 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2037 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2010 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2044 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2055 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2055 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2073 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2078 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2080 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1982 @LENGTH@ 24


UPD SwitchStatement@@switch (element) {case HTTP_METHOD_CONSTRAINT:  List<HttpMethodConstraintMetaData> httpMethodConstraints=servletSecurity.getHttpMethodConstraints();if (httpMethodConstraints == null) {  httpMethodConstraints=new ArrayList<HttpMethodConstraintMetaData>();  servletSecurity.setHttpMethodConstraints(httpMethodConstraints);}httpMethodConstraints.add(HttpMethodConstraintMetaDataParser.parse(reader));break;case EMPTY_ROLE_SEMANTIC:servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader)));break;case TRANSPORT_GUARANTEE:servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));break;case ROLE_ALLOWED:List<String> rolesAllowed=servletSecurity.getRolesAllowed();if (rolesAllowed == null) {rolesAllowed=new ArrayList<String>();servletSecurity.setRolesAllowed(rolesAllowed);}rolesAllowed.add(getElementText(reader));break;default :throw unexpectedElement(reader);} @TO@ switch (element) {case HTTP_METHOD_CONSTRAINT:  List<HttpMethodConstraintMetaData> httpMethodConstraints=servletSecurity.getHttpMethodConstraints();if (httpMethodConstraints == null) {  httpMethodConstraints=new ArrayList<HttpMethodConstraintMetaData>();  servletSecurity.setHttpMethodConstraints(httpMethodConstraints);}httpMethodConstraints.add(HttpMethodConstraintMetaDataParser.parse(reader));break;case EMPTY_ROLE_SEMANTIC:try {servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}break;case TRANSPORT_GUARANTEE:try {servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}break;case ROLE_ALLOWED:List<String> rolesAllowed=servletSecurity.getRolesAllowed();if (rolesAllowed == null) {rolesAllowed=new ArrayList<String>();servletSecurity.setRolesAllowed(rolesAllowed);}rolesAllowed.add(getElementText(reader));break;default :throw unexpectedElement(reader);} @AT@ 1988 @LENGTH@ 1423
---INS TryStatement@@try {  servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case HTTP_METHOD_CONSTRAINT:  List<HttpMethodConstraintMetaData> httpMethodConstraints=servletSecurity.getHttpMethodConstraints();if (httpMethodConstraints == null) {  httpMethodConstraints=new ArrayList<HttpMethodConstraintMetaData>();  servletSecurity.setHttpMethodConstraints(httpMethodConstraints);}httpMethodConstraints.add(HttpMethodConstraintMetaDataParser.parse(reader));break;case EMPTY_ROLE_SEMANTIC:servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader)));break;case TRANSPORT_GUARANTEE:servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));break;case ROLE_ALLOWED:List<String> rolesAllowed=servletSecurity.getRolesAllowed();if (rolesAllowed == null) {rolesAllowed=new ArrayList<String>();servletSecurity.setRolesAllowed(rolesAllowed);}rolesAllowed.add(getElementText(reader));break;default :throw unexpectedElement(reader);} @AT@ 2624 @LENGTH@ 261
------MOV ExpressionStatement@@MethodInvocation:servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2624 @LENGTH@ 92
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2769 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2776 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2776 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2801 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2830 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 2836 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 2836 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 2852 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 2860 @LENGTH@ 1
---INS TryStatement@@try {  servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case HTTP_METHOD_CONSTRAINT:  List<HttpMethodConstraintMetaData> httpMethodConstraints=servletSecurity.getHttpMethodConstraints();if (httpMethodConstraints == null) {  httpMethodConstraints=new ArrayList<HttpMethodConstraintMetaData>();  servletSecurity.setHttpMethodConstraints(httpMethodConstraints);}httpMethodConstraints.add(HttpMethodConstraintMetaDataParser.parse(reader));break;case EMPTY_ROLE_SEMANTIC:servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(getElementText(reader)));break;case TRANSPORT_GUARANTEE:servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));break;case ROLE_ALLOWED:List<String> rolesAllowed=servletSecurity.getRolesAllowed();if (rolesAllowed == null) {rolesAllowed=new ArrayList<String>();servletSecurity.setRolesAllowed(rolesAllowed);}rolesAllowed.add(getElementText(reader));break;default :throw unexpectedElement(reader);} @AT@ 2975 @LENGTH@ 263
------MOV ExpressionStatement@@MethodInvocation:servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2806 @LENGTH@ 94
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3122 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3129 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3129 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3154 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3183 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 3189 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 3189 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3205 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3213 @LENGTH@ 1


UPD IfStatement@@if (attr != idAttribute && attr != versionAttribute) {  embeddedAttributes.put(attr.getName(),new JpaAttributeMetadata(entityType,attr));} @TO@ if (!(attr instanceof SingularAttribute && ((SingularAttribute)attr).isId()) && !(attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion())) {  embeddedAttributes.put(attr.getName(),new JpaAttributeMetadata(entityType,attr));} @AT@ 1654 @LENGTH@ 158
---UPD InfixExpression@@attr != idAttribute && attr != versionAttribute @TO@ !(attr instanceof SingularAttribute && ((SingularAttribute)attr).isId()) && !(attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion()) @AT@ 1658 @LENGTH@ 47
------DEL InfixExpression@@attr != idAttribute @AT@ 1658 @LENGTH@ 19
---------DEL SimpleName@@attr @AT@ 1658 @LENGTH@ 4
---------DEL SimpleName@@idAttribute @AT@ 1666 @LENGTH@ 11
------DEL InfixExpression@@attr != versionAttribute @AT@ 1681 @LENGTH@ 24
---------DEL SimpleName@@attr @AT@ 1681 @LENGTH@ 4
---------DEL SimpleName@@versionAttribute @AT@ 1689 @LENGTH@ 16
------INS PrefixExpression@@!(attr instanceof SingularAttribute && ((SingularAttribute)attr).isId()) @TO@ InfixExpression@@attr != idAttribute && attr != versionAttribute @AT@ 1712 @LENGTH@ 73
---------INS Operator@@! @TO@ PrefixExpression@@!(attr instanceof SingularAttribute && ((SingularAttribute)attr).isId()) @AT@ 1712 @LENGTH@ 1
---------INS ParenthesizedExpression@@(attr instanceof SingularAttribute && ((SingularAttribute)attr).isId()) @TO@ PrefixExpression@@!(attr instanceof SingularAttribute && ((SingularAttribute)attr).isId()) @AT@ 1713 @LENGTH@ 72
------------INS InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isId() @TO@ ParenthesizedExpression@@(attr instanceof SingularAttribute && ((SingularAttribute)attr).isId()) @AT@ 1714 @LENGTH@ 70
---------------MOV Operator@@!= @TO@ InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isId() @AT@ 1662 @LENGTH@ 2
---------------INS InstanceofExpression@@attr instanceof SingularAttribute @TO@ InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isId() @AT@ 1714 @LENGTH@ 33
------------------INS SimpleName@@attr @TO@ InstanceofExpression@@attr instanceof SingularAttribute @AT@ 1714 @LENGTH@ 4
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@attr instanceof SingularAttribute @AT@ 1719 @LENGTH@ 10
------------------INS SimpleType@@SingularAttribute @TO@ InstanceofExpression@@attr instanceof SingularAttribute @AT@ 1730 @LENGTH@ 17
---------------INS MethodInvocation@@((SingularAttribute)attr).isId() @TO@ InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isId() @AT@ 1751 @LENGTH@ 33
------------------INS ParenthesizedExpression@@((SingularAttribute)attr) @TO@ MethodInvocation@@((SingularAttribute)attr).isId() @AT@ 1751 @LENGTH@ 26
---------------------INS CastExpression@@(SingularAttribute)attr @TO@ ParenthesizedExpression@@((SingularAttribute)attr) @AT@ 1752 @LENGTH@ 24
------------------------INS SimpleType@@SingularAttribute @TO@ CastExpression@@(SingularAttribute)attr @AT@ 1753 @LENGTH@ 17
------------------------INS SimpleName@@attr @TO@ CastExpression@@(SingularAttribute)attr @AT@ 1772 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isId:[] @TO@ MethodInvocation@@((SingularAttribute)attr).isId() @AT@ 1778 @LENGTH@ 6
------INS PrefixExpression@@!(attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion()) @TO@ InfixExpression@@attr != idAttribute && attr != versionAttribute @AT@ 1801 @LENGTH@ 78
---------INS Operator@@! @TO@ PrefixExpression@@!(attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion()) @AT@ 1801 @LENGTH@ 1
---------INS ParenthesizedExpression@@(attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion()) @TO@ PrefixExpression@@!(attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion()) @AT@ 1802 @LENGTH@ 77
------------INS InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion() @TO@ ParenthesizedExpression@@(attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion()) @AT@ 1803 @LENGTH@ 75
---------------MOV Operator@@!= @TO@ InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion() @AT@ 1685 @LENGTH@ 2
---------------INS InstanceofExpression@@attr instanceof SingularAttribute @TO@ InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion() @AT@ 1803 @LENGTH@ 33
------------------INS SimpleName@@attr @TO@ InstanceofExpression@@attr instanceof SingularAttribute @AT@ 1803 @LENGTH@ 4
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@attr instanceof SingularAttribute @AT@ 1808 @LENGTH@ 10
------------------INS SimpleType@@SingularAttribute @TO@ InstanceofExpression@@attr instanceof SingularAttribute @AT@ 1819 @LENGTH@ 17
---------------INS MethodInvocation@@((SingularAttribute)attr).isVersion() @TO@ InfixExpression@@attr instanceof SingularAttribute && ((SingularAttribute)attr).isVersion() @AT@ 1840 @LENGTH@ 38
------------------INS ParenthesizedExpression@@((SingularAttribute)attr) @TO@ MethodInvocation@@((SingularAttribute)attr).isVersion() @AT@ 1840 @LENGTH@ 26
---------------------INS CastExpression@@(SingularAttribute)attr @TO@ ParenthesizedExpression@@((SingularAttribute)attr) @AT@ 1841 @LENGTH@ 24
------------------------INS SimpleType@@SingularAttribute @TO@ CastExpression@@(SingularAttribute)attr @AT@ 1842 @LENGTH@ 17
------------------------INS SimpleName@@attr @TO@ CastExpression@@(SingularAttribute)attr @AT@ 1861 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isVersion:[] @TO@ MethodInvocation@@((SingularAttribute)attr).isVersion() @AT@ 1867 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, boolean, MethodName:requireNoChildResources,  @AT@ 1988 @LENGTH@ 410
---UPD PrimitiveType@@void @TO@ boolean @AT@ 1998 @LENGTH@ 4
---DEL SimpleName@@MethodName:performRemove @AT@ 2003 @LENGTH@ 13
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 2017 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 2017 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 2034 @LENGTH@ 7
---INS SimpleName@@MethodName:requireNoChildResources @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2020 @LENGTH@ 23
---DEL SingleVariableDeclaration@@ModelNode operation @AT@ 2043 @LENGTH@ 19
------DEL SimpleType@@ModelNode @AT@ 2043 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 2053 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2056 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2063 @LENGTH@ 4
---DEL SingleVariableDeclaration@@ModelNode model @AT@ 2064 @LENGTH@ 15
------DEL SimpleType@@ModelNode @AT@ 2064 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 2074 @LENGTH@ 5
---DEL SimpleType@@OperationFailedException @AT@ 2088 @LENGTH@ 24
---DEL IfStatement@@if (model.hasDefined(CommonAttributes.SCANNER) && model.get(CommonAttributes.SCANNER).asInt() > 0) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotRemoveSubsystem()));} @AT@ 2123 @LENGTH@ 213
------DEL InfixExpression@@model.hasDefined(CommonAttributes.SCANNER) && model.get(CommonAttributes.SCANNER).asInt() > 0 @AT@ 2127 @LENGTH@ 93
---------DEL MethodInvocation@@model.hasDefined(CommonAttributes.SCANNER) @AT@ 2127 @LENGTH@ 42
------------DEL SimpleName@@Name:model @AT@ 2127 @LENGTH@ 5
------------DEL SimpleName@@MethodName:hasDefined:[CommonAttributes.SCANNER] @AT@ 2133 @LENGTH@ 36
---------------DEL QualifiedName@@CommonAttributes.SCANNER @AT@ 2144 @LENGTH@ 24
------------------DEL SimpleName@@CommonAttributes @AT@ 2144 @LENGTH@ 16
------------------DEL SimpleName@@SCANNER @AT@ 2161 @LENGTH@ 7
---------DEL Operator@@&& @AT@ 2169 @LENGTH@ 2
---------DEL InfixExpression@@model.get(CommonAttributes.SCANNER).asInt() > 0 @AT@ 2173 @LENGTH@ 47
------------DEL MethodInvocation@@model.get(CommonAttributes.SCANNER).asInt() @AT@ 2173 @LENGTH@ 43
---------------DEL MethodInvocation@@MethodName:get:[CommonAttributes.SCANNER] @AT@ 2173 @LENGTH@ 35
------------------DEL QualifiedName@@CommonAttributes.SCANNER @AT@ 2183 @LENGTH@ 24
---------------------DEL SimpleName@@CommonAttributes @AT@ 2183 @LENGTH@ 16
---------------------DEL SimpleName@@SCANNER @AT@ 2200 @LENGTH@ 7
---------------DEL SimpleName@@Name:model @AT@ 2173 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:asInt:[] @AT@ 2209 @LENGTH@ 7
------------DEL Operator@@> @AT@ 2216 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 2219 @LENGTH@ 1
------DEL Block@@ThenBody:{  throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotRemoveSubsystem()));} @AT@ 2222 @LENGTH@ 114
---------DEL ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.cannotRemoveSubsystem())) @AT@ 2236 @LENGTH@ 90
------------DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.cannotRemoveSubsystem())] @AT@ 2242 @LENGTH@ 83
---------------DEL New@@new @AT@ 2242 @LENGTH@ 3
---------------DEL SimpleType@@OperationFailedException @AT@ 2246 @LENGTH@ 24
---------------DEL MethodInvocation@@new ModelNode().set(MESSAGES.cannotRemoveSubsystem()) @AT@ 2271 @LENGTH@ 53
------------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2271 @LENGTH@ 15
---------------------DEL New@@new @AT@ 2271 @LENGTH@ 3
---------------------DEL SimpleType@@ModelNode @AT@ 2275 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:set:[MESSAGES.cannotRemoveSubsystem()] @AT@ 2287 @LENGTH@ 37
---------------------DEL MethodInvocation@@MESSAGES.cannotRemoveSubsystem() @AT@ 2291 @LENGTH@ 32
------------------------DEL SimpleName@@Name:MESSAGES @AT@ 2291 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:cannotRemoveSubsystem:[] @AT@ 2300 @LENGTH@ 23
---DEL ExpressionStatement@@SuperMethodInvocation:super.performRemove(context,operation,model) @AT@ 2345 @LENGTH@ 47
------DEL SuperMethodInvocation@@super.performRemove(context,operation,model) @AT@ 2345 @LENGTH@ 46
---------DEL SimpleName@@MethodName:performRemove:[context, operation, model] @AT@ 2351 @LENGTH@ 13
---------DEL SimpleName@@context @AT@ 2365 @LENGTH@ 7
---------DEL SimpleName@@operation @AT@ 2374 @LENGTH@ 9
---------DEL SimpleName@@model @AT@ 2385 @LENGTH@ 5


UPD SwitchStatement@@switch (element) {case NAME_GIVEN:  variable.setNameGiven(getElementText(reader));break;case NAME_FROM_ATTRIBUTE:variable.setNameFromAttribute(getElementText(reader));break;case VARIABLE_CLASS:variable.setVariableClass(getElementText(reader));break;case DECLARE:variable.setDeclare(getElementText(reader));break;case SCOPE:variable.setScope(VariableScopeType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @TO@ switch (element) {case NAME_GIVEN:  variable.setNameGiven(getElementText(reader));break;case NAME_FROM_ATTRIBUTE:variable.setNameFromAttribute(getElementText(reader));break;case VARIABLE_CLASS:variable.setVariableClass(getElementText(reader));break;case DECLARE:variable.setDeclare(getElementText(reader));break;case SCOPE:try {variable.setScope(VariableScopeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}break;default :throw unexpectedElement(reader);} @AT@ 2803 @LENGTH@ 763
---INS TryStatement@@try {  variable.setScope(VariableScopeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case NAME_GIVEN:  variable.setNameGiven(getElementText(reader));break;case NAME_FROM_ATTRIBUTE:variable.setNameFromAttribute(getElementText(reader));break;case VARIABLE_CLASS:variable.setVariableClass(getElementText(reader));break;case DECLARE:variable.setDeclare(getElementText(reader));break;case SCOPE:variable.setScope(VariableScopeType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @AT@ 3398 @LENGTH@ 238
------MOV ExpressionStatement@@MethodInvocation:variable.setScope(VariableScopeType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  variable.setScope(VariableScopeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3398 @LENGTH@ 69
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  variable.setScope(VariableScopeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3520 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3527 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3527 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3552 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3581 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 3587 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 3587 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3603 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3611 @LENGTH@ 1


INS MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @TO@ TypeDeclaration@@[public]QuickfixjEndpoint, DefaultEndpoint[QuickfixjEventListener, MultipleConsumersSupport] @AT@ 2297 @LENGTH@ 150
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @AT@ 2297 @LENGTH@ 6
---INS SimpleName@@MethodName:QuickfixjEndpoint @TO@ MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @AT@ 2304 @LENGTH@ 17
---INS SingleVariableDeclaration@@QuickfixjEngine engine @TO@ MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @AT@ 2322 @LENGTH@ 22
------INS SimpleType@@QuickfixjEngine @TO@ SingleVariableDeclaration@@QuickfixjEngine engine @AT@ 2322 @LENGTH@ 15
------INS SimpleName@@engine @TO@ SingleVariableDeclaration@@QuickfixjEngine engine @AT@ 2338 @LENGTH@ 6
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @AT@ 2346 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 2346 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 2353 @LENGTH@ 3
---INS SingleVariableDeclaration@@Component component @TO@ MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @AT@ 2358 @LENGTH@ 19
------INS SimpleType@@Component @TO@ SingleVariableDeclaration@@Component component @AT@ 2358 @LENGTH@ 9
------INS SimpleName@@component @TO@ SingleVariableDeclaration@@Component component @AT@ 2368 @LENGTH@ 9
---INS SuperConstructorInvocation@@super(uri,component);
 @TO@ MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @AT@ 2389 @LENGTH@ 22
------INS SimpleName@@uri @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 2395 @LENGTH@ 3
------INS SimpleName@@component @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 2400 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.engine=engine @TO@ MethodDeclaration@@public, voidMethodName:QuickfixjEndpoint, QuickfixjEngine engine, String uri, Component component,  @AT@ 2420 @LENGTH@ 21
------INS Assignment@@this.engine=engine @TO@ ExpressionStatement@@Assignment:this.engine=engine @AT@ 2420 @LENGTH@ 20
---------INS FieldAccess@@this.engine @TO@ Assignment@@this.engine=engine @AT@ 2420 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.engine @AT@ 2420 @LENGTH@ 4
------------INS SimpleName@@engine @TO@ FieldAccess@@this.engine @AT@ 2425 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@this.engine=engine @AT@ 2431 @LENGTH@ 1
---------INS SimpleName@@engine @TO@ Assignment@@this.engine=engine @AT@ 2434 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:search(searchPhrase,maxNumberOfHits,Version.LUCENE_30) @TO@ MethodInvocation:search(searchPhrase,maxNumberOfHits,Version.LUCENE_35) @AT@ 2323 @LENGTH@ 64
---UPD MethodInvocation@@search(searchPhrase,maxNumberOfHits,Version.LUCENE_30) @TO@ search(searchPhrase,maxNumberOfHits,Version.LUCENE_35) @AT@ 2330 @LENGTH@ 56
------UPD SimpleName@@MethodName:search:[searchPhrase, maxNumberOfHits, Version.LUCENE_30] @TO@ MethodName:search:[searchPhrase, maxNumberOfHits, Version.LUCENE_35] @AT@ 2330 @LENGTH@ 56
---------UPD QualifiedName@@Version.LUCENE_30 @TO@ Version.LUCENE_35 @AT@ 2368 @LENGTH@ 17
------------UPD SimpleName@@LUCENE_30 @TO@ LUCENE_35 @AT@ 2376 @LENGTH@ 9


UPD TypeDeclaration@@[@Ignore("[AS7-3556] Replace mocked subsystem model tests with functional tests"), public]SubsystemStateTestCase,  @TO@ [public]SubsystemStateTestCase,  @AT@ 1306 @LENGTH@ 5288
---DEL SingleMemberAnnotation@@@Ignore("[AS7-3556] Replace mocked subsystem model tests with functional tests") @AT@ 1306 @LENGTH@ 80


INS FieldDeclaration@@public, static, final, InterceptorFactory, [FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
] @TO@ TypeDeclaration@@[public]StatefulSessionSynchronizationInterceptor, AbstractEJBInterceptor @AT@ 2445 @LENGTH@ 303
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, InterceptorFactory, [FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
] @AT@ 2445 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, InterceptorFactory, [FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
] @AT@ 2452 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, InterceptorFactory, [FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
] @AT@ 2459 @LENGTH@ 5
---INS SimpleType@@InterceptorFactory @TO@ FieldDeclaration@@public, static, final, InterceptorFactory, [FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
] @AT@ 2465 @LENGTH@ 18
---INS VariableDeclarationFragment@@FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
 @TO@ FieldDeclaration@@public, static, final, InterceptorFactory, [FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
] @AT@ 2484 @LENGTH@ 263
------INS SimpleName@@FACTORY @TO@ VariableDeclarationFragment@@FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
 @AT@ 2484 @LENGTH@ 7
------INS ClassInstanceCreation@@ComponentInstanceInterceptorFactory[] @TO@ VariableDeclarationFragment@@FACTORY=new ComponentInstanceInterceptorFactory(){
  @Override protected Interceptor create(  final Component component,  final InterceptorFactoryContext context){
    return new StatefulSessionSynchronizationInterceptor();
  }
}
 @AT@ 2494 @LENGTH@ 253
---------INS New@@new @TO@ ClassInstanceCreation@@ComponentInstanceInterceptorFactory[] @AT@ 2494 @LENGTH@ 3
---------INS SimpleType@@ComponentInstanceInterceptorFactory @TO@ ClassInstanceCreation@@ComponentInstanceInterceptorFactory[] @AT@ 2498 @LENGTH@ 35
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ComponentInstanceInterceptorFactory[] @AT@ 2536 @LENGTH@ 211
------------INS MethodDeclaration@@protected, Interceptor, MethodName:create, final Component component, final InterceptorFactoryContext context,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2565 @LENGTH@ 176
---------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, Interceptor, MethodName:create, final Component component, final InterceptorFactoryContext context,  @AT@ 2565 @LENGTH@ 9
---------------INS SimpleType@@Interceptor @TO@ MethodDeclaration@@protected, Interceptor, MethodName:create, final Component component, final InterceptorFactoryContext context,  @AT@ 2575 @LENGTH@ 11
---------------INS SimpleName@@MethodName:create @TO@ MethodDeclaration@@protected, Interceptor, MethodName:create, final Component component, final InterceptorFactoryContext context,  @AT@ 2587 @LENGTH@ 6
---------------INS SingleVariableDeclaration@@final Component component @TO@ MethodDeclaration@@protected, Interceptor, MethodName:create, final Component component, final InterceptorFactoryContext context,  @AT@ 2594 @LENGTH@ 25
------------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Component component @AT@ 2594 @LENGTH@ 5
------------------INS SimpleType@@Component @TO@ SingleVariableDeclaration@@final Component component @AT@ 2600 @LENGTH@ 9
------------------INS SimpleName@@component @TO@ SingleVariableDeclaration@@final Component component @AT@ 2610 @LENGTH@ 9
---------------INS SingleVariableDeclaration@@final InterceptorFactoryContext context @TO@ MethodDeclaration@@protected, Interceptor, MethodName:create, final Component component, final InterceptorFactoryContext context,  @AT@ 2621 @LENGTH@ 39
------------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 2621 @LENGTH@ 5
------------------INS SimpleType@@InterceptorFactoryContext @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 2627 @LENGTH@ 25
------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 2653 @LENGTH@ 7
---------------INS ReturnStatement@@ClassInstanceCreation:new StatefulSessionSynchronizationInterceptor() @TO@ MethodDeclaration@@protected, Interceptor, MethodName:create, final Component component, final InterceptorFactoryContext context,  @AT@ 2676 @LENGTH@ 55
------------------INS ClassInstanceCreation@@StatefulSessionSynchronizationInterceptor[] @TO@ ReturnStatement@@ClassInstanceCreation:new StatefulSessionSynchronizationInterceptor() @AT@ 2683 @LENGTH@ 47
---------------------INS New@@new @TO@ ClassInstanceCreation@@StatefulSessionSynchronizationInterceptor[] @AT@ 2683 @LENGTH@ 3
---------------------INS SimpleType@@StatefulSessionSynchronizationInterceptor @TO@ ClassInstanceCreation@@StatefulSessionSynchronizationInterceptor[] @AT@ 2687 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:processLoginModules(login,authenticationInfo,new LoginModuleContainer(){
  public void addAppConfigurationEntry(  AppConfigurationEntry entry){
    holder.addAppConfigurationEntry(entry);
  }
}
) @TO@ MethodInvocation:processLoginModules(stackNode.get(LOGIN_MODULES),authenticationInfo,new LoginModuleContainer(){
  public void addAppConfigurationEntry(  AppConfigurationEntry entry){
    holder.addAppConfigurationEntry(entry);
  }
}
) @AT@ 17851 @LENGTH@ 269


UPD ExpressionStatement@@MethodInvocation:cli.sendLine("xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2") @TO@ MethodInvocation:cli.sendLine("xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011") @AT@ 4920 @LENGTH@ 185
---UPD MethodInvocation@@cli.sendLine("xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2") @TO@ cli.sendLine("xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011") @AT@ 4920 @LENGTH@ 184
------UPD SimpleName@@MethodName:sendLine:["xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2"] @TO@ MethodName:sendLine:["xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011"] @AT@ 4924 @LENGTH@ 180
---------UPD InfixExpression@@"xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2" @TO@ "xa-data-source add --profile=" + profileNames[0] + " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011" @AT@ 4933 @LENGTH@ 170
------------UPD StringLiteral@@" --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2" @TO@ " --jndi-name=java:jboss/datasources/TestXADS --name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011" @AT@ 5001 @LENGTH@ 102


INS MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThan, Date date,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 4743 @LENGTH@ 35
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThan, Date date,  @AT@ 4730 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 4730 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 4735 @LENGTH@ 6
---INS SimpleName@@MethodName:findByCreatedAtLessThan @TO@ MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThan, Date date,  @AT@ 4743 @LENGTH@ 23
---INS SingleVariableDeclaration@@Date date @TO@ MethodDeclaration@@List<Person>, MethodName:findByCreatedAtLessThan, Date date,  @AT@ 4767 @LENGTH@ 9
------INS SimpleType@@Date @TO@ SingleVariableDeclaration@@Date date @AT@ 4767 @LENGTH@ 4
------INS SimpleName@@date @TO@ SingleVariableDeclaration@@Date date @AT@ 4772 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:parseDeployments, final XMLExtendedStreamReader reader, final ModelNode address, final Namespace expectedNs, final List<ModelNode> list, final boolean allowEnabled, XMLStreamException,  @TO@ protected, void, MethodName:parseDeployments, final XMLExtendedStreamReader reader, final ModelNode address, final Namespace expectedNs, final List<ModelNode> list, final Set<Attribute> allowedAttributes, final Set<Element> allowedElements, XMLStreamException,  @AT@ 46740 @LENGTH@ 3747
---INS SingleVariableDeclaration@@final Set<Attribute> allowedAttributes @TO@ MethodDeclaration@@protected, void, MethodName:parseDeployments, final XMLExtendedStreamReader reader, final ModelNode address, final Namespace expectedNs, final List<ModelNode> list, final boolean allowEnabled, XMLStreamException,  @AT@ 46903 @LENGTH@ 38
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Set<Attribute> allowedAttributes @AT@ 46903 @LENGTH@ 5
------INS ParameterizedType@@Set<Attribute> @TO@ SingleVariableDeclaration@@final Set<Attribute> allowedAttributes @AT@ 46909 @LENGTH@ 14
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Attribute> @AT@ 46909 @LENGTH@ 3
---------INS SimpleType@@Attribute @TO@ ParameterizedType@@Set<Attribute> @AT@ 46913 @LENGTH@ 9
------INS SimpleName@@allowedAttributes @TO@ SingleVariableDeclaration@@final Set<Attribute> allowedAttributes @AT@ 46924 @LENGTH@ 17
---UPD SingleVariableDeclaration@@final boolean allowEnabled @TO@ final Set<Element> allowedElements @AT@ 46903 @LENGTH@ 26
------DEL PrimitiveType@@boolean @AT@ 46909 @LENGTH@ 7
------UPD SimpleName@@allowEnabled @TO@ allowedElements @AT@ 46917 @LENGTH@ 12
------INS ParameterizedType@@Set<Element> @TO@ SingleVariableDeclaration@@final boolean allowEnabled @AT@ 46949 @LENGTH@ 12
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Element> @AT@ 46949 @LENGTH@ 3
---------INS SimpleType@@Element @TO@ ParameterizedType@@Set<Element> @AT@ 46953 @LENGTH@ 7
---UPD WhileStatement@@while (reader.nextTag() != END_ELEMENT) {  requireNamespace(reader,expectedNs);  Element deployment=Element.forName(reader.getLocalName());  if (Element.DEPLOYMENT != deployment) {    throw unexpectedElement(reader);  }  String uniqueName=null;  String runtimeName=null;  String startInput=null;  final int count=reader.getAttributeCount();  for (int i=0; i < count; i++) {    final String value=reader.getAttributeValue(i);    if (!isNoNamespaceAttribute(reader,i)) {      throw unexpectedAttribute(reader,i);    } else {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{          if (!names.add(value)) {            throw duplicateNamedElement(reader,value);          }          uniqueName=value;          break;        }case RUNTIME_NAME:{        runtimeName=value;        break;      }case ENABLED:{      if (allowEnabled) {        startInput=value;        break;      } else {        throw unexpectedAttribute(reader,i);      }    }default :  throw unexpectedAttribute(reader,i);}}}if (uniqueName == null) {throw missingRequired(reader,Collections.singleton(Attribute.NAME));}if (runtimeName == null) {throw missingRequired(reader,Collections.singleton(Attribute.RUNTIME_NAME));}final boolean enabled=startInput == null ? true : Boolean.parseBoolean(startInput);final ModelNode deploymentAddress=address.clone().add(DEPLOYMENT,uniqueName);final ModelNode deploymentAdd=Util.getEmptyOperation(ADD,deploymentAddress);while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {requireNamespace(reader,expectedNs);final Element element=Element.forName(reader.getLocalName());switch (element) {case CONTENT:parseContentType(reader,deploymentAdd);break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}}deploymentAdd.get(RUNTIME_NAME).set(runtimeName);if (allowEnabled) {deploymentAdd.get(ENABLED).set(enabled);}list.add(deploymentAdd);} @TO@ while (reader.nextTag() != END_ELEMENT) {  requireNamespace(reader,expectedNs);  Element deployment=Element.forName(reader.getLocalName());  if (Element.DEPLOYMENT != deployment) {    throw unexpectedElement(reader);  }  String uniqueName=null;  String runtimeName=null;  String startInput=null;  final int count=reader.getAttributeCount();  for (int i=0; i < count; i++) {    final String value=reader.getAttributeValue(i);    if (!isNoNamespaceAttribute(reader,i)) {      throw unexpectedAttribute(reader,i);    } else {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));      if (!allowedAttributes.contains(attribute)) {        throw unexpectedAttribute(reader,i);      }switch (attribute) {case NAME:{          if (!names.add(value)) {            throw duplicateNamedElement(reader,value);          }          uniqueName=value;          break;        }case RUNTIME_NAME:{        runtimeName=value;        break;      }case ENABLED:{      startInput=value;      break;    }default :  throw unexpectedAttribute(reader,i);}}}if (uniqueName == null) {throw missingRequired(reader,Collections.singleton(Attribute.NAME));}if (runtimeName == null) {throw missingRequired(reader,Collections.singleton(Attribute.RUNTIME_NAME));}final boolean enabled=startInput == null ? true : Boolean.parseBoolean(startInput);final ModelNode deploymentAddress=address.clone().add(DEPLOYMENT,uniqueName);final ModelNode deploymentAdd=Util.getEmptyOperation(ADD,deploymentAddress);while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {requireNamespace(reader,expectedNs);final Element element=Element.forName(reader.getLocalName());if (!allowedElements.contains(element)) {throw unexpectedElement(reader);}switch (element) {case CONTENT:parseContentType(reader,deploymentAdd);break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}}deploymentAdd.get(RUNTIME_NAME).set(runtimeName);if (allowedAttributes.contains(Attribute.ENABLED)) {deploymentAdd.get(ENABLED).set(enabled);}list.add(deploymentAdd);} @AT@ 47063 @LENGTH@ 3418
------UPD Block@@WhileBody:{  requireNamespace(reader,expectedNs);  Element deployment=Element.forName(reader.getLocalName());  if (Element.DEPLOYMENT != deployment) {    throw unexpectedElement(reader);  }  String uniqueName=null;  String runtimeName=null;  String startInput=null;  final int count=reader.getAttributeCount();  for (int i=0; i < count; i++) {    final String value=reader.getAttributeValue(i);    if (!isNoNamespaceAttribute(reader,i)) {      throw unexpectedAttribute(reader,i);    } else {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{          if (!names.add(value)) {            throw duplicateNamedElement(reader,value);          }          uniqueName=value;          break;        }case RUNTIME_NAME:{        runtimeName=value;        break;      }case ENABLED:{      if (allowEnabled) {        startInput=value;        break;      } else {        throw unexpectedAttribute(reader,i);      }    }default :  throw unexpectedAttribute(reader,i);}}}if (uniqueName == null) {throw missingRequired(reader,Collections.singleton(Attribute.NAME));}if (runtimeName == null) {throw missingRequired(reader,Collections.singleton(Attribute.RUNTIME_NAME));}final boolean enabled=startInput == null ? true : Boolean.parseBoolean(startInput);final ModelNode deploymentAddress=address.clone().add(DEPLOYMENT,uniqueName);final ModelNode deploymentAdd=Util.getEmptyOperation(ADD,deploymentAddress);while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {requireNamespace(reader,expectedNs);final Element element=Element.forName(reader.getLocalName());switch (element) {case CONTENT:parseContentType(reader,deploymentAdd);break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}}deploymentAdd.get(RUNTIME_NAME).set(runtimeName);if (allowEnabled) {deploymentAdd.get(ENABLED).set(enabled);}list.add(deploymentAdd);} @TO@ WhileBody:{  requireNamespace(reader,expectedNs);  Element deployment=Element.forName(reader.getLocalName());  if (Element.DEPLOYMENT != deployment) {    throw unexpectedElement(reader);  }  String uniqueName=null;  String runtimeName=null;  String startInput=null;  final int count=reader.getAttributeCount();  for (int i=0; i < count; i++) {    final String value=reader.getAttributeValue(i);    if (!isNoNamespaceAttribute(reader,i)) {      throw unexpectedAttribute(reader,i);    } else {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));      if (!allowedAttributes.contains(attribute)) {        throw unexpectedAttribute(reader,i);      }switch (attribute) {case NAME:{          if (!names.add(value)) {            throw duplicateNamedElement(reader,value);          }          uniqueName=value;          break;        }case RUNTIME_NAME:{        runtimeName=value;        break;      }case ENABLED:{      startInput=value;      break;    }default :  throw unexpectedAttribute(reader,i);}}}if (uniqueName == null) {throw missingRequired(reader,Collections.singleton(Attribute.NAME));}if (runtimeName == null) {throw missingRequired(reader,Collections.singleton(Attribute.RUNTIME_NAME));}final boolean enabled=startInput == null ? true : Boolean.parseBoolean(startInput);final ModelNode deploymentAddress=address.clone().add(DEPLOYMENT,uniqueName);final ModelNode deploymentAdd=Util.getEmptyOperation(ADD,deploymentAddress);while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {requireNamespace(reader,expectedNs);final Element element=Element.forName(reader.getLocalName());if (!allowedElements.contains(element)) {throw unexpectedElement(reader);}switch (element) {case CONTENT:parseContentType(reader,deploymentAdd);break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}}deploymentAdd.get(RUNTIME_NAME).set(runtimeName);if (allowedAttributes.contains(Attribute.ENABLED)) {deploymentAdd.get(ENABLED).set(enabled);}list.add(deploymentAdd);} @AT@ 47103 @LENGTH@ 3378
---------UPD ForStatement@@for (int i=0; i < count; i++) {  final String value=reader.getAttributeValue(i);  if (!isNoNamespaceAttribute(reader,i)) {    throw unexpectedAttribute(reader,i);  } else {    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{        if (!names.add(value)) {          throw duplicateNamedElement(reader,value);        }        uniqueName=value;        break;      }case RUNTIME_NAME:{      runtimeName=value;      break;    }case ENABLED:{    if (allowEnabled) {      startInput=value;      break;    } else {      throw unexpectedAttribute(reader,i);    }  }default :throw unexpectedAttribute(reader,i);}}} @TO@ for (int i=0; i < count; i++) {  final String value=reader.getAttributeValue(i);  if (!isNoNamespaceAttribute(reader,i)) {    throw unexpectedAttribute(reader,i);  } else {    final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));    if (!allowedAttributes.contains(attribute)) {      throw unexpectedAttribute(reader,i);    }switch (attribute) {case NAME:{        if (!names.add(value)) {          throw duplicateNamedElement(reader,value);        }        uniqueName=value;        break;      }case RUNTIME_NAME:{      runtimeName=value;      break;    }case ENABLED:{    startInput=value;    break;  }default :throw unexpectedAttribute(reader,i);}}} @AT@ 47562 @LENGTH@ 1336
------------UPD IfStatement@@if (!isNoNamespaceAttribute(reader,i)) {  throw unexpectedAttribute(reader,i);} else {  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{      if (!names.add(value)) {        throw duplicateNamedElement(reader,value);      }      uniqueName=value;      break;    }case RUNTIME_NAME:{    runtimeName=value;    break;  }case ENABLED:{  if (allowEnabled) {    startInput=value;    break;  } else {    throw unexpectedAttribute(reader,i);  }}default :throw unexpectedAttribute(reader,i);}} @TO@ if (!isNoNamespaceAttribute(reader,i)) {  throw unexpectedAttribute(reader,i);} else {  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));  if (!allowedAttributes.contains(attribute)) {    throw unexpectedAttribute(reader,i);  }switch (attribute) {case NAME:{      if (!names.add(value)) {        throw duplicateNamedElement(reader,value);      }      uniqueName=value;      break;    }case RUNTIME_NAME:{    runtimeName=value;    break;  }case ENABLED:{  startInput=value;  break;}default :throw unexpectedAttribute(reader,i);}} @AT@ 47678 @LENGTH@ 1206
---------------UPD Block@@ElseBody:{  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{      if (!names.add(value)) {        throw duplicateNamedElement(reader,value);      }      uniqueName=value;      break;    }case RUNTIME_NAME:{    runtimeName=value;    break;  }case ENABLED:{  if (allowEnabled) {    startInput=value;    break;  } else {    throw unexpectedAttribute(reader,i);  }}default :throw unexpectedAttribute(reader,i);}} @TO@ ElseBody:{  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));  if (!allowedAttributes.contains(attribute)) {    throw unexpectedAttribute(reader,i);  }switch (attribute) {case NAME:{      if (!names.add(value)) {        throw duplicateNamedElement(reader,value);      }      uniqueName=value;      break;    }case RUNTIME_NAME:{    runtimeName=value;    break;  }case ENABLED:{  startInput=value;  break;}default :throw unexpectedAttribute(reader,i);}} @AT@ 47801 @LENGTH@ 1083
------------------UPD SwitchStatement@@switch (attribute) {case NAME:{    if (!names.add(value)) {      throw duplicateNamedElement(reader,value);    }    uniqueName=value;    break;  }case RUNTIME_NAME:{  runtimeName=value;  break;}case ENABLED:{if (allowEnabled) {  startInput=value;  break;} else {  throw unexpectedAttribute(reader,i);}}default :throw unexpectedAttribute(reader,i);} @TO@ switch (attribute) {case NAME:{    if (!names.add(value)) {      throw duplicateNamedElement(reader,value);    }    uniqueName=value;    break;  }case RUNTIME_NAME:{  runtimeName=value;  break;}case ENABLED:{startInput=value;break;}default :throw unexpectedAttribute(reader,i);} @AT@ 47923 @LENGTH@ 943
---------------------DEL IfStatement@@if (allowEnabled) {  startInput=value;  break;} else {  throw unexpectedAttribute(reader,i);} @AT@ 48472 @LENGTH@ 247
------------------------DEL SimpleName@@allowEnabled @AT@ 48476 @LENGTH@ 12
------------------------DEL Block@@ThenBody:{  startInput=value;  break;} @AT@ 48490 @LENGTH@ 122
---------------------------DEL BreakStatement@@ @AT@ 48576 @LENGTH@ 6
------------------------DEL Block@@ElseBody:{  throw unexpectedAttribute(reader,i);} @AT@ 48618 @LENGTH@ 101
---------------------------DEL ThrowStatement@@MethodInvocation:unexpectedAttribute(reader,i) @AT@ 48652 @LENGTH@ 37
------------------------------DEL MethodInvocation@@unexpectedAttribute(reader,i) @AT@ 48658 @LENGTH@ 30
---------------------------------DEL SimpleName@@MethodName:unexpectedAttribute:[reader, i] @AT@ 48658 @LENGTH@ 30
------------------------------------DEL SimpleName@@reader @AT@ 48678 @LENGTH@ 6
------------------------------------DEL SimpleName@@i @AT@ 48686 @LENGTH@ 1
---------------------MOV ExpressionStatement@@Assignment:startInput=value @TO@ SwitchStatement@@switch (attribute) {case NAME:{    if (!names.add(value)) {      throw duplicateNamedElement(reader,value);    }    uniqueName=value;    break;  }case RUNTIME_NAME:{  runtimeName=value;  break;}case ENABLED:{if (allowEnabled) {  startInput=value;  break;} else {  throw unexpectedAttribute(reader,i);}}default :throw unexpectedAttribute(reader,i);} @AT@ 48524 @LENGTH@ 19
---------------------INS BreakStatement@@ @TO@ SwitchStatement@@switch (attribute) {case NAME:{    if (!names.add(value)) {      throw duplicateNamedElement(reader,value);    }    uniqueName=value;    break;  }case RUNTIME_NAME:{  runtimeName=value;  break;}case ENABLED:{if (allowEnabled) {  startInput=value;  break;} else {  throw unexpectedAttribute(reader,i);}}default :throw unexpectedAttribute(reader,i);} @AT@ 48718 @LENGTH@ 6
------------------INS IfStatement@@if (!allowedAttributes.contains(attribute)) {  throw unexpectedAttribute(reader,i);} @TO@ Block@@ElseBody:{  final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{      if (!names.add(value)) {        throw duplicateNamedElement(reader,value);      }      uniqueName=value;      break;    }case RUNTIME_NAME:{    runtimeName=value;    break;  }case ENABLED:{  if (allowEnabled) {    startInput=value;    break;  } else {    throw unexpectedAttribute(reader,i);  }}default :throw unexpectedAttribute(reader,i);}} @AT@ 47971 @LENGTH@ 129
---------------------INS PrefixExpression@@!allowedAttributes.contains(attribute) @TO@ IfStatement@@if (!allowedAttributes.contains(attribute)) {  throw unexpectedAttribute(reader,i);} @AT@ 47975 @LENGTH@ 38
------------------------INS Operator@@! @TO@ PrefixExpression@@!allowedAttributes.contains(attribute) @AT@ 47975 @LENGTH@ 1
------------------------INS MethodInvocation@@allowedAttributes.contains(attribute) @TO@ PrefixExpression@@!allowedAttributes.contains(attribute) @AT@ 47976 @LENGTH@ 37
---------------------------INS SimpleName@@Name:allowedAttributes @TO@ MethodInvocation@@allowedAttributes.contains(attribute) @AT@ 47976 @LENGTH@ 17
---------------------------INS SimpleName@@MethodName:contains:[attribute] @TO@ MethodInvocation@@allowedAttributes.contains(attribute) @AT@ 47994 @LENGTH@ 19
------------------------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:contains:[attribute] @AT@ 48003 @LENGTH@ 9
---------------------INS Block@@ThenBody:{  throw unexpectedAttribute(reader,i);} @TO@ IfStatement@@if (!allowedAttributes.contains(attribute)) {  throw unexpectedAttribute(reader,i);} @AT@ 48015 @LENGTH@ 85
------------------------INS ThrowStatement@@MethodInvocation:unexpectedAttribute(reader,i) @TO@ Block@@ThenBody:{  throw unexpectedAttribute(reader,i);} @AT@ 48041 @LENGTH@ 37
---------------------------INS MethodInvocation@@unexpectedAttribute(reader,i) @TO@ ThrowStatement@@MethodInvocation:unexpectedAttribute(reader,i) @AT@ 48047 @LENGTH@ 30
------------------------------INS SimpleName@@MethodName:unexpectedAttribute:[reader, i] @TO@ MethodInvocation@@unexpectedAttribute(reader,i) @AT@ 48047 @LENGTH@ 30
---------------------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedAttribute:[reader, i] @AT@ 48067 @LENGTH@ 6
---------------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:unexpectedAttribute:[reader, i] @AT@ 48075 @LENGTH@ 1
---------UPD WhileStatement@@while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  requireNamespace(reader,expectedNs);  final Element element=Element.forName(reader.getLocalName());switch (element) {case CONTENT:    parseContentType(reader,deploymentAdd);  break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}} @TO@ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  requireNamespace(reader,expectedNs);  final Element element=Element.forName(reader.getLocalName());  if (!allowedElements.contains(element)) {    throw unexpectedElement(reader);  }switch (element) {case CONTENT:    parseContentType(reader,deploymentAdd);  break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}} @AT@ 49512 @LENGTH@ 756
------------UPD Block@@WhileBody:{  requireNamespace(reader,expectedNs);  final Element element=Element.forName(reader.getLocalName());switch (element) {case CONTENT:    parseContentType(reader,deploymentAdd);  break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}} @TO@ WhileBody:{  requireNamespace(reader,expectedNs);  final Element element=Element.forName(reader.getLocalName());  if (!allowedElements.contains(element)) {    throw unexpectedElement(reader);  }switch (element) {case CONTENT:    parseContentType(reader,deploymentAdd);  break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}} @AT@ 49572 @LENGTH@ 696
---------------INS IfStatement@@if (!allowedElements.contains(element)) {  throw unexpectedElement(reader);} @TO@ Block@@WhileBody:{  requireNamespace(reader,expectedNs);  final Element element=Element.forName(reader.getLocalName());switch (element) {case CONTENT:    parseContentType(reader,deploymentAdd);  break;case FS_ARCHIVE:parseFSBaseType(reader,deploymentAdd,true);break;case FS_EXPLODED:parseFSBaseType(reader,deploymentAdd,false);break;default :throw unexpectedElement(reader);}} @AT@ 49729 @LENGTH@ 112
------------------INS PrefixExpression@@!allowedElements.contains(element) @TO@ IfStatement@@if (!allowedElements.contains(element)) {  throw unexpectedElement(reader);} @AT@ 49733 @LENGTH@ 34
---------------------INS Operator@@! @TO@ PrefixExpression@@!allowedElements.contains(element) @AT@ 49733 @LENGTH@ 1
---------------------INS MethodInvocation@@allowedElements.contains(element) @TO@ PrefixExpression@@!allowedElements.contains(element) @AT@ 49734 @LENGTH@ 33
------------------------INS SimpleName@@Name:allowedElements @TO@ MethodInvocation@@allowedElements.contains(element) @AT@ 49734 @LENGTH@ 15
------------------------INS SimpleName@@MethodName:contains:[element] @TO@ MethodInvocation@@allowedElements.contains(element) @AT@ 49750 @LENGTH@ 17
---------------------------INS SimpleName@@element @TO@ SimpleName@@MethodName:contains:[element] @AT@ 49759 @LENGTH@ 7
------------------INS Block@@ThenBody:{  throw unexpectedElement(reader);} @TO@ IfStatement@@if (!allowedElements.contains(element)) {  throw unexpectedElement(reader);} @AT@ 49769 @LENGTH@ 72
---------------------INS ThrowStatement@@MethodInvocation:unexpectedElement(reader) @TO@ Block@@ThenBody:{  throw unexpectedElement(reader);} @AT@ 49791 @LENGTH@ 32
------------------------INS MethodInvocation@@unexpectedElement(reader) @TO@ ThrowStatement@@MethodInvocation:unexpectedElement(reader) @AT@ 49797 @LENGTH@ 25
---------------------------INS SimpleName@@MethodName:unexpectedElement:[reader] @TO@ MethodInvocation@@unexpectedElement(reader) @AT@ 49797 @LENGTH@ 25
------------------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedElement:[reader] @AT@ 49815 @LENGTH@ 6
---------UPD IfStatement@@if (allowEnabled) {  deploymentAdd.get(ENABLED).set(enabled);} @TO@ if (allowedAttributes.contains(Attribute.ENABLED)) {  deploymentAdd.get(ENABLED).set(enabled);} @AT@ 50344 @LENGTH@ 90
------------DEL SimpleName@@allowEnabled @AT@ 50348 @LENGTH@ 12
------------INS MethodInvocation@@allowedAttributes.contains(Attribute.ENABLED) @TO@ IfStatement@@if (allowEnabled) {  deploymentAdd.get(ENABLED).set(enabled);} @AT@ 50482 @LENGTH@ 45
---------------INS SimpleName@@Name:allowedAttributes @TO@ MethodInvocation@@allowedAttributes.contains(Attribute.ENABLED) @AT@ 50482 @LENGTH@ 17
---------------INS SimpleName@@MethodName:contains:[Attribute.ENABLED] @TO@ MethodInvocation@@allowedAttributes.contains(Attribute.ENABLED) @AT@ 50500 @LENGTH@ 27
------------------INS QualifiedName@@Attribute.ENABLED @TO@ SimpleName@@MethodName:contains:[Attribute.ENABLED] @AT@ 50509 @LENGTH@ 17
---------------------INS SimpleName@@Attribute @TO@ QualifiedName@@Attribute.ENABLED @AT@ 50509 @LENGTH@ 9
---------------------INS SimpleName@@ENABLED @TO@ QualifiedName@@Attribute.ENABLED @AT@ 50519 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new ErrorState(null,MESSAGES.invalidChoiceResponse(),this) @TO@ ClassInstanceCreation:new ErrorState(theConsole,MESSAGES.invalidChoiceResponse(),this) @AT@ 3219 @LENGTH@ 68
---UPD ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidChoiceResponse(), this] @TO@ ErrorState[theConsole, MESSAGES.invalidChoiceResponse(), this] @AT@ 3226 @LENGTH@ 60
------DEL NullLiteral@@null @AT@ 3241 @LENGTH@ 4
------INS SimpleName@@theConsole @TO@ ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidChoiceResponse(), this] @AT@ 3347 @LENGTH@ 10


INS IfStatement@@if (applicationContext != null) {  String[] names=applicationContext.getBeanNamesForType(SpringCamelContext.class);  if (names.length == 1) {    return (SpringCamelContext)applicationContext.getBean(names[0],SpringCamelContext.class);  }} @TO@ MethodDeclaration@@public, static, SpringCamelContext, MethodName:springCamelContext, ApplicationContext applicationContext, boolean maybeStart, Exception,  @AT@ 3695 @LENGTH@ 374
---INS InfixExpression@@applicationContext != null @TO@ IfStatement@@if (applicationContext != null) {  String[] names=applicationContext.getBeanNamesForType(SpringCamelContext.class);  if (names.length == 1) {    return (SpringCamelContext)applicationContext.getBean(names[0],SpringCamelContext.class);  }} @AT@ 3699 @LENGTH@ 26
------INS SimpleName@@applicationContext @TO@ InfixExpression@@applicationContext != null @AT@ 3699 @LENGTH@ 18
------INS Operator@@!= @TO@ InfixExpression@@applicationContext != null @AT@ 3717 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@applicationContext != null @AT@ 3721 @LENGTH@ 4
---INS Block@@ThenBody:{  String[] names=applicationContext.getBeanNamesForType(SpringCamelContext.class);  if (names.length == 1) {    return (SpringCamelContext)applicationContext.getBean(names[0],SpringCamelContext.class);  }} @TO@ IfStatement@@if (applicationContext != null) {  String[] names=applicationContext.getBeanNamesForType(SpringCamelContext.class);  if (names.length == 1) {    return (SpringCamelContext)applicationContext.getBean(names[0],SpringCamelContext.class);  }} @AT@ 3727 @LENGTH@ 342
------MOV VariableDeclarationStatement@@String[] names=applicationContext.getBeanNamesForType(SpringCamelContext.class); @TO@ Block@@ThenBody:{  String[] names=applicationContext.getBeanNamesForType(SpringCamelContext.class);  if (names.length == 1) {    return (SpringCamelContext)applicationContext.getBean(names[0],SpringCamelContext.class);  }} @AT@ 3769 @LENGTH@ 82
------MOV IfStatement@@if (names.length == 1) {  return (SpringCamelContext)applicationContext.getBean(names[0],SpringCamelContext.class);} @TO@ Block@@ThenBody:{  String[] names=applicationContext.getBeanNamesForType(SpringCamelContext.class);  if (names.length == 1) {    return (SpringCamelContext)applicationContext.getBean(names[0],SpringCamelContext.class);  }} @AT@ 3860 @LENGTH@ 137


UPD MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @TO@ public, static, WebArchive, MethodName:deployment, Exception,  @AT@ 2422 @LENGTH@ 1249
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2471 @LENGTH@ 9
---DEL TryStatement@@try {  createSecurityDomain();} catch (Exception e) {} @AT@ 2545 @LENGTH@ 153
------DEL ExpressionStatement@@MethodInvocation:createSecurityDomain() @AT@ 2611 @LENGTH@ 23
------DEL CatchClause@@catch (Exception e) {} @AT@ 2645 @LENGTH@ 53
---------DEL SingleVariableDeclaration@@Exception e @AT@ 2652 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 2652 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 2662 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:createSecurityDomain() @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2610 @LENGTH@ 23
------MOV MethodInvocation@@MethodName:createSecurityDomain:[] @TO@ ExpressionStatement@@MethodInvocation:createSecurityDomain() @AT@ 2611 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:cli.sendLine("xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2") @TO@ MethodInvocation:cli.sendLine("xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011") @AT@ 5983 @LENGTH@ 112
---UPD MethodInvocation@@cli.sendLine("xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2") @TO@ cli.sendLine("xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011") @AT@ 5983 @LENGTH@ 111
------UPD SimpleName@@MethodName:sendLine:["xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2"] @TO@ MethodName:sendLine:["xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011"] @AT@ 5987 @LENGTH@ 107
---------UPD StringLiteral@@"xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2" @TO@ "xa-data-source add --name=TestXADS --jndi-name=java:jboss/datasources/TestXADS --driver-name=h2 --xa-datasource-properties=ServerName=localhost,PortNumber=50011" @AT@ 5996 @LENGTH@ 97


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1736 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1736 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1746 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1754 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1770 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1770 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1776 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1793 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1812 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1819 @LENGTH@ 4


UPD FieldDeclaration@@private, static, final, Map<PersistenceUnitMetadata,Map<URL,Set<Package>>>, [PACKAGES_IN_JAR_CACHE=new WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>()] @TO@ private, static, final, Map<PersistenceUnitMetadata,Map<URL,Set<Package>>>, [PACKAGES_IN_JAR_CACHE=new HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>()] @AT@ 2246 @LENGTH@ 164
---UPD VariableDeclarationFragment@@PACKAGES_IN_JAR_CACHE=new WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>() @TO@ PACKAGES_IN_JAR_CACHE=new HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>() @AT@ 2320 @LENGTH@ 89
------UPD ClassInstanceCreation@@WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>[] @TO@ HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>>[] @AT@ 2344 @LENGTH@ 65
---------UPD ParameterizedType@@WeakHashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>> @TO@ HashMap<PersistenceUnitMetadata,Map<URL,Set<Package>>> @AT@ 2348 @LENGTH@ 59
------------UPD SimpleType@@WeakHashMap @TO@ HashMap @AT@ 2348 @LENGTH@ 11


UPD EnhancedForStatement@@for (org.jboss.jca.common.api.metadata.resourceadapter.ResourceAdapter raxml : raxmls.getResourceAdapters()) {  String deploymentUnitPrefix="";  if (deploymentUnit.getParent() != null) {    deploymentUnitPrefix=deploymentUnit.getParent().getName() + "#";  }  String deploymentUnitName=deploymentUnitPrefix + deploymentUnit.getName();  if (deploymentUnitName.equals(raxml.getArchive())) {    final String deployment;    if (deploymentUnitName.lastIndexOf('.') == -1) {      deployment=deploymentUnitName;    } else {      deployment=deploymentUnitName.substring(0,deploymentUnitName.lastIndexOf('.'));    }    String raName=connectorXmlDescriptor.getDeploymentName();    ServiceName serviceName=ConnectorServices.registerDeployment(raName);    ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(connectorXmlDescriptor,raxml,module,deployment,serviceName);    ServiceBuilder builder=serviceTarget.addService(serviceName,service).addDependency(ConnectorServices.IRONJACAMAR_MDR,MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSISTORY_SERVICE,ResourceAdapterRepository.class,service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE,ManagementRepository.class,service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,service.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME).addDependency(ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()));    builder.addListener(new AbstractServiceListener<Object>(){      public void transition(      final ServiceController<? extends Object> controller,      final ServiceController.Transition transition){switch (transition) {case STARTING_to_UP:{            CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();            if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {              StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();              if (poolStats.getNames().size() != 0) {                DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);                PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);                ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);                for (                String statName : poolStats.getNames()) {                  subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));                }                subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);              }            }            break;          }case UP_to_STOP_REQUESTED:{          PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);          if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {            registration.unregisterSubModel(pe);          }          break;        }    }  }});builder.setInitialMode(Mode.ACTIVE).install();}} @TO@ for (org.jboss.jca.common.api.metadata.resourceadapter.ResourceAdapter raxml : raxmls.getResourceAdapters()) {  String deploymentUnitPrefix="";  if (deploymentUnit.getParent() != null) {    deploymentUnitPrefix=deploymentUnit.getParent().getName() + "#";  }  final String deploymentUnitName=deploymentUnitPrefix + deploymentUnit.getName();  if (deploymentUnitName.equals(raxml.getArchive())) {    final String deployment;    if (deploymentUnitName.lastIndexOf('.') == -1) {      deployment=deploymentUnitName;    } else {      deployment=deploymentUnitName.substring(0,deploymentUnitName.lastIndexOf('.'));    }    String raName=connectorXmlDescriptor.getDeploymentName();    ServiceName serviceName=ConnectorServices.registerDeployment(raName);    ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(connectorXmlDescriptor,raxml,module,deployment,serviceName);    ServiceBuilder builder=serviceTarget.addService(serviceName,service).addDependency(ConnectorServices.IRONJACAMAR_MDR,MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSISTORY_SERVICE,ResourceAdapterRepository.class,service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE,ManagementRepository.class,service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,service.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME).addDependency(ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()));    builder.addListener(new AbstractServiceListener<Object>(){      public void transition(      final ServiceController<? extends Object> controller,      final ServiceController.Transition transition){switch (transition) {case STARTING_to_UP:{            CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();            if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {              StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();              if (poolStats.getNames().size() != 0) {                DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);                PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);                ManagementResourceRegistration overrideRegistration=registration;                if (registration.isAllowsOverride()) {                  overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){                    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(                    Locale locale){                      return Collections.emptyMap();                    }                    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(                    Locale locale){                      return Collections.emptyMap();                    }                  });                }                ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);                for (                String statName : poolStats.getNames()) {                  subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));                }                subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);              }            }            break;          }case UP_to_STOP_REQUESTED:{          PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);          ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName);          if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {            overrideRegistration.unregisterSubModel(pe);          }          break;        }    }  }});builder.setInitialMode(Mode.ACTIVE).install();}} @AT@ 5650 @LENGTH@ 5719
---UPD VariableDeclarationStatement@@String deploymentUnitName=deploymentUnitPrefix + deploymentUnit.getName(); @TO@ final String deploymentUnitName=deploymentUnitPrefix + deploymentUnit.getName(); @AT@ 5992 @LENGTH@ 76
------INS Modifier@@final @TO@ VariableDeclarationStatement@@String deploymentUnitName=deploymentUnitPrefix + deploymentUnit.getName(); @AT@ 6175 @LENGTH@ 5
---UPD IfStatement@@if (deploymentUnitName.equals(raxml.getArchive())) {  final String deployment;  if (deploymentUnitName.lastIndexOf('.') == -1) {    deployment=deploymentUnitName;  } else {    deployment=deploymentUnitName.substring(0,deploymentUnitName.lastIndexOf('.'));  }  String raName=connectorXmlDescriptor.getDeploymentName();  ServiceName serviceName=ConnectorServices.registerDeployment(raName);  ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(connectorXmlDescriptor,raxml,module,deployment,serviceName);  ServiceBuilder builder=serviceTarget.addService(serviceName,service).addDependency(ConnectorServices.IRONJACAMAR_MDR,MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSISTORY_SERVICE,ResourceAdapterRepository.class,service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE,ManagementRepository.class,service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,service.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME).addDependency(ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()));  builder.addListener(new AbstractServiceListener<Object>(){    public void transition(    final ServiceController<? extends Object> controller,    final ServiceController.Transition transition){switch (transition) {case STARTING_to_UP:{          CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();          if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {            StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();            if (poolStats.getNames().size() != 0) {              DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);              PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);              ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);              for (              String statName : poolStats.getNames()) {                subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));              }              subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);            }          }          break;        }case UP_to_STOP_REQUESTED:{        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {          registration.unregisterSubModel(pe);        }        break;      }  }}});builder.setInitialMode(Mode.ACTIVE).install();} @TO@ if (deploymentUnitName.equals(raxml.getArchive())) {  final String deployment;  if (deploymentUnitName.lastIndexOf('.') == -1) {    deployment=deploymentUnitName;  } else {    deployment=deploymentUnitName.substring(0,deploymentUnitName.lastIndexOf('.'));  }  String raName=connectorXmlDescriptor.getDeploymentName();  ServiceName serviceName=ConnectorServices.registerDeployment(raName);  ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(connectorXmlDescriptor,raxml,module,deployment,serviceName);  ServiceBuilder builder=serviceTarget.addService(serviceName,service).addDependency(ConnectorServices.IRONJACAMAR_MDR,MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSISTORY_SERVICE,ResourceAdapterRepository.class,service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE,ManagementRepository.class,service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,service.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME).addDependency(ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()));  builder.addListener(new AbstractServiceListener<Object>(){    public void transition(    final ServiceController<? extends Object> controller,    final ServiceController.Transition transition){switch (transition) {case STARTING_to_UP:{          CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();          if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {            StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();            if (poolStats.getNames().size() != 0) {              DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);              PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);              ManagementResourceRegistration overrideRegistration=registration;              if (registration.isAllowsOverride()) {                overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){                  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(                  Locale locale){                    return Collections.emptyMap();                  }                  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(                  Locale locale){                    return Collections.emptyMap();                  }                });              }              ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);              for (              String statName : poolStats.getNames()) {                subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));              }              subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);            }          }          break;        }case UP_to_STOP_REQUESTED:{        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName);        if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {          overrideRegistration.unregisterSubModel(pe);        }        break;      }  }}});builder.setInitialMode(Mode.ACTIVE).install();} @AT@ 6086 @LENGTH@ 5269
------UPD Block@@ThenBody:{  final String deployment;  if (deploymentUnitName.lastIndexOf('.') == -1) {    deployment=deploymentUnitName;  } else {    deployment=deploymentUnitName.substring(0,deploymentUnitName.lastIndexOf('.'));  }  String raName=connectorXmlDescriptor.getDeploymentName();  ServiceName serviceName=ConnectorServices.registerDeployment(raName);  ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(connectorXmlDescriptor,raxml,module,deployment,serviceName);  ServiceBuilder builder=serviceTarget.addService(serviceName,service).addDependency(ConnectorServices.IRONJACAMAR_MDR,MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSISTORY_SERVICE,ResourceAdapterRepository.class,service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE,ManagementRepository.class,service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,service.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME).addDependency(ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()));  builder.addListener(new AbstractServiceListener<Object>(){    public void transition(    final ServiceController<? extends Object> controller,    final ServiceController.Transition transition){switch (transition) {case STARTING_to_UP:{          CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();          if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {            StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();            if (poolStats.getNames().size() != 0) {              DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);              PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);              ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);              for (              String statName : poolStats.getNames()) {                subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));              }              subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);            }          }          break;        }case UP_to_STOP_REQUESTED:{        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {          registration.unregisterSubModel(pe);        }        break;      }  }}});builder.setInitialMode(Mode.ACTIVE).install();} @TO@ ThenBody:{  final String deployment;  if (deploymentUnitName.lastIndexOf('.') == -1) {    deployment=deploymentUnitName;  } else {    deployment=deploymentUnitName.substring(0,deploymentUnitName.lastIndexOf('.'));  }  String raName=connectorXmlDescriptor.getDeploymentName();  ServiceName serviceName=ConnectorServices.registerDeployment(raName);  ResourceAdapterXmlDeploymentService service=new ResourceAdapterXmlDeploymentService(connectorXmlDescriptor,raxml,module,deployment,serviceName);  ServiceBuilder builder=serviceTarget.addService(serviceName,service).addDependency(ConnectorServices.IRONJACAMAR_MDR,MetadataRepository.class,service.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSISTORY_SERVICE,ResourceAdapterRepository.class,service.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSISTORY_SERVICE,ManagementRepository.class,service.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE,ResourceAdapterDeploymentRegistry.class,service.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE,TransactionIntegration.class,service.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE,JcaSubsystemConfiguration.class,service.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME,SubjectFactory.class,service.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE,CachedConnectionManager.class,service.getCcmInjector()).addDependency(ConnectorServices.IDLE_REMOVER_SERVICE).addDependency(ConnectorServices.CONNECTION_VALIDATOR_SERVICE).addDependency(NamingService.SERVICE_NAME).addDependency(ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName()));  builder.addListener(new AbstractServiceListener<Object>(){    public void transition(    final ServiceController<? extends Object> controller,    final ServiceController.Transition transition){switch (transition) {case STARTING_to_UP:{          CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();          if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {            StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();            if (poolStats.getNames().size() != 0) {              DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);              PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);              ManagementResourceRegistration overrideRegistration=registration;              if (registration.isAllowsOverride()) {                overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){                  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(                  Locale locale){                    return Collections.emptyMap();                  }                  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(                  Locale locale){                    return Collections.emptyMap();                  }                });              }              ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);              for (              String statName : poolStats.getNames()) {                subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));              }              subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);            }          }          break;        }case UP_to_STOP_REQUESTED:{        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName);        if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {          overrideRegistration.unregisterSubModel(pe);        }        break;      }  }}});builder.setInitialMode(Mode.ACTIVE).install();} @AT@ 6137 @LENGTH@ 5218
---------UPD ExpressionStatement@@MethodInvocation:builder.addListener(new AbstractServiceListener<Object>(){
  public void transition(  final ServiceController<? extends Object> controller,  final ServiceController.Transition transition){
switch (transition) {
case STARTING_to_UP:
{
        CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();
        if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {
          StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();
          if (poolStats.getNames().size() != 0) {
            DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);
            PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
            ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);
            for (            String statName : poolStats.getNames()) {
              subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));
            }
            subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);
          }
        }
        break;
      }
case UP_to_STOP_REQUESTED:
{
      PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
      if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {
        registration.unregisterSubModel(pe);
      }
      break;
    }
}
}
}
) @TO@ MethodInvocation:builder.addListener(new AbstractServiceListener<Object>(){
  public void transition(  final ServiceController<? extends Object> controller,  final ServiceController.Transition transition){
switch (transition) {
case STARTING_to_UP:
{
        CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();
        if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {
          StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();
          if (poolStats.getNames().size() != 0) {
            DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);
            PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
            ManagementResourceRegistration overrideRegistration=registration;
            if (registration.isAllowsOverride()) {
              overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
                @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(                Locale locale){
                  return Collections.emptyMap();
                }
                @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(                Locale locale){
                  return Collections.emptyMap();
                }
              }
);
            }
            ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);
            for (            String statName : poolStats.getNames()) {
              subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));
            }
            subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);
          }
        }
        break;
      }
case UP_to_STOP_REQUESTED:
{
      PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
      ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName);
      if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {
        overrideRegistration.unregisterSubModel(pe);
      }
      break;
    }
}
}
}
) @AT@ 8838 @LENGTH@ 2438
------------UPD MethodInvocation@@builder.addListener(new AbstractServiceListener<Object>(){
  public void transition(  final ServiceController<? extends Object> controller,  final ServiceController.Transition transition){
switch (transition) {
case STARTING_to_UP:
{
        CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();
        if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {
          StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();
          if (poolStats.getNames().size() != 0) {
            DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);
            PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
            ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);
            for (            String statName : poolStats.getNames()) {
              subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));
            }
            subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);
          }
        }
        break;
      }
case UP_to_STOP_REQUESTED:
{
      PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
      if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {
        registration.unregisterSubModel(pe);
      }
      break;
    }
}
}
}
) @TO@ builder.addListener(new AbstractServiceListener<Object>(){
  public void transition(  final ServiceController<? extends Object> controller,  final ServiceController.Transition transition){
switch (transition) {
case STARTING_to_UP:
{
        CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();
        if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {
          StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();
          if (poolStats.getNames().size() != 0) {
            DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);
            PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
            ManagementResourceRegistration overrideRegistration=registration;
            if (registration.isAllowsOverride()) {
              overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
                @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(                Locale locale){
                  return Collections.emptyMap();
                }
                @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(                Locale locale){
                  return Collections.emptyMap();
                }
              }
);
            }
            ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);
            for (            String statName : poolStats.getNames()) {
              subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));
            }
            subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);
          }
        }
        break;
      }
case UP_to_STOP_REQUESTED:
{
      PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
      ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName);
      if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {
        overrideRegistration.unregisterSubModel(pe);
      }
      break;
    }
}
}
}
) @AT@ 8838 @LENGTH@ 2437
---------------UPD SimpleName@@MethodName:addListener:[new AbstractServiceListener<Object>(){
  public void transition(  final ServiceController<? extends Object> controller,  final ServiceController.Transition transition){
switch (transition) {
case STARTING_to_UP:
{
        CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();
        if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {
          StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();
          if (poolStats.getNames().size() != 0) {
            DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);
            PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
            ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);
            for (            String statName : poolStats.getNames()) {
              subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));
            }
            subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);
          }
        }
        break;
      }
case UP_to_STOP_REQUESTED:
{
      PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
      if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {
        registration.unregisterSubModel(pe);
      }
      break;
    }
}
}
}
] @TO@ MethodName:addListener:[new AbstractServiceListener<Object>(){
  public void transition(  final ServiceController<? extends Object> controller,  final ServiceController.Transition transition){
switch (transition) {
case STARTING_to_UP:
{
        CommonDeployment deploymentMD=((ResourceAdapterXmlDeploymentService)controller.getService()).getRaxmlDeployment();
        if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {
          StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();
          if (poolStats.getNames().size() != 0) {
            DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);
            PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
            ManagementResourceRegistration overrideRegistration=registration;
            if (registration.isAllowsOverride()) {
              overrideRegistration=registration.registerOverrideModel(deploymentUnitName,new OverrideDescriptionProvider(){
                @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(                Locale locale){
                  return Collections.emptyMap();
                }
                @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(                Locale locale){
                  return Collections.emptyMap();
                }
              }
);
            }
            ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);
            for (            String statName : poolStats.getNames()) {
              subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));
            }
            subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);
          }
        }
        break;
      }
case UP_to_STOP_REQUESTED:
{
      PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);
      ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnitName);
      if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {
        overrideRegistration.unregisterSubModel(pe);
      }
      break;
    }
}
}
}
] @AT@ 8846 @LENGTH@ 2429


INS MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @TO@ TypeDeclaration@@[public]SesEndpoint, DefaultEndpoint @AT@ 1687 @LENGTH@ 166
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @AT@ 1687 @LENGTH@ 6
---INS SimpleName@@MethodName:SesEndpoint @TO@ MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @AT@ 1694 @LENGTH@ 11
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @AT@ 1706 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 1706 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 1713 @LENGTH@ 3
---INS SingleVariableDeclaration@@Component component @TO@ MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @AT@ 1718 @LENGTH@ 19
------INS SimpleType@@Component @TO@ SingleVariableDeclaration@@Component component @AT@ 1718 @LENGTH@ 9
------INS SimpleName@@component @TO@ SingleVariableDeclaration@@Component component @AT@ 1728 @LENGTH@ 9
---INS SingleVariableDeclaration@@SesConfiguration configuration @TO@ MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @AT@ 1739 @LENGTH@ 30
------INS SimpleType@@SesConfiguration @TO@ SingleVariableDeclaration@@SesConfiguration configuration @AT@ 1739 @LENGTH@ 16
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@SesConfiguration configuration @AT@ 1756 @LENGTH@ 13
---INS SuperConstructorInvocation@@super(uri,component);
 @TO@ MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @AT@ 1781 @LENGTH@ 22
------INS SimpleName@@uri @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 1787 @LENGTH@ 3
------INS SimpleName@@component @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 1792 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.configuration=configuration @TO@ MethodDeclaration@@public, voidMethodName:SesEndpoint, String uri, Component component, SesConfiguration configuration,  @AT@ 1812 @LENGTH@ 35
------INS Assignment@@this.configuration=configuration @TO@ ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 1812 @LENGTH@ 34
---------INS FieldAccess@@this.configuration @TO@ Assignment@@this.configuration=configuration @AT@ 1812 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.configuration @AT@ 1812 @LENGTH@ 4
------------INS SimpleName@@configuration @TO@ FieldAccess@@this.configuration @AT@ 1817 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.configuration=configuration @AT@ 1830 @LENGTH@ 1
---------INS SimpleName@@configuration @TO@ Assignment@@this.configuration=configuration @AT@ 1833 @LENGTH@ 13


UPD IfStatement@@if (current.isDirectory()) {  for (  File child : current.listFiles()) {    getCandidates(parent,child,settings);  }  String p=buildZKPath(parent,current).replaceFirst("/","");  settings.put(p,null);} else {  BufferedInputStream in=new BufferedInputStream(new FileInputStream(current));  byte[] contents=new byte[in.available()];  in.read(contents);  in.close();  String p=buildZKPath(parent,current).replaceFirst("/","");  if (p.endsWith(".cfg")) {    p=p.substring(0,p.length() - ".cfg".length());  }  if (matches(agentProperties,p,false)) {    settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));    String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group();    settings.put(p.substring(0,p.lastIndexOf("/")),parents);  } else   if (!matches(profile,p,false)) {    settings.put(p,new String(contents));  }} @TO@ if (current.isDirectory()) {  for (  File child : current.listFiles()) {    getCandidates(parent,child,settings);  }  String p=buildZKPath(parent,current).replaceFirst("/","");  if (!matches(profile,"/" + p,false)) {    settings.put(p,null);  }} else {  BufferedInputStream in=new BufferedInputStream(new FileInputStream(current));  byte[] contents=new byte[in.available()];  in.read(contents);  in.close();  String p=buildZKPath(parent,current).replaceFirst("/","");  if (p.endsWith(".cfg")) {    p=p.substring(0,p.length() - ".cfg".length());  }  if (matches(agentProperties,"/" + p,false)) {    settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));    Properties props=new Properties();    props.load(new StringReader(new String(contents)));    String parents=(String)props.get("parents");    settings.put(p.substring(0,p.lastIndexOf("/")),parents);  } else   if (!matches(profile,"/" + p,false)) {    settings.put(p,new String(contents));  }} @AT@ 4404 @LENGTH@ 1141
---UPD Block@@ThenBody:{  for (  File child : current.listFiles()) {    getCandidates(parent,child,settings);  }  String p=buildZKPath(parent,current).replaceFirst("/","");  settings.put(p,null);} @TO@ ThenBody:{  for (  File child : current.listFiles()) {    getCandidates(parent,child,settings);  }  String p=buildZKPath(parent,current).replaceFirst("/","");  if (!matches(profile,"/" + p,false)) {    settings.put(p,null);  }} @AT@ 4431 @LENGTH@ 244
------INS IfStatement@@if (!matches(profile,"/" + p,false)) {  settings.put(p,null);} @TO@ Block@@ThenBody:{  for (  File child : current.listFiles()) {    getCandidates(parent,child,settings);  }  String p=buildZKPath(parent,current).replaceFirst("/","");  settings.put(p,null);} @AT@ 4643 @LENGTH@ 93
---------INS PrefixExpression@@!matches(profile,"/" + p,false) @TO@ IfStatement@@if (!matches(profile,"/" + p,false)) {  settings.put(p,null);} @AT@ 4647 @LENGTH@ 33
------------INS Operator@@! @TO@ PrefixExpression@@!matches(profile,"/" + p,false) @AT@ 4647 @LENGTH@ 1
------------INS MethodInvocation@@matches(profile,"/" + p,false) @TO@ PrefixExpression@@!matches(profile,"/" + p,false) @AT@ 4648 @LENGTH@ 32
---------------INS SimpleName@@MethodName:matches:[profile, "/" + p, false] @TO@ MethodInvocation@@matches(profile,"/" + p,false) @AT@ 4648 @LENGTH@ 32
------------------INS SimpleName@@profile @TO@ SimpleName@@MethodName:matches:[profile, "/" + p, false] @AT@ 4656 @LENGTH@ 7
------------------INS InfixExpression@@"/" + p @TO@ SimpleName@@MethodName:matches:[profile, "/" + p, false] @AT@ 4665 @LENGTH@ 7
---------------------INS StringLiteral@@"/" @TO@ InfixExpression@@"/" + p @AT@ 4665 @LENGTH@ 3
---------------------INS Operator@@+ @TO@ InfixExpression@@"/" + p @AT@ 4668 @LENGTH@ 1
---------------------INS SimpleName@@p @TO@ InfixExpression@@"/" + p @AT@ 4671 @LENGTH@ 1
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:matches:[profile, "/" + p, false] @AT@ 4674 @LENGTH@ 5
---------INS Block@@ThenBody:{  settings.put(p,null);} @TO@ IfStatement@@if (!matches(profile,"/" + p,false)) {  settings.put(p,null);} @AT@ 4682 @LENGTH@ 54
------------MOV ExpressionStatement@@MethodInvocation:settings.put(p,null) @TO@ Block@@ThenBody:{  settings.put(p,null);} @AT@ 4643 @LENGTH@ 22
---UPD Block@@ElseBody:{  BufferedInputStream in=new BufferedInputStream(new FileInputStream(current));  byte[] contents=new byte[in.available()];  in.read(contents);  in.close();  String p=buildZKPath(parent,current).replaceFirst("/","");  if (p.endsWith(".cfg")) {    p=p.substring(0,p.length() - ".cfg".length());  }  if (matches(agentProperties,p,false)) {    settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));    String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group();    settings.put(p.substring(0,p.lastIndexOf("/")),parents);  } else   if (!matches(profile,p,false)) {    settings.put(p,new String(contents));  }} @TO@ ElseBody:{  BufferedInputStream in=new BufferedInputStream(new FileInputStream(current));  byte[] contents=new byte[in.available()];  in.read(contents);  in.close();  String p=buildZKPath(parent,current).replaceFirst("/","");  if (p.endsWith(".cfg")) {    p=p.substring(0,p.length() - ".cfg".length());  }  if (matches(agentProperties,"/" + p,false)) {    settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));    Properties props=new Properties();    props.load(new StringReader(new String(contents)));    String parents=(String)props.get("parents");    settings.put(p.substring(0,p.lastIndexOf("/")),parents);  } else   if (!matches(profile,"/" + p,false)) {    settings.put(p,new String(contents));  }} @AT@ 4681 @LENGTH@ 864
------UPD IfStatement@@if (matches(agentProperties,p,false)) {  settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));  String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group();  settings.put(p.substring(0,p.lastIndexOf("/")),parents);} else if (!matches(profile,p,false)) {  settings.put(p,new String(contents));} @TO@ if (matches(agentProperties,"/" + p,false)) {  settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));  Properties props=new Properties();  props.load(new StringReader(new String(contents)));  String parents=(String)props.get("parents");  settings.put(p.substring(0,p.lastIndexOf("/")),parents);} else if (!matches(profile,"/" + p,false)) {  settings.put(p,new String(contents));} @AT@ 5092 @LENGTH@ 443
---------UPD MethodInvocation@@matches(agentProperties,p,false) @TO@ matches(agentProperties,"/" + p,false) @AT@ 5096 @LENGTH@ 32
------------UPD SimpleName@@MethodName:matches:[agentProperties, p, false] @TO@ MethodName:matches:[agentProperties, "/" + p, false] @AT@ 5096 @LENGTH@ 32
---------------DEL SimpleName@@p @AT@ 5120 @LENGTH@ 1
---------------INS InfixExpression@@"/" + p @TO@ SimpleName@@MethodName:matches:[agentProperties, p, false] @AT@ 5191 @LENGTH@ 7
------------------INS StringLiteral@@"/" @TO@ InfixExpression@@"/" + p @AT@ 5191 @LENGTH@ 3
------------------INS Operator@@+ @TO@ InfixExpression@@"/" + p @AT@ 5194 @LENGTH@ 1
------------------INS SimpleName@@p @TO@ InfixExpression@@"/" + p @AT@ 5197 @LENGTH@ 1
---------UPD Block@@ThenBody:{  settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));  String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group();  settings.put(p.substring(0,p.lastIndexOf("/")),parents);} @TO@ ThenBody:{  settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));  Properties props=new Properties();  props.load(new StringReader(new String(contents)));  String parents=(String)props.get("parents");  settings.put(p.substring(0,p.lastIndexOf("/")),parents);} @AT@ 5130 @LENGTH@ 298
------------UPD VariableDeclarationStatement@@String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group(); @TO@ String parents=(String)props.get("parents"); @AT@ 5245 @LENGTH@ 96
---------------UPD VariableDeclarationFragment@@parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group() @TO@ parents=(String)props.get("parents") @AT@ 5252 @LENGTH@ 88
------------------DEL MethodInvocation@@Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group() @AT@ 5262 @LENGTH@ 78
---------------------DEL MethodInvocation@@MethodName:toMatchResult:[] @AT@ 5262 @LENGTH@ 70
---------------------DEL MethodInvocation@@MethodName:matcher:[p] @AT@ 5262 @LENGTH@ 54
------------------------DEL SimpleName@@p @AT@ 5314 @LENGTH@ 1
---------------------DEL MethodInvocation@@MethodName:compile:[RegexSupport.PARENTS_REGEX] @AT@ 5262 @LENGTH@ 43
------------------------DEL QualifiedName@@RegexSupport.PARENTS_REGEX @AT@ 5278 @LENGTH@ 26
---------------------------DEL SimpleName@@RegexSupport @AT@ 5278 @LENGTH@ 12
---------------------------DEL SimpleName@@PARENTS_REGEX @AT@ 5291 @LENGTH@ 13
------------------INS CastExpression@@(String)props.get("parents") @TO@ VariableDeclarationFragment@@parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group() @AT@ 5460 @LENGTH@ 29
---------------------INS SimpleType@@String @TO@ CastExpression@@(String)props.get("parents") @AT@ 5461 @LENGTH@ 6
---------------------INS MethodInvocation@@props.get("parents") @TO@ CastExpression@@(String)props.get("parents") @AT@ 5469 @LENGTH@ 20
------------------------MOV SimpleName@@Name:Pattern @TO@ MethodInvocation@@props.get("parents") @AT@ 5262 @LENGTH@ 7
------------------------MOV SimpleName@@MethodName:group:[] @TO@ MethodInvocation@@props.get("parents") @AT@ 5333 @LENGTH@ 7
---------------------------INS StringLiteral@@"parents" @TO@ SimpleName@@MethodName:group:[] @AT@ 5479 @LENGTH@ 9
------------INS VariableDeclarationStatement@@Properties props=new Properties(); @TO@ Block@@ThenBody:{  settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));  String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group();  settings.put(p.substring(0,p.lastIndexOf("/")),parents);} @AT@ 5322 @LENGTH@ 36
---------------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties props=new Properties(); @AT@ 5322 @LENGTH@ 10
---------------INS VariableDeclarationFragment@@props=new Properties() @TO@ VariableDeclarationStatement@@Properties props=new Properties(); @AT@ 5333 @LENGTH@ 24
------------------INS SimpleName@@props @TO@ VariableDeclarationFragment@@props=new Properties() @AT@ 5333 @LENGTH@ 5
------------------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@props=new Properties() @AT@ 5341 @LENGTH@ 16
---------------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 5341 @LENGTH@ 3
---------------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 5345 @LENGTH@ 10
------------INS ExpressionStatement@@MethodInvocation:props.load(new StringReader(new String(contents))) @TO@ Block@@ThenBody:{  settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));  String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group();  settings.put(p.substring(0,p.lastIndexOf("/")),parents);} @AT@ 5375 @LENGTH@ 51
---------------INS MethodInvocation@@props.load(new StringReader(new String(contents))) @TO@ ExpressionStatement@@MethodInvocation:props.load(new StringReader(new String(contents))) @AT@ 5375 @LENGTH@ 50
------------------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.load(new StringReader(new String(contents))) @AT@ 5375 @LENGTH@ 5
------------------INS SimpleName@@MethodName:load:[new StringReader(new String(contents))] @TO@ MethodInvocation@@props.load(new StringReader(new String(contents))) @AT@ 5381 @LENGTH@ 44
---------------------INS ClassInstanceCreation@@StringReader[new String(contents)] @TO@ SimpleName@@MethodName:load:[new StringReader(new String(contents))] @AT@ 5386 @LENGTH@ 38
------------------------INS New@@new @TO@ ClassInstanceCreation@@StringReader[new String(contents)] @AT@ 5386 @LENGTH@ 3
------------------------INS SimpleType@@StringReader @TO@ ClassInstanceCreation@@StringReader[new String(contents)] @AT@ 5390 @LENGTH@ 12
------------------------INS ClassInstanceCreation@@String[contents] @TO@ ClassInstanceCreation@@StringReader[new String(contents)] @AT@ 5403 @LENGTH@ 20
---------------------------INS New@@new @TO@ ClassInstanceCreation@@String[contents] @AT@ 5403 @LENGTH@ 3
---------------------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[contents] @AT@ 5407 @LENGTH@ 6
---------------------------INS SimpleName@@contents @TO@ ClassInstanceCreation@@String[contents] @AT@ 5414 @LENGTH@ 8
---------UPD Block@@ElseBody:if (!matches(profile,p,false)) {  settings.put(p,new String(contents));} @TO@ ElseBody:if (!matches(profile,"/" + p,false)) {  settings.put(p,new String(contents));} @AT@ 5434 @LENGTH@ 101
------------UPD IfStatement@@if (!matches(profile,p,false)) {  settings.put(p,new String(contents));} @TO@ if (!matches(profile,"/" + p,false)) {  settings.put(p,new String(contents));} @AT@ 5434 @LENGTH@ 101
---------------UPD PrefixExpression@@!matches(profile,p,false) @TO@ !matches(profile,"/" + p,false) @AT@ 5438 @LENGTH@ 25
------------------UPD MethodInvocation@@matches(profile,p,false) @TO@ matches(profile,"/" + p,false) @AT@ 5439 @LENGTH@ 24
---------------------UPD SimpleName@@MethodName:matches:[profile, p, false] @TO@ MethodName:matches:[profile, "/" + p, false] @AT@ 5439 @LENGTH@ 24
------------------------DEL SimpleName@@p @AT@ 5455 @LENGTH@ 1
------------------------INS InfixExpression@@"/" + p @TO@ SimpleName@@MethodName:matches:[profile, p, false] @AT@ 5604 @LENGTH@ 7
---------------------------INS StringLiteral@@"/" @TO@ InfixExpression@@"/" + p @AT@ 5604 @LENGTH@ 3
---------------------------INS Operator@@+ @TO@ InfixExpression@@"/" + p @AT@ 5607 @LENGTH@ 1
---------------------------INS SimpleName@@p @TO@ InfixExpression@@"/" + p @AT@ 5610 @LENGTH@ 1
---------------------UPD SimpleName@@MethodName:matches:[profile, p, false] @TO@ MethodName:matches:[profile, "/" + p, false] @AT@ 5439 @LENGTH@ 24
------------------------DEL SimpleName@@p @AT@ 5455 @LENGTH@ 1
------------------------INS InfixExpression@@"/" + p @TO@ SimpleName@@MethodName:matches:[profile, p, false] @AT@ 5604 @LENGTH@ 7
---------------------------INS StringLiteral@@"/" @TO@ InfixExpression@@"/" + p @AT@ 5604 @LENGTH@ 3
---------------------------INS Operator@@+ @TO@ InfixExpression@@"/" + p @AT@ 5607 @LENGTH@ 1
---------------------------INS SimpleName@@p @TO@ InfixExpression@@"/" + p @AT@ 5610 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Assert.assertNull(mock.getExchanges().get(0).getIn().getHeader("foo")) @TO@ MethodInvocation:mock.expectedHeaderReceived("foo",0) @AT@ 2301 @LENGTH@ 71
---INS MethodInvocation@@mock.expectedHeaderReceived("foo",0) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNull(mock.getExchanges().get(0).getIn().getHeader("foo")) @AT@ 2139 @LENGTH@ 37
------MOV SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedHeaderReceived("foo",0) @AT@ 2319 @LENGTH@ 4
------MOV SimpleName@@MethodName:getHeader:["foo"] @TO@ MethodInvocation@@mock.expectedHeaderReceived("foo",0) @AT@ 2354 @LENGTH@ 16
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getHeader:["foo"] @AT@ 2174 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getHeader:["foo"] @AT@ 2174 @LENGTH@ 1
---DEL MethodInvocation@@Assert.assertNull(mock.getExchanges().get(0).getIn().getHeader("foo")) @AT@ 2301 @LENGTH@ 70
------DEL SimpleName@@Name:Assert @AT@ 2301 @LENGTH@ 6
------DEL SimpleName@@MethodName:assertNull:[mock.getExchanges().get(0).getIn().getHeader("foo")] @AT@ 2308 @LENGTH@ 63
---------DEL MethodInvocation@@mock.getExchanges().get(0).getIn().getHeader("foo") @AT@ 2319 @LENGTH@ 51
------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2319 @LENGTH@ 34
------------DEL MethodInvocation@@MethodName:get:[0] @AT@ 2319 @LENGTH@ 26
---------------DEL NumberLiteral@@0 @AT@ 2343 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getExchanges:[] @AT@ 2319 @LENGTH@ 19


UPD FieldDeclaration@@static, String, [CLIENT_ID_METHOD="clientId"] @TO@ static, String, [CLIENT_ID_METHOD="clientID"] @AT@ 6333 @LENGTH@ 44
---UPD VariableDeclarationFragment@@CLIENT_ID_METHOD="clientId" @TO@ CLIENT_ID_METHOD="clientID" @AT@ 6347 @LENGTH@ 29
------UPD StringLiteral@@"clientId" @TO@ "clientID" @AT@ 6366 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:preCreateProcessor() @TO@ MethodDeclaration@@protected, Processor, MethodName:makeProcessor, RouteContext routeContext, Exception,  @AT@ 19343 @LENGTH@ 21
---INS MethodInvocation@@MethodName:preCreateProcessor:[] @TO@ ExpressionStatement@@MethodInvocation:preCreateProcessor() @AT@ 19343 @LENGTH@ 20


UPD TryStatement@@try {  handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex);  if (component instanceof StatelessComponentDescription || component instanceof MessageDrivenComponentDescription) {    handleStatelessSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex);  }} catch (ClassNotFoundException e) {  throw MESSAGES.failToLoadComponentClass(e);} @TO@ try {  if (component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription)   handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex);  if (component instanceof StatelessComponentDescription || component instanceof MessageDrivenComponentDescription) {    handleStatelessSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex);  }} catch (ClassNotFoundException e) {  throw MESSAGES.failToLoadComponentClass(e);} @AT@ 3733 @LENGTH@ 549
---INS IfStatement@@if (component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription) handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex); @TO@ TryStatement@@try {  handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex);  if (component instanceof StatelessComponentDescription || component instanceof MessageDrivenComponentDescription) {    handleStatelessSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex);  }} catch (ClassNotFoundException e) {  throw MESSAGES.failToLoadComponentClass(e);} @AT@ 3839 @LENGTH@ 228
------INS InfixExpression@@component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription @TO@ IfStatement@@if (component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription) handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex); @AT@ 3843 @LENGTH@ 110
---------INS InstanceofExpression@@component instanceof SessionBeanComponentDescription @TO@ InfixExpression@@component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription @AT@ 3843 @LENGTH@ 52
------------INS SimpleName@@component @TO@ InstanceofExpression@@component instanceof SessionBeanComponentDescription @AT@ 3843 @LENGTH@ 9
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@component instanceof SessionBeanComponentDescription @AT@ 3853 @LENGTH@ 10
------------INS SimpleType@@SessionBeanComponentDescription @TO@ InstanceofExpression@@component instanceof SessionBeanComponentDescription @AT@ 3864 @LENGTH@ 31
---------INS Operator@@|| @TO@ InfixExpression@@component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription @AT@ 3895 @LENGTH@ 2
---------INS InstanceofExpression@@component instanceof MessageDrivenComponentDescription @TO@ InfixExpression@@component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription @AT@ 3899 @LENGTH@ 54
------------INS SimpleName@@component @TO@ InstanceofExpression@@component instanceof MessageDrivenComponentDescription @AT@ 3899 @LENGTH@ 9
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@component instanceof MessageDrivenComponentDescription @AT@ 3909 @LENGTH@ 10
------------INS SimpleType@@MessageDrivenComponentDescription @TO@ InstanceofExpression@@component instanceof MessageDrivenComponentDescription @AT@ 3920 @LENGTH@ 33
------INS Block@@ThenBody:handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex); @TO@ IfStatement@@if (component instanceof SessionBeanComponentDescription || component instanceof MessageDrivenComponentDescription) handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex); @AT@ 3983 @LENGTH@ 84
---------MOV ExpressionStatement@@MethodInvocation:handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex) @TO@ Block@@ThenBody:handleSessionBean((EJBComponentDescription)component,classIndex,reflectionIndex); @AT@ 3763 @LENGTH@ 84


UPD VariableDeclarationStatement@@final WSEndpointHandlersMapping mapping=getRequiredAttachment(unit,WS_ENDPOINT_HANDLERS_MAPPING_KEY); @TO@ final WSEndpointHandlersMapping mapping=getOptionalAttachment(unit,WS_ENDPOINT_HANDLERS_MAPPING_KEY); @AT@ 2630 @LENGTH@ 104
---UPD VariableDeclarationFragment@@mapping=getRequiredAttachment(unit,WS_ENDPOINT_HANDLERS_MAPPING_KEY) @TO@ mapping=getOptionalAttachment(unit,WS_ENDPOINT_HANDLERS_MAPPING_KEY) @AT@ 2662 @LENGTH@ 71
------UPD MethodInvocation@@getRequiredAttachment(unit,WS_ENDPOINT_HANDLERS_MAPPING_KEY) @TO@ getOptionalAttachment(unit,WS_ENDPOINT_HANDLERS_MAPPING_KEY) @AT@ 2672 @LENGTH@ 61
---------UPD SimpleName@@MethodName:getRequiredAttachment:[unit, WS_ENDPOINT_HANDLERS_MAPPING_KEY] @TO@ MethodName:getOptionalAttachment:[unit, WS_ENDPOINT_HANDLERS_MAPPING_KEY] @AT@ 2672 @LENGTH@ 61


UPD VariableDeclarationStatement@@MethodDispatcher md=(MethodDispatcher)service.get(MethodDispatcher.class.getName()); @TO@ @SuppressWarnings("deprecation") org.apache.cxf.frontend.MethodDispatcher md=(org.apache.cxf.frontend.MethodDispatcher)service.get(org.apache.cxf.frontend.MethodDispatcher.class.getName()); @AT@ 8235 @LENGTH@ 107
---UPD SimpleType@@MethodDispatcher @TO@ org.apache.cxf.frontend.MethodDispatcher @AT@ 8235 @LENGTH@ 16
---UPD VariableDeclarationFragment@@md=(MethodDispatcher)service.get(MethodDispatcher.class.getName()) @TO@ md=(org.apache.cxf.frontend.MethodDispatcher)service.get(org.apache.cxf.frontend.MethodDispatcher.class.getName()) @AT@ 8252 @LENGTH@ 89
------UPD CastExpression@@(MethodDispatcher)service.get(MethodDispatcher.class.getName()) @TO@ (org.apache.cxf.frontend.MethodDispatcher)service.get(org.apache.cxf.frontend.MethodDispatcher.class.getName()) @AT@ 8257 @LENGTH@ 84
---------UPD SimpleType@@MethodDispatcher @TO@ org.apache.cxf.frontend.MethodDispatcher @AT@ 8258 @LENGTH@ 16
---------UPD MethodInvocation@@service.get(MethodDispatcher.class.getName()) @TO@ service.get(org.apache.cxf.frontend.MethodDispatcher.class.getName()) @AT@ 8275 @LENGTH@ 66
------------UPD SimpleName@@MethodName:get:[MethodDispatcher.class.getName()] @TO@ MethodName:get:[org.apache.cxf.frontend.MethodDispatcher.class.getName()] @AT@ 8304 @LENGTH@ 37
---------------UPD MethodInvocation@@MethodDispatcher.class.getName() @TO@ org.apache.cxf.frontend.MethodDispatcher.class.getName() @AT@ 8308 @LENGTH@ 32
------------------UPD TypeLiteral@@MethodDispatcher.class @TO@ org.apache.cxf.frontend.MethodDispatcher.class @AT@ 8308 @LENGTH@ 22


INS IfStatement@@if (mapping == null) return; @TO@ MethodDeclaration@@protected, void, MethodName:processAnnotation, final DeploymentUnit unit, final ClassInfo classInfo, final AnnotationInstance wsAnnotation, final CompositeIndex compositeIndex, DeploymentUnitProcessingException,  @AT@ 2743 @LENGTH@ 40
---INS InfixExpression@@mapping == null @TO@ IfStatement@@if (mapping == null) return; @AT@ 2747 @LENGTH@ 15
------INS SimpleName@@mapping @TO@ InfixExpression@@mapping == null @AT@ 2747 @LENGTH@ 7
------INS Operator@@== @TO@ InfixExpression@@mapping == null @AT@ 2754 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@mapping == null @AT@ 2758 @LENGTH@ 4
---INS Block@@ThenBody:return; @TO@ IfStatement@@if (mapping == null) return; @AT@ 2776 @LENGTH@ 7
------INS ReturnStatement@@ @TO@ Block@@ThenBody:return; @AT@ 2776 @LENGTH@ 7


UPD MethodDeclaration@@public, boolean, MethodName:isCommentingDisabled,  @TO@ public, boolean, MethodName:isCommentingEnabled,  @AT@ 9625 @LENGTH@ 91
---UPD SimpleName@@MethodName:isCommentingDisabled @TO@ MethodName:isCommentingEnabled @AT@ 9640 @LENGTH@ 20
---UPD ReturnStatement@@InfixExpression:this.commentStart == DISABLED @TO@ InfixExpression:this.commentStart != DISABLED @AT@ 9673 @LENGTH@ 37
------UPD InfixExpression@@this.commentStart == DISABLED @TO@ this.commentStart != DISABLED @AT@ 9680 @LENGTH@ 29
---------UPD Operator@@== @TO@ != @AT@ 9697 @LENGTH@ 2


UPD EnhancedForStatement@@for (ProcessorDefinition type : list) {  buffer.append(type.getLabel());} @TO@ for (ProcessorDefinition<?> type : list) {  buffer.append(type.getLabel());} @AT@ 1952 @LENGTH@ 93
---UPD SingleVariableDeclaration@@ProcessorDefinition type @TO@ ProcessorDefinition<?> type @AT@ 1957 @LENGTH@ 24
------DEL SimpleType@@ProcessorDefinition @AT@ 1957 @LENGTH@ 19
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ SingleVariableDeclaration@@ProcessorDefinition type @AT@ 1960 @LENGTH@ 22
---------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1960 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1980 @LENGTH@ 1


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]ViewDescription,  @AT@ 9316 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 9316 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 9323 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 9330 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:"View of type " + viewClassName + " for "+ componentDescription @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 9351 @LENGTH@ 72
------INS InfixExpression@@"View of type " + viewClassName + " for "+ componentDescription @TO@ ReturnStatement@@InfixExpression:"View of type " + viewClassName + " for "+ componentDescription @AT@ 9358 @LENGTH@ 64
---------INS StringLiteral@@"View of type " @TO@ InfixExpression@@"View of type " + viewClassName + " for "+ componentDescription @AT@ 9358 @LENGTH@ 15
---------INS Operator@@+ @TO@ InfixExpression@@"View of type " + viewClassName + " for "+ componentDescription @AT@ 9373 @LENGTH@ 1
---------INS SimpleName@@viewClassName @TO@ InfixExpression@@"View of type " + viewClassName + " for "+ componentDescription @AT@ 9376 @LENGTH@ 13
---------INS StringLiteral@@" for " @TO@ InfixExpression@@"View of type " + viewClassName + " for "+ componentDescription @AT@ 9392 @LENGTH@ 7
---------INS SimpleName@@componentDescription @TO@ InfixExpression@@"View of type " + viewClassName + " for "+ componentDescription @AT@ 9402 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:removeAllTimers,  @TO@ TypeDeclaration@@[public]EntityBeanComponentInstance, EjbComponentInstance @AT@ 9024 @LENGTH@ 453
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:removeAllTimers,  @AT@ 9024 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:removeAllTimers,  @AT@ 9031 @LENGTH@ 4
---INS SimpleName@@MethodName:removeAllTimers @TO@ MethodDeclaration@@public, void, MethodName:removeAllTimers,  @AT@ 9036 @LENGTH@ 15
---INS EnhancedForStatement@@for (final Timer timer : getComponent().getTimerService().getTimers()) {  if (timer instanceof TimerImpl) {    TimerImpl timerImpl=(TimerImpl)timer;    if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {      timer.cancel();    }  }} @TO@ MethodDeclaration@@public, void, MethodName:removeAllTimers,  @AT@ 9108 @LENGTH@ 363
------INS SingleVariableDeclaration@@final Timer timer @TO@ EnhancedForStatement@@for (final Timer timer : getComponent().getTimerService().getTimers()) {  if (timer instanceof TimerImpl) {    TimerImpl timerImpl=(TimerImpl)timer;    if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {      timer.cancel();    }  }} @AT@ 9113 @LENGTH@ 17
---------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Timer timer @AT@ 9113 @LENGTH@ 5
---------INS SimpleType@@Timer @TO@ SingleVariableDeclaration@@final Timer timer @AT@ 9119 @LENGTH@ 5
---------INS SimpleName@@timer @TO@ SingleVariableDeclaration@@final Timer timer @AT@ 9125 @LENGTH@ 5
------INS MethodInvocation@@getComponent().getTimerService().getTimers() @TO@ EnhancedForStatement@@for (final Timer timer : getComponent().getTimerService().getTimers()) {  if (timer instanceof TimerImpl) {    TimerImpl timerImpl=(TimerImpl)timer;    if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {      timer.cancel();    }  }} @AT@ 9133 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:getTimerService:[] @TO@ MethodInvocation@@getComponent().getTimerService().getTimers() @AT@ 9133 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@getComponent().getTimerService().getTimers() @AT@ 9133 @LENGTH@ 14
---------INS SimpleName@@MethodName:getTimers:[] @TO@ MethodInvocation@@getComponent().getTimerService().getTimers() @AT@ 9166 @LENGTH@ 11
------INS IfStatement@@if (timer instanceof TimerImpl) {  TimerImpl timerImpl=(TimerImpl)timer;  if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {    timer.cancel();  }} @TO@ EnhancedForStatement@@for (final Timer timer : getComponent().getTimerService().getTimers()) {  if (timer instanceof TimerImpl) {    TimerImpl timerImpl=(TimerImpl)timer;    if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {      timer.cancel();    }  }} @AT@ 9193 @LENGTH@ 268
---------INS InstanceofExpression@@timer instanceof TimerImpl @TO@ IfStatement@@if (timer instanceof TimerImpl) {  TimerImpl timerImpl=(TimerImpl)timer;  if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {    timer.cancel();  }} @AT@ 9197 @LENGTH@ 26
------------INS SimpleName@@timer @TO@ InstanceofExpression@@timer instanceof TimerImpl @AT@ 9197 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@timer instanceof TimerImpl @AT@ 9203 @LENGTH@ 10
------------INS SimpleType@@TimerImpl @TO@ InstanceofExpression@@timer instanceof TimerImpl @AT@ 9214 @LENGTH@ 9
---------INS Block@@ThenBody:{  TimerImpl timerImpl=(TimerImpl)timer;  if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {    timer.cancel();  }} @TO@ IfStatement@@if (timer instanceof TimerImpl) {  TimerImpl timerImpl=(TimerImpl)timer;  if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {    timer.cancel();  }} @AT@ 9225 @LENGTH@ 236
------------INS VariableDeclarationStatement@@TimerImpl timerImpl=(TimerImpl)timer; @TO@ Block@@ThenBody:{  TimerImpl timerImpl=(TimerImpl)timer;  if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {    timer.cancel();  }} @AT@ 9243 @LENGTH@ 40
---------------INS SimpleType@@TimerImpl @TO@ VariableDeclarationStatement@@TimerImpl timerImpl=(TimerImpl)timer; @AT@ 9243 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@timerImpl=(TimerImpl)timer @TO@ VariableDeclarationStatement@@TimerImpl timerImpl=(TimerImpl)timer; @AT@ 9253 @LENGTH@ 29
------------------INS SimpleName@@timerImpl @TO@ VariableDeclarationFragment@@timerImpl=(TimerImpl)timer @AT@ 9253 @LENGTH@ 9
------------------INS CastExpression@@(TimerImpl)timer @TO@ VariableDeclarationFragment@@timerImpl=(TimerImpl)timer @AT@ 9265 @LENGTH@ 17
---------------------INS SimpleType@@TimerImpl @TO@ CastExpression@@(TimerImpl)timer @AT@ 9266 @LENGTH@ 9
---------------------INS SimpleName@@timer @TO@ CastExpression@@(TimerImpl)timer @AT@ 9277 @LENGTH@ 5
------------INS IfStatement@@if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {  timer.cancel();} @TO@ Block@@ThenBody:{  TimerImpl timerImpl=(TimerImpl)timer;  if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {    timer.cancel();  }} @AT@ 9300 @LENGTH@ 147
---------------INS InfixExpression@@timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey()) @TO@ IfStatement@@if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {  timer.cancel();} @AT@ 9304 @LENGTH@ 86
------------------INS InfixExpression@@timerImpl.getPrimaryKey() != null @TO@ InfixExpression@@timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey()) @AT@ 9304 @LENGTH@ 33
---------------------INS MethodInvocation@@timerImpl.getPrimaryKey() @TO@ InfixExpression@@timerImpl.getPrimaryKey() != null @AT@ 9304 @LENGTH@ 25
------------------------INS SimpleName@@Name:timerImpl @TO@ MethodInvocation@@timerImpl.getPrimaryKey() @AT@ 9304 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getPrimaryKey:[] @TO@ MethodInvocation@@timerImpl.getPrimaryKey() @AT@ 9314 @LENGTH@ 15
---------------------INS Operator@@!= @TO@ InfixExpression@@timerImpl.getPrimaryKey() != null @AT@ 9329 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@timerImpl.getPrimaryKey() != null @AT@ 9333 @LENGTH@ 4
------------------INS Operator@@&& @TO@ InfixExpression@@timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey()) @AT@ 9337 @LENGTH@ 2
------------------INS MethodInvocation@@timerImpl.getPrimaryKey().equals(getPrimaryKey()) @TO@ InfixExpression@@timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey()) @AT@ 9341 @LENGTH@ 49
---------------------INS MethodInvocation@@MethodName:getPrimaryKey:[] @TO@ MethodInvocation@@timerImpl.getPrimaryKey().equals(getPrimaryKey()) @AT@ 9341 @LENGTH@ 25
---------------------INS SimpleName@@Name:timerImpl @TO@ MethodInvocation@@timerImpl.getPrimaryKey().equals(getPrimaryKey()) @AT@ 9341 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:equals:[getPrimaryKey()] @TO@ MethodInvocation@@timerImpl.getPrimaryKey().equals(getPrimaryKey()) @AT@ 9367 @LENGTH@ 23
------------------------INS MethodInvocation@@MethodName:getPrimaryKey:[] @TO@ SimpleName@@MethodName:equals:[getPrimaryKey()] @AT@ 9374 @LENGTH@ 15
---------------INS Block@@ThenBody:{  timer.cancel();} @TO@ IfStatement@@if (timerImpl.getPrimaryKey() != null && timerImpl.getPrimaryKey().equals(getPrimaryKey())) {  timer.cancel();} @AT@ 9392 @LENGTH@ 55
------------------INS ExpressionStatement@@MethodInvocation:timer.cancel() @TO@ Block@@ThenBody:{  timer.cancel();} @AT@ 9414 @LENGTH@ 15
---------------------INS MethodInvocation@@timer.cancel() @TO@ ExpressionStatement@@MethodInvocation:timer.cancel() @AT@ 9414 @LENGTH@ 14
------------------------INS SimpleName@@Name:timer @TO@ MethodInvocation@@timer.cancel() @AT@ 9414 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:cancel:[] @TO@ MethodInvocation@@timer.cancel() @AT@ 9420 @LENGTH@ 8


UPD VariableDeclarationStatement@@final ModelNode subModel=context.readModel(PathAddress.EMPTY_ADDRESS); @TO@ final ModelNode subModel=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)); @AT@ 2127 @LENGTH@ 72
---UPD VariableDeclarationFragment@@subModel=context.readModel(PathAddress.EMPTY_ADDRESS) @TO@ subModel=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 2143 @LENGTH@ 55
------DEL MethodInvocation@@context.readModel(PathAddress.EMPTY_ADDRESS) @AT@ 2154 @LENGTH@ 44
------INS MethodInvocation@@Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @TO@ VariableDeclarationFragment@@subModel=context.readModel(PathAddress.EMPTY_ADDRESS) @AT@ 2205 @LENGTH@ 73
---------INS QualifiedName@@Name:Resource.Tools @TO@ MethodInvocation@@Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 2205 @LENGTH@ 14
---------INS SimpleName@@MethodName:readModel:[context.readResource(PathAddress.EMPTY_ADDRESS)] @TO@ MethodInvocation@@Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 2220 @LENGTH@ 58
------------INS MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS) @TO@ SimpleName@@MethodName:readModel:[context.readResource(PathAddress.EMPTY_ADDRESS)] @AT@ 2230 @LENGTH@ 47
---------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS) @AT@ 2154 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:readModel:[PathAddress.EMPTY_ADDRESS] @TO@ MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS) @AT@ 2162 @LENGTH@ 36


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[private, static]MyOrderTypeConverter, [TypeConverter] @AT@ 2978 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2978 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2989 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2991 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3004 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3004 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3004 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3010 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3013 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3019 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3019 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3026 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 3047 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3054 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3054 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3064 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3070 @LENGTH@ 5


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.refresh();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.refresh();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1905 @LENGTH@ 622
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1909 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1909 @LENGTH@ 17
------DEL Operator@@== @AT@ 1926 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 1930 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 1930 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 1930 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 1947 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 1952 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.refresh();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1909 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1909 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1909 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1917 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2331 @LENGTH@ 438
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2390 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2390 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2396 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2403 @LENGTH@ 11


UPD FieldDeclaration@@private, final, Channel.Receiver, [receiver] @TO@ private, final, ManagementChannelReceiver, [receiver] @AT@ 2143 @LENGTH@ 40
---UPD SimpleType@@Channel.Receiver @TO@ ManagementChannelReceiver @AT@ 2157 @LENGTH@ 16


UPD MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp, Exception,  @AT@ 2115 @LENGTH@ 275
---UPD Modifier@@protected @TO@ public @AT@ 2115 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 2169 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 2169 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 2175 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:setOnModel(operation,model,DATA_SOURCE) @TO@ MethodDeclaration@@protected, void, MethodName:populateModel, final ModelNode operation, final ModelNode model, OperationFailedException,  @AT@ 5020 @LENGTH@ 42
---INS MethodInvocation@@setOnModel(operation,model,DATA_SOURCE) @TO@ ExpressionStatement@@MethodInvocation:setOnModel(operation,model,DATA_SOURCE) @AT@ 5020 @LENGTH@ 41
------INS SimpleName@@MethodName:setOnModel:[operation, model, DATA_SOURCE] @TO@ MethodInvocation@@setOnModel(operation,model,DATA_SOURCE) @AT@ 5020 @LENGTH@ 41
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:setOnModel:[operation, model, DATA_SOURCE] @AT@ 5031 @LENGTH@ 9
---------INS SimpleName@@model @TO@ SimpleName@@MethodName:setOnModel:[operation, model, DATA_SOURCE] @AT@ 5042 @LENGTH@ 5
---------INS SimpleName@@DATA_SOURCE @TO@ SimpleName@@MethodName:setOnModel:[operation, model, DATA_SOURCE] @AT@ 5049 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2010 @LENGTH@ 1073
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 2025 @LENGTH@ 13


INS MethodDeclaration@@public, boolean, MethodName:isSession,  @TO@ TypeDeclaration@@[public, abstract]EJBComponentDescription, ComponentDescription @AT@ 21729 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 21729 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 21736 @LENGTH@ 7
---INS SimpleName@@MethodName:isSession @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 21744 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isSession,  @AT@ 21766 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 21773 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @TO@ MethodDeclaration@@public, void, MethodName:startClientConnetion, IOException, URISyntaxException,  @AT@ 4580 @LENGTH@ 55
---INS MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @TO@ ExpressionStatement@@MethodInvocation:configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4580 @LENGTH@ 54
------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4580 @LENGTH@ 13
------INS SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @TO@ MethodInvocation@@configuration.setEndpoint(channelServer.getEndpoint()) @AT@ 4594 @LENGTH@ 40
---------INS MethodInvocation@@channelServer.getEndpoint() @TO@ SimpleName@@MethodName:setEndpoint:[channelServer.getEndpoint()] @AT@ 4606 @LENGTH@ 27
------------INS SimpleName@@Name:channelServer @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4606 @LENGTH@ 13
------------INS SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@channelServer.getEndpoint() @AT@ 4620 @LENGTH@ 13


INS IfStatement@@if (realm == null) {  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @TO@ MethodDeclaration@@public, void, MethodName:handle, HttpExchange exchange, IOException,  @AT@ 1441 @LENGTH@ 129
---INS InfixExpression@@realm == null @TO@ IfStatement@@if (realm == null) {  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1445 @LENGTH@ 13
------INS SimpleName@@realm @TO@ InfixExpression@@realm == null @AT@ 1445 @LENGTH@ 5
------INS Operator@@== @TO@ InfixExpression@@realm == null @AT@ 1450 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@realm == null @AT@ 1454 @LENGTH@ 4
---INS Block@@ThenBody:{  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @TO@ IfStatement@@if (realm == null) {  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1460 @LENGTH@ 110
------INS ExpressionStatement@@MethodInvocation:responseHeaders.set(LOCATION,"/") @TO@ Block@@ThenBody:{  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1474 @LENGTH@ 35
---------INS MethodInvocation@@responseHeaders.set(LOCATION,"/") @TO@ ExpressionStatement@@MethodInvocation:responseHeaders.set(LOCATION,"/") @AT@ 1474 @LENGTH@ 34
------------INS SimpleName@@Name:responseHeaders @TO@ MethodInvocation@@responseHeaders.set(LOCATION,"/") @AT@ 1474 @LENGTH@ 15
------------INS SimpleName@@MethodName:set:[LOCATION, "/"] @TO@ MethodInvocation@@responseHeaders.set(LOCATION,"/") @AT@ 1490 @LENGTH@ 18
---------------INS SimpleName@@LOCATION @TO@ SimpleName@@MethodName:set:[LOCATION, "/"] @AT@ 1494 @LENGTH@ 8
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:set:[LOCATION, "/"] @AT@ 1504 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:exchange.sendResponseHeaders(307,-1) @TO@ Block@@ThenBody:{  responseHeaders.set(LOCATION,"/");  exchange.sendResponseHeaders(307,-1);} @AT@ 1522 @LENGTH@ 38
---------INS MethodInvocation@@exchange.sendResponseHeaders(307,-1) @TO@ ExpressionStatement@@MethodInvocation:exchange.sendResponseHeaders(307,-1) @AT@ 1522 @LENGTH@ 37
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.sendResponseHeaders(307,-1) @AT@ 1522 @LENGTH@ 8
------------INS SimpleName@@MethodName:sendResponseHeaders:[307, -1] @TO@ MethodInvocation@@exchange.sendResponseHeaders(307,-1) @AT@ 1531 @LENGTH@ 28
---------------INS NumberLiteral@@307 @TO@ SimpleName@@MethodName:sendResponseHeaders:[307, -1] @AT@ 1551 @LENGTH@ 3
---------------INS PrefixExpression@@-1 @TO@ SimpleName@@MethodName:sendResponseHeaders:[307, -1] @AT@ 1556 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1556 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1557 @LENGTH@ 1


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]Hits, [Serializable] @AT@ 985 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 985 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 993 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1000 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1006 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1011 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1011 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1030 @LENGTH@ 2


UPD MethodDeclaration@@public, synchronized, void, MethodName:clearContentCache,  @TO@ public, void, MethodName:clearContentCache,  @AT@ 3836 @LENGTH@ 155
---DEL Modifier@@synchronized @AT@ 3843 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:ParsingUtils.setPropertyValue(element,builder,"use-bean-factory-locator","useBeanFactoryLocator") @TO@ MethodDeclaration@@protected, void, MethodName:doParse, Element element, BeanDefinitionBuilder builder,  @AT@ 2181 @LENGTH@ 101
---INS MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"use-bean-factory-locator","useBeanFactoryLocator") @TO@ ExpressionStatement@@MethodInvocation:ParsingUtils.setPropertyValue(element,builder,"use-bean-factory-locator","useBeanFactoryLocator") @AT@ 2181 @LENGTH@ 100
------INS SimpleName@@Name:ParsingUtils @TO@ MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"use-bean-factory-locator","useBeanFactoryLocator") @AT@ 2181 @LENGTH@ 12
------INS SimpleName@@MethodName:setPropertyValue:[element, builder, "use-bean-factory-locator", "useBeanFactoryLocator"] @TO@ MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"use-bean-factory-locator","useBeanFactoryLocator") @AT@ 2194 @LENGTH@ 87
---------INS SimpleName@@element @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "use-bean-factory-locator", "useBeanFactoryLocator"] @AT@ 2211 @LENGTH@ 7
---------INS SimpleName@@builder @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "use-bean-factory-locator", "useBeanFactoryLocator"] @AT@ 2220 @LENGTH@ 7
---------INS StringLiteral@@"use-bean-factory-locator" @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "use-bean-factory-locator", "useBeanFactoryLocator"] @AT@ 2229 @LENGTH@ 26
---------INS StringLiteral@@"useBeanFactoryLocator" @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "use-bean-factory-locator", "useBeanFactoryLocator"] @AT@ 2257 @LENGTH@ 23


UPD VariableDeclarationStatement@@List sub=DomConverter.toList(nl); @TO@ List<?> sub=DomConverter.toList(nl); @AT@ 3032 @LENGTH@ 35
---DEL SimpleType@@List @AT@ 3032 @LENGTH@ 4
---INS ParameterizedType@@List<?> @TO@ VariableDeclarationStatement@@List sub=DomConverter.toList(nl); @AT@ 3035 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 3035 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 3040 @LENGTH@ 1


UPD TypeDeclaration@@[public]CDIManagedBean,  @TO@ [public]CDIManagedBean, [DecoratorInterface, Serializable] @AT@ 248 @LENGTH@ 187
---INS SimpleType@@DecoratorInterface @TO@ TypeDeclaration@@[public]CDIManagedBean,  @AT@ 314 @LENGTH@ 18
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public]CDIManagedBean,  @AT@ 334 @LENGTH@ 12


INS MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ConnectorMessages,  @AT@ 14879 @LENGTH@ 55
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @AT@ 14854 @LENGTH@ 24
---INS SimpleName@@MethodName:stringParamCannotBeNullOrEmpty @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @AT@ 14879 @LENGTH@ 30
---INS SingleVariableDeclaration@@final String paramName @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @AT@ 14910 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String paramName @AT@ 14910 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String paramName @AT@ 14916 @LENGTH@ 6
------INS SimpleName@@paramName @TO@ SingleVariableDeclaration@@final String paramName @AT@ 14923 @LENGTH@ 9


INS MethodDeclaration@@public, boolean, MethodName:isAbstract,  @TO@ TypeDeclaration@@[public]ProfileOverlayImpl, [Profile] @AT@ 7308 @LENGTH@ 69
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 7308 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 7315 @LENGTH@ 7
---INS SimpleName@@MethodName:isAbstract @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 7323 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:self.isAbstract() @TO@ MethodDeclaration@@public, boolean, MethodName:isAbstract,  @AT@ 7346 @LENGTH@ 25
------INS MethodInvocation@@self.isAbstract() @TO@ ReturnStatement@@MethodInvocation:self.isAbstract() @AT@ 7353 @LENGTH@ 17
---------INS SimpleName@@Name:self @TO@ MethodInvocation@@self.isAbstract() @AT@ 7353 @LENGTH@ 4
---------INS SimpleName@@MethodName:isAbstract:[] @TO@ MethodInvocation@@self.isAbstract() @AT@ 7358 @LENGTH@ 12


INS ExpressionStatement@@Assignment:model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers, OperationFailedException,  @AT@ 3647 @LENGTH@ 82
---INS Assignment@@model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @TO@ ExpressionStatement@@Assignment:model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3647 @LENGTH@ 81
------INS SimpleName@@model @TO@ Assignment@@model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3647 @LENGTH@ 5
------INS Operator@@= @TO@ Assignment@@model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3652 @LENGTH@ 1
------INS MethodInvocation@@Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @TO@ Assignment@@model=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3655 @LENGTH@ 73
---------INS QualifiedName@@Name:Resource.Tools @TO@ MethodInvocation@@Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3655 @LENGTH@ 14
---------INS SimpleName@@MethodName:readModel:[context.readResource(PathAddress.EMPTY_ADDRESS)] @TO@ MethodInvocation@@Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS)) @AT@ 3670 @LENGTH@ 58
------------INS MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS) @TO@ SimpleName@@MethodName:readModel:[context.readResource(PathAddress.EMPTY_ADDRESS)] @AT@ 3680 @LENGTH@ 47
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS) @AT@ 3680 @LENGTH@ 7
---------------INS SimpleName@@MethodName:readResource:[PathAddress.EMPTY_ADDRESS] @TO@ MethodInvocation@@context.readResource(PathAddress.EMPTY_ADDRESS) @AT@ 3688 @LENGTH@ 39
------------------INS QualifiedName@@PathAddress.EMPTY_ADDRESS @TO@ SimpleName@@MethodName:readResource:[PathAddress.EMPTY_ADDRESS] @AT@ 3701 @LENGTH@ 25
---------------------INS SimpleName@@PathAddress @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 3701 @LENGTH@ 11
---------------------INS SimpleName@@EMPTY_ADDRESS @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 3713 @LENGTH@ 13


INS ExpressionStatement@@ClassInstanceCreation:new ArgumentWithValue(this,0,"--line") @TO@ MethodDeclaration@@public, voidMethodName:BatchRemoveLineHandler,  @AT@ 1622 @LENGTH@ 41
---INS ClassInstanceCreation@@ArgumentWithValue[this, 0, "--line"] @TO@ ExpressionStatement@@ClassInstanceCreation:new ArgumentWithValue(this,0,"--line") @AT@ 1622 @LENGTH@ 40
------INS New@@new @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--line"] @AT@ 1622 @LENGTH@ 3
------INS SimpleType@@ArgumentWithValue @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--line"] @AT@ 1626 @LENGTH@ 17
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--line"] @AT@ 1644 @LENGTH@ 4
------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--line"] @AT@ 1650 @LENGTH@ 1
------INS StringLiteral@@"--line" @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--line"] @AT@ 1653 @LENGTH@ 8


DEL MethodDeclaration@@RuntimeException, MethodName:failedToCreateDeploymentNodeSelector, @Cause Exception e, String deploymentNodeSelectorClassName,  @AT@ 35146 @LENGTH@ 97
---DEL SimpleType@@RuntimeException @AT@ 35129 @LENGTH@ 16
---DEL SimpleName@@MethodName:failedToCreateDeploymentNodeSelector @AT@ 35146 @LENGTH@ 36
---DEL SingleVariableDeclaration@@@Cause Exception e @AT@ 35183 @LENGTH@ 18
------DEL SimpleType@@Exception @AT@ 35190 @LENGTH@ 9
------DEL SimpleName@@e @AT@ 35200 @LENGTH@ 1
---DEL SingleVariableDeclaration@@String deploymentNodeSelectorClassName @AT@ 35203 @LENGTH@ 38
------DEL SimpleType@@String @AT@ 35203 @LENGTH@ 6
------DEL SimpleName@@deploymentNodeSelectorClassName @AT@ 35210 @LENGTH@ 31


INS ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @TO@ MethodDeclaration@@voidMethodName:ConcurrentSignState, ServerGroupState sg,  @AT@ 1634 @LENGTH@ 27
---INS MethodInvocation@@setIgnoreWhitespaces(true) @TO@ ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @AT@ 1634 @LENGTH@ 26
------INS SimpleName@@MethodName:setIgnoreWhitespaces:[true] @TO@ MethodInvocation@@setIgnoreWhitespaces(true) @AT@ 1634 @LENGTH@ 26
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setIgnoreWhitespaces:[true] @AT@ 1655 @LENGTH@ 4


UPD IfStatement@@if (result.equals("error") && agent.getProvisionException() != null) {  result+=" - " + agent.getProvisionException().split(System.getProperty("line.separator"))[0];} @TO@ if (result.equals(ZkDefs.ERROR) && agent.getProvisionException() != null) {  result+=" - " + agent.getProvisionException().split(System.getProperty("line.separator"))[0];} @AT@ 1046 @LENGTH@ 196
---UPD InfixExpression@@result.equals("error") && agent.getProvisionException() != null @TO@ result.equals(ZkDefs.ERROR) && agent.getProvisionException() != null @AT@ 1050 @LENGTH@ 63
------UPD MethodInvocation@@result.equals("error") @TO@ result.equals(ZkDefs.ERROR) @AT@ 1050 @LENGTH@ 22
---------UPD SimpleName@@MethodName:equals:["error"] @TO@ MethodName:equals:[ZkDefs.ERROR] @AT@ 1057 @LENGTH@ 15
------------DEL StringLiteral@@"error" @AT@ 1064 @LENGTH@ 7
------------INS QualifiedName@@ZkDefs.ERROR @TO@ SimpleName@@MethodName:equals:["error"] @AT@ 1111 @LENGTH@ 12
---------------INS SimpleName@@ZkDefs @TO@ QualifiedName@@ZkDefs.ERROR @AT@ 1111 @LENGTH@ 6
---------------INS SimpleName@@ERROR @TO@ QualifiedName@@ZkDefs.ERROR @AT@ 1118 @LENGTH@ 5


UPD ReturnStatement@@CastExpression:(List)iterable @TO@ CastExpression:(List<T>)iterable @AT@ 3599 @LENGTH@ 23
---UPD CastExpression@@(List)iterable @TO@ (List<T>)iterable @AT@ 3606 @LENGTH@ 15
------INS ParameterizedType@@List<T> @TO@ CastExpression@@(List)iterable @AT@ 3572 @LENGTH@ 7
---------INS SimpleType@@List @TO@ ParameterizedType@@List<T> @AT@ 3572 @LENGTH@ 4
---------INS SimpleType@@T @TO@ ParameterizedType@@List<T> @AT@ 3577 @LENGTH@ 1
------DEL SimpleType@@List @AT@ 3607 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:elementsMap.put(new QName(NAMESPACE_1_1,"paths"),Element.PATHS) @TO@ Initializer@@Initializer @AT@ 4445 @LENGTH@ 66
---INS MethodInvocation@@elementsMap.put(new QName(NAMESPACE_1_1,"paths"),Element.PATHS) @TO@ ExpressionStatement@@MethodInvocation:elementsMap.put(new QName(NAMESPACE_1_1,"paths"),Element.PATHS) @AT@ 4445 @LENGTH@ 65
------INS SimpleName@@Name:elementsMap @TO@ MethodInvocation@@elementsMap.put(new QName(NAMESPACE_1_1,"paths"),Element.PATHS) @AT@ 4445 @LENGTH@ 11
------INS SimpleName@@MethodName:put:[new QName(NAMESPACE_1_1,"paths"), Element.PATHS] @TO@ MethodInvocation@@elementsMap.put(new QName(NAMESPACE_1_1,"paths"),Element.PATHS) @AT@ 4457 @LENGTH@ 53
---------INS ClassInstanceCreation@@QName[NAMESPACE_1_1, "paths"] @TO@ SimpleName@@MethodName:put:[new QName(NAMESPACE_1_1,"paths"), Element.PATHS] @AT@ 4461 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "paths"] @AT@ 4461 @LENGTH@ 3
------------INS SimpleType@@QName @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "paths"] @AT@ 4465 @LENGTH@ 5
------------INS SimpleName@@NAMESPACE_1_1 @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "paths"] @AT@ 4471 @LENGTH@ 13
------------INS StringLiteral@@"paths" @TO@ ClassInstanceCreation@@QName[NAMESPACE_1_1, "paths"] @AT@ 4486 @LENGTH@ 7
---------INS QualifiedName@@Element.PATHS @TO@ SimpleName@@MethodName:put:[new QName(NAMESPACE_1_1,"paths"), Element.PATHS] @AT@ 4496 @LENGTH@ 13
------------INS SimpleName@@Element @TO@ QualifiedName@@Element.PATHS @AT@ 4496 @LENGTH@ 7
------------INS SimpleName@@PATHS @TO@ QualifiedName@@Element.PATHS @AT@ 4504 @LENGTH@ 5


INS MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @TO@ TypeDeclaration@@[public]ChannelServer, [Closeable] @AT@ 3810 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3810 @LENGTH@ 6
---INS SimpleType@@Endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3817 @LENGTH@ 8
---INS SimpleName@@MethodName:getEndpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3826 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3850 @LENGTH@ 16
------INS SimpleName@@endpoint @TO@ ReturnStatement@@SimpleName:endpoint @AT@ 3857 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:ServerControllerModelUtil.initOperations(rootRegistration,null,persister,null,null,null,null,extensionRegistry,false,null) @TO@ MethodInvocation:ServerControllerModelUtil.initOperations(rootRegistration,new MockContentRepository(),persister,null,null,null,null,extensionRegistry,false,new MockFileRepository()) @AT@ 19228 @LENGTH@ 132
---UPD MethodInvocation@@ServerControllerModelUtil.initOperations(rootRegistration,null,persister,null,null,null,null,extensionRegistry,false,null) @TO@ ServerControllerModelUtil.initOperations(rootRegistration,new MockContentRepository(),persister,null,null,null,null,extensionRegistry,false,new MockFileRepository()) @AT@ 19228 @LENGTH@ 131
------UPD SimpleName@@MethodName:initOperations:[rootRegistration, null, persister, null, null, null, null, extensionRegistry, false, null] @TO@ MethodName:initOperations:[rootRegistration, new MockContentRepository(), persister, null, null, null, null, extensionRegistry, false, new MockFileRepository()] @AT@ 19254 @LENGTH@ 105
---------INS ClassInstanceCreation@@MockContentRepository[] @TO@ SimpleName@@MethodName:initOperations:[rootRegistration, null, persister, null, null, null, null, extensionRegistry, false, null] @AT@ 19287 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@MockContentRepository[] @AT@ 19287 @LENGTH@ 3
------------INS SimpleType@@MockContentRepository @TO@ ClassInstanceCreation@@MockContentRepository[] @AT@ 19291 @LENGTH@ 21
---------DEL NullLiteral@@null @AT@ 19287 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 19354 @LENGTH@ 4
---------INS ClassInstanceCreation@@MockFileRepository[] @TO@ SimpleName@@MethodName:initOperations:[rootRegistration, null, persister, null, null, null, null, extensionRegistry, false, null] @AT@ 19377 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@MockFileRepository[] @AT@ 19377 @LENGTH@ 3
------------INS SimpleType@@MockFileRepository @TO@ ClassInstanceCreation@@MockFileRepository[] @AT@ 19381 @LENGTH@ 18


DEL VariableDeclarationStatement@@Object instance=ctx.getComponent().getCache().get(ctx.getPrimaryKey()); @AT@ 6205 @LENGTH@ 73
---DEL SimpleType@@Object @AT@ 6205 @LENGTH@ 6
---DEL VariableDeclarationFragment@@instance=ctx.getComponent().getCache().get(ctx.getPrimaryKey()) @AT@ 6212 @LENGTH@ 65
------DEL SimpleName@@instance @AT@ 6212 @LENGTH@ 8
------DEL MethodInvocation@@ctx.getComponent().getCache().get(ctx.getPrimaryKey()) @AT@ 6223 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getCache:[] @AT@ 6223 @LENGTH@ 29
---------DEL MethodInvocation@@MethodName:getComponent:[] @AT@ 6223 @LENGTH@ 18
---------DEL SimpleName@@Name:ctx @AT@ 6223 @LENGTH@ 3
---------DEL SimpleName@@MethodName:get:[ctx.getPrimaryKey()] @AT@ 6253 @LENGTH@ 24
------------DEL MethodInvocation@@ctx.getPrimaryKey() @AT@ 6257 @LENGTH@ 19
---------------DEL SimpleName@@Name:ctx @AT@ 6257 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:getPrimaryKey:[] @AT@ 6261 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertEquals("Foo realm=\"foo\"",response.getHeader("WWW-Authenticate")) @TO@ MethodInvocation:assertEquals("Foo realm=\"foo\", error=\"invalid_token\", error_description=\"Bad\"",response.getHeader("WWW-Authenticate")) @AT@ 2670 @LENGTH@ 74
---UPD MethodInvocation@@assertEquals("Foo realm=\"foo\"",response.getHeader("WWW-Authenticate")) @TO@ assertEquals("Foo realm=\"foo\", error=\"invalid_token\", error_description=\"Bad\"",response.getHeader("WWW-Authenticate")) @AT@ 2670 @LENGTH@ 73
------UPD SimpleName@@MethodName:assertEquals:["Foo realm=\"foo\"", response.getHeader("WWW-Authenticate")] @TO@ MethodName:assertEquals:["Foo realm=\"foo\", error=\"invalid_token\", error_description=\"Bad\"", response.getHeader("WWW-Authenticate")] @AT@ 2670 @LENGTH@ 73
---------UPD StringLiteral@@"Foo realm=\"foo\"" @TO@ "Foo realm=\"foo\", error=\"invalid_token\", error_description=\"Bad\"" @AT@ 2683 @LENGTH@ 19


UPD VariableDeclarationStatement@@Class<?> pathClass=ClassUtils.forName(pathClassName,SimpleEntityPathResolver.class.getClassLoader()); @TO@ Class<?> pathClass=ClassUtils.forName(pathClassName,domainClass.getClassLoader()); @AT@ 1797 @LENGTH@ 104
---UPD VariableDeclarationFragment@@pathClass=ClassUtils.forName(pathClassName,SimpleEntityPathResolver.class.getClassLoader()) @TO@ pathClass=ClassUtils.forName(pathClassName,domainClass.getClassLoader()) @AT@ 1806 @LENGTH@ 94
------UPD MethodInvocation@@ClassUtils.forName(pathClassName,SimpleEntityPathResolver.class.getClassLoader()) @TO@ ClassUtils.forName(pathClassName,domainClass.getClassLoader()) @AT@ 1818 @LENGTH@ 82
---------UPD SimpleName@@MethodName:forName:[pathClassName, SimpleEntityPathResolver.class.getClassLoader()] @TO@ MethodName:forName:[pathClassName, domainClass.getClassLoader()] @AT@ 1829 @LENGTH@ 71
------------UPD MethodInvocation@@SimpleEntityPathResolver.class.getClassLoader() @TO@ domainClass.getClassLoader() @AT@ 1852 @LENGTH@ 47
---------------DEL TypeLiteral@@SimpleEntityPathResolver.class @AT@ 1852 @LENGTH@ 30
---------------INS SimpleName@@Name:domainClass @TO@ MethodInvocation@@SimpleEntityPathResolver.class.getClassLoader() @AT@ 1853 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:sendLine("connect",false) @TO@ MethodInvocation:sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @AT@ 3402 @LENGTH@ 27
---UPD MethodInvocation@@sendLine("connect",false) @TO@ sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @AT@ 3402 @LENGTH@ 26
------UPD SimpleName@@MethodName:sendLine:["connect", false] @TO@ MethodName:sendLine:["connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(), false] @AT@ 3402 @LENGTH@ 26
---------DEL StringLiteral@@"connect" @AT@ 3411 @LENGTH@ 9
---------INS InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @TO@ SimpleName@@MethodName:sendLine:["connect", false] @AT@ 3458 @LENGTH@ 83
------------INS StringLiteral@@"connect " @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 3458 @LENGTH@ 10
------------INS Operator@@+ @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 3468 @LENGTH@ 1
------------INS MethodInvocation@@ServerAddress.getServerAddress() @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 3471 @LENGTH@ 32
---------------INS SimpleName@@Name:ServerAddress @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 3471 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@ServerAddress.getServerAddress() @AT@ 3485 @LENGTH@ 18
------------INS StringLiteral@@":" @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 3506 @LENGTH@ 3
------------INS MethodInvocation@@ServerAddress.getServerPort() @TO@ InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @AT@ 3512 @LENGTH@ 29
---------------INS SimpleName@@Name:ServerAddress @TO@ MethodInvocation@@ServerAddress.getServerPort() @AT@ 3512 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getServerPort:[] @TO@ MethodInvocation@@ServerAddress.getServerPort() @AT@ 3526 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2822 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2822 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2830 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2843 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2843 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2843 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2860 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2876 @LENGTH@ 21


UPD MethodDeclaration@@void, MethodName:errorAccessingSession, @Cause Throwable cause, String sessionId, String message,  @TO@ void, MethodName:sessionLoadFailed, @Cause Throwable cause, String sessionId,  @AT@ 3473 @LENGTH@ 80
---UPD SimpleName@@MethodName:errorAccessingSession @TO@ MethodName:sessionLoadFailed @AT@ 3473 @LENGTH@ 21
---DEL SingleVariableDeclaration@@String message @AT@ 3537 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 3537 @LENGTH@ 6
------DEL SimpleName@@message @AT@ 3544 @LENGTH@ 7


UPD TryStatement@@try {  lock.lock();synchronized (lock) {    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);    }    Object currentTransactionKey=null;    try {      currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();      if (!instance.isSynchronizeRegistered()) {        component.getCache().reference(instance);        if (currentTransactionKey != null) {          final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);          transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);          if (ROOT_LOGGER.isTraceEnabled()) {            ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);          }        }        instance.setSynchronizationRegistered(true);      }      return context.proceed();    }  finally {      if (currentTransactionKey == null) {        instance.store();        releaseInstance(instance,true);      }    }  }}  finally {  lock.popOwner();} @TO@ try {  lock.lock();  boolean syncRegistered=false;synchronized (lock) {    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);    }    if (instance.isRemoved() || instance.isDiscarded()) {      final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);      throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);    }    Object currentTransactionKey=null;    try {      currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();      if (!instance.isSynchronizeRegistered()) {        component.getCache().reference(instance);        if (currentTransactionKey != null) {          final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);          transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);          syncRegistered=true;          if (ROOT_LOGGER.isTraceEnabled()) {            ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);          }        }        instance.setSynchronizationRegistered(true);      }      return context.proceed();    }  finally {      if (!syncRegistered) {        instance.store();        releaseInstance(instance,true);      }    }  }}  finally {  lock.popOwner();} @AT@ 3886 @LENGTH@ 2490
---UPD SynchronizedStatement@@synchronized (lock) {  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      component.getCache().reference(instance);      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (currentTransactionKey == null) {      instance.store();      releaseInstance(instance,true);    }  }} @TO@ synchronized (lock) {  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      component.getCache().reference(instance);      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        syncRegistered=true;        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (!syncRegistered) {      instance.store();      releaseInstance(instance,true);    }  }} @AT@ 3929 @LENGTH@ 2388
------UPD Block@@SyncBody:{  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      component.getCache().reference(instance);      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (currentTransactionKey == null) {      instance.store();      releaseInstance(instance,true);    }  }} @TO@ SyncBody:{  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      component.getCache().reference(instance);      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        syncRegistered=true;        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (!syncRegistered) {      instance.store();      releaseInstance(instance,true);    }  }} @AT@ 3949 @LENGTH@ 2368
---------UPD TryStatement@@try {  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  if (!instance.isSynchronizeRegistered()) {    component.getCache().reference(instance);    if (currentTransactionKey != null) {      final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);      transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);      if (ROOT_LOGGER.isTraceEnabled()) {        ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);      }    }    instance.setSynchronizationRegistered(true);  }  return context.proceed();}  finally {  if (currentTransactionKey == null) {    instance.store();    releaseInstance(instance,true);  }} @TO@ try {  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  if (!instance.isSynchronizeRegistered()) {    component.getCache().reference(instance);    if (currentTransactionKey != null) {      final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);      transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);      syncRegistered=true;      if (ROOT_LOGGER.isTraceEnabled()) {        ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);      }    }    instance.setSynchronizationRegistered(true);  }  return context.proceed();}  finally {  if (!syncRegistered) {    instance.store();    releaseInstance(instance,true);  }} @AT@ 4234 @LENGTH@ 2069
------------UPD IfStatement@@if (!instance.isSynchronizeRegistered()) {  component.getCache().reference(instance);  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @TO@ if (!instance.isSynchronizeRegistered()) {  component.getCache().reference(instance);  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    syncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @AT@ 4446 @LENGTH@ 1197
---------------UPD Block@@ThenBody:{  component.getCache().reference(instance);  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @TO@ ThenBody:{  component.getCache().reference(instance);  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    syncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @AT@ 4487 @LENGTH@ 1156
------------------UPD IfStatement@@if (currentTransactionKey != null) {  final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);  transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);  }} @TO@ if (currentTransactionKey != null) {  final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);  transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);  syncRegistered=true;  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);  }} @AT@ 4813 @LENGTH@ 739
---------------------UPD Block@@ThenBody:{  final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);  transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);  }} @TO@ ThenBody:{  final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);  transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);  syncRegistered=true;  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);  }} @AT@ 4848 @LENGTH@ 704
------------------------INS ExpressionStatement@@Assignment:syncRegistered=true @TO@ Block@@ThenBody:{  final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);  transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);  }} @AT@ 5685 @LENGTH@ 22
---------------------------INS Assignment@@syncRegistered=true @TO@ ExpressionStatement@@Assignment:syncRegistered=true @AT@ 5685 @LENGTH@ 21
------------------------------INS SimpleName@@syncRegistered @TO@ Assignment@@syncRegistered=true @AT@ 5685 @LENGTH@ 14
------------------------------INS Operator@@= @TO@ Assignment@@syncRegistered=true @AT@ 5699 @LENGTH@ 1
------------------------------INS BooleanLiteral@@true @TO@ Assignment@@syncRegistered=true @AT@ 5702 @LENGTH@ 4
------------UPD Block@@FinallyBody:{  if (currentTransactionKey == null) {    instance.store();    releaseInstance(instance,true);  }} @TO@ FinallyBody:{  if (!syncRegistered) {    instance.store();    releaseInstance(instance,true);  }} @AT@ 5768 @LENGTH@ 535
---------------UPD IfStatement@@if (currentTransactionKey == null) {  instance.store();  releaseInstance(instance,true);} @TO@ if (!syncRegistered) {  instance.store();  releaseInstance(instance,true);} @AT@ 6128 @LENGTH@ 157
------------------DEL InfixExpression@@currentTransactionKey == null @AT@ 6132 @LENGTH@ 29
---------------------DEL SimpleName@@currentTransactionKey @AT@ 6132 @LENGTH@ 21
---------------------DEL Operator@@== @AT@ 6153 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 6157 @LENGTH@ 4
------------------INS PrefixExpression@@!syncRegistered @TO@ IfStatement@@if (currentTransactionKey == null) {  instance.store();  releaseInstance(instance,true);} @AT@ 6902 @LENGTH@ 15
---------------------INS Operator@@! @TO@ PrefixExpression@@!syncRegistered @AT@ 6902 @LENGTH@ 1
---------------------INS SimpleName@@syncRegistered @TO@ PrefixExpression@@!syncRegistered @AT@ 6903 @LENGTH@ 14
---------INS IfStatement@@if (instance.isRemoved() || instance.isDiscarded()) {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ Block@@SyncBody:{  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      component.getCache().reference(instance);      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (currentTransactionKey == null) {      instance.store();      releaseInstance(instance,true);    }  }} @AT@ 4356 @LENGTH@ 282
------------INS InfixExpression@@instance.isRemoved() || instance.isDiscarded() @TO@ IfStatement@@if (instance.isRemoved() || instance.isDiscarded()) {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4360 @LENGTH@ 46
---------------INS MethodInvocation@@instance.isRemoved() @TO@ InfixExpression@@instance.isRemoved() || instance.isDiscarded() @AT@ 4360 @LENGTH@ 20
------------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.isRemoved() @AT@ 4360 @LENGTH@ 8
------------------INS SimpleName@@MethodName:isRemoved:[] @TO@ MethodInvocation@@instance.isRemoved() @AT@ 4369 @LENGTH@ 11
---------------INS Operator@@|| @TO@ InfixExpression@@instance.isRemoved() || instance.isDiscarded() @AT@ 4380 @LENGTH@ 2
---------------INS MethodInvocation@@instance.isDiscarded() @TO@ InfixExpression@@instance.isRemoved() || instance.isDiscarded() @AT@ 4384 @LENGTH@ 22
------------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.isDiscarded() @AT@ 4384 @LENGTH@ 8
------------------INS SimpleName@@MethodName:isDiscarded:[] @TO@ MethodInvocation@@instance.isDiscarded() @AT@ 4393 @LENGTH@ 13
------------INS Block@@ThenBody:{  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ IfStatement@@if (instance.isRemoved() || instance.isDiscarded()) {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4408 @LENGTH@ 230
---------------INS VariableDeclarationStatement@@final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY); @TO@ Block@@ThenBody:{  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4430 @LENGTH@ 94
------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY); @AT@ 4430 @LENGTH@ 5
------------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY); @AT@ 4436 @LENGTH@ 6
------------------INS VariableDeclarationFragment@@primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY) @TO@ VariableDeclarationStatement@@final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY); @AT@ 4443 @LENGTH@ 80
---------------------INS SimpleName@@primaryKey @TO@ VariableDeclarationFragment@@primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY) @AT@ 4443 @LENGTH@ 10
---------------------INS MethodInvocation@@context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY) @TO@ VariableDeclarationFragment@@primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY) @AT@ 4456 @LENGTH@ 67
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY) @AT@ 4456 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getPrivateData:[EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY] @TO@ MethodInvocation@@context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY) @AT@ 4464 @LENGTH@ 59
---------------------------INS QualifiedName@@EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY @TO@ SimpleName@@MethodName:getPrivateData:[EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY] @AT@ 4479 @LENGTH@ 43
------------------------------INS SimpleName@@EntityBeanComponent @TO@ QualifiedName@@EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY @AT@ 4479 @LENGTH@ 19
------------------------------INS SimpleName@@PRIMARY_KEY_CONTEXT_KEY @TO@ QualifiedName@@EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY @AT@ 4499 @LENGTH@ 23
---------------INS ThrowStatement@@MethodInvocation:MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey) @TO@ Block@@ThenBody:{  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4545 @LENGTH@ 75
------------------INS MethodInvocation@@MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey) @TO@ ThrowStatement@@MethodInvocation:MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey) @AT@ 4551 @LENGTH@ 68
---------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey) @AT@ 4551 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:instaceWasRemoved:[component.getComponentName(), primaryKey] @TO@ MethodInvocation@@MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey) @AT@ 4560 @LENGTH@ 59
------------------------INS MethodInvocation@@component.getComponentName() @TO@ SimpleName@@MethodName:instaceWasRemoved:[component.getComponentName(), primaryKey] @AT@ 4578 @LENGTH@ 28
---------------------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getComponentName() @AT@ 4578 @LENGTH@ 9
---------------------------INS SimpleName@@MethodName:getComponentName:[] @TO@ MethodInvocation@@component.getComponentName() @AT@ 4588 @LENGTH@ 18
------------------------INS SimpleName@@primaryKey @TO@ SimpleName@@MethodName:instaceWasRemoved:[component.getComponentName(), primaryKey] @AT@ 4608 @LENGTH@ 10
---INS VariableDeclarationStatement@@boolean syncRegistered=false; @TO@ TryStatement@@try {  lock.lock();synchronized (lock) {    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);    }    Object currentTransactionKey=null;    try {      currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();      if (!instance.isSynchronizeRegistered()) {        component.getCache().reference(instance);        if (currentTransactionKey != null) {          final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);          transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);          if (ROOT_LOGGER.isTraceEnabled()) {            ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);          }        }        instance.setSynchronizationRegistered(true);      }      return context.proceed();    }  finally {      if (currentTransactionKey == null) {        instance.store();        releaseInstance(instance,true);      }    }  }}  finally {  lock.popOwner();} @AT@ 3983 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean syncRegistered=false; @AT@ 3983 @LENGTH@ 7
------INS VariableDeclarationFragment@@syncRegistered=false @TO@ VariableDeclarationStatement@@boolean syncRegistered=false; @AT@ 3991 @LENGTH@ 22
---------INS SimpleName@@syncRegistered @TO@ VariableDeclarationFragment@@syncRegistered=false @AT@ 3991 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@syncRegistered=false @AT@ 4008 @LENGTH@ 5


INS FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @TO@ TypeDeclaration@@[public]TestDefaultTokenServicesWithInMemory, AbstractTestDefaultTokenServices @AT@ 1232 @LENGTH@ 61
---INS Modifier@@public @TO@ FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @AT@ 1232 @LENGTH@ 6
---INS SimpleType@@ExpectedException @TO@ FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @AT@ 1239 @LENGTH@ 17
---INS VariableDeclarationFragment@@expected=ExpectedException.none() @TO@ FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @AT@ 1257 @LENGTH@ 35
------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=ExpectedException.none() @AT@ 1257 @LENGTH@ 8
------INS MethodInvocation@@ExpectedException.none() @TO@ VariableDeclarationFragment@@expected=ExpectedException.none() @AT@ 1268 @LENGTH@ 24
---------INS SimpleName@@Name:ExpectedException @TO@ MethodInvocation@@ExpectedException.none() @AT@ 1268 @LENGTH@ 17
---------INS SimpleName@@MethodName:none:[] @TO@ MethodInvocation@@ExpectedException.none() @AT@ 1286 @LENGTH@ 6


UPD EnhancedForStatement@@for (ProcessorDefinition child : children) {  registerPerformanceCounters(routeContext,child,registeredCounters);} @TO@ for (ProcessorDefinition<?> child : children) {  registerPerformanceCounters(routeContext,child,registeredCounters);} @AT@ 25814 @LENGTH@ 136
---UPD SingleVariableDeclaration@@ProcessorDefinition child @TO@ ProcessorDefinition<?> child @AT@ 25819 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ SingleVariableDeclaration@@ProcessorDefinition child @AT@ 25788 @LENGTH@ 22
---------INS SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 25788 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 25808 @LENGTH@ 1
------DEL SimpleType@@ProcessorDefinition @AT@ 25819 @LENGTH@ 19


INS FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 17228 @LENGTH@ 77
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17228 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17235 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17242 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17248 @LENGTH@ 3
---INS VariableDeclarationFragment@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507 @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507] @AT@ 17252 @LENGTH@ 52
------INS SimpleName@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507 @AT@ 17252 @LENGTH@ 36
------INS NumberLiteral@@0x0507 @TO@ VariableDeclarationFragment@@POST_MODULE_EJB_SLSB_POOL_NAME_MERGE=0x0507 @AT@ 17298 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1712 @LENGTH@ 166
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 1727 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:createAndAssetChildContainer("camel1","root","mq") @TO@ MethodInvocation:createAndAssetChildContainer("mq1","root","mq") @AT@ 1148 @LENGTH@ 52
---UPD MethodInvocation@@createAndAssetChildContainer("camel1","root","mq") @TO@ createAndAssetChildContainer("mq1","root","mq") @AT@ 1148 @LENGTH@ 51
------UPD SimpleName@@MethodName:createAndAssetChildContainer:["camel1", "root", "mq"] @TO@ MethodName:createAndAssetChildContainer:["mq1", "root", "mq"] @AT@ 1148 @LENGTH@ 51
---------UPD StringLiteral@@"camel1" @TO@ "mq1" @AT@ 1177 @LENGTH@ 8


UPD Block@@ElseBody:if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(pool.getRejectedCount());} else {  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ ElseBody:if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(pool.getRejectedCount());} else {  throw ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName);} @AT@ 2425 @LENGTH@ 340
---UPD IfStatement@@if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(pool.getRejectedCount());} else {  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(pool.getRejectedCount());} else {  throw ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName);} @AT@ 2425 @LENGTH@ 340
------UPD Block@@ElseBody:{  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ ElseBody:{  throw ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName);} @AT@ 2563 @LENGTH@ 202
---------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @TO@ MethodInvocation:ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @AT@ 2674 @LENGTH@ 81
------------INS MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @AT@ 2680 @LENGTH@ 76
---------------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @AT@ 2680 @LENGTH@ 24
---------------INS SimpleName@@MethodName:unsupportedQueuelessThreadPoolMetric:[attributeName] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @AT@ 2705 @LENGTH@ 51
------------------INS SimpleName@@attributeName @TO@ SimpleName@@MethodName:unsupportedQueuelessThreadPoolMetric:[attributeName] @AT@ 2742 @LENGTH@ 13
------------DEL ClassInstanceCreation@@IllegalStateException["Unsupported attribute '" + attributeName + "'"] @AT@ 2680 @LENGTH@ 74
---------------DEL New@@new @AT@ 2680 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 2684 @LENGTH@ 21
---------------DEL InfixExpression@@"Unsupported attribute '" + attributeName + "'" @AT@ 2706 @LENGTH@ 47
------------------DEL StringLiteral@@"Unsupported attribute '" @AT@ 2706 @LENGTH@ 25
------------------DEL Operator@@+ @AT@ 2731 @LENGTH@ 1
------------------DEL SimpleName@@attributeName @AT@ 2734 @LENGTH@ 13
------------------DEL StringLiteral@@"'" @AT@ 2750 @LENGTH@ 3
---UPD IfStatement@@if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(pool.getRejectedCount());} else {  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ if (attributeName.equals(CommonAttributes.REJECTED_COUNT)) {  context.getResult().set(pool.getRejectedCount());} else {  throw ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName);} @AT@ 2425 @LENGTH@ 340
------UPD Block@@ElseBody:{  throw new IllegalStateException("Unsupported attribute '" + attributeName + "'");} @TO@ ElseBody:{  throw ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName);} @AT@ 2563 @LENGTH@ 202
---------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @TO@ MethodInvocation:ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @AT@ 2674 @LENGTH@ 81
------------INS MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unsupported attribute '" + attributeName + "'") @AT@ 2680 @LENGTH@ 76
---------------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @AT@ 2680 @LENGTH@ 24
---------------INS SimpleName@@MethodName:unsupportedQueuelessThreadPoolMetric:[attributeName] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName) @AT@ 2705 @LENGTH@ 51
------------------INS SimpleName@@attributeName @TO@ SimpleName@@MethodName:unsupportedQueuelessThreadPoolMetric:[attributeName] @AT@ 2742 @LENGTH@ 13
------------DEL ClassInstanceCreation@@IllegalStateException["Unsupported attribute '" + attributeName + "'"] @AT@ 2680 @LENGTH@ 74
---------------DEL New@@new @AT@ 2680 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 2684 @LENGTH@ 21
---------------DEL InfixExpression@@"Unsupported attribute '" + attributeName + "'" @AT@ 2706 @LENGTH@ 47
------------------DEL StringLiteral@@"Unsupported attribute '" @AT@ 2706 @LENGTH@ 25
------------------DEL Operator@@+ @AT@ 2731 @LENGTH@ 1
------------------DEL SimpleName@@attributeName @AT@ 2734 @LENGTH@ 13
------------------DEL StringLiteral@@"'" @AT@ 2750 @LENGTH@ 3


INS MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @TO@ TypeDeclaration@@[public]ChannelServer, [Closeable] @AT@ 3810 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3810 @LENGTH@ 6
---INS SimpleType@@Endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3817 @LENGTH@ 8
---INS SimpleName@@MethodName:getEndpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3826 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:endpoint @TO@ MethodDeclaration@@public, Endpoint, MethodName:getEndpoint,  @AT@ 3850 @LENGTH@ 16
------INS SimpleName@@endpoint @TO@ ReturnStatement@@SimpleName:endpoint @AT@ 3857 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:this.relativePath=sub.length() > 0 ? sub + "/" : sub @TO@ Assignment:this.relativePath=sub.length() > 0 ? sub + File.separator : sub @AT@ 9453 @LENGTH@ 55
---UPD Assignment@@this.relativePath=sub.length() > 0 ? sub + "/" : sub @TO@ this.relativePath=sub.length() > 0 ? sub + File.separator : sub @AT@ 9453 @LENGTH@ 54
------UPD ConditionalExpression@@sub.length() > 0 ? sub + "/" : sub @TO@ sub.length() > 0 ? sub + File.separator : sub @AT@ 9473 @LENGTH@ 34
---------UPD InfixExpression@@sub + "/" @TO@ sub + File.separator @AT@ 9492 @LENGTH@ 9
------------INS QualifiedName@@File.separator @TO@ InfixExpression@@sub + "/" @AT@ 9498 @LENGTH@ 14
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 9498 @LENGTH@ 4
---------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 9503 @LENGTH@ 9
------------DEL StringLiteral@@"/" @AT@ 9498 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:sshd.stop() @TO@ MethodInvocation:sshd.stop(true) @AT@ 3068 @LENGTH@ 12
---UPD MethodInvocation@@sshd.stop() @TO@ sshd.stop(true) @AT@ 3068 @LENGTH@ 11
------UPD SimpleName@@MethodName:stop:[] @TO@ MethodName:stop:[true] @AT@ 3073 @LENGTH@ 6
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:stop:[] @AT@ 3078 @LENGTH@ 4


UPD VariableDeclarationStatement@@InputStream is=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class); @TO@ InputStream is=exchange.getIn().getMandatoryBody(InputStream.class); @AT@ 2159 @LENGTH@ 80
---UPD VariableDeclarationFragment@@is=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ is=exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 2171 @LENGTH@ 67
------UPD MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 2176 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @AT@ 2131 @LENGTH@ 16
---------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 2176 @LENGTH@ 14
---------UPD SimpleName@@MethodName:getMandatoryInBody:[exchange, InputStream.class] @TO@ MethodName:getMandatoryBody:[InputStream.class] @AT@ 2191 @LENGTH@ 47
------------DEL SimpleName@@exchange @AT@ 2210 @LENGTH@ 8


UPD VariableDeclarationStatement@@Object value=converter.convertTo(leftValue.getClass(),rightValue); @TO@ Object value=converter.tryConvertTo(leftValue.getClass(),rightValue); @AT@ 6460 @LENGTH@ 69
---UPD VariableDeclarationFragment@@value=converter.convertTo(leftValue.getClass(),rightValue) @TO@ value=converter.tryConvertTo(leftValue.getClass(),rightValue) @AT@ 6467 @LENGTH@ 61
------UPD MethodInvocation@@converter.convertTo(leftValue.getClass(),rightValue) @TO@ converter.tryConvertTo(leftValue.getClass(),rightValue) @AT@ 6475 @LENGTH@ 53
---------UPD SimpleName@@MethodName:convertTo:[leftValue.getClass(), rightValue] @TO@ MethodName:tryConvertTo:[leftValue.getClass(), rightValue] @AT@ 6485 @LENGTH@ 43


UPD ExpressionStatement@@Assignment:processor=wrapProcessor(routeContext,processor) @TO@ Assignment:processor=wrapChannel(routeContext,processor,processorType) @AT@ 6225 @LENGTH@ 51
---UPD Assignment@@processor=wrapProcessor(routeContext,processor) @TO@ processor=wrapChannel(routeContext,processor,processorType) @AT@ 6225 @LENGTH@ 50
------UPD MethodInvocation@@wrapProcessor(routeContext,processor) @TO@ wrapChannel(routeContext,processor,processorType) @AT@ 6237 @LENGTH@ 38
---------UPD SimpleName@@MethodName:wrapProcessor:[routeContext, processor] @TO@ MethodName:wrapChannel:[routeContext, processor, processorType] @AT@ 6237 @LENGTH@ 38
------------INS SimpleName@@processorType @TO@ SimpleName@@MethodName:wrapProcessor:[routeContext, processor] @AT@ 6274 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:SSOBaseCase.executeNoAuthSingleSignOnTest(baseURL1,baseURL2,log) @TO@ MethodInvocation:SSOBaseCase.executeNoAuthSingleSignOnTest(new URL(baseURL1,"/"),new URL(baseURL2,"/"),log) @AT@ 4696 @LENGTH@ 67
---UPD MethodInvocation@@SSOBaseCase.executeNoAuthSingleSignOnTest(baseURL1,baseURL2,log) @TO@ SSOBaseCase.executeNoAuthSingleSignOnTest(new URL(baseURL1,"/"),new URL(baseURL2,"/"),log) @AT@ 4696 @LENGTH@ 66
------UPD SimpleName@@MethodName:executeNoAuthSingleSignOnTest:[baseURL1, baseURL2, log] @TO@ MethodName:executeNoAuthSingleSignOnTest:[new URL(baseURL1,"/"), new URL(baseURL2,"/"), log] @AT@ 4708 @LENGTH@ 54
---------INS ClassInstanceCreation@@URL[baseURL1, "/"] @TO@ SimpleName@@MethodName:executeNoAuthSingleSignOnTest:[baseURL1, baseURL2, log] @AT@ 4738 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@URL[baseURL1, "/"] @AT@ 4738 @LENGTH@ 3
------------INS SimpleType@@URL @TO@ ClassInstanceCreation@@URL[baseURL1, "/"] @AT@ 4742 @LENGTH@ 3
------------INS SimpleName@@baseURL1 @TO@ ClassInstanceCreation@@URL[baseURL1, "/"] @AT@ 4746 @LENGTH@ 8
------------INS StringLiteral@@"/" @TO@ ClassInstanceCreation@@URL[baseURL1, "/"] @AT@ 4756 @LENGTH@ 3
---------DEL SimpleName@@baseURL1 @AT@ 4738 @LENGTH@ 8
---------DEL SimpleName@@baseURL2 @AT@ 4748 @LENGTH@ 8
---------INS ClassInstanceCreation@@URL[baseURL2, "/"] @TO@ SimpleName@@MethodName:executeNoAuthSingleSignOnTest:[baseURL1, baseURL2, log] @AT@ 4762 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@URL[baseURL2, "/"] @AT@ 4762 @LENGTH@ 3
------------INS SimpleType@@URL @TO@ ClassInstanceCreation@@URL[baseURL2, "/"] @AT@ 4766 @LENGTH@ 3
------------INS SimpleName@@baseURL2 @TO@ ClassInstanceCreation@@URL[baseURL2, "/"] @AT@ 4770 @LENGTH@ 8
------------INS StringLiteral@@"/" @TO@ ClassInstanceCreation@@URL[baseURL2, "/"] @AT@ 4780 @LENGTH@ 3


UPD TypeDeclaration@@[@Command(name="cloud-provider-add",scope="fabric",description="Registers a cloud provider to the registry."), public]CloudProviderRemove, FabricCommand @TO@ [@Command(name="cloud-provider-remove",scope="fabric",description="Removes a cloud provider from the fabric's registry."), public]CloudProviderRemove, FabricCommand @AT@ 996 @LENGTH@ 1564
---UPD NormalAnnotation@@@Command(name="cloud-provider-add",scope="fabric",description="Registers a cloud provider to the registry.") @TO@ @Command(name="cloud-provider-remove",scope="fabric",description="Removes a cloud provider from the fabric's registry.") @AT@ 996 @LENGTH@ 116


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PromptNewUserState, ConsoleWrapper theConsole, final StateValues stateValues,  @AT@ 2093 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2097 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2097 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2097 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2108 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2120 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2124 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2130 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2144 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2150 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2150 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2159 @LENGTH@ 20


UPD VariableDeclarationStatement@@List<String> expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onThreadPoolAdd","onContextStop"); @TO@ List<String> expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop"); @AT@ 1977 @LENGTH@ 298
---UPD VariableDeclarationFragment@@expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onThreadPoolAdd","onContextStop") @TO@ expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 1990 @LENGTH@ 284
------UPD MethodInvocation@@Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onThreadPoolAdd","onContextStop") @TO@ Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 2007 @LENGTH@ 267
---------UPD SimpleName@@MethodName:asList:["onThreadPoolAdd", "onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onThreadPoolAdd", "onContextStop"] @TO@ MethodName:asList:["onThreadPoolAdd", "onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @AT@ 2014 @LENGTH@ 260
------------DEL StringLiteral@@"onThreadPoolAdd" @AT@ 2239 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:insert, E entry,  @TO@ public, Set<K>, MethodName:insert, E entry,  @AT@ 6474 @LENGTH@ 773
---DEL PrimitiveType@@void @AT@ 6481 @LENGTH@ 4
---INS ParameterizedType@@Set<K> @TO@ MethodDeclaration@@public, void, MethodName:insert, E entry,  @AT@ 6533 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<K> @AT@ 6533 @LENGTH@ 3
------INS SimpleType@@K @TO@ ParameterizedType@@Set<K> @AT@ 6537 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:Collections.emptySet() @TO@ MethodDeclaration@@public, void, MethodName:insert, E entry,  @AT@ 7304 @LENGTH@ 30
------INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@MethodInvocation:Collections.emptySet() @AT@ 7311 @LENGTH@ 22
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 7311 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 7323 @LENGTH@ 10


UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 2420 @LENGTH@ 13
---UPD BooleanLiteral@@false @TO@ true @AT@ 2427 @LENGTH@ 5


UPD MethodDeclaration@@public, Transceiver, MethodName:createTranceiver, Exception,  @TO@ public, Transceiver, MethodName:createTransceiver, Exception,  @AT@ 1183 @LENGTH@ 164
---UPD SimpleName@@MethodName:createTranceiver @TO@ MethodName:createTransceiver @AT@ 1202 @LENGTH@ 16


UPD MethodDeclaration@@StartException, MethodName:unableToCreateAuthDir,  @TO@ StartException, MethodName:unableToCreateAuthDir, String dir,  @AT@ 3837 @LENGTH@ 24
---INS SingleVariableDeclaration@@String dir @TO@ MethodDeclaration@@StartException, MethodName:unableToCreateAuthDir,  @AT@ 3863 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String dir @AT@ 3863 @LENGTH@ 6
------INS SimpleName@@dir @TO@ SingleVariableDeclaration@@String dir @AT@ 3870 @LENGTH@ 3


INS IfStatement@@if (byteArrays.length == 1 && byteArrays[0] == null) {  return Collections.emptyList();} @TO@ MethodDeclaration@@static, List<byte[]>, MethodName:toBytesList, Object[] byteArrays,  @AT@ 3093 @LENGTH@ 93
---INS InfixExpression@@byteArrays.length == 1 && byteArrays[0] == null @TO@ IfStatement@@if (byteArrays.length == 1 && byteArrays[0] == null) {  return Collections.emptyList();} @AT@ 3097 @LENGTH@ 47
------INS InfixExpression@@byteArrays.length == 1 @TO@ InfixExpression@@byteArrays.length == 1 && byteArrays[0] == null @AT@ 3097 @LENGTH@ 22
---------INS QualifiedName@@byteArrays.length @TO@ InfixExpression@@byteArrays.length == 1 @AT@ 3097 @LENGTH@ 17
------------INS SimpleName@@byteArrays @TO@ QualifiedName@@byteArrays.length @AT@ 3097 @LENGTH@ 10
------------INS SimpleName@@length @TO@ QualifiedName@@byteArrays.length @AT@ 3108 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@byteArrays.length == 1 @AT@ 3114 @LENGTH@ 2
---------INS NumberLiteral@@1 @TO@ InfixExpression@@byteArrays.length == 1 @AT@ 3118 @LENGTH@ 1
------INS Operator@@&& @TO@ InfixExpression@@byteArrays.length == 1 && byteArrays[0] == null @AT@ 3119 @LENGTH@ 2
------INS InfixExpression@@byteArrays[0] == null @TO@ InfixExpression@@byteArrays.length == 1 && byteArrays[0] == null @AT@ 3123 @LENGTH@ 21
---------INS ArrayAccess@@byteArrays[0] @TO@ InfixExpression@@byteArrays[0] == null @AT@ 3123 @LENGTH@ 13
------------INS SimpleName@@byteArrays @TO@ ArrayAccess@@byteArrays[0] @AT@ 3123 @LENGTH@ 10
------------INS NumberLiteral@@0 @TO@ ArrayAccess@@byteArrays[0] @AT@ 3134 @LENGTH@ 1
---------INS Operator@@== @TO@ InfixExpression@@byteArrays[0] == null @AT@ 3136 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@byteArrays[0] == null @AT@ 3140 @LENGTH@ 4
---INS Block@@ThenBody:{  return Collections.emptyList();} @TO@ IfStatement@@if (byteArrays.length == 1 && byteArrays[0] == null) {  return Collections.emptyList();} @AT@ 3146 @LENGTH@ 40
------INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ Block@@ThenBody:{  return Collections.emptyList();} @AT@ 3151 @LENGTH@ 31
---------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 3158 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 3158 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 3170 @LENGTH@ 11


UPD MethodDeclaration@@public, PersistenceUnitMetadataHolder, MethodName:setPersistenceUnits, List<PersistenceUnitMetadata> persistenceUnits,  @TO@ public, voidMethodName:PersistenceUnitMetadataHolder, List<PersistenceUnitMetadata> persistenceUnits,  @AT@ 1847 @LENGTH@ 183
---DEL SimpleType@@PersistenceUnitMetadataHolder @AT@ 1854 @LENGTH@ 29
---UPD SimpleName@@MethodName:setPersistenceUnits @TO@ MethodName:PersistenceUnitMetadataHolder @AT@ 1884 @LENGTH@ 19
---DEL ReturnStatement@@ThisExpression:this @AT@ 2012 @LENGTH@ 12
------DEL ThisExpression@@this @AT@ 2019 @LENGTH@ 4


UPD IfStatement@@if (pu.getProperties().containsKey(JNDI_PROPERTY)) {  String jndiName=pu.getProperties().get(JNDI_PROPERTY).toString();  final ContextNames.BindInfo bindingInfo=ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName);  final BinderService binderService=new BinderService(bindingInfo.getBindName());  serviceTarget.addService(bindingInfo.getBinderServiceName(),binderService).addDependency(bindingInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addDependency(puServiceName,PersistenceUnitServiceImpl.class,new Injector<PersistenceUnitServiceImpl>(){    @Override public void inject(    final PersistenceUnitServiceImpl value) throws InjectionException {      binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(value.getEntityManagerFactory())));    }    @Override public void uninject(){      binderService.getNamingStoreInjector().uninject();    }  }).install();} @TO@ if (pu.getProperties().containsKey(JNDI_PROPERTY)) {  String jndiName=pu.getProperties().get(JNDI_PROPERTY).toString();  final ContextNames.BindInfo bindingInfo;  if (jndiName.startsWith("java:")) {    bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);  } else {    bindingInfo=ContextNames.bindInfoFor(jndiName);  }  JPA_LOGGER.tracef("binding the entity manager factory to jndi name '%s'",bindingInfo.getAbsoluteJndiName());  final BinderService binderService=new BinderService(bindingInfo.getBindName());  serviceTarget.addService(bindingInfo.getBinderServiceName(),binderService).addDependency(bindingInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addDependency(puServiceName,PersistenceUnitServiceImpl.class,new Injector<PersistenceUnitServiceImpl>(){    @Override public void inject(    final PersistenceUnitServiceImpl value) throws InjectionException {      binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(value.getEntityManagerFactory())));    }    @Override public void uninject(){      binderService.getNamingStoreInjector().uninject();    }  }).install();} @AT@ 17992 @LENGTH@ 1626
---UPD Block@@ThenBody:{  String jndiName=pu.getProperties().get(JNDI_PROPERTY).toString();  final ContextNames.BindInfo bindingInfo=ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName);  final BinderService binderService=new BinderService(bindingInfo.getBindName());  serviceTarget.addService(bindingInfo.getBinderServiceName(),binderService).addDependency(bindingInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addDependency(puServiceName,PersistenceUnitServiceImpl.class,new Injector<PersistenceUnitServiceImpl>(){    @Override public void inject(    final PersistenceUnitServiceImpl value) throws InjectionException {      binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(value.getEntityManagerFactory())));    }    @Override public void uninject(){      binderService.getNamingStoreInjector().uninject();    }  }).install();} @TO@ ThenBody:{  String jndiName=pu.getProperties().get(JNDI_PROPERTY).toString();  final ContextNames.BindInfo bindingInfo;  if (jndiName.startsWith("java:")) {    bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);  } else {    bindingInfo=ContextNames.bindInfoFor(jndiName);  }  JPA_LOGGER.tracef("binding the entity manager factory to jndi name '%s'",bindingInfo.getAbsoluteJndiName());  final BinderService binderService=new BinderService(bindingInfo.getBindName());  serviceTarget.addService(bindingInfo.getBinderServiceName(),binderService).addDependency(bindingInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addDependency(puServiceName,PersistenceUnitServiceImpl.class,new Injector<PersistenceUnitServiceImpl>(){    @Override public void inject(    final PersistenceUnitServiceImpl value) throws InjectionException {      binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(value.getEntityManagerFactory())));    }    @Override public void uninject(){      binderService.getNamingStoreInjector().uninject();    }  }).install();} @AT@ 18043 @LENGTH@ 1575
------DEL VariableDeclarationStatement@@final ContextNames.BindInfo bindingInfo=ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName); @AT@ 18169 @LENGTH@ 193
---------DEL VariableDeclarationFragment@@bindingInfo=ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName) @AT@ 18197 @LENGTH@ 164
------------DEL MethodInvocation@@ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName) @AT@ 18211 @LENGTH@ 150
------INS VariableDeclarationStatement@@final ContextNames.BindInfo bindingInfo; @TO@ Block@@ThenBody:{  String jndiName=pu.getProperties().get(JNDI_PROPERTY).toString();  final ContextNames.BindInfo bindingInfo=ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName);  final BinderService binderService=new BinderService(bindingInfo.getBindName());  serviceTarget.addService(bindingInfo.getBinderServiceName(),binderService).addDependency(bindingInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addDependency(puServiceName,PersistenceUnitServiceImpl.class,new Injector<PersistenceUnitServiceImpl>(){    @Override public void inject(    final PersistenceUnitServiceImpl value) throws InjectionException {      binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(value.getEntityManagerFactory())));    }    @Override public void uninject(){      binderService.getNamingStoreInjector().uninject();    }  }).install();} @AT@ 18169 @LENGTH@ 40
---------MOV Modifier@@final @TO@ VariableDeclarationStatement@@final ContextNames.BindInfo bindingInfo; @AT@ 18169 @LENGTH@ 5
---------MOV SimpleType@@ContextNames.BindInfo @TO@ VariableDeclarationStatement@@final ContextNames.BindInfo bindingInfo; @AT@ 18175 @LENGTH@ 21
---------INS VariableDeclarationFragment@@bindingInfo @TO@ VariableDeclarationStatement@@final ContextNames.BindInfo bindingInfo; @AT@ 18197 @LENGTH@ 11
------------MOV SimpleName@@bindingInfo @TO@ VariableDeclarationFragment@@bindingInfo @AT@ 18197 @LENGTH@ 11
------INS IfStatement@@if (jndiName.startsWith("java:")) {  bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);} else {  bindingInfo=ContextNames.bindInfoFor(jndiName);} @TO@ Block@@ThenBody:{  String jndiName=pu.getProperties().get(JNDI_PROPERTY).toString();  final ContextNames.BindInfo bindingInfo=ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName);  final BinderService binderService=new BinderService(bindingInfo.getBindName());  serviceTarget.addService(bindingInfo.getBinderServiceName(),binderService).addDependency(bindingInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addDependency(puServiceName,PersistenceUnitServiceImpl.class,new Injector<PersistenceUnitServiceImpl>(){    @Override public void inject(    final PersistenceUnitServiceImpl value) throws InjectionException {      binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(value.getEntityManagerFactory())));    }    @Override public void uninject(){      binderService.getNamingStoreInjector().uninject();    }  }).install();} @AT@ 18238 @LENGTH@ 426
---------INS MethodInvocation@@jndiName.startsWith("java:") @TO@ IfStatement@@if (jndiName.startsWith("java:")) {  bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);} else {  bindingInfo=ContextNames.bindInfoFor(jndiName);} @AT@ 18242 @LENGTH@ 28
------------INS SimpleName@@Name:jndiName @TO@ MethodInvocation@@jndiName.startsWith("java:") @AT@ 18242 @LENGTH@ 8
------------INS SimpleName@@MethodName:startsWith:["java:"] @TO@ MethodInvocation@@jndiName.startsWith("java:") @AT@ 18251 @LENGTH@ 19
---------------INS StringLiteral@@"java:" @TO@ SimpleName@@MethodName:startsWith:["java:"] @AT@ 18262 @LENGTH@ 7
---------INS Block@@ThenBody:{  bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);} @TO@ IfStatement@@if (jndiName.startsWith("java:")) {  bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);} else {  bindingInfo=ContextNames.bindInfoFor(jndiName);} @AT@ 18272 @LENGTH@ 245
------------INS ExpressionStatement@@Assignment:bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @TO@ Block@@ThenBody:{  bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);} @AT@ 18306 @LENGTH@ 181
---------------INS Assignment@@bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @TO@ ExpressionStatement@@Assignment:bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @AT@ 18306 @LENGTH@ 180
------------------INS SimpleName@@bindingInfo @TO@ Assignment@@bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @AT@ 18306 @LENGTH@ 11
------------------INS Operator@@= @TO@ Assignment@@bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @AT@ 18317 @LENGTH@ 1
------------------INS MethodInvocation@@ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @TO@ Assignment@@bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @AT@ 18321 @LENGTH@ 165
---------------------MOV SimpleName@@Name:ContextNames @TO@ MethodInvocation@@ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @AT@ 18211 @LENGTH@ 12
---------------------MOV SimpleName@@MethodName:bindInfoFor:[eeModuleDescription.getApplicationName(), eeModuleDescription.getModuleName(), eeModuleDescription.getModuleName(), jndiName] @TO@ MethodInvocation@@ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName) @AT@ 18224 @LENGTH@ 137
------------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:bindInfoFor:[eeModuleDescription.getApplicationName(), eeModuleDescription.getModuleName(), eeModuleDescription.getModuleName(), jndiName] @AT@ 18470 @LENGTH@ 5
---------INS Block@@ElseBody:{  bindingInfo=ContextNames.bindInfoFor(jndiName);} @TO@ IfStatement@@if (jndiName.startsWith("java:")) {  bindingInfo=ContextNames.bindInfoForEnvEntry(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),false,jndiName);} else {  bindingInfo=ContextNames.bindInfoFor(jndiName);} @AT@ 18551 @LENGTH@ 113
------------INS ExpressionStatement@@Assignment:bindingInfo=ContextNames.bindInfoFor(jndiName) @TO@ Block@@ElseBody:{  bindingInfo=ContextNames.bindInfoFor(jndiName);} @AT@ 18585 @LENGTH@ 49
---------------INS Assignment@@bindingInfo=ContextNames.bindInfoFor(jndiName) @TO@ ExpressionStatement@@Assignment:bindingInfo=ContextNames.bindInfoFor(jndiName) @AT@ 18585 @LENGTH@ 48
------------------INS SimpleName@@bindingInfo @TO@ Assignment@@bindingInfo=ContextNames.bindInfoFor(jndiName) @AT@ 18585 @LENGTH@ 11
------------------INS Operator@@= @TO@ Assignment@@bindingInfo=ContextNames.bindInfoFor(jndiName) @AT@ 18596 @LENGTH@ 1
------------------INS MethodInvocation@@ContextNames.bindInfoFor(jndiName) @TO@ Assignment@@bindingInfo=ContextNames.bindInfoFor(jndiName) @AT@ 18599 @LENGTH@ 34
---------------------INS SimpleName@@Name:ContextNames @TO@ MethodInvocation@@ContextNames.bindInfoFor(jndiName) @AT@ 18599 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:bindInfoFor:[jndiName] @TO@ MethodInvocation@@ContextNames.bindInfoFor(jndiName) @AT@ 18612 @LENGTH@ 21
------------------------INS SimpleName@@jndiName @TO@ SimpleName@@MethodName:bindInfoFor:[jndiName] @AT@ 18624 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:JPA_LOGGER.tracef("binding the entity manager factory to jndi name '%s'",bindingInfo.getAbsoluteJndiName()) @TO@ Block@@ThenBody:{  String jndiName=pu.getProperties().get(JNDI_PROPERTY).toString();  final ContextNames.BindInfo bindingInfo=ContextNames.bindInfoFor(eeModuleDescription.getApplicationName(),eeModuleDescription.getModuleName(),eeModuleDescription.getModuleName(),jndiName);  final BinderService binderService=new BinderService(bindingInfo.getBindName());  serviceTarget.addService(bindingInfo.getBinderServiceName(),binderService).addDependency(bindingInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addDependency(puServiceName,PersistenceUnitServiceImpl.class,new Injector<PersistenceUnitServiceImpl>(){    @Override public void inject(    final PersistenceUnitServiceImpl value) throws InjectionException {      binderService.getManagedObjectInjector().inject(new ValueManagedReferenceFactory(new ImmediateValue<Object>(value.getEntityManagerFactory())));    }    @Override public void uninject(){      binderService.getNamingStoreInjector().uninject();    }  }).install();} @AT@ 18693 @LENGTH@ 109
---------INS MethodInvocation@@JPA_LOGGER.tracef("binding the entity manager factory to jndi name '%s'",bindingInfo.getAbsoluteJndiName()) @TO@ ExpressionStatement@@MethodInvocation:JPA_LOGGER.tracef("binding the entity manager factory to jndi name '%s'",bindingInfo.getAbsoluteJndiName()) @AT@ 18693 @LENGTH@ 108
------------INS SimpleName@@Name:JPA_LOGGER @TO@ MethodInvocation@@JPA_LOGGER.tracef("binding the entity manager factory to jndi name '%s'",bindingInfo.getAbsoluteJndiName()) @AT@ 18693 @LENGTH@ 10
------------INS SimpleName@@MethodName:tracef:["binding the entity manager factory to jndi name '%s'", bindingInfo.getAbsoluteJndiName()] @TO@ MethodInvocation@@JPA_LOGGER.tracef("binding the entity manager factory to jndi name '%s'",bindingInfo.getAbsoluteJndiName()) @AT@ 18704 @LENGTH@ 97
---------------INS StringLiteral@@"binding the entity manager factory to jndi name '%s'" @TO@ SimpleName@@MethodName:tracef:["binding the entity manager factory to jndi name '%s'", bindingInfo.getAbsoluteJndiName()] @AT@ 18711 @LENGTH@ 54
---------------INS MethodInvocation@@bindingInfo.getAbsoluteJndiName() @TO@ SimpleName@@MethodName:tracef:["binding the entity manager factory to jndi name '%s'", bindingInfo.getAbsoluteJndiName()] @AT@ 18767 @LENGTH@ 33
------------------INS SimpleName@@Name:bindingInfo @TO@ MethodInvocation@@bindingInfo.getAbsoluteJndiName() @AT@ 18767 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getAbsoluteJndiName:[] @TO@ MethodInvocation@@bindingInfo.getAbsoluteJndiName() @AT@ 18779 @LENGTH@ 21


DEL ExpressionStatement@@MethodInvocation:endpoint.configureExchange(exchange) @AT@ 2383 @LENGTH@ 37
---DEL MethodInvocation@@endpoint.configureExchange(exchange) @AT@ 2383 @LENGTH@ 36
------DEL SimpleName@@Name:endpoint @AT@ 2383 @LENGTH@ 8
------DEL SimpleName@@MethodName:configureExchange:[exchange] @AT@ 2392 @LENGTH@ 27
---------DEL SimpleName@@exchange @AT@ 2410 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:start, Exception,  @TO@ protected, void, MethodName:doStart, Exception,  @AT@ 1480 @LENGTH@ 88
---UPD Modifier@@public @TO@ protected @AT@ 1480 @LENGTH@ 6
---UPD SimpleName@@MethodName:start @TO@ MethodName:doStart @AT@ 1492 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]CamelEvent, ApplicationEvent @AT@ 1102 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1102 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1110 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1117 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1123 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1128 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1128 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1147 @LENGTH@ 2


UPD IfStatement@@if (port == -1) this.destinationPort=port; @TO@ if (this.destinationPort == -1) {  this.destinationPort=port;} @AT@ 4126 @LENGTH@ 56
---UPD InfixExpression@@port == -1 @TO@ this.destinationPort == -1 @AT@ 4130 @LENGTH@ 10
------DEL SimpleName@@port @AT@ 4130 @LENGTH@ 4
------INS FieldAccess@@this.destinationPort @TO@ InfixExpression@@port == -1 @AT@ 4130 @LENGTH@ 20
---------INS ThisExpression@@this @TO@ FieldAccess@@this.destinationPort @AT@ 4130 @LENGTH@ 4
---------INS SimpleName@@destinationPort @TO@ FieldAccess@@this.destinationPort @AT@ 4135 @LENGTH@ 15
---UPD Block@@ThenBody:this.destinationPort=port; @TO@ ThenBody:{  this.destinationPort=port;} @AT@ 4154 @LENGTH@ 28


UPD VariableDeclarationStatement@@List<Object> data=CastUtils.cast(endpoint.getProcessingStrategy().poll(this,getEndpoint())); @TO@ List<?> data=endpoint.getProcessingStrategy().poll(this,getEndpoint()); @AT@ 2755 @LENGTH@ 95
---UPD ParameterizedType@@List<Object> @TO@ List<?> @AT@ 2755 @LENGTH@ 12
------DEL SimpleType@@Object @AT@ 2760 @LENGTH@ 6
------INS WildcardType@@? @TO@ ParameterizedType@@List<Object> @AT@ 2760 @LENGTH@ 1
---UPD VariableDeclarationFragment@@data=CastUtils.cast(endpoint.getProcessingStrategy().poll(this,getEndpoint())) @TO@ data=endpoint.getProcessingStrategy().poll(this,getEndpoint()) @AT@ 2768 @LENGTH@ 81
------DEL MethodInvocation@@CastUtils.cast(endpoint.getProcessingStrategy().poll(this,getEndpoint())) @AT@ 2775 @LENGTH@ 74
---------DEL SimpleName@@Name:CastUtils @AT@ 2775 @LENGTH@ 9
---------DEL SimpleName@@MethodName:cast:[endpoint.getProcessingStrategy().poll(this,getEndpoint())] @AT@ 2785 @LENGTH@ 64
------MOV MethodInvocation@@endpoint.getProcessingStrategy().poll(this,getEndpoint()) @TO@ VariableDeclarationFragment@@data=CastUtils.cast(endpoint.getProcessingStrategy().poll(this,getEndpoint())) @AT@ 2790 @LENGTH@ 58


INS FieldDeclaration@@Date, [createdAt] @TO@ TypeDeclaration@@[@Document, public]Person, Contact @AT@ 1368 @LENGTH@ 15
---INS SimpleType@@Date @TO@ FieldDeclaration@@Date, [createdAt] @AT@ 1368 @LENGTH@ 4
---INS VariableDeclarationFragment@@createdAt @TO@ FieldDeclaration@@Date, [createdAt] @AT@ 1373 @LENGTH@ 9
------INS SimpleName@@createdAt @TO@ VariableDeclarationFragment@@createdAt @AT@ 1373 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:mockLog.assertIsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testPositive, Exception,  @AT@ 1478 @LENGTH@ 28
---INS MethodInvocation@@mockLog.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:mockLog.assertIsSatisfied() @AT@ 1478 @LENGTH@ 27
------INS SimpleName@@Name:mockLog @TO@ MethodInvocation@@mockLog.assertIsSatisfied() @AT@ 1478 @LENGTH@ 7
------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@mockLog.assertIsSatisfied() @AT@ 1486 @LENGTH@ 19


UPD MethodDeclaration@@public, static, ExecutorService, MethodName:getConfiguredExecutorService, RouteContext routeContext, String name, ExecutorServiceAwareDefinition<?> definition, NoSuchBeanException,  @TO@ public, static, ExecutorService, MethodName:getConfiguredExecutorService, RouteContext routeContext, String name, ExecutorServiceAwareDefinition<?> definition, boolean useDefault, IllegalArgumentException,  @AT@ 8817 @LENGTH@ 1362
---UPD SimpleType@@NoSuchBeanException @TO@ IllegalArgumentException @AT@ 9032 @LENGTH@ 19
---INS SingleVariableDeclaration@@boolean useDefault @TO@ MethodDeclaration@@public, static, ExecutorService, MethodName:getConfiguredExecutorService, RouteContext routeContext, String name, ExecutorServiceAwareDefinition<?> definition, NoSuchBeanException,  @AT@ 9199 @LENGTH@ 18
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean useDefault @AT@ 9199 @LENGTH@ 7
------INS SimpleName@@useDefault @TO@ SingleVariableDeclaration@@boolean useDefault @AT@ 9207 @LENGTH@ 10
---UPD IfStatement@@if (definition.getExecutorService() != null) {  return definition.getExecutorService();} else if (definition.getExecutorServiceRef() != null) {  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService");  }  return answer;} @TO@ if (definition.getExecutorService() != null) {  return definition.getExecutorService();} else if (definition.getExecutorServiceRef() != null) {  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} else if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 9333 @LENGTH@ 818
------UPD Block@@ElseBody:if (definition.getExecutorServiceRef() != null) {  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService");  }  return answer;} @TO@ ElseBody:if (definition.getExecutorServiceRef() != null) {  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} else if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 9447 @LENGTH@ 704
---------UPD IfStatement@@if (definition.getExecutorServiceRef() != null) {  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService");  }  return answer;} @TO@ if (definition.getExecutorServiceRef() != null) {  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} else if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 9447 @LENGTH@ 704
------------UPD Block@@ThenBody:{  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService");  }  return answer;} @TO@ ThenBody:{  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");  }  return answer;} @AT@ 9495 @LENGTH@ 656
---------------UPD IfStatement@@if (answer == null) {  throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService");} @TO@ if (answer == null) {  throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");} @AT@ 9977 @LENGTH@ 137
------------------UPD Block@@ThenBody:{  throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService");} @TO@ ThenBody:{  throw new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.");} @AT@ 9997 @LENGTH@ 117
---------------------UPD ThrowStatement@@ClassInstanceCreation:new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService") @TO@ ClassInstanceCreation:new IllegalArgumentException("ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile.") @AT@ 10015 @LENGTH@ 85
------------------------UPD ClassInstanceCreation@@NoSuchBeanException[definition.getExecutorServiceRef(), "ExecutorService"] @TO@ IllegalArgumentException["ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile."] @AT@ 10021 @LENGTH@ 78
---------------------------UPD SimpleType@@NoSuchBeanException @TO@ IllegalArgumentException @AT@ 10025 @LENGTH@ 19
---------------------------DEL MethodInvocation@@definition.getExecutorServiceRef() @AT@ 10045 @LENGTH@ 34
---------------------------DEL StringLiteral@@"ExecutorService" @AT@ 10081 @LENGTH@ 17
---------------------------INS InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @TO@ ClassInstanceCreation@@NoSuchBeanException[definition.getExecutorServiceRef(), "ExecutorService"] @AT@ 10249 @LENGTH@ 114
------------------------------INS StringLiteral@@"ExecutorServiceRef " @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 10249 @LENGTH@ 21
------------------------------INS Operator@@+ @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 10270 @LENGTH@ 1
------------------------------INS MethodInvocation@@definition.getExecutorServiceRef() @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 10273 @LENGTH@ 34
---------------------------------MOV SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 10045 @LENGTH@ 10
---------------------------------MOV SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 10045 @LENGTH@ 10
---------------------------------MOV SimpleName@@MethodName:getExecutorServiceRef:[] @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 10056 @LENGTH@ 23
---------------------------------MOV SimpleName@@MethodName:getExecutorServiceRef:[] @TO@ MethodInvocation@@definition.getExecutorServiceRef() @AT@ 10056 @LENGTH@ 23
------------------------------INS StringLiteral@@" not found in registry or as a thread pool profile." @TO@ InfixExpression@@"ExecutorServiceRef " + definition.getExecutorServiceRef() + " not found in registry or as a thread pool profile." @AT@ 10310 @LENGTH@ 53
------------INS Block@@ElseBody:if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @TO@ IfStatement@@if (definition.getExecutorServiceRef() != null) {  ExecutorService answer=routeContext.getCamelContext().getRegistry().lookup(definition.getExecutorServiceRef(),ExecutorService.class);  if (answer == null) {    answer=manager.newThreadPool(definition,name,definition.getExecutorServiceRef());  }  if (answer == null) {    throw new NoSuchBeanException(definition.getExecutorServiceRef(),"ExecutorService");  }  return answer;} @AT@ 10422 @LENGTH@ 94
---------------INS IfStatement@@if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @TO@ Block@@ElseBody:if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 10422 @LENGTH@ 94
------------------INS SimpleName@@useDefault @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 10426 @LENGTH@ 10
------------------INS Block@@ThenBody:{  return manager.newDefaultThreadPool(definition,name);} @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 10438 @LENGTH@ 78
---------------------INS ReturnStatement@@MethodInvocation:manager.newDefaultThreadPool(definition,name) @TO@ Block@@ThenBody:{  return manager.newDefaultThreadPool(definition,name);} @AT@ 10452 @LENGTH@ 54
------------------------INS MethodInvocation@@manager.newDefaultThreadPool(definition,name) @TO@ ReturnStatement@@MethodInvocation:manager.newDefaultThreadPool(definition,name) @AT@ 10459 @LENGTH@ 46
---------------------------INS SimpleName@@Name:manager @TO@ MethodInvocation@@manager.newDefaultThreadPool(definition,name) @AT@ 10459 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:newDefaultThreadPool:[definition, name] @TO@ MethodInvocation@@manager.newDefaultThreadPool(definition,name) @AT@ 10467 @LENGTH@ 38
------------------------------INS SimpleName@@definition @TO@ SimpleName@@MethodName:newDefaultThreadPool:[definition, name] @AT@ 10488 @LENGTH@ 10
------------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:newDefaultThreadPool:[definition, name] @AT@ 10500 @LENGTH@ 4
---------------INS IfStatement@@if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @TO@ Block@@ElseBody:if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 10422 @LENGTH@ 94
------------------INS SimpleName@@useDefault @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 10426 @LENGTH@ 10
------------------INS Block@@ThenBody:{  return manager.newDefaultThreadPool(definition,name);} @TO@ IfStatement@@if (useDefault) {  return manager.newDefaultThreadPool(definition,name);} @AT@ 10438 @LENGTH@ 78
---------------------INS ReturnStatement@@MethodInvocation:manager.newDefaultThreadPool(definition,name) @TO@ Block@@ThenBody:{  return manager.newDefaultThreadPool(definition,name);} @AT@ 10452 @LENGTH@ 54
------------------------INS MethodInvocation@@manager.newDefaultThreadPool(definition,name) @TO@ ReturnStatement@@MethodInvocation:manager.newDefaultThreadPool(definition,name) @AT@ 10459 @LENGTH@ 46
---------------------------INS SimpleName@@Name:manager @TO@ MethodInvocation@@manager.newDefaultThreadPool(definition,name) @AT@ 10459 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:newDefaultThreadPool:[definition, name] @TO@ MethodInvocation@@manager.newDefaultThreadPool(definition,name) @AT@ 10467 @LENGTH@ 38
------------------------------INS SimpleName@@definition @TO@ SimpleName@@MethodName:newDefaultThreadPool:[definition, name] @AT@ 10488 @LENGTH@ 10
------------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:newDefaultThreadPool:[definition, name] @AT@ 10500 @LENGTH@ 4


INS MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @TO@ TypeDeclaration@@[public, final]ManagementChannelHandler, AbstractMessageHandler[ManagementChannelAssociation] @AT@ 3270 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3270 @LENGTH@ 6
---INS PrimitiveType@@long @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3277 @LENGTH@ 4
---INS SimpleName@@MethodName:getLastMessageReceivedTime @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3282 @LENGTH@ 26
---INS ReturnStatement@@MethodInvocation:receiver.getLastMessageTime() @TO@ MethodDeclaration@@public, long, MethodName:getLastMessageReceivedTime,  @AT@ 3321 @LENGTH@ 37
------INS MethodInvocation@@receiver.getLastMessageTime() @TO@ ReturnStatement@@MethodInvocation:receiver.getLastMessageTime() @AT@ 3328 @LENGTH@ 29
---------INS SimpleName@@Name:receiver @TO@ MethodInvocation@@receiver.getLastMessageTime() @AT@ 3328 @LENGTH@ 8
---------INS SimpleName@@MethodName:getLastMessageTime:[] @TO@ MethodInvocation@@receiver.getLastMessageTime() @AT@ 3337 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:Arrays.asList(fragmentIds) @TO@ ClassInstanceCreation:new ArrayList<String>(Arrays.asList(fragmentIds)) @AT@ 1997 @LENGTH@ 34
---INS ClassInstanceCreation@@ArrayList<String>[Arrays.asList(fragmentIds)] @TO@ ReturnStatement@@MethodInvocation:Arrays.asList(fragmentIds) @AT@ 2032 @LENGTH@ 49
------MOV MethodInvocation@@Arrays.asList(fragmentIds) @TO@ ClassInstanceCreation@@ArrayList<String>[Arrays.asList(fragmentIds)] @AT@ 2004 @LENGTH@ 26
------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[Arrays.asList(fragmentIds)] @AT@ 2032 @LENGTH@ 3
------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[Arrays.asList(fragmentIds)] @AT@ 2036 @LENGTH@ 17
---------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 2036 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 2046 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @TO@ TypeDeclaration@@[public]TestDefaultTokenServicesWithInMemory, AbstractTestDefaultTokenServices @AT@ 1303 @LENGTH@ 691
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1303 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1310 @LENGTH@ 4
---INS SimpleName@@MethodName:testExpiredToken @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1315 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1341 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)); @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1355 @LENGTH@ 190
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)); @AT@ 1355 @LENGTH@ 20
------INS VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)) @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)); @AT@ 1376 @LENGTH@ 168
---------INS SimpleName@@expectedAuthentication @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)) @AT@ 1376 @LENGTH@ 22
---------INS ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",Collections.singleton("read"),null,null),new TestAuthentication("test2",false)) @AT@ 1401 @LENGTH@ 143
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 1401 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 1405 @LENGTH@ 20
------------INS ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 1426 @LENGTH@ 77
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 1426 @LENGTH@ 3
---------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 1430 @LENGTH@ 20
---------------INS StringLiteral@@"id" @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 1451 @LENGTH@ 4
---------------INS MethodInvocation@@Collections.singleton("read") @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 1461 @LENGTH@ 29
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton("read") @AT@ 1461 @LENGTH@ 11
------------------INS SimpleName@@MethodName:singleton:["read"] @TO@ MethodInvocation@@Collections.singleton("read") @AT@ 1473 @LENGTH@ 17
---------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:singleton:["read"] @AT@ 1483 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 1492 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", Collections.singleton("read"), null, null] @AT@ 1498 @LENGTH@ 4
------------INS ClassInstanceCreation@@TestAuthentication["test2", false] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",Collections.singleton("read"),null,null), new TestAuthentication("test2",false)] @AT@ 1505 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1505 @LENGTH@ 3
---------------INS SimpleType@@TestAuthentication @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1509 @LENGTH@ 18
---------------INS StringLiteral@@"test2" @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1528 @LENGTH@ 7
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 1537 @LENGTH@ 5
---INS VariableDeclarationStatement@@DefaultOAuth2AccessToken firstAccessToken=(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication); @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1548 @LENGTH@ 137
------INS SimpleType@@DefaultOAuth2AccessToken @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken firstAccessToken=(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication); @AT@ 1548 @LENGTH@ 24
------INS VariableDeclarationFragment@@firstAccessToken=(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication) @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken firstAccessToken=(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication); @AT@ 1573 @LENGTH@ 111
---------INS SimpleName@@firstAccessToken @TO@ VariableDeclarationFragment@@firstAccessToken=(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication) @AT@ 1573 @LENGTH@ 16
---------INS CastExpression@@(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication) @TO@ VariableDeclarationFragment@@firstAccessToken=(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication) @AT@ 1592 @LENGTH@ 92
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ CastExpression@@(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication) @AT@ 1593 @LENGTH@ 24
------------INS MethodInvocation@@getTokenServices().createAccessToken(expectedAuthentication) @TO@ CastExpression@@(DefaultOAuth2AccessToken)getTokenServices().createAccessToken(expectedAuthentication) @AT@ 1619 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().createAccessToken(expectedAuthentication) @AT@ 1619 @LENGTH@ 18
---------------INS SimpleName@@MethodName:createAccessToken:[expectedAuthentication] @TO@ MethodInvocation@@getTokenServices().createAccessToken(expectedAuthentication) @AT@ 1643 @LENGTH@ 41
------------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:createAccessToken:[expectedAuthentication] @AT@ 1661 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:firstAccessToken.setExpiration(new Date(System.currentTimeMillis() - 1000)) @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1760 @LENGTH@ 76
------INS MethodInvocation@@firstAccessToken.setExpiration(new Date(System.currentTimeMillis() - 1000)) @TO@ ExpressionStatement@@MethodInvocation:firstAccessToken.setExpiration(new Date(System.currentTimeMillis() - 1000)) @AT@ 1760 @LENGTH@ 75
---------INS SimpleName@@Name:firstAccessToken @TO@ MethodInvocation@@firstAccessToken.setExpiration(new Date(System.currentTimeMillis() - 1000)) @AT@ 1760 @LENGTH@ 16
---------INS SimpleName@@MethodName:setExpiration:[new Date(System.currentTimeMillis() - 1000)] @TO@ MethodInvocation@@firstAccessToken.setExpiration(new Date(System.currentTimeMillis() - 1000)) @AT@ 1777 @LENGTH@ 58
------------INS ClassInstanceCreation@@Date[System.currentTimeMillis() - 1000] @TO@ SimpleName@@MethodName:setExpiration:[new Date(System.currentTimeMillis() - 1000)] @AT@ 1791 @LENGTH@ 43
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[System.currentTimeMillis() - 1000] @AT@ 1791 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[System.currentTimeMillis() - 1000] @AT@ 1795 @LENGTH@ 4
---------------INS InfixExpression@@System.currentTimeMillis() - 1000 @TO@ ClassInstanceCreation@@Date[System.currentTimeMillis() - 1000] @AT@ 1800 @LENGTH@ 33
------------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@System.currentTimeMillis() - 1000 @AT@ 1800 @LENGTH@ 26
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1800 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1807 @LENGTH@ 19
------------------INS Operator@@- @TO@ InfixExpression@@System.currentTimeMillis() - 1000 @AT@ 1826 @LENGTH@ 1
------------------INS NumberLiteral@@1000 @TO@ InfixExpression@@System.currentTimeMillis() - 1000 @AT@ 1829 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:expected.expect(InvalidTokenException.class) @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1839 @LENGTH@ 45
------INS MethodInvocation@@expected.expect(InvalidTokenException.class) @TO@ ExpressionStatement@@MethodInvocation:expected.expect(InvalidTokenException.class) @AT@ 1839 @LENGTH@ 44
---------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.expect(InvalidTokenException.class) @AT@ 1839 @LENGTH@ 8
---------INS SimpleName@@MethodName:expect:[InvalidTokenException.class] @TO@ MethodInvocation@@expected.expect(InvalidTokenException.class) @AT@ 1848 @LENGTH@ 35
------------INS TypeLiteral@@InvalidTokenException.class @TO@ SimpleName@@MethodName:expect:[InvalidTokenException.class] @AT@ 1855 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:expected.expectMessage("expired") @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1887 @LENGTH@ 34
------INS MethodInvocation@@expected.expectMessage("expired") @TO@ ExpressionStatement@@MethodInvocation:expected.expectMessage("expired") @AT@ 1887 @LENGTH@ 33
---------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.expectMessage("expired") @AT@ 1887 @LENGTH@ 8
---------INS SimpleName@@MethodName:expectMessage:["expired"] @TO@ MethodInvocation@@expected.expectMessage("expired") @AT@ 1896 @LENGTH@ 24
------------INS StringLiteral@@"expired" @TO@ SimpleName@@MethodName:expectMessage:["expired"] @AT@ 1910 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getTokenServices().loadAuthentication(firstAccessToken.getValue()) @TO@ MethodDeclaration@@public, void, MethodName:testExpiredToken, Exception,  @AT@ 1924 @LENGTH@ 67
------INS MethodInvocation@@getTokenServices().loadAuthentication(firstAccessToken.getValue()) @TO@ ExpressionStatement@@MethodInvocation:getTokenServices().loadAuthentication(firstAccessToken.getValue()) @AT@ 1924 @LENGTH@ 66
---------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().loadAuthentication(firstAccessToken.getValue()) @AT@ 1924 @LENGTH@ 18
---------INS SimpleName@@MethodName:loadAuthentication:[firstAccessToken.getValue()] @TO@ MethodInvocation@@getTokenServices().loadAuthentication(firstAccessToken.getValue()) @AT@ 1943 @LENGTH@ 47
------------INS MethodInvocation@@firstAccessToken.getValue() @TO@ SimpleName@@MethodName:loadAuthentication:[firstAccessToken.getValue()] @AT@ 1962 @LENGTH@ 27
---------------INS SimpleName@@Name:firstAccessToken @TO@ MethodInvocation@@firstAccessToken.getValue() @AT@ 1962 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@firstAccessToken.getValue() @AT@ 1979 @LENGTH@ 10


UPD Block@@ThenBody:{  final ServiceName jaccServiceName=JaccService.SERVICE_NAME.append(deploymentUnit.getName());  final ServiceTarget serviceTarget=phaseContext.getServiceTarget();  ServiceBuilder<?> builder=serviceTarget.addService(jaccServiceName,service);  if (deploymentUnit.getParent() != null) {    final DeploymentUnit parentDU=deploymentUnit.getParent();    builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector());  }  builder.setInitialMode(Mode.ACTIVE).install();} @TO@ ThenBody:{  final ServiceName jaccServiceName=deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME);  final ServiceTarget serviceTarget=phaseContext.getServiceTarget();  ServiceBuilder<?> builder=serviceTarget.addService(jaccServiceName,service);  if (deploymentUnit.getParent() != null) {    final DeploymentUnit parentDU=deploymentUnit.getParent();    builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector());  }  builder.setInitialMode(Mode.ACTIVE).install();} @AT@ 2436 @LENGTH@ 767
---UPD VariableDeclarationStatement@@final ServiceName jaccServiceName=JaccService.SERVICE_NAME.append(deploymentUnit.getName()); @TO@ final ServiceName jaccServiceName=deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME); @AT@ 2454 @LENGTH@ 94
------UPD VariableDeclarationFragment@@jaccServiceName=JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @TO@ jaccServiceName=deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME) @AT@ 2472 @LENGTH@ 75
---------UPD MethodInvocation@@JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @TO@ deploymentUnit.getServiceName().append(JaccService.SERVICE_NAME) @AT@ 2490 @LENGTH@ 57
------------INS MethodInvocation@@MethodName:getServiceName:[] @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @AT@ 2490 @LENGTH@ 31
------------DEL QualifiedName@@Name:JaccService.SERVICE_NAME @AT@ 2490 @LENGTH@ 24
------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(deploymentUnit.getName()) @AT@ 2490 @LENGTH@ 14
------------UPD SimpleName@@MethodName:append:[deploymentUnit.getName()] @TO@ MethodName:append:[JaccService.SERVICE_NAME] @AT@ 2515 @LENGTH@ 32
---------------DEL MethodInvocation@@deploymentUnit.getName() @AT@ 2522 @LENGTH@ 24
------------------DEL SimpleName@@Name:deploymentUnit @AT@ 2522 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 2537 @LENGTH@ 9
---------------INS QualifiedName@@JaccService.SERVICE_NAME @TO@ SimpleName@@MethodName:append:[deploymentUnit.getName()] @AT@ 2529 @LENGTH@ 24
------------------INS SimpleName@@JaccService @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 2529 @LENGTH@ 11
------------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 2541 @LENGTH@ 12
---UPD IfStatement@@if (deploymentUnit.getParent() != null) {  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector());} @TO@ if (deploymentUnit.getParent() != null) {  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector());} @AT@ 2746 @LENGTH@ 380
------UPD Block@@ThenBody:{  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector());} @TO@ ThenBody:{  final DeploymentUnit parentDU=deploymentUnit.getParent();  builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector());} @AT@ 2786 @LENGTH@ 340
---------UPD ExpressionStatement@@MethodInvocation:builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector()) @TO@ MethodInvocation:builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector()) @AT@ 2943 @LENGTH@ 165
------------UPD MethodInvocation@@builder.addDependency(JaccService.SERVICE_NAME.append(parentDU.getName()),PolicyConfiguration.class,service.getParentPolicyInjector()) @TO@ builder.addDependency(parentDU.getServiceName().append(JaccService.SERVICE_NAME),PolicyConfiguration.class,service.getParentPolicyInjector()) @AT@ 2943 @LENGTH@ 164
---------------UPD SimpleName@@MethodName:addDependency:[JaccService.SERVICE_NAME.append(parentDU.getName()), PolicyConfiguration.class, service.getParentPolicyInjector()] @TO@ MethodName:addDependency:[parentDU.getServiceName().append(JaccService.SERVICE_NAME), PolicyConfiguration.class, service.getParentPolicyInjector()] @AT@ 2951 @LENGTH@ 156
------------------UPD MethodInvocation@@JaccService.SERVICE_NAME.append(parentDU.getName()) @TO@ parentDU.getServiceName().append(JaccService.SERVICE_NAME) @AT@ 2965 @LENGTH@ 51
---------------------DEL QualifiedName@@Name:JaccService.SERVICE_NAME @AT@ 2965 @LENGTH@ 24
---------------------INS MethodInvocation@@MethodName:getServiceName:[] @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(parentDU.getName()) @AT@ 2972 @LENGTH@ 25
---------------------INS SimpleName@@Name:parentDU @TO@ MethodInvocation@@JaccService.SERVICE_NAME.append(parentDU.getName()) @AT@ 2972 @LENGTH@ 8
---------------------UPD SimpleName@@MethodName:append:[parentDU.getName()] @TO@ MethodName:append:[JaccService.SERVICE_NAME] @AT@ 2990 @LENGTH@ 26
------------------------DEL MethodInvocation@@parentDU.getName() @AT@ 2997 @LENGTH@ 18
---------------------------DEL SimpleName@@Name:parentDU @AT@ 2997 @LENGTH@ 8
---------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 3006 @LENGTH@ 9
------------------------INS QualifiedName@@JaccService.SERVICE_NAME @TO@ SimpleName@@MethodName:append:[parentDU.getName()] @AT@ 3005 @LENGTH@ 24
---------------------------INS SimpleName@@JaccService @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 3005 @LENGTH@ 11
---------------------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@JaccService.SERVICE_NAME @AT@ 3017 @LENGTH@ 12


UPD ThrowStatement@@MethodInvocation:MESSAGES.couldNotCreateURI(new ModelNode().set("Cannot create a valid URI from " + uri + " -- "+ e.toString())) @TO@ MethodInvocation:MESSAGES.couldNotCreateURI(uri,e.toString()) @AT@ 5913 @LENGTH@ 119
---UPD MethodInvocation@@MESSAGES.couldNotCreateURI(new ModelNode().set("Cannot create a valid URI from " + uri + " -- "+ e.toString())) @TO@ MESSAGES.couldNotCreateURI(uri,e.toString()) @AT@ 5919 @LENGTH@ 112
------UPD SimpleName@@MethodName:couldNotCreateURI:[new ModelNode().set("Cannot create a valid URI from " + uri + " -- "+ e.toString())] @TO@ MethodName:couldNotCreateURI:[uri, e.toString()] @AT@ 5928 @LENGTH@ 103
---------DEL MethodInvocation@@new ModelNode().set("Cannot create a valid URI from " + uri + " -- "+ e.toString()) @AT@ 5946 @LENGTH@ 84
------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 5946 @LENGTH@ 15
---------------DEL New@@new @AT@ 5946 @LENGTH@ 3
---------------DEL SimpleType@@ModelNode @AT@ 5950 @LENGTH@ 9
------------DEL SimpleName@@MethodName:set:["Cannot create a valid URI from " + uri + " -- "+ e.toString()] @AT@ 5962 @LENGTH@ 68
---------------DEL InfixExpression@@"Cannot create a valid URI from " + uri + " -- "+ e.toString() @AT@ 5966 @LENGTH@ 63
------------------DEL StringLiteral@@"Cannot create a valid URI from " @AT@ 5966 @LENGTH@ 33
------------------DEL Operator@@+ @AT@ 5999 @LENGTH@ 1
------------------DEL SimpleName@@uri @AT@ 6002 @LENGTH@ 3
------------------DEL StringLiteral@@" -- " @AT@ 6008 @LENGTH@ 6
------------------DEL MethodInvocation@@e.toString() @AT@ 6017 @LENGTH@ 12
---------INS SimpleName@@uri @TO@ SimpleName@@MethodName:couldNotCreateURI:[new ModelNode().set("Cannot create a valid URI from " + uri + " -- "+ e.toString())] @AT@ 5946 @LENGTH@ 3
---------INS MethodInvocation@@e.toString() @TO@ SimpleName@@MethodName:couldNotCreateURI:[new ModelNode().set("Cannot create a valid URI from " + uri + " -- "+ e.toString())] @AT@ 5950 @LENGTH@ 12
------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@e.toString() @AT@ 6017 @LENGTH@ 1
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@e.toString() @AT@ 6019 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:this.parseAttributes(reader,node,attributes,EnumSet.copyOf(attributes)) @TO@ MethodInvocation:this.parseAttributes(reader,node,attributes,null) @AT@ 17525 @LENGTH@ 75
---UPD MethodInvocation@@this.parseAttributes(reader,node,attributes,EnumSet.copyOf(attributes)) @TO@ this.parseAttributes(reader,node,attributes,null) @AT@ 17525 @LENGTH@ 74
------UPD SimpleName@@MethodName:parseAttributes:[reader, node, attributes, EnumSet.copyOf(attributes)] @TO@ MethodName:parseAttributes:[reader, node, attributes, null] @AT@ 17530 @LENGTH@ 69
---------DEL MethodInvocation@@EnumSet.copyOf(attributes) @AT@ 17572 @LENGTH@ 26
------------DEL SimpleName@@Name:EnumSet @AT@ 17572 @LENGTH@ 7
------------DEL SimpleName@@MethodName:copyOf:[attributes] @AT@ 17580 @LENGTH@ 18
---------------DEL SimpleName@@attributes @AT@ 17587 @LENGTH@ 10
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseAttributes:[reader, node, attributes, EnumSet.copyOf(attributes)] @AT@ 17572 @LENGTH@ 4


DEL FieldDeclaration@@private, XmlConverter, [converter=new XmlConverter()] @AT@ 3432 @LENGTH@ 52
---DEL Modifier@@private @AT@ 3432 @LENGTH@ 7
---DEL SimpleType@@XmlConverter @AT@ 3440 @LENGTH@ 12
---DEL VariableDeclarationFragment@@converter=new XmlConverter() @AT@ 3453 @LENGTH@ 30
------DEL SimpleName@@converter @AT@ 3453 @LENGTH@ 9
------DEL ClassInstanceCreation@@XmlConverter[] @AT@ 3465 @LENGTH@ 18
---------DEL New@@new @AT@ 3465 @LENGTH@ 3
---------DEL SimpleType@@XmlConverter @AT@ 3469 @LENGTH@ 12


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[@ManagedResource(description="Managed Route"), public]ManagedRoute, ManagedPerformanceCounter[TimerListener, ManagedRouteMBean] @AT@ 9542 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 9542 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 9549 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 9553 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:route.hashCode() @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 9574 @LENGTH@ 24
------INS MethodInvocation@@route.hashCode() @TO@ ReturnStatement@@MethodInvocation:route.hashCode() @AT@ 9581 @LENGTH@ 16
---------INS SimpleName@@Name:route @TO@ MethodInvocation@@route.hashCode() @AT@ 9581 @LENGTH@ 5
---------INS SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@route.hashCode() @AT@ 9587 @LENGTH@ 10


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PropertyFilePrompt, ConsoleWrapper theConsole,  @AT@ 1921 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1925 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1925 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1925 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1936 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1948 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1952 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1958 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 1972 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 1978 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1978 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1987 @LENGTH@ 20


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      int waittime=10;      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("waittime")) {          waittime=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));        }      }      modcluster.stop(waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      int waittime=10;      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("waittime")) {          waittime=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));        }      }      modcluster.stop(waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1974 @LENGTH@ 1112
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 1978 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 1978 @LENGTH@ 17
------DEL Operator@@== @AT@ 1995 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 1999 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 1999 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 1999 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2016 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2021 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      int waittime=10;      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("waittime")) {          waittime=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));        }      }      modcluster.stop(waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1978 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1978 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1978 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 1986 @LENGTH@ 9


INS TryStatement@@try {  for (  final ManagementClient client : active) {    for (    final ServerSetupTask instance : current) {      instance.tearDown(client);    }  }}  finally {  active.clear();  current.clear();} @TO@ MethodDeclaration@@public, synchronized, void, MethodName:handleAfterClass, @Observes AfterClass event, Exception,  @AT@ 2909 @LENGTH@ 293
---MOV Block@@ThenBody:{  for (  final ManagementClient client : active) {    for (    final ServerSetupTask instance : current) {      instance.tearDown(client);    }  }  active.clear();  current.clear();} @TO@ TryStatement@@try {  for (  final ManagementClient client : active) {    for (    final ServerSetupTask instance : current) {      instance.tearDown(client);    }  }}  finally {  active.clear();  current.clear();} @AT@ 2930 @LENGTH@ 269
---MOV EnhancedForStatement@@for (final ManagementClient client : active) {  for (  final ServerSetupTask instance : current) {    instance.tearDown(client);  }} @TO@ TryStatement@@try {  for (  final ManagementClient client : active) {    for (    final ServerSetupTask instance : current) {      instance.tearDown(client);    }  }}  finally {  active.clear();  current.clear();} @AT@ 2944 @LENGTH@ 188


UPD ExpressionStatement@@MethodInvocation:assertEquals(expected,new String(actual)) @TO@ MethodInvocation:assertEquals(expected.toUpperCase(),new String(actual)) @AT@ 12218 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals(expected,new String(actual)) @TO@ assertEquals(expected.toUpperCase(),new String(actual)) @AT@ 12218 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:[expected, new String(actual)] @TO@ MethodName:assertEquals:[expected.toUpperCase(), new String(actual)] @AT@ 12218 @LENGTH@ 42
---------INS MethodInvocation@@expected.toUpperCase() @TO@ SimpleName@@MethodName:assertEquals:[expected, new String(actual)] @AT@ 12231 @LENGTH@ 22
------------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.toUpperCase() @AT@ 12231 @LENGTH@ 8
------------INS SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@expected.toUpperCase() @AT@ 12240 @LENGTH@ 13
---------DEL SimpleName@@expected @AT@ 12231 @LENGTH@ 8


DEL IfStatement@@if (current != null) {  for (  final ManagementClient client : active) {    for (    final ServerSetupTask instance : current) {      instance.tearDown(client);    }  }  active.clear();  current.clear();} @AT@ 2909 @LENGTH@ 290
---DEL InfixExpression@@current != null @AT@ 2913 @LENGTH@ 15
------DEL SimpleName@@current @AT@ 2913 @LENGTH@ 7
------DEL Operator@@!= @AT@ 2920 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 2924 @LENGTH@ 4


INS IfStatement@@if (encoding != null) {  setProperty(dataFormat,"encoding",encoding);} @TO@ MethodDeclaration@@protected, void, MethodName:configureDataFormat, DataFormat dataFormat,  @AT@ 2420 @LENGTH@ 92
---INS InfixExpression@@encoding != null @TO@ IfStatement@@if (encoding != null) {  setProperty(dataFormat,"encoding",encoding);} @AT@ 2424 @LENGTH@ 16
------INS SimpleName@@encoding @TO@ InfixExpression@@encoding != null @AT@ 2424 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@encoding != null @AT@ 2432 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@encoding != null @AT@ 2436 @LENGTH@ 4
---INS Block@@ThenBody:{  setProperty(dataFormat,"encoding",encoding);} @TO@ IfStatement@@if (encoding != null) {  setProperty(dataFormat,"encoding",encoding);} @AT@ 2442 @LENGTH@ 70
------MOV ExpressionStatement@@MethodInvocation:setProperty(dataFormat,"encoding",encoding) @TO@ Block@@ThenBody:{  setProperty(dataFormat,"encoding",encoding);} @AT@ 2420 @LENGTH@ 46


UPD MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @TO@ public, static, String, MethodName:replaceProperties, final String value, final Properties properties,  @AT@ 1980 @LENGTH@ 4950
---UPD ForStatement@@for (int i=0; i < len; i=value.offsetByCodePoints(i,1)) {  final int ch=value.codePointAt(i);switch (state) {case INITIAL:{switch (ch) {case '$':{          state=GOT_DOLLAR;          continue;        }default :{        builder.appendCodePoint(ch);        continue;      }  }}case GOT_DOLLAR:{switch (ch) {case '$':{    builder.appendCodePoint(ch);    state=INITIAL;    continue;  }case '{':{  start=i + 1;  nameStart=start;  state=GOT_OPEN_BRACE;  continue;}default :{builder.append('$').appendCodePoint(ch);state=INITIAL;continue;}}}case GOT_OPEN_BRACE:{switch (ch) {case ':':case '}':case ',':{final String name=value.substring(nameStart,i).trim();if ("/".equals(name)) {builder.append(File.separator);state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (":".equals(name)) {builder.append(File.pathSeparator);state=ch == '}' ? INITIAL : RESOLVED;continue;}String val=System.getProperty(name);if (val == null && name.startsWith("env.")) val=System.getenv(name.substring(4));if (val != null) {builder.append(val);resolvedValue=val;state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (ch == ',') {nameStart=i + 1;continue;} else if (ch == ':') {start=i + 1;state=DEFAULT;continue;} else {throw new IllegalStateException("Failed to resolve expression: " + value.substring(start - 2,i + 1));}}default :{continue;}}}case RESOLVED:{if (ch == '}') {state=INITIAL;}continue;}case DEFAULT:{if (ch == '}') {state=INITIAL;builder.append(value.substring(start,i));}continue;}default :throw new IllegalStateException("Unexpected char seen: " + ch);}} @TO@ for (int i=0; i < len; i=value.offsetByCodePoints(i,1)) {  final int ch=value.codePointAt(i);switch (state) {case INITIAL:{switch (ch) {case '$':{          state=GOT_DOLLAR;          continue;        }default :{        builder.appendCodePoint(ch);        continue;      }  }}case GOT_DOLLAR:{switch (ch) {case '$':{    builder.appendCodePoint(ch);    state=INITIAL;    continue;  }case '{':{  start=i + 1;  nameStart=start;  state=GOT_OPEN_BRACE;  continue;}default :{builder.append('$').appendCodePoint(ch);state=INITIAL;continue;}}}case GOT_OPEN_BRACE:{switch (ch) {case ':':case '}':case ',':{final String name=value.substring(nameStart,i).trim();if ("/".equals(name)) {builder.append(File.separator);state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (":".equals(name)) {builder.append(File.pathSeparator);state=ch == '}' ? INITIAL : RESOLVED;continue;}String val=(String)properties.get(name);if (val == null && name.startsWith("env.")) val=System.getenv(name.substring(4));if (val != null) {builder.append(val);resolvedValue=val;state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (ch == ',') {nameStart=i + 1;continue;} else if (ch == ':') {start=i + 1;state=DEFAULT;continue;} else {throw new IllegalStateException("Failed to resolve expression: " + value.substring(start - 2,i + 1));}}default :{continue;}}}case RESOLVED:{if (ch == '}') {state=INITIAL;}continue;}case DEFAULT:{if (ch == '}') {state=INITIAL;builder.append(value.substring(start,i));}continue;}default :throw new IllegalStateException("Unexpected char seen: " + ch);}} @AT@ 2266 @LENGTH@ 4071
------UPD SwitchStatement@@switch (state) {case INITIAL:{switch (ch) {case '$':{        state=GOT_DOLLAR;        continue;      }default :{      builder.appendCodePoint(ch);      continue;    }}}case GOT_DOLLAR:{switch (ch) {case '$':{  builder.appendCodePoint(ch);  state=INITIAL;  continue;}case '{':{start=i + 1;nameStart=start;state=GOT_OPEN_BRACE;continue;}default :{builder.append('$').appendCodePoint(ch);state=INITIAL;continue;}}}case GOT_OPEN_BRACE:{switch (ch) {case ':':case '}':case ',':{final String name=value.substring(nameStart,i).trim();if ("/".equals(name)) {builder.append(File.separator);state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (":".equals(name)) {builder.append(File.pathSeparator);state=ch == '}' ? INITIAL : RESOLVED;continue;}String val=System.getProperty(name);if (val == null && name.startsWith("env.")) val=System.getenv(name.substring(4));if (val != null) {builder.append(val);resolvedValue=val;state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (ch == ',') {nameStart=i + 1;continue;} else if (ch == ':') {start=i + 1;state=DEFAULT;continue;} else {throw new IllegalStateException("Failed to resolve expression: " + value.substring(start - 2,i + 1));}}default :{continue;}}}case RESOLVED:{if (ch == '}') {state=INITIAL;}continue;}case DEFAULT:{if (ch == '}') {state=INITIAL;builder.append(value.substring(start,i));}continue;}default :throw new IllegalStateException("Unexpected char seen: " + ch);} @TO@ switch (state) {case INITIAL:{switch (ch) {case '$':{        state=GOT_DOLLAR;        continue;      }default :{      builder.appendCodePoint(ch);      continue;    }}}case GOT_DOLLAR:{switch (ch) {case '$':{  builder.appendCodePoint(ch);  state=INITIAL;  continue;}case '{':{start=i + 1;nameStart=start;state=GOT_OPEN_BRACE;continue;}default :{builder.append('$').appendCodePoint(ch);state=INITIAL;continue;}}}case GOT_OPEN_BRACE:{switch (ch) {case ':':case '}':case ',':{final String name=value.substring(nameStart,i).trim();if ("/".equals(name)) {builder.append(File.separator);state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (":".equals(name)) {builder.append(File.pathSeparator);state=ch == '}' ? INITIAL : RESOLVED;continue;}String val=(String)properties.get(name);if (val == null && name.startsWith("env.")) val=System.getenv(name.substring(4));if (val != null) {builder.append(val);resolvedValue=val;state=ch == '}' ? INITIAL : RESOLVED;continue;} else if (ch == ',') {nameStart=i + 1;continue;} else if (ch == ':') {start=i + 1;state=DEFAULT;continue;} else {throw new IllegalStateException("Failed to resolve expression: " + value.substring(start - 2,i + 1));}}default :{continue;}}}case RESOLVED:{if (ch == '}') {state=INITIAL;}continue;}case DEFAULT:{if (ch == '}') {state=INITIAL;builder.append(value.substring(start,i));}continue;}default :throw new IllegalStateException("Unexpected char seen: " + ch);} @AT@ 2390 @LENGTH@ 3937
---------UPD SwitchStatement@@switch (ch) {case ':':case '}':case ',':{    final String name=value.substring(nameStart,i).trim();    if ("/".equals(name)) {      builder.append(File.separator);      state=ch == '}' ? INITIAL : RESOLVED;      continue;    } else     if (":".equals(name)) {      builder.append(File.pathSeparator);      state=ch == '}' ? INITIAL : RESOLVED;      continue;    }    String val=System.getProperty(name);    if (val == null && name.startsWith("env."))     val=System.getenv(name.substring(4));    if (val != null) {      builder.append(val);      resolvedValue=val;      state=ch == '}' ? INITIAL : RESOLVED;      continue;    } else     if (ch == ',') {      nameStart=i + 1;      continue;    } else     if (ch == ':') {      start=i + 1;      state=DEFAULT;      continue;    } else {      throw new IllegalStateException("Failed to resolve expression: " + value.substring(start - 2,i + 1));    }  }default :{  continue;}} @TO@ switch (ch) {case ':':case '}':case ',':{    final String name=value.substring(nameStart,i).trim();    if ("/".equals(name)) {      builder.append(File.separator);      state=ch == '}' ? INITIAL : RESOLVED;      continue;    } else     if (":".equals(name)) {      builder.append(File.pathSeparator);      state=ch == '}' ? INITIAL : RESOLVED;      continue;    }    String val=(String)properties.get(name);    if (val == null && name.startsWith("env."))     val=System.getenv(name.substring(4));    if (val != null) {      builder.append(val);      resolvedValue=val;      state=ch == '}' ? INITIAL : RESOLVED;      continue;    } else     if (ch == ',') {      nameStart=i + 1;      continue;    } else     if (ch == ':') {      start=i + 1;      state=DEFAULT;      continue;    } else {      throw new IllegalStateException("Failed to resolve expression: " + value.substring(start - 2,i + 1));    }  }default :{  continue;}} @AT@ 3772 @LENGTH@ 1949
------------UPD VariableDeclarationStatement@@String val=System.getProperty(name); @TO@ String val=(String)properties.get(name); @AT@ 4587 @LENGTH@ 38
---------------UPD VariableDeclarationFragment@@val=System.getProperty(name) @TO@ val=(String)properties.get(name) @AT@ 4594 @LENGTH@ 30
------------------DEL MethodInvocation@@System.getProperty(name) @AT@ 4600 @LENGTH@ 24
------------------INS CastExpression@@(String)properties.get(name) @TO@ VariableDeclarationFragment@@val=System.getProperty(name) @AT@ 5183 @LENGTH@ 29
---------------------INS SimpleType@@String @TO@ CastExpression@@(String)properties.get(name) @AT@ 5184 @LENGTH@ 6
---------------------INS MethodInvocation@@properties.get(name) @TO@ CastExpression@@(String)properties.get(name) @AT@ 5192 @LENGTH@ 20
------------------------MOV SimpleName@@Name:System @TO@ MethodInvocation@@properties.get(name) @AT@ 4600 @LENGTH@ 6
------------------------MOV SimpleName@@MethodName:getProperty:[name] @TO@ MethodInvocation@@properties.get(name) @AT@ 4607 @LENGTH@ 17
---INS SingleVariableDeclaration@@final Properties properties @TO@ MethodDeclaration@@public, static, String, MethodName:replaceProperties, final String value,  @AT@ 2593 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Properties properties @AT@ 2593 @LENGTH@ 5
------INS SimpleType@@Properties @TO@ SingleVariableDeclaration@@final Properties properties @AT@ 2599 @LENGTH@ 10
------INS SimpleName@@properties @TO@ SingleVariableDeclaration@@final Properties properties @AT@ 2610 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:from(de2).filter(simple("${body.correlationID} == ID:2")).to(testEndPointUri) @TO@ MethodInvocation:from(de2).filter(simple("${body.correlationID} == 'ID:2'")).to(testEndPointUri) @AT@ 9722 @LENGTH@ 78
---UPD MethodInvocation@@from(de2).filter(simple("${body.correlationID} == ID:2")).to(testEndPointUri) @TO@ from(de2).filter(simple("${body.correlationID} == 'ID:2'")).to(testEndPointUri) @AT@ 9722 @LENGTH@ 77
------UPD MethodInvocation@@MethodName:filter:[simple("${body.correlationID} == ID:2")] @TO@ MethodName:filter:[simple("${body.correlationID} == 'ID:2'")] @AT@ 9722 @LENGTH@ 57
---------UPD MethodInvocation@@simple("${body.correlationID} == ID:2") @TO@ simple("${body.correlationID} == 'ID:2'") @AT@ 9739 @LENGTH@ 39
------------UPD SimpleName@@MethodName:simple:["${body.correlationID} == ID:2"] @TO@ MethodName:simple:["${body.correlationID} == 'ID:2'"] @AT@ 9739 @LENGTH@ 39
---------------UPD StringLiteral@@"${body.correlationID} == ID:2" @TO@ "${body.correlationID} == 'ID:2'" @AT@ 9746 @LENGTH@ 31


UPD FieldDeclaration@@private, static, final, int, [TIMEOUT=15000] @TO@ private, static, final, int, [TIMEOUT=30000] @AT@ 3577 @LENGTH@ 41
---UPD VariableDeclarationFragment@@TIMEOUT=15000 @TO@ TIMEOUT=30000 @AT@ 3602 @LENGTH@ 15
------UPD NumberLiteral@@15000 @TO@ 30000 @AT@ 3612 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId,  @AT@ 1666 @LENGTH@ 1713
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient,  @AT@ 1725 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 1725 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 1731 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 1738 @LENGTH@ 11


UPD MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @TO@ protected, Context, MethodName:createJndiContext, Exception,  @AT@ 2046 @LENGTH@ 345
---UPD SimpleType@@CamelContext @TO@ Context @AT@ 2056 @LENGTH@ 12
---UPD SimpleName@@MethodName:createCamelContext @TO@ MethodName:createJndiContext @AT@ 2069 @LENGTH@ 18
---UPD VariableDeclarationStatement@@CamelContext camelContext=super.createCamelContext(); @TO@ JndiContext answer=new JndiContext(); @AT@ 2117 @LENGTH@ 55
------UPD SimpleType@@CamelContext @TO@ JndiContext @AT@ 2117 @LENGTH@ 12
------UPD VariableDeclarationFragment@@camelContext=super.createCamelContext() @TO@ answer=new JndiContext() @AT@ 2130 @LENGTH@ 41
---------INS ClassInstanceCreation@@JndiContext[] @TO@ VariableDeclarationFragment@@camelContext=super.createCamelContext() @AT@ 2064 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@JndiContext[] @AT@ 2064 @LENGTH@ 3
------------INS SimpleType@@JndiContext @TO@ ClassInstanceCreation@@JndiContext[] @AT@ 2068 @LENGTH@ 11
---------UPD SimpleName@@camelContext @TO@ answer @AT@ 2130 @LENGTH@ 12
---------DEL SuperMethodInvocation@@super.createCamelContext() @AT@ 2145 @LENGTH@ 26
------------DEL SimpleName@@MethodName:createCamelContext:[] @AT@ 2151 @LENGTH@ 18
---UPD VariableDeclarationStatement@@ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory(); @TO@ ActiveMQComponent amq=ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false"); @AT@ 2182 @LENGTH@ 83
------UPD SimpleType@@ConnectionFactory @TO@ ActiveMQComponent @AT@ 2182 @LENGTH@ 17
------UPD VariableDeclarationFragment@@connectionFactory=CamelJmsTestHelper.createConnectionFactory() @TO@ amq=ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false") @AT@ 2200 @LENGTH@ 64
---------UPD SimpleName@@connectionFactory @TO@ amq @AT@ 2200 @LENGTH@ 17
---------UPD MethodInvocation@@CamelJmsTestHelper.createConnectionFactory() @TO@ ActiveMQComponent.activeMQComponent("vm://localhost?broker.persistent=false") @AT@ 2220 @LENGTH@ 44
------------UPD SimpleName@@Name:CamelJmsTestHelper @TO@ Name:ActiveMQComponent @AT@ 2220 @LENGTH@ 18
------------UPD SimpleName@@MethodName:createConnectionFactory:[] @TO@ MethodName:activeMQComponent:["vm://localhost?broker.persistent=false"] @AT@ 2239 @LENGTH@ 25
---------------INS StringLiteral@@"vm://localhost?broker.persistent=false" @TO@ SimpleName@@MethodName:createConnectionFactory:[] @AT@ 2197 @LENGTH@ 40
---INS ExpressionStatement@@MethodInvocation:amq.setCamelContext(context) @TO@ MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 2248 @LENGTH@ 29
------INS MethodInvocation@@amq.setCamelContext(context) @TO@ ExpressionStatement@@MethodInvocation:amq.setCamelContext(context) @AT@ 2248 @LENGTH@ 28
---------INS SimpleName@@Name:amq @TO@ MethodInvocation@@amq.setCamelContext(context) @AT@ 2248 @LENGTH@ 3
---------INS SimpleName@@MethodName:setCamelContext:[context] @TO@ MethodInvocation@@amq.setCamelContext(context) @AT@ 2252 @LENGTH@ 24
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:setCamelContext:[context] @AT@ 2268 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:camelContext.addComponent("jms",jmsComponentAutoAcknowledge(connectionFactory)) @TO@ MethodInvocation:answer.bind("jms",amq) @AT@ 2274 @LENGTH@ 81
------UPD MethodInvocation@@camelContext.addComponent("jms",jmsComponentAutoAcknowledge(connectionFactory)) @TO@ answer.bind("jms",amq) @AT@ 2274 @LENGTH@ 80
---------UPD SimpleName@@Name:camelContext @TO@ Name:answer @AT@ 2274 @LENGTH@ 12
---------UPD SimpleName@@MethodName:addComponent:["jms", jmsComponentAutoAcknowledge(connectionFactory)] @TO@ MethodName:bind:["jms", amq] @AT@ 2287 @LENGTH@ 67
------------DEL MethodInvocation@@jmsComponentAutoAcknowledge(connectionFactory) @AT@ 2307 @LENGTH@ 46
---------------DEL SimpleName@@MethodName:jmsComponentAutoAcknowledge:[connectionFactory] @AT@ 2307 @LENGTH@ 46
------------MOV SimpleName@@connectionFactory @TO@ SimpleName@@MethodName:addComponent:["jms", jmsComponentAutoAcknowledge(connectionFactory)] @AT@ 2335 @LENGTH@ 17
---UPD ReturnStatement@@SimpleName:camelContext @TO@ SimpleName:answer @AT@ 2365 @LENGTH@ 20
------UPD SimpleName@@camelContext @TO@ answer @AT@ 2372 @LENGTH@ 12


UPD IfStatement@@if (ROOT_LOGGER.isDebugEnabled()) {  long elapsed=System.currentTimeMillis() - start;  ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @TO@ if (MGMT_OP_LOGGER.isDebugEnabled()) {  long elapsed=System.currentTimeMillis() - start;  MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @AT@ 4541 @LENGTH@ 210
---UPD MethodInvocation@@ROOT_LOGGER.isDebugEnabled() @TO@ MGMT_OP_LOGGER.isDebugEnabled() @AT@ 4545 @LENGTH@ 28
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 4545 @LENGTH@ 11
---UPD Block@@ThenBody:{  long elapsed=System.currentTimeMillis() - start;  ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @TO@ ThenBody:{  long elapsed=System.currentTimeMillis() - start;  MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @AT@ 4575 @LENGTH@ 176
------UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @TO@ MethodInvocation:MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @AT@ 4668 @LENGTH@ 65
---------UPD MethodInvocation@@ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @TO@ MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @AT@ 4668 @LENGTH@ 64
------------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 4668 @LENGTH@ 11


MOV MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ TypeDeclaration@@[public]ProfileRemoveHandler, AbstractRemoveStepHandler[DescriptionProvider] @AT@ 1796 @LENGTH@ 427


DEL FieldDeclaration@@public, static, final, int, [INSTALL_RESOLVE_EJB_INJECTIONS=0x0402] @AT@ 21823 @LENGTH@ 77
---DEL Modifier@@public @AT@ 21823 @LENGTH@ 6
---DEL Modifier@@static @AT@ 21830 @LENGTH@ 6
---DEL Modifier@@final @AT@ 21837 @LENGTH@ 5
---DEL PrimitiveType@@int @AT@ 21843 @LENGTH@ 3
---DEL VariableDeclarationFragment@@INSTALL_RESOLVE_EJB_INJECTIONS=0x0402 @AT@ 21847 @LENGTH@ 52
------DEL SimpleName@@INSTALL_RESOLVE_EJB_INJECTIONS @AT@ 21847 @LENGTH@ 30
------DEL NumberLiteral@@0x0402 @AT@ 21893 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, Logger, [log=Logger.getLogger(TransformationTarget.class)] @AT@ 538 @LENGTH@ 79
---DEL Modifier@@private @AT@ 538 @LENGTH@ 7
---DEL Modifier@@static @AT@ 546 @LENGTH@ 6
---DEL Modifier@@final @AT@ 553 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 559 @LENGTH@ 6
---DEL VariableDeclarationFragment@@log=Logger.getLogger(TransformationTarget.class) @AT@ 566 @LENGTH@ 50
------DEL SimpleName@@log @AT@ 566 @LENGTH@ 3
------DEL MethodInvocation@@Logger.getLogger(TransformationTarget.class) @AT@ 572 @LENGTH@ 44
---------DEL SimpleName@@Name:Logger @AT@ 572 @LENGTH@ 6
---------DEL SimpleName@@MethodName:getLogger:[TransformationTarget.class] @AT@ 579 @LENGTH@ 37
------------DEL TypeLiteral@@TransformationTarget.class @AT@ 589 @LENGTH@ 26


UPD VariableDeclarationStatement@@List<ProcessorDefinition> children=processor.getOutputs(); @TO@ List<ProcessorDefinition<?>> children=processor.getOutputs(); @AT@ 25745 @LENGTH@ 60
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 25745 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 25716 @LENGTH@ 22
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 25736 @LENGTH@ 1
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 25750 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:customHandler.registerReadOnlyAttribute(CommonAttributes.MODULE,null) @TO@ MethodDeclaration@@public, void, MethodName:initialize, ExtensionContext context,  @AT@ 17870 @LENGTH@ 71
---INS MethodInvocation@@customHandler.registerReadOnlyAttribute(CommonAttributes.MODULE,null) @TO@ ExpressionStatement@@MethodInvocation:customHandler.registerReadOnlyAttribute(CommonAttributes.MODULE,null) @AT@ 17870 @LENGTH@ 70
------INS SimpleName@@Name:customHandler @TO@ MethodInvocation@@customHandler.registerReadOnlyAttribute(CommonAttributes.MODULE,null) @AT@ 17870 @LENGTH@ 13
------INS SimpleName@@MethodName:registerReadOnlyAttribute:[CommonAttributes.MODULE, null] @TO@ MethodInvocation@@customHandler.registerReadOnlyAttribute(CommonAttributes.MODULE,null) @AT@ 17884 @LENGTH@ 56
---------INS QualifiedName@@CommonAttributes.MODULE @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[CommonAttributes.MODULE, null] @AT@ 17910 @LENGTH@ 23
------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.MODULE @AT@ 17910 @LENGTH@ 16
------------INS SimpleName@@MODULE @TO@ QualifiedName@@CommonAttributes.MODULE @AT@ 17927 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[CommonAttributes.MODULE, null] @AT@ 17935 @LENGTH@ 4


UPD VariableDeclarationStatement@@List<ProcessorDefinition> list=assertListSize(route.getOutputs(),uris.length); @TO@ List<ProcessorDefinition<?>> list=assertListSize(route.getOutputs(),uris.length); @AT@ 17885 @LENGTH@ 81
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 17885 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 17856 @LENGTH@ 22
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 17876 @LENGTH@ 1
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 17890 @LENGTH@ 19


UPD MethodDeclaration@@public, List<ProcessorDefinition>, MethodName:getOutputs,  @TO@ public, List<ProcessorDefinition<?>>, MethodName:getOutputs,  @AT@ 1083 @LENGTH@ 93
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 1090 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 1095 @LENGTH@ 22
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1095 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 1115 @LENGTH@ 1


INS FieldDeclaration@@public, static, final, Charset, [macRomanCharSet=Charset.forName("MacRoman")] @TO@ TypeDeclaration@@[public]ContainerImpl, [Container] @AT@ 1880 @LENGTH@ 74
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, Charset, [macRomanCharSet=Charset.forName("MacRoman")] @AT@ 1880 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, Charset, [macRomanCharSet=Charset.forName("MacRoman")] @AT@ 1887 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, Charset, [macRomanCharSet=Charset.forName("MacRoman")] @AT@ 1894 @LENGTH@ 5
---INS SimpleType@@Charset @TO@ FieldDeclaration@@public, static, final, Charset, [macRomanCharSet=Charset.forName("MacRoman")] @AT@ 1900 @LENGTH@ 7
---INS VariableDeclarationFragment@@macRomanCharSet=Charset.forName("MacRoman") @TO@ FieldDeclaration@@public, static, final, Charset, [macRomanCharSet=Charset.forName("MacRoman")] @AT@ 1908 @LENGTH@ 45
------INS SimpleName@@macRomanCharSet @TO@ VariableDeclarationFragment@@macRomanCharSet=Charset.forName("MacRoman") @AT@ 1908 @LENGTH@ 15
------INS MethodInvocation@@Charset.forName("MacRoman") @TO@ VariableDeclarationFragment@@macRomanCharSet=Charset.forName("MacRoman") @AT@ 1926 @LENGTH@ 27
---------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName("MacRoman") @AT@ 1926 @LENGTH@ 7
---------INS SimpleName@@MethodName:forName:["MacRoman"] @TO@ MethodInvocation@@Charset.forName("MacRoman") @AT@ 1934 @LENGTH@ 19
------------INS StringLiteral@@"MacRoman" @TO@ SimpleName@@MethodName:forName:["MacRoman"] @AT@ 1942 @LENGTH@ 10


INS IfStatement@@if (!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME)) {  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @TO@ MethodDeclaration@@private, ModelNode, MethodName:parseMDB, final XMLExtendedStreamReader reader, List<ModelNode> operations, ModelNode ejb3SubsystemAddOperation, XMLStreamException,  @AT@ 16626 @LENGTH@ 404
---INS PrefixExpression@@!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @TO@ IfStatement@@if (!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME)) {  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 16630 @LENGTH@ 87
------INS Operator@@! @TO@ PrefixExpression@@!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 16630 @LENGTH@ 1
------INS MethodInvocation@@ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @TO@ PrefixExpression@@!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 16631 @LENGTH@ 86
---------INS SimpleName@@Name:ejb3SubsystemAddOperation @TO@ MethodInvocation@@ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 16631 @LENGTH@ 25
---------INS SimpleName@@MethodName:hasDefined:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @TO@ MethodInvocation@@ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 16657 @LENGTH@ 60
------------INS QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @TO@ SimpleName@@MethodName:hasDefined:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @AT@ 16668 @LENGTH@ 48
---------------INS SimpleName@@EJB3SubsystemModel @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 16668 @LENGTH@ 18
---------------INS SimpleName@@DEFAULT_RESOURCE_ADAPTER_NAME @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 16687 @LENGTH@ 29
---INS Block@@ThenBody:{  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @TO@ IfStatement@@if (!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME)) {  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 16719 @LENGTH@ 311
------INS VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @TO@ Block@@ThenBody:{  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 16733 @LENGTH@ 116
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @AT@ 16733 @LENGTH@ 5
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @AT@ 16739 @LENGTH@ 9
---------INS VariableDeclarationFragment@@defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @TO@ VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @AT@ 16749 @LENGTH@ 99
------------INS SimpleName@@defaultRAName @TO@ VariableDeclarationFragment@@defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 16749 @LENGTH@ 13
------------INS MethodInvocation@@EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @TO@ VariableDeclarationFragment@@defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 16765 @LENGTH@ 83
---------------INS QualifiedName@@Name:EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME @TO@ MethodInvocation@@EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 16765 @LENGTH@ 65
---------------INS SimpleName@@MethodName:getDefaultValue:[] @TO@ MethodInvocation@@EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 16831 @LENGTH@ 17
------INS IfStatement@@if (defaultRAName != null) {  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @TO@ Block@@ThenBody:{  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 16862 @LENGTH@ 158
---------INS InfixExpression@@defaultRAName != null @TO@ IfStatement@@if (defaultRAName != null) {  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @AT@ 16866 @LENGTH@ 21
------------INS SimpleName@@defaultRAName @TO@ InfixExpression@@defaultRAName != null @AT@ 16866 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@defaultRAName != null @AT@ 16879 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@defaultRAName != null @AT@ 16883 @LENGTH@ 4
---------INS Block@@ThenBody:{  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @TO@ IfStatement@@if (defaultRAName != null) {  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @AT@ 16889 @LENGTH@ 131
------------INS ExpressionStatement@@MethodInvocation:ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @TO@ Block@@ThenBody:{  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @AT@ 16907 @LENGTH@ 99
---------------INS MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @TO@ ExpressionStatement@@MethodInvocation:ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 16907 @LENGTH@ 98
------------------INS MethodInvocation@@MethodName:get:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @TO@ MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 16907 @LENGTH@ 79
---------------------INS QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @TO@ MethodInvocation@@MethodName:get:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @AT@ 16937 @LENGTH@ 48
------------------------INS SimpleName@@EJB3SubsystemModel @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 16937 @LENGTH@ 18
------------------------INS SimpleName@@DEFAULT_RESOURCE_ADAPTER_NAME @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 16956 @LENGTH@ 29
------------------INS SimpleName@@Name:ejb3SubsystemAddOperation @TO@ MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 16907 @LENGTH@ 25
------------------INS SimpleName@@MethodName:set:[defaultRAName] @TO@ MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 16987 @LENGTH@ 18
---------------------INS SimpleName@@defaultRAName @TO@ SimpleName@@MethodName:set:[defaultRAName] @AT@ 16991 @LENGTH@ 13


INS TryStatement@@try {  modcluster.disableContext(contexthost.webhost,contexthost.webcontext);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2418 @LENGTH@ 335
---MOV ExpressionStatement@@MethodInvocation:modcluster.disableContext(contexthost.webhost,contexthost.webcontext) @TO@ TryStatement@@try {  modcluster.disableContext(contexthost.webhost,contexthost.webcontext);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2352 @LENGTH@ 71
---INS CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @TO@ TryStatement@@try {  modcluster.disableContext(contexthost.webhost,contexthost.webcontext);} catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2538 @LENGTH@ 215
------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2544 @LENGTH@ 26
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2544 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 2569 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)));} @AT@ 2598 @LENGTH@ 133
---------INS ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))) @AT@ 2604 @LENGTH@ 126
------------INS New@@new @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2604 @LENGTH@ 3
------------INS SimpleType@@OperationFailedException @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2608 @LENGTH@ 24
------------INS MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @TO@ ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext))] @AT@ 2633 @LENGTH@ 96
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @AT@ 2633 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2633 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 2637 @LENGTH@ 9
---------------INS SimpleName@@MethodName:set:[MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)] @TO@ MethodInvocation@@new ModelNode().set(MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)) @AT@ 2649 @LENGTH@ 80
------------------INS MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @TO@ SimpleName@@MethodName:set:[MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext)] @AT@ 2653 @LENGTH@ 75
---------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @AT@ 2653 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @TO@ MethodInvocation@@MESSAGES.ContextorHostNotFound(contexthost.webhost,contexthost.webcontext) @AT@ 2662 @LENGTH@ 66
------------------------INS QualifiedName@@contexthost.webhost @TO@ SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @AT@ 2684 @LENGTH@ 19
---------------------------INS SimpleName@@contexthost @TO@ QualifiedName@@contexthost.webhost @AT@ 2684 @LENGTH@ 11
---------------------------INS SimpleName@@webhost @TO@ QualifiedName@@contexthost.webhost @AT@ 2696 @LENGTH@ 7
------------------------INS QualifiedName@@contexthost.webcontext @TO@ SimpleName@@MethodName:ContextorHostNotFound:[contexthost.webhost, contexthost.webcontext] @AT@ 2705 @LENGTH@ 22
---------------------------INS SimpleName@@contexthost @TO@ QualifiedName@@contexthost.webcontext @AT@ 2705 @LENGTH@ 11
---------------------------INS SimpleName@@webcontext @TO@ QualifiedName@@contexthost.webcontext @AT@ 2717 @LENGTH@ 10


INS MethodDeclaration@@ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @TO@ TypeDeclaration@@[public]OperationContext,  @AT@ 13265 @LENGTH@ 30
---INS SimpleType@@ImmutableManagementResourceRegistration @TO@ MethodDeclaration@@ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 13225 @LENGTH@ 39
---INS SimpleName@@MethodName:getRootResourceRegistration @TO@ MethodDeclaration@@ImmutableManagementResourceRegistration, MethodName:getRootResourceRegistration,  @AT@ 13265 @LENGTH@ 27


UPD TryStatement@@try {  String json=addressControl.getRolesAsJSON();  final ModelNode camelCase=ModelNode.fromJSONString(json);  final ModelNode converted=CamelCaseUtil.convertSecurityRole(camelCase);  context.getResult().set(converted.toJSONString(true));  context.completeStep();} catch (RuntimeException e) {  throw e;}catch (Exception e) {  context.getFailureDescription().set(e.getLocalizedMessage());} @TO@ try {  String json=addressControl.getRolesAsJSON();  reportRolesAsJSON(context,json);  context.completeStep();} catch (RuntimeException e) {  throw e;}catch (Exception e) {  context.getFailureDescription().set(e.getLocalizedMessage());} @AT@ 5955 @LENGTH@ 501
---DEL VariableDeclarationStatement@@final ModelNode camelCase=ModelNode.fromJSONString(json); @AT@ 6032 @LENGTH@ 59
------DEL Modifier@@final @AT@ 6032 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 6038 @LENGTH@ 9
------DEL VariableDeclarationFragment@@camelCase=ModelNode.fromJSONString(json) @AT@ 6048 @LENGTH@ 42
---------DEL SimpleName@@camelCase @AT@ 6048 @LENGTH@ 9
---------DEL MethodInvocation@@ModelNode.fromJSONString(json) @AT@ 6060 @LENGTH@ 30
------------DEL SimpleName@@Name:ModelNode @AT@ 6060 @LENGTH@ 9
------------DEL SimpleName@@MethodName:fromJSONString:[json] @AT@ 6070 @LENGTH@ 20
---------------DEL SimpleName@@json @AT@ 6085 @LENGTH@ 4
---DEL VariableDeclarationStatement@@final ModelNode converted=CamelCaseUtil.convertSecurityRole(camelCase); @AT@ 6104 @LENGTH@ 73
------DEL Modifier@@final @AT@ 6104 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 6110 @LENGTH@ 9
------DEL VariableDeclarationFragment@@converted=CamelCaseUtil.convertSecurityRole(camelCase) @AT@ 6120 @LENGTH@ 56
---------DEL SimpleName@@converted @AT@ 6120 @LENGTH@ 9
---------DEL MethodInvocation@@CamelCaseUtil.convertSecurityRole(camelCase) @AT@ 6132 @LENGTH@ 44
------------DEL SimpleName@@Name:CamelCaseUtil @AT@ 6132 @LENGTH@ 13
------------DEL SimpleName@@MethodName:convertSecurityRole:[camelCase] @AT@ 6146 @LENGTH@ 30
---------------DEL SimpleName@@camelCase @AT@ 6166 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:context.getResult().set(converted.toJSONString(true)) @TO@ MethodInvocation:reportRolesAsJSON(context,json) @AT@ 6190 @LENGTH@ 54
------UPD MethodInvocation@@context.getResult().set(converted.toJSONString(true)) @TO@ reportRolesAsJSON(context,json) @AT@ 6190 @LENGTH@ 53
---------DEL MethodInvocation@@MethodName:getResult:[] @AT@ 6190 @LENGTH@ 19
---------DEL SimpleName@@Name:context @AT@ 6190 @LENGTH@ 7
---------UPD SimpleName@@MethodName:set:[converted.toJSONString(true)] @TO@ MethodName:reportRolesAsJSON:[context, json] @AT@ 6210 @LENGTH@ 33
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:set:[converted.toJSONString(true)] @AT@ 5892 @LENGTH@ 7
------------INS SimpleName@@json @TO@ SimpleName@@MethodName:set:[converted.toJSONString(true)] @AT@ 5901 @LENGTH@ 4
------------DEL MethodInvocation@@converted.toJSONString(true) @AT@ 6214 @LENGTH@ 28
---------------DEL SimpleName@@Name:converted @AT@ 6214 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:toJSONString:[true] @AT@ 6224 @LENGTH@ 18
------------------DEL BooleanLiteral@@true @AT@ 6237 @LENGTH@ 4


UPD IfStatement@@if (ROOT_LOGGER.isDebugEnabled()) {  long elapsed=System.currentTimeMillis() - start;  ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @TO@ if (MGMT_OP_LOGGER.isDebugEnabled()) {  long elapsed=System.currentTimeMillis() - start;  MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @AT@ 4541 @LENGTH@ 210
---UPD MethodInvocation@@ROOT_LOGGER.isDebugEnabled() @TO@ MGMT_OP_LOGGER.isDebugEnabled() @AT@ 4545 @LENGTH@ 28
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 4545 @LENGTH@ 11
---UPD Block@@ThenBody:{  long elapsed=System.currentTimeMillis() - start;  ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @TO@ ThenBody:{  long elapsed=System.currentTimeMillis() - start;  MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed);} @AT@ 4575 @LENGTH@ 176
------UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @TO@ MethodInvocation:MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @AT@ 4668 @LENGTH@ 65
---------UPD MethodInvocation@@ROOT_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @TO@ MGMT_OP_LOGGER.debugf("Initialized extensions in [%d] ms",elapsed) @AT@ 4668 @LENGTH@ 64
------------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 4668 @LENGTH@ 11


MOV ExpressionStatement@@MethodInvocation:Assert.assertTrue(warFile.delete()) @TO@ MethodDeclaration@@public, static, void, MethodName:after, Exception,  @AT@ 2872 @LENGTH@ 36


UPD TypeDeclaration@@[public, static]MyProducerFailEndpoint, DefaultEndpoint @TO@ [public, static, final]MyProducerFailEndpoint, DefaultEndpoint @AT@ 2149 @LENGTH@ 781
---INS Modifier@@final @TO@ TypeDeclaration@@[public, static]MyProducerFailEndpoint, DefaultEndpoint @AT@ 2163 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new ErrorState(null,MESSAGES.invalidConfirmationResponse(),this) @TO@ ClassInstanceCreation:new ErrorState(theConsole,MESSAGES.invalidConfirmationResponse(),this) @AT@ 2674 @LENGTH@ 74
---UPD ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidConfirmationResponse(), this] @TO@ ErrorState[theConsole, MESSAGES.invalidConfirmationResponse(), this] @AT@ 2681 @LENGTH@ 66
------DEL NullLiteral@@null @AT@ 2696 @LENGTH@ 4
------INS SimpleName@@theConsole @TO@ ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidConfirmationResponse(), this] @AT@ 2802 @LENGTH@ 10


DEL MethodDeclaration@@public, AuthorizationRequest, MethodName:getClientToken, @RequestParam Map<String,String> parameters,  @AT@ 4290 @LENGTH@ 208
---DEL Modifier@@public @AT@ 4290 @LENGTH@ 6
---DEL SimpleType@@AuthorizationRequest @AT@ 4297 @LENGTH@ 20
---DEL SimpleName@@MethodName:getClientToken @AT@ 4318 @LENGTH@ 14
---DEL ReturnStatement@@SimpleName:authorizationRequest @AT@ 4467 @LENGTH@ 28
------DEL SimpleName@@authorizationRequest @AT@ 4474 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER),new SimpleSingletonElectionPolicy())) @TO@ MethodInvocation:singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE),new SimpleSingletonElectionPolicy())) @AT@ 1295 @LENGTH@ 182
---UPD MethodInvocation@@singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER),new SimpleSingletonElectionPolicy())) @TO@ singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE),new SimpleSingletonElectionPolicy())) @AT@ 1295 @LENGTH@ 181
------UPD SimpleName@@MethodName:setElectionPolicy:[new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER),new SimpleSingletonElectionPolicy())] @TO@ MethodName:setElectionPolicy:[new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE),new SimpleSingletonElectionPolicy())] @AT@ 1305 @LENGTH@ 171
---------UPD ClassInstanceCreation@@PreferredSingletonElectionPolicy[new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER), new SimpleSingletonElectionPolicy()] @TO@ PreferredSingletonElectionPolicy[new NamePreference(PREFERRED_NODE), new SimpleSingletonElectionPolicy()] @AT@ 1323 @LENGTH@ 152
------------UPD ClassInstanceCreation@@NamePreference[PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER] @TO@ NamePreference[PREFERRED_NODE] @AT@ 1360 @LENGTH@ 77
---------------DEL InfixExpression@@PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER @AT@ 1379 @LENGTH@ 57
------------------DEL SimpleName@@PREFERRED_NODE @AT@ 1379 @LENGTH@ 14
------------------DEL Operator@@+ @AT@ 1393 @LENGTH@ 1
------------------DEL StringLiteral@@"/" @AT@ 1396 @LENGTH@ 3
------------------DEL QualifiedName@@SingletonService.DEFAULT_CONTAINER @AT@ 1402 @LENGTH@ 34
---------------------DEL SimpleName@@SingletonService @AT@ 1402 @LENGTH@ 16
---------------------DEL SimpleName@@DEFAULT_CONTAINER @AT@ 1419 @LENGTH@ 17
---------------INS SimpleName@@PREFERRED_NODE @TO@ ClassInstanceCreation@@NamePreference[PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER] @AT@ 1379 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:ctx.enterState(props) @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 3094 @LENGTH@ 22
---INS MethodInvocation@@ctx.enterState(props) @TO@ ExpressionStatement@@MethodInvocation:ctx.enterState(props) @AT@ 3094 @LENGTH@ 21
------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.enterState(props) @AT@ 3094 @LENGTH@ 3
------INS SimpleName@@MethodName:enterState:[props] @TO@ MethodInvocation@@ctx.enterState(props) @AT@ 3098 @LENGTH@ 17
---------INS SimpleName@@props @TO@ SimpleName@@MethodName:enterState:[props] @AT@ 3109 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @TO@ TypeDeclaration@@[@DirtiesContext, @ContextConfiguration(value="classpath:eclipselink.xml",inheritLocations=true), public]EclipseLinkNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 1282 @LENGTH@ 38
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 1282 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 1289 @LENGTH@ 4
---INS SimpleName@@MethodName:findsAllByGivenIds @TO@ MethodDeclaration@@public, void, MethodName:findsAllByGivenIds,  @AT@ 1294 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.REF,server.get(SOCKET_BINDING_GROUP).asString()) @TO@ MethodInvocation:writeAttribute(writer,Attribute.SOCKET_BINDING_GROUP,server.get(SOCKET_BINDING_GROUP).asString()) @AT@ 49040 @LENGTH@ 83
---UPD MethodInvocation@@writeAttribute(writer,Attribute.REF,server.get(SOCKET_BINDING_GROUP).asString()) @TO@ writeAttribute(writer,Attribute.SOCKET_BINDING_GROUP,server.get(SOCKET_BINDING_GROUP).asString()) @AT@ 49040 @LENGTH@ 82
------UPD SimpleName@@MethodName:writeAttribute:[writer, Attribute.REF, server.get(SOCKET_BINDING_GROUP).asString()] @TO@ MethodName:writeAttribute:[writer, Attribute.SOCKET_BINDING_GROUP, server.get(SOCKET_BINDING_GROUP).asString()] @AT@ 49040 @LENGTH@ 82
---------UPD QualifiedName@@Attribute.REF @TO@ Attribute.SOCKET_BINDING_GROUP @AT@ 49063 @LENGTH@ 13
------------UPD SimpleName@@REF @TO@ SOCKET_BINDING_GROUP @AT@ 49073 @LENGTH@ 3


INS ExpressionStatement@@ClassInstanceCreation:new ArgumentWithValue(this,0,"--current") @TO@ MethodDeclaration@@public, voidMethodName:BatchMoveLineHandler,  @AT@ 1616 @LENGTH@ 44
---INS ClassInstanceCreation@@ArgumentWithValue[this, 0, "--current"] @TO@ ExpressionStatement@@ClassInstanceCreation:new ArgumentWithValue(this,0,"--current") @AT@ 1616 @LENGTH@ 43
------INS New@@new @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--current"] @AT@ 1616 @LENGTH@ 3
------INS SimpleType@@ArgumentWithValue @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--current"] @AT@ 1620 @LENGTH@ 17
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--current"] @AT@ 1638 @LENGTH@ 4
------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--current"] @AT@ 1644 @LENGTH@ 1
------INS StringLiteral@@"--current" @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 0, "--current"] @AT@ 1647 @LENGTH@ 11


INS MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @TO@ TypeDeclaration@@[public]HttpEndpoint, DefaultPollingEndpoint[HeaderFilterStrategyAware] @AT@ 3006 @LENGTH@ 336
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3006 @LENGTH@ 6
---INS SimpleName@@MethodName:HttpEndpoint @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3013 @LENGTH@ 12
---INS SingleVariableDeclaration@@String endPointURI @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3026 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String endPointURI @AT@ 3026 @LENGTH@ 6
------INS SimpleName@@endPointURI @TO@ SingleVariableDeclaration@@String endPointURI @AT@ 3033 @LENGTH@ 11
---INS SingleVariableDeclaration@@HttpComponent component @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3046 @LENGTH@ 23
------INS SimpleType@@HttpComponent @TO@ SingleVariableDeclaration@@HttpComponent component @AT@ 3046 @LENGTH@ 13
------INS SimpleName@@component @TO@ SingleVariableDeclaration@@HttpComponent component @AT@ 3060 @LENGTH@ 9
---INS SingleVariableDeclaration@@HttpParams clientParams @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3071 @LENGTH@ 23
------INS SimpleType@@HttpParams @TO@ SingleVariableDeclaration@@HttpParams clientParams @AT@ 3071 @LENGTH@ 10
------INS SimpleName@@clientParams @TO@ SingleVariableDeclaration@@HttpParams clientParams @AT@ 3082 @LENGTH@ 12
---INS SingleVariableDeclaration@@ClientConnectionManager clientConnectionManager @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3120 @LENGTH@ 47
------INS SimpleType@@ClientConnectionManager @TO@ SingleVariableDeclaration@@ClientConnectionManager clientConnectionManager @AT@ 3120 @LENGTH@ 23
------INS SimpleName@@clientConnectionManager @TO@ SingleVariableDeclaration@@ClientConnectionManager clientConnectionManager @AT@ 3144 @LENGTH@ 23
---INS SingleVariableDeclaration@@HttpClientConfigurer clientConfigurer @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3169 @LENGTH@ 37
------INS SimpleType@@HttpClientConfigurer @TO@ SingleVariableDeclaration@@HttpClientConfigurer clientConfigurer @AT@ 3169 @LENGTH@ 20
------INS SimpleName@@clientConfigurer @TO@ SingleVariableDeclaration@@HttpClientConfigurer clientConfigurer @AT@ 3190 @LENGTH@ 16
---INS SimpleType@@URISyntaxException @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3215 @LENGTH@ 18
---INS ConstructorInvocation@@this(endPointURI,component,null,clientParams,clientConnectionManager,clientConfigurer); @TO@ MethodDeclaration@@public, voidMethodName:HttpEndpoint, String endPointURI, HttpComponent component, HttpParams clientParams, ClientConnectionManager clientConnectionManager, HttpClientConfigurer clientConfigurer, URISyntaxException,  @AT@ 3244 @LENGTH@ 92
------INS SimpleName@@endPointURI @TO@ ConstructorInvocation@@this(endPointURI,component,null,clientParams,clientConnectionManager,clientConfigurer); @AT@ 3249 @LENGTH@ 11
------INS SimpleName@@component @TO@ ConstructorInvocation@@this(endPointURI,component,null,clientParams,clientConnectionManager,clientConfigurer); @AT@ 3262 @LENGTH@ 9
------INS NullLiteral@@null @TO@ ConstructorInvocation@@this(endPointURI,component,null,clientParams,clientConnectionManager,clientConfigurer); @AT@ 3273 @LENGTH@ 4
------INS SimpleName@@clientParams @TO@ ConstructorInvocation@@this(endPointURI,component,null,clientParams,clientConnectionManager,clientConfigurer); @AT@ 3279 @LENGTH@ 12
------INS SimpleName@@clientConnectionManager @TO@ ConstructorInvocation@@this(endPointURI,component,null,clientParams,clientConnectionManager,clientConfigurer); @AT@ 3293 @LENGTH@ 23
------INS SimpleName@@clientConfigurer @TO@ ConstructorInvocation@@this(endPointURI,component,null,clientParams,clientConnectionManager,clientConfigurer); @AT@ 3318 @LENGTH@ 16


UPD MethodDeclaration@@public, BackingCacheEntryStore<K,V,E>, E extends SerializationGroupMember<K,V,G>, MethodName:createIntegratedObjectStore, String beanName, PassivationManager<K,E> passivationManager, StatefulTimeoutInfo timeout,  @TO@ public, BackingCacheEntryStore<K,V,E>, E extends SerializationGroupMember<K,V,G>, MethodName:createIntegratedObjectStore, String beanName, IdentifierFactory<K> identifierFactory, PassivationManager<K,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 4215 @LENGTH@ 607
---INS SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @TO@ MethodDeclaration@@public, BackingCacheEntryStore<K,V,E>, E extends SerializationGroupMember<K,V,G>, MethodName:createIntegratedObjectStore, String beanName, PassivationManager<K,E> passivationManager, StatefulTimeoutInfo timeout,  @AT@ 4454 @LENGTH@ 38
------INS ParameterizedType@@IdentifierFactory<K> @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 4454 @LENGTH@ 20
---------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 4454 @LENGTH@ 17
---------INS SimpleType@@K @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 4472 @LENGTH@ 1
------INS SimpleName@@identifierFactory @TO@ SingleVariableDeclaration@@IdentifierFactory<K> identifierFactory @AT@ 4475 @LENGTH@ 17
---UPD VariableDeclarationStatement@@SimpleBackingCacheEntryStore<K,V,E> store=new SimpleBackingCacheEntryStore<K,V,E>(objectStore,this.environment.getValue(),timeout,this); @TO@ SimpleBackingCacheEntryStore<K,V,E> store=new SimpleBackingCacheEntryStore<K,V,E>(identifierFactory,objectStore,this.environment.getValue(),timeout,this); @AT@ 4648 @LENGTH@ 145
------UPD VariableDeclarationFragment@@store=new SimpleBackingCacheEntryStore<K,V,E>(objectStore,this.environment.getValue(),timeout,this) @TO@ store=new SimpleBackingCacheEntryStore<K,V,E>(identifierFactory,objectStore,this.environment.getValue(),timeout,this) @AT@ 4686 @LENGTH@ 106
---------UPD ClassInstanceCreation@@SimpleBackingCacheEntryStore<K,V,E>[objectStore, this.environment.getValue(), timeout, this] @TO@ SimpleBackingCacheEntryStore<K,V,E>[identifierFactory, objectStore, this.environment.getValue(), timeout, this] @AT@ 4694 @LENGTH@ 98
------------INS SimpleName@@identifierFactory @TO@ ClassInstanceCreation@@SimpleBackingCacheEntryStore<K,V,E>[objectStore, this.environment.getValue(), timeout, this] @AT@ 4885 @LENGTH@ 17


UPD VariableDeclarationStatement@@Pattern pattern=Pattern.compile("[A-Z]?[a-z]*$"); @TO@ Pattern pattern=Pattern.compile("[A-Z]+[a-z]*$"); @AT@ 8361 @LENGTH@ 51
---UPD VariableDeclarationFragment@@pattern=Pattern.compile("[A-Z]?[a-z]*$") @TO@ pattern=Pattern.compile("[A-Z]+[a-z]*$") @AT@ 8369 @LENGTH@ 42
------UPD MethodInvocation@@Pattern.compile("[A-Z]?[a-z]*$") @TO@ Pattern.compile("[A-Z]+[a-z]*$") @AT@ 8379 @LENGTH@ 32
---------UPD SimpleName@@MethodName:compile:["[A-Z]?[a-z]*$"] @TO@ MethodName:compile:["[A-Z]+[a-z]*$"] @AT@ 8387 @LENGTH@ 24
------------UPD StringLiteral@@"[A-Z]?[a-z]*$" @TO@ "[A-Z]+[a-z]*$" @AT@ 8395 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @TO@ MethodDeclaration@@voidMethodName:ServerGroupSeparatorState, ServerGroupState sg,  @AT@ 1666 @LENGTH@ 27
---INS MethodInvocation@@setIgnoreWhitespaces(true) @TO@ ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @AT@ 1666 @LENGTH@ 26
------INS SimpleName@@MethodName:setIgnoreWhitespaces:[true] @TO@ MethodInvocation@@setIgnoreWhitespaces(true) @AT@ 1666 @LENGTH@ 26
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setIgnoreWhitespaces:[true] @AT@ 1687 @LENGTH@ 4


DEL MethodDeclaration@@public, ModelControllerClient, MethodName:getModelControllerClient,  @AT@ 2124 @LENGTH@ 56
---DEL Modifier@@public @AT@ 2124 @LENGTH@ 6
---DEL SimpleType@@ModelControllerClient @AT@ 2131 @LENGTH@ 21
---DEL SimpleName@@MethodName:getModelControllerClient @AT@ 2153 @LENGTH@ 24


INS MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @TO@ TypeDeclaration@@[public]ZooKeeperUtils,  @AT@ 4054 @LENGTH@ 536
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4054 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4061 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4068 @LENGTH@ 4
---INS SimpleName@@MethodName:set @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4073 @LENGTH@ 3
---INS SingleVariableDeclaration@@IZKClient zooKeeper @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4077 @LENGTH@ 19
------INS SimpleType@@IZKClient @TO@ SingleVariableDeclaration@@IZKClient zooKeeper @AT@ 4077 @LENGTH@ 9
------INS SimpleName@@zooKeeper @TO@ SingleVariableDeclaration@@IZKClient zooKeeper @AT@ 4087 @LENGTH@ 9
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4098 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 4098 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 4105 @LENGTH@ 4
---INS SingleVariableDeclaration@@byte[] value @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4111 @LENGTH@ 12
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] value @AT@ 4111 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4111 @LENGTH@ 4
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@byte[] value @AT@ 4118 @LENGTH@ 5
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4132 @LENGTH@ 20
---INS SimpleType@@KeeperException @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4154 @LENGTH@ 15
---INS IfStatement@@if (zooKeeper.exists(path) != null) {  zooKeeper.setByteData(path,value);} @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4180 @LENGTH@ 94
------INS InfixExpression@@zooKeeper.exists(path) != null @TO@ IfStatement@@if (zooKeeper.exists(path) != null) {  zooKeeper.setByteData(path,value);} @AT@ 4183 @LENGTH@ 30
---------INS MethodInvocation@@zooKeeper.exists(path) @TO@ InfixExpression@@zooKeeper.exists(path) != null @AT@ 4183 @LENGTH@ 22
------------INS SimpleName@@Name:zooKeeper @TO@ MethodInvocation@@zooKeeper.exists(path) @AT@ 4183 @LENGTH@ 9
------------INS SimpleName@@MethodName:exists:[path] @TO@ MethodInvocation@@zooKeeper.exists(path) @AT@ 4193 @LENGTH@ 12
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:exists:[path] @AT@ 4200 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@zooKeeper.exists(path) != null @AT@ 4205 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@zooKeeper.exists(path) != null @AT@ 4209 @LENGTH@ 4
------INS Block@@ThenBody:{  zooKeeper.setByteData(path,value);} @TO@ IfStatement@@if (zooKeeper.exists(path) != null) {  zooKeeper.setByteData(path,value);} @AT@ 4215 @LENGTH@ 59
---------INS ExpressionStatement@@MethodInvocation:zooKeeper.setByteData(path,value) @TO@ Block@@ThenBody:{  zooKeeper.setByteData(path,value);} @AT@ 4229 @LENGTH@ 35
------------INS MethodInvocation@@zooKeeper.setByteData(path,value) @TO@ ExpressionStatement@@MethodInvocation:zooKeeper.setByteData(path,value) @AT@ 4229 @LENGTH@ 34
---------------INS SimpleName@@Name:zooKeeper @TO@ MethodInvocation@@zooKeeper.setByteData(path,value) @AT@ 4229 @LENGTH@ 9
---------------INS SimpleName@@MethodName:setByteData:[path, value] @TO@ MethodInvocation@@zooKeeper.setByteData(path,value) @AT@ 4239 @LENGTH@ 24
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:setByteData:[path, value] @AT@ 4251 @LENGTH@ 4
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setByteData:[path, value] @AT@ 4257 @LENGTH@ 5
---INS TryStatement@@try {  zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} catch (KeeperException.NodeExistsException e) {  zooKeeper.setByteData(path,value);} @TO@ MethodDeclaration@@public, static, void, MethodName:set, IZKClient zooKeeper, String path, byte[] value, InterruptedException, KeeperException,  @AT@ 4283 @LENGTH@ 301
------INS ExpressionStatement@@MethodInvocation:zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @TO@ TryStatement@@try {  zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} catch (KeeperException.NodeExistsException e) {  zooKeeper.setByteData(path,value);} @AT@ 4301 @LENGTH@ 102
---------INS MethodInvocation@@zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @TO@ ExpressionStatement@@MethodInvocation:zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @AT@ 4301 @LENGTH@ 101
------------INS SimpleName@@Name:zooKeeper @TO@ MethodInvocation@@zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @AT@ 4301 @LENGTH@ 9
------------INS SimpleName@@MethodName:createBytesNodeWithParents:[path, value, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @TO@ MethodInvocation@@zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT) @AT@ 4311 @LENGTH@ 91
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:createBytesNodeWithParents:[path, value, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @AT@ 4338 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:createBytesNodeWithParents:[path, value, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @AT@ 4344 @LENGTH@ 5
---------------INS QualifiedName@@ZooDefs.Ids.OPEN_ACL_UNSAFE @TO@ SimpleName@@MethodName:createBytesNodeWithParents:[path, value, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @AT@ 4351 @LENGTH@ 27
------------------INS QualifiedName@@ZooDefs.Ids @TO@ QualifiedName@@ZooDefs.Ids.OPEN_ACL_UNSAFE @AT@ 4351 @LENGTH@ 11
---------------------INS SimpleName@@ZooDefs @TO@ QualifiedName@@ZooDefs.Ids @AT@ 4351 @LENGTH@ 7
---------------------INS SimpleName@@Ids @TO@ QualifiedName@@ZooDefs.Ids @AT@ 4359 @LENGTH@ 3
------------------INS SimpleName@@OPEN_ACL_UNSAFE @TO@ QualifiedName@@ZooDefs.Ids.OPEN_ACL_UNSAFE @AT@ 4363 @LENGTH@ 15
---------------INS QualifiedName@@CreateMode.PERSISTENT @TO@ SimpleName@@MethodName:createBytesNodeWithParents:[path, value, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT] @AT@ 4380 @LENGTH@ 21
------------------INS SimpleName@@CreateMode @TO@ QualifiedName@@CreateMode.PERSISTENT @AT@ 4380 @LENGTH@ 10
------------------INS SimpleName@@PERSISTENT @TO@ QualifiedName@@CreateMode.PERSISTENT @AT@ 4391 @LENGTH@ 10
------INS CatchClause@@catch (KeeperException.NodeExistsException e) {  zooKeeper.setByteData(path,value);} @TO@ TryStatement@@try {  zooKeeper.createBytesNodeWithParents(path,value,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);} catch (KeeperException.NodeExistsException e) {  zooKeeper.setByteData(path,value);} @AT@ 4414 @LENGTH@ 170
---------INS SingleVariableDeclaration@@KeeperException.NodeExistsException e @TO@ CatchClause@@catch (KeeperException.NodeExistsException e) {  zooKeeper.setByteData(path,value);} @AT@ 4420 @LENGTH@ 37
------------INS SimpleType@@KeeperException.NodeExistsException @TO@ SingleVariableDeclaration@@KeeperException.NodeExistsException e @AT@ 4420 @LENGTH@ 35
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@KeeperException.NodeExistsException e @AT@ 4456 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:zooKeeper.setByteData(path,value) @TO@ CatchClause@@catch (KeeperException.NodeExistsException e) {  zooKeeper.setByteData(path,value);} @AT@ 4539 @LENGTH@ 35
------------INS MethodInvocation@@zooKeeper.setByteData(path,value) @TO@ ExpressionStatement@@MethodInvocation:zooKeeper.setByteData(path,value) @AT@ 4539 @LENGTH@ 34
---------------INS SimpleName@@Name:zooKeeper @TO@ MethodInvocation@@zooKeeper.setByteData(path,value) @AT@ 4539 @LENGTH@ 9
---------------INS SimpleName@@MethodName:setByteData:[path, value] @TO@ MethodInvocation@@zooKeeper.setByteData(path,value) @AT@ 4549 @LENGTH@ 24
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:setByteData:[path, value] @AT@ 4561 @LENGTH@ 4
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setByteData:[path, value] @AT@ 4567 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2661 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2661 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2669 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2676 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2682 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2687 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 2687 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 2706 @LENGTH@ 2


UPD CatchClause@@catch (Exception ex) {  if (component.getApplicationException(ex.getClass(),context.getMethod()) != null) {    throw ex;  }  if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {    throw ex;  }  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    if (ROOT_LOGGER.isTraceEnabled())     ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);    component.getCache().discard(sessionId);  }  throw ex;} @TO@ catch (Exception ex) {  if (component.getApplicationException(ex.getClass(),context.getMethod()) != null) {    throw ex;  }  if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {    throw ex;  }  if (!(ex instanceof RemoveException)) {    if (ex instanceof RuntimeException || ex instanceof RemoteException) {      if (ROOT_LOGGER.isTraceEnabled())       ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);      component.getCache().discard(sessionId);    }  }  throw ex;} @AT@ 3190 @LENGTH@ 749
---INS IfStatement@@if (!(ex instanceof RemoveException)) {  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    if (ROOT_LOGGER.isTraceEnabled())     ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);    component.getCache().discard(sessionId);  }} @TO@ CatchClause@@catch (Exception ex) {  if (component.getApplicationException(ex.getClass(),context.getMethod()) != null) {    throw ex;  }  if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {    throw ex;  }  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    if (ROOT_LOGGER.isTraceEnabled())     ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);    component.getCache().discard(sessionId);  }  throw ex;} @AT@ 3653 @LENGTH@ 376
------INS PrefixExpression@@!(ex instanceof RemoveException) @TO@ IfStatement@@if (!(ex instanceof RemoveException)) {  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    if (ROOT_LOGGER.isTraceEnabled())     ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);    component.getCache().discard(sessionId);  }} @AT@ 3657 @LENGTH@ 32
---------INS Operator@@! @TO@ PrefixExpression@@!(ex instanceof RemoveException) @AT@ 3657 @LENGTH@ 1
---------INS ParenthesizedExpression@@(ex instanceof RemoveException) @TO@ PrefixExpression@@!(ex instanceof RemoveException) @AT@ 3658 @LENGTH@ 31
------------INS InstanceofExpression@@ex instanceof RemoveException @TO@ ParenthesizedExpression@@(ex instanceof RemoveException) @AT@ 3659 @LENGTH@ 29
---------------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RemoveException @AT@ 3659 @LENGTH@ 2
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RemoveException @AT@ 3662 @LENGTH@ 10
---------------INS SimpleType@@RemoveException @TO@ InstanceofExpression@@ex instanceof RemoveException @AT@ 3673 @LENGTH@ 15
------INS Block@@ThenBody:{  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    if (ROOT_LOGGER.isTraceEnabled())     ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);    component.getCache().discard(sessionId);  }} @TO@ IfStatement@@if (!(ex instanceof RemoveException)) {  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    if (ROOT_LOGGER.isTraceEnabled())     ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);    component.getCache().discard(sessionId);  }} @AT@ 3691 @LENGTH@ 338
---------MOV IfStatement@@if (ex instanceof RuntimeException || ex instanceof RemoteException) {  if (ROOT_LOGGER.isTraceEnabled())   ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);  component.getCache().discard(sessionId);} @TO@ Block@@ThenBody:{  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    if (ROOT_LOGGER.isTraceEnabled())     ROOT_LOGGER.trace("Removing bean " + sessionId + " because of exception",ex);    component.getCache().discard(sessionId);  }} @AT@ 3617 @LENGTH@ 290


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.reloadRequired() @AT@ 2324 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.reloadRequired() @AT@ 2324 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:reloadRequired:[] @AT@ 2332 @LENGTH@ 14


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PropertyFilePrompt, ConsoleWrapper theConsole,  @AT@ 1921 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1925 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1925 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1925 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1936 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1948 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1952 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1958 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 1972 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 1978 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1978 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1987 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:getAttachments() @TO@ MethodDeclaration@@public, MailMessage, MethodName:copy,  @AT@ 2369 @LENGTH@ 17
---INS MethodInvocation@@MethodName:getAttachments:[] @TO@ ExpressionStatement@@MethodInvocation:getAttachments() @AT@ 2369 @LENGTH@ 16


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]AsyncProcessorTypeConverter, [TypeConverter] @AT@ 2545 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2545 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2556 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2558 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2571 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2571 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2571 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2577 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2580 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2586 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2586 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2593 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2610 @LENGTH@ 121
------INS ReturnStatement@@MethodInvocation:convertTo(type,null,value) @TO@ TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @AT@ 2628 @LENGTH@ 36
---------INS MethodInvocation@@convertTo(type,null,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,null,value) @AT@ 2635 @LENGTH@ 28
------------INS SimpleName@@MethodName:convertTo:[type, null, value] @TO@ MethodInvocation@@convertTo(type,null,value) @AT@ 2635 @LENGTH@ 28
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2645 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2651 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, null, value] @AT@ 2657 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,null,value);} catch (Exception e) {  return null;} @AT@ 2675 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2682 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2682 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2692 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2709 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2716 @LENGTH@ 4


MOV MethodDeclaration@@String, MethodName:handlerAttachedToLoggers, String handlerName, Collection<String> loggers,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]LoggingMessages,  @AT@ 5625 @LENGTH@ 73


UPD EnhancedForStatement@@for (CreateContainerMetadata metadata : createMetadata) {  createContainerConfig(parent,metadata.getContainerName());  containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);  containers[container++].setCreateContainerMetadata(metadata);} @TO@ for (CreateContainerMetadata metadata : createMetadata) {  if (!options.isEnsembleServer()) {    createContainerConfig(parent,metadata.getContainerName());  }  containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);  containers[container++].setCreateContainerMetadata(metadata);} @AT@ 8571 @LENGTH@ 353
---INS IfStatement@@if (!options.isEnsembleServer()) {  createContainerConfig(parent,metadata.getContainerName());} @TO@ EnhancedForStatement@@for (CreateContainerMetadata metadata : createMetadata) {  createContainerConfig(parent,metadata.getContainerName());  containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);  containers[container++].setCreateContainerMetadata(metadata);} @AT@ 8822 @LENGTH@ 132
------INS PrefixExpression@@!options.isEnsembleServer() @TO@ IfStatement@@if (!options.isEnsembleServer()) {  createContainerConfig(parent,metadata.getContainerName());} @AT@ 8826 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!options.isEnsembleServer() @AT@ 8826 @LENGTH@ 1
---------INS MethodInvocation@@options.isEnsembleServer() @TO@ PrefixExpression@@!options.isEnsembleServer() @AT@ 8827 @LENGTH@ 26
------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 8827 @LENGTH@ 7
------------INS SimpleName@@MethodName:isEnsembleServer:[] @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 8835 @LENGTH@ 18
------INS Block@@ThenBody:{  createContainerConfig(parent,metadata.getContainerName());} @TO@ IfStatement@@if (!options.isEnsembleServer()) {  createContainerConfig(parent,metadata.getContainerName());} @AT@ 8855 @LENGTH@ 99
---------MOV ExpressionStatement@@MethodInvocation:createContainerConfig(parent,metadata.getContainerName()) @TO@ Block@@ThenBody:{  createContainerConfig(parent,metadata.getContainerName());} @AT@ 8644 @LENGTH@ 59


INS MethodDeclaration@@public, void, MethodName:remove,  @TO@ TypeDeclaration@@[@Stateful, @Remote(RemoteCounter.class), public]DDBasedClusteredSFSB, [RemoteCounter] @AT@ 1923 @LENGTH@ 29
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:remove,  @AT@ 1923 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:remove,  @AT@ 1930 @LENGTH@ 4
---INS SimpleName@@MethodName:remove @TO@ MethodDeclaration@@public, void, MethodName:remove,  @AT@ 1935 @LENGTH@ 6


UPD VariableDeclarationStatement@@List<Object> content=total > pageable.getOffset() ? query.getResultList() : Collections.emptyList(); @TO@ List<Object> content=pageable == null || total > pageable.getOffset() ? query.getResultList() : Collections.emptyList(); @AT@ 3385 @LENGTH@ 102
---UPD VariableDeclarationFragment@@content=total > pageable.getOffset() ? query.getResultList() : Collections.emptyList() @TO@ content=pageable == null || total > pageable.getOffset() ? query.getResultList() : Collections.emptyList() @AT@ 3398 @LENGTH@ 88
------UPD ConditionalExpression@@total > pageable.getOffset() ? query.getResultList() : Collections.emptyList() @TO@ pageable == null || total > pageable.getOffset() ? query.getResultList() : Collections.emptyList() @AT@ 3408 @LENGTH@ 78
---------INS InfixExpression@@pageable == null || total > pageable.getOffset() @TO@ ConditionalExpression@@total > pageable.getOffset() ? query.getResultList() : Collections.emptyList() @AT@ 3408 @LENGTH@ 48
------------MOV InfixExpression@@total > pageable.getOffset() @TO@ InfixExpression@@pageable == null || total > pageable.getOffset() @AT@ 3408 @LENGTH@ 28
------------INS InfixExpression@@pageable == null @TO@ InfixExpression@@pageable == null || total > pageable.getOffset() @AT@ 3408 @LENGTH@ 16
---------------INS SimpleName@@pageable @TO@ InfixExpression@@pageable == null @AT@ 3408 @LENGTH@ 8
---------------INS Operator@@== @TO@ InfixExpression@@pageable == null @AT@ 3416 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@pageable == null @AT@ 3420 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@pageable == null || total > pageable.getOffset() @AT@ 3424 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:testReadResourceResources, IOException,  @TO@ public, void, MethodName:testReadResourceResources, IOException, MgmtOperationException,  @AT@ 4010 @LENGTH@ 1032
---INS SimpleType@@MgmtOperationException @TO@ MethodDeclaration@@public, void, MethodName:testReadResourceResources, IOException,  @AT@ 4171 @LENGTH@ 22


INS TryStatement@@try {  return instance.getPrimaryKey();}  finally {  instance.getComponent().getCache().release(instance,true);} @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, final InterceptorContext context, Exception,  @AT@ 1907 @LENGTH@ 168
---MOV ReturnStatement@@MethodInvocation:instance.getPrimaryKey() @TO@ TryStatement@@try {  return instance.getPrimaryKey();}  finally {  instance.getComponent().getCache().release(instance,true);} @AT@ 1907 @LENGTH@ 32
---INS Block@@FinallyBody:{  instance.getComponent().getCache().release(instance,true);} @TO@ TryStatement@@try {  return instance.getPrimaryKey();}  finally {  instance.getComponent().getCache().release(instance,true);} @AT@ 1984 @LENGTH@ 91
------INS ExpressionStatement@@MethodInvocation:instance.getComponent().getCache().release(instance,true) @TO@ Block@@FinallyBody:{  instance.getComponent().getCache().release(instance,true);} @AT@ 2002 @LENGTH@ 59
---------INS MethodInvocation@@instance.getComponent().getCache().release(instance,true) @TO@ ExpressionStatement@@MethodInvocation:instance.getComponent().getCache().release(instance,true) @AT@ 2002 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:getCache:[] @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 2002 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 2002 @LENGTH@ 23
------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 2002 @LENGTH@ 8
------------INS SimpleName@@MethodName:release:[instance, true] @TO@ MethodInvocation@@instance.getComponent().getCache().release(instance,true) @AT@ 2037 @LENGTH@ 23
---------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 2045 @LENGTH@ 8
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 2055 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:ExchangeHelper.createCorrelatedCopy(exchange,false) @TO@ MethodInvocation:ExchangeHelper.createCopy(exchange,true) @AT@ 6178 @LENGTH@ 60
---UPD MethodInvocation@@ExchangeHelper.createCorrelatedCopy(exchange,false) @TO@ ExchangeHelper.createCopy(exchange,true) @AT@ 6185 @LENGTH@ 52
------UPD SimpleName@@MethodName:createCorrelatedCopy:[exchange, false] @TO@ MethodName:createCopy:[exchange, true] @AT@ 6200 @LENGTH@ 37
---------UPD BooleanLiteral@@false @TO@ true @AT@ 6231 @LENGTH@ 5


UPD MethodDeclaration@@public, List<ProcessorDefinition>, MethodName:getOutputs,  @TO@ public, List<ProcessorDefinition<?>>, MethodName:getOutputs,  @AT@ 3202 @LENGTH@ 93
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 3209 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 3214 @LENGTH@ 22
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 3214 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 3234 @LENGTH@ 1


UPD CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @TO@ catch (Exception e) {} @AT@ 2421 @LENGTH@ 74
---DEL ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 2455 @LENGTH@ 30
------DEL ClassInstanceCreation@@RuntimeException[e] @AT@ 2461 @LENGTH@ 23
---------DEL New@@new @AT@ 2461 @LENGTH@ 3
---------DEL SimpleType@@RuntimeException @AT@ 2465 @LENGTH@ 16
---------DEL SimpleName@@e @AT@ 2482 @LENGTH@ 1


INS MethodDeclaration@@public, String, MethodName:getUrl,  @TO@ TypeDeclaration@@[public, abstract]AbstractDownloadTask, DefaultFuture<DownloadFuture>[DownloadFuture, Runnable] @AT@ 1410 @LENGTH@ 50
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1410 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1417 @LENGTH@ 6
---INS SimpleName@@MethodName:getUrl @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1424 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:url @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1443 @LENGTH@ 11
------INS SimpleName@@url @TO@ ReturnStatement@@SimpleName:url @AT@ 1450 @LENGTH@ 3


UPD EnhancedForStatement@@for (ModelNode node : locations.asList()) {  if (uriString.equals(node.asProperty().getName())) {    throw new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString())));  }} @TO@ for (Property prop : locations.asPropertyList()) {  if (uriString.equals(prop.getName())) {    throw new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString())));  }} @AT@ 3982 @LENGTH@ 307
---UPD SingleVariableDeclaration@@ModelNode node @TO@ Property prop @AT@ 3987 @LENGTH@ 14
------UPD SimpleType@@ModelNode @TO@ Property @AT@ 3987 @LENGTH@ 9
------UPD SimpleName@@node @TO@ prop @AT@ 3997 @LENGTH@ 4
---UPD MethodInvocation@@locations.asList() @TO@ locations.asPropertyList() @AT@ 4004 @LENGTH@ 18
------UPD SimpleName@@MethodName:asList:[] @TO@ MethodName:asPropertyList:[] @AT@ 4014 @LENGTH@ 8
---UPD IfStatement@@if (uriString.equals(node.asProperty().getName())) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString())));} @TO@ if (uriString.equals(prop.getName())) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString())));} @AT@ 4042 @LENGTH@ 233
------UPD MethodInvocation@@uriString.equals(node.asProperty().getName()) @TO@ uriString.equals(prop.getName()) @AT@ 4046 @LENGTH@ 45
---------UPD SimpleName@@MethodName:equals:[node.asProperty().getName()] @TO@ MethodName:equals:[prop.getName()] @AT@ 4056 @LENGTH@ 35
------------UPD MethodInvocation@@node.asProperty().getName() @TO@ prop.getName() @AT@ 4063 @LENGTH@ 27
---------------DEL MethodInvocation@@MethodName:asProperty:[] @AT@ 4063 @LENGTH@ 17
---------------UPD SimpleName@@Name:node @TO@ Name:prop @AT@ 4063 @LENGTH@ 4
------UPD Block@@ThenBody:{  throw new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString())));} @TO@ ThenBody:{  throw new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString())));} @AT@ 4093 @LENGTH@ 182
---------UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString()))) @TO@ ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString()))) @AT@ 4115 @LENGTH@ 142
------------UPD ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString()))] @TO@ OperationFailedException[new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString()))] @AT@ 4121 @LENGTH@ 135
---------------UPD MethodInvocation@@new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString())) @TO@ new ModelNode().set(MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString())) @AT@ 4150 @LENGTH@ 105
------------------UPD SimpleName@@MethodName:set:[MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString())] @TO@ MethodName:set:[MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString())] @AT@ 4166 @LENGTH@ 89
---------------------UPD MethodInvocation@@MESSAGES.schemaAlreadyRegistered(uriString,node.asProperty().getValue().asString()) @TO@ MESSAGES.schemaAlreadyRegistered(uriString,prop.getValue().asString()) @AT@ 4170 @LENGTH@ 84
------------------------UPD SimpleName@@MethodName:schemaAlreadyRegistered:[uriString, node.asProperty().getValue().asString()] @TO@ MethodName:schemaAlreadyRegistered:[uriString, prop.getValue().asString()] @AT@ 4179 @LENGTH@ 75
---------------------------UPD MethodInvocation@@node.asProperty().getValue().asString() @TO@ prop.getValue().asString() @AT@ 4214 @LENGTH@ 39
------------------------------DEL MethodInvocation@@MethodName:asProperty:[] @AT@ 4214 @LENGTH@ 17
------------------------------UPD SimpleName@@Name:node @TO@ Name:prop @AT@ 4214 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testAutoStartupFalse, Exception,  @TO@ public, void, MethodName:testAutoStartupFalseRouteStart, Exception,  @AT@ 1069 @LENGTH@ 1116
---UPD SimpleName@@MethodName:testAutoStartupFalse @TO@ MethodName:testAutoStartupFalseRouteStart @AT@ 1081 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:property.getFieldName() @TO@ ConditionalExpression:property == null ? super.getKeyForPath(expr,metadata) : property.getFieldName() @AT@ 8213 @LENGTH@ 31
---INS ConditionalExpression@@property == null ? super.getKeyForPath(expr,metadata) : property.getFieldName() @TO@ ReturnStatement@@MethodInvocation:property.getFieldName() @AT@ 8220 @LENGTH@ 80
------INS InfixExpression@@property == null @TO@ ConditionalExpression@@property == null ? super.getKeyForPath(expr,metadata) : property.getFieldName() @AT@ 8220 @LENGTH@ 16
---------INS SimpleName@@property @TO@ InfixExpression@@property == null @AT@ 8220 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@property == null @AT@ 8228 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@property == null @AT@ 8232 @LENGTH@ 4
------INS SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @TO@ ConditionalExpression@@property == null ? super.getKeyForPath(expr,metadata) : property.getFieldName() @AT@ 8239 @LENGTH@ 35
---------INS SimpleName@@MethodName:getKeyForPath:[expr, metadata] @TO@ SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @AT@ 8245 @LENGTH@ 13
---------INS SimpleName@@expr @TO@ SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @AT@ 8259 @LENGTH@ 4
---------INS SimpleName@@metadata @TO@ SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @AT@ 8265 @LENGTH@ 8
------INS MethodInvocation@@property.getFieldName() @TO@ ConditionalExpression@@property == null ? super.getKeyForPath(expr,metadata) : property.getFieldName() @AT@ 8277 @LENGTH@ 23
---------MOV SimpleName@@Name:property @TO@ MethodInvocation@@property.getFieldName() @AT@ 8220 @LENGTH@ 8
---------MOV SimpleName@@MethodName:getFieldName:[] @TO@ MethodInvocation@@property.getFieldName() @AT@ 8229 @LENGTH@ 14
---DEL MethodInvocation@@property.getFieldName() @AT@ 8220 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:ctx.enterState(props) @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 3094 @LENGTH@ 22
---INS MethodInvocation@@ctx.enterState(props) @TO@ ExpressionStatement@@MethodInvocation:ctx.enterState(props) @AT@ 3094 @LENGTH@ 21
------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.enterState(props) @AT@ 3094 @LENGTH@ 3
------INS SimpleName@@MethodName:enterState:[props] @TO@ MethodInvocation@@ctx.enterState(props) @AT@ 3098 @LENGTH@ 17
---------INS SimpleName@@props @TO@ SimpleName@@MethodName:enterState:[props] @AT@ 3109 @LENGTH@ 5


INS MethodDeclaration@@protected, String, MethodName:generateSessionId, Random random,  @TO@ TypeDeclaration@@[public]DistributableSessionManager, AbstractSessionManager[LocalDistributableSessionManager, ClusteredSessionManager<O>, DistributableSessionManagerMBean, LifecycleListener] @AT@ 27845 @LENGTH@ 120
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, String, MethodName:generateSessionId, Random random,  @AT@ 27845 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, String, MethodName:generateSessionId, Random random,  @AT@ 27855 @LENGTH@ 6
---INS SimpleName@@MethodName:generateSessionId @TO@ MethodDeclaration@@protected, String, MethodName:generateSessionId, Random random,  @AT@ 27862 @LENGTH@ 17
---INS SingleVariableDeclaration@@Random random @TO@ MethodDeclaration@@protected, String, MethodName:generateSessionId, Random random,  @AT@ 27880 @LENGTH@ 13
------INS SimpleType@@Random @TO@ SingleVariableDeclaration@@Random random @AT@ 27880 @LENGTH@ 6
------INS SimpleName@@random @TO@ SingleVariableDeclaration@@Random random @AT@ 27887 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:this.distributedCacheManager.createSessionId() @TO@ MethodDeclaration@@protected, String, MethodName:generateSessionId, Random random,  @AT@ 27905 @LENGTH@ 54
------INS MethodInvocation@@this.distributedCacheManager.createSessionId() @TO@ ReturnStatement@@MethodInvocation:this.distributedCacheManager.createSessionId() @AT@ 27912 @LENGTH@ 46
---------INS FieldAccess@@this.distributedCacheManager @TO@ MethodInvocation@@this.distributedCacheManager.createSessionId() @AT@ 27912 @LENGTH@ 28
------------INS ThisExpression@@this @TO@ FieldAccess@@this.distributedCacheManager @AT@ 27912 @LENGTH@ 4
------------INS SimpleName@@distributedCacheManager @TO@ FieldAccess@@this.distributedCacheManager @AT@ 27917 @LENGTH@ 23
---------INS SimpleName@@MethodName:createSessionId:[] @TO@ MethodInvocation@@this.distributedCacheManager.createSessionId() @AT@ 27941 @LENGTH@ 17


UPD VariableDeclarationStatement@@final Resource resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS); @TO@ final Resource resource=context.readResource(PathAddress.EMPTY_ADDRESS); @AT@ 2990 @LENGTH@ 83
---UPD VariableDeclarationFragment@@resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS) @TO@ resource=context.readResource(PathAddress.EMPTY_ADDRESS) @AT@ 3005 @LENGTH@ 67
------UPD MethodInvocation@@context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS) @TO@ context.readResource(PathAddress.EMPTY_ADDRESS) @AT@ 3016 @LENGTH@ 56
---------UPD SimpleName@@MethodName:readResourceForUpdate:[PathAddress.EMPTY_ADDRESS] @TO@ MethodName:readResource:[PathAddress.EMPTY_ADDRESS] @AT@ 3024 @LENGTH@ 48


UPD IfStatement@@if (result.size() > 0) {  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @TO@ if (result.size() > 0) {  if (hasMultipleMatches(result)) {    result=pruneAliasDuplicates(result);  }  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @AT@ 2561 @LENGTH@ 1179
---UPD Block@@ThenBody:{  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @TO@ ThenBody:{  if (hasMultipleMatches(result)) {    result=pruneAliasDuplicates(result);  }  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @AT@ 2584 @LENGTH@ 1156
------INS IfStatement@@if (hasMultipleMatches(result)) {  result=pruneAliasDuplicates(result);} @TO@ Block@@ThenBody:{  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @AT@ 2628 @LENGTH@ 269
---------INS MethodInvocation@@hasMultipleMatches(result) @TO@ IfStatement@@if (hasMultipleMatches(result)) {  result=pruneAliasDuplicates(result);} @AT@ 2632 @LENGTH@ 26
------------INS SimpleName@@MethodName:hasMultipleMatches:[result] @TO@ MethodInvocation@@hasMultipleMatches(result) @AT@ 2632 @LENGTH@ 26
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:hasMultipleMatches:[result] @AT@ 2651 @LENGTH@ 6
---------INS Block@@ThenBody:{  result=pruneAliasDuplicates(result);} @TO@ IfStatement@@if (hasMultipleMatches(result)) {  result=pruneAliasDuplicates(result);} @AT@ 2660 @LENGTH@ 237
------------INS ExpressionStatement@@Assignment:result=pruneAliasDuplicates(result) @TO@ Block@@ThenBody:{  result=pruneAliasDuplicates(result);} @AT@ 2845 @LENGTH@ 38
---------------INS Assignment@@result=pruneAliasDuplicates(result) @TO@ ExpressionStatement@@Assignment:result=pruneAliasDuplicates(result) @AT@ 2845 @LENGTH@ 37
------------------INS SimpleName@@result @TO@ Assignment@@result=pruneAliasDuplicates(result) @AT@ 2845 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@result=pruneAliasDuplicates(result) @AT@ 2851 @LENGTH@ 1
------------------INS MethodInvocation@@pruneAliasDuplicates(result) @TO@ Assignment@@result=pruneAliasDuplicates(result) @AT@ 2854 @LENGTH@ 28
---------------------INS SimpleName@@MethodName:pruneAliasDuplicates:[result] @TO@ MethodInvocation@@pruneAliasDuplicates(result) @AT@ 2854 @LENGTH@ 28
------------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:pruneAliasDuplicates:[result] @AT@ 2875 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:appClientCommand="java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @TO@ Assignment:appClientCommand="java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ TestSuiteEnvironment.getIpv6Args()+ "-Djboss.bind.address="+ TestSuiteEnvironment.getServerAddress()+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @AT@ 7604 @LENGTH@ 494
---UPD Assignment@@appClientCommand="java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @TO@ appClientCommand="java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ TestSuiteEnvironment.getIpv6Args()+ "-Djboss.bind.address="+ TestSuiteEnvironment.getServerAddress()+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @AT@ 7604 @LENGTH@ 493
------UPD InfixExpression@@"java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @TO@ "java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ TestSuiteEnvironment.getIpv6Args()+ "-Djboss.bind.address="+ TestSuiteEnvironment.getServerAddress()+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @AT@ 7623 @LENGTH@ 474
---------INS MethodInvocation@@TestSuiteEnvironment.getIpv6Args() @TO@ InfixExpression@@"java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @AT@ 7830 @LENGTH@ 34
------------INS SimpleName@@Name:TestSuiteEnvironment @TO@ MethodInvocation@@TestSuiteEnvironment.getIpv6Args() @AT@ 7830 @LENGTH@ 20
------------INS SimpleName@@MethodName:getIpv6Args:[] @TO@ MethodInvocation@@TestSuiteEnvironment.getIpv6Args() @AT@ 7851 @LENGTH@ 13
---------INS StringLiteral@@"-Djboss.bind.address=" @TO@ InfixExpression@@"java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @AT@ 7883 @LENGTH@ 23
---------INS MethodInvocation@@TestSuiteEnvironment.getServerAddress() @TO@ InfixExpression@@"java" + " -Djboss.modules.dir=" + asDist + "/modules"+ " -Djline.WindowsTerminal.directConsole=false"+ " -jar "+ asDist+ "/jboss-modules.jar"+ " -mp "+ asDist+ "/modules"+ " org.jboss.as.appclient"+ " -Djboss.server.base.dir="+ asInst+ "/appclient"+ " -Djboss.home.dir="+ asInst+ " "+ this.appClientArgs+ " "+ archiveArg+ " "+ args @AT@ 7909 @LENGTH@ 39
------------INS SimpleName@@Name:TestSuiteEnvironment @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 7909 @LENGTH@ 20
------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 7930 @LENGTH@ 18


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,false,false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build()] @TO@ public, static, final, SimpleAttributeDefinition, [DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_NONE).build()] @AT@ 4181 @LENGTH@ 714
---UPD VariableDeclarationFragment@@DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,false,false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @TO@ DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT=new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 4227 @LENGTH@ 667
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,false,false)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @TO@ new SimpleAttributeDefinitionBuilder(EJB3SubsystemModel.DEFAULT_SINGLETON_BEAN_ACCESS_TIMEOUT,ModelType.LONG,true).setXmlName(EJB3SubsystemXMLAttribute.DEFAULT_ACCESS_TIMEOUT.getLocalName()).setDefaultValue(new ModelNode().set(5000)).setAllowExpression(true).setValidator(new LongRangeValidator(1,Integer.MAX_VALUE,true,true)).setFlags(AttributeAccess.Flag.RESTART_NONE).build() @AT@ 4279 @LENGTH@ 615
---------UPD MethodInvocation@@MethodName:setValidator:[new LongRangeValidator(1,Integer.MAX_VALUE,false,false)] @TO@ MethodName:setValidator:[new LongRangeValidator(1,Integer.MAX_VALUE,true,true)] @AT@ 4279 @LENGTH@ 521
------------UPD ClassInstanceCreation@@LongRangeValidator[1, Integer.MAX_VALUE, false, false] @TO@ LongRangeValidator[1, Integer.MAX_VALUE, true, true] @AT@ 4741 @LENGTH@ 58
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 4786 @LENGTH@ 5
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 4793 @LENGTH@ 5


UPD CatchClause@@catch (FailedToCreateProducerException e) {  IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());  assertEquals("Unknown authMethod: foo in authMethodPriority: Basic,foo",cause.getMessage());} @TO@ catch (FailedToCreateProducerException e) {  IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause().getCause());  assertEquals("No enum const class org.apache.camel.component.http.AuthMethod.foo",cause.getMessage());} @AT@ 3732 @LENGTH@ 270
---UPD VariableDeclarationStatement@@IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause()); @TO@ IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause().getCause()); @AT@ 3788 @LENGTH@ 98
------UPD VariableDeclarationFragment@@cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause().getCause()) @AT@ 3813 @LENGTH@ 72
---------UPD MethodInvocation@@assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause().getCause()) @AT@ 3821 @LENGTH@ 64
------------UPD SimpleName@@MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @TO@ MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause().getCause().getCause()] @AT@ 3821 @LENGTH@ 64
---------------UPD MethodInvocation@@e.getCause() @TO@ e.getCause().getCause().getCause() @AT@ 3872 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 3872 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 3872 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 3872 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 3872 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:assertEquals("Unknown authMethod: foo in authMethodPriority: Basic,foo",cause.getMessage()) @TO@ MethodInvocation:assertEquals("No enum const class org.apache.camel.component.http.AuthMethod.foo",cause.getMessage()) @AT@ 3899 @LENGTH@ 93
------UPD MethodInvocation@@assertEquals("Unknown authMethod: foo in authMethodPriority: Basic,foo",cause.getMessage()) @TO@ assertEquals("No enum const class org.apache.camel.component.http.AuthMethod.foo",cause.getMessage()) @AT@ 3899 @LENGTH@ 92
---------UPD SimpleName@@MethodName:assertEquals:["Unknown authMethod: foo in authMethodPriority: Basic,foo", cause.getMessage()] @TO@ MethodName:assertEquals:["No enum const class org.apache.camel.component.http.AuthMethod.foo", cause.getMessage()] @AT@ 3899 @LENGTH@ 92
------------UPD StringLiteral@@"Unknown authMethod: foo in authMethodPriority: Basic,foo" @TO@ "No enum const class org.apache.camel.component.http.AuthMethod.foo" @AT@ 3912 @LENGTH@ 58


INS MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"classpath:application-context.xml"}), @Transactional, public]UserRepositoryTests,  @AT@ 20146 @LENGTH@ 309
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20146 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20153 @LENGTH@ 4
---INS SimpleName@@MethodName:executesAnnotatedCollectionMethodCorrectly @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20158 @LENGTH@ 42
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20210 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 20210 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:firstUser.addColleague(thirdUser) @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20231 @LENGTH@ 34
------INS MethodInvocation@@firstUser.addColleague(thirdUser) @TO@ ExpressionStatement@@MethodInvocation:firstUser.addColleague(thirdUser) @AT@ 20231 @LENGTH@ 33
---------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.addColleague(thirdUser) @AT@ 20231 @LENGTH@ 9
---------INS SimpleName@@MethodName:addColleague:[thirdUser] @TO@ MethodInvocation@@firstUser.addColleague(thirdUser) @AT@ 20241 @LENGTH@ 23
------------INS SimpleName@@thirdUser @TO@ SimpleName@@MethodName:addColleague:[thirdUser] @AT@ 20254 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:repository.save(firstUser) @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20269 @LENGTH@ 27
------INS MethodInvocation@@repository.save(firstUser) @TO@ ExpressionStatement@@MethodInvocation:repository.save(firstUser) @AT@ 20269 @LENGTH@ 26
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(firstUser) @AT@ 20269 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[firstUser] @TO@ MethodInvocation@@repository.save(firstUser) @AT@ 20280 @LENGTH@ 15
------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:save:[firstUser] @AT@ 20285 @LENGTH@ 9
---INS VariableDeclarationStatement@@List<User> result=null; @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20302 @LENGTH@ 25
------INS ParameterizedType@@List<User> @TO@ VariableDeclarationStatement@@List<User> result=null; @AT@ 20302 @LENGTH@ 10
---------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 20302 @LENGTH@ 4
---------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 20307 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=null @TO@ VariableDeclarationStatement@@List<User> result=null; @AT@ 20313 @LENGTH@ 13
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=null @AT@ 20313 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@result=null @AT@ 20322 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20375 @LENGTH@ 33
------INS MethodInvocation@@assertThat(result.size(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @AT@ 20375 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[result.size(), is(1)] @TO@ MethodInvocation@@assertThat(result.size(),is(1)) @AT@ 20375 @LENGTH@ 32
------------INS MethodInvocation@@result.size() @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 20386 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.size() @AT@ 20386 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.size() @AT@ 20393 @LENGTH@ 6
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 20401 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 20401 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 20404 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 20401 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 20404 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(thirdUser)) @TO@ MethodDeclaration@@public, void, MethodName:executesAnnotatedCollectionMethodCorrectly,  @AT@ 20412 @LENGTH@ 39
------INS MethodInvocation@@assertThat(result,hasItem(thirdUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(thirdUser)) @AT@ 20412 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertThat:[result, hasItem(thirdUser)] @TO@ MethodInvocation@@assertThat(result,hasItem(thirdUser)) @AT@ 20412 @LENGTH@ 38
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(thirdUser)] @AT@ 20423 @LENGTH@ 6
------------INS MethodInvocation@@hasItem(thirdUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(thirdUser)] @AT@ 20431 @LENGTH@ 18
---------------INS SimpleName@@MethodName:hasItem:[thirdUser] @TO@ MethodInvocation@@hasItem(thirdUser) @AT@ 20431 @LENGTH@ 18
------------------INS SimpleName@@thirdUser @TO@ SimpleName@@MethodName:hasItem:[thirdUser] @AT@ 20439 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:ALIAS.addOperationParameterDescription(resources,"infinispan.container",op).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @TO@ MethodInvocation:ALIASES.addOperationParameterDescription(resources,"infinispan.container",op).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @AT@ 7745 @LENGTH@ 159
---UPD MethodInvocation@@ALIAS.addOperationParameterDescription(resources,"infinispan.container",op).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @TO@ ALIASES.addOperationParameterDescription(resources,"infinispan.container",op).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @AT@ 7745 @LENGTH@ 158
------UPD SimpleName@@Name:ALIAS @TO@ Name:ALIASES @AT@ 7745 @LENGTH@ 5


UPD Block@@WhileBody:{  NetworkInterface nic=nics.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  Set<InetAddress> addresses=new HashSet<InetAddress>();  Enumeration<InetAddress> addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  }  Enumeration<NetworkInterface> subs=nic.getSubInterfaces();  while (subs.hasMoreElements()) {    nic=subs.nextElement();    all.add(nic);    if (nic.isLoopback()) {      loop.add(nic);    } else {      notLoop.add(nic);    }    addresses=new HashSet<InetAddress>();    addressEnumeration=nic.getInetAddresses();    while (addressEnumeration.hasMoreElements()) {      addresses.add(addressEnumeration.nextElement());    }    if (addresses.size() > 0) {      candidates.put(nic,Collections.unmodifiableSet(addresses));    }  }} @TO@ WhileBody:{  NetworkInterface nic=nics.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  Set<InetAddress> addresses=new HashSet<InetAddress>();  Enumeration<InetAddress> addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  } else {    notLoop.remove(nic);  }  Enumeration<NetworkInterface> subs=nic.getSubInterfaces();  while (subs.hasMoreElements()) {    nic=subs.nextElement();    all.add(nic);    if (nic.isLoopback()) {      loop.add(nic);    } else {      notLoop.add(nic);    }    addresses=new HashSet<InetAddress>();    addressEnumeration=nic.getInetAddresses();    while (addressEnumeration.hasMoreElements()) {      addresses.add(addressEnumeration.nextElement());    }    if (addresses.size() > 0) {      candidates.put(nic,Collections.unmodifiableSet(addresses));    } else {      notLoop.remove(nic);    }  }} @AT@ 2467 @LENGTH@ 1556
---UPD IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @TO@ if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} else {  notLoop.remove(nic);} @AT@ 3039 @LENGTH@ 126
------INS Block@@ElseBody:{  notLoop.remove(nic);} @TO@ IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @AT@ 3169 @LENGTH@ 60
---------INS ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @TO@ Block@@ElseBody:{  notLoop.remove(nic);} @AT@ 3191 @LENGTH@ 20
------------INS MethodInvocation@@notLoop.remove(nic) @TO@ ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @AT@ 3191 @LENGTH@ 19
---------------INS SimpleName@@Name:notLoop @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 3191 @LENGTH@ 7
---------------INS SimpleName@@MethodName:remove:[nic] @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 3199 @LENGTH@ 11
------------------INS SimpleName@@nic @TO@ SimpleName@@MethodName:remove:[nic] @AT@ 3206 @LENGTH@ 3
---UPD WhileStatement@@while (subs.hasMoreElements()) {  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  }} @TO@ while (subs.hasMoreElements()) {  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  } else {    notLoop.remove(nic);  }} @AT@ 3260 @LENGTH@ 749
------UPD Block@@WhileBody:{  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  }} @TO@ WhileBody:{  nic=subs.nextElement();  all.add(nic);  if (nic.isLoopback()) {    loop.add(nic);  } else {    notLoop.add(nic);  }  addresses=new HashSet<InetAddress>();  addressEnumeration=nic.getInetAddresses();  while (addressEnumeration.hasMoreElements()) {    addresses.add(addressEnumeration.nextElement());  }  if (addresses.size() > 0) {    candidates.put(nic,Collections.unmodifiableSet(addresses));  } else {    notLoop.remove(nic);  }} @AT@ 3291 @LENGTH@ 718
---------UPD IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @TO@ if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} else {  notLoop.remove(nic);} @AT@ 3856 @LENGTH@ 134
------------INS Block@@ElseBody:{  notLoop.remove(nic);} @TO@ IfStatement@@if (addresses.size() > 0) {  candidates.put(nic,Collections.unmodifiableSet(addresses));} @AT@ 4058 @LENGTH@ 68
---------------INS ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @TO@ Block@@ElseBody:{  notLoop.remove(nic);} @AT@ 4084 @LENGTH@ 20
------------------INS MethodInvocation@@notLoop.remove(nic) @TO@ ExpressionStatement@@MethodInvocation:notLoop.remove(nic) @AT@ 4084 @LENGTH@ 19
---------------------INS SimpleName@@Name:notLoop @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 4084 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:remove:[nic] @TO@ MethodInvocation@@notLoop.remove(nic) @AT@ 4092 @LENGTH@ 11
------------------------INS SimpleName@@nic @TO@ SimpleName@@MethodName:remove:[nic] @AT@ 4099 @LENGTH@ 3


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[private, static]MyLocalDateTimeConverter, [TypeConverter] @AT@ 3112 @LENGTH@ 128
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3112 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3123 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3125 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3138 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3138 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3138 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3144 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3147 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3153 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3153 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3162 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3172 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3172 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3179 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3200 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 3207 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 3207 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3217 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 3223 @LENGTH@ 5


DEL VariableDeclarationStatement@@Map.Entry<NetworkInterface,Set<InetAddress>> entry=allCandidates.entrySet().iterator().next(); @AT@ 1716 @LENGTH@ 97
---DEL VariableDeclarationFragment@@entry=allCandidates.entrySet().iterator().next() @AT@ 1762 @LENGTH@ 50
------DEL SimpleName@@entry @AT@ 1762 @LENGTH@ 5
------DEL MethodInvocation@@allCandidates.entrySet().iterator().next() @AT@ 1770 @LENGTH@ 42
---------DEL MethodInvocation@@MethodName:iterator:[] @AT@ 1770 @LENGTH@ 35
---------DEL MethodInvocation@@MethodName:entrySet:[] @AT@ 1770 @LENGTH@ 24


UPD IfStatement@@if (finalResponse != null) {  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }} else {  ControllerLogger.SERVER_MANAGEMENT_LOGGER.noFinalProxyOutcomeReceived(operation.get(OP),operation.get(OP_ADDR),proxyController.getProxyNodeAddress().toModelNode());} @TO@ if (finalResponse != null) {  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }  if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {    context.getServerResults().set(finalResponse.get(SERVER_GROUPS));  }} else {  ControllerLogger.SERVER_MANAGEMENT_LOGGER.noFinalProxyOutcomeReceived(operation.get(OP),operation.get(OP_ADDR),proxyController.getProxyNodeAddress().toModelNode());} @AT@ 5507 @LENGTH@ 786
---UPD Block@@ThenBody:{  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }} @TO@ ThenBody:{  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }  if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {    context.getServerResults().set(finalResponse.get(SERVER_GROUPS));  }} @AT@ 5534 @LENGTH@ 485
------INS IfStatement@@if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @TO@ Block@@ThenBody:{  ModelNode finalResult=finalResponse.get(RESULT);  if (finalResponse.hasDefined(FAILURE_DESCRIPTION)) {    context.getFailureDescription().set(finalResponse.get(FAILURE_DESCRIPTION));    if (finalResult.isDefined()) {      context.getResult().set(finalResult);    }  } else {    context.getResult().set(finalResult);  }} @AT@ 6114 @LENGTH@ 202
---------INS InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @TO@ IfStatement@@if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @AT@ 6118 @LENGTH@ 91
------------INS InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @AT@ 6118 @LENGTH@ 55
---------------INS MethodInvocation@@context.getProcessType() @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 6118 @LENGTH@ 24
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType() @AT@ 6118 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType() @AT@ 6126 @LENGTH@ 16
---------------INS Operator@@== @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 6142 @LENGTH@ 2
---------------INS QualifiedName@@ProcessType.HOST_CONTROLLER @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER @AT@ 6146 @LENGTH@ 27
------------------INS SimpleName@@ProcessType @TO@ QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 6146 @LENGTH@ 11
------------------INS SimpleName@@HOST_CONTROLLER @TO@ QualifiedName@@ProcessType.HOST_CONTROLLER @AT@ 6158 @LENGTH@ 15
------------INS Operator@@&& @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @AT@ 6173 @LENGTH@ 2
------------INS MethodInvocation@@finalResponse.has(SERVER_GROUPS) @TO@ InfixExpression@@context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS) @AT@ 6177 @LENGTH@ 32
---------------INS SimpleName@@Name:finalResponse @TO@ MethodInvocation@@finalResponse.has(SERVER_GROUPS) @AT@ 6177 @LENGTH@ 13
---------------INS SimpleName@@MethodName:has:[SERVER_GROUPS] @TO@ MethodInvocation@@finalResponse.has(SERVER_GROUPS) @AT@ 6191 @LENGTH@ 18
------------------INS SimpleName@@SERVER_GROUPS @TO@ SimpleName@@MethodName:has:[SERVER_GROUPS] @AT@ 6195 @LENGTH@ 13
---------INS Block@@ThenBody:{  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @TO@ IfStatement@@if (context.getProcessType() == ProcessType.HOST_CONTROLLER && finalResponse.has(SERVER_GROUPS)) {  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @AT@ 6211 @LENGTH@ 105
------------INS ExpressionStatement@@MethodInvocation:context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @TO@ Block@@ThenBody:{  context.getServerResults().set(finalResponse.get(SERVER_GROUPS));} @AT@ 6233 @LENGTH@ 65
---------------INS MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @TO@ ExpressionStatement@@MethodInvocation:context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6233 @LENGTH@ 64
------------------INS MethodInvocation@@MethodName:getServerResults:[] @TO@ MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6233 @LENGTH@ 26
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6233 @LENGTH@ 7
------------------INS SimpleName@@MethodName:set:[finalResponse.get(SERVER_GROUPS)] @TO@ MethodInvocation@@context.getServerResults().set(finalResponse.get(SERVER_GROUPS)) @AT@ 6260 @LENGTH@ 37
---------------------INS MethodInvocation@@finalResponse.get(SERVER_GROUPS) @TO@ SimpleName@@MethodName:set:[finalResponse.get(SERVER_GROUPS)] @AT@ 6264 @LENGTH@ 32
------------------------INS SimpleName@@Name:finalResponse @TO@ MethodInvocation@@finalResponse.get(SERVER_GROUPS) @AT@ 6264 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:get:[SERVER_GROUPS] @TO@ MethodInvocation@@finalResponse.get(SERVER_GROUPS) @AT@ 6278 @LENGTH@ 18
---------------------------INS SimpleName@@SERVER_GROUPS @TO@ SimpleName@@MethodName:get:[SERVER_GROUPS] @AT@ 6282 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:nonAsciiPasswordHasCorrectHash,  @TO@ public, void, MethodName:nonAsciiPasswordHasCorrectHash, Exception,  @AT@ 1591 @LENGTH@ 261
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:nonAsciiPasswordHasCorrectHash,  @AT@ 1638 @LENGTH@ 9


INS MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @TO@ TypeDeclaration@@[public]SnsEndpoint, DefaultEndpoint @AT@ 1958 @LENGTH@ 166
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @AT@ 1958 @LENGTH@ 6
---INS SimpleName@@MethodName:SnsEndpoint @TO@ MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @AT@ 1965 @LENGTH@ 11
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @AT@ 1977 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 1977 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 1984 @LENGTH@ 3
---INS SingleVariableDeclaration@@Component component @TO@ MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @AT@ 1989 @LENGTH@ 19
------INS SimpleType@@Component @TO@ SingleVariableDeclaration@@Component component @AT@ 1989 @LENGTH@ 9
------INS SimpleName@@component @TO@ SingleVariableDeclaration@@Component component @AT@ 1999 @LENGTH@ 9
---INS SingleVariableDeclaration@@SnsConfiguration configuration @TO@ MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @AT@ 2010 @LENGTH@ 30
------INS SimpleType@@SnsConfiguration @TO@ SingleVariableDeclaration@@SnsConfiguration configuration @AT@ 2010 @LENGTH@ 16
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@SnsConfiguration configuration @AT@ 2027 @LENGTH@ 13
---INS SuperConstructorInvocation@@super(uri,component);
 @TO@ MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @AT@ 2052 @LENGTH@ 22
------INS SimpleName@@uri @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 2058 @LENGTH@ 3
------INS SimpleName@@component @TO@ SuperConstructorInvocation@@super(uri,component);
 @AT@ 2063 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.configuration=configuration @TO@ MethodDeclaration@@public, voidMethodName:SnsEndpoint, String uri, Component component, SnsConfiguration configuration,  @AT@ 2083 @LENGTH@ 35
------INS Assignment@@this.configuration=configuration @TO@ ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 2083 @LENGTH@ 34
---------INS FieldAccess@@this.configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2083 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.configuration @AT@ 2083 @LENGTH@ 4
------------INS SimpleName@@configuration @TO@ FieldAccess@@this.configuration @AT@ 2088 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.configuration=configuration @AT@ 2101 @LENGTH@ 1
---------INS SimpleName@@configuration @TO@ Assignment@@this.configuration=configuration @AT@ 2104 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:actualBody=ExchangeHelper.getMandatoryInBody(actual,expectedBody.getClass()) @TO@ Assignment:actualBody=actual.getIn().getMandatoryBody(expectedBody.getClass()) @AT@ 2137 @LENGTH@ 80
---UPD Assignment@@actualBody=ExchangeHelper.getMandatoryInBody(actual,expectedBody.getClass()) @TO@ actualBody=actual.getIn().getMandatoryBody(expectedBody.getClass()) @AT@ 2137 @LENGTH@ 79
------UPD MethodInvocation@@ExchangeHelper.getMandatoryInBody(actual,expectedBody.getClass()) @TO@ actual.getIn().getMandatoryBody(expectedBody.getClass()) @AT@ 2150 @LENGTH@ 66
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryInBody(actual,expectedBody.getClass()) @AT@ 2105 @LENGTH@ 14
---------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:actual @AT@ 2150 @LENGTH@ 14
---------UPD SimpleName@@MethodName:getMandatoryInBody:[actual, expectedBody.getClass()] @TO@ MethodName:getMandatoryBody:[expectedBody.getClass()] @AT@ 2165 @LENGTH@ 51
------------DEL SimpleName@@actual @AT@ 2184 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [BACKGROUNDVALIDATIONMILLIS=new SimpleAttributeDefinition(BACKGROUNDVALIDATIONMILLIS_NAME,Validation.Tag.BACKGROUND_VALIDATION_MILLIS.getLocalName(),new ModelNode(),ModelType.LONG,true,true,MeasurementUnit.MILLISECONDS,new IntRangeValidator(1,true))] @TO@ public, static, final, SimpleAttributeDefinition, [BACKGROUNDVALIDATIONMILLIS=new SimpleAttributeDefinition(BACKGROUNDVALIDATIONMILLIS_NAME,Validation.Tag.BACKGROUND_VALIDATION_MILLIS.getLocalName(),new ModelNode(),ModelType.LONG,true,true,MeasurementUnit.MILLISECONDS,new IntRangeValidator(1,true,true))] @AT@ 3198 @LENGTH@ 306
---UPD VariableDeclarationFragment@@BACKGROUNDVALIDATIONMILLIS=new SimpleAttributeDefinition(BACKGROUNDVALIDATIONMILLIS_NAME,Validation.Tag.BACKGROUND_VALIDATION_MILLIS.getLocalName(),new ModelNode(),ModelType.LONG,true,true,MeasurementUnit.MILLISECONDS,new IntRangeValidator(1,true)) @TO@ BACKGROUNDVALIDATIONMILLIS=new SimpleAttributeDefinition(BACKGROUNDVALIDATIONMILLIS_NAME,Validation.Tag.BACKGROUND_VALIDATION_MILLIS.getLocalName(),new ModelNode(),ModelType.LONG,true,true,MeasurementUnit.MILLISECONDS,new IntRangeValidator(1,true,true)) @AT@ 3244 @LENGTH@ 259
------UPD ClassInstanceCreation@@SimpleAttributeDefinition[BACKGROUNDVALIDATIONMILLIS_NAME, Validation.Tag.BACKGROUND_VALIDATION_MILLIS.getLocalName(), new ModelNode(), ModelType.LONG, true, true, MeasurementUnit.MILLISECONDS, new IntRangeValidator(1,true)] @TO@ SimpleAttributeDefinition[BACKGROUNDVALIDATIONMILLIS_NAME, Validation.Tag.BACKGROUND_VALIDATION_MILLIS.getLocalName(), new ModelNode(), ModelType.LONG, true, true, MeasurementUnit.MILLISECONDS, new IntRangeValidator(1,true,true)] @AT@ 3273 @LENGTH@ 230
---------UPD ClassInstanceCreation@@IntRangeValidator[1, true] @TO@ IntRangeValidator[1, true, true] @AT@ 3472 @LENGTH@ 30
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[1, true] @AT@ 3503 @LENGTH@ 4


UPD IfStatement@@if (ch == '}' || ch == ';') {  ctx.leaveState();} @TO@ if (ch == '}' || ch == ';') {  ctx.leaveState();  return;} @AT@ 2965 @LENGTH@ 84
---UPD Block@@ThenBody:{  ctx.leaveState();} @TO@ ThenBody:{  ctx.leaveState();  return;} @AT@ 2992 @LENGTH@ 57
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ctx.leaveState();} @AT@ 3052 @LENGTH@ 7


UPD VariableDeclarationStatement@@QueueConnectionFactory qcf=(QueueConnectionFactory)new InitialContext().lookup("java:/RemoteConnectionFactory"); @TO@ QueueConnectionFactory qcf=(QueueConnectionFactory)new InitialContext().lookup("java:/ConnectionFactory"); @AT@ 13950 @LENGTH@ 115
---UPD VariableDeclarationFragment@@qcf=(QueueConnectionFactory)new InitialContext().lookup("java:/RemoteConnectionFactory") @TO@ qcf=(QueueConnectionFactory)new InitialContext().lookup("java:/ConnectionFactory") @AT@ 13973 @LENGTH@ 91
------UPD CastExpression@@(QueueConnectionFactory)new InitialContext().lookup("java:/RemoteConnectionFactory") @TO@ (QueueConnectionFactory)new InitialContext().lookup("java:/ConnectionFactory") @AT@ 13979 @LENGTH@ 85
---------UPD MethodInvocation@@new InitialContext().lookup("java:/RemoteConnectionFactory") @TO@ new InitialContext().lookup("java:/ConnectionFactory") @AT@ 14004 @LENGTH@ 60
------------UPD SimpleName@@MethodName:lookup:["java:/RemoteConnectionFactory"] @TO@ MethodName:lookup:["java:/ConnectionFactory"] @AT@ 14025 @LENGTH@ 39
---------------UPD StringLiteral@@"java:/RemoteConnectionFactory" @TO@ "java:/ConnectionFactory" @AT@ 14032 @LENGTH@ 31


INS MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]EjbMessages,  @AT@ 77073 @LENGTH@ 55
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @AT@ 77048 @LENGTH@ 24
---INS SimpleName@@MethodName:stringParamCannotBeNullOrEmpty @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @AT@ 77073 @LENGTH@ 30
---INS SingleVariableDeclaration@@final String paramName @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:stringParamCannotBeNullOrEmpty, final String paramName,  @AT@ 77104 @LENGTH@ 22
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String paramName @AT@ 77104 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String paramName @AT@ 77110 @LENGTH@ 6
------INS SimpleName@@paramName @TO@ SingleVariableDeclaration@@final String paramName @AT@ 77117 @LENGTH@ 9


UPD IfStatement@@if (!executed) {  for (  Job job : jobs) {    if (!waitForJobs) {      job.submit();    } else {      succesful&=job.waitForCompletion(true);    }  }} @TO@ if (!executed) {  executed=true;  for (  Job job : jobs) {    if (!waitForJobs) {      job.submit();    } else {      succesful&=job.waitForCompletion(true);    }  }} @AT@ 2362 @LENGTH@ 164
---UPD Block@@ThenBody:{  for (  Job job : jobs) {    if (!waitForJobs) {      job.submit();    } else {      succesful&=job.waitForCompletion(true);    }  }} @TO@ ThenBody:{  executed=true;  for (  Job job : jobs) {    if (!waitForJobs) {      job.submit();    } else {      succesful&=job.waitForCompletion(true);    }  }} @AT@ 2377 @LENGTH@ 149
------INS ExpressionStatement@@Assignment:executed=true @TO@ Block@@ThenBody:{  for (  Job job : jobs) {    if (!waitForJobs) {      job.submit();    } else {      succesful&=job.waitForCompletion(true);    }  }} @AT@ 2382 @LENGTH@ 16
---------INS Assignment@@executed=true @TO@ ExpressionStatement@@Assignment:executed=true @AT@ 2382 @LENGTH@ 15
------------INS SimpleName@@executed @TO@ Assignment@@executed=true @AT@ 2382 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@executed=true @AT@ 2390 @LENGTH@ 1
------------INS BooleanLiteral@@true @TO@ Assignment@@executed=true @AT@ 2393 @LENGTH@ 4


UPD EnhancedForStatement@@for (Property matchSetting : properties) {  writer.writeStartElement(Element.ADDRESS_SETTING.getLocalName());  writer.writeAttribute(Attribute.MATCH.getLocalName(),matchSetting.getName());  final ModelNode setting=matchSetting.getValue();  CommonAttributes.DEAD_LETTER_ADDRESS.marshallAsElement(setting,writer);  CommonAttributes.EXPIRY_ADDRESS.marshallAsElement(setting,writer);  CommonAttributes.REDELIVERY_DELAY.marshallAsElement(setting,writer);  CommonAttributes.MAX_DELIVERY_ATTEMPTS.marshallAsElement(setting,writer);  CommonAttributes.MAX_SIZE_BYTES_NODE_NAME.marshallAsElement(setting,writer);  CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME.marshallAsElement(setting,writer);  CommonAttributes.PAGE_MAX_CACHE_SIZE.marshallAsElement(setting,writer);  CommonAttributes.ADDRESS_FULL_MESSAGE_POLICY.marshallAsElement(setting,writer);  CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT.marshallAsElement(setting,writer);  CommonAttributes.LVQ.marshallAsElement(setting,writer);  CommonAttributes.REDISTRIBUTION_DELAY.marshallAsElement(setting,writer);  CommonAttributes.SEND_TO_DLA_ON_NO_ROUTE.marshallAsElement(setting,writer);  writer.writeEndElement();} @TO@ for (Property matchSetting : properties) {  writer.writeStartElement(Element.ADDRESS_SETTING.getLocalName());  writer.writeAttribute(Attribute.MATCH.getLocalName(),matchSetting.getName());  final ModelNode setting=matchSetting.getValue();  CommonAttributes.DEAD_LETTER_ADDRESS.marshallAsElement(setting,writer);  CommonAttributes.EXPIRY_ADDRESS.marshallAsElement(setting,writer);  CommonAttributes.REDELIVERY_DELAY.marshallAsElement(setting,writer);  CommonAttributes.MAX_DELIVERY_ATTEMPTS.marshallAsElement(setting,writer);  CommonAttributes.MAX_SIZE_BYTES.marshallAsElement(setting,writer);  CommonAttributes.PAGE_SIZE_BYTES.marshallAsElement(setting,writer);  CommonAttributes.PAGE_MAX_CACHE_SIZE.marshallAsElement(setting,writer);  CommonAttributes.ADDRESS_FULL_MESSAGE_POLICY.marshallAsElement(setting,writer);  CommonAttributes.MESSAGE_COUNTER_HISTORY_DAY_LIMIT.marshallAsElement(setting,writer);  CommonAttributes.LVQ.marshallAsElement(setting,writer);  CommonAttributes.REDISTRIBUTION_DELAY.marshallAsElement(setting,writer);  CommonAttributes.SEND_TO_DLA_ON_NO_ROUTE.marshallAsElement(setting,writer);  writer.writeEndElement();} @AT@ 82521 @LENGTH@ 1426
---UPD ExpressionStatement@@MethodInvocation:CommonAttributes.MAX_SIZE_BYTES_NODE_NAME.marshallAsElement(setting,writer) @TO@ MethodInvocation:CommonAttributes.MAX_SIZE_BYTES.marshallAsElement(setting,writer) @AT@ 83174 @LENGTH@ 77
------UPD MethodInvocation@@CommonAttributes.MAX_SIZE_BYTES_NODE_NAME.marshallAsElement(setting,writer) @TO@ CommonAttributes.MAX_SIZE_BYTES.marshallAsElement(setting,writer) @AT@ 83174 @LENGTH@ 76
---------UPD QualifiedName@@Name:CommonAttributes.MAX_SIZE_BYTES_NODE_NAME @TO@ Name:CommonAttributes.MAX_SIZE_BYTES @AT@ 83174 @LENGTH@ 41
---UPD ExpressionStatement@@MethodInvocation:CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME.marshallAsElement(setting,writer) @TO@ MethodInvocation:CommonAttributes.PAGE_SIZE_BYTES.marshallAsElement(setting,writer) @AT@ 83268 @LENGTH@ 78
------UPD MethodInvocation@@CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME.marshallAsElement(setting,writer) @TO@ CommonAttributes.PAGE_SIZE_BYTES.marshallAsElement(setting,writer) @AT@ 83268 @LENGTH@ 77
---------UPD QualifiedName@@Name:CommonAttributes.PAGE_SIZE_BYTES_NODE_NAME @TO@ Name:CommonAttributes.PAGE_SIZE_BYTES @AT@ 83268 @LENGTH@ 42


INS MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex, Pageable pageable,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 4450 @LENGTH@ 38
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex, Pageable pageable,  @AT@ 4437 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 4437 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 4442 @LENGTH@ 6
---INS SimpleName@@MethodName:findBySex @TO@ MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex, Pageable pageable,  @AT@ 4450 @LENGTH@ 9
---INS SingleVariableDeclaration@@Sex sex @TO@ MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex, Pageable pageable,  @AT@ 4460 @LENGTH@ 7
------INS SimpleType@@Sex @TO@ SingleVariableDeclaration@@Sex sex @AT@ 4460 @LENGTH@ 3
------INS SimpleName@@sex @TO@ SingleVariableDeclaration@@Sex sex @AT@ 4464 @LENGTH@ 3
---INS SingleVariableDeclaration@@Pageable pageable @TO@ MethodDeclaration@@List<Person>, MethodName:findBySex, Sex sex, Pageable pageable,  @AT@ 4469 @LENGTH@ 17
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 4469 @LENGTH@ 8
------INS SimpleName@@pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 4478 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:extendableSupport.merge(override.extendableSupport,original.extendableSupport) @TO@ MethodInvocation:extendableSupport.merge(override != null ? override.extendableSupport : null,original != null ? original.extendableSupport : null) @AT@ 9841 @LENGTH@ 80
---UPD MethodInvocation@@extendableSupport.merge(override.extendableSupport,original.extendableSupport) @TO@ extendableSupport.merge(override != null ? override.extendableSupport : null,original != null ? original.extendableSupport : null) @AT@ 9841 @LENGTH@ 79
------UPD SimpleName@@MethodName:merge:[override.extendableSupport, original.extendableSupport] @TO@ MethodName:merge:[override != null ? override.extendableSupport : null, original != null ? original.extendableSupport : null] @AT@ 9859 @LENGTH@ 61
---------INS ConditionalExpression@@override != null ? override.extendableSupport : null @TO@ SimpleName@@MethodName:merge:[override.extendableSupport, original.extendableSupport] @AT@ 9865 @LENGTH@ 52
------------INS InfixExpression@@override != null @TO@ ConditionalExpression@@override != null ? override.extendableSupport : null @AT@ 9865 @LENGTH@ 16
---------------INS SimpleName@@override @TO@ InfixExpression@@override != null @AT@ 9865 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@override != null @AT@ 9873 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@override != null @AT@ 9877 @LENGTH@ 4
------------INS QualifiedName@@override.extendableSupport @TO@ ConditionalExpression@@override != null ? override.extendableSupport : null @AT@ 9884 @LENGTH@ 26
---------------MOV SimpleName@@override @TO@ QualifiedName@@override.extendableSupport @AT@ 9865 @LENGTH@ 8
---------------MOV SimpleName@@extendableSupport @TO@ QualifiedName@@override.extendableSupport @AT@ 9874 @LENGTH@ 17
------------INS NullLiteral@@null @TO@ ConditionalExpression@@override != null ? override.extendableSupport : null @AT@ 9913 @LENGTH@ 4
---------DEL QualifiedName@@override.extendableSupport @AT@ 9865 @LENGTH@ 26
---------DEL QualifiedName@@original.extendableSupport @AT@ 9893 @LENGTH@ 26
---------INS ConditionalExpression@@original != null ? original.extendableSupport : null @TO@ SimpleName@@MethodName:merge:[override.extendableSupport, original.extendableSupport] @AT@ 9919 @LENGTH@ 52
------------INS InfixExpression@@original != null @TO@ ConditionalExpression@@original != null ? original.extendableSupport : null @AT@ 9919 @LENGTH@ 16
---------------INS SimpleName@@original @TO@ InfixExpression@@original != null @AT@ 9919 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@original != null @AT@ 9927 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@original != null @AT@ 9931 @LENGTH@ 4
------------INS QualifiedName@@original.extendableSupport @TO@ ConditionalExpression@@original != null ? original.extendableSupport : null @AT@ 9938 @LENGTH@ 26
---------------MOV SimpleName@@original @TO@ QualifiedName@@original.extendableSupport @AT@ 9893 @LENGTH@ 8
---------------MOV SimpleName@@extendableSupport @TO@ QualifiedName@@original.extendableSupport @AT@ 9902 @LENGTH@ 17
------------INS NullLiteral@@null @TO@ ConditionalExpression@@original != null ? original.extendableSupport : null @AT@ 9967 @LENGTH@ 4


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PropertyFileFinder, ConsoleWrapper theConsole, final StateValues stateValues,  @AT@ 2865 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2869 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2869 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2869 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2880 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2892 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2896 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2902 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2916 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2922 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2922 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2931 @LENGTH@ 20


UPD IfStatement@@if (serverId != null) {  props.remove("server.id");  File myId=new File(props.getProperty("dataDir"),"myid");  if (myId.exists()) {    myId.delete();  }  myId.getParentFile().mkdirs();  FileOutputStream fos=new FileOutputStream(myId);  try {    fos.write((serverId + "\n").getBytes());  }  finally {    fos.close();  }} @TO@ if (serverId != null) {  props.remove("server.id");  File myId=new File(props.getProperty("dataDir"),"myid");  if (myId.exists()) {    myId.delete();  }  if (myId.getParentFile() != null) {    myId.getParentFile().mkdirs();  }  FileOutputStream fos=new FileOutputStream(myId);  try {    fos.write((serverId + "\n").getBytes());  }  finally {    fos.close();  }} @AT@ 3015 @LENGTH@ 522
---UPD Block@@ThenBody:{  props.remove("server.id");  File myId=new File(props.getProperty("dataDir"),"myid");  if (myId.exists()) {    myId.delete();  }  myId.getParentFile().mkdirs();  FileOutputStream fos=new FileOutputStream(myId);  try {    fos.write((serverId + "\n").getBytes());  }  finally {    fos.close();  }} @TO@ ThenBody:{  props.remove("server.id");  File myId=new File(props.getProperty("dataDir"),"myid");  if (myId.exists()) {    myId.delete();  }  if (myId.getParentFile() != null) {    myId.getParentFile().mkdirs();  }  FileOutputStream fos=new FileOutputStream(myId);  try {    fos.write((serverId + "\n").getBytes());  }  finally {    fos.close();  }} @AT@ 3037 @LENGTH@ 500
------INS IfStatement@@if (myId.getParentFile() != null) {  myId.getParentFile().mkdirs();} @TO@ Block@@ThenBody:{  props.remove("server.id");  File myId=new File(props.getProperty("dataDir"),"myid");  if (myId.exists()) {    myId.delete();  }  myId.getParentFile().mkdirs();  FileOutputStream fos=new FileOutputStream(myId);  try {    fos.write((serverId + "\n").getBytes());  }  finally {    fos.close();  }} @AT@ 3264 @LENGTH@ 105
---------INS InfixExpression@@myId.getParentFile() != null @TO@ IfStatement@@if (myId.getParentFile() != null) {  myId.getParentFile().mkdirs();} @AT@ 3268 @LENGTH@ 28
------------INS MethodInvocation@@myId.getParentFile() @TO@ InfixExpression@@myId.getParentFile() != null @AT@ 3268 @LENGTH@ 20
---------------INS SimpleName@@Name:myId @TO@ MethodInvocation@@myId.getParentFile() @AT@ 3268 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getParentFile:[] @TO@ MethodInvocation@@myId.getParentFile() @AT@ 3273 @LENGTH@ 15
------------INS Operator@@!= @TO@ InfixExpression@@myId.getParentFile() != null @AT@ 3288 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@myId.getParentFile() != null @AT@ 3292 @LENGTH@ 4
---------INS Block@@ThenBody:{  myId.getParentFile().mkdirs();} @TO@ IfStatement@@if (myId.getParentFile() != null) {  myId.getParentFile().mkdirs();} @AT@ 3299 @LENGTH@ 70
------------MOV ExpressionStatement@@MethodInvocation:myId.getParentFile().mkdirs() @TO@ Block@@ThenBody:{  myId.getParentFile().mkdirs();} @AT@ 3264 @LENGTH@ 30


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[@Converter, public, final]FutureTypeConverter, [TypeConverter] @AT@ 4148 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4148 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4159 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4161 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4174 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4174 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 4174 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 4180 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 4183 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4189 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4189 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4198 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4208 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 4208 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 4215 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 4232 @LENGTH@ 125
------INS ReturnStatement@@MethodInvocation:convertTo(type,exchange,value) @TO@ TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @AT@ 4250 @LENGTH@ 40
---------INS MethodInvocation@@convertTo(type,exchange,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,exchange,value) @AT@ 4257 @LENGTH@ 32
------------INS SimpleName@@MethodName:convertTo:[type, exchange, value] @TO@ MethodInvocation@@convertTo(type,exchange,value) @AT@ 4257 @LENGTH@ 32
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 4267 @LENGTH@ 4
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 4273 @LENGTH@ 8
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 4283 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @AT@ 4301 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 4308 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 4308 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 4318 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 4335 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4342 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:dest.setLoadOnStartup(webFragmentMetaData.getLoadOnStartup()) @TO@ MethodInvocation:dest.setLoadOnStartupInt(webFragmentMetaData.getLoadOnStartupInt()) @AT@ 7870 @LENGTH@ 62
---UPD MethodInvocation@@dest.setLoadOnStartup(webFragmentMetaData.getLoadOnStartup()) @TO@ dest.setLoadOnStartupInt(webFragmentMetaData.getLoadOnStartupInt()) @AT@ 7870 @LENGTH@ 61
------UPD SimpleName@@MethodName:setLoadOnStartup:[webFragmentMetaData.getLoadOnStartup()] @TO@ MethodName:setLoadOnStartupInt:[webFragmentMetaData.getLoadOnStartupInt()] @AT@ 7875 @LENGTH@ 56
---------UPD MethodInvocation@@webFragmentMetaData.getLoadOnStartup() @TO@ webFragmentMetaData.getLoadOnStartupInt() @AT@ 7892 @LENGTH@ 38
------------UPD SimpleName@@MethodName:getLoadOnStartup:[] @TO@ MethodName:getLoadOnStartupInt:[] @AT@ 7912 @LENGTH@ 18


UPD SwitchStatement@@switch (element) {case DEAD_LETTER_ADDRESS_NODE_NAME:case EXPIRY_ADDRESS_NODE_NAME:case REDELIVERY_DELAY_NODE_NAME:case MAX_SIZE_BYTES_NODE_NAME:case PAGE_MAX_CACHE_SIZE:case PAGE_SIZE_BYTES_NODE_NAME:case MESSAGE_COUNTER_HISTORY_DAY_LIMIT_NODE_NAME:case ADDRESS_FULL_MESSAGE_POLICY_NODE_NAME:case LVQ_NODE_NAME:case MAX_DELIVERY_ATTEMPTS:case REDISTRIBUTION_DELAY_NODE_NAME:case SEND_TO_DLA_ON_NO_ROUTE:{    handleElementText(reader,element,addressSettingsSpec);    break SWITCH;  }default :{  break;}} @TO@ switch (element) {case DEAD_LETTER_ADDRESS:case EXPIRY_ADDRESS:case REDELIVERY_DELAY:case MAX_SIZE_BYTES:case PAGE_MAX_CACHE_SIZE:case PAGE_SIZE_BYTES:case MESSAGE_COUNTER_HISTORY_DAY_LIMIT:case ADDRESS_FULL_MESSAGE_POLICY:case LVQ:case MAX_DELIVERY_ATTEMPTS:case REDISTRIBUTION_DELAY:case SEND_TO_DLA_ON_NO_ROUTE:{    handleElementText(reader,element,addressSettingsSpec);    break SWITCH;  }default :{  break;}} @AT@ 51260 @LENGTH@ 809
---UPD SwitchCase@@case DEAD_LETTER_ADDRESS_NODE_NAME: @TO@ case DEAD_LETTER_ADDRESS: @AT@ 51295 @LENGTH@ 35
------UPD SimpleName@@DEAD_LETTER_ADDRESS_NODE_NAME @TO@ DEAD_LETTER_ADDRESS @AT@ 51300 @LENGTH@ 29
---UPD SwitchCase@@case EXPIRY_ADDRESS_NODE_NAME: @TO@ case EXPIRY_ADDRESS: @AT@ 51347 @LENGTH@ 30
------UPD SimpleName@@EXPIRY_ADDRESS_NODE_NAME @TO@ EXPIRY_ADDRESS @AT@ 51352 @LENGTH@ 24
---UPD SwitchCase@@case REDELIVERY_DELAY_NODE_NAME: @TO@ case REDELIVERY_DELAY: @AT@ 51394 @LENGTH@ 32
------UPD SimpleName@@REDELIVERY_DELAY_NODE_NAME @TO@ REDELIVERY_DELAY @AT@ 51399 @LENGTH@ 26
---UPD SwitchCase@@case MAX_SIZE_BYTES_NODE_NAME: @TO@ case MAX_SIZE_BYTES: @AT@ 51443 @LENGTH@ 30
------UPD SimpleName@@MAX_SIZE_BYTES_NODE_NAME @TO@ MAX_SIZE_BYTES @AT@ 51448 @LENGTH@ 24
---UPD SwitchCase@@case PAGE_SIZE_BYTES_NODE_NAME: @TO@ case PAGE_SIZE_BYTES: @AT@ 51532 @LENGTH@ 31
------UPD SimpleName@@PAGE_SIZE_BYTES_NODE_NAME @TO@ PAGE_SIZE_BYTES @AT@ 51537 @LENGTH@ 25
---UPD SwitchCase@@case MESSAGE_COUNTER_HISTORY_DAY_LIMIT_NODE_NAME: @TO@ case MESSAGE_COUNTER_HISTORY_DAY_LIMIT: @AT@ 51580 @LENGTH@ 49
------UPD SimpleName@@MESSAGE_COUNTER_HISTORY_DAY_LIMIT_NODE_NAME @TO@ MESSAGE_COUNTER_HISTORY_DAY_LIMIT @AT@ 51585 @LENGTH@ 43
---UPD SwitchCase@@case ADDRESS_FULL_MESSAGE_POLICY_NODE_NAME: @TO@ case ADDRESS_FULL_MESSAGE_POLICY: @AT@ 51646 @LENGTH@ 43
------UPD SimpleName@@ADDRESS_FULL_MESSAGE_POLICY_NODE_NAME @TO@ ADDRESS_FULL_MESSAGE_POLICY @AT@ 51651 @LENGTH@ 37
---UPD SwitchCase@@case LVQ_NODE_NAME: @TO@ case LVQ: @AT@ 51706 @LENGTH@ 19
------UPD SimpleName@@LVQ_NODE_NAME @TO@ LVQ @AT@ 51711 @LENGTH@ 13
---UPD SwitchCase@@case REDISTRIBUTION_DELAY_NODE_NAME: @TO@ case REDISTRIBUTION_DELAY: @AT@ 51786 @LENGTH@ 36
------UPD SimpleName@@REDISTRIBUTION_DELAY_NODE_NAME @TO@ REDISTRIBUTION_DELAY @AT@ 51791 @LENGTH@ 30


UPD MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @TO@ public, Logger, MethodName:getParentLogger,  @AT@ 10636 @LENGTH@ 122
---DEL SimpleType@@SQLFeatureNotSupportedException @AT@ 10675 @LENGTH@ 31
---UPD ThrowStatement@@ClassInstanceCreation:new SQLFeatureNotSupportedException() @TO@ ClassInstanceCreation:new UnsupportedOperationException() @AT@ 10711 @LENGTH@ 44
------UPD ClassInstanceCreation@@SQLFeatureNotSupportedException[] @TO@ UnsupportedOperationException[] @AT@ 10717 @LENGTH@ 37
---------UPD SimpleType@@SQLFeatureNotSupportedException @TO@ UnsupportedOperationException @AT@ 10721 @LENGTH@ 31


INS MethodDeclaration@@public, K, MethodName:createIdentifier,  @TO@ TypeDeclaration@@[public]SerializationGroupMemberContainer, [BackingCacheEntryFactory<K,V,SerializationGroupMember<K,V,G>>, ReplicationPassivationManager<K,SerializationGroupMember<K,V,G>>, BackingCacheEntryStore<K,V,SerializationGroupMember<K,V,G>>] @AT@ 3817 @LENGTH@ 81
---INS Modifier@@public @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 3817 @LENGTH@ 6
---INS SimpleType@@K @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 3824 @LENGTH@ 1
---INS SimpleName@@MethodName:createIdentifier @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 3826 @LENGTH@ 16
---INS ReturnStatement@@MethodInvocation:this.store.createIdentifier() @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 3855 @LENGTH@ 37
------INS MethodInvocation@@this.store.createIdentifier() @TO@ ReturnStatement@@MethodInvocation:this.store.createIdentifier() @AT@ 3862 @LENGTH@ 29
---------INS FieldAccess@@this.store @TO@ MethodInvocation@@this.store.createIdentifier() @AT@ 3862 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.store @AT@ 3862 @LENGTH@ 4
------------INS SimpleName@@store @TO@ FieldAccess@@this.store @AT@ 3867 @LENGTH@ 5
---------INS SimpleName@@MethodName:createIdentifier:[] @TO@ MethodInvocation@@this.store.createIdentifier() @AT@ 3873 @LENGTH@ 18


DEL IfStatement@@if (uriScheme != null && endpoint != null) {  throw MESSAGES.cannotSetUriScheme();} @AT@ 9358 @LENGTH@ 111
---DEL InfixExpression@@uriScheme != null && endpoint != null @AT@ 9362 @LENGTH@ 37
------DEL InfixExpression@@uriScheme != null @AT@ 9362 @LENGTH@ 17
---------DEL SimpleName@@uriScheme @AT@ 9362 @LENGTH@ 9
---------DEL Operator@@!= @AT@ 9371 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 9375 @LENGTH@ 4
------DEL Operator@@&& @AT@ 9379 @LENGTH@ 2
------DEL InfixExpression@@endpoint != null @AT@ 9383 @LENGTH@ 16
---------DEL SimpleName@@endpoint @AT@ 9383 @LENGTH@ 8
---------DEL Operator@@!= @AT@ 9391 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 9395 @LENGTH@ 4
---DEL Block@@ThenBody:{  throw MESSAGES.cannotSetUriScheme();} @AT@ 9401 @LENGTH@ 68
------DEL ThrowStatement@@MethodInvocation:MESSAGES.cannotSetUriScheme() @AT@ 9419 @LENGTH@ 36
---------DEL MethodInvocation@@MESSAGES.cannotSetUriScheme() @AT@ 9425 @LENGTH@ 29
------------DEL SimpleName@@Name:MESSAGES @AT@ 9425 @LENGTH@ 8
------------DEL SimpleName@@MethodName:cannotSetUriScheme:[] @AT@ 9434 @LENGTH@ 20


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2467 @LENGTH@ 550
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2526 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2526 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2532 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2539 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp, Exception,  @AT@ 1832 @LENGTH@ 111
---UPD Modifier@@protected @TO@ public @AT@ 1832 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1886 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1886 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1892 @LENGTH@ 5


INS IfStatement@@if (modelconf.hasDefined(CommonAttributes.ADVERTISE_SECURITY_KEY)) {  config.setAdvertiseSecurityKey(ADVERTISE_SECURITY_KEY.resolveModelAttribute(context,modelconf).asString());} @TO@ MethodDeclaration@@private, void, MethodName:prepareServiceConfiguration, final OperationContext context, ModelNode modelconf, OperationFailedException,  @AT@ 7261 @LENGTH@ 199
---INS MethodInvocation@@modelconf.hasDefined(CommonAttributes.ADVERTISE_SECURITY_KEY) @TO@ IfStatement@@if (modelconf.hasDefined(CommonAttributes.ADVERTISE_SECURITY_KEY)) {  config.setAdvertiseSecurityKey(ADVERTISE_SECURITY_KEY.resolveModelAttribute(context,modelconf).asString());} @AT@ 7265 @LENGTH@ 61
------INS SimpleName@@Name:modelconf @TO@ MethodInvocation@@modelconf.hasDefined(CommonAttributes.ADVERTISE_SECURITY_KEY) @AT@ 7265 @LENGTH@ 9
------INS SimpleName@@MethodName:hasDefined:[CommonAttributes.ADVERTISE_SECURITY_KEY] @TO@ MethodInvocation@@modelconf.hasDefined(CommonAttributes.ADVERTISE_SECURITY_KEY) @AT@ 7275 @LENGTH@ 51
---------INS QualifiedName@@CommonAttributes.ADVERTISE_SECURITY_KEY @TO@ SimpleName@@MethodName:hasDefined:[CommonAttributes.ADVERTISE_SECURITY_KEY] @AT@ 7286 @LENGTH@ 39
------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.ADVERTISE_SECURITY_KEY @AT@ 7286 @LENGTH@ 16
------------INS SimpleName@@ADVERTISE_SECURITY_KEY @TO@ QualifiedName@@CommonAttributes.ADVERTISE_SECURITY_KEY @AT@ 7303 @LENGTH@ 22
---INS Block@@ThenBody:{  config.setAdvertiseSecurityKey(ADVERTISE_SECURITY_KEY.resolveModelAttribute(context,modelconf).asString());} @TO@ IfStatement@@if (modelconf.hasDefined(CommonAttributes.ADVERTISE_SECURITY_KEY)) {  config.setAdvertiseSecurityKey(ADVERTISE_SECURITY_KEY.resolveModelAttribute(context,modelconf).asString());} @AT@ 7328 @LENGTH@ 132
------MOV ExpressionStatement@@MethodInvocation:config.setAdvertiseSecurityKey(ADVERTISE_SECURITY_KEY.resolveModelAttribute(context,modelconf).asString()) @TO@ Block@@ThenBody:{  config.setAdvertiseSecurityKey(ADVERTISE_SECURITY_KEY.resolveModelAttribute(context,modelconf).asString());} @AT@ 7354 @LENGTH@ 108


UPD IfStatement@@if (line != null) {  if (line.length() > 0) {    lastChar=line.charAt(line.length() - 1);  }  lineCounter++;} else {  lastChar=END_OF_STREAM;} @TO@ if (line != null) {  lastChar='\n';  lineCounter++;} else {  lastChar=END_OF_STREAM;} @AT@ 3884 @LENGTH@ 221
---UPD Block@@ThenBody:{  if (line.length() > 0) {    lastChar=line.charAt(line.length() - 1);  }  lineCounter++;} @TO@ ThenBody:{  lastChar='\n';  lineCounter++;} @AT@ 3902 @LENGTH@ 148
------DEL IfStatement@@if (line.length() > 0) {  lastChar=line.charAt(line.length() - 1);} @AT@ 3916 @LENGTH@ 97
---------DEL InfixExpression@@line.length() > 0 @AT@ 3920 @LENGTH@ 17
------------DEL MethodInvocation@@line.length() @AT@ 3920 @LENGTH@ 13
---------------DEL SimpleName@@Name:line @AT@ 3920 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:length:[] @AT@ 3925 @LENGTH@ 8
------------DEL Operator@@> @AT@ 3933 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 3936 @LENGTH@ 1
---------DEL Block@@ThenBody:{  lastChar=line.charAt(line.length() - 1);} @AT@ 3939 @LENGTH@ 74
------MOV ExpressionStatement@@Assignment:lastChar=line.charAt(line.length() - 1) @TO@ Block@@ThenBody:{  if (line.length() > 0) {    lastChar=line.charAt(line.length() - 1);  }  lineCounter++;} @AT@ 3957 @LENGTH@ 42
---------UPD Assignment@@lastChar=line.charAt(line.length() - 1) @TO@ lastChar='\n' @AT@ 3957 @LENGTH@ 41
------------INS CharacterLiteral@@'\n' @TO@ Assignment@@lastChar=line.charAt(line.length() - 1) @AT@ 3927 @LENGTH@ 4
------------DEL MethodInvocation@@line.charAt(line.length() - 1) @AT@ 3968 @LENGTH@ 30
---------------DEL SimpleName@@Name:line @AT@ 3968 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:charAt:[line.length() - 1] @AT@ 3973 @LENGTH@ 25
------------------DEL InfixExpression@@line.length() - 1 @AT@ 3980 @LENGTH@ 17
---------------------DEL MethodInvocation@@line.length() @AT@ 3980 @LENGTH@ 13
------------------------DEL SimpleName@@Name:line @AT@ 3980 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:length:[] @AT@ 3985 @LENGTH@ 8
---------------------DEL Operator@@- @AT@ 3993 @LENGTH@ 1
---------------------DEL NumberLiteral@@1 @AT@ 3996 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @TO@ MethodInvocation:ThreadsMessages.MESSAGES.boundedQueueThreadPoolServiceNotFound(serviceName) @AT@ 4964 @LENGTH@ 98
---INS MethodInvocation@@ThreadsMessages.MESSAGES.boundedQueueThreadPoolServiceNotFound(serviceName) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @AT@ 4466 @LENGTH@ 75
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.boundedQueueThreadPoolServiceNotFound(serviceName) @AT@ 4466 @LENGTH@ 24
------MOV SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.boundedQueueThreadPoolServiceNotFound(serviceName) @AT@ 5015 @LENGTH@ 45
---------INS SimpleName@@serviceName @TO@ SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @AT@ 4529 @LENGTH@ 11
---------INS SimpleName@@serviceName @TO@ SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @AT@ 4529 @LENGTH@ 11
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("Service " + serviceName + " not found.")] @AT@ 4970 @LENGTH@ 91
------DEL New@@new @AT@ 4970 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 4974 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("Service " + serviceName + " not found.") @AT@ 4999 @LENGTH@ 61
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 4999 @LENGTH@ 15
------------DEL New@@new @AT@ 4999 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 5003 @LENGTH@ 9


UPD MethodDeclaration@@private, ModelNode, MethodName:parseBootstrapContexts, final XMLExtendedStreamReader reader, final ModelNode parentAddress, XMLStreamException,  @TO@ private, void, MethodName:parseBootstrapContexts, final XMLExtendedStreamReader reader, final ModelNode parentAddress, final List<ModelNode> list, XMLStreamException,  @AT@ 32858 @LENGTH@ 3069
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, ModelNode, MethodName:parseBootstrapContexts, final XMLExtendedStreamReader reader, final ModelNode parentAddress, XMLStreamException,  @AT@ 32850 @LENGTH@ 4
---DEL SimpleType@@ModelNode @AT@ 32866 @LENGTH@ 9
---INS SingleVariableDeclaration@@final List<ModelNode> list @TO@ MethodDeclaration@@private, ModelNode, MethodName:parseBootstrapContexts, final XMLExtendedStreamReader reader, final ModelNode parentAddress, XMLStreamException,  @AT@ 32947 @LENGTH@ 26
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final List<ModelNode> list @AT@ 32947 @LENGTH@ 5
------INS ParameterizedType@@List<ModelNode> @TO@ SingleVariableDeclaration@@final List<ModelNode> list @AT@ 32953 @LENGTH@ 15
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 32953 @LENGTH@ 4
---------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 32958 @LENGTH@ 9
------INS SimpleName@@list @TO@ SingleVariableDeclaration@@final List<ModelNode> list @AT@ 32969 @LENGTH@ 4
---DEL SimpleType@@XMLStreamException @AT@ 32975 @LENGTH@ 18
---INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@private, ModelNode, MethodName:parseBootstrapContexts, final XMLExtendedStreamReader reader, final ModelNode parentAddress, XMLStreamException,  @AT@ 32982 @LENGTH@ 18
---DEL VariableDeclarationStatement@@ModelNode bootstrapContextOperation=null; @AT@ 33008 @LENGTH@ 43
------DEL SimpleType@@ModelNode @AT@ 33008 @LENGTH@ 9
------DEL VariableDeclarationFragment@@bootstrapContextOperation=null @AT@ 33018 @LENGTH@ 32
---------DEL SimpleName@@bootstrapContextOperation @AT@ 33018 @LENGTH@ 25
---------DEL NullLiteral@@null @AT@ 33046 @LENGTH@ 4
---UPD WhileStatement@@while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  final Element element=Element.forName(reader.getLocalName());switch (element) {case BOOTSTRAP_CONTEXT:{      bootstrapContextOperation=new ModelNode();      bootstrapContextOperation.get(OP).set(ADD);      final int cnt=reader.getAttributeCount();      String name=null;      String wmName=null;      for (int i=0; i < cnt; i++) {        final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{            name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());            BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);            break;          }case WORKMANAGER:{          wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);          break;        }default :{        throw unexpectedAttribute(reader,i);      }  }}if (name == null) {  if (DEFAULT_NAME.equals(wmName)) {    name=DEFAULT_NAME;  } else {    throw new XMLStreamException("name attribute is mandatory for workmanager element");  }}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}}} @TO@ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {  final Element element=Element.forName(reader.getLocalName());switch (element) {case BOOTSTRAP_CONTEXT:{      ModelNode bootstrapContextOperation=new ModelNode();      bootstrapContextOperation.get(OP).set(ADD);      final int cnt=reader.getAttributeCount();      String name=null;      String wmName=null;      for (int i=0; i < cnt; i++) {        final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{            name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());            BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);            break;          }case WORKMANAGER:{          wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);          break;        }default :{        throw unexpectedAttribute(reader,i);      }  }}if (name == null) {  if (DEFAULT_NAME.equals(wmName)) {    name=DEFAULT_NAME;  } else {    throw new XMLStreamException("name attribute is mandatory for workmanager element");  }}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);list.add(bootstrapContextOperation);break;}default :{throw unexpectedElement(reader);}}} @AT@ 33064 @LENGTH@ 2807
------UPD Block@@WhileBody:{  final Element element=Element.forName(reader.getLocalName());switch (element) {case BOOTSTRAP_CONTEXT:{      bootstrapContextOperation=new ModelNode();      bootstrapContextOperation.get(OP).set(ADD);      final int cnt=reader.getAttributeCount();      String name=null;      String wmName=null;      for (int i=0; i < cnt; i++) {        final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{            name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());            BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);            break;          }case WORKMANAGER:{          wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);          break;        }default :{        throw unexpectedAttribute(reader,i);      }  }}if (name == null) {  if (DEFAULT_NAME.equals(wmName)) {    name=DEFAULT_NAME;  } else {    throw new XMLStreamException("name attribute is mandatory for workmanager element");  }}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}}} @TO@ WhileBody:{  final Element element=Element.forName(reader.getLocalName());switch (element) {case BOOTSTRAP_CONTEXT:{      ModelNode bootstrapContextOperation=new ModelNode();      bootstrapContextOperation.get(OP).set(ADD);      final int cnt=reader.getAttributeCount();      String name=null;      String wmName=null;      for (int i=0; i < cnt; i++) {        final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{            name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());            BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);            break;          }case WORKMANAGER:{          wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);          break;        }default :{        throw unexpectedAttribute(reader,i);      }  }}if (name == null) {  if (DEFAULT_NAME.equals(wmName)) {    name=DEFAULT_NAME;  } else {    throw new XMLStreamException("name attribute is mandatory for workmanager element");  }}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);list.add(bootstrapContextOperation);break;}default :{throw unexpectedElement(reader);}}} @AT@ 33124 @LENGTH@ 2747
---------UPD SwitchStatement@@switch (element) {case BOOTSTRAP_CONTEXT:{    bootstrapContextOperation=new ModelNode();    bootstrapContextOperation.get(OP).set(ADD);    final int cnt=reader.getAttributeCount();    String name=null;    String wmName=null;    for (int i=0; i < cnt; i++) {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{          name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);          break;        }case WORKMANAGER:{        wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());        BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);        break;      }default :{      throw unexpectedAttribute(reader,i);    }}}if (name == null) {if (DEFAULT_NAME.equals(wmName)) {  name=DEFAULT_NAME;} else {  throw new XMLStreamException("name attribute is mandatory for workmanager element");}}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}} @TO@ switch (element) {case BOOTSTRAP_CONTEXT:{    ModelNode bootstrapContextOperation=new ModelNode();    bootstrapContextOperation.get(OP).set(ADD);    final int cnt=reader.getAttributeCount();    String name=null;    String wmName=null;    for (int i=0; i < cnt; i++) {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{          name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);          break;        }case WORKMANAGER:{        wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());        BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);        break;      }default :{      throw unexpectedAttribute(reader,i);    }}}if (name == null) {if (DEFAULT_NAME.equals(wmName)) {  name=DEFAULT_NAME;} else {  throw new XMLStreamException("name attribute is mandatory for workmanager element");}}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);list.add(bootstrapContextOperation);break;}default :{throw unexpectedElement(reader);}} @AT@ 33224 @LENGTH@ 2633
------------INS VariableDeclarationStatement@@ModelNode bootstrapContextOperation=new ModelNode(); @TO@ SwitchStatement@@switch (element) {case BOOTSTRAP_CONTEXT:{    bootstrapContextOperation=new ModelNode();    bootstrapContextOperation.get(OP).set(ADD);    final int cnt=reader.getAttributeCount();    String name=null;    String wmName=null;    for (int i=0; i < cnt; i++) {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{          name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);          break;        }case WORKMANAGER:{        wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());        BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);        break;      }default :{      throw unexpectedAttribute(reader,i);    }}}if (name == null) {if (DEFAULT_NAME.equals(wmName)) {  name=DEFAULT_NAME;} else {  throw new XMLStreamException("name attribute is mandatory for workmanager element");}}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}} @AT@ 33264 @LENGTH@ 54
---------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode bootstrapContextOperation=new ModelNode(); @AT@ 33264 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@bootstrapContextOperation=new ModelNode() @TO@ VariableDeclarationStatement@@ModelNode bootstrapContextOperation=new ModelNode(); @AT@ 33274 @LENGTH@ 43
------------------INS SimpleName@@bootstrapContextOperation @TO@ VariableDeclarationFragment@@bootstrapContextOperation=new ModelNode() @AT@ 33274 @LENGTH@ 25
------------------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@bootstrapContextOperation=new ModelNode() @AT@ 33302 @LENGTH@ 15
---------------------MOV New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 33341 @LENGTH@ 3
---------------------MOV SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 33345 @LENGTH@ 9
------------DEL ExpressionStatement@@Assignment:bootstrapContextOperation=new ModelNode() @AT@ 33313 @LENGTH@ 44
---------------DEL Assignment@@bootstrapContextOperation=new ModelNode() @AT@ 33313 @LENGTH@ 43
------------------DEL SimpleName@@bootstrapContextOperation @AT@ 33313 @LENGTH@ 25
------------------DEL Operator@@= @AT@ 33338 @LENGTH@ 1
------------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 33341 @LENGTH@ 15
------------INS ExpressionStatement@@MethodInvocation:list.add(bootstrapContextOperation) @TO@ SwitchStatement@@switch (element) {case BOOTSTRAP_CONTEXT:{    bootstrapContextOperation=new ModelNode();    bootstrapContextOperation.get(OP).set(ADD);    final int cnt=reader.getAttributeCount();    String name=null;    String wmName=null;    for (int i=0; i < cnt; i++) {      final Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));switch (attribute) {case NAME:{          name=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().getXmlName());          BootstrapContextAdd.BootstrapCtxParameters.NAME.getAttribute().parseAndSetParameter(name,bootstrapContextOperation,reader);          break;        }case WORKMANAGER:{        wmName=rawAttributeText(reader,BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().getXmlName());        BootstrapContextAdd.BootstrapCtxParameters.WORKMANAGER.getAttribute().parseAndSetParameter(wmName,bootstrapContextOperation,reader);        break;      }default :{      throw unexpectedAttribute(reader,i);    }}}if (name == null) {if (DEFAULT_NAME.equals(wmName)) {  name=DEFAULT_NAME;} else {  throw new XMLStreamException("name attribute is mandatory for workmanager element");}}final ModelNode bootstrapContextAddress=parentAddress.clone();bootstrapContextAddress.add(BOOTSTRAP_CONTEXT,name);bootstrapContextAddress.protect();bootstrapContextOperation.get(OP_ADDR).set(bootstrapContextAddress);requireNoContent(reader);break;}default :{throw unexpectedElement(reader);}} @AT@ 35662 @LENGTH@ 36
---------------INS MethodInvocation@@list.add(bootstrapContextOperation) @TO@ ExpressionStatement@@MethodInvocation:list.add(bootstrapContextOperation) @AT@ 35662 @LENGTH@ 35
------------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(bootstrapContextOperation) @AT@ 35662 @LENGTH@ 4
------------------INS SimpleName@@MethodName:add:[bootstrapContextOperation] @TO@ MethodInvocation@@list.add(bootstrapContextOperation) @AT@ 35667 @LENGTH@ 30
---------------------INS SimpleName@@bootstrapContextOperation @TO@ SimpleName@@MethodName:add:[bootstrapContextOperation] @AT@ 35671 @LENGTH@ 25
---DEL ReturnStatement@@SimpleName:bootstrapContextOperation @AT@ 35884 @LENGTH@ 33
------DEL SimpleName@@bootstrapContextOperation @AT@ 35891 @LENGTH@ 25


MOV MethodDeclaration@@String, MethodName:handlerAttachedToLoggers, String handlerName, Collection<String> loggers,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]LoggingMessages,  @AT@ 5625 @LENGTH@ 73


UPD VariableDeclarationStatement@@long delay=calculateDelay(exchange); @TO@ long delay; @AT@ 3997 @LENGTH@ 38
---UPD VariableDeclarationFragment@@delay=calculateDelay(exchange) @TO@ delay @AT@ 4002 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerReadOnlyAttribute(attr,null) @TO@ MethodInvocation:resourceRegistration.registerReadWriteAttribute(attr,null,new ReloadRequiredWriteAttributeHandler(attr)) @AT@ 2980 @LENGTH@ 59
---UPD MethodInvocation@@resourceRegistration.registerReadOnlyAttribute(attr,null) @TO@ resourceRegistration.registerReadWriteAttribute(attr,null,new ReloadRequiredWriteAttributeHandler(attr)) @AT@ 2980 @LENGTH@ 58
------UPD SimpleName@@MethodName:registerReadOnlyAttribute:[attr, null] @TO@ MethodName:registerReadWriteAttribute:[attr, null, new ReloadRequiredWriteAttributeHandler(attr)] @AT@ 3001 @LENGTH@ 37
---------INS ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[attr] @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[attr, null] @AT@ 3136 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[attr] @AT@ 3136 @LENGTH@ 3
------------INS SimpleType@@ReloadRequiredWriteAttributeHandler @TO@ ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[attr] @AT@ 3140 @LENGTH@ 35
------------INS SimpleName@@attr @TO@ ClassInstanceCreation@@ReloadRequiredWriteAttributeHandler[attr] @AT@ 3176 @LENGTH@ 4


UPD VariableDeclarationStatement@@PersistenceUnitMetadataHolder holder=new PersistenceUnitMetadataHolder(); @TO@ PersistenceUnitMetadataHolder holder=new PersistenceUnitMetadataHolder(new ArrayList<PersistenceUnitMetadata>(flattened.values())); @AT@ 16120 @LENGTH@ 75
---UPD VariableDeclarationFragment@@holder=new PersistenceUnitMetadataHolder() @TO@ holder=new PersistenceUnitMetadataHolder(new ArrayList<PersistenceUnitMetadata>(flattened.values())) @AT@ 16150 @LENGTH@ 44
------UPD ClassInstanceCreation@@PersistenceUnitMetadataHolder[] @TO@ PersistenceUnitMetadataHolder[new ArrayList<PersistenceUnitMetadata>(flattened.values())] @AT@ 16159 @LENGTH@ 35
---------MOV ClassInstanceCreation@@ArrayList<PersistenceUnitMetadata>[flattened.values()] @TO@ ClassInstanceCreation@@PersistenceUnitMetadataHolder[] @AT@ 16231 @LENGTH@ 58


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3020 @LENGTH@ 1042
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 3079 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3079 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3085 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3092 @LENGTH@ 11


UPD Block@@ThenBody:{  final SessionID sessionID;  try {    sessionID=EJBClient.createSession(appName,moduleName,beanName,distinctName);  } catch (  Exception e) {    throw new RuntimeException(e);  }  ejbLocator=new StatefulEJBLocator(viewClass,appName,moduleName,beanName,distinctName,sessionID);} @TO@ ThenBody:{  try {    ejbLocator=EJBClient.createSession(viewClass,appName,moduleName,beanName,distinctName);  } catch (  Exception e) {    throw new RuntimeException(e);  }} @AT@ 3124 @LENGTH@ 379
---DEL VariableDeclarationStatement@@final SessionID sessionID; @AT@ 3138 @LENGTH@ 26
------DEL Modifier@@final @AT@ 3138 @LENGTH@ 5
------DEL SimpleType@@SessionID @AT@ 3144 @LENGTH@ 9
------DEL VariableDeclarationFragment@@sessionID @AT@ 3154 @LENGTH@ 9
---------DEL SimpleName@@sessionID @AT@ 3154 @LENGTH@ 9
---UPD TryStatement@@try {  sessionID=EJBClient.createSession(appName,moduleName,beanName,distinctName);} catch (Exception e) {  throw new RuntimeException(e);} @TO@ try {  ejbLocator=EJBClient.createSession(viewClass,appName,moduleName,beanName,distinctName);} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 3177 @LENGTH@ 200
------UPD ExpressionStatement@@Assignment:sessionID=EJBClient.createSession(appName,moduleName,beanName,distinctName) @TO@ Assignment:ejbLocator=EJBClient.createSession(viewClass,appName,moduleName,beanName,distinctName) @AT@ 3199 @LENGTH@ 81
---------UPD Assignment@@sessionID=EJBClient.createSession(appName,moduleName,beanName,distinctName) @TO@ ejbLocator=EJBClient.createSession(viewClass,appName,moduleName,beanName,distinctName) @AT@ 3199 @LENGTH@ 80
------------UPD SimpleName@@sessionID @TO@ ejbLocator @AT@ 3199 @LENGTH@ 9
------------UPD MethodInvocation@@EJBClient.createSession(appName,moduleName,beanName,distinctName) @TO@ EJBClient.createSession(viewClass,appName,moduleName,beanName,distinctName) @AT@ 3211 @LENGTH@ 68
---------------UPD SimpleName@@MethodName:createSession:[appName, moduleName, beanName, distinctName] @TO@ MethodName:createSession:[viewClass, appName, moduleName, beanName, distinctName] @AT@ 3221 @LENGTH@ 58
------------------INS SimpleName@@viewClass @TO@ SimpleName@@MethodName:createSession:[appName, moduleName, beanName, distinctName] @AT@ 3104 @LENGTH@ 9
---DEL ExpressionStatement@@Assignment:ejbLocator=new StatefulEJBLocator(viewClass,appName,moduleName,beanName,distinctName,sessionID) @AT@ 3390 @LENGTH@ 103
------DEL Assignment@@ejbLocator=new StatefulEJBLocator(viewClass,appName,moduleName,beanName,distinctName,sessionID) @AT@ 3390 @LENGTH@ 102
---------DEL SimpleName@@ejbLocator @AT@ 3390 @LENGTH@ 10
---------DEL Operator@@= @AT@ 3400 @LENGTH@ 1
---------DEL ClassInstanceCreation@@StatefulEJBLocator[viewClass, appName, moduleName, beanName, distinctName, sessionID] @AT@ 3403 @LENGTH@ 89
------------DEL New@@new @AT@ 3403 @LENGTH@ 3
------------DEL SimpleType@@StatefulEJBLocator @AT@ 3407 @LENGTH@ 18
------------DEL SimpleName@@viewClass @AT@ 3426 @LENGTH@ 9
------------DEL SimpleName@@appName @AT@ 3437 @LENGTH@ 7
------------DEL SimpleName@@moduleName @AT@ 3446 @LENGTH@ 10
------------DEL SimpleName@@beanName @AT@ 3458 @LENGTH@ 8
------------DEL SimpleName@@distinctName @AT@ 3468 @LENGTH@ 12
------------DEL SimpleName@@sessionID @AT@ 3482 @LENGTH@ 9


UPD FieldDeclaration@@static, final, String, [UPDATES_URL=BASE_URL + "{id}/network/updates?format=json{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}"] @TO@ static, final, String, [UPDATES_URL=BASE_URL + "{id}/network/updates?{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}&format=json"] @AT@ 5581 @LENGTH@ 149
---UPD VariableDeclarationFragment@@UPDATES_URL=BASE_URL + "{id}/network/updates?format=json{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}" @TO@ UPDATES_URL=BASE_URL + "{id}/network/updates?{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}&format=json" @AT@ 5601 @LENGTH@ 128
------UPD InfixExpression@@BASE_URL + "{id}/network/updates?format=json{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}" @TO@ BASE_URL + "{id}/network/updates?{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}&format=json" @AT@ 5615 @LENGTH@ 114
---------UPD StringLiteral@@"{id}/network/updates?format=json{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}" @TO@ "{id}/network/updates?{&count}{&start}{&scope}{type}{&before}{&after}{&show-hidden-members}&format=json" @AT@ 5626 @LENGTH@ 103


UPD IfStatement@@if (!DONE) {  DONE=true;  exchange.getContext().stopRoute("trigger");  Thread.sleep(5000);  exchange.getContext().startRoute("trigger");} @TO@ if (!done) {  done=true;  exchange.getContext().stopRoute("trigger");  Thread.sleep(5000);  exchange.getContext().startRoute("trigger");} @AT@ 2446 @LENGTH@ 292
---UPD PrefixExpression@@!DONE @TO@ !done @AT@ 2450 @LENGTH@ 5
------UPD SimpleName@@DONE @TO@ done @AT@ 2451 @LENGTH@ 4
---UPD Block@@ThenBody:{  DONE=true;  exchange.getContext().stopRoute("trigger");  Thread.sleep(5000);  exchange.getContext().startRoute("trigger");} @TO@ ThenBody:{  done=true;  exchange.getContext().stopRoute("trigger");  Thread.sleep(5000);  exchange.getContext().startRoute("trigger");} @AT@ 2457 @LENGTH@ 281
------UPD ExpressionStatement@@Assignment:DONE=true @TO@ Assignment:done=true @AT@ 2491 @LENGTH@ 12
---------UPD Assignment@@DONE=true @TO@ done=true @AT@ 2491 @LENGTH@ 11
------------UPD SimpleName@@DONE @TO@ done @AT@ 2491 @LENGTH@ 4


UPD SwitchStatement@@switch (element) {case FILTER_NAME:  filterMapping.setFilterName(getElementText(reader));break;case URL_PATTERN:List<String> urlPatterns=filterMapping.getUrlPatterns();if (urlPatterns == null) {urlPatterns=new ArrayList<String>();filterMapping.setUrlPatterns(urlPatterns);}urlPatterns.add(getElementText(reader));break;case SERVLET_NAME:List<String> servletNames=filterMapping.getServletNames();if (servletNames == null) {servletNames=new ArrayList<String>();filterMapping.setServletNames(servletNames);}servletNames.add(getElementText(reader));break;case DISPATCHER:List<DispatcherType> dispatchers=filterMapping.getDispatchers();if (dispatchers == null) {dispatchers=new ArrayList<DispatcherType>();filterMapping.setDispatchers(dispatchers);}dispatchers.add(DispatcherType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @TO@ switch (element) {case FILTER_NAME:  filterMapping.setFilterName(getElementText(reader));break;case URL_PATTERN:List<String> urlPatterns=filterMapping.getUrlPatterns();if (urlPatterns == null) {urlPatterns=new ArrayList<String>();filterMapping.setUrlPatterns(urlPatterns);}urlPatterns.add(getElementText(reader));break;case SERVLET_NAME:List<String> servletNames=filterMapping.getServletNames();if (servletNames == null) {servletNames=new ArrayList<String>();filterMapping.setServletNames(servletNames);}servletNames.add(getElementText(reader));break;case DISPATCHER:List<DispatcherType> dispatchers=filterMapping.getDispatchers();if (dispatchers == null) {dispatchers=new ArrayList<DispatcherType>();filterMapping.setDispatchers(dispatchers);}try {dispatchers.add(DispatcherType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}break;default :throw unexpectedElement(reader);} @AT@ 2456 @LENGTH@ 1471
---INS TryStatement@@try {  dispatchers.add(DispatcherType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case FILTER_NAME:  filterMapping.setFilterName(getElementText(reader));break;case URL_PATTERN:List<String> urlPatterns=filterMapping.getUrlPatterns();if (urlPatterns == null) {urlPatterns=new ArrayList<String>();filterMapping.setUrlPatterns(urlPatterns);}urlPatterns.add(getElementText(reader));break;case SERVLET_NAME:List<String> servletNames=filterMapping.getServletNames();if (servletNames == null) {servletNames=new ArrayList<String>();filterMapping.setServletNames(servletNames);}servletNames.add(getElementText(reader));break;case DISPATCHER:List<DispatcherType> dispatchers=filterMapping.getDispatchers();if (dispatchers == null) {dispatchers=new ArrayList<DispatcherType>();filterMapping.setDispatchers(dispatchers);}dispatchers.add(DispatcherType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @AT@ 3764 @LENGTH@ 233
------MOV ExpressionStatement@@MethodInvocation:dispatchers.add(DispatcherType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  dispatchers.add(DispatcherType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3764 @LENGTH@ 64
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  dispatchers.add(DispatcherType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3881 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3888 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3888 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3913 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3942 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 3948 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 3948 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3964 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3972 @LENGTH@ 1


UPD IfStatement@@if (result.size() > 0) {  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @TO@ if (result.size() > 0) {  if (hasMultipleMatches(result)) {    result=pruneAliasDuplicates(result);  }  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @AT@ 2561 @LENGTH@ 1179
---UPD Block@@ThenBody:{  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @TO@ ThenBody:{  if (hasMultipleMatches(result)) {    result=pruneAliasDuplicates(result);  }  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @AT@ 2584 @LENGTH@ 1156
------INS IfStatement@@if (hasMultipleMatches(result)) {  result=pruneAliasDuplicates(result);} @TO@ Block@@ThenBody:{  if (hasMultipleMatches(result)) {    result=pruneIPTypes(result);  }  if (hasMultipleMatches(result)) {    Map<NetworkInterface,Set<InetAddress>> selected=selectInterfaceAndAddress(result);    if (interfaceName != null) {      Map.Entry<NetworkInterface,Set<InetAddress>> entry=selected.entrySet().iterator().next();      warnMultipleValidInterfaces(interfaceName,result,entry.getKey(),entry.getValue().iterator().next());    }    result=selected;  }} @AT@ 2628 @LENGTH@ 269
---------INS MethodInvocation@@hasMultipleMatches(result) @TO@ IfStatement@@if (hasMultipleMatches(result)) {  result=pruneAliasDuplicates(result);} @AT@ 2632 @LENGTH@ 26
------------INS SimpleName@@MethodName:hasMultipleMatches:[result] @TO@ MethodInvocation@@hasMultipleMatches(result) @AT@ 2632 @LENGTH@ 26
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:hasMultipleMatches:[result] @AT@ 2651 @LENGTH@ 6
---------INS Block@@ThenBody:{  result=pruneAliasDuplicates(result);} @TO@ IfStatement@@if (hasMultipleMatches(result)) {  result=pruneAliasDuplicates(result);} @AT@ 2660 @LENGTH@ 237
------------INS ExpressionStatement@@Assignment:result=pruneAliasDuplicates(result) @TO@ Block@@ThenBody:{  result=pruneAliasDuplicates(result);} @AT@ 2845 @LENGTH@ 38
---------------INS Assignment@@result=pruneAliasDuplicates(result) @TO@ ExpressionStatement@@Assignment:result=pruneAliasDuplicates(result) @AT@ 2845 @LENGTH@ 37
------------------INS SimpleName@@result @TO@ Assignment@@result=pruneAliasDuplicates(result) @AT@ 2845 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@result=pruneAliasDuplicates(result) @AT@ 2851 @LENGTH@ 1
------------------INS MethodInvocation@@pruneAliasDuplicates(result) @TO@ Assignment@@result=pruneAliasDuplicates(result) @AT@ 2854 @LENGTH@ 28
---------------------INS SimpleName@@MethodName:pruneAliasDuplicates:[result] @TO@ MethodInvocation@@pruneAliasDuplicates(result) @AT@ 2854 @LENGTH@ 28
------------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:pruneAliasDuplicates:[result] @AT@ 2875 @LENGTH@ 6


UPD MethodDeclaration@@protected, Processor, MethodName:chooseProcessor, List<Processor> processors, Exchange exchange,  @TO@ protected, synchronized, Processor, MethodName:chooseProcessor, List<Processor> processors, Exchange exchange,  @AT@ 1195 @LENGTH@ 726
---INS Modifier@@synchronized @TO@ MethodDeclaration@@protected, Processor, MethodName:chooseProcessor, List<Processor> processors, Exchange exchange,  @AT@ 1205 @LENGTH@ 12


MOV ExpressionStatement@@MethodInvocation:in.await() @TO@ MethodDeclaration@@public, Void, MethodName:call, Exception,  @AT@ 3091 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.failedToCloseResource(t,closeable) @TO@ MethodInvocation:MGMT_OP_LOGGER.failedToCloseResource(t,closeable) @AT@ 3902 @LENGTH@ 48
---UPD MethodInvocation@@ROOT_LOGGER.failedToCloseResource(t,closeable) @TO@ MGMT_OP_LOGGER.failedToCloseResource(t,closeable) @AT@ 3902 @LENGTH@ 47
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 3902 @LENGTH@ 11


UPD TypeDeclaration@@[public]Cache, [Removable<K>, AffinitySupport<K>] @TO@ [public]Cache, [Removable<K>, AffinitySupport<K>, IdentifierFactory<K>] @AT@ 1307 @LENGTH@ 866
---INS ParameterizedType@@IdentifierFactory<K> @TO@ TypeDeclaration@@[public]Cache, [Removable<K>, AffinitySupport<K>] @AT@ 1423 @LENGTH@ 20
------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 1423 @LENGTH@ 17
------INS SimpleType@@K @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 1441 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException() @TO@ MethodInvocation:ThreadsMessages.MESSAGES.threadFactoryUninitialized() @AT@ 2806 @LENGTH@ 34
---DEL ClassInstanceCreation@@IllegalStateException[] @AT@ 2812 @LENGTH@ 27
------DEL New@@new @AT@ 2812 @LENGTH@ 3
------DEL SimpleType@@IllegalStateException @AT@ 2816 @LENGTH@ 21
---INS MethodInvocation@@ThreadsMessages.MESSAGES.threadFactoryUninitialized() @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException() @AT@ 2826 @LENGTH@ 53
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.threadFactoryUninitialized() @AT@ 2826 @LENGTH@ 24
------INS SimpleName@@MethodName:threadFactoryUninitialized:[] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.threadFactoryUninitialized() @AT@ 2851 @LENGTH@ 28


INS MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ TypeDeclaration@@[public]ContainerImpl, [Container] @AT@ 19323 @LENGTH@ 307
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19323 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19330 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19338 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19345 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 19345 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 19352 @LENGTH@ 1
---INS IfStatement@@if (this == o) return true; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19365 @LENGTH@ 27
------INS InfixExpression@@this == o @TO@ IfStatement@@if (this == o) return true; @AT@ 19369 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ InfixExpression@@this == o @AT@ 19369 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == o @AT@ 19373 @LENGTH@ 2
---------INS SimpleName@@o @TO@ InfixExpression@@this == o @AT@ 19377 @LENGTH@ 1
------INS Block@@ThenBody:return true; @TO@ IfStatement@@if (this == o) return true; @AT@ 19380 @LENGTH@ 12
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:return true; @AT@ 19380 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 19387 @LENGTH@ 4
---INS IfStatement@@if (o == null || getClass() != o.getClass()) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19401 @LENGTH@ 58
------INS InfixExpression@@o == null || getClass() != o.getClass() @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) return false; @AT@ 19405 @LENGTH@ 39
---------INS InfixExpression@@o == null @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 19405 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 19405 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 19406 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 19410 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 19414 @LENGTH@ 2
---------INS InfixExpression@@getClass() != o.getClass() @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 19418 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 19418 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 19428 @LENGTH@ 2
------------INS MethodInvocation@@o.getClass() @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 19432 @LENGTH@ 12
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass() @AT@ 19432 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass() @AT@ 19434 @LENGTH@ 10
------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) return false; @AT@ 19446 @LENGTH@ 13
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 19446 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 19453 @LENGTH@ 5
---INS VariableDeclarationStatement@@ContainerImpl container=(ContainerImpl)o; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19469 @LENGTH@ 44
------INS SimpleType@@ContainerImpl @TO@ VariableDeclarationStatement@@ContainerImpl container=(ContainerImpl)o; @AT@ 19469 @LENGTH@ 13
------INS VariableDeclarationFragment@@container=(ContainerImpl)o @TO@ VariableDeclarationStatement@@ContainerImpl container=(ContainerImpl)o; @AT@ 19483 @LENGTH@ 29
---------INS SimpleName@@container @TO@ VariableDeclarationFragment@@container=(ContainerImpl)o @AT@ 19483 @LENGTH@ 9
---------INS CastExpression@@(ContainerImpl)o @TO@ VariableDeclarationFragment@@container=(ContainerImpl)o @AT@ 19495 @LENGTH@ 17
------------INS SimpleType@@ContainerImpl @TO@ CastExpression@@(ContainerImpl)o @AT@ 19496 @LENGTH@ 13
------------INS SimpleName@@o @TO@ CastExpression@@(ContainerImpl)o @AT@ 19511 @LENGTH@ 1
---INS IfStatement@@if (id != null ? !id.equals(container.id) : container.id != null) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19523 @LENGTH@ 79
------INS ConditionalExpression@@id != null ? !id.equals(container.id) : container.id != null @TO@ IfStatement@@if (id != null ? !id.equals(container.id) : container.id != null) return false; @AT@ 19527 @LENGTH@ 60
---------INS InfixExpression@@id != null @TO@ ConditionalExpression@@id != null ? !id.equals(container.id) : container.id != null @AT@ 19527 @LENGTH@ 10
------------INS SimpleName@@id @TO@ InfixExpression@@id != null @AT@ 19527 @LENGTH@ 2
------------INS Operator@@!= @TO@ InfixExpression@@id != null @AT@ 19529 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@id != null @AT@ 19533 @LENGTH@ 4
---------INS PrefixExpression@@!id.equals(container.id) @TO@ ConditionalExpression@@id != null ? !id.equals(container.id) : container.id != null @AT@ 19540 @LENGTH@ 24
------------INS Operator@@! @TO@ PrefixExpression@@!id.equals(container.id) @AT@ 19540 @LENGTH@ 1
------------INS MethodInvocation@@id.equals(container.id) @TO@ PrefixExpression@@!id.equals(container.id) @AT@ 19541 @LENGTH@ 23
---------------INS SimpleName@@Name:id @TO@ MethodInvocation@@id.equals(container.id) @AT@ 19541 @LENGTH@ 2
---------------INS SimpleName@@MethodName:equals:[container.id] @TO@ MethodInvocation@@id.equals(container.id) @AT@ 19544 @LENGTH@ 20
------------------INS QualifiedName@@container.id @TO@ SimpleName@@MethodName:equals:[container.id] @AT@ 19551 @LENGTH@ 12
---------------------INS SimpleName@@container @TO@ QualifiedName@@container.id @AT@ 19551 @LENGTH@ 9
---------------------INS SimpleName@@id @TO@ QualifiedName@@container.id @AT@ 19561 @LENGTH@ 2
---------INS InfixExpression@@container.id != null @TO@ ConditionalExpression@@id != null ? !id.equals(container.id) : container.id != null @AT@ 19567 @LENGTH@ 20
------------INS QualifiedName@@container.id @TO@ InfixExpression@@container.id != null @AT@ 19567 @LENGTH@ 12
---------------INS SimpleName@@container @TO@ QualifiedName@@container.id @AT@ 19567 @LENGTH@ 9
---------------INS SimpleName@@id @TO@ QualifiedName@@container.id @AT@ 19577 @LENGTH@ 2
------------INS Operator@@!= @TO@ InfixExpression@@container.id != null @AT@ 19579 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@container.id != null @AT@ 19583 @LENGTH@ 4
------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (id != null ? !id.equals(container.id) : container.id != null) return false; @AT@ 19589 @LENGTH@ 13
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 19589 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 19596 @LENGTH@ 5
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 19612 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 19619 @LENGTH@ 4


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]MyMessageToProcessorConverter, [TypeConverter] @AT@ 1857 @LENGTH@ 101
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 1857 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 1868 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 1870 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 1883 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1883 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 1883 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 1889 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 1892 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 1898 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 1898 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 1905 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 1922 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 1929 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 1929 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 1939 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 1945 @LENGTH@ 5


MOV MethodDeclaration@@IllegalArgumentException, MethodName:unexpectedHeaderChar, String dropping, String key,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]HttpServerMessages,  @AT@ 6362 @LENGTH@ 50


UPD VariableDeclarationStatement@@InputStream stream=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class); @TO@ InputStream stream=exchange.getIn().getMandatoryBody(InputStream.class); @AT@ 1968 @LENGTH@ 84
---UPD VariableDeclarationFragment@@stream=ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ stream=exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 1980 @LENGTH@ 71
------UPD MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @TO@ exchange.getIn().getMandatoryBody(InputStream.class) @AT@ 1989 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryInBody(exchange,InputStream.class) @AT@ 1944 @LENGTH@ 16
---------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 1989 @LENGTH@ 14
---------UPD SimpleName@@MethodName:getMandatoryInBody:[exchange, InputStream.class] @TO@ MethodName:getMandatoryBody:[InputStream.class] @AT@ 2004 @LENGTH@ 47
------------DEL SimpleName@@exchange @AT@ 2023 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:System.out.println(configuration.getBindAddress()) @AT@ 3508 @LENGTH@ 51
---DEL MethodInvocation@@System.out.println(configuration.getBindAddress()) @AT@ 3508 @LENGTH@ 50
------DEL QualifiedName@@Name:System.out @AT@ 3508 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[configuration.getBindAddress()] @AT@ 3519 @LENGTH@ 39
---------DEL MethodInvocation@@configuration.getBindAddress() @AT@ 3527 @LENGTH@ 30
------------DEL SimpleName@@Name:configuration @AT@ 3527 @LENGTH@ 13
------------DEL SimpleName@@MethodName:getBindAddress:[] @AT@ 3541 @LENGTH@ 16


UPD VariableDeclarationStatement@@SdbEndpoint endpoint=new SdbEndpoint(uri,getCamelContext(),configuration); @TO@ SdbEndpoint endpoint=new SdbEndpoint(uri,this,configuration); @AT@ 1979 @LENGTH@ 78
---UPD VariableDeclarationFragment@@endpoint=new SdbEndpoint(uri,getCamelContext(),configuration) @TO@ endpoint=new SdbEndpoint(uri,this,configuration) @AT@ 1991 @LENGTH@ 65
------UPD ClassInstanceCreation@@SdbEndpoint[uri, getCamelContext(), configuration] @TO@ SdbEndpoint[uri, this, configuration] @AT@ 2002 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 2023 @LENGTH@ 17
---------INS ThisExpression@@this @TO@ ClassInstanceCreation@@SdbEndpoint[uri, getCamelContext(), configuration] @AT@ 2023 @LENGTH@ 4


INS MethodDeclaration@@OperationFailedException, MethodName:invalidLocaleString, String unparsed,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 99265 @LENGTH@ 37
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidLocaleString, String unparsed,  @AT@ 99240 @LENGTH@ 24
---INS SimpleName@@MethodName:invalidLocaleString @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidLocaleString, String unparsed,  @AT@ 99265 @LENGTH@ 19
---INS SingleVariableDeclaration@@String unparsed @TO@ MethodDeclaration@@OperationFailedException, MethodName:invalidLocaleString, String unparsed,  @AT@ 99285 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String unparsed @AT@ 99285 @LENGTH@ 6
------INS SimpleName@@unparsed @TO@ SingleVariableDeclaration@@String unparsed @AT@ 99292 @LENGTH@ 8


DEL MethodDeclaration@@protected, void, MethodName:preValidateCreate,  @AT@ 2695 @LENGTH@ 473
---DEL Modifier@@protected @AT@ 2695 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 2705 @LENGTH@ 4
---DEL SimpleName@@MethodName:preValidateCreate @AT@ 2710 @LENGTH@ 17
---DEL VariableDeclarationStatement@@List<String> existing=service.getClusterContainers(); @AT@ 2810 @LENGTH@ 55
------DEL ParameterizedType@@List<String> @AT@ 2810 @LENGTH@ 12
---------DEL SimpleType@@List @AT@ 2810 @LENGTH@ 4
---------DEL SimpleType@@String @AT@ 2815 @LENGTH@ 6
------DEL VariableDeclarationFragment@@existing=service.getClusterContainers() @AT@ 2823 @LENGTH@ 41
---------DEL SimpleName@@existing @AT@ 2823 @LENGTH@ 8
---------DEL MethodInvocation@@service.getClusterContainers() @AT@ 2834 @LENGTH@ 30
------------DEL SimpleName@@Name:service @AT@ 2834 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getClusterContainers:[] @AT@ 2842 @LENGTH@ 22
---DEL EnhancedForStatement@@for (String container : existing) {  if (containers.contains(container)) {    throw new IllegalArgumentException("Container " + container + " is already enlisted as a cluster container.");  }} @AT@ 2926 @LENGTH@ 236
------DEL SingleVariableDeclaration@@String container @AT@ 2931 @LENGTH@ 16
---------DEL SimpleType@@String @AT@ 2931 @LENGTH@ 6
---------DEL SimpleName@@container @AT@ 2938 @LENGTH@ 9
------DEL SimpleName@@existing @AT@ 2950 @LENGTH@ 8
------DEL IfStatement@@if (containers.contains(container)) {  throw new IllegalArgumentException("Container " + container + " is already enlisted as a cluster container.");} @AT@ 2974 @LENGTH@ 178
---------DEL MethodInvocation@@containers.contains(container) @AT@ 2978 @LENGTH@ 30
------------DEL SimpleName@@Name:containers @AT@ 2978 @LENGTH@ 10
------------DEL SimpleName@@MethodName:contains:[container] @AT@ 2989 @LENGTH@ 19
---------------DEL SimpleName@@container @AT@ 2998 @LENGTH@ 9
---------DEL Block@@ThenBody:{  throw new IllegalArgumentException("Container " + container + " is already enlisted as a cluster container.");} @AT@ 3010 @LENGTH@ 142
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Container " + container + " is already enlisted as a cluster container.") @AT@ 3028 @LENGTH@ 110
---------------DEL ClassInstanceCreation@@IllegalArgumentException["Container " + container + " is already enlisted as a cluster container."] @AT@ 3034 @LENGTH@ 103
------------------DEL New@@new @AT@ 3034 @LENGTH@ 3
------------------DEL SimpleType@@IllegalArgumentException @AT@ 3038 @LENGTH@ 24
------------------DEL InfixExpression@@"Container " + container + " is already enlisted as a cluster container." @AT@ 3063 @LENGTH@ 73
---------------------DEL StringLiteral@@"Container " @AT@ 3063 @LENGTH@ 12
---------------------DEL Operator@@+ @AT@ 3075 @LENGTH@ 1
---------------------DEL SimpleName@@container @AT@ 3078 @LENGTH@ 9
---------------------DEL StringLiteral@@" is already enlisted as a cluster container." @AT@ 3090 @LENGTH@ 46


UPD MethodDeclaration@@void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 279 @LENGTH@ 64
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 326 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 326 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 332 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 339 @LENGTH@ 11


UPD MethodDeclaration@@public, ManagementRequestHandler<Void,ExecuteRequestContext>, MethodName:getRequestHandler, byte operationType,  @TO@ protected, ManagementRequestHandler<Void,ExecuteRequestContext>, MethodName:getRequestHandler, byte operationType,  @AT@ 4754 @LENGTH@ 897
---UPD Modifier@@public @TO@ protected @AT@ 4754 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp, Exception,  @AT@ 1417 @LENGTH@ 149
---UPD Modifier@@protected @TO@ public @AT@ 1417 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1285 @LENGTH@ 111
---DEL Modifier@@public @AT@ 1285 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1292 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUp @AT@ 1297 @LENGTH@ 5
---DEL SimpleType@@Exception @AT@ 1312 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:deleteDirectory("./activemq-data") @AT@ 1332 @LENGTH@ 35
------DEL MethodInvocation@@deleteDirectory("./activemq-data") @AT@ 1332 @LENGTH@ 34
---------DEL SimpleName@@MethodName:deleteDirectory:["./activemq-data"] @AT@ 1332 @LENGTH@ 34
------------DEL StringLiteral@@"./activemq-data" @AT@ 1348 @LENGTH@ 17
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1376 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1376 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1382 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:elementEnd((String)it.next()) @TO@ MethodInvocation:elementEnd(it.next()) @AT@ 4941 @LENGTH@ 31
---UPD MethodInvocation@@elementEnd((String)it.next()) @TO@ elementEnd(it.next()) @AT@ 4941 @LENGTH@ 30
------UPD SimpleName@@MethodName:elementEnd:[(String)it.next()] @TO@ MethodName:elementEnd:[it.next()] @AT@ 4941 @LENGTH@ 30
---------DEL CastExpression@@(String)it.next() @AT@ 4952 @LENGTH@ 18
------------DEL SimpleType@@String @AT@ 4953 @LENGTH@ 6
------------DEL MethodInvocation@@it.next() @AT@ 4961 @LENGTH@ 9
---------INS MethodInvocation@@it.next() @TO@ SimpleName@@MethodName:elementEnd:[(String)it.next()] @AT@ 4952 @LENGTH@ 9
------------MOV SimpleName@@Name:it @TO@ MethodInvocation@@it.next() @AT@ 4961 @LENGTH@ 2
------------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@it.next() @AT@ 4964 @LENGTH@ 6


INS ExpressionStatement@@ClassInstanceCreation:new ArgumentWithValue(this,1,"--new") @TO@ MethodDeclaration@@public, voidMethodName:BatchMoveLineHandler,  @AT@ 1669 @LENGTH@ 40
---INS ClassInstanceCreation@@ArgumentWithValue[this, 1, "--new"] @TO@ ExpressionStatement@@ClassInstanceCreation:new ArgumentWithValue(this,1,"--new") @AT@ 1669 @LENGTH@ 39
------INS New@@new @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 1, "--new"] @AT@ 1669 @LENGTH@ 3
------INS SimpleType@@ArgumentWithValue @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 1, "--new"] @AT@ 1673 @LENGTH@ 17
------INS ThisExpression@@this @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 1, "--new"] @AT@ 1691 @LENGTH@ 4
------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 1, "--new"] @AT@ 1697 @LENGTH@ 1
------INS StringLiteral@@"--new" @TO@ ClassInstanceCreation@@ArgumentWithValue[this, 1, "--new"] @AT@ 1700 @LENGTH@ 7


DEL MethodDeclaration@@public, void, MethodName:convertsUUIDsToBinaryByDefault,  @AT@ 5146 @LENGTH@ 179
---DEL Modifier@@public @AT@ 5146 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 5153 @LENGTH@ 4
---DEL SimpleName@@MethodName:convertsUUIDsToBinaryByDefault @AT@ 5158 @LENGTH@ 30
---DEL VariableDeclarationStatement@@CustomConversions conversions=new CustomConversions(); @AT@ 5196 @LENGTH@ 56
------DEL SimpleType@@CustomConversions @AT@ 5196 @LENGTH@ 17
------DEL VariableDeclarationFragment@@conversions=new CustomConversions() @AT@ 5214 @LENGTH@ 37
---------DEL SimpleName@@conversions @AT@ 5214 @LENGTH@ 11
---------DEL ClassInstanceCreation@@CustomConversions[] @AT@ 5228 @LENGTH@ 23
------------DEL New@@new @AT@ 5228 @LENGTH@ 3
------------DEL SimpleType@@CustomConversions @AT@ 5232 @LENGTH@ 17
---DEL ExpressionStatement@@MethodInvocation:assertThat(conversions.hasCustomWriteTarget(UUID.class),is(true)) @AT@ 5255 @LENGTH@ 67
------DEL MethodInvocation@@assertThat(conversions.hasCustomWriteTarget(UUID.class),is(true)) @AT@ 5255 @LENGTH@ 66
---------DEL SimpleName@@MethodName:assertThat:[conversions.hasCustomWriteTarget(UUID.class), is(true)] @AT@ 5255 @LENGTH@ 66
------------DEL MethodInvocation@@conversions.hasCustomWriteTarget(UUID.class) @AT@ 5266 @LENGTH@ 44
---------------DEL SimpleName@@Name:conversions @AT@ 5266 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:hasCustomWriteTarget:[UUID.class] @AT@ 5278 @LENGTH@ 32
------------------DEL TypeLiteral@@UUID.class @AT@ 5299 @LENGTH@ 10
------------DEL MethodInvocation@@is(true) @AT@ 5312 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:is:[true] @AT@ 5312 @LENGTH@ 8
------------------DEL BooleanLiteral@@true @AT@ 5315 @LENGTH@ 4


INS FieldDeclaration@@private, DecoratorInterface, [bean] @TO@ TypeDeclaration@@[@Stateful, @Clustered, @Remote(RemoteCounter.class), public]CounterBean, [RemoteCounter] @AT@ 1507 @LENGTH@ 32
---INS Modifier@@private @TO@ FieldDeclaration@@private, DecoratorInterface, [bean] @AT@ 1507 @LENGTH@ 7
---INS SimpleType@@DecoratorInterface @TO@ FieldDeclaration@@private, DecoratorInterface, [bean] @AT@ 1515 @LENGTH@ 18
---INS VariableDeclarationFragment@@bean @TO@ FieldDeclaration@@private, DecoratorInterface, [bean] @AT@ 1534 @LENGTH@ 4
------INS SimpleName@@bean @TO@ VariableDeclarationFragment@@bean @AT@ 1534 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3521 @LENGTH@ 322
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3583 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3583 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3589 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3596 @LENGTH@ 11


DEL MethodDeclaration@@String, MethodName:subjectAssociationFilter,  @AT@ 5922 @LENGTH@ 27
---DEL SimpleType@@String @AT@ 5915 @LENGTH@ 6
---DEL SimpleName@@MethodName:subjectAssociationFilter @AT@ 5922 @LENGTH@ 24


UPD MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @TO@ public, static, void, MethodName:createSecurityDomain, final String securityDomainName, boolean usersRolesRequired, Exception,  @AT@ 2999 @LENGTH@ 1411
---INS SingleVariableDeclaration@@boolean usersRolesRequired @TO@ MethodDeclaration@@public, static, void, MethodName:createSecurityDomain, final String securityDomainName, Exception,  @AT@ 3231 @LENGTH@ 26
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean usersRolesRequired @AT@ 3231 @LENGTH@ 7
------INS SimpleName@@usersRolesRequired @TO@ SingleVariableDeclaration@@boolean usersRolesRequired @AT@ 3239 @LENGTH@ 18
---UPD TryStatement@@try {  final List<ModelNode> updates=new ArrayList<ModelNode>();  ModelNode op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  updates.add(op);  op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);  updates.add(op);  applyUpdates(updates,client);}  finally {  try {    client.close();  } catch (  Exception e) {    logger.debug("Ignoring exception while closing model controller client",e);  }} @TO@ try {  final List<ModelNode> updates=new ArrayList<ModelNode>();  ModelNode op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  updates.add(op);  op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("Remoting");  if (usersRolesRequired) {    loginModule.get(FLAG).set("optional");  } else {    loginModule.get(FLAG).set("required");  }  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");  if (usersRolesRequired) {    loginModule=op.get(Constants.LOGIN_MODULES).add();    loginModule.get(CODE).set("UsersRoles");    loginModule.get(FLAG).set("required");    loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");  }  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);  updates.add(op);  applyUpdates(updates,client);}  finally {  try {    client.close();  } catch (  Exception e) {    logger.debug("Ignoring exception while closing model controller client",e);  }} @AT@ 3246 @LENGTH@ 1158
------INS ExpressionStatement@@MethodInvocation:loginModule.get(CODE).set("Remoting") @TO@ TryStatement@@try {  final List<ModelNode> updates=new ArrayList<ModelNode>();  ModelNode op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  updates.add(op);  op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);  updates.add(op);  applyUpdates(updates,client);}  finally {  try {    client.close();  } catch (  Exception e) {    logger.debug("Ignoring exception while closing model controller client",e);  }} @AT@ 4093 @LENGTH@ 38
---------INS MethodInvocation@@loginModule.get(CODE).set("Remoting") @TO@ ExpressionStatement@@MethodInvocation:loginModule.get(CODE).set("Remoting") @AT@ 4093 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:get:[CODE] @TO@ MethodInvocation@@loginModule.get(CODE).set("Remoting") @AT@ 4093 @LENGTH@ 21
---------------INS SimpleName@@CODE @TO@ MethodInvocation@@MethodName:get:[CODE] @AT@ 4109 @LENGTH@ 4
------------INS SimpleName@@Name:loginModule @TO@ MethodInvocation@@loginModule.get(CODE).set("Remoting") @AT@ 4093 @LENGTH@ 11
------------INS SimpleName@@MethodName:set:["Remoting"] @TO@ MethodInvocation@@loginModule.get(CODE).set("Remoting") @AT@ 4115 @LENGTH@ 15
---------------INS StringLiteral@@"Remoting" @TO@ SimpleName@@MethodName:set:["Remoting"] @AT@ 4119 @LENGTH@ 10
------INS IfStatement@@if (usersRolesRequired) {  loginModule.get(FLAG).set("optional");} else {  loginModule.get(FLAG).set("required");} @TO@ TryStatement@@try {  final List<ModelNode> updates=new ArrayList<ModelNode>();  ModelNode op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  updates.add(op);  op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);  updates.add(op);  applyUpdates(updates,client);}  finally {  try {    client.close();  } catch (  Exception e) {    logger.debug("Ignoring exception while closing model controller client",e);  }} @AT@ 4144 @LENGTH@ 169
---------INS SimpleName@@usersRolesRequired @TO@ IfStatement@@if (usersRolesRequired) {  loginModule.get(FLAG).set("optional");} else {  loginModule.get(FLAG).set("required");} @AT@ 4147 @LENGTH@ 18
---------INS Block@@ThenBody:{  loginModule.get(FLAG).set("optional");} @TO@ IfStatement@@if (usersRolesRequired) {  loginModule.get(FLAG).set("optional");} else {  loginModule.get(FLAG).set("required");} @AT@ 4167 @LENGTH@ 70
------------INS ExpressionStatement@@MethodInvocation:loginModule.get(FLAG).set("optional") @TO@ Block@@ThenBody:{  loginModule.get(FLAG).set("optional");} @AT@ 4185 @LENGTH@ 38
---------------INS MethodInvocation@@loginModule.get(FLAG).set("optional") @TO@ ExpressionStatement@@MethodInvocation:loginModule.get(FLAG).set("optional") @AT@ 4185 @LENGTH@ 37
------------------INS MethodInvocation@@MethodName:get:[FLAG] @TO@ MethodInvocation@@loginModule.get(FLAG).set("optional") @AT@ 4185 @LENGTH@ 21
---------------------INS SimpleName@@FLAG @TO@ MethodInvocation@@MethodName:get:[FLAG] @AT@ 4201 @LENGTH@ 4
------------------INS SimpleName@@Name:loginModule @TO@ MethodInvocation@@loginModule.get(FLAG).set("optional") @AT@ 4185 @LENGTH@ 11
------------------INS SimpleName@@MethodName:set:["optional"] @TO@ MethodInvocation@@loginModule.get(FLAG).set("optional") @AT@ 4207 @LENGTH@ 15
---------------------INS StringLiteral@@"optional" @TO@ SimpleName@@MethodName:set:["optional"] @AT@ 4211 @LENGTH@ 10
---------INS Block@@ElseBody:{  loginModule.get(FLAG).set("required");} @TO@ IfStatement@@if (usersRolesRequired) {  loginModule.get(FLAG).set("optional");} else {  loginModule.get(FLAG).set("required");} @AT@ 4243 @LENGTH@ 70
------------INS ExpressionStatement@@MethodInvocation:loginModule.get(FLAG).set("required") @TO@ Block@@ElseBody:{  loginModule.get(FLAG).set("required");} @AT@ 4261 @LENGTH@ 38
---------------INS MethodInvocation@@loginModule.get(FLAG).set("required") @TO@ ExpressionStatement@@MethodInvocation:loginModule.get(FLAG).set("required") @AT@ 4261 @LENGTH@ 37
------------------INS MethodInvocation@@MethodName:get:[FLAG] @TO@ MethodInvocation@@loginModule.get(FLAG).set("required") @AT@ 4261 @LENGTH@ 21
---------------------INS SimpleName@@FLAG @TO@ MethodInvocation@@MethodName:get:[FLAG] @AT@ 4277 @LENGTH@ 4
------------------INS SimpleName@@Name:loginModule @TO@ MethodInvocation@@loginModule.get(FLAG).set("required") @AT@ 4261 @LENGTH@ 11
------------------INS SimpleName@@MethodName:set:["required"] @TO@ MethodInvocation@@loginModule.get(FLAG).set("required") @AT@ 4283 @LENGTH@ 15
---------------------INS StringLiteral@@"required" @TO@ SimpleName@@MethodName:set:["required"] @AT@ 4287 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @TO@ TryStatement@@try {  final List<ModelNode> updates=new ArrayList<ModelNode>();  ModelNode op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  updates.add(op);  op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);  updates.add(op);  applyUpdates(updates,client);}  finally {  try {    client.close();  } catch (  Exception e) {    logger.debug("Ignoring exception while closing model controller client",e);  }} @AT@ 4326 @LENGTH@ 83
---------INS MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @TO@ ExpressionStatement@@MethodInvocation:loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4326 @LENGTH@ 82
------------INS MethodInvocation@@MethodName:get:[Constants.MODULE_OPTIONS] @TO@ MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4326 @LENGTH@ 41
---------------INS QualifiedName@@Constants.MODULE_OPTIONS @TO@ MethodInvocation@@MethodName:get:[Constants.MODULE_OPTIONS] @AT@ 4342 @LENGTH@ 24
------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.MODULE_OPTIONS @AT@ 4342 @LENGTH@ 9
------------------INS SimpleName@@MODULE_OPTIONS @TO@ QualifiedName@@Constants.MODULE_OPTIONS @AT@ 4352 @LENGTH@ 14
------------INS SimpleName@@Name:loginModule @TO@ MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4326 @LENGTH@ 11
------------INS SimpleName@@MethodName:add:["password-stacking", "useFirstPass"] @TO@ MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4368 @LENGTH@ 40
---------------INS StringLiteral@@"password-stacking" @TO@ SimpleName@@MethodName:add:["password-stacking", "useFirstPass"] @AT@ 4372 @LENGTH@ 19
---------------INS StringLiteral@@"useFirstPass" @TO@ SimpleName@@MethodName:add:["password-stacking", "useFirstPass"] @AT@ 4393 @LENGTH@ 14
------INS IfStatement@@if (usersRolesRequired) {  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @TO@ TryStatement@@try {  final List<ModelNode> updates=new ArrayList<ModelNode>();  ModelNode op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  updates.add(op);  op=new ModelNode();  op.get(OP).set(ADD);  op.get(OP_ADDR).add(SUBSYSTEM,"security");  op.get(OP_ADDR).add(SECURITY_DOMAIN,securityDomainName);  op.get(OP_ADDR).add(AUTHENTICATION,Constants.CLASSIC);  ModelNode loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);  updates.add(op);  applyUpdates(updates,client);}  finally {  try {    client.close();  } catch (  Exception e) {    logger.debug("Ignoring exception while closing model controller client",e);  }} @AT@ 4423 @LENGTH@ 320
---------INS SimpleName@@usersRolesRequired @TO@ IfStatement@@if (usersRolesRequired) {  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @AT@ 4427 @LENGTH@ 18
---------INS Block@@ThenBody:{  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @TO@ IfStatement@@if (usersRolesRequired) {  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @AT@ 4447 @LENGTH@ 296
------------MOV ExpressionStatement@@MethodInvocation:loginModule.get(CODE).set("UsersRoles") @TO@ Block@@ThenBody:{  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @AT@ 3906 @LENGTH@ 40
------------MOV ExpressionStatement@@MethodInvocation:loginModule.get(FLAG).set("required") @TO@ Block@@ThenBody:{  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @AT@ 3959 @LENGTH@ 38
------------INS ExpressionStatement@@Assignment:loginModule=op.get(Constants.LOGIN_MODULES).add() @TO@ Block@@ThenBody:{  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @AT@ 4465 @LENGTH@ 52
---------------INS Assignment@@loginModule=op.get(Constants.LOGIN_MODULES).add() @TO@ ExpressionStatement@@Assignment:loginModule=op.get(Constants.LOGIN_MODULES).add() @AT@ 4465 @LENGTH@ 51
------------------INS SimpleName@@loginModule @TO@ Assignment@@loginModule=op.get(Constants.LOGIN_MODULES).add() @AT@ 4465 @LENGTH@ 11
------------------INS Operator@@= @TO@ Assignment@@loginModule=op.get(Constants.LOGIN_MODULES).add() @AT@ 4476 @LENGTH@ 1
------------------INS MethodInvocation@@op.get(Constants.LOGIN_MODULES).add() @TO@ Assignment@@loginModule=op.get(Constants.LOGIN_MODULES).add() @AT@ 4479 @LENGTH@ 37
---------------------INS MethodInvocation@@MethodName:get:[Constants.LOGIN_MODULES] @TO@ MethodInvocation@@op.get(Constants.LOGIN_MODULES).add() @AT@ 4479 @LENGTH@ 31
------------------------INS QualifiedName@@Constants.LOGIN_MODULES @TO@ MethodInvocation@@MethodName:get:[Constants.LOGIN_MODULES] @AT@ 4486 @LENGTH@ 23
---------------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.LOGIN_MODULES @AT@ 4486 @LENGTH@ 9
---------------------------INS SimpleName@@LOGIN_MODULES @TO@ QualifiedName@@Constants.LOGIN_MODULES @AT@ 4496 @LENGTH@ 13
---------------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.get(Constants.LOGIN_MODULES).add() @AT@ 4479 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:add:[] @TO@ MethodInvocation@@op.get(Constants.LOGIN_MODULES).add() @AT@ 4511 @LENGTH@ 5
------------INS ExpressionStatement@@MethodInvocation:loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @TO@ Block@@ThenBody:{  loginModule=op.get(Constants.LOGIN_MODULES).add();  loginModule.get(CODE).set("UsersRoles");  loginModule.get(FLAG).set("required");  loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass");} @AT@ 4646 @LENGTH@ 83
---------------INS MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @TO@ ExpressionStatement@@MethodInvocation:loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4646 @LENGTH@ 82
------------------INS MethodInvocation@@MethodName:get:[Constants.MODULE_OPTIONS] @TO@ MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4646 @LENGTH@ 41
---------------------INS QualifiedName@@Constants.MODULE_OPTIONS @TO@ MethodInvocation@@MethodName:get:[Constants.MODULE_OPTIONS] @AT@ 4662 @LENGTH@ 24
------------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.MODULE_OPTIONS @AT@ 4662 @LENGTH@ 9
------------------------INS SimpleName@@MODULE_OPTIONS @TO@ QualifiedName@@Constants.MODULE_OPTIONS @AT@ 4672 @LENGTH@ 14
------------------INS SimpleName@@Name:loginModule @TO@ MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4646 @LENGTH@ 11
------------------INS SimpleName@@MethodName:add:["password-stacking", "useFirstPass"] @TO@ MethodInvocation@@loginModule.get(Constants.MODULE_OPTIONS).add("password-stacking","useFirstPass") @AT@ 4688 @LENGTH@ 40
---------------------INS StringLiteral@@"password-stacking" @TO@ SimpleName@@MethodName:add:["password-stacking", "useFirstPass"] @AT@ 4692 @LENGTH@ 19
---------------------INS StringLiteral@@"useFirstPass" @TO@ SimpleName@@MethodName:add:["password-stacking", "useFirstPass"] @AT@ 4713 @LENGTH@ 14


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:ErrorState, ConsoleWrapper theConsole, String errorMessage, State nextState, StateValues stateValues,  @AT@ 2228 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2232 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2232 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2232 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2243 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2255 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2259 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2265 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2279 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2285 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2285 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2294 @LENGTH@ 20


UPD ReturnStatement@@ClassInstanceCreation:new ErrorState(null,MESSAGES.invalidChoiceResponse(),this) @TO@ ClassInstanceCreation:new ErrorState(theConsole,MESSAGES.invalidChoiceResponse(),this) @AT@ 3219 @LENGTH@ 68
---UPD ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidChoiceResponse(), this] @TO@ ErrorState[theConsole, MESSAGES.invalidChoiceResponse(), this] @AT@ 3226 @LENGTH@ 60
------DEL NullLiteral@@null @AT@ 3241 @LENGTH@ 4
------INS SimpleName@@theConsole @TO@ ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidChoiceResponse(), this] @AT@ 3347 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:mockLog.expectedBodiesReceived("Hell David") @TO@ MethodInvocation:mockLog.expectedBodiesReceived("Hello David") @AT@ 1402 @LENGTH@ 45
---UPD MethodInvocation@@mockLog.expectedBodiesReceived("Hell David") @TO@ mockLog.expectedBodiesReceived("Hello David") @AT@ 1402 @LENGTH@ 44
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Hell David"] @TO@ MethodName:expectedBodiesReceived:["Hello David"] @AT@ 1410 @LENGTH@ 36
---------UPD StringLiteral@@"Hell David" @TO@ "Hello David" @AT@ 1433 @LENGTH@ 12


UPD TypeDeclaration@@[@Stateless, @SecurityDomain("ejb3-tests"), public]InherritanceAnnOnlyCheckSLSB, ParentAnnOnlyCheck @TO@ [@Stateless, @SecurityDomain("ejb3-tests"), public]InherritanceAnnOnlyCheckSLSB, ParentAnnOnlyCheck[SimpleAuthorizationRemote] @AT@ 1243 @LENGTH@ 112
---INS SimpleType@@SimpleAuthorizationRemote @TO@ TypeDeclaration@@[@Stateless, @SecurityDomain("ejb3-tests"), public]InherritanceAnnOnlyCheckSLSB, ParentAnnOnlyCheck @AT@ 1364 @LENGTH@ 25


UPD ReturnStatement@@MethodInvocation:String.format("SSLContext[provider=%s, protocol=%s, needClientAuth=%s, wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]",getProvider(),getProtocol(),getDefaultSSLParameters().getNeedClientAuth(),getDefaultSSLParameters().getWantClientAuth(),collectionAsCommaDelimitedString(getDefaultSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getDefaultSSLParameters().getCipherSuites()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getCipherSuites())) @TO@ MethodInvocation:String.format("SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " + "wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]",getProvider(),getProtocol(),getDefaultSSLParameters().getNeedClientAuth(),getDefaultSSLParameters().getWantClientAuth(),collectionAsCommaDelimitedString(getDefaultSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getDefaultSSLParameters().getCipherSuites()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getCipherSuites())) @AT@ 32909 @LENGTH@ 741
---UPD MethodInvocation@@String.format("SSLContext[provider=%s, protocol=%s, needClientAuth=%s, wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]",getProvider(),getProtocol(),getDefaultSSLParameters().getNeedClientAuth(),getDefaultSSLParameters().getWantClientAuth(),collectionAsCommaDelimitedString(getDefaultSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getDefaultSSLParameters().getCipherSuites()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getCipherSuites())) @TO@ String.format("SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " + "wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]",getProvider(),getProtocol(),getDefaultSSLParameters().getNeedClientAuth(),getDefaultSSLParameters().getWantClientAuth(),collectionAsCommaDelimitedString(getDefaultSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getDefaultSSLParameters().getCipherSuites()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getProtocols()),collectionAsCommaDelimitedString(getSupportedSSLParameters().getCipherSuites())) @AT@ 32916 @LENGTH@ 733
------UPD SimpleName@@MethodName:format:["SSLContext[provider=%s, protocol=%s, needClientAuth=%s, wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]", getProvider(), getProtocol(), getDefaultSSLParameters().getNeedClientAuth(), getDefaultSSLParameters().getWantClientAuth(), collectionAsCommaDelimitedString(getDefaultSSLParameters().getProtocols()), collectionAsCommaDelimitedString(getDefaultSSLParameters().getCipherSuites()), collectionAsCommaDelimitedString(getSupportedSSLParameters().getProtocols()), collectionAsCommaDelimitedString(getSupportedSSLParameters().getCipherSuites())] @TO@ MethodName:format:["SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " + "wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]", getProvider(), getProtocol(), getDefaultSSLParameters().getNeedClientAuth(), getDefaultSSLParameters().getWantClientAuth(), collectionAsCommaDelimitedString(getDefaultSSLParameters().getProtocols()), collectionAsCommaDelimitedString(getDefaultSSLParameters().getCipherSuites()), collectionAsCommaDelimitedString(getSupportedSSLParameters().getProtocols()), collectionAsCommaDelimitedString(getSupportedSSLParameters().getCipherSuites())] @AT@ 32923 @LENGTH@ 726
---------INS InfixExpression@@"SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " + "wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]" @TO@ SimpleName@@MethodName:format:["SSLContext[provider=%s, protocol=%s, needClientAuth=%s, wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]", getProvider(), getProtocol(), getDefaultSSLParameters().getNeedClientAuth(), getDefaultSSLParameters().getWantClientAuth(), collectionAsCommaDelimitedString(getDefaultSSLParameters().getProtocols()), collectionAsCommaDelimitedString(getDefaultSSLParameters().getCipherSuites()), collectionAsCommaDelimitedString(getSupportedSSLParameters().getProtocols()), collectionAsCommaDelimitedString(getSupportedSSLParameters().getCipherSuites())] @AT@ 32930 @LENGTH@ 205
------------INS StringLiteral@@"SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " @TO@ InfixExpression@@"SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " + "wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]" @AT@ 32930 @LENGTH@ 58
------------INS Operator@@+ @TO@ InfixExpression@@"SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " + "wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]" @AT@ 32988 @LENGTH@ 1
------------INS StringLiteral@@"wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]" @TO@ InfixExpression@@"SSLContext[provider=%s, protocol=%s, needClientAuth=%s, " + "wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]" @AT@ 33011 @LENGTH@ 124
---------DEL StringLiteral@@"SSLContext[provider=%s, protocol=%s, needClientAuth=%s, wantClientAuth=%s\n\tdefaultProtocols=%s\n\tdefaultChiperSuites=%s\n\tsupportedProtocols=%s\n\tsupportedChiperSuites=%s\n]" @AT@ 32930 @LENGTH@ 180


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2822 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2822 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2830 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2843 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2843 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2843 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2860 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2876 @LENGTH@ 21


INS FieldDeclaration@@ControllerLogger, [MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation")] @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]ControllerLogger, [BasicLogger] @AT@ 1950 @LENGTH@ 155
---INS SimpleType@@ControllerLogger @TO@ FieldDeclaration@@ControllerLogger, [MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation")] @AT@ 1950 @LENGTH@ 16
---INS VariableDeclarationFragment@@MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @TO@ FieldDeclaration@@ControllerLogger, [MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation")] @AT@ 1967 @LENGTH@ 137
------INS SimpleName@@MGMT_OP_LOGGER @TO@ VariableDeclarationFragment@@MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1967 @LENGTH@ 14
------INS MethodInvocation@@Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @TO@ VariableDeclarationFragment@@MGMT_OP_LOGGER=Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1984 @LENGTH@ 120
---------INS SimpleName@@Name:Logger @TO@ MethodInvocation@@Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1984 @LENGTH@ 6
---------INS SimpleName@@MethodName:getMessageLogger:[ControllerLogger.class, ControllerLogger.class.getPackage().getName() + ".management-operation"] @TO@ MethodInvocation@@Logger.getMessageLogger(ControllerLogger.class,ControllerLogger.class.getPackage().getName() + ".management-operation") @AT@ 1991 @LENGTH@ 113
------------INS TypeLiteral@@ControllerLogger.class @TO@ SimpleName@@MethodName:getMessageLogger:[ControllerLogger.class, ControllerLogger.class.getPackage().getName() + ".management-operation"] @AT@ 2008 @LENGTH@ 22
------------INS InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @TO@ SimpleName@@MethodName:getMessageLogger:[ControllerLogger.class, ControllerLogger.class.getPackage().getName() + ".management-operation"] @AT@ 2032 @LENGTH@ 71
---------------INS MethodInvocation@@ControllerLogger.class.getPackage().getName() @TO@ InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @AT@ 2032 @LENGTH@ 45
------------------INS MethodInvocation@@MethodName:getPackage:[] @TO@ MethodInvocation@@ControllerLogger.class.getPackage().getName() @AT@ 2032 @LENGTH@ 35
------------------INS TypeLiteral@@ControllerLogger.class @TO@ MethodInvocation@@ControllerLogger.class.getPackage().getName() @AT@ 2032 @LENGTH@ 22
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ControllerLogger.class.getPackage().getName() @AT@ 2068 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @AT@ 2077 @LENGTH@ 1
---------------INS StringLiteral@@".management-operation" @TO@ InfixExpression@@ControllerLogger.class.getPackage().getName() + ".management-operation" @AT@ 2080 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2221 @LENGTH@ 245
---INS MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @AT@ 2221 @LENGTH@ 244
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @AT@ 2221 @LENGTH@ 7
------INS SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
] @TO@ MethodInvocation@@context.completeStep(new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
) @AT@ 2229 @LENGTH@ 236
---------INS ClassInstanceCreation@@OperationContext.RollbackHandler[] @TO@ SimpleName@@MethodName:completeStep:[new OperationContext.RollbackHandler(){
  @Override public void handleRollback(  OperationContext context,  ModelNode operation){
    context.revertReloadRequired();
  }
}
] @AT@ 2242 @LENGTH@ 222
------------INS New@@new @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 2242 @LENGTH@ 3
------------INS SimpleType@@OperationContext.RollbackHandler @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 2246 @LENGTH@ 32
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationContext.RollbackHandler[] @AT@ 2281 @LENGTH@ 183
---------------INS MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2317 @LENGTH@ 137
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2317 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2324 @LENGTH@ 4
------------------INS SimpleName@@MethodName:handleRollback @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2329 @LENGTH@ 14
------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2344 @LENGTH@ 24
---------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2344 @LENGTH@ 16
---------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2361 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2370 @LENGTH@ 19
---------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2370 @LENGTH@ 9
---------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2380 @LENGTH@ 9
------------------INS ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @TO@ MethodDeclaration@@public, void, MethodName:handleRollback, OperationContext context, ModelNode operation,  @AT@ 2409 @LENGTH@ 31
---------------------INS MethodInvocation@@context.revertReloadRequired() @TO@ ExpressionStatement@@MethodInvocation:context.revertReloadRequired() @AT@ 2409 @LENGTH@ 30
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.revertReloadRequired() @AT@ 2409 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:revertReloadRequired:[] @TO@ MethodInvocation@@context.revertReloadRequired() @AT@ 2417 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:insert, SerializationGroupMember<K,V,G> entry,  @TO@ public, Set<K>, MethodName:insert, SerializationGroupMember<K,V,G> entry,  @AT@ 11417 @LENGTH@ 96
---DEL PrimitiveType@@void @AT@ 11424 @LENGTH@ 4
---INS ParameterizedType@@Set<K> @TO@ MethodDeclaration@@public, void, MethodName:insert, SerializationGroupMember<K,V,G> entry,  @AT@ 11446 @LENGTH@ 6
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<K> @AT@ 11446 @LENGTH@ 3
------INS SimpleType@@K @TO@ ParameterizedType@@Set<K> @AT@ 11450 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:store.insert(entry) @AT@ 11487 @LENGTH@ 20
---INS ReturnStatement@@MethodInvocation:store.insert(entry) @TO@ MethodDeclaration@@public, void, MethodName:insert, SerializationGroupMember<K,V,G> entry,  @AT@ 11511 @LENGTH@ 27
------MOV MethodInvocation@@store.insert(entry) @TO@ ReturnStatement@@MethodInvocation:store.insert(entry) @AT@ 11487 @LENGTH@ 19


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, boolean, MethodName:requireNoChildResources,  @AT@ 1988 @LENGTH@ 410
---UPD PrimitiveType@@void @TO@ boolean @AT@ 1998 @LENGTH@ 4
---DEL SimpleName@@MethodName:performRemove @AT@ 2003 @LENGTH@ 13
---DEL SingleVariableDeclaration@@OperationContext context @AT@ 2017 @LENGTH@ 24
------DEL SimpleType@@OperationContext @AT@ 2017 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 2034 @LENGTH@ 7
---INS SimpleName@@MethodName:requireNoChildResources @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2020 @LENGTH@ 23
---DEL SingleVariableDeclaration@@ModelNode operation @AT@ 2043 @LENGTH@ 19
------DEL SimpleType@@ModelNode @AT@ 2043 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 2053 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2056 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2063 @LENGTH@ 4
---DEL SingleVariableDeclaration@@ModelNode model @AT@ 2064 @LENGTH@ 15
------DEL SimpleType@@ModelNode @AT@ 2064 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 2074 @LENGTH@ 5
---DEL SimpleType@@OperationFailedException @AT@ 2088 @LENGTH@ 24
---DEL IfStatement@@if (model.hasDefined(CommonAttributes.SCANNER) && model.get(CommonAttributes.SCANNER).asInt() > 0) {  throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotRemoveSubsystem()));} @AT@ 2123 @LENGTH@ 213
------DEL InfixExpression@@model.hasDefined(CommonAttributes.SCANNER) && model.get(CommonAttributes.SCANNER).asInt() > 0 @AT@ 2127 @LENGTH@ 93
---------DEL MethodInvocation@@model.hasDefined(CommonAttributes.SCANNER) @AT@ 2127 @LENGTH@ 42
------------DEL SimpleName@@Name:model @AT@ 2127 @LENGTH@ 5
------------DEL SimpleName@@MethodName:hasDefined:[CommonAttributes.SCANNER] @AT@ 2133 @LENGTH@ 36
---------------DEL QualifiedName@@CommonAttributes.SCANNER @AT@ 2144 @LENGTH@ 24
------------------DEL SimpleName@@CommonAttributes @AT@ 2144 @LENGTH@ 16
------------------DEL SimpleName@@SCANNER @AT@ 2161 @LENGTH@ 7
---------DEL Operator@@&& @AT@ 2169 @LENGTH@ 2
---------DEL InfixExpression@@model.get(CommonAttributes.SCANNER).asInt() > 0 @AT@ 2173 @LENGTH@ 47
------------DEL MethodInvocation@@model.get(CommonAttributes.SCANNER).asInt() @AT@ 2173 @LENGTH@ 43
---------------DEL MethodInvocation@@MethodName:get:[CommonAttributes.SCANNER] @AT@ 2173 @LENGTH@ 35
------------------DEL QualifiedName@@CommonAttributes.SCANNER @AT@ 2183 @LENGTH@ 24
---------------------DEL SimpleName@@CommonAttributes @AT@ 2183 @LENGTH@ 16
---------------------DEL SimpleName@@SCANNER @AT@ 2200 @LENGTH@ 7
---------------DEL SimpleName@@Name:model @AT@ 2173 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:asInt:[] @AT@ 2209 @LENGTH@ 7
------------DEL Operator@@> @AT@ 2216 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 2219 @LENGTH@ 1
------DEL Block@@ThenBody:{  throw new OperationFailedException(new ModelNode().set(MESSAGES.cannotRemoveSubsystem()));} @AT@ 2222 @LENGTH@ 114
---------DEL ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.cannotRemoveSubsystem())) @AT@ 2236 @LENGTH@ 90
------------DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.cannotRemoveSubsystem())] @AT@ 2242 @LENGTH@ 83
---------------DEL New@@new @AT@ 2242 @LENGTH@ 3
---------------DEL SimpleType@@OperationFailedException @AT@ 2246 @LENGTH@ 24
---------------DEL MethodInvocation@@new ModelNode().set(MESSAGES.cannotRemoveSubsystem()) @AT@ 2271 @LENGTH@ 53
------------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2271 @LENGTH@ 15
---------------------DEL New@@new @AT@ 2271 @LENGTH@ 3
---------------------DEL SimpleType@@ModelNode @AT@ 2275 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:set:[MESSAGES.cannotRemoveSubsystem()] @AT@ 2287 @LENGTH@ 37
---------------------DEL MethodInvocation@@MESSAGES.cannotRemoveSubsystem() @AT@ 2291 @LENGTH@ 32
------------------------DEL SimpleName@@Name:MESSAGES @AT@ 2291 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:cannotRemoveSubsystem:[] @AT@ 2300 @LENGTH@ 23
---DEL ExpressionStatement@@SuperMethodInvocation:super.performRemove(context,operation,model) @AT@ 2345 @LENGTH@ 47
------DEL SuperMethodInvocation@@super.performRemove(context,operation,model) @AT@ 2345 @LENGTH@ 46
---------DEL SimpleName@@MethodName:performRemove:[context, operation, model] @AT@ 2351 @LENGTH@ 13
---------DEL SimpleName@@context @AT@ 2365 @LENGTH@ 7
---------DEL SimpleName@@operation @AT@ 2374 @LENGTH@ 9
---------DEL SimpleName@@model @AT@ 2385 @LENGTH@ 5


UPD TryStatement@@try {  File file=new File(patchDir,Long.toString(System.currentTimeMillis()) + ".patch.tmp");  InputStream is=null;  OutputStream os=null;  try {    is=url.openStream();    os=new FileOutputStream(file);    copy(is,os);  }  finally {    close(is,os);  }  List<Patch> patches=new ArrayList<Patch>();  ZipFile zipFile=null;  try {    zipFile=new ZipFile(file);  } catch (  IOException e) {  }  if (zipFile != null) {    File localRepoPath=new File(System.getProperty("karaf.base"),"system");    Enumeration<? extends ZipEntry> entries=zipFile.entries();    while (entries.hasMoreElements()) {      ZipEntry entry=entries.nextElement();      if (!entry.isDirectory()) {        String entryName=entry.getName();        if (entryName.startsWith("repository/")) {          String fileName=entryName.substring("repository/".length());          File f=new File(localRepoPath,fileName);          if (!f.isFile()) {            f.getParentFile().mkdirs();            InputStream fis=zipFile.getInputStream(entry);            FileOutputStream fos=new FileOutputStream(f);            try {              copy(fis,fos);            }  finally {              close(fis,fos);            }          }        } else         if (entryName.endsWith(".patch") && !entryName.contains("/")) {          File f=new File(patchDir,entryName);          if (!f.isFile()) {            InputStream fis=zipFile.getInputStream(entry);            FileOutputStream fos=new FileOutputStream(f);            try {              copy(fis,fos);            }  finally {              close(fis,fos);            }          }          Patch patch=load(f);          f.renameTo(new File(patchDir,patch.getId() + ".patch"));          patches.add(patch);        }      }    }    close(zipFile);    file.delete();  } else {    Patch patch=load(file);    file.renameTo(new File(patchDir,patch.getId() + ".patch"));    patches.add(patch);  }  return patches;} catch (Exception e) {  throw new PatchException("Unable to download patch from url " + url,e);} @TO@ try {  File file=new File(patchDir,Long.toString(System.currentTimeMillis()) + ".patch.tmp");  InputStream is=null;  OutputStream os=null;  try {    is=url.openStream();    os=new FileOutputStream(file);    copy(is,os);  }  finally {    close(is,os);  }  List<Patch> patches=new ArrayList<Patch>();  ZipFile zipFile=null;  try {    zipFile=new ZipFile(file);  } catch (  IOException e) {  }  if (zipFile != null) {    File localRepoPath=new File(System.getProperty("karaf.base"),"system");    Enumeration<? extends ZipEntry> entries=zipFile.entries();    while (entries.hasMoreElements()) {      ZipEntry entry=entries.nextElement();      if (!entry.isDirectory()) {        String entryName=entry.getName();        if (entryName.startsWith("repository/")) {          String fileName=entryName.substring("repository/".length());          File f=new File(localRepoPath,fileName);          if (!f.isFile()) {            f.getParentFile().mkdirs();            InputStream fis=zipFile.getInputStream(entry);            FileOutputStream fos=new FileOutputStream(f);            try {              copy(fis,fos);            }  finally {              close(fis,fos);            }          }        } else         if (entryName.endsWith(".patch") && !entryName.contains("/")) {          File f=new File(patchDir,entryName);          if (!f.isFile()) {            InputStream fis=zipFile.getInputStream(entry);            FileOutputStream fos=new FileOutputStream(f);            try {              copy(fis,fos);            }  finally {              close(fis,fos);            }          }          Patch patch=load(f);          f.renameTo(new File(patchDir,patch.getId() + ".patch"));          patches.add(patch);        }      }    }    close(zipFile);    file.delete();  } else {    Patch patch=load(file);    file.renameTo(new File(patchDir,patch.getId() + ".patch"));    patches.add(patch);  }  for (  Patch patch : patches) {    this.patches.put(patch.getId(),patch);  }  return patches;} catch (Exception e) {  throw new PatchException("Unable to download patch from url " + url,e);} @AT@ 3675 @LENGTH@ 3215
---INS EnhancedForStatement@@for (Patch patch : patches) {  this.patches.put(patch.getId(),patch);} @TO@ TryStatement@@try {  File file=new File(patchDir,Long.toString(System.currentTimeMillis()) + ".patch.tmp");  InputStream is=null;  OutputStream os=null;  try {    is=url.openStream();    os=new FileOutputStream(file);    copy(is,os);  }  finally {    close(is,os);  }  List<Patch> patches=new ArrayList<Patch>();  ZipFile zipFile=null;  try {    zipFile=new ZipFile(file);  } catch (  IOException e) {  }  if (zipFile != null) {    File localRepoPath=new File(System.getProperty("karaf.base"),"system");    Enumeration<? extends ZipEntry> entries=zipFile.entries();    while (entries.hasMoreElements()) {      ZipEntry entry=entries.nextElement();      if (!entry.isDirectory()) {        String entryName=entry.getName();        if (entryName.startsWith("repository/")) {          String fileName=entryName.substring("repository/".length());          File f=new File(localRepoPath,fileName);          if (!f.isFile()) {            f.getParentFile().mkdirs();            InputStream fis=zipFile.getInputStream(entry);            FileOutputStream fos=new FileOutputStream(f);            try {              copy(fis,fos);            }  finally {              close(fis,fos);            }          }        } else         if (entryName.endsWith(".patch") && !entryName.contains("/")) {          File f=new File(patchDir,entryName);          if (!f.isFile()) {            InputStream fis=zipFile.getInputStream(entry);            FileOutputStream fos=new FileOutputStream(f);            try {              copy(fis,fos);            }  finally {              close(fis,fos);            }          }          Patch patch=load(f);          f.renameTo(new File(patchDir,patch.getId() + ".patch"));          patches.add(patch);        }      }    }    close(zipFile);    file.delete();  } else {    Patch patch=load(file);    file.renameTo(new File(patchDir,patch.getId() + ".patch"));    patches.add(patch);  }  return patches;} catch (Exception e) {  throw new PatchException("Unable to download patch from url " + url,e);} @AT@ 6806 @LENGTH@ 99
------INS SingleVariableDeclaration@@Patch patch @TO@ EnhancedForStatement@@for (Patch patch : patches) {  this.patches.put(patch.getId(),patch);} @AT@ 6811 @LENGTH@ 11
---------INS SimpleType@@Patch @TO@ SingleVariableDeclaration@@Patch patch @AT@ 6811 @LENGTH@ 5
---------INS SimpleName@@patch @TO@ SingleVariableDeclaration@@Patch patch @AT@ 6817 @LENGTH@ 5
------INS SimpleName@@patches @TO@ EnhancedForStatement@@for (Patch patch : patches) {  this.patches.put(patch.getId(),patch);} @AT@ 6825 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:this.patches.put(patch.getId(),patch) @TO@ EnhancedForStatement@@for (Patch patch : patches) {  this.patches.put(patch.getId(),patch);} @AT@ 6852 @LENGTH@ 39
---------INS MethodInvocation@@this.patches.put(patch.getId(),patch) @TO@ ExpressionStatement@@MethodInvocation:this.patches.put(patch.getId(),patch) @AT@ 6852 @LENGTH@ 38
------------INS FieldAccess@@this.patches @TO@ MethodInvocation@@this.patches.put(patch.getId(),patch) @AT@ 6852 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.patches @AT@ 6852 @LENGTH@ 4
---------------INS SimpleName@@patches @TO@ FieldAccess@@this.patches @AT@ 6857 @LENGTH@ 7
------------INS SimpleName@@MethodName:put:[patch.getId(), patch] @TO@ MethodInvocation@@this.patches.put(patch.getId(),patch) @AT@ 6865 @LENGTH@ 25
---------------INS MethodInvocation@@patch.getId() @TO@ SimpleName@@MethodName:put:[patch.getId(), patch] @AT@ 6869 @LENGTH@ 13
------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getId() @AT@ 6869 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@patch.getId() @AT@ 6875 @LENGTH@ 7
---------------INS SimpleName@@patch @TO@ SimpleName@@MethodName:put:[patch.getId(), patch] @AT@ 6884 @LENGTH@ 5


UPD MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @TO@ public, static, WebArchive, MethodName:deployment, Exception,  @AT@ 2127 @LENGTH@ 924
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2172 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:createSecurityDomain() @TO@ MethodDeclaration@@public, static, WebArchive, MethodName:deployment,  @AT@ 2237 @LENGTH@ 23
------MOV MethodInvocation@@MethodName:createSecurityDomain:[] @TO@ ExpressionStatement@@MethodInvocation:createSecurityDomain() @AT@ 2316 @LENGTH@ 22
---DEL TryStatement@@try {  createSecurityDomain();} catch (Exception e) {} @AT@ 2250 @LENGTH@ 153
------DEL ExpressionStatement@@MethodInvocation:createSecurityDomain() @AT@ 2316 @LENGTH@ 23
------DEL CatchClause@@catch (Exception e) {} @AT@ 2350 @LENGTH@ 53
---------DEL SingleVariableDeclaration@@Exception e @AT@ 2357 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 2357 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 2367 @LENGTH@ 1


UPD TryStatement@@try {  nonExistentBean.echo("Hello world to a non-existent bean");  Assert.fail("Expected a NoSuchEJBException");} catch (NoSuchEJBException nsee) {  logger.info("Received the expected exception",nsee);} @TO@ try {  nonExistentBean.echo("Hello world to a non-existent bean");  Assert.fail("Expected a IllegalStateException");} catch (IllegalStateException ise) {  logger.info("Received the expected exception",ise);} @AT@ 9540 @LENGTH@ 279
---UPD ExpressionStatement@@MethodInvocation:Assert.fail("Expected a NoSuchEJBException") @TO@ MethodInvocation:Assert.fail("Expected a IllegalStateException") @AT@ 9630 @LENGTH@ 45
------UPD MethodInvocation@@Assert.fail("Expected a NoSuchEJBException") @TO@ Assert.fail("Expected a IllegalStateException") @AT@ 9630 @LENGTH@ 44
---------UPD SimpleName@@MethodName:fail:["Expected a NoSuchEJBException"] @TO@ MethodName:fail:["Expected a IllegalStateException"] @AT@ 9637 @LENGTH@ 37
------------UPD StringLiteral@@"Expected a NoSuchEJBException" @TO@ "Expected a IllegalStateException" @AT@ 9642 @LENGTH@ 31
---UPD CatchClause@@catch (NoSuchEJBException nsee) {  logger.info("Received the expected exception",nsee);} @TO@ catch (IllegalStateException ise) {  logger.info("Received the expected exception",ise);} @AT@ 9686 @LENGTH@ 133
------UPD SingleVariableDeclaration@@NoSuchEJBException nsee @TO@ IllegalStateException ise @AT@ 9693 @LENGTH@ 23
---------UPD SimpleType@@NoSuchEJBException @TO@ IllegalStateException @AT@ 9693 @LENGTH@ 18
---------UPD SimpleName@@nsee @TO@ ise @AT@ 9712 @LENGTH@ 4
------UPD ExpressionStatement@@MethodInvocation:logger.info("Received the expected exception",nsee) @TO@ MethodInvocation:logger.info("Received the expected exception",ise) @AT@ 9756 @LENGTH@ 53
---------UPD MethodInvocation@@logger.info("Received the expected exception",nsee) @TO@ logger.info("Received the expected exception",ise) @AT@ 9756 @LENGTH@ 52
------------UPD SimpleName@@MethodName:info:["Received the expected exception", nsee] @TO@ MethodName:info:["Received the expected exception", ise] @AT@ 9763 @LENGTH@ 45
---------------UPD SimpleName@@nsee @TO@ ise @AT@ 9803 @LENGTH@ 4


UPD SwitchStatement@@switch (element) {case INCLUDE_MECHANISMS:{    final ModelNode includes=saslElement.get(INCLUDE_MECHANISMS);    for (    final String s : readArrayAttributeElement(reader,"value",String.class)) {      includes.add().set(s);    }    break;  }case POLICY:{  parsePolicyElement(reader,saslElement.get(OP_ADDR),list);  break;}case PROPERTIES:{parseProperties(reader,saslElement.get(OP_ADDR),list);break;}case QOP:{String[] qop=readArrayAttributeElement(reader,"value",String.class);for (String q : qop) {try {  saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase());} catch (IllegalArgumentException e) {  throw MESSAGES.invalidQOPV(q);}}break;}case REUSE_SESSION:{saslElement.get(REUSE_SESSION).set(readBooleanAttributeElement(reader,"value"));break;}case SERVER_AUTH:{saslElement.get(SERVER_AUTH).set(readBooleanAttributeElement(reader,"value"));break;}case STRENGTH:{String[] strength=readArrayAttributeElement(reader,"value",String.class);for (String s : strength) {try {saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase()).name().toLowerCase());} catch (IllegalArgumentException e) {throw MESSAGES.invalidStrength(s);}}break;}default :{throw unexpectedElement(reader);}} @TO@ switch (element) {case INCLUDE_MECHANISMS:{    final ModelNode includes=saslElement.get(INCLUDE_MECHANISMS);    for (    final String s : readArrayAttributeElement(reader,"value",String.class)) {      includes.add().set(s);    }    break;  }case POLICY:{  parsePolicyElement(reader,saslElement.get(OP_ADDR),list);  break;}case PROPERTIES:{parseProperties(reader,saslElement.get(OP_ADDR),list);break;}case QOP:{String[] qop=readArrayAttributeElement(reader,"value",String.class);for (String q : qop) {try {  saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase(Locale.ENGLISH));} catch (IllegalArgumentException e) {  throw MESSAGES.invalidQOPV(q);}}break;}case REUSE_SESSION:{saslElement.get(REUSE_SESSION).set(readBooleanAttributeElement(reader,"value"));break;}case SERVER_AUTH:{saslElement.get(SERVER_AUTH).set(readBooleanAttributeElement(reader,"value"));break;}case STRENGTH:{String[] strength=readArrayAttributeElement(reader,"value",String.class);for (String s : strength) {try {saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase(Locale.ENGLISH)).name().toLowerCase(Locale.ENGLISH));} catch (IllegalArgumentException e) {throw MESSAGES.invalidStrength(s);}}break;}default :{throw unexpectedElement(reader);}} @AT@ 17769 @LENGTH@ 2872
---UPD EnhancedForStatement@@for (String q : qop) {  try {    saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase());  } catch (  IllegalArgumentException e) {    throw MESSAGES.invalidQOPV(q);  }} @TO@ for (String q : qop) {  try {    saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase(Locale.ENGLISH));  } catch (  IllegalArgumentException e) {    throw MESSAGES.invalidQOPV(q);  }} @AT@ 18801 @LENGTH@ 397
------UPD TryStatement@@try {  saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase());} catch (IllegalArgumentException e) {  throw MESSAGES.invalidQOPV(q);} @TO@ try {  saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase(Locale.ENGLISH));} catch (IllegalArgumentException e) {  throw MESSAGES.invalidQOPV(q);} @AT@ 18860 @LENGTH@ 304
---------UPD ExpressionStatement@@MethodInvocation:saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase()) @TO@ MethodInvocation:saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase(Locale.ENGLISH)) @AT@ 18906 @LENGTH@ 74
------------UPD MethodInvocation@@saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase()) @TO@ saslElement.get(QOP).add(SaslQop.fromString(q).getString().toLowerCase(Locale.ENGLISH)) @AT@ 18906 @LENGTH@ 73
---------------UPD SimpleName@@MethodName:add:[SaslQop.fromString(q).getString().toLowerCase()] @TO@ MethodName:add:[SaslQop.fromString(q).getString().toLowerCase(Locale.ENGLISH)] @AT@ 18927 @LENGTH@ 52
------------------UPD MethodInvocation@@SaslQop.fromString(q).getString().toLowerCase() @TO@ SaslQop.fromString(q).getString().toLowerCase(Locale.ENGLISH) @AT@ 18931 @LENGTH@ 47
---------------------UPD SimpleName@@MethodName:toLowerCase:[] @TO@ MethodName:toLowerCase:[Locale.ENGLISH] @AT@ 18965 @LENGTH@ 13
------------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toLowerCase:[] @AT@ 19002 @LENGTH@ 14
---------------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 19002 @LENGTH@ 6
---------------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 19009 @LENGTH@ 7
---UPD EnhancedForStatement@@for (String s : strength) {  try {    saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase()).name().toLowerCase());  } catch (  IllegalArgumentException e) {    throw MESSAGES.invalidStrength(s);  }} @TO@ for (String s : strength) {  try {    saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase(Locale.ENGLISH)).name().toLowerCase(Locale.ENGLISH));  } catch (  IllegalArgumentException e) {    throw MESSAGES.invalidStrength(s);  }} @AT@ 19990 @LENGTH@ 422
------UPD TryStatement@@try {  saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase()).name().toLowerCase());} catch (IllegalArgumentException e) {  throw MESSAGES.invalidStrength(s);} @TO@ try {  saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase(Locale.ENGLISH)).name().toLowerCase(Locale.ENGLISH));} catch (IllegalArgumentException e) {  throw MESSAGES.invalidStrength(s);} @AT@ 20054 @LENGTH@ 324
---------UPD ExpressionStatement@@MethodInvocation:saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase()).name().toLowerCase()) @TO@ MethodInvocation:saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase(Locale.ENGLISH)).name().toLowerCase(Locale.ENGLISH)) @AT@ 20100 @LENGTH@ 90
------------UPD MethodInvocation@@saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase()).name().toLowerCase()) @TO@ saslElement.get(STRENGTH).add(SaslStrength.valueOf(s.toUpperCase(Locale.ENGLISH)).name().toLowerCase(Locale.ENGLISH)) @AT@ 20100 @LENGTH@ 89
---------------UPD SimpleName@@MethodName:add:[SaslStrength.valueOf(s.toUpperCase()).name().toLowerCase()] @TO@ MethodName:add:[SaslStrength.valueOf(s.toUpperCase(Locale.ENGLISH)).name().toLowerCase(Locale.ENGLISH)] @AT@ 20126 @LENGTH@ 63
------------------UPD MethodInvocation@@SaslStrength.valueOf(s.toUpperCase()).name().toLowerCase() @TO@ SaslStrength.valueOf(s.toUpperCase(Locale.ENGLISH)).name().toLowerCase(Locale.ENGLISH) @AT@ 20130 @LENGTH@ 58
---------------------UPD MethodInvocation@@MethodName:valueOf:[s.toUpperCase()] @TO@ MethodName:valueOf:[s.toUpperCase(Locale.ENGLISH)] @AT@ 20130 @LENGTH@ 37
------------------------UPD MethodInvocation@@s.toUpperCase() @TO@ s.toUpperCase(Locale.ENGLISH) @AT@ 20151 @LENGTH@ 15
---------------------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 20153 @LENGTH@ 13
------------------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 20204 @LENGTH@ 14
---------------------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 20204 @LENGTH@ 6
---------------------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 20211 @LENGTH@ 7
---------------------UPD SimpleName@@MethodName:toLowerCase:[] @TO@ MethodName:toLowerCase:[Locale.ENGLISH] @AT@ 20175 @LENGTH@ 13
------------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toLowerCase:[] @AT@ 20240 @LENGTH@ 14
---------------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 20240 @LENGTH@ 6
---------------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 20247 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new InvalidTokenException("Invalid access token: " + accessTokenValue) @TO@ ClassInstanceCreation:new InvalidTokenException("Access token expired: " + accessTokenValue) @AT@ 7727 @LENGTH@ 77
---UPD ClassInstanceCreation@@InvalidTokenException["Invalid access token: " + accessTokenValue] @TO@ InvalidTokenException["Access token expired: " + accessTokenValue] @AT@ 7733 @LENGTH@ 70
------UPD InfixExpression@@"Invalid access token: " + accessTokenValue @TO@ "Access token expired: " + accessTokenValue @AT@ 7759 @LENGTH@ 43
---------UPD StringLiteral@@"Invalid access token: " @TO@ "Access token expired: " @AT@ 7759 @LENGTH@ 24


UPD VariableDeclarationStatement@@List nds=config.getExpressionEngine().query(config.getRoot(),"database.tables.table"); @TO@ List<ConfigurationNode> nds=config.getExpressionEngine().query(config.getRoot(),"database.tables.table"); @AT@ 6816 @LENGTH@ 105
---DEL SimpleType@@List @AT@ 6816 @LENGTH@ 4
---INS ParameterizedType@@List<ConfigurationNode> @TO@ VariableDeclarationStatement@@List nds=config.getExpressionEngine().query(config.getRoot(),"database.tables.table"); @AT@ 7056 @LENGTH@ 23
------INS SimpleType@@List @TO@ ParameterizedType@@List<ConfigurationNode> @AT@ 7056 @LENGTH@ 4
------INS SimpleType@@ConfigurationNode @TO@ ParameterizedType@@List<ConfigurationNode> @AT@ 7061 @LENGTH@ 17


UPD IfStatement@@if (name == null) throw new ServletException("Lookup name not specified."); @TO@ if (name == null) {  throw new ServletException("Lookup name not specified.");} @AT@ 2383 @LENGTH@ 75
---UPD Block@@ThenBody:throw new ServletException("Lookup name not specified."); @TO@ ThenBody:{  throw new ServletException("Lookup name not specified.");} @AT@ 2401 @LENGTH@ 57


UPD ExpressionStatement@@MethodInvocation:DomainModelUtil.initializeMasterDomainRegistry(rootRegistration,persister,null,new MockFileRepository(),new MockDomainController(),null,extensionRegistry) @TO@ MethodInvocation:DomainModelUtil.initializeMasterDomainRegistry(rootRegistration,persister,new MockContentRepository(),new MockFileRepository(),new MockDomainController(),null,extensionRegistry) @AT@ 30510 @LENGTH@ 161
---UPD MethodInvocation@@DomainModelUtil.initializeMasterDomainRegistry(rootRegistration,persister,null,new MockFileRepository(),new MockDomainController(),null,extensionRegistry) @TO@ DomainModelUtil.initializeMasterDomainRegistry(rootRegistration,persister,new MockContentRepository(),new MockFileRepository(),new MockDomainController(),null,extensionRegistry) @AT@ 30510 @LENGTH@ 160
------UPD SimpleName@@MethodName:initializeMasterDomainRegistry:[rootRegistration, persister, null, new MockFileRepository(), new MockDomainController(), null, extensionRegistry] @TO@ MethodName:initializeMasterDomainRegistry:[rootRegistration, persister, new MockContentRepository(), new MockFileRepository(), new MockDomainController(), null, extensionRegistry] @AT@ 30526 @LENGTH@ 144
---------DEL NullLiteral@@null @AT@ 30586 @LENGTH@ 4
---------INS ClassInstanceCreation@@MockContentRepository[] @TO@ SimpleName@@MethodName:initializeMasterDomainRegistry:[rootRegistration, persister, null, new MockFileRepository(), new MockDomainController(), null, extensionRegistry] @AT@ 30629 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@MockContentRepository[] @AT@ 30629 @LENGTH@ 3
------------INS SimpleType@@MockContentRepository @TO@ ClassInstanceCreation@@MockContentRepository[] @AT@ 30633 @LENGTH@ 21


INS MethodDeclaration@@void, MethodName:deleteAllInBatch,  @TO@ TypeDeclaration@@[public]JpaRepository, [PagingAndSortingRepository<T,ID>] @AT@ 2098 @LENGTH@ 19
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:deleteAllInBatch,  @AT@ 2093 @LENGTH@ 4
---INS SimpleName@@MethodName:deleteAllInBatch @TO@ MethodDeclaration@@void, MethodName:deleteAllInBatch,  @AT@ 2098 @LENGTH@ 16


UPD ReturnStatement@@QualifiedName:ManagementProtocol.TYPE_PONG @TO@ QualifiedName:ManagementProtocol.TYPE_PING @AT@ 1318 @LENGTH@ 36
---UPD QualifiedName@@ManagementProtocol.TYPE_PONG @TO@ ManagementProtocol.TYPE_PING @AT@ 1325 @LENGTH@ 28
------UPD SimpleName@@TYPE_PONG @TO@ TYPE_PING @AT@ 1344 @LENGTH@ 9


INS IfStatement@@if (domainSteps.size() == 0) {  return null;} @TO@ MethodDeclaration@@public, ModelNode, MethodName:getDomainOperation,  @AT@ 18057 @LENGTH@ 130
---INS InfixExpression@@domainSteps.size() == 0 @TO@ IfStatement@@if (domainSteps.size() == 0) {  return null;} @AT@ 18061 @LENGTH@ 23
------INS MethodInvocation@@domainSteps.size() @TO@ InfixExpression@@domainSteps.size() == 0 @AT@ 18061 @LENGTH@ 18
---------INS SimpleName@@Name:domainSteps @TO@ MethodInvocation@@domainSteps.size() @AT@ 18061 @LENGTH@ 11
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@domainSteps.size() @AT@ 18073 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@domainSteps.size() == 0 @AT@ 18079 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@domainSteps.size() == 0 @AT@ 18083 @LENGTH@ 1
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (domainSteps.size() == 0) {  return null;} @AT@ 18086 @LENGTH@ 101
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 18157 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 18164 @LENGTH@ 4


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @TO@ TypeDeclaration@@[public]DozerTypeConverter, [TypeConverter] @AT@ 2266 @LENGTH@ 186
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2266 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2277 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2279 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2292 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2292 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2292 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2298 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2301 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2307 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2307 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2314 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Object value,  @AT@ 2331 @LENGTH@ 115
------INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2349 @LENGTH@ 30
---------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2356 @LENGTH@ 22
------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2356 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2366 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2372 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,value);} catch (Exception e) {  return null;} @AT@ 2390 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2397 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2397 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2407 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2424 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2431 @LENGTH@ 4


UPD TypeDeclaration@@[public]CamelConsoleMain,  @TO@ [public, final]CamelConsoleMain,  @AT@ 946 @LENGTH@ 534
---INS Modifier@@final @TO@ TypeDeclaration@@[public]CamelConsoleMain,  @AT@ 953 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:rounds=Integer.valueOf(m.group(3)) @TO@ Assignment:rounds=Integer.parseInt(m.group(3)) @AT@ 4863 @LENGTH@ 37
---UPD Assignment@@rounds=Integer.valueOf(m.group(3)) @TO@ rounds=Integer.parseInt(m.group(3)) @AT@ 4863 @LENGTH@ 36
------UPD MethodInvocation@@Integer.valueOf(m.group(3)) @TO@ Integer.parseInt(m.group(3)) @AT@ 4872 @LENGTH@ 27
---------UPD SimpleName@@MethodName:valueOf:[m.group(3)] @TO@ MethodName:parseInt:[m.group(3)] @AT@ 4880 @LENGTH@ 19


UPD CatchClause@@catch (FailedToCreateRouteException e) {  NoSuchBeanException cause=assertIsInstanceOf(NoSuchBeanException.class,e.getCause());  assertEquals("myUnknownProfile",cause.getName());} @TO@ catch (FailedToCreateRouteException e) {  IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause());  assertTrue(cause.getMessage().contains("myUnknownProfile"));} @AT@ 2012 @LENGTH@ 214
---UPD VariableDeclarationStatement@@NoSuchBeanException cause=assertIsInstanceOf(NoSuchBeanException.class,e.getCause()); @TO@ IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause()); @AT@ 2065 @LENGTH@ 88
------UPD SimpleType@@NoSuchBeanException @TO@ IllegalArgumentException @AT@ 2065 @LENGTH@ 19
------UPD VariableDeclarationFragment@@cause=assertIsInstanceOf(NoSuchBeanException.class,e.getCause()) @TO@ cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @AT@ 2085 @LENGTH@ 67
---------UPD MethodInvocation@@assertIsInstanceOf(NoSuchBeanException.class,e.getCause()) @TO@ assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @AT@ 2093 @LENGTH@ 59
------------UPD SimpleName@@MethodName:assertIsInstanceOf:[NoSuchBeanException.class, e.getCause()] @TO@ MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @AT@ 2093 @LENGTH@ 59
---------------UPD TypeLiteral@@NoSuchBeanException.class @TO@ IllegalArgumentException.class @AT@ 2112 @LENGTH@ 25
---UPD ExpressionStatement@@MethodInvocation:assertEquals("myUnknownProfile",cause.getName()) @TO@ MethodInvocation:assertTrue(cause.getMessage().contains("myUnknownProfile")) @AT@ 2166 @LENGTH@ 50
------UPD MethodInvocation@@assertEquals("myUnknownProfile",cause.getName()) @TO@ assertTrue(cause.getMessage().contains("myUnknownProfile")) @AT@ 2166 @LENGTH@ 49
---------UPD SimpleName@@MethodName:assertEquals:["myUnknownProfile", cause.getName()] @TO@ MethodName:assertTrue:[cause.getMessage().contains("myUnknownProfile")] @AT@ 2166 @LENGTH@ 49
------------DEL StringLiteral@@"myUnknownProfile" @AT@ 2179 @LENGTH@ 18
------------UPD MethodInvocation@@cause.getName() @TO@ cause.getMessage().contains("myUnknownProfile") @AT@ 2199 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getName() @AT@ 2187 @LENGTH@ 18
---------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getName() @AT@ 2187 @LENGTH@ 18
---------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:contains:["myUnknownProfile"] @AT@ 2205 @LENGTH@ 9
------------------INS StringLiteral@@"myUnknownProfile" @TO@ SimpleName@@MethodName:getName:[] @AT@ 2215 @LENGTH@ 18


UPD ReturnStatement@@SuperMethodInvocation:super.getFieldName() @TO@ FieldAccess:this.fieldName @AT@ 2028 @LENGTH@ 28
---INS FieldAccess@@this.fieldName @TO@ ReturnStatement@@SuperMethodInvocation:super.getFieldName() @AT@ 2031 @LENGTH@ 14
------INS ThisExpression@@this @TO@ FieldAccess@@this.fieldName @AT@ 2031 @LENGTH@ 4
------INS SimpleName@@fieldName @TO@ FieldAccess@@this.fieldName @AT@ 2036 @LENGTH@ 9
---DEL SuperMethodInvocation@@super.getFieldName() @AT@ 2035 @LENGTH@ 20
------DEL SimpleName@@MethodName:getFieldName:[] @AT@ 2041 @LENGTH@ 12


UPD ForStatement@@for (int i=pa.size() - 1; i > 0; i++) {  PathElement pe=pa.getElement(i);  if (ModelDescriptionConstants.SECURITY_REALM.equals(pe.getKey())) {    realmPA=pa.subAddress(0,i + 1);    break;  }} @TO@ for (int i=pa.size() - 1; i > 0; i--) {  PathElement pe=pa.getElement(i);  if (ModelDescriptionConstants.SECURITY_REALM.equals(pe.getKey())) {    realmPA=pa.subAddress(0,i + 1);    break;  }} @AT@ 2525 @LENGTH@ 266
---UPD PostfixExpression@@i++ @TO@ i-- @AT@ 2560 @LENGTH@ 3
------UPD Operator@@++ @TO@ -- @AT@ 2562 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:realm=securityRealm.getName() @TO@ Assignment:realm=securityRealm != null ? securityRealm.getName() : null @AT@ 968 @LENGTH@ 32
---UPD Assignment@@realm=securityRealm.getName() @TO@ realm=securityRealm != null ? securityRealm.getName() : null @AT@ 968 @LENGTH@ 31
------INS ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @TO@ Assignment@@realm=securityRealm.getName() @AT@ 976 @LENGTH@ 54
---------INS InfixExpression@@securityRealm != null @TO@ ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @AT@ 976 @LENGTH@ 21
------------INS SimpleName@@securityRealm @TO@ InfixExpression@@securityRealm != null @AT@ 976 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@securityRealm != null @AT@ 989 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@securityRealm != null @AT@ 993 @LENGTH@ 4
---------INS MethodInvocation@@securityRealm.getName() @TO@ ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @AT@ 1000 @LENGTH@ 23
------------MOV SimpleName@@Name:securityRealm @TO@ MethodInvocation@@securityRealm.getName() @AT@ 976 @LENGTH@ 13
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@securityRealm.getName() @AT@ 990 @LENGTH@ 9
---------INS NullLiteral@@null @TO@ ConditionalExpression@@securityRealm != null ? securityRealm.getName() : null @AT@ 1026 @LENGTH@ 4
------DEL MethodInvocation@@securityRealm.getName() @AT@ 976 @LENGTH@ 23


DEL ExpressionStatement@@MethodInvocation:deleteDirectory("activemq-data") @AT@ 2690 @LENGTH@ 33
---DEL MethodInvocation@@deleteDirectory("activemq-data") @AT@ 2690 @LENGTH@ 32
------DEL SimpleName@@MethodName:deleteDirectory:["activemq-data"] @AT@ 2690 @LENGTH@ 32
---------DEL StringLiteral@@"activemq-data" @AT@ 2706 @LENGTH@ 15


INS IfStatement@@if (host == null) {  host=ObjectHelper.before(remaining,"/");} @TO@ MethodDeclaration@@protected, QuartzEndpoint, MethodName:createEndpoint, final String uri, final String remaining, final Map<String,Object> parameters, Exception,  @AT@ 3683 @LENGTH@ 85
---INS InfixExpression@@host == null @TO@ IfStatement@@if (host == null) {  host=ObjectHelper.before(remaining,"/");} @AT@ 3687 @LENGTH@ 12
------INS SimpleName@@host @TO@ InfixExpression@@host == null @AT@ 3687 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@host == null @AT@ 3691 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@host == null @AT@ 3695 @LENGTH@ 4
---INS Block@@ThenBody:{  host=ObjectHelper.before(remaining,"/");} @TO@ IfStatement@@if (host == null) {  host=ObjectHelper.before(remaining,"/");} @AT@ 3701 @LENGTH@ 67
------INS ExpressionStatement@@Assignment:host=ObjectHelper.before(remaining,"/") @TO@ Block@@ThenBody:{  host=ObjectHelper.before(remaining,"/");} @AT@ 3715 @LENGTH@ 43
---------INS Assignment@@host=ObjectHelper.before(remaining,"/") @TO@ ExpressionStatement@@Assignment:host=ObjectHelper.before(remaining,"/") @AT@ 3715 @LENGTH@ 42
------------INS SimpleName@@host @TO@ Assignment@@host=ObjectHelper.before(remaining,"/") @AT@ 3715 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@host=ObjectHelper.before(remaining,"/") @AT@ 3719 @LENGTH@ 1
------------INS MethodInvocation@@ObjectHelper.before(remaining,"/") @TO@ Assignment@@host=ObjectHelper.before(remaining,"/") @AT@ 3722 @LENGTH@ 35
---------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.before(remaining,"/") @AT@ 3722 @LENGTH@ 12
---------------INS SimpleName@@MethodName:before:[remaining, "/"] @TO@ MethodInvocation@@ObjectHelper.before(remaining,"/") @AT@ 3735 @LENGTH@ 22
------------------INS SimpleName@@remaining @TO@ SimpleName@@MethodName:before:[remaining, "/"] @AT@ 3742 @LENGTH@ 9
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:before:[remaining, "/"] @AT@ 3753 @LENGTH@ 3


UPD ReturnStatement@@NullLiteral:null @TO@ ThisExpression:this @AT@ 2369 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 2376 @LENGTH@ 4
---INS ThisExpression@@this @TO@ ReturnStatement@@NullLiteral:null @AT@ 2376 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2803 @LENGTH@ 638
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2862 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2862 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2868 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2875 @LENGTH@ 11


UPD SwitchStatement@@switch (element) {case NAME:  tag.setName(getElementText(reader));break;case TAG_CLASS:tag.setTagClass(getElementText(reader));break;case TAGCLASS:if (version == Version.TLD_1_1) {tag.setTagClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTagClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case TEI_CLASS:tag.setTeiClass(getElementText(reader));break;case TEICLASS:if (version == Version.TLD_1_1) {tag.setTeiClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTeiClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case BODY_CONTENT:tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));break;case BODYCONTENT:if (version == Version.TLD_1_1) {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else if (version == Version.TLD_1_2) {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {throw unexpectedElement(reader);}break;case INFO:if (version == Version.TLD_1_1) {((Tag11MetaData)tag).setInfo(getElementText(reader));} else if (version == Version.TLD_1_2) {getElementText(reader);} else {throw unexpectedElement(reader);}break;case SMALL_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setSmallIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case LARGE_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setLargeIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case VARIABLE:List<VariableMetaData> variables=tag.getVariables();if (variables == null) {variables=new ArrayList<VariableMetaData>();tag.setVariables(variables);}variables.add(VariableMetaDataParser.parse(reader));break;case ATTRIBUTE:List<AttributeMetaData> attributes=tag.getAttributes();if (attributes == null) {attributes=new ArrayList<AttributeMetaData>();tag.setAttributes(attributes);}attributes.add(AttributeMetaDataParser.parse(reader));break;case DYNAMIC_ATTRIBUTES:tag.setDynamicAttributes(getElementText(reader));break;case EXAMPLE:List<String> examples=tag.getExamples();if (examples == null) {examples=new ArrayList<String>();tag.setExamples(examples);}examples.add(getElementText(reader));break;case TAG_EXTENSION:List<TldExtensionMetaData> extensions=tag.getTagExtensions();if (extensions == null) {extensions=new ArrayList<TldExtensionMetaData>();tag.setTagExtensions(extensions);}extensions.add(TldExtensionMetaDataParser.parse(reader));break;default :throw unexpectedElement(reader);} @TO@ switch (element) {case NAME:  tag.setName(getElementText(reader));break;case TAG_CLASS:tag.setTagClass(getElementText(reader));break;case TAGCLASS:if (version == Version.TLD_1_1) {tag.setTagClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTagClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case TEI_CLASS:tag.setTeiClass(getElementText(reader));break;case TEICLASS:if (version == Version.TLD_1_1) {tag.setTeiClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTeiClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case BODY_CONTENT:try {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}break;case BODYCONTENT:if (version == Version.TLD_1_1) {try {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}} else if (version == Version.TLD_1_2) {try {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}} else {throw unexpectedElement(reader);}break;case INFO:if (version == Version.TLD_1_1) {((Tag11MetaData)tag).setInfo(getElementText(reader));} else if (version == Version.TLD_1_2) {getElementText(reader);} else {throw unexpectedElement(reader);}break;case SMALL_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setSmallIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case LARGE_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setLargeIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case VARIABLE:List<VariableMetaData> variables=tag.getVariables();if (variables == null) {variables=new ArrayList<VariableMetaData>();tag.setVariables(variables);}variables.add(VariableMetaDataParser.parse(reader));break;case ATTRIBUTE:List<AttributeMetaData> attributes=tag.getAttributes();if (attributes == null) {attributes=new ArrayList<AttributeMetaData>();tag.setAttributes(attributes);}attributes.add(AttributeMetaDataParser.parse(reader));break;case DYNAMIC_ATTRIBUTES:tag.setDynamicAttributes(getElementText(reader));break;case EXAMPLE:List<String> examples=tag.getExamples();if (examples == null) {examples=new ArrayList<String>();tag.setExamples(examples);}examples.add(getElementText(reader));break;case TAG_EXTENSION:List<TldExtensionMetaData> extensions=tag.getTagExtensions();if (extensions == null) {extensions=new ArrayList<TldExtensionMetaData>();tag.setTagExtensions(extensions);}extensions.add(TldExtensionMetaDataParser.parse(reader));break;default :throw unexpectedElement(reader);} @AT@ 3395 @LENGTH@ 4826
---INS TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case NAME:  tag.setName(getElementText(reader));break;case TAG_CLASS:tag.setTagClass(getElementText(reader));break;case TAGCLASS:if (version == Version.TLD_1_1) {tag.setTagClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTagClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case TEI_CLASS:tag.setTeiClass(getElementText(reader));break;case TEICLASS:if (version == Version.TLD_1_1) {tag.setTeiClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTeiClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case BODY_CONTENT:tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));break;case BODYCONTENT:if (version == Version.TLD_1_1) {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else if (version == Version.TLD_1_2) {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {throw unexpectedElement(reader);}break;case INFO:if (version == Version.TLD_1_1) {((Tag11MetaData)tag).setInfo(getElementText(reader));} else if (version == Version.TLD_1_2) {getElementText(reader);} else {throw unexpectedElement(reader);}break;case SMALL_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setSmallIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case LARGE_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setLargeIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case VARIABLE:List<VariableMetaData> variables=tag.getVariables();if (variables == null) {variables=new ArrayList<VariableMetaData>();tag.setVariables(variables);}variables.add(VariableMetaDataParser.parse(reader));break;case ATTRIBUTE:List<AttributeMetaData> attributes=tag.getAttributes();if (attributes == null) {attributes=new ArrayList<AttributeMetaData>();tag.setAttributes(attributes);}attributes.add(AttributeMetaDataParser.parse(reader));break;case DYNAMIC_ATTRIBUTES:tag.setDynamicAttributes(getElementText(reader));break;case EXAMPLE:List<String> examples=tag.getExamples();if (examples == null) {examples=new ArrayList<String>();tag.setExamples(examples);}examples.add(getElementText(reader));break;case TAG_EXTENSION:List<TldExtensionMetaData> extensions=tag.getTagExtensions();if (extensions == null) {extensions=new ArrayList<TldExtensionMetaData>();tag.setTagExtensions(extensions);}extensions.add(TldExtensionMetaDataParser.parse(reader));break;default :throw unexpectedElement(reader);} @AT@ 4742 @LENGTH@ 237
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 4863 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 4870 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 4870 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 4895 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 4924 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 4930 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 4930 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 4946 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 4954 @LENGTH@ 1
------MOV ExpressionStatement@@MethodInvocation:tag.setBodyContent(BodyContentType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 4950 @LENGTH@ 68
---DEL IfStatement@@if (version == Version.TLD_1_1) {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else if (version == Version.TLD_1_2) {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {  throw unexpectedElement(reader);} @AT@ 4892 @LENGTH@ 438
------DEL Block@@ThenBody:{  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} @AT@ 4924 @LENGTH@ 116
------DEL Block@@ElseBody:if (version == Version.TLD_1_2) {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {  throw unexpectedElement(reader);} @AT@ 5046 @LENGTH@ 284
---MOV IfStatement@@if (version == Version.TLD_1_2) {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {  throw unexpectedElement(reader);} @TO@ SwitchStatement@@switch (element) {case NAME:  tag.setName(getElementText(reader));break;case TAG_CLASS:tag.setTagClass(getElementText(reader));break;case TAGCLASS:if (version == Version.TLD_1_1) {tag.setTagClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTagClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case TEI_CLASS:tag.setTeiClass(getElementText(reader));break;case TEICLASS:if (version == Version.TLD_1_1) {tag.setTeiClass(getElementText(reader));} else if (version == Version.TLD_1_2) {tag.setTeiClass(getElementText(reader));} else {throw unexpectedElement(reader);}break;case BODY_CONTENT:tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));break;case BODYCONTENT:if (version == Version.TLD_1_1) {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else if (version == Version.TLD_1_2) {tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {throw unexpectedElement(reader);}break;case INFO:if (version == Version.TLD_1_1) {((Tag11MetaData)tag).setInfo(getElementText(reader));} else if (version == Version.TLD_1_2) {getElementText(reader);} else {throw unexpectedElement(reader);}break;case SMALL_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setSmallIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case LARGE_ICON:if (version == Version.TLD_1_2) {((Tag12MetaData)tag).setLargeIcon(getElementText(reader));} else {throw unexpectedElement(reader);}break;case VARIABLE:List<VariableMetaData> variables=tag.getVariables();if (variables == null) {variables=new ArrayList<VariableMetaData>();tag.setVariables(variables);}variables.add(VariableMetaDataParser.parse(reader));break;case ATTRIBUTE:List<AttributeMetaData> attributes=tag.getAttributes();if (attributes == null) {attributes=new ArrayList<AttributeMetaData>();tag.setAttributes(attributes);}attributes.add(AttributeMetaDataParser.parse(reader));break;case DYNAMIC_ATTRIBUTES:tag.setDynamicAttributes(getElementText(reader));break;case EXAMPLE:List<String> examples=tag.getExamples();if (examples == null) {examples=new ArrayList<String>();tag.setExamples(examples);}examples.add(getElementText(reader));break;case TAG_EXTENSION:List<TldExtensionMetaData> extensions=tag.getTagExtensions();if (extensions == null) {extensions=new ArrayList<TldExtensionMetaData>();tag.setTagExtensions(extensions);}extensions.add(TldExtensionMetaDataParser.parse(reader));break;default :throw unexpectedElement(reader);} @AT@ 5046 @LENGTH@ 284
------MOV InfixExpression@@version == Version.TLD_1_1 @TO@ IfStatement@@if (version == Version.TLD_1_2) {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {  throw unexpectedElement(reader);} @AT@ 4896 @LENGTH@ 26
------UPD Block@@ThenBody:{  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} @TO@ ThenBody:{  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} @AT@ 5078 @LENGTH@ 166
---------INS TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ Block@@ThenBody:{  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} @AT@ 5119 @LENGTH@ 253
------------MOV ExpressionStatement@@MethodInvocation:tag.setBodyContent(BodyContentType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 5154 @LENGTH@ 68
------------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 5248 @LENGTH@ 124
---------------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 5255 @LENGTH@ 26
------------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 5255 @LENGTH@ 24
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 5280 @LENGTH@ 1
---------------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 5313 @LENGTH@ 33
------------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 5319 @LENGTH@ 26
---------------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 5319 @LENGTH@ 26
------------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 5335 @LENGTH@ 6
------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 5343 @LENGTH@ 1
------INS Block@@ElseBody:if (version == Version.TLD_1_2) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else {  throw unexpectedElement(reader);} @TO@ IfStatement@@if (version == Version.TLD_1_2) {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} else {  throw unexpectedElement(reader);} @AT@ 5400 @LENGTH@ 472
---------INS IfStatement@@if (version == Version.TLD_1_2) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else {  throw unexpectedElement(reader);} @TO@ Block@@ElseBody:if (version == Version.TLD_1_2) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else {  throw unexpectedElement(reader);} @AT@ 5400 @LENGTH@ 472
------------MOV InfixExpression@@version == Version.TLD_1_2 @TO@ IfStatement@@if (version == Version.TLD_1_2) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else {  throw unexpectedElement(reader);} @AT@ 5050 @LENGTH@ 26
------------MOV Block@@ElseBody:{  throw unexpectedElement(reader);} @TO@ IfStatement@@if (version == Version.TLD_1_2) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else {  throw unexpectedElement(reader);} @AT@ 5250 @LENGTH@ 80
------------INS Block@@ThenBody:{  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} @TO@ IfStatement@@if (version == Version.TLD_1_2) {  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} else {  throw unexpectedElement(reader);} @AT@ 5432 @LENGTH@ 354
---------------INS TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ Block@@ThenBody:{  try {    tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }} @AT@ 5511 @LENGTH@ 253
------------------MOV ExpressionStatement@@MethodInvocation:tag.setBodyContent(BodyContentType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 4742 @LENGTH@ 68
------------------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  tag.setBodyContent(BodyContentType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 5640 @LENGTH@ 124
---------------------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 5647 @LENGTH@ 26
------------------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 5647 @LENGTH@ 24
------------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 5672 @LENGTH@ 1
---------------------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 5705 @LENGTH@ 33
------------------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 5711 @LENGTH@ 26
---------------------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 5711 @LENGTH@ 26
------------------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 5727 @LENGTH@ 6
------------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 5735 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 5711 @LENGTH@ 26
------------------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 5727 @LENGTH@ 6
------------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 5735 @LENGTH@ 1


UPD VariableDeclarationStatement@@final Transaction transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID); @TO@ final Transaction transaction=this.transactionsRepository.getTransaction(this.xidTransactionID); @AT@ 4030 @LENGTH@ 101
---UPD VariableDeclarationFragment@@transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ transaction=this.transactionsRepository.getTransaction(this.xidTransactionID) @AT@ 4048 @LENGTH@ 82
------UPD MethodInvocation@@this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ this.transactionsRepository.getTransaction(this.xidTransactionID) @AT@ 4062 @LENGTH@ 68
---------UPD SimpleName@@MethodName:removeTransaction:[this.xidTransactionID] @TO@ MethodName:getTransaction:[this.xidTransactionID] @AT@ 4090 @LENGTH@ 40


UPD VariableDeclarationStatement@@final String host=InetAddress.getByName(managementSocket.getHostName()).getHostName(); @TO@ final String host=ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()); @AT@ 8389 @LENGTH@ 88
---UPD VariableDeclarationFragment@@host=InetAddress.getByName(managementSocket.getHostName()).getHostName() @TO@ host=ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @AT@ 8402 @LENGTH@ 74
------INS MethodInvocation@@ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @TO@ VariableDeclarationFragment@@host=InetAddress.getByName(managementSocket.getHostName()).getHostName() @AT@ 8456 @LENGTH@ 108
---------INS SimpleName@@Name:ProtocolUtils @TO@ MethodInvocation@@ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @AT@ 8456 @LENGTH@ 13
---------INS SimpleName@@MethodName:formatPossibleIpv6Address:[InetAddress.getByName(managementSocket.getHostName()).getHostName()] @TO@ MethodInvocation@@ProtocolUtils.formatPossibleIpv6Address(InetAddress.getByName(managementSocket.getHostName()).getHostName()) @AT@ 8470 @LENGTH@ 94
------------MOV MethodInvocation@@InetAddress.getByName(managementSocket.getHostName()).getHostName() @TO@ SimpleName@@MethodName:formatPossibleIpv6Address:[InetAddress.getByName(managementSocket.getHostName()).getHostName()] @AT@ 8409 @LENGTH@ 67


INS MethodDeclaration@@void, MethodName:dynamicStubCreationFailed, String clazz, @Cause Throwable t,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]EjbLogger, [BasicLogger] @AT@ 14771 @LENGTH@ 60
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:dynamicStubCreationFailed, String clazz, @Cause Throwable t,  @AT@ 14766 @LENGTH@ 4
---INS SimpleName@@MethodName:dynamicStubCreationFailed @TO@ MethodDeclaration@@void, MethodName:dynamicStubCreationFailed, String clazz, @Cause Throwable t,  @AT@ 14771 @LENGTH@ 25
---INS SingleVariableDeclaration@@String clazz @TO@ MethodDeclaration@@void, MethodName:dynamicStubCreationFailed, String clazz, @Cause Throwable t,  @AT@ 14797 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String clazz @AT@ 14797 @LENGTH@ 6
------INS SimpleName@@clazz @TO@ SingleVariableDeclaration@@String clazz @AT@ 14804 @LENGTH@ 5
---INS SingleVariableDeclaration@@@Cause Throwable t @TO@ MethodDeclaration@@void, MethodName:dynamicStubCreationFailed, String clazz, @Cause Throwable t,  @AT@ 14811 @LENGTH@ 18
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@@Cause Throwable t @AT@ 14818 @LENGTH@ 9
------INS SimpleName@@t @TO@ SingleVariableDeclaration@@@Cause Throwable t @AT@ 14828 @LENGTH@ 1


UPD Block@@ThenBody:{  createContainerConfig(parent != null ? parent.getId() : "",metadata.getContainerName());  ByteArrayOutputStream baos=new ByteArrayOutputStream();  ObjectOutputStream oos=new ObjectOutputStream(baos);  oos.writeObject(metadata);  oos.close();  ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()),Base64Encoder.encode(baos.toByteArray()));  Map<String,String> configuration=metadata.getContainerConfguration();  for (  Map.Entry<String,String> entry : configuration.entrySet()) {    String key=entry.getKey();    String value=entry.getValue();    ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_ENTRY.getPath(metadata.getContainerName(),key),value);  }  ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_RESOLVER.getPath(metadata.getContainerName()),options.getResolver());} @TO@ ThenBody:{  createContainerConfig(parent != null ? parent.getId() : "",metadata.getContainerName());  ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()),Base64Encoder.encode(ObjectUtils.toBytes(metadata)));  Map<String,String> configuration=metadata.getContainerConfguration();  for (  Map.Entry<String,String> entry : configuration.entrySet()) {    String key=entry.getKey();    String value=entry.getValue();    ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_ENTRY.getPath(metadata.getContainerName(),key),value);  }  ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_RESOLVER.getPath(metadata.getContainerName()),options.getResolver());} @AT@ 10030 @LENGTH@ 1292
---DEL VariableDeclarationStatement@@ByteArrayOutputStream baos=new ByteArrayOutputStream(); @AT@ 10212 @LENGTH@ 57
------DEL SimpleType@@ByteArrayOutputStream @AT@ 10212 @LENGTH@ 21
------DEL VariableDeclarationFragment@@baos=new ByteArrayOutputStream() @AT@ 10234 @LENGTH@ 34
---------DEL SimpleName@@baos @AT@ 10234 @LENGTH@ 4
---------DEL ClassInstanceCreation@@ByteArrayOutputStream[] @AT@ 10241 @LENGTH@ 27
------------DEL New@@new @AT@ 10241 @LENGTH@ 3
------------DEL SimpleType@@ByteArrayOutputStream @AT@ 10245 @LENGTH@ 21
---DEL VariableDeclarationStatement@@ObjectOutputStream oos=new ObjectOutputStream(baos); @AT@ 10294 @LENGTH@ 54
------DEL SimpleType@@ObjectOutputStream @AT@ 10294 @LENGTH@ 18
------DEL VariableDeclarationFragment@@oos=new ObjectOutputStream(baos) @AT@ 10313 @LENGTH@ 34
---------DEL SimpleName@@oos @AT@ 10313 @LENGTH@ 3
---------DEL ClassInstanceCreation@@ObjectOutputStream[baos] @AT@ 10319 @LENGTH@ 28
------------DEL New@@new @AT@ 10319 @LENGTH@ 3
------------DEL SimpleType@@ObjectOutputStream @AT@ 10323 @LENGTH@ 18
------------DEL SimpleName@@baos @AT@ 10342 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:oos.writeObject(metadata) @AT@ 10373 @LENGTH@ 26
------DEL MethodInvocation@@oos.writeObject(metadata) @AT@ 10373 @LENGTH@ 25
---------DEL SimpleName@@Name:oos @AT@ 10373 @LENGTH@ 3
---------DEL SimpleName@@MethodName:writeObject:[metadata] @AT@ 10377 @LENGTH@ 21
------------DEL SimpleName@@metadata @AT@ 10389 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:oos.close() @AT@ 10424 @LENGTH@ 12
------DEL MethodInvocation@@oos.close() @AT@ 10424 @LENGTH@ 11
---------DEL SimpleName@@Name:oos @AT@ 10424 @LENGTH@ 3
---------DEL SimpleName@@MethodName:close:[] @AT@ 10428 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()),Base64Encoder.encode(baos.toByteArray())) @TO@ MethodInvocation:ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()),Base64Encoder.encode(ObjectUtils.toBytes(metadata))) @AT@ 10560 @LENGTH@ 136
------UPD MethodInvocation@@ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()),Base64Encoder.encode(baos.toByteArray())) @TO@ ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()),Base64Encoder.encode(ObjectUtils.toBytes(metadata))) @AT@ 10560 @LENGTH@ 135
---------UPD SimpleName@@MethodName:set:[zooKeeper, ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()), Base64Encoder.encode(baos.toByteArray())] @TO@ MethodName:set:[zooKeeper, ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()), Base64Encoder.encode(ObjectUtils.toBytes(metadata))] @AT@ 10575 @LENGTH@ 120
------------UPD MethodInvocation@@Base64Encoder.encode(baos.toByteArray()) @TO@ Base64Encoder.encode(ObjectUtils.toBytes(metadata)) @AT@ 10654 @LENGTH@ 40
---------------UPD SimpleName@@MethodName:encode:[baos.toByteArray()] @TO@ MethodName:encode:[ObjectUtils.toBytes(metadata)] @AT@ 10668 @LENGTH@ 26
------------------UPD MethodInvocation@@baos.toByteArray() @TO@ ObjectUtils.toBytes(metadata) @AT@ 10675 @LENGTH@ 18
---------------------UPD SimpleName@@Name:baos @TO@ Name:ObjectUtils @AT@ 10675 @LENGTH@ 4
---------------------UPD SimpleName@@MethodName:toByteArray:[] @TO@ MethodName:toBytes:[metadata] @AT@ 10680 @LENGTH@ 13
------------------------INS SimpleName@@metadata @TO@ SimpleName@@MethodName:toByteArray:[] @AT@ 10493 @LENGTH@ 8


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      final ModelNode metric=new ModelNode();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("property")) {          String properties=prop.getValue().asString();          ModelNode props=ModelNode.fromString(properties);          metric.get("property").set(props);        } else {          metric.get(prop.getName()).set(prop.getValue().asString());        }      }      if (!metric.get("type").isDefined()) {        throw new OperationFailedException(new ModelNode().set(MESSAGES.typeAttributeRequired("add-metric")));      }      if (!dynamicLoadProvider.isDefined()) {        dynamicLoadProvider.get(CommonAttributes.HISTORY).set(9);        dynamicLoadProvider.get(CommonAttributes.DECAY).set(2);      }      replaceMetric(dynamicLoadProvider,metric);      context.completeStep();    }    private void replaceMetric(    ModelNode dynamicLoadProvider,    ModelNode metric){      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      if (dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined()) {        List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();        String type=metric.get("type").asString();        Iterator<ModelNode> it=list.iterator();        dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);        while (it.hasNext()) {          ModelNode node=it.next();          if (!node.get("type").asString().equals(type)) {            dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(node);          }        }      } else {        dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);      }      dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(metric);    }  },OperationContext.Stage.MODEL);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      final ModelNode metric=new ModelNode();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("property")) {          String properties=prop.getValue().asString();          ModelNode props=ModelNode.fromString(properties);          metric.get("property").set(props);        } else {          metric.get(prop.getName()).set(prop.getValue().asString());        }      }      if (!metric.get("type").isDefined()) {        throw new OperationFailedException(new ModelNode().set(MESSAGES.typeAttributeRequired("add-metric")));      }      if (!dynamicLoadProvider.isDefined()) {        dynamicLoadProvider.get(CommonAttributes.HISTORY).set(9);        dynamicLoadProvider.get(CommonAttributes.DECAY).set(2);      }      replaceMetric(dynamicLoadProvider,metric);      context.completeStep();    }    private void replaceMetric(    ModelNode dynamicLoadProvider,    ModelNode metric){      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      if (dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined()) {        List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();        String type=metric.get("type").asString();        Iterator<ModelNode> it=list.iterator();        dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);        while (it.hasNext()) {          ModelNode node=it.next();          if (!node.get("type").asString().equals(type)) {            dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(node);          }        }      } else {        dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);      }      dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(metric);    }  },OperationContext.Stage.MODEL);} @AT@ 2294 @LENGTH@ 3167
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2298 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2298 @LENGTH@ 17
------DEL Operator@@== @AT@ 2315 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2319 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2319 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2319 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2336 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2341 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      final ModelNode metric=new ModelNode();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("property")) {          String properties=prop.getValue().asString();          ModelNode props=ModelNode.fromString(properties);          metric.get("property").set(props);        } else {          metric.get(prop.getName()).set(prop.getValue().asString());        }      }      if (!metric.get("type").isDefined()) {        throw new OperationFailedException(new ModelNode().set(MESSAGES.typeAttributeRequired("add-metric")));      }      if (!dynamicLoadProvider.isDefined()) {        dynamicLoadProvider.get(CommonAttributes.HISTORY).set(9);        dynamicLoadProvider.get(CommonAttributes.DECAY).set(2);      }      replaceMetric(dynamicLoadProvider,metric);      context.completeStep();    }    private void replaceMetric(    ModelNode dynamicLoadProvider,    ModelNode metric){      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      if (dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).isDefined()) {        List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).asList();        String type=metric.get("type").asString();        Iterator<ModelNode> it=list.iterator();        dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);        while (it.hasNext()) {          ModelNode node=it.next();          if (!node.get("type").asString().equals(type)) {            dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(node);          }        }      } else {        dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).set(newlist);      }      dynamicLoadProvider.get(CommonAttributes.LOAD_METRIC).add(metric);    }  },OperationContext.Stage.MODEL);} @AT@ 2298 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2298 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2298 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2306 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:setEncoding, String encoding,  @TO@ TypeDeclaration@@[public]BeanIODataFormat, ServiceSupport[DataFormat, CamelContextAware] @AT@ 6900 @LENGTH@ 99
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setEncoding, String encoding,  @AT@ 6900 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setEncoding, String encoding,  @AT@ 6907 @LENGTH@ 4
---INS SimpleName@@MethodName:setEncoding @TO@ MethodDeclaration@@public, void, MethodName:setEncoding, String encoding,  @AT@ 6912 @LENGTH@ 11
---INS SingleVariableDeclaration@@String encoding @TO@ MethodDeclaration@@public, void, MethodName:setEncoding, String encoding,  @AT@ 6924 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String encoding @AT@ 6924 @LENGTH@ 6
------INS SimpleName@@encoding @TO@ SingleVariableDeclaration@@String encoding @AT@ 6931 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:this.encoding=Charset.forName(encoding) @TO@ MethodDeclaration@@public, void, MethodName:setEncoding, String encoding,  @AT@ 6951 @LENGTH@ 42
------INS Assignment@@this.encoding=Charset.forName(encoding) @TO@ ExpressionStatement@@Assignment:this.encoding=Charset.forName(encoding) @AT@ 6951 @LENGTH@ 41
---------INS FieldAccess@@this.encoding @TO@ Assignment@@this.encoding=Charset.forName(encoding) @AT@ 6951 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.encoding @AT@ 6951 @LENGTH@ 4
------------INS SimpleName@@encoding @TO@ FieldAccess@@this.encoding @AT@ 6956 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@this.encoding=Charset.forName(encoding) @AT@ 6964 @LENGTH@ 1
---------INS MethodInvocation@@Charset.forName(encoding) @TO@ Assignment@@this.encoding=Charset.forName(encoding) @AT@ 6967 @LENGTH@ 25
------------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName(encoding) @AT@ 6967 @LENGTH@ 7
------------INS SimpleName@@MethodName:forName:[encoding] @TO@ MethodInvocation@@Charset.forName(encoding) @AT@ 6975 @LENGTH@ 17
---------------INS SimpleName@@encoding @TO@ SimpleName@@MethodName:forName:[encoding] @AT@ 6983 @LENGTH@ 8


UPD VariableDeclarationStatement@@Result result=patch.simulate(); @TO@ Result result=patch.install(); @AT@ 1520 @LENGTH@ 33
---UPD VariableDeclarationFragment@@result=patch.simulate() @TO@ result=patch.install() @AT@ 1527 @LENGTH@ 25
------UPD MethodInvocation@@patch.simulate() @TO@ patch.install() @AT@ 1536 @LENGTH@ 16
---------UPD SimpleName@@MethodName:simulate:[] @TO@ MethodName:install:[] @AT@ 1542 @LENGTH@ 10


DEL MethodDeclaration@@protected, ValidationConfiguration, MethodName:getModelValidationConfiguration,  @AT@ 2161 @LENGTH@ 199
---DEL Modifier@@protected @AT@ 2161 @LENGTH@ 9
---DEL SimpleType@@ValidationConfiguration @AT@ 2171 @LENGTH@ 23
---DEL SimpleName@@MethodName:getModelValidationConfiguration @AT@ 2195 @LENGTH@ 31
---DEL ReturnStatement@@NullLiteral:null @AT@ 2334 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 2341 @LENGTH@ 4


UPD Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)));} @TO@ ThenBody:{  String indent="";  for (Container c=container; !c.isRoot(); c=c.getParent()) {    indent+="  ";  }  String marker="";  if (container.getId().equals(fabricService.getCurrentContainer().getId())) {    marker="*";  }  out.println(String.format(FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)));} @AT@ 3339 @LENGTH@ 268
---DEL VariableDeclarationStatement@@String indent=container.isRoot() ? "" : "  "; @AT@ 3357 @LENGTH@ 47
------DEL VariableDeclarationFragment@@indent=container.isRoot() ? "" : "  " @AT@ 3364 @LENGTH@ 39
---------DEL ConditionalExpression@@container.isRoot() ? "" : "  " @AT@ 3373 @LENGTH@ 30
------------DEL MethodInvocation@@container.isRoot() @AT@ 3373 @LENGTH@ 18
------------DEL StringLiteral@@"" @AT@ 3394 @LENGTH@ 2
------------DEL StringLiteral@@"  " @AT@ 3399 @LENGTH@ 4
---INS VariableDeclarationStatement@@String indent=""; @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)));} @AT@ 3357 @LENGTH@ 19
------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String indent=""; @AT@ 3357 @LENGTH@ 6
------INS VariableDeclarationFragment@@indent="" @TO@ VariableDeclarationStatement@@String indent=""; @AT@ 3364 @LENGTH@ 11
---------MOV SimpleName@@indent @TO@ VariableDeclarationFragment@@indent="" @AT@ 3364 @LENGTH@ 6
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@indent="" @AT@ 3373 @LENGTH@ 2
---INS ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)));} @AT@ 3393 @LENGTH@ 115
------INS VariableDeclarationExpression@@Container c=container @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 3398 @LENGTH@ 23
---------INS SimpleType@@Container @TO@ VariableDeclarationExpression@@Container c=container @AT@ 3398 @LENGTH@ 9
---------INS VariableDeclarationFragment@@c=container @TO@ VariableDeclarationExpression@@Container c=container @AT@ 3408 @LENGTH@ 13
------------INS SimpleName@@c @TO@ VariableDeclarationFragment@@c=container @AT@ 3408 @LENGTH@ 1
------------INS SimpleName@@container @TO@ VariableDeclarationFragment@@c=container @AT@ 3412 @LENGTH@ 9
------INS PrefixExpression@@!c.isRoot() @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 3423 @LENGTH@ 11
---------INS Operator@@! @TO@ PrefixExpression@@!c.isRoot() @AT@ 3423 @LENGTH@ 1
---------INS MethodInvocation@@c.isRoot() @TO@ PrefixExpression@@!c.isRoot() @AT@ 3424 @LENGTH@ 10
------------MOV SimpleName@@Name:container @TO@ MethodInvocation@@c.isRoot() @AT@ 3373 @LENGTH@ 9
------------MOV SimpleName@@MethodName:isRoot:[] @TO@ MethodInvocation@@c.isRoot() @AT@ 3383 @LENGTH@ 8
------INS Assignment@@c=c.getParent() @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 3436 @LENGTH@ 17
---------INS SimpleName@@c @TO@ Assignment@@c=c.getParent() @AT@ 3436 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@c=c.getParent() @AT@ 3437 @LENGTH@ 1
---------INS MethodInvocation@@c.getParent() @TO@ Assignment@@c=c.getParent() @AT@ 3440 @LENGTH@ 13
------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.getParent() @AT@ 3440 @LENGTH@ 1
------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@c.getParent() @AT@ 3442 @LENGTH@ 11
------INS ExpressionStatement@@Assignment:indent+="  " @TO@ ForStatement@@for (Container c=container; !c.isRoot(); c=c.getParent()) {  indent+="  ";} @AT@ 3477 @LENGTH@ 13
---------INS Assignment@@indent+="  " @TO@ ExpressionStatement@@Assignment:indent+="  " @AT@ 3477 @LENGTH@ 12
------------INS SimpleName@@indent @TO@ Assignment@@indent+="  " @AT@ 3477 @LENGTH@ 6
------------INS Operator@@+= @TO@ Assignment@@indent+="  " @AT@ 3483 @LENGTH@ 2
------------INS StringLiteral@@"  " @TO@ Assignment@@indent+="  " @AT@ 3485 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:out.println(String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container))) @TO@ MethodInvocation:out.println(String.format(FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container))) @AT@ 3421 @LENGTH@ 172
------UPD MethodInvocation@@out.println(String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container))) @TO@ out.println(String.format(FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container))) @AT@ 3421 @LENGTH@ 171
---------UPD SimpleName@@MethodName:println:[String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container))] @TO@ MethodName:println:[String.format(FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container))] @AT@ 3425 @LENGTH@ 167
------------UPD MethodInvocation@@String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)) @TO@ String.format(FORMAT,indent + container.getId() + marker,container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)) @AT@ 3433 @LENGTH@ 158
---------------UPD SimpleName@@MethodName:format:[FORMAT, indent + container.getId(), container.getVersion().getName(), container.isAlive(), toString(container.getProfiles()), status(container)] @TO@ MethodName:format:[FORMAT, indent + container.getId() + marker, container.getVersion().getName(), container.isAlive(), toString(container.getProfiles()), status(container)] @AT@ 3440 @LENGTH@ 151
------------------UPD InfixExpression@@indent + container.getId() @TO@ indent + container.getId() + marker @AT@ 3455 @LENGTH@ 26
---------------------INS SimpleName@@marker @TO@ InfixExpression@@indent + container.getId() @AT@ 3827 @LENGTH@ 6
------------------MOV MethodInvocation@@toString(container.getProfiles()) @TO@ SimpleName@@MethodName:format:[FORMAT, indent + container.getId(), container.getVersion().getName(), container.isAlive(), toString(container.getProfiles()), status(container)] @AT@ 4102 @LENGTH@ 33
---INS VariableDeclarationStatement@@String marker=""; @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)));} @AT@ 3583 @LENGTH@ 19
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String marker=""; @AT@ 3583 @LENGTH@ 6
------INS VariableDeclarationFragment@@marker="" @TO@ VariableDeclarationStatement@@String marker=""; @AT@ 3590 @LENGTH@ 11
---------INS SimpleName@@marker @TO@ VariableDeclarationFragment@@marker="" @AT@ 3590 @LENGTH@ 6
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@marker="" @AT@ 3599 @LENGTH@ 2
---INS IfStatement@@if (container.getId().equals(fabricService.getCurrentContainer().getId())) {  marker="*";} @TO@ Block@@ThenBody:{  String indent=container.isRoot() ? "" : "  ";  out.println(String.format(FORMAT,indent + container.getId(),container.getVersion().getName(),container.isAlive(),toString(container.getProfiles()),status(container)));} @AT@ 3619 @LENGTH@ 128
------INS MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @TO@ IfStatement@@if (container.getId().equals(fabricService.getCurrentContainer().getId())) {  marker="*";} @AT@ 3623 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @AT@ 3623 @LENGTH@ 17
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @AT@ 3623 @LENGTH@ 9
---------INS SimpleName@@MethodName:equals:[fabricService.getCurrentContainer().getId()] @TO@ MethodInvocation@@container.getId().equals(fabricService.getCurrentContainer().getId()) @AT@ 3641 @LENGTH@ 51
------------INS MethodInvocation@@fabricService.getCurrentContainer().getId() @TO@ SimpleName@@MethodName:equals:[fabricService.getCurrentContainer().getId()] @AT@ 3648 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getCurrentContainer:[] @TO@ MethodInvocation@@fabricService.getCurrentContainer().getId() @AT@ 3648 @LENGTH@ 35
---------------INS SimpleName@@Name:fabricService @TO@ MethodInvocation@@fabricService.getCurrentContainer().getId() @AT@ 3648 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@fabricService.getCurrentContainer().getId() @AT@ 3684 @LENGTH@ 7
------INS Block@@ThenBody:{  marker="*";} @TO@ IfStatement@@if (container.getId().equals(fabricService.getCurrentContainer().getId())) {  marker="*";} @AT@ 3694 @LENGTH@ 53
---------INS ExpressionStatement@@Assignment:marker="*" @TO@ Block@@ThenBody:{  marker="*";} @AT@ 3716 @LENGTH@ 13
------------INS Assignment@@marker="*" @TO@ ExpressionStatement@@Assignment:marker="*" @AT@ 3716 @LENGTH@ 12
---------------INS SimpleName@@marker @TO@ Assignment@@marker="*" @AT@ 3716 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@marker="*" @AT@ 3722 @LENGTH@ 1
---------------INS StringLiteral@@"*" @TO@ Assignment@@marker="*" @AT@ 3725 @LENGTH@ 3


UPD MethodDeclaration@@protected, voidMethodName:EntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, final Map<Method,Interceptor> methodInterceptors,  @TO@ protected, voidMethodName:EntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, final Map<Method,Interceptor> methodInterceptors, final InterceptorFactoryContext context,  @AT@ 2350 @LENGTH@ 850
---INS SingleVariableDeclaration@@final InterceptorFactoryContext context @TO@ MethodDeclaration@@protected, voidMethodName:EntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, final Map<Method,Interceptor> methodInterceptors,  @AT@ 2626 @LENGTH@ 39
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 2626 @LENGTH@ 5
------INS SimpleType@@InterceptorFactoryContext @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 2632 @LENGTH@ 25
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext context @AT@ 2658 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore()) @TO@ Assignment:this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore(),context) @AT@ 2751 @LENGTH@ 75
------UPD Assignment@@this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore()) @TO@ this.ejbStore=ejbComponent.createInterceptor(ejbComponent.getEjbStore(),context) @AT@ 2751 @LENGTH@ 74
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbStore()) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbStore(),context) @AT@ 2767 @LENGTH@ 58
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbStore()] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbStore(), context] @AT@ 2780 @LENGTH@ 45
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbStore()] @AT@ 2922 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate()) @TO@ Assignment:this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate(),context) @AT@ 2835 @LENGTH@ 81
------UPD Assignment@@this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate()) @TO@ this.ejbActivate=ejbComponent.createInterceptor(ejbComponent.getEjbActivate(),context) @AT@ 2835 @LENGTH@ 80
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbActivate()) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbActivate(),context) @AT@ 2854 @LENGTH@ 61
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbActivate()] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbActivate(), context] @AT@ 2867 @LENGTH@ 48
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbActivate()] @AT@ 3021 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad()) @TO@ Assignment:this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad(),context) @AT@ 2925 @LENGTH@ 73
------UPD Assignment@@this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad()) @TO@ this.ejbLoad=ejbComponent.createInterceptor(ejbComponent.getEjbLoad(),context) @AT@ 2925 @LENGTH@ 72
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbLoad()) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbLoad(),context) @AT@ 2940 @LENGTH@ 57
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbLoad()] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbLoad(), context] @AT@ 2953 @LENGTH@ 44
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbLoad()] @AT@ 3112 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate()) @TO@ Assignment:this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate(),context) @AT@ 3007 @LENGTH@ 83
------UPD Assignment@@this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate()) @TO@ this.ejbPassivate=ejbComponent.createInterceptor(ejbComponent.getEjbPassivate(),context) @AT@ 3007 @LENGTH@ 82
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getEjbPassivate()) @TO@ ejbComponent.createInterceptor(ejbComponent.getEjbPassivate(),context) @AT@ 3027 @LENGTH@ 62
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbPassivate()] @TO@ MethodName:createInterceptor:[ejbComponent.getEjbPassivate(), context] @AT@ 3040 @LENGTH@ 49
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:createInterceptor:[ejbComponent.getEjbPassivate()] @AT@ 3213 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext()) @TO@ Assignment:this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext(),context) @AT@ 3099 @LENGTH@ 95
------UPD Assignment@@this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext()) @TO@ this.unsetEntityContext=ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext(),context) @AT@ 3099 @LENGTH@ 94
---------UPD MethodInvocation@@ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext()) @TO@ ejbComponent.createInterceptor(ejbComponent.getUnsetEntityContext(),context) @AT@ 3125 @LENGTH@ 68
------------UPD SimpleName@@MethodName:createInterceptor:[ejbComponent.getUnsetEntityContext()] @TO@ MethodName:createInterceptor:[ejbComponent.getUnsetEntityContext(), context] @AT@ 3138 @LENGTH@ 55
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:createInterceptor:[ejbComponent.getUnsetEntityContext()] @AT@ 3326 @LENGTH@ 7


UPD IfStatement@@if (executorService == null) {  ExecutorServiceManager executorServiceManager=routeContext.getCamelContext().getExecutorServiceManager();  if (isParallelProcessing()) {    executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator");  } else {    executorService=new SynchronousExecutorService();  }} @TO@ if (executorService == null && !isParallelProcessing()) {  executorService=new SynchronousExecutorService();} @AT@ 6150 @LENGTH@ 579
---DEL InfixExpression@@executorService == null @AT@ 6154 @LENGTH@ 23
---INS InfixExpression@@executorService == null && !isParallelProcessing() @TO@ IfStatement@@if (executorService == null) {  ExecutorServiceManager executorServiceManager=routeContext.getCamelContext().getExecutorServiceManager();  if (isParallelProcessing()) {    executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator");  } else {    executorService=new SynchronousExecutorService();  }} @AT@ 6178 @LENGTH@ 50
------INS InfixExpression@@executorService == null @TO@ InfixExpression@@executorService == null && !isParallelProcessing() @AT@ 6178 @LENGTH@ 23
---------MOV SimpleName@@executorService @TO@ InfixExpression@@executorService == null @AT@ 6154 @LENGTH@ 15
---------MOV Operator@@== @TO@ InfixExpression@@executorService == null @AT@ 6169 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@executorService == null @AT@ 6173 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@executorService == null && !isParallelProcessing() @AT@ 6201 @LENGTH@ 2
------INS PrefixExpression@@!isParallelProcessing() @TO@ InfixExpression@@executorService == null && !isParallelProcessing() @AT@ 6205 @LENGTH@ 23
---------INS Operator@@! @TO@ PrefixExpression@@!isParallelProcessing() @AT@ 6205 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:isParallelProcessing:[] @TO@ PrefixExpression@@!isParallelProcessing() @AT@ 6206 @LENGTH@ 22
---DEL Block@@ThenBody:{  ExecutorServiceManager executorServiceManager=routeContext.getCamelContext().getExecutorServiceManager();  if (isParallelProcessing()) {    executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator");  } else {    executorService=new SynchronousExecutorService();  }} @AT@ 6179 @LENGTH@ 550
------DEL VariableDeclarationStatement@@ExecutorServiceManager executorServiceManager=routeContext.getCamelContext().getExecutorServiceManager(); @AT@ 6257 @LENGTH@ 107
---------DEL SimpleType@@ExecutorServiceManager @AT@ 6257 @LENGTH@ 22
---------DEL VariableDeclarationFragment@@executorServiceManager=routeContext.getCamelContext().getExecutorServiceManager() @AT@ 6280 @LENGTH@ 83
------------DEL SimpleName@@executorServiceManager @AT@ 6280 @LENGTH@ 22
------------DEL MethodInvocation@@routeContext.getCamelContext().getExecutorServiceManager() @AT@ 6305 @LENGTH@ 58
---------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 6305 @LENGTH@ 30
---------------DEL SimpleName@@Name:routeContext @AT@ 6305 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getExecutorServiceManager:[] @AT@ 6336 @LENGTH@ 27
------DEL IfStatement@@if (isParallelProcessing()) {  executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator");} else {  executorService=new SynchronousExecutorService();} @AT@ 6377 @LENGTH@ 342
---------DEL MethodInvocation@@MethodName:isParallelProcessing:[] @AT@ 6381 @LENGTH@ 22
---------DEL Block@@ThenBody:{  executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator");} @AT@ 6405 @LENGTH@ 114
------------DEL ExpressionStatement@@Assignment:executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator") @AT@ 6423 @LENGTH@ 82
---------------DEL Assignment@@executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator") @AT@ 6423 @LENGTH@ 81
------------------DEL SimpleName@@executorService @AT@ 6423 @LENGTH@ 15
------------------DEL Operator@@= @AT@ 6438 @LENGTH@ 1
------------------DEL MethodInvocation@@executorServiceManager.newDefaultThreadPool(this,"Aggregator") @AT@ 6441 @LENGTH@ 63
---------------------DEL SimpleName@@Name:executorServiceManager @AT@ 6441 @LENGTH@ 22
---------------------DEL SimpleName@@MethodName:newDefaultThreadPool:[this, "Aggregator"] @AT@ 6464 @LENGTH@ 40
------------------------DEL ThisExpression@@this @AT@ 6485 @LENGTH@ 4
------------------------DEL StringLiteral@@"Aggregator" @AT@ 6491 @LENGTH@ 12
---MOV Block@@ElseBody:{  executorService=new SynchronousExecutorService();} @TO@ IfStatement@@if (executorService == null) {  ExecutorServiceManager executorServiceManager=routeContext.getCamelContext().getExecutorServiceManager();  if (isParallelProcessing()) {    executorService=executorServiceManager.newDefaultThreadPool(this,"Aggregator");  } else {    executorService=new SynchronousExecutorService();  }} @AT@ 6525 @LENGTH@ 194


UPD IfStatement@@if (vaultReader.isVaultFormat(expression)) {  node.set(vaultReader.retrieveFromVault(expression));} @TO@ if (vaultReader != null && vaultReader.isVaultFormat(expression)) {  node.set(vaultReader.retrieveFromVault(expression));} @AT@ 1717 @LENGTH@ 128
---INS InfixExpression@@vaultReader != null && vaultReader.isVaultFormat(expression) @TO@ IfStatement@@if (vaultReader.isVaultFormat(expression)) {  node.set(vaultReader.retrieveFromVault(expression));} @AT@ 1721 @LENGTH@ 60
------INS InfixExpression@@vaultReader != null @TO@ InfixExpression@@vaultReader != null && vaultReader.isVaultFormat(expression) @AT@ 1721 @LENGTH@ 19
---------INS SimpleName@@vaultReader @TO@ InfixExpression@@vaultReader != null @AT@ 1721 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@vaultReader != null @AT@ 1732 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@vaultReader != null @AT@ 1736 @LENGTH@ 4
------MOV MethodInvocation@@vaultReader.isVaultFormat(expression) @TO@ InfixExpression@@vaultReader != null && vaultReader.isVaultFormat(expression) @AT@ 1722 @LENGTH@ 37
------INS Operator@@&& @TO@ InfixExpression@@vaultReader != null && vaultReader.isVaultFormat(expression) @AT@ 1740 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.errorf(e,e.toString()) @TO@ MethodInvocation:MGMT_OP_LOGGER.errorf(e,e.toString()) @AT@ 2126 @LENGTH@ 36
---UPD MethodInvocation@@ROOT_LOGGER.errorf(e,e.toString()) @TO@ MGMT_OP_LOGGER.errorf(e,e.toString()) @AT@ 2126 @LENGTH@ 35
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 2126 @LENGTH@ 11


UPD Block@@ThenBody:{  this.accessTokenStore.remove(accessToken);  this.authenticationStore.remove(accessToken);} @TO@ ThenBody:{  removeAccessToken(accessToken);} @AT@ 8450 @LENGTH@ 100
---UPD ExpressionStatement@@MethodInvocation:this.accessTokenStore.remove(accessToken) @TO@ MethodInvocation:removeAccessToken(accessToken) @AT@ 8455 @LENGTH@ 42
------UPD MethodInvocation@@this.accessTokenStore.remove(accessToken) @TO@ removeAccessToken(accessToken) @AT@ 8455 @LENGTH@ 41
---------DEL FieldAccess@@this.accessTokenStore @AT@ 8455 @LENGTH@ 21
------------DEL ThisExpression@@this @AT@ 8455 @LENGTH@ 4
------------DEL SimpleName@@accessTokenStore @AT@ 8460 @LENGTH@ 16
---------UPD SimpleName@@MethodName:remove:[accessToken] @TO@ MethodName:removeAccessToken:[accessToken] @AT@ 8477 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:this.authenticationStore.remove(accessToken) @AT@ 8501 @LENGTH@ 45
------DEL MethodInvocation@@this.authenticationStore.remove(accessToken) @AT@ 8501 @LENGTH@ 44
---------DEL FieldAccess@@this.authenticationStore @AT@ 8501 @LENGTH@ 24
------------DEL ThisExpression@@this @AT@ 8501 @LENGTH@ 4
------------DEL SimpleName@@authenticationStore @AT@ 8506 @LENGTH@ 19
---------DEL SimpleName@@MethodName:remove:[accessToken] @AT@ 8526 @LENGTH@ 19
------------DEL SimpleName@@accessToken @AT@ 8533 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler) @TO@ MethodInvocation:hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler,EnumSet.of(Flag.HOST_CONTROLLER_ONLY)) @AT@ 16730 @LENGTH@ 109
---UPD MethodInvocation@@hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler) @TO@ hostRegistration.registerOperationHandler(ProcessReloadHandler.OPERATION_NAME,reloadHandler,reloadHandler,EnumSet.of(Flag.HOST_CONTROLLER_ONLY)) @AT@ 16730 @LENGTH@ 108
------UPD SimpleName@@MethodName:registerOperationHandler:[ProcessReloadHandler.OPERATION_NAME, reloadHandler, reloadHandler] @TO@ MethodName:registerOperationHandler:[ProcessReloadHandler.OPERATION_NAME, reloadHandler, reloadHandler, EnumSet.of(Flag.HOST_CONTROLLER_ONLY)] @AT@ 16747 @LENGTH@ 91
---------INS MethodInvocation@@EnumSet.of(Flag.HOST_CONTROLLER_ONLY) @TO@ SimpleName@@MethodName:registerOperationHandler:[ProcessReloadHandler.OPERATION_NAME, reloadHandler, reloadHandler] @AT@ 16839 @LENGTH@ 37
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(Flag.HOST_CONTROLLER_ONLY) @AT@ 16839 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[Flag.HOST_CONTROLLER_ONLY] @TO@ MethodInvocation@@EnumSet.of(Flag.HOST_CONTROLLER_ONLY) @AT@ 16847 @LENGTH@ 29
---------------INS QualifiedName@@Flag.HOST_CONTROLLER_ONLY @TO@ SimpleName@@MethodName:of:[Flag.HOST_CONTROLLER_ONLY] @AT@ 16850 @LENGTH@ 25
------------------INS SimpleName@@Flag @TO@ QualifiedName@@Flag.HOST_CONTROLLER_ONLY @AT@ 16850 @LENGTH@ 4
------------------INS SimpleName@@HOST_CONTROLLER_ONLY @TO@ QualifiedName@@Flag.HOST_CONTROLLER_ONLY @AT@ 16855 @LENGTH@ 20


UPD EnhancedForStatement@@for (String bindingName : bindings.keys()) {  ModelNode binding=bindings.get(bindingName);  writer.writeStartElement(Element.SOCKET_BINDING.getLocalName());  writeAttribute(writer,Attribute.NAME,bindingName);  ModelNode attr=binding.get(INTERFACE);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.INTERFACE,attr.asString());  }  attr=binding.get(PORT);  writeAttribute(writer,Attribute.PORT,attr.asString());  attr=binding.get(FIXED_PORT);  if (attr.isDefined() && attr.asBoolean()) {    writeAttribute(writer,Attribute.FIXED_PORT,attr.asString());  }  attr=binding.get(MULTICAST_ADDRESS);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_ADDRESS,attr.asString());  }  attr=binding.get(MULTICAST_PORT);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_PORT,attr.asString());  }  attr=binding.get(CLIENT_MAPPINGS);  if (attr.isDefined()) {    for (    ModelNode mapping : attr.asList()) {      writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());      attr=mapping.get(SOURCE_NETWORK);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());      }      attr=mapping.get(DESTINATION_ADDRESS);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());      }      attr=mapping.get(DESTINATION_PORT);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());      }    }  }  writer.writeEndElement();  attr=binding.get(CLIENT_MAPPINGS);  if (attr.isDefined()) {    for (    ModelNode mapping : attr.asList()) {      writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());      attr=binding.get(SOURCE_NETWORK);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());      }      attr=binding.get(DESTINATION_ADDRESS);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());      }      attr=binding.get(DESTINATION_PORT);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());      }    }  }} @TO@ for (String bindingName : bindings.keys()) {  ModelNode binding=bindings.get(bindingName);  writer.writeStartElement(Element.SOCKET_BINDING.getLocalName());  writeAttribute(writer,Attribute.NAME,bindingName);  ModelNode attr=binding.get(INTERFACE);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.INTERFACE,attr.asString());  }  attr=binding.get(PORT);  writeAttribute(writer,Attribute.PORT,attr.asString());  attr=binding.get(FIXED_PORT);  if (attr.isDefined() && attr.asBoolean()) {    writeAttribute(writer,Attribute.FIXED_PORT,attr.asString());  }  attr=binding.get(MULTICAST_ADDRESS);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_ADDRESS,attr.asString());  }  attr=binding.get(MULTICAST_PORT);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.MULTICAST_PORT,attr.asString());  }  attr=binding.get(CLIENT_MAPPINGS);  if (attr.isDefined()) {    for (    ModelNode mapping : attr.asList()) {      writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());      attr=mapping.get(SOURCE_NETWORK);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());      }      attr=mapping.get(DESTINATION_ADDRESS);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());      }      attr=mapping.get(DESTINATION_PORT);      if (attr.isDefined()) {        writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());      }    }  }  writer.writeEndElement();} @AT@ 78779 @LENGTH@ 3215
---DEL ExpressionStatement@@Assignment:attr=binding.get(CLIENT_MAPPINGS) @AT@ 81009 @LENGTH@ 36
------DEL Assignment@@attr=binding.get(CLIENT_MAPPINGS) @AT@ 81009 @LENGTH@ 35
---------DEL SimpleName@@attr @AT@ 81009 @LENGTH@ 4
---------DEL Operator@@= @AT@ 81013 @LENGTH@ 1
---------DEL MethodInvocation@@binding.get(CLIENT_MAPPINGS) @AT@ 81016 @LENGTH@ 28
------------DEL SimpleName@@Name:binding @AT@ 81016 @LENGTH@ 7
------------DEL SimpleName@@MethodName:get:[CLIENT_MAPPINGS] @AT@ 81024 @LENGTH@ 20
---------------DEL SimpleName@@CLIENT_MAPPINGS @AT@ 81028 @LENGTH@ 15
---DEL IfStatement@@if (attr.isDefined()) {  for (  ModelNode mapping : attr.asList()) {    writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());    attr=binding.get(SOURCE_NETWORK);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());    }    attr=binding.get(DESTINATION_ADDRESS);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());    }    attr=binding.get(DESTINATION_PORT);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());    }  }} @AT@ 81062 @LENGTH@ 918
------DEL MethodInvocation@@attr.isDefined() @AT@ 81066 @LENGTH@ 16
---------DEL SimpleName@@Name:attr @AT@ 81066 @LENGTH@ 4
---------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81071 @LENGTH@ 11
------DEL Block@@ThenBody:{  for (  ModelNode mapping : attr.asList()) {    writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());    attr=binding.get(SOURCE_NETWORK);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());    }    attr=binding.get(DESTINATION_ADDRESS);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());    }    attr=binding.get(DESTINATION_PORT);    if (attr.isDefined()) {      writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());    }  }} @AT@ 81084 @LENGTH@ 896
---------DEL EnhancedForStatement@@for (ModelNode mapping : attr.asList()) {  writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName());  attr=binding.get(SOURCE_NETWORK);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());  }  attr=binding.get(DESTINATION_ADDRESS);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());  }  attr=binding.get(DESTINATION_PORT);  if (attr.isDefined()) {    writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());  }} @AT@ 81106 @LENGTH@ 856
------------DEL SingleVariableDeclaration@@ModelNode mapping @AT@ 81111 @LENGTH@ 17
---------------DEL SimpleType@@ModelNode @AT@ 81111 @LENGTH@ 9
---------------DEL SimpleName@@mapping @AT@ 81121 @LENGTH@ 7
------------DEL MethodInvocation@@attr.asList() @AT@ 81131 @LENGTH@ 13
---------------DEL SimpleName@@Name:attr @AT@ 81131 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:asList:[] @AT@ 81136 @LENGTH@ 8
------------DEL ExpressionStatement@@MethodInvocation:writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName()) @AT@ 81172 @LENGTH@ 64
---------------DEL MethodInvocation@@writer.writeEmptyElement(Element.CLIENT_MAPPING.getLocalName()) @AT@ 81172 @LENGTH@ 63
------------------DEL SimpleName@@Name:writer @AT@ 81172 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:writeEmptyElement:[Element.CLIENT_MAPPING.getLocalName()] @AT@ 81179 @LENGTH@ 56
---------------------DEL MethodInvocation@@Element.CLIENT_MAPPING.getLocalName() @AT@ 81197 @LENGTH@ 37
------------------------DEL QualifiedName@@Name:Element.CLIENT_MAPPING @AT@ 81197 @LENGTH@ 22
------------------------DEL SimpleName@@MethodName:getLocalName:[] @AT@ 81220 @LENGTH@ 14
------------DEL ExpressionStatement@@Assignment:attr=binding.get(SOURCE_NETWORK) @AT@ 81262 @LENGTH@ 35
---------------DEL Assignment@@attr=binding.get(SOURCE_NETWORK) @AT@ 81262 @LENGTH@ 34
------------------DEL SimpleName@@attr @AT@ 81262 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 81266 @LENGTH@ 1
------------------DEL MethodInvocation@@binding.get(SOURCE_NETWORK) @AT@ 81269 @LENGTH@ 27
---------------------DEL SimpleName@@Name:binding @AT@ 81269 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:get:[SOURCE_NETWORK] @AT@ 81277 @LENGTH@ 19
------------------------DEL SimpleName@@SOURCE_NETWORK @AT@ 81281 @LENGTH@ 14
------------DEL IfStatement@@if (attr.isDefined()) {  writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());} @AT@ 81322 @LENGTH@ 144
---------------DEL MethodInvocation@@attr.isDefined() @AT@ 81326 @LENGTH@ 16
------------------DEL SimpleName@@Name:attr @AT@ 81326 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81331 @LENGTH@ 11
---------------DEL Block@@ThenBody:{  writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString());} @AT@ 81344 @LENGTH@ 122
------------------DEL ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString()) @AT@ 81374 @LENGTH@ 66
---------------------DEL MethodInvocation@@writeAttribute(writer,Attribute.SOURCE_NETWORK,attr.asString()) @AT@ 81374 @LENGTH@ 65
------------------------DEL SimpleName@@MethodName:writeAttribute:[writer, Attribute.SOURCE_NETWORK, attr.asString()] @AT@ 81374 @LENGTH@ 65
---------------------------DEL SimpleName@@writer @AT@ 81389 @LENGTH@ 6
---------------------------DEL QualifiedName@@Attribute.SOURCE_NETWORK @AT@ 81397 @LENGTH@ 24
------------------------------DEL SimpleName@@Attribute @AT@ 81397 @LENGTH@ 9
------------------------------DEL SimpleName@@SOURCE_NETWORK @AT@ 81407 @LENGTH@ 14
---------------------------DEL MethodInvocation@@attr.asString() @AT@ 81423 @LENGTH@ 15
------------------------------DEL SimpleName@@Name:attr @AT@ 81423 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 81428 @LENGTH@ 10
------------DEL ExpressionStatement@@Assignment:attr=binding.get(DESTINATION_ADDRESS) @AT@ 81492 @LENGTH@ 40
---------------DEL Assignment@@attr=binding.get(DESTINATION_ADDRESS) @AT@ 81492 @LENGTH@ 39
------------------DEL SimpleName@@attr @AT@ 81492 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 81496 @LENGTH@ 1
------------------DEL MethodInvocation@@binding.get(DESTINATION_ADDRESS) @AT@ 81499 @LENGTH@ 32
---------------------DEL SimpleName@@Name:binding @AT@ 81499 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:get:[DESTINATION_ADDRESS] @AT@ 81507 @LENGTH@ 24
------------------------DEL SimpleName@@DESTINATION_ADDRESS @AT@ 81511 @LENGTH@ 19
------------DEL IfStatement@@if (attr.isDefined()) {  writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());} @AT@ 81557 @LENGTH@ 149
---------------DEL MethodInvocation@@attr.isDefined() @AT@ 81561 @LENGTH@ 16
------------------DEL SimpleName@@Name:attr @AT@ 81561 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81566 @LENGTH@ 11
---------------DEL Block@@ThenBody:{  writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString());} @AT@ 81579 @LENGTH@ 127
------------------DEL ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString()) @AT@ 81609 @LENGTH@ 71
---------------------DEL MethodInvocation@@writeAttribute(writer,Attribute.DESTINATION_ADDRESS,attr.asString()) @AT@ 81609 @LENGTH@ 70
------------------------DEL SimpleName@@MethodName:writeAttribute:[writer, Attribute.DESTINATION_ADDRESS, attr.asString()] @AT@ 81609 @LENGTH@ 70
---------------------------DEL SimpleName@@writer @AT@ 81624 @LENGTH@ 6
---------------------------DEL QualifiedName@@Attribute.DESTINATION_ADDRESS @AT@ 81632 @LENGTH@ 29
------------------------------DEL SimpleName@@Attribute @AT@ 81632 @LENGTH@ 9
------------------------------DEL SimpleName@@DESTINATION_ADDRESS @AT@ 81642 @LENGTH@ 19
---------------------------DEL MethodInvocation@@attr.asString() @AT@ 81663 @LENGTH@ 15
------------------------------DEL SimpleName@@Name:attr @AT@ 81663 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 81668 @LENGTH@ 10
------------DEL ExpressionStatement@@Assignment:attr=binding.get(DESTINATION_PORT) @AT@ 81732 @LENGTH@ 37
---------------DEL Assignment@@attr=binding.get(DESTINATION_PORT) @AT@ 81732 @LENGTH@ 36
------------------DEL SimpleName@@attr @AT@ 81732 @LENGTH@ 4
------------------DEL Operator@@= @AT@ 81736 @LENGTH@ 1
------------------DEL MethodInvocation@@binding.get(DESTINATION_PORT) @AT@ 81739 @LENGTH@ 29
---------------------DEL SimpleName@@Name:binding @AT@ 81739 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:get:[DESTINATION_PORT] @AT@ 81747 @LENGTH@ 21
------------------------DEL SimpleName@@DESTINATION_PORT @AT@ 81751 @LENGTH@ 16
------------DEL IfStatement@@if (attr.isDefined()) {  writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());} @AT@ 81794 @LENGTH@ 146
---------------DEL MethodInvocation@@attr.isDefined() @AT@ 81798 @LENGTH@ 16
------------------DEL SimpleName@@Name:attr @AT@ 81798 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:isDefined:[] @AT@ 81803 @LENGTH@ 11
---------------DEL Block@@ThenBody:{  writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString());} @AT@ 81816 @LENGTH@ 124
------------------DEL ExpressionStatement@@MethodInvocation:writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString()) @AT@ 81846 @LENGTH@ 68
---------------------DEL MethodInvocation@@writeAttribute(writer,Attribute.DESTINATION_PORT,attr.asString()) @AT@ 81846 @LENGTH@ 67
------------------------DEL SimpleName@@MethodName:writeAttribute:[writer, Attribute.DESTINATION_PORT, attr.asString()] @AT@ 81846 @LENGTH@ 67
---------------------------DEL SimpleName@@writer @AT@ 81861 @LENGTH@ 6
---------------------------DEL QualifiedName@@Attribute.DESTINATION_PORT @AT@ 81869 @LENGTH@ 26
------------------------------DEL SimpleName@@Attribute @AT@ 81869 @LENGTH@ 9
------------------------------DEL SimpleName@@DESTINATION_PORT @AT@ 81879 @LENGTH@ 16
---------------------------DEL MethodInvocation@@attr.asString() @AT@ 81897 @LENGTH@ 15
------------------------------DEL SimpleName@@Name:attr @AT@ 81897 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:asString:[] @AT@ 81902 @LENGTH@ 10


INS MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 76861 @LENGTH@ 61
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @AT@ 76836 @LENGTH@ 24
---INS SimpleName@@MethodName:cannotRemoveResourceWithChildren @TO@ MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @AT@ 76861 @LENGTH@ 32
---INS SingleVariableDeclaration@@List<PathElement> children @TO@ MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveResourceWithChildren, List<PathElement> children,  @AT@ 76894 @LENGTH@ 26
------INS ParameterizedType@@List<PathElement> @TO@ SingleVariableDeclaration@@List<PathElement> children @AT@ 76894 @LENGTH@ 17
---------INS SimpleType@@List @TO@ ParameterizedType@@List<PathElement> @AT@ 76894 @LENGTH@ 4
---------INS SimpleType@@PathElement @TO@ ParameterizedType@@List<PathElement> @AT@ 76899 @LENGTH@ 11
------INS SimpleName@@children @TO@ SingleVariableDeclaration@@List<PathElement> children @AT@ 76912 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"firstName\":\"Robert\",\"lastName\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\"}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @TO@ MethodInvocation:mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"first-name\":\"Robert\",\"last-name\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"connect-type\":\"friend\"}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @AT@ 2994 @LENGTH@ 845
---UPD MethodInvocation@@mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"firstName\":\"Robert\",\"lastName\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\"}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @TO@ mockServer.expect(requestTo(CommunicationTemplate.MESSAGING_URL)).andExpect(method(POST)).andExpect(body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"first-name\":\"Robert\",\"last-name\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"connect-type\":\"friend\"}}}")).andExpect(headerContains("Authorization","OAuth oauth_version=\"1.0\", oauth_nonce=\"")).andExpect(headerContains("Authorization","oauth_signature_method=\"HMAC-SHA1\", oauth_consumer_key=\"API_KEY\", oauth_token=\"ACCESS_TOKEN\", oauth_timestamp=\"")).andExpect(headerContains("Authorization","oauth_signature=\"")).andRespond(withResponse("",responseHeaders)) @AT@ 2994 @LENGTH@ 844
------UPD MethodInvocation@@MethodName:andExpect:[body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"firstName\":\"Robert\",\"lastName\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\"}}}")] @TO@ MethodName:andExpect:[body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"first-name\":\"Robert\",\"last-name\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"connect-type\":\"friend\"}}}")] @AT@ 2994 @LENGTH@ 466
---------UPD MethodInvocation@@body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"firstName\":\"Robert\",\"lastName\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\"}}}") @TO@ body("{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"first-name\":\"Robert\",\"last-name\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"connect-type\":\"friend\"}}}") @AT@ 3100 @LENGTH@ 359
------------UPD SimpleName@@MethodName:body:["{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"firstName\":\"Robert\",\"lastName\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\"}}}"] @TO@ MethodName:body:["{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"first-name\":\"Robert\",\"last-name\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"connect-type\":\"friend\"}}}"] @AT@ 3100 @LENGTH@ 359
---------------UPD StringLiteral@@"{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"firstName\":\"Robert\",\"lastName\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"itemContent\":{\"invitationRequest\":{\"connectType\":\"friend\"}}}" @TO@ "{\"body\":\"I'd like to add you to my professional network on LinkedIn\",\"recipients\":{\"values\":[{\"person\":{\"_path\":\"/people/email=rob@test.com\",\"first-name\":\"Robert\",\"last-name\":\"Smith\"}}]},\"subject\":\"I'd like to add you to my professional network on LinkedIn\",\"item-content\":{\"invitation-request\":{\"connect-type\":\"friend\"}}}" @AT@ 3105 @LENGTH@ 353


INS VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(name); @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 1344 @LENGTH@ 107
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(name); @AT@ 1344 @LENGTH@ 5
---INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(name); @AT@ 1350 @LENGTH@ 11
---INS VariableDeclarationFragment@@queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(name) @TO@ VariableDeclarationStatement@@final ServiceName queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(name); @AT@ 1362 @LENGTH@ 88
------INS SimpleName@@queueServiceName @TO@ VariableDeclarationFragment@@queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(name) @AT@ 1362 @LENGTH@ 16
------MOV MethodInvocation@@MessagingServices.getQueueBaseServiceName(hqServiceName).append(name) @TO@ VariableDeclarationFragment@@queueServiceName=MessagingServices.getQueueBaseServiceName(hqServiceName).append(name) @AT@ 1366 @LENGTH@ 69


INS ExpressionStatement@@MethodInvocation:SessionState.get().getConf().setClassLoader(loader) @TO@ MethodDeclaration@@public, static, void, MethodName:removeFromClassPath, String[] pathsToRemove, Exception,  @AT@ 51501 @LENGTH@ 52
---INS MethodInvocation@@SessionState.get().getConf().setClassLoader(loader) @TO@ ExpressionStatement@@MethodInvocation:SessionState.get().getConf().setClassLoader(loader) @AT@ 51501 @LENGTH@ 51
------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(loader) @AT@ 51501 @LENGTH@ 28
------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(loader) @AT@ 51501 @LENGTH@ 18
------INS SimpleName@@Name:SessionState @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(loader) @AT@ 51501 @LENGTH@ 12
------INS SimpleName@@MethodName:setClassLoader:[loader] @TO@ MethodInvocation@@SessionState.get().getConf().setClassLoader(loader) @AT@ 51530 @LENGTH@ 22
---------INS SimpleName@@loader @TO@ SimpleName@@MethodName:setClassLoader:[loader] @AT@ 51545 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:sb.append("run mkdir ~/containers/ ").append("\n") @TO@ MethodInvocation:sb.append("run -p mkdir ~/containers/ ").append("\n") @AT@ 1504 @LENGTH@ 51
---UPD MethodInvocation@@sb.append("run mkdir ~/containers/ ").append("\n") @TO@ sb.append("run -p mkdir ~/containers/ ").append("\n") @AT@ 1504 @LENGTH@ 50
------UPD MethodInvocation@@MethodName:append:["run mkdir ~/containers/ "] @TO@ MethodName:append:["run -p mkdir ~/containers/ "] @AT@ 1504 @LENGTH@ 37
---------UPD StringLiteral@@"run mkdir ~/containers/ " @TO@ "run -p mkdir ~/containers/ " @AT@ 1514 @LENGTH@ 26


UPD VariableDeclarationStatement@@final ServiceController<?> configService=context.getServiceRegistry(true).getService(WSServices.CONFIG_SERVICE); @TO@ final ServerConfig config=getServerConfig(context); @AT@ 2462 @LENGTH@ 114
---DEL ParameterizedType@@ServiceController<?> @AT@ 2468 @LENGTH@ 20
------DEL SimpleType@@ServiceController @AT@ 2468 @LENGTH@ 17
------DEL WildcardType@@? @AT@ 2486 @LENGTH@ 1
---INS SimpleType@@ServerConfig @TO@ VariableDeclarationStatement@@final ServiceController<?> configService=context.getServiceRegistry(true).getService(WSServices.CONFIG_SERVICE); @AT@ 2474 @LENGTH@ 12
---UPD VariableDeclarationFragment@@configService=context.getServiceRegistry(true).getService(WSServices.CONFIG_SERVICE) @TO@ config=getServerConfig(context) @AT@ 2489 @LENGTH@ 86
------UPD SimpleName@@configService @TO@ config @AT@ 2489 @LENGTH@ 13
------UPD MethodInvocation@@context.getServiceRegistry(true).getService(WSServices.CONFIG_SERVICE) @TO@ getServerConfig(context) @AT@ 2505 @LENGTH@ 70
---------DEL MethodInvocation@@MethodName:getServiceRegistry:[true] @AT@ 2505 @LENGTH@ 32
------------DEL BooleanLiteral@@true @AT@ 2532 @LENGTH@ 4
---------DEL SimpleName@@Name:context @AT@ 2505 @LENGTH@ 7
---------UPD SimpleName@@MethodName:getService:[WSServices.CONFIG_SERVICE] @TO@ MethodName:getServerConfig:[context] @AT@ 2538 @LENGTH@ 37
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:getService:[WSServices.CONFIG_SERVICE] @AT@ 2512 @LENGTH@ 7
------------DEL QualifiedName@@WSServices.CONFIG_SERVICE @AT@ 2549 @LENGTH@ 25
---------------DEL SimpleName@@WSServices @AT@ 2549 @LENGTH@ 10
---------------DEL SimpleName@@CONFIG_SERVICE @AT@ 2560 @LENGTH@ 14


MOV ExpressionStatement@@MethodInvocation:this.request.getHeaders().putAll(headers) @TO@ MethodDeclaration@@protected, ClientHttpResponse, MethodName:executeInternal, HttpHeaders headers, byte[] bufferedOutput, IOException,  @AT@ 1652 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:clone.put(entry.getKey(),new HashSet<InetAddress>(entry.getValue())) @TO@ MethodInvocation:clone.put(entry.getKey(),new LinkedHashSet<InetAddress>(entry.getValue())) @AT@ 3799 @LENGTH@ 70
---UPD MethodInvocation@@clone.put(entry.getKey(),new HashSet<InetAddress>(entry.getValue())) @TO@ clone.put(entry.getKey(),new LinkedHashSet<InetAddress>(entry.getValue())) @AT@ 3799 @LENGTH@ 69
------UPD SimpleName@@MethodName:put:[entry.getKey(), new HashSet<InetAddress>(entry.getValue())] @TO@ MethodName:put:[entry.getKey(), new LinkedHashSet<InetAddress>(entry.getValue())] @AT@ 3805 @LENGTH@ 63
---------UPD ClassInstanceCreation@@HashSet<InetAddress>[entry.getValue()] @TO@ LinkedHashSet<InetAddress>[entry.getValue()] @AT@ 3825 @LENGTH@ 42
------------UPD ParameterizedType@@HashSet<InetAddress> @TO@ LinkedHashSet<InetAddress> @AT@ 3829 @LENGTH@ 20
---------------UPD SimpleType@@HashSet @TO@ LinkedHashSet @AT@ 3829 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new ErrorState(null,MESSAGES.invalidConfirmationResponse(),this) @TO@ ClassInstanceCreation:new ErrorState(theConsole,MESSAGES.invalidConfirmationResponse(),this) @AT@ 2674 @LENGTH@ 74
---UPD ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidConfirmationResponse(), this] @TO@ ErrorState[theConsole, MESSAGES.invalidConfirmationResponse(), this] @AT@ 2681 @LENGTH@ 66
------DEL NullLiteral@@null @AT@ 2696 @LENGTH@ 4
------INS SimpleName@@theConsole @TO@ ClassInstanceCreation@@ErrorState[null, MESSAGES.invalidConfirmationResponse(), this] @AT@ 2802 @LENGTH@ 10


UPD TypeDeclaration@@[public]BackingCache, [Removable<K>, AffinitySupport<K>] @TO@ [public]BackingCache, [Removable<K>, AffinitySupport<K>, IdentifierFactory<K>] @AT@ 2382 @LENGTH@ 2236
---INS ParameterizedType@@IdentifierFactory<K> @TO@ TypeDeclaration@@[public]BackingCache, [Removable<K>, AffinitySupport<K>] @AT@ 2587 @LENGTH@ 20
------INS SimpleType@@IdentifierFactory @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2587 @LENGTH@ 17
------INS SimpleType@@K @TO@ ParameterizedType@@IdentifierFactory<K> @AT@ 2605 @LENGTH@ 1


INS MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ TypeDeclaration@@[@ManagedResource(description="Managed Route"), public]ManagedRoute, ManagedPerformanceCounter[TimerListener, ManagedRouteMBean] @AT@ 9257 @LENGTH@ 265
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9257 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9264 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9272 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9279 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 9279 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 9286 @LENGTH@ 1
---INS IfStatement@@if (this == o) return true; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9299 @LENGTH@ 27
------INS InfixExpression@@this == o @TO@ IfStatement@@if (this == o) return true; @AT@ 9303 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ InfixExpression@@this == o @AT@ 9303 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == o @AT@ 9307 @LENGTH@ 2
---------INS SimpleName@@o @TO@ InfixExpression@@this == o @AT@ 9311 @LENGTH@ 1
------INS Block@@ThenBody:return true; @TO@ IfStatement@@if (this == o) return true; @AT@ 9314 @LENGTH@ 12
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:return true; @AT@ 9314 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 9321 @LENGTH@ 4
---INS IfStatement@@if (o == null || getClass() != o.getClass()) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9335 @LENGTH@ 58
------INS InfixExpression@@o == null || getClass() != o.getClass() @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) return false; @AT@ 9339 @LENGTH@ 39
---------INS InfixExpression@@o == null @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 9339 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 9339 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 9340 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 9344 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 9348 @LENGTH@ 2
---------INS InfixExpression@@getClass() != o.getClass() @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 9352 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 9352 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 9362 @LENGTH@ 2
------------INS MethodInvocation@@o.getClass() @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 9366 @LENGTH@ 12
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass() @AT@ 9366 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass() @AT@ 9368 @LENGTH@ 10
------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) return false; @AT@ 9380 @LENGTH@ 13
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 9380 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 9387 @LENGTH@ 5
---INS VariableDeclarationStatement@@ManagedRoute that=(ManagedRoute)o; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9403 @LENGTH@ 37
------INS SimpleType@@ManagedRoute @TO@ VariableDeclarationStatement@@ManagedRoute that=(ManagedRoute)o; @AT@ 9403 @LENGTH@ 12
------INS VariableDeclarationFragment@@that=(ManagedRoute)o @TO@ VariableDeclarationStatement@@ManagedRoute that=(ManagedRoute)o; @AT@ 9416 @LENGTH@ 23
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(ManagedRoute)o @AT@ 9416 @LENGTH@ 4
---------INS CastExpression@@(ManagedRoute)o @TO@ VariableDeclarationFragment@@that=(ManagedRoute)o @AT@ 9423 @LENGTH@ 16
------------INS SimpleType@@ManagedRoute @TO@ CastExpression@@(ManagedRoute)o @AT@ 9424 @LENGTH@ 12
------------INS SimpleName@@o @TO@ CastExpression@@(ManagedRoute)o @AT@ 9438 @LENGTH@ 1
---INS IfStatement@@if (!route.equals(that.route)) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9450 @LENGTH@ 44
------INS PrefixExpression@@!route.equals(that.route) @TO@ IfStatement@@if (!route.equals(that.route)) return false; @AT@ 9454 @LENGTH@ 25
---------INS Operator@@! @TO@ PrefixExpression@@!route.equals(that.route) @AT@ 9454 @LENGTH@ 1
---------INS MethodInvocation@@route.equals(that.route) @TO@ PrefixExpression@@!route.equals(that.route) @AT@ 9455 @LENGTH@ 24
------------INS SimpleName@@Name:route @TO@ MethodInvocation@@route.equals(that.route) @AT@ 9455 @LENGTH@ 5
------------INS SimpleName@@MethodName:equals:[that.route] @TO@ MethodInvocation@@route.equals(that.route) @AT@ 9461 @LENGTH@ 18
---------------INS QualifiedName@@that.route @TO@ SimpleName@@MethodName:equals:[that.route] @AT@ 9468 @LENGTH@ 10
------------------INS SimpleName@@that @TO@ QualifiedName@@that.route @AT@ 9468 @LENGTH@ 4
------------------INS SimpleName@@route @TO@ QualifiedName@@that.route @AT@ 9473 @LENGTH@ 5
------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (!route.equals(that.route)) return false; @AT@ 9481 @LENGTH@ 13
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 9481 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 9488 @LENGTH@ 5
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 9504 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 9511 @LENGTH@ 4


INS VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result; @TO@ MethodDeclaration@@public, Map<NetworkInterface,Set<InetAddress>>, MethodName:getAcceptableAddresses, Map<NetworkInterface,Set<InetAddress>> candidates, SocketException,  @AT@ 3385 @LENGTH@ 132
---INS ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @TO@ VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result; @AT@ 3385 @LENGTH@ 39
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @AT@ 3385 @LENGTH@ 3
------INS SimpleType@@NetworkInterface @TO@ ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @AT@ 3389 @LENGTH@ 16
------INS ParameterizedType@@Set<InetAddress> @TO@ ParameterizedType@@Map<NetworkInterface,Set<InetAddress>> @AT@ 3407 @LENGTH@ 16
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<InetAddress> @AT@ 3407 @LENGTH@ 3
---------INS SimpleType@@InetAddress @TO@ ParameterizedType@@Set<InetAddress> @AT@ 3411 @LENGTH@ 11
---INS VariableDeclarationFragment@@pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @TO@ VariableDeclarationStatement@@Map<NetworkInterface,Set<InetAddress>> pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result; @AT@ 3425 @LENGTH@ 91
------INS SimpleName@@pruned @TO@ VariableDeclarationFragment@@pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3425 @LENGTH@ 6
------INS ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @TO@ VariableDeclarationFragment@@pruned=result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3434 @LENGTH@ 82
---------MOV InfixExpression@@result.size() > 1 @TO@ ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3389 @LENGTH@ 17
---------INS MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(result) @TO@ ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3454 @LENGTH@ 53
------------INS SimpleName@@Name:OverallInterfaceCriteria @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(result) @AT@ 3454 @LENGTH@ 24
------------INS SimpleName@@MethodName:pruneAliasDuplicates:[result] @TO@ MethodInvocation@@OverallInterfaceCriteria.pruneAliasDuplicates(result) @AT@ 3479 @LENGTH@ 28
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:pruneAliasDuplicates:[result] @AT@ 3500 @LENGTH@ 6
---------INS SimpleName@@result @TO@ ConditionalExpression@@result.size() > 1 ? OverallInterfaceCriteria.pruneAliasDuplicates(result) : result @AT@ 3510 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:System.out.println("loopback = " + loopbackAddress) @TO@ MethodInvocation:System.out.println("loopback: " + loopbackInterface + " "+ loopbackAddress) @AT@ 2402 @LENGTH@ 52
---UPD MethodInvocation@@System.out.println("loopback = " + loopbackAddress) @TO@ System.out.println("loopback: " + loopbackInterface + " "+ loopbackAddress) @AT@ 2402 @LENGTH@ 51
------UPD SimpleName@@MethodName:println:["loopback = " + loopbackAddress] @TO@ MethodName:println:["loopback: " + loopbackInterface + " "+ loopbackAddress] @AT@ 2413 @LENGTH@ 40
---------UPD InfixExpression@@"loopback = " + loopbackAddress @TO@ "loopback: " + loopbackInterface + " "+ loopbackAddress @AT@ 2421 @LENGTH@ 31
------------UPD StringLiteral@@"loopback = " @TO@ "loopback: " @AT@ 2421 @LENGTH@ 13
------------INS SimpleName@@loopbackInterface @TO@ InfixExpression@@"loopback = " + loopbackAddress @AT@ 2436 @LENGTH@ 17
------------INS StringLiteral@@" " @TO@ InfixExpression@@"loopback = " + loopbackAddress @AT@ 2456 @LENGTH@ 3


DEL VariableDeclarationStatement@@final ModelNode node=web.requireChild(address.getLastElement()).getModel(); @AT@ 4386 @LENGTH@ 77
---DEL Modifier@@final @AT@ 4386 @LENGTH@ 5
---DEL SimpleType@@ModelNode @AT@ 4392 @LENGTH@ 9
---DEL VariableDeclarationFragment@@node=web.requireChild(address.getLastElement()).getModel() @AT@ 4402 @LENGTH@ 60
------DEL SimpleName@@node @AT@ 4402 @LENGTH@ 4
------DEL MethodInvocation@@web.requireChild(address.getLastElement()).getModel() @AT@ 4409 @LENGTH@ 53
---------DEL MethodInvocation@@MethodName:requireChild:[address.getLastElement()] @AT@ 4409 @LENGTH@ 42
------------DEL MethodInvocation@@address.getLastElement() @AT@ 4426 @LENGTH@ 24
---------------DEL SimpleName@@Name:address @AT@ 4426 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getLastElement:[] @AT@ 4434 @LENGTH@ 16
---------DEL SimpleName@@Name:web @AT@ 4409 @LENGTH@ 3
---------DEL SimpleName@@MethodName:getModel:[] @AT@ 4452 @LENGTH@ 10


UPD ReturnStatement@@ClassInstanceCreation:new ErrorState(null,MESSAGES.passwordMisMatch(),this) @TO@ ClassInstanceCreation:new ErrorState(theConsole,MESSAGES.passwordMisMatch(),this) @AT@ 2719 @LENGTH@ 63
---UPD ClassInstanceCreation@@ErrorState[null, MESSAGES.passwordMisMatch(), this] @TO@ ErrorState[theConsole, MESSAGES.passwordMisMatch(), this] @AT@ 2726 @LENGTH@ 55
------DEL NullLiteral@@null @AT@ 2741 @LENGTH@ 4
------INS SimpleName@@theConsole @TO@ ClassInstanceCreation@@ErrorState[null, MESSAGES.passwordMisMatch(), this] @AT@ 2847 @LENGTH@ 10


UPD ReturnStatement@@ClassInstanceCreation:new EntityBeanComponentInstance(this,instanceReference,preDestroyInterceptor,methodInterceptors) @TO@ ClassInstanceCreation:new EntityBeanComponentInstance(this,instanceReference,preDestroyInterceptor,methodInterceptors,interceptorContext) @AT@ 5289 @LENGTH@ 107
---UPD ClassInstanceCreation@@EntityBeanComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors] @TO@ EntityBeanComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors, interceptorContext] @AT@ 5296 @LENGTH@ 99
------INS SimpleName@@interceptorContext @TO@ ClassInstanceCreation@@EntityBeanComponentInstance[this, instanceReference, preDestroyInterceptor, methodInterceptors] @AT@ 5335 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:parseManagement(reader,address,DOMAIN_1_1,list,true) @TO@ MethodInvocation:parseManagement(reader,address,DOMAIN_1_1,list,true,false) @AT@ 13412 @LENGTH@ 57
---UPD MethodInvocation@@parseManagement(reader,address,DOMAIN_1_1,list,true) @TO@ parseManagement(reader,address,DOMAIN_1_1,list,true,false) @AT@ 13412 @LENGTH@ 56
------UPD SimpleName@@MethodName:parseManagement:[reader, address, DOMAIN_1_1, list, true] @TO@ MethodName:parseManagement:[reader, address, DOMAIN_1_1, list, true, false] @AT@ 13412 @LENGTH@ 56
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:parseManagement:[reader, address, DOMAIN_1_1, list, true] @AT@ 13476 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), @SuppressWarnings("unused"), public]QueryMapperUnitTests,  @AT@ 5269 @LENGTH@ 302
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5269 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5276 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesAllPropertiesIfDBObject @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5281 @LENGTH@ 30
---INS VariableDeclarationStatement@@DBObject query=new BasicDBObject(); @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5319 @LENGTH@ 37
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject query=new BasicDBObject(); @AT@ 5319 @LENGTH@ 8
------INS VariableDeclarationFragment@@query=new BasicDBObject() @TO@ VariableDeclarationStatement@@DBObject query=new BasicDBObject(); @AT@ 5328 @LENGTH@ 27
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new BasicDBObject() @AT@ 5328 @LENGTH@ 5
---------INS ClassInstanceCreation@@BasicDBObject[] @TO@ VariableDeclarationFragment@@query=new BasicDBObject() @AT@ 5336 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 5336 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject[] @AT@ 5340 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:query.put("foo",new BasicDBObject("$in",Arrays.asList(1,2))) @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5359 @LENGTH@ 64
------INS MethodInvocation@@query.put("foo",new BasicDBObject("$in",Arrays.asList(1,2))) @TO@ ExpressionStatement@@MethodInvocation:query.put("foo",new BasicDBObject("$in",Arrays.asList(1,2))) @AT@ 5359 @LENGTH@ 63
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.put("foo",new BasicDBObject("$in",Arrays.asList(1,2))) @AT@ 5359 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["foo", new BasicDBObject("$in",Arrays.asList(1,2))] @TO@ MethodInvocation@@query.put("foo",new BasicDBObject("$in",Arrays.asList(1,2))) @AT@ 5365 @LENGTH@ 57
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:put:["foo", new BasicDBObject("$in",Arrays.asList(1,2))] @AT@ 5369 @LENGTH@ 5
------------INS ClassInstanceCreation@@BasicDBObject["$in", Arrays.asList(1,2)] @TO@ SimpleName@@MethodName:put:["foo", new BasicDBObject("$in",Arrays.asList(1,2))] @AT@ 5376 @LENGTH@ 45
---------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["$in", Arrays.asList(1,2)] @AT@ 5376 @LENGTH@ 3
---------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["$in", Arrays.asList(1,2)] @AT@ 5380 @LENGTH@ 13
---------------INS StringLiteral@@"$in" @TO@ ClassInstanceCreation@@BasicDBObject["$in", Arrays.asList(1,2)] @AT@ 5394 @LENGTH@ 5
---------------INS MethodInvocation@@Arrays.asList(1,2) @TO@ ClassInstanceCreation@@BasicDBObject["$in", Arrays.asList(1,2)] @AT@ 5401 @LENGTH@ 19
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(1,2) @AT@ 5401 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:[1, 2] @TO@ MethodInvocation@@Arrays.asList(1,2) @AT@ 5408 @LENGTH@ 12
---------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:asList:[1, 2] @AT@ 5415 @LENGTH@ 1
---------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:asList:[1, 2] @AT@ 5418 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:query.put("bar",new Person()) @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5426 @LENGTH@ 31
------INS MethodInvocation@@query.put("bar",new Person()) @TO@ ExpressionStatement@@MethodInvocation:query.put("bar",new Person()) @AT@ 5426 @LENGTH@ 30
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.put("bar",new Person()) @AT@ 5426 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["bar", new Person()] @TO@ MethodInvocation@@query.put("bar",new Person()) @AT@ 5432 @LENGTH@ 24
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:put:["bar", new Person()] @AT@ 5436 @LENGTH@ 5
------------INS ClassInstanceCreation@@Person[] @TO@ SimpleName@@MethodName:put:["bar", new Person()] @AT@ 5443 @LENGTH@ 12
---------------INS New@@new @TO@ ClassInstanceCreation@@Person[] @AT@ 5443 @LENGTH@ 3
---------------INS SimpleType@@Person @TO@ ClassInstanceCreation@@Person[] @AT@ 5447 @LENGTH@ 6
---INS VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query,null); @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5461 @LENGTH@ 54
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query,null); @AT@ 5461 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=mapper.getMappedObject(query,null) @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query,null); @AT@ 5470 @LENGTH@ 44
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query,null) @AT@ 5470 @LENGTH@ 6
---------INS MethodInvocation@@mapper.getMappedObject(query,null) @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query,null) @AT@ 5479 @LENGTH@ 35
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query,null) @AT@ 5479 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query, null] @TO@ MethodInvocation@@mapper.getMappedObject(query,null) @AT@ 5486 @LENGTH@ 28
---------------INS SimpleName@@query @TO@ SimpleName@@MethodName:getMappedObject:[query, null] @AT@ 5502 @LENGTH@ 5
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getMappedObject:[query, null] @AT@ 5509 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get("bar"),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:handlesAllPropertiesIfDBObject,  @AT@ 5518 @LENGTH@ 50
------INS MethodInvocation@@assertThat(result.get("bar"),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get("bar"),is(notNullValue())) @AT@ 5518 @LENGTH@ 49
---------INS SimpleName@@MethodName:assertThat:[result.get("bar"), is(notNullValue())] @TO@ MethodInvocation@@assertThat(result.get("bar"),is(notNullValue())) @AT@ 5518 @LENGTH@ 49
------------INS MethodInvocation@@result.get("bar") @TO@ SimpleName@@MethodName:assertThat:[result.get("bar"), is(notNullValue())] @AT@ 5529 @LENGTH@ 17
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get("bar") @AT@ 5529 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["bar"] @TO@ MethodInvocation@@result.get("bar") @AT@ 5536 @LENGTH@ 10
------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:get:["bar"] @AT@ 5540 @LENGTH@ 5
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[result.get("bar"), is(notNullValue())] @AT@ 5548 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 5548 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 5551 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 5548 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 5551 @LENGTH@ 14


UPD MethodDeclaration@@private, EJBClientConfiguration, MethodName:createClientConfiguration, final ServiceRegistry serviceRegistry, final ClassLoader classLoader, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData,  @TO@ private, EJBClientConfiguration, MethodName:createClientConfiguration, final ServiceRegistry serviceRegistry, final ClassLoader classLoader, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData, DeploymentUnitProcessingException,  @AT@ 8135 @LENGTH@ 1869
---INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@private, EJBClientConfiguration, MethodName:createClientConfiguration, final ServiceRegistry serviceRegistry, final ClassLoader classLoader, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData,  @AT@ 8370 @LENGTH@ 33
---UPD IfStatement@@if (deploymentNodeSelectorClassName != null && !deploymentNodeSelectorClassName.trim().isEmpty()) {  try {    final Class<?> deploymentNodeSelectorClass=classLoader.loadClass(deploymentNodeSelectorClassName);    ejbClientConfig.setDeploymentNodeSelector((DeploymentNodeSelector)deploymentNodeSelectorClass.newInstance());  } catch (  Exception e) {    throw EjbLogger.EJB3_LOGGER.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);  }} @TO@ if (deploymentNodeSelectorClassName != null && !deploymentNodeSelectorClassName.trim().isEmpty()) {  try {    final Class<?> deploymentNodeSelectorClass=classLoader.loadClass(deploymentNodeSelectorClassName);    ejbClientConfig.setDeploymentNodeSelector((DeploymentNodeSelector)deploymentNodeSelectorClass.newInstance());  } catch (  Exception e) {    throw EjbMessages.MESSAGES.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);  }} @AT@ 8683 @LENGTH@ 539
------UPD Block@@ThenBody:{  try {    final Class<?> deploymentNodeSelectorClass=classLoader.loadClass(deploymentNodeSelectorClassName);    ejbClientConfig.setDeploymentNodeSelector((DeploymentNodeSelector)deploymentNodeSelectorClass.newInstance());  } catch (  Exception e) {    throw EjbLogger.EJB3_LOGGER.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);  }} @TO@ ThenBody:{  try {    final Class<?> deploymentNodeSelectorClass=classLoader.loadClass(deploymentNodeSelectorClassName);    ejbClientConfig.setDeploymentNodeSelector((DeploymentNodeSelector)deploymentNodeSelectorClass.newInstance());  } catch (  Exception e) {    throw EjbMessages.MESSAGES.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);  }} @AT@ 8781 @LENGTH@ 441
---------UPD TryStatement@@try {  final Class<?> deploymentNodeSelectorClass=classLoader.loadClass(deploymentNodeSelectorClassName);  ejbClientConfig.setDeploymentNodeSelector((DeploymentNodeSelector)deploymentNodeSelectorClass.newInstance());} catch (Exception e) {  throw EjbLogger.EJB3_LOGGER.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);} @TO@ try {  final Class<?> deploymentNodeSelectorClass=classLoader.loadClass(deploymentNodeSelectorClassName);  ejbClientConfig.setDeploymentNodeSelector((DeploymentNodeSelector)deploymentNodeSelectorClass.newInstance());} catch (Exception e) {  throw EjbMessages.MESSAGES.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);} @AT@ 8795 @LENGTH@ 417
------------UPD CatchClause@@catch (Exception e) {  throw EjbLogger.EJB3_LOGGER.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);} @TO@ catch (Exception e) {  throw EjbMessages.MESSAGES.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName);} @AT@ 9059 @LENGTH@ 153
---------------UPD ThrowStatement@@MethodInvocation:EjbLogger.EJB3_LOGGER.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName) @TO@ MethodInvocation:EjbMessages.MESSAGES.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName) @AT@ 9097 @LENGTH@ 101
------------------UPD MethodInvocation@@EjbLogger.EJB3_LOGGER.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName) @TO@ EjbMessages.MESSAGES.failedToCreateDeploymentNodeSelector(e,deploymentNodeSelectorClassName) @AT@ 9103 @LENGTH@ 94
---------------------UPD QualifiedName@@Name:EjbLogger.EJB3_LOGGER @TO@ Name:EjbMessages.MESSAGES @AT@ 9103 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:prepareFeaturesForTesting("esb1","saaj","esb","saaj-api") @TO@ MethodInvocation:prepareFeaturesForTesting("esb1","saaj","esb","saaj-impl") @AT@ 798 @LENGTH@ 61
---UPD MethodInvocation@@prepareFeaturesForTesting("esb1","saaj","esb","saaj-api") @TO@ prepareFeaturesForTesting("esb1","saaj","esb","saaj-impl") @AT@ 798 @LENGTH@ 60
------UPD SimpleName@@MethodName:prepareFeaturesForTesting:["esb1", "saaj", "esb", "saaj-api"] @TO@ MethodName:prepareFeaturesForTesting:["esb1", "saaj", "esb", "saaj-impl"] @AT@ 798 @LENGTH@ 60
---------UPD StringLiteral@@"saaj-api" @TO@ "saaj-impl" @AT@ 847 @LENGTH@ 10


UPD MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @TO@ public, Logger, MethodName:getParentLogger,  @AT@ 10984 @LENGTH@ 124
---DEL SimpleType@@SQLFeatureNotSupportedException @AT@ 11023 @LENGTH@ 31
---UPD ThrowStatement@@ClassInstanceCreation:new SQLFeatureNotSupportedException() @TO@ ClassInstanceCreation:new UnsupportedOperationException() @AT@ 11060 @LENGTH@ 44
------UPD ClassInstanceCreation@@SQLFeatureNotSupportedException[] @TO@ UnsupportedOperationException[] @AT@ 11066 @LENGTH@ 37
---------UPD SimpleType@@SQLFeatureNotSupportedException @TO@ UnsupportedOperationException @AT@ 11070 @LENGTH@ 31


UPD IfStatement@@if (!isEmpty(ejbName)) {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name));} else {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name));} @TO@ if (!isEmpty(ejbName)) {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name,deploymentUnit));} else {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name,deploymentUnit));} @AT@ 9924 @LENGTH@ 404
---UPD Block@@ThenBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name));} @TO@ ThenBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name,deploymentUnit));} @AT@ 9947 @LENGTH@ 192
------UPD ExpressionStatement@@Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name)) @TO@ Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name,deploymentUnit)) @AT@ 9973 @LENGTH@ 144
---------UPD Assignment@@bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name)) @TO@ bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name,deploymentUnit)) @AT@ 9973 @LENGTH@ 143
------------UPD ClassInstanceCreation@@BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name)] @TO@ BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name,deploymentUnit)] @AT@ 9996 @LENGTH@ 120
---------------UPD Assignment@@ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name) @TO@ ejbInjectionSource=new EjbInjectionSource(ejbName,localInterfaceType.getName(),name,deploymentUnit) @AT@ 10027 @LENGTH@ 88
------------------UPD ClassInstanceCreation@@EjbInjectionSource[ejbName, localInterfaceType.getName(), name] @TO@ EjbInjectionSource[ejbName, localInterfaceType.getName(), name, deploymentUnit] @AT@ 10048 @LENGTH@ 67
---------------------INS SimpleName@@deploymentUnit @TO@ ClassInstanceCreation@@EjbInjectionSource[ejbName, localInterfaceType.getName(), name] @AT@ 10148 @LENGTH@ 14
---UPD Block@@ElseBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name));} @TO@ ElseBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name,deploymentUnit));} @AT@ 10145 @LENGTH@ 183
------UPD ExpressionStatement@@Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name)) @TO@ Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name,deploymentUnit)) @AT@ 10171 @LENGTH@ 135
---------UPD Assignment@@bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name)) @TO@ bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name,deploymentUnit)) @AT@ 10171 @LENGTH@ 134
------------UPD ClassInstanceCreation@@BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name)] @TO@ BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name,deploymentUnit)] @AT@ 10194 @LENGTH@ 111
---------------UPD Assignment@@ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name) @TO@ ejbInjectionSource=new EjbInjectionSource(localInterfaceType.getName(),name,deploymentUnit) @AT@ 10225 @LENGTH@ 79
------------------UPD ClassInstanceCreation@@EjbInjectionSource[localInterfaceType.getName(), name] @TO@ EjbInjectionSource[localInterfaceType.getName(), name, deploymentUnit] @AT@ 10246 @LENGTH@ 58
---------------------INS SimpleName@@deploymentUnit @TO@ ClassInstanceCreation@@EjbInjectionSource[localInterfaceType.getName(), name] @AT@ 10353 @LENGTH@ 14


UPD IfStatement@@if (isDeclaringImplicitQueueBinding(binding)) {  continue;} @TO@ if (!isDeclaringImplicitQueueBinding(binding)) {  channel.queueBind(binding.getDestination(),binding.getExchange(),binding.getRoutingKey(),binding.getArguments());} @AT@ 12001 @LENGTH@ 68
---INS PrefixExpression@@!isDeclaringImplicitQueueBinding(binding) @TO@ IfStatement@@if (isDeclaringImplicitQueueBinding(binding)) {  continue;} @AT@ 11976 @LENGTH@ 41
------INS Operator@@! @TO@ PrefixExpression@@!isDeclaringImplicitQueueBinding(binding) @AT@ 11976 @LENGTH@ 1
------MOV MethodInvocation@@isDeclaringImplicitQueueBinding(binding) @TO@ PrefixExpression@@!isDeclaringImplicitQueueBinding(binding) @AT@ 12005 @LENGTH@ 40
---UPD Block@@ThenBody:{  continue;} @TO@ ThenBody:{  channel.queueBind(binding.getDestination(),binding.getExchange(),binding.getRoutingKey(),binding.getArguments());} @AT@ 12047 @LENGTH@ 22
------DEL ContinueStatement@@ @AT@ 12054 @LENGTH@ 9
------MOV ExpressionStatement@@MethodInvocation:channel.queueBind(binding.getDestination(),binding.getExchange(),binding.getRoutingKey(),binding.getArguments()) @TO@ Block@@ThenBody:{  continue;} @AT@ 12075 @LENGTH@ 122


UPD SuperConstructorInvocation@@super(PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USER),ManagementDescription.getResourceDescriptionResolver("core.management.security-realm.authentication.xml"),new SecurityRealmChildAddHandler(true),new SecurityRealmChildRemoveHandler(true),OperationEntry.Flag.RESTART_RESOURCE_SERVICES,OperationEntry.Flag.RESTART_RESOURCE_SERVICES);
 @TO@ super(PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USERS),ManagementDescription.getResourceDescriptionResolver("core.management.security-realm.authentication.xml"),new SecurityRealmChildAddHandler(true),new SecurityRealmChildRemoveHandler(true),OperationEntry.Flag.RESTART_RESOURCE_SERVICES,OperationEntry.Flag.RESTART_RESOURCE_SERVICES);
 @AT@ 1835 @LENGTH@ 437
---UPD MethodInvocation@@PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USER) @TO@ PathElement.pathElement(ModelDescriptionConstants.AUTHENTICATION,ModelDescriptionConstants.USERS) @AT@ 1841 @LENGTH@ 97
------UPD SimpleName@@MethodName:pathElement:[ModelDescriptionConstants.AUTHENTICATION, ModelDescriptionConstants.USER] @TO@ MethodName:pathElement:[ModelDescriptionConstants.AUTHENTICATION, ModelDescriptionConstants.USERS] @AT@ 1853 @LENGTH@ 85
---------UPD QualifiedName@@ModelDescriptionConstants.USER @TO@ ModelDescriptionConstants.USERS @AT@ 1907 @LENGTH@ 30
------------UPD SimpleName@@USER @TO@ USERS @AT@ 1933 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2067 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2067 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2075 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2089 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2105 @LENGTH@ 23


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[public]AsyncProcessorTypeConverter, [TypeConverter] @AT@ 2310 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2310 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2321 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2323 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2336 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2336 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2336 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2342 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2345 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2351 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2351 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2360 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2370 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2370 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2377 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2394 @LENGTH@ 125
------INS ReturnStatement@@MethodInvocation:convertTo(type,exchange,value) @TO@ TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @AT@ 2412 @LENGTH@ 40
---------INS MethodInvocation@@convertTo(type,exchange,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,exchange,value) @AT@ 2419 @LENGTH@ 32
------------INS SimpleName@@MethodName:convertTo:[type, exchange, value] @TO@ MethodInvocation@@convertTo(type,exchange,value) @AT@ 2419 @LENGTH@ 32
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 2429 @LENGTH@ 4
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 2435 @LENGTH@ 8
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 2445 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @AT@ 2463 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2470 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2470 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2480 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 2497 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2504 @LENGTH@ 4


UPD IfStatement@@if (EjbDeploymentMarker.isEjbDeployment(unit)) {  resourceRoots=new AttachmentList<ResourceRoot>(ResourceRoot.class);  final ResourceRoot root=unit.getAttachment(DEPLOYMENT_ROOT);  resourceRoots.add(root);} @TO@ if (!unit.getName().endsWith(".war") && EjbDeploymentMarker.isEjbDeployment(unit)) {  resourceRoots=new AttachmentList<ResourceRoot>(ResourceRoot.class);  final ResourceRoot root=unit.getAttachment(DEPLOYMENT_ROOT);  resourceRoots.add(root);} @AT@ 3603 @LENGTH@ 329
---INS InfixExpression@@!unit.getName().endsWith(".war") && EjbDeploymentMarker.isEjbDeployment(unit) @TO@ IfStatement@@if (EjbDeploymentMarker.isEjbDeployment(unit)) {  resourceRoots=new AttachmentList<ResourceRoot>(ResourceRoot.class);  final ResourceRoot root=unit.getAttachment(DEPLOYMENT_ROOT);  resourceRoots.add(root);} @AT@ 3607 @LENGTH@ 77
------MOV MethodInvocation@@EjbDeploymentMarker.isEjbDeployment(unit) @TO@ InfixExpression@@!unit.getName().endsWith(".war") && EjbDeploymentMarker.isEjbDeployment(unit) @AT@ 3607 @LENGTH@ 41
------INS PrefixExpression@@!unit.getName().endsWith(".war") @TO@ InfixExpression@@!unit.getName().endsWith(".war") && EjbDeploymentMarker.isEjbDeployment(unit) @AT@ 3607 @LENGTH@ 32
---------INS Operator@@! @TO@ PrefixExpression@@!unit.getName().endsWith(".war") @AT@ 3607 @LENGTH@ 1
---------INS MethodInvocation@@unit.getName().endsWith(".war") @TO@ PrefixExpression@@!unit.getName().endsWith(".war") @AT@ 3608 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@unit.getName().endsWith(".war") @AT@ 3608 @LENGTH@ 14
------------INS SimpleName@@Name:unit @TO@ MethodInvocation@@unit.getName().endsWith(".war") @AT@ 3608 @LENGTH@ 4
------------INS SimpleName@@MethodName:endsWith:[".war"] @TO@ MethodInvocation@@unit.getName().endsWith(".war") @AT@ 3623 @LENGTH@ 16
---------------INS StringLiteral@@".war" @TO@ SimpleName@@MethodName:endsWith:[".war"] @AT@ 3632 @LENGTH@ 6
------INS Operator@@&& @TO@ InfixExpression@@!unit.getName().endsWith(".war") && EjbDeploymentMarker.isEjbDeployment(unit) @AT@ 3639 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:printer.toString(e) @TO@ MethodInvocation:sb.append(printer.toString(e)) @AT@ 1433 @LENGTH@ 20
---INS MethodInvocation@@sb.append(printer.toString(e)) @TO@ ExpressionStatement@@MethodInvocation:printer.toString(e) @AT@ 1433 @LENGTH@ 30
------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(printer.toString(e)) @AT@ 1433 @LENGTH@ 2
------INS SimpleName@@MethodName:append:[printer.toString(e)] @TO@ MethodInvocation@@sb.append(printer.toString(e)) @AT@ 1436 @LENGTH@ 27
---------MOV MethodInvocation@@printer.toString(e) @TO@ SimpleName@@MethodName:append:[printer.toString(e)] @AT@ 1433 @LENGTH@ 19
---------MOV MethodInvocation@@printer.toString(e) @TO@ SimpleName@@MethodName:append:[printer.toString(e)] @AT@ 1433 @LENGTH@ 19


INS IfStatement@@if (!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME)) {  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @TO@ MethodDeclaration@@private, ModelNode, MethodName:parseMDB, final XMLExtendedStreamReader reader, List<ModelNode> operations, final ModelNode ejb3SubsystemAddOperation, XMLStreamException,  @AT@ 27590 @LENGTH@ 404
---INS PrefixExpression@@!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @TO@ IfStatement@@if (!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME)) {  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 27594 @LENGTH@ 87
------INS Operator@@! @TO@ PrefixExpression@@!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 27594 @LENGTH@ 1
------INS MethodInvocation@@ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @TO@ PrefixExpression@@!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 27595 @LENGTH@ 86
---------INS SimpleName@@Name:ejb3SubsystemAddOperation @TO@ MethodInvocation@@ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 27595 @LENGTH@ 25
---------INS SimpleName@@MethodName:hasDefined:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @TO@ MethodInvocation@@ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME) @AT@ 27621 @LENGTH@ 60
------------INS QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @TO@ SimpleName@@MethodName:hasDefined:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @AT@ 27632 @LENGTH@ 48
---------------INS SimpleName@@EJB3SubsystemModel @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 27632 @LENGTH@ 18
---------------INS SimpleName@@DEFAULT_RESOURCE_ADAPTER_NAME @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 27651 @LENGTH@ 29
---INS Block@@ThenBody:{  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @TO@ IfStatement@@if (!ejb3SubsystemAddOperation.hasDefined(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME)) {  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 27683 @LENGTH@ 311
------INS VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @TO@ Block@@ThenBody:{  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 27697 @LENGTH@ 116
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @AT@ 27697 @LENGTH@ 5
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @AT@ 27703 @LENGTH@ 9
---------INS VariableDeclarationFragment@@defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @TO@ VariableDeclarationStatement@@final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue(); @AT@ 27713 @LENGTH@ 99
------------INS SimpleName@@defaultRAName @TO@ VariableDeclarationFragment@@defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 27713 @LENGTH@ 13
------------INS MethodInvocation@@EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @TO@ VariableDeclarationFragment@@defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 27729 @LENGTH@ 83
---------------INS QualifiedName@@Name:EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME @TO@ MethodInvocation@@EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 27729 @LENGTH@ 65
---------------INS SimpleName@@MethodName:getDefaultValue:[] @TO@ MethodInvocation@@EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue() @AT@ 27795 @LENGTH@ 17
------INS IfStatement@@if (defaultRAName != null) {  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @TO@ Block@@ThenBody:{  final ModelNode defaultRAName=EJB3SubsystemRootResourceDefinition.DEFAULT_RESOURCE_ADAPTER_NAME.getDefaultValue();  if (defaultRAName != null) {    ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);  }} @AT@ 27826 @LENGTH@ 158
---------INS InfixExpression@@defaultRAName != null @TO@ IfStatement@@if (defaultRAName != null) {  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @AT@ 27830 @LENGTH@ 21
------------INS SimpleName@@defaultRAName @TO@ InfixExpression@@defaultRAName != null @AT@ 27830 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@defaultRAName != null @AT@ 27843 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@defaultRAName != null @AT@ 27847 @LENGTH@ 4
---------INS Block@@ThenBody:{  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @TO@ IfStatement@@if (defaultRAName != null) {  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @AT@ 27853 @LENGTH@ 131
------------INS ExpressionStatement@@MethodInvocation:ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @TO@ Block@@ThenBody:{  ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName);} @AT@ 27871 @LENGTH@ 99
---------------INS MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @TO@ ExpressionStatement@@MethodInvocation:ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 27871 @LENGTH@ 98
------------------INS MethodInvocation@@MethodName:get:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @TO@ MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 27871 @LENGTH@ 79
---------------------INS QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @TO@ MethodInvocation@@MethodName:get:[EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME] @AT@ 27901 @LENGTH@ 48
------------------------INS SimpleName@@EJB3SubsystemModel @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 27901 @LENGTH@ 18
------------------------INS SimpleName@@DEFAULT_RESOURCE_ADAPTER_NAME @TO@ QualifiedName@@EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME @AT@ 27920 @LENGTH@ 29
------------------INS SimpleName@@Name:ejb3SubsystemAddOperation @TO@ MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 27871 @LENGTH@ 25
------------------INS SimpleName@@MethodName:set:[defaultRAName] @TO@ MethodInvocation@@ejb3SubsystemAddOperation.get(EJB3SubsystemModel.DEFAULT_RESOURCE_ADAPTER_NAME).set(defaultRAName) @AT@ 27951 @LENGTH@ 18
---------------------INS SimpleName@@defaultRAName @TO@ SimpleName@@MethodName:set:[defaultRAName] @AT@ 27955 @LENGTH@ 13


DEL ExpressionStatement@@MethodInvocation:this.converters.add(BinaryToUUIDConverter.INSTANCE) @AT@ 4480 @LENGTH@ 52
---DEL MethodInvocation@@this.converters.add(BinaryToUUIDConverter.INSTANCE) @AT@ 4480 @LENGTH@ 51
------DEL FieldAccess@@this.converters @AT@ 4480 @LENGTH@ 15
---------DEL ThisExpression@@this @AT@ 4480 @LENGTH@ 4
---------DEL SimpleName@@converters @AT@ 4485 @LENGTH@ 10
------DEL SimpleName@@MethodName:add:[BinaryToUUIDConverter.INSTANCE] @AT@ 4496 @LENGTH@ 35
---------DEL QualifiedName@@BinaryToUUIDConverter.INSTANCE @AT@ 4500 @LENGTH@ 30
------------DEL SimpleName@@BinaryToUUIDConverter @AT@ 4500 @LENGTH@ 21
------------DEL SimpleName@@INSTANCE @AT@ 4522 @LENGTH@ 8


UPD IfStatement@@if (context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class) {  final Object other=context.getParameters()[0];  final Class<?> proxyType=componentView.getProxyClass();  if (proxyType.isAssignableFrom(other.getClass())) {    return other.equals(new SessionIdHolder(sessionIdReference.get()));  } else   if (other instanceof SessionIdHolder) {    return sessionIdReference.get().equals(((SessionIdHolder)other).sessionId);  } else {    return false;  }} else if (context.getMethod().getName().equals("hashCode")) {  return sessionIdReference.get().hashCode();} else {  return context.proceed();} @TO@ if (context.getMethod().getName().equals("equals") || context.getMethod().getName().equals("isIdentical")) {  final Object other=context.getParameters()[0];  final Class<?> proxyType=componentView.getProxyClass();  if (proxyType.isAssignableFrom(other.getClass())) {    return other.equals(new SessionIdHolder(sessionIdReference.get()));  } else   if (other instanceof SessionIdHolder) {    return sessionIdReference.get().equals(((SessionIdHolder)other).sessionId);  } else {    return false;  }} else if (context.getMethod().getName().equals("hashCode")) {  return sessionIdReference.get().hashCode();} else {  return context.proceed();} @AT@ 2754 @LENGTH@ 1286
---UPD InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @TO@ context.getMethod().getName().equals("equals") || context.getMethod().getName().equals("isIdentical") @AT@ 2758 @LENGTH@ 147
------DEL InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 @AT@ 2758 @LENGTH@ 85
---------DEL InfixExpression@@context.getParameters().length == 1 @AT@ 2808 @LENGTH@ 35
------------DEL FieldAccess@@context.getParameters().length @AT@ 2808 @LENGTH@ 30
---------------DEL MethodInvocation@@context.getParameters() @AT@ 2808 @LENGTH@ 23
------------------DEL SimpleName@@Name:context @AT@ 2808 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getParameters:[] @AT@ 2816 @LENGTH@ 15
---------------DEL SimpleName@@length @AT@ 2832 @LENGTH@ 6
------------DEL Operator@@== @AT@ 2838 @LENGTH@ 2
------------DEL NumberLiteral@@1 @AT@ 2842 @LENGTH@ 1
------MOV MethodInvocation@@context.getMethod().getName().equals("equals") @TO@ InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2758 @LENGTH@ 46
------MOV Operator@@&& @TO@ InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2804 @LENGTH@ 2
------INS MethodInvocation@@context.getMethod().getName().equals("isIdentical") @TO@ InfixExpression@@context.getMethod().getName().equals("equals") && context.getParameters().length == 1 && context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2828 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2828 @LENGTH@ 29
---------MOV MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2847 @LENGTH@ 19
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2847 @LENGTH@ 7
---------MOV SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@context.getMethod().getName().equals("isIdentical") @AT@ 2867 @LENGTH@ 19
------------INS StringLiteral@@"isIdentical" @TO@ SimpleName@@MethodName:getParameterTypes:[] @AT@ 2865 @LENGTH@ 13
------DEL Operator@@&& @AT@ 2843 @LENGTH@ 2
------DEL InfixExpression@@context.getMethod().getParameterTypes()[0] == Object.class @AT@ 2847 @LENGTH@ 58
---------DEL ArrayAccess@@context.getMethod().getParameterTypes()[0] @AT@ 2847 @LENGTH@ 42
------------DEL MethodInvocation@@context.getMethod().getParameterTypes() @AT@ 2847 @LENGTH@ 39
------------DEL NumberLiteral@@0 @AT@ 2887 @LENGTH@ 1
---------DEL Operator@@== @AT@ 2889 @LENGTH@ 2
---------DEL TypeLiteral@@Object.class @AT@ 2893 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:Assert.state(repositoryFactory != null,"A MapJobExplorerFactoryBean must be provided") @TO@ MethodInvocation:Assert.state(repositoryFactory != null,"A MapJobRepositoryFactoryBean must be provided") @AT@ 2438 @LENGTH@ 88
---UPD MethodInvocation@@Assert.state(repositoryFactory != null,"A MapJobExplorerFactoryBean must be provided") @TO@ Assert.state(repositoryFactory != null,"A MapJobRepositoryFactoryBean must be provided") @AT@ 2438 @LENGTH@ 87
------UPD SimpleName@@MethodName:state:[repositoryFactory != null, "A MapJobExplorerFactoryBean must be provided"] @TO@ MethodName:state:[repositoryFactory != null, "A MapJobRepositoryFactoryBean must be provided"] @AT@ 2445 @LENGTH@ 80
---------UPD StringLiteral@@"A MapJobExplorerFactoryBean must be provided" @TO@ "A MapJobRepositoryFactoryBean must be provided" @AT@ 2478 @LENGTH@ 46


UPD VariableDeclarationStatement@@final Agent parent=service.getAgent(agentUri.getHost()); @TO@ final Agent parent=service.getAgent(parentName); @AT@ 1527 @LENGTH@ 58
---UPD VariableDeclarationFragment@@parent=service.getAgent(agentUri.getHost()) @TO@ parent=service.getAgent(parentName) @AT@ 1539 @LENGTH@ 45
------UPD MethodInvocation@@service.getAgent(agentUri.getHost()) @TO@ service.getAgent(parentName) @AT@ 1548 @LENGTH@ 36
---------UPD SimpleName@@MethodName:getAgent:[agentUri.getHost()] @TO@ MethodName:getAgent:[parentName] @AT@ 1556 @LENGTH@ 28
------------DEL MethodInvocation@@agentUri.getHost() @AT@ 1565 @LENGTH@ 18
---------------DEL SimpleName@@Name:agentUri @AT@ 1565 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getHost:[] @AT@ 1574 @LENGTH@ 9
------------INS SimpleName@@parentName @TO@ SimpleName@@MethodName:getAgent:[agentUri.getHost()] @AT@ 1638 @LENGTH@ 10


UPD MethodDeclaration@@void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 354 @LENGTH@ 67
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 430 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 430 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 436 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 443 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).set(entry.getKey(),entry.getValue()) @TO@ MethodInvocation:addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).add(entry.getKey(),entry.getValue()) @AT@ 3396 @LENGTH@ 101
---UPD MethodInvocation@@addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).set(entry.getKey(),entry.getValue()) @TO@ addOperation.get(CommonAttributes.CONNECTION_CREATION_OPTIONS).add(entry.getKey(),entry.getValue()) @AT@ 3396 @LENGTH@ 100
------UPD SimpleName@@MethodName:set:[entry.getKey(), entry.getValue()] @TO@ MethodName:add:[entry.getKey(), entry.getValue()] @AT@ 3459 @LENGTH@ 37


INS FieldDeclaration@@private, KeyAffinityServiceFactory, [affinityFactory=new LocalKeyAffinityServiceFactory(Executors.newSingleThreadExecutor(),10)] @TO@ TypeDeclaration@@[public]DistributedCacheManagerFactory, [org.jboss.as.clustering.web.DistributedCacheManagerFactory] @AT@ 4138 @LENGTH@ 128
---INS Modifier@@private @TO@ FieldDeclaration@@private, KeyAffinityServiceFactory, [affinityFactory=new LocalKeyAffinityServiceFactory(Executors.newSingleThreadExecutor(),10)] @AT@ 4138 @LENGTH@ 7
---INS SimpleType@@KeyAffinityServiceFactory @TO@ FieldDeclaration@@private, KeyAffinityServiceFactory, [affinityFactory=new LocalKeyAffinityServiceFactory(Executors.newSingleThreadExecutor(),10)] @AT@ 4146 @LENGTH@ 25
---INS VariableDeclarationFragment@@affinityFactory=new LocalKeyAffinityServiceFactory(Executors.newSingleThreadExecutor(),10) @TO@ FieldDeclaration@@private, KeyAffinityServiceFactory, [affinityFactory=new LocalKeyAffinityServiceFactory(Executors.newSingleThreadExecutor(),10)] @AT@ 4172 @LENGTH@ 93
------INS SimpleName@@affinityFactory @TO@ VariableDeclarationFragment@@affinityFactory=new LocalKeyAffinityServiceFactory(Executors.newSingleThreadExecutor(),10) @AT@ 4172 @LENGTH@ 15
------INS ClassInstanceCreation@@LocalKeyAffinityServiceFactory[Executors.newSingleThreadExecutor(), 10] @TO@ VariableDeclarationFragment@@affinityFactory=new LocalKeyAffinityServiceFactory(Executors.newSingleThreadExecutor(),10) @AT@ 4190 @LENGTH@ 75
---------INS New@@new @TO@ ClassInstanceCreation@@LocalKeyAffinityServiceFactory[Executors.newSingleThreadExecutor(), 10] @AT@ 4190 @LENGTH@ 3
---------INS SimpleType@@LocalKeyAffinityServiceFactory @TO@ ClassInstanceCreation@@LocalKeyAffinityServiceFactory[Executors.newSingleThreadExecutor(), 10] @AT@ 4194 @LENGTH@ 30
---------INS MethodInvocation@@Executors.newSingleThreadExecutor() @TO@ ClassInstanceCreation@@LocalKeyAffinityServiceFactory[Executors.newSingleThreadExecutor(), 10] @AT@ 4225 @LENGTH@ 35
------------INS SimpleName@@Name:Executors @TO@ MethodInvocation@@Executors.newSingleThreadExecutor() @AT@ 4225 @LENGTH@ 9
------------INS SimpleName@@MethodName:newSingleThreadExecutor:[] @TO@ MethodInvocation@@Executors.newSingleThreadExecutor() @AT@ 4235 @LENGTH@ 25
---------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@LocalKeyAffinityServiceFactory[Executors.newSingleThreadExecutor(), 10] @AT@ 4262 @LENGTH@ 2


UPD IfStatement@@if (bean instanceof BlueprintSupport) {  answer=new CxfRsBlueprintEndpoint(this.getCamelContext(),bean);} else {  answer=new CxfRsSpringEndpoint(this.getCamelContext(),bean);} @TO@ if (bean instanceof BlueprintSupport) {  answer=new CxfRsBlueprintEndpoint(this,bean);} else {  answer=new CxfRsSpringEndpoint(this,bean);} @AT@ 2271 @LENGTH@ 237
---UPD Block@@ThenBody:{  answer=new CxfRsBlueprintEndpoint(this.getCamelContext(),bean);} @TO@ ThenBody:{  answer=new CxfRsBlueprintEndpoint(this,bean);} @AT@ 2309 @LENGTH@ 98
------UPD ExpressionStatement@@Assignment:answer=new CxfRsBlueprintEndpoint(this.getCamelContext(),bean) @TO@ Assignment:answer=new CxfRsBlueprintEndpoint(this,bean) @AT@ 2327 @LENGTH@ 66
---------UPD Assignment@@answer=new CxfRsBlueprintEndpoint(this.getCamelContext(),bean) @TO@ answer=new CxfRsBlueprintEndpoint(this,bean) @AT@ 2327 @LENGTH@ 65
------------UPD ClassInstanceCreation@@CxfRsBlueprintEndpoint[this.getCamelContext(), bean] @TO@ CxfRsBlueprintEndpoint[this, bean] @AT@ 2336 @LENGTH@ 56
---------------DEL MethodInvocation@@this.getCamelContext() @AT@ 2363 @LENGTH@ 22
------------------DEL ThisExpression@@this @AT@ 2363 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getCamelContext:[] @AT@ 2368 @LENGTH@ 17
---------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@CxfRsBlueprintEndpoint[this.getCamelContext(), bean] @AT@ 2363 @LENGTH@ 4
---UPD Block@@ElseBody:{  answer=new CxfRsSpringEndpoint(this.getCamelContext(),bean);} @TO@ ElseBody:{  answer=new CxfRsSpringEndpoint(this,bean);} @AT@ 2413 @LENGTH@ 95
------UPD ExpressionStatement@@Assignment:answer=new CxfRsSpringEndpoint(this.getCamelContext(),bean) @TO@ Assignment:answer=new CxfRsSpringEndpoint(this,bean) @AT@ 2431 @LENGTH@ 63
---------UPD Assignment@@answer=new CxfRsSpringEndpoint(this.getCamelContext(),bean) @TO@ answer=new CxfRsSpringEndpoint(this,bean) @AT@ 2431 @LENGTH@ 62
------------UPD ClassInstanceCreation@@CxfRsSpringEndpoint[this.getCamelContext(), bean] @TO@ CxfRsSpringEndpoint[this, bean] @AT@ 2440 @LENGTH@ 53
---------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@CxfRsSpringEndpoint[this.getCamelContext(), bean] @AT@ 2446 @LENGTH@ 4
---------------DEL MethodInvocation@@this.getCamelContext() @AT@ 2464 @LENGTH@ 22
------------------DEL ThisExpression@@this @AT@ 2464 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getCamelContext:[] @AT@ 2469 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:mock.message(0).arrives().between(7,9).seconds().beforeNext() @TO@ MethodInvocation:mock.message(0).arrives().between(6,9).seconds().beforeNext() @AT@ 1449 @LENGTH@ 63
---UPD MethodInvocation@@mock.message(0).arrives().between(7,9).seconds().beforeNext() @TO@ mock.message(0).arrives().between(6,9).seconds().beforeNext() @AT@ 1449 @LENGTH@ 62
------UPD MethodInvocation@@MethodName:between:[7, 9] @TO@ MethodName:between:[6, 9] @AT@ 1449 @LENGTH@ 39
---------UPD NumberLiteral@@7 @TO@ 6 @AT@ 1483 @LENGTH@ 1


UPD IfStatement@@if (ROOT_LOGGER.isTraceEnabled()) {  ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @TO@ if (MGMT_OP_LOGGER.isTraceEnabled()) {  MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @AT@ 20840 @LENGTH@ 149
---UPD MethodInvocation@@ROOT_LOGGER.isTraceEnabled() @TO@ MGMT_OP_LOGGER.isTraceEnabled() @AT@ 20844 @LENGTH@ 28
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 20844 @LENGTH@ 11
---UPD Block@@ThenBody:{  ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @TO@ ThenBody:{  MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR));} @AT@ 20874 @LENGTH@ 115
------UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @TO@ MethodInvocation:MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @AT@ 20892 @LENGTH@ 83
---------UPD MethodInvocation@@ROOT_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @TO@ MGMT_OP_LOGGER.trace("Executing " + operation.get(OP) + " "+ operation.get(OP_ADDR)) @AT@ 20892 @LENGTH@ 82
------------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 20892 @LENGTH@ 11


UPD MethodDeclaration@@public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException,  @TO@ public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException, InterruptedException,  @AT@ 2863 @LENGTH@ 4271
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException,  @AT@ 3021 @LENGTH@ 20
---UPD VariableDeclarationStatement@@Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>(); @TO@ final Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>(); @AT@ 3030 @LENGTH@ 97
------INS Modifier@@final @TO@ VariableDeclarationStatement@@Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>(); @AT@ 3051 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @TO@ MethodDeclaration@@public, Set<CreateJCloudsContainerMetadata>, MethodName:create, CreateJCloudsContainerOptions options, MalformedURLException, RunNodesException, URISyntaxException,  @AT@ 5007 @LENGTH@ 19
------INS MethodInvocation@@Thread.sleep(5000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @AT@ 5007 @LENGTH@ 18
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(5000) @AT@ 5007 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[5000] @TO@ MethodInvocation@@Thread.sleep(5000) @AT@ 5014 @LENGTH@ 11
------------INS NumberLiteral@@5000 @TO@ SimpleName@@MethodName:sleep:[5000] @AT@ 5020 @LENGTH@ 4
---UPD IfStatement@@if (metadatas != null) {  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    for (    String pa : publicAddresses) {      if (first) {        first=false;      } else {        buffer.append(",");      }      buffer.append(pa + ":" + options.getServicePort());    }    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @TO@ if (metadatas != null) {  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @AT@ 5086 @LENGTH@ 2018
------UPD Block@@ThenBody:{  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    for (    String pa : publicAddresses) {      if (first) {        first=false;      } else {        buffer.append(",");      }      buffer.append(pa + ":" + options.getServicePort());    }    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @TO@ ThenBody:{  for (  NodeMetadata nodeMetadata : metadatas) {    Credentials credentials=null;    if (options.getUser() != null) {      credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);    } else {      credentials=nodeMetadata.getCredentials();    }    String id=nodeMetadata.getId();    Set<String> publicAddresses=nodeMetadata.getPublicAddresses();    String containerName=options.getName();    if (options.getNumber() > 1) {      containerName+=suffix++;    }    String script=buildStartupScript(options.name(containerName));    if (credentials != null) {      computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));    } else {      computeService.runScriptOnNode(id,script);    }    CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();    jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());    jCloudsContainerMetadata.setContainerName(containerName);    jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());    jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());    result.add(jCloudsContainerMetadata);  }} @AT@ 5109 @LENGTH@ 1995
---------UPD EnhancedForStatement@@for (NodeMetadata nodeMetadata : metadatas) {  Credentials credentials=null;  if (options.getUser() != null) {    credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);  } else {    credentials=nodeMetadata.getCredentials();  }  String id=nodeMetadata.getId();  Set<String> publicAddresses=nodeMetadata.getPublicAddresses();  for (  String pa : publicAddresses) {    if (first) {      first=false;    } else {      buffer.append(",");    }    buffer.append(pa + ":" + options.getServicePort());  }  String containerName=options.getName();  if (options.getNumber() > 1) {    containerName+=suffix++;  }  String script=buildStartupScript(options.name(containerName));  if (credentials != null) {    computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));  } else {    computeService.runScriptOnNode(id,script);  }  CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();  jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());  jCloudsContainerMetadata.setContainerName(containerName);  jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());  jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());  result.add(jCloudsContainerMetadata);} @TO@ for (NodeMetadata nodeMetadata : metadatas) {  Credentials credentials=null;  if (options.getUser() != null) {    credentials=new Credentials(options.getUser(),nodeMetadata.getCredentials().credential);  } else {    credentials=nodeMetadata.getCredentials();  }  String id=nodeMetadata.getId();  Set<String> publicAddresses=nodeMetadata.getPublicAddresses();  String containerName=options.getName();  if (options.getNumber() > 1) {    containerName+=suffix++;  }  String script=buildStartupScript(options.name(containerName));  if (credentials != null) {    computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));  } else {    computeService.runScriptOnNode(id,script);  }  CreateJCloudsContainerMetadata jCloudsContainerMetadata=new CreateJCloudsContainerMetadata();  jCloudsContainerMetadata.setNodeId(nodeMetadata.getId());  jCloudsContainerMetadata.setContainerName(containerName);  jCloudsContainerMetadata.setPublicAddresses(nodeMetadata.getPublicAddresses());  jCloudsContainerMetadata.setHostname(nodeMetadata.getHostname());  result.add(jCloudsContainerMetadata);} @AT@ 5123 @LENGTH@ 1971
------------DEL EnhancedForStatement@@for (String pa : publicAddresses) {  if (first) {    first=false;  } else {    buffer.append(",");  }  buffer.append(pa + ":" + options.getServicePort());} @AT@ 5753 @LENGTH@ 291
---------------DEL SingleVariableDeclaration@@String pa @AT@ 5758 @LENGTH@ 9
------------------DEL SimpleType@@String @AT@ 5758 @LENGTH@ 6
------------------DEL SimpleName@@pa @AT@ 5765 @LENGTH@ 2
---------------DEL SimpleName@@publicAddresses @AT@ 5769 @LENGTH@ 15
---------------DEL IfStatement@@if (first) {  first=false;} else {  buffer.append(",");} @AT@ 5808 @LENGTH@ 146
------------------DEL SimpleName@@first @AT@ 5812 @LENGTH@ 5
------------------DEL Block@@ThenBody:{  first=false;} @AT@ 5819 @LENGTH@ 62
---------------------DEL ExpressionStatement@@Assignment:first=false @AT@ 5845 @LENGTH@ 14
------------------------DEL Assignment@@first=false @AT@ 5845 @LENGTH@ 13
---------------------------DEL SimpleName@@first @AT@ 5845 @LENGTH@ 5
---------------------------DEL Operator@@= @AT@ 5850 @LENGTH@ 1
---------------------------DEL BooleanLiteral@@false @AT@ 5853 @LENGTH@ 5
------------------DEL Block@@ElseBody:{  buffer.append(",");} @AT@ 5887 @LENGTH@ 67
---------------------DEL ExpressionStatement@@MethodInvocation:buffer.append(",") @AT@ 5913 @LENGTH@ 19
------------------------DEL MethodInvocation@@buffer.append(",") @AT@ 5913 @LENGTH@ 18
---------------------------DEL SimpleName@@Name:buffer @AT@ 5913 @LENGTH@ 6
---------------------------DEL SimpleName@@MethodName:append:[","] @AT@ 5920 @LENGTH@ 11
------------------------------DEL StringLiteral@@"," @AT@ 5927 @LENGTH@ 3
---------------DEL ExpressionStatement@@MethodInvocation:buffer.append(pa + ":" + options.getServicePort()) @AT@ 5975 @LENGTH@ 51
------------------DEL MethodInvocation@@buffer.append(pa + ":" + options.getServicePort()) @AT@ 5975 @LENGTH@ 50
---------------------DEL SimpleName@@Name:buffer @AT@ 5975 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:append:[pa + ":" + options.getServicePort()] @AT@ 5982 @LENGTH@ 43
------------------------DEL InfixExpression@@pa + ":" + options.getServicePort() @AT@ 5989 @LENGTH@ 35
---------------------------DEL SimpleName@@pa @AT@ 5989 @LENGTH@ 2
---------------------------DEL Operator@@+ @AT@ 5991 @LENGTH@ 1
---------------------------DEL StringLiteral@@":" @AT@ 5994 @LENGTH@ 3
---------------------------DEL MethodInvocation@@options.getServicePort() @AT@ 6000 @LENGTH@ 24
------------------------------DEL SimpleName@@Name:options @AT@ 6000 @LENGTH@ 7
------------------------------DEL SimpleName@@MethodName:getServicePort:[] @AT@ 6008 @LENGTH@ 16


DEL ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2320 @LENGTH@ 107
---DEL MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2320 @LENGTH@ 106
------DEL MethodInvocation@@MethodName:currentThread:[] @AT@ 2320 @LENGTH@ 22
------DEL SimpleName@@Name:Thread @AT@ 2320 @LENGTH@ 6
------DEL SimpleName@@MethodName:setContextClassLoader:[Utilities.addResourceFilesToClassPath(ss.getConf())] @AT@ 2343 @LENGTH@ 83
---------DEL MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @AT@ 2374 @LENGTH@ 51
------------DEL SimpleName@@Name:Utilities @AT@ 2374 @LENGTH@ 9
------------DEL SimpleName@@MethodName:addResourceFilesToClassPath:[ss.getConf()] @AT@ 2384 @LENGTH@ 41
---------------DEL MethodInvocation@@ss.getConf() @AT@ 2412 @LENGTH@ 12
------------------DEL SimpleName@@Name:ss @AT@ 2412 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:getConf:[] @AT@ 2415 @LENGTH@ 9


MOV MethodDeclaration@@IllegalArgumentException, MethodName:unexpectedHeaderChar, String dropping, String key,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]HttpServerMessages,  @AT@ 6362 @LENGTH@ 50


INS MethodDeclaration@@public, void, MethodName:handlesNativelyBuiltQueryCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), @SuppressWarnings("unused"), public]QueryMapperUnitTests,  @AT@ 4999 @LENGTH@ 174
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesNativelyBuiltQueryCorrectly,  @AT@ 4999 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesNativelyBuiltQueryCorrectly,  @AT@ 5006 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesNativelyBuiltQueryCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesNativelyBuiltQueryCorrectly,  @AT@ 5011 @LENGTH@ 34
---INS VariableDeclarationStatement@@DBObject query=new QueryBuilder().or(new BasicDBObject("foo","bar")).get(); @TO@ MethodDeclaration@@public, void, MethodName:handlesNativelyBuiltQueryCorrectly,  @AT@ 5053 @LENGTH@ 78
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject query=new QueryBuilder().or(new BasicDBObject("foo","bar")).get(); @AT@ 5053 @LENGTH@ 8
------INS VariableDeclarationFragment@@query=new QueryBuilder().or(new BasicDBObject("foo","bar")).get() @TO@ VariableDeclarationStatement@@DBObject query=new QueryBuilder().or(new BasicDBObject("foo","bar")).get(); @AT@ 5062 @LENGTH@ 68
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new QueryBuilder().or(new BasicDBObject("foo","bar")).get() @AT@ 5062 @LENGTH@ 5
---------INS MethodInvocation@@new QueryBuilder().or(new BasicDBObject("foo","bar")).get() @TO@ VariableDeclarationFragment@@query=new QueryBuilder().or(new BasicDBObject("foo","bar")).get() @AT@ 5070 @LENGTH@ 60
------------INS MethodInvocation@@MethodName:or:[new BasicDBObject("foo","bar")] @TO@ MethodInvocation@@new QueryBuilder().or(new BasicDBObject("foo","bar")).get() @AT@ 5070 @LENGTH@ 54
---------------INS ClassInstanceCreation@@BasicDBObject["foo", "bar"] @TO@ MethodInvocation@@MethodName:or:[new BasicDBObject("foo","bar")] @AT@ 5092 @LENGTH@ 31
------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["foo", "bar"] @AT@ 5092 @LENGTH@ 3
------------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["foo", "bar"] @AT@ 5096 @LENGTH@ 13
------------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@BasicDBObject["foo", "bar"] @AT@ 5110 @LENGTH@ 5
------------------INS StringLiteral@@"bar" @TO@ ClassInstanceCreation@@BasicDBObject["foo", "bar"] @AT@ 5117 @LENGTH@ 5
------------INS ClassInstanceCreation@@QueryBuilder[] @TO@ MethodInvocation@@new QueryBuilder().or(new BasicDBObject("foo","bar")).get() @AT@ 5070 @LENGTH@ 18
---------------INS New@@new @TO@ ClassInstanceCreation@@QueryBuilder[] @AT@ 5070 @LENGTH@ 3
---------------INS SimpleType@@QueryBuilder @TO@ ClassInstanceCreation@@QueryBuilder[] @AT@ 5074 @LENGTH@ 12
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@new QueryBuilder().or(new BasicDBObject("foo","bar")).get() @AT@ 5125 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:mapper.getMappedObject(query,null) @TO@ MethodDeclaration@@public, void, MethodName:handlesNativelyBuiltQueryCorrectly,  @AT@ 5134 @LENGTH@ 36
------INS MethodInvocation@@mapper.getMappedObject(query,null) @TO@ ExpressionStatement@@MethodInvocation:mapper.getMappedObject(query,null) @AT@ 5134 @LENGTH@ 35
---------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query,null) @AT@ 5134 @LENGTH@ 6
---------INS SimpleName@@MethodName:getMappedObject:[query, null] @TO@ MethodInvocation@@mapper.getMappedObject(query,null) @AT@ 5141 @LENGTH@ 28
------------INS SimpleName@@query @TO@ SimpleName@@MethodName:getMappedObject:[query, null] @AT@ 5157 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getMappedObject:[query, null] @AT@ 5164 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:child.getAbsolutePath().substring(parent.getAbsolutePath().length()) @TO@ MethodInvocation:child.getAbsolutePath().substring(parent.getAbsolutePath().length() + 1) @AT@ 12540 @LENGTH@ 76
---UPD MethodInvocation@@child.getAbsolutePath().substring(parent.getAbsolutePath().length()) @TO@ child.getAbsolutePath().substring(parent.getAbsolutePath().length() + 1) @AT@ 12547 @LENGTH@ 68
------UPD SimpleName@@MethodName:substring:[parent.getAbsolutePath().length()] @TO@ MethodName:substring:[parent.getAbsolutePath().length() + 1] @AT@ 12571 @LENGTH@ 44
---------INS InfixExpression@@parent.getAbsolutePath().length() + 1 @TO@ SimpleName@@MethodName:substring:[parent.getAbsolutePath().length()] @AT@ 12581 @LENGTH@ 35
------------INS MethodInvocation@@parent.getAbsolutePath().length() @TO@ InfixExpression@@parent.getAbsolutePath().length() + 1 @AT@ 12581 @LENGTH@ 33
---------------MOV MethodInvocation@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12581 @LENGTH@ 24
---------------MOV SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12581 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12606 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@parent.getAbsolutePath().length() + 1 @AT@ 12614 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@parent.getAbsolutePath().length() + 1 @AT@ 12615 @LENGTH@ 1
---------DEL MethodInvocation@@parent.getAbsolutePath().length() @AT@ 12581 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:context.getFailureDescription().set(String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @TO@ MethodInvocation:context.getFailureDescription().set(String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @AT@ 6400 @LENGTH@ 294
---UPD MethodInvocation@@context.getFailureDescription().set(String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @TO@ context.getFailureDescription().set(String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))) @AT@ 6400 @LENGTH@ 293
------UPD SimpleName@@MethodName:set:[String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))] @TO@ MethodName:set:[String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)))] @AT@ 6432 @LENGTH@ 261
---------UPD MethodInvocation@@String.format("Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR))) @TO@ String.format("Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller",operation.get(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR))) @AT@ 6436 @LENGTH@ 256
------------UPD SimpleName@@MethodName:format:["Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller", operation.get(OP).asString(), PathAddress.pathAddress(operation.get(OP_ADDR))] @TO@ MethodName:format:["Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller", operation.get(OP).asString(), PathAddress.pathAddress(operation.get(OP_ADDR))] @AT@ 6443 @LENGTH@ 249
---------------UPD InfixExpression@@"Operation %s for address %s can only handled by the " + "master Domain Controller; this host is not the master Domain Controller" @TO@ "Operation %s for address %s can only be handled by the " + "master Domain Controller; this host is not the master Domain Controller" @AT@ 6450 @LENGTH@ 146
------------------UPD StringLiteral@@"Operation %s for address %s can only handled by the " @TO@ "Operation %s for address %s can only be handled by the " @AT@ 6450 @LENGTH@ 54


INS MethodDeclaration@@protected, void, MethodName:doShutdown, Exception,  @TO@ TypeDeclaration@@[public]TimerListenerManager, ServiceSupport[Runnable] @AT@ 4688 @LENGTH@ 107
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doShutdown, Exception,  @AT@ 4688 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doShutdown, Exception,  @AT@ 4698 @LENGTH@ 4
---INS SimpleName@@MethodName:doShutdown @TO@ MethodDeclaration@@protected, void, MethodName:doShutdown, Exception,  @AT@ 4703 @LENGTH@ 10
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doShutdown, Exception,  @AT@ 4723 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.doShutdown() @TO@ MethodDeclaration@@protected, void, MethodName:doShutdown, Exception,  @AT@ 4743 @LENGTH@ 19
------INS SuperMethodInvocation@@super.doShutdown() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doShutdown() @AT@ 4743 @LENGTH@ 18
---------INS SimpleName@@MethodName:doShutdown:[] @TO@ SuperMethodInvocation@@super.doShutdown() @AT@ 4749 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:listeners.clear() @TO@ MethodDeclaration@@protected, void, MethodName:doShutdown, Exception,  @AT@ 4771 @LENGTH@ 18
------INS MethodInvocation@@listeners.clear() @TO@ ExpressionStatement@@MethodInvocation:listeners.clear() @AT@ 4771 @LENGTH@ 17
---------INS SimpleName@@Name:listeners @TO@ MethodInvocation@@listeners.clear() @AT@ 4771 @LENGTH@ 9
---------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@listeners.clear() @AT@ 4781 @LENGTH@ 7


INS ExpressionStatement@@Assignment:node=((Navigate)node.get(0)).next() @TO@ MethodDeclaration@@public, void, MethodName:testRouteIsCorrectAtRuntime, Exception,  @AT@ 1540 @LENGTH@ 39
---INS Assignment@@node=((Navigate)node.get(0)).next() @TO@ ExpressionStatement@@Assignment:node=((Navigate)node.get(0)).next() @AT@ 1540 @LENGTH@ 38
------INS SimpleName@@node @TO@ Assignment@@node=((Navigate)node.get(0)).next() @AT@ 1540 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@node=((Navigate)node.get(0)).next() @AT@ 1544 @LENGTH@ 1
------INS MethodInvocation@@((Navigate)node.get(0)).next() @TO@ Assignment@@node=((Navigate)node.get(0)).next() @AT@ 1547 @LENGTH@ 31
---------INS ParenthesizedExpression@@((Navigate)node.get(0)) @TO@ MethodInvocation@@((Navigate)node.get(0)).next() @AT@ 1547 @LENGTH@ 24
------------INS CastExpression@@(Navigate)node.get(0) @TO@ ParenthesizedExpression@@((Navigate)node.get(0)) @AT@ 1548 @LENGTH@ 22
---------------INS SimpleType@@Navigate @TO@ CastExpression@@(Navigate)node.get(0) @AT@ 1549 @LENGTH@ 8
---------------INS MethodInvocation@@node.get(0) @TO@ CastExpression@@(Navigate)node.get(0) @AT@ 1559 @LENGTH@ 11
------------------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get(0) @AT@ 1559 @LENGTH@ 4
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@node.get(0) @AT@ 1564 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 1568 @LENGTH@ 1
---------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@((Navigate)node.get(0)).next() @AT@ 1572 @LENGTH@ 6


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1736 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1736 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1746 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1754 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1770 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1770 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1776 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1793 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1812 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1819 @LENGTH@ 4


UPD VariableDeclarationStatement@@final Map<NetworkInterface,Set<InetAddress>> clone=new HashMap<NetworkInterface,Set<InetAddress>>(); @TO@ final Map<NetworkInterface,Set<InetAddress>> clone=new LinkedHashMap<NetworkInterface,Set<InetAddress>>(); @AT@ 3589 @LENGTH@ 104
---UPD VariableDeclarationFragment@@clone=new HashMap<NetworkInterface,Set<InetAddress>>() @TO@ clone=new LinkedHashMap<NetworkInterface,Set<InetAddress>>() @AT@ 3635 @LENGTH@ 57
------UPD ClassInstanceCreation@@HashMap<NetworkInterface,Set<InetAddress>>[] @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>>[] @AT@ 3643 @LENGTH@ 49
---------UPD ParameterizedType@@HashMap<NetworkInterface,Set<InetAddress>> @TO@ LinkedHashMap<NetworkInterface,Set<InetAddress>> @AT@ 3647 @LENGTH@ 43
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 3647 @LENGTH@ 7


UPD TryStatement@@try {  return context.proceed();} catch (Exception ex) {  final EJBComponent ejbComponent=(EJBComponent)component;  if (ejbComponent.getApplicationException(ex.getClass(),context.getMethod()) != null) {    throw ex;  }  if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {    throw ex;  }  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    discarded=true;    component.getPool().discard(instance);  }  throw ex;}catch (final Error e) {  discarded=true;  component.getPool().discard(instance);  throw e;}catch (final Throwable t) {  discarded=true;  component.getPool().discard(instance);  throw new RuntimeException(t);} finally {  context.putPrivateData(ComponentInstance.class,null);  if (!discarded) {    component.getPool().release(instance);  }} @TO@ try {  return context.proceed();} catch (Exception ex) {  final EJBComponent ejbComponent=(EJBComponent)component;  if (ejbComponent.getApplicationException(ex.getClass(),context.getMethod()) != null) {    throw ex;  }  if (ex instanceof ConcurrentAccessTimeoutException || ex instanceof ConcurrentAccessException) {    throw ex;  }  if (ex instanceof RuntimeException || ex instanceof RemoteException) {    discarded=true;    component.getPool().discard(instance);  }  throw ex;}catch (final Error e) {  discarded=true;  component.getPool().discard(instance);  throw e;}catch (final Throwable t) {  discarded=true;  component.getPool().discard(instance);  throw new RuntimeException(t);} finally {  if (!discarded) {    component.getPool().release(instance);  }} @AT@ 2118 @LENGTH@ 1244
---UPD Block@@FinallyBody:{  context.putPrivateData(ComponentInstance.class,null);  if (!discarded) {    component.getPool().release(instance);  }} @TO@ FinallyBody:{  if (!discarded) {    component.getPool().release(instance);  }} @AT@ 3185 @LENGTH@ 177
------DEL ExpressionStatement@@MethodInvocation:context.putPrivateData(ComponentInstance.class,null) @AT@ 3199 @LENGTH@ 54
---------DEL MethodInvocation@@context.putPrivateData(ComponentInstance.class,null) @AT@ 3199 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 3199 @LENGTH@ 7
------------DEL SimpleName@@MethodName:putPrivateData:[ComponentInstance.class, null] @AT@ 3207 @LENGTH@ 45
---------------DEL TypeLiteral@@ComponentInstance.class @AT@ 3222 @LENGTH@ 23
---------------DEL NullLiteral@@null @AT@ 3247 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringProfileInclude(reader.getLocation()) @AT@ 30226 @LENGTH@ 82
---UPD MethodInvocation@@HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ HOST_CONTROLLER_LOGGER.warnIgnoringProfileInclude(reader.getLocation()) @AT@ 30226 @LENGTH@ 81
------UPD SimpleName@@MethodName:warnIgnoringSocketBindingGroupIgnore:[reader.getLocation()] @TO@ MethodName:warnIgnoringProfileInclude:[reader.getLocation()] @AT@ 30249 @LENGTH@ 58


UPD ExpressionStatement@@Assignment:IMAGE_PNG=new MediaType("image","jpeg") @TO@ Assignment:IMAGE_PNG=new MediaType("image","png") @AT@ 5505 @LENGTH@ 43
---UPD Assignment@@IMAGE_PNG=new MediaType("image","jpeg") @TO@ IMAGE_PNG=new MediaType("image","png") @AT@ 5505 @LENGTH@ 42
------UPD ClassInstanceCreation@@MediaType["image", "jpeg"] @TO@ MediaType["image", "png"] @AT@ 5517 @LENGTH@ 30
---------UPD StringLiteral@@"jpeg" @TO@ "png" @AT@ 5540 @LENGTH@ 6


INS MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @TO@ TypeDeclaration@@[public]DomainTestSupport,  @AT@ 6828 @LENGTH@ 448
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 6828 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 6835 @LENGTH@ 6
---INS SimpleType@@ModelNode @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 6842 @LENGTH@ 9
---INS SimpleName@@MethodName:validateFailedResponse @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 6852 @LENGTH@ 22
---INS SingleVariableDeclaration@@ModelNode response @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 6875 @LENGTH@ 18
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode response @AT@ 6875 @LENGTH@ 9
------INS SimpleName@@response @TO@ SingleVariableDeclaration@@ModelNode response @AT@ 6885 @LENGTH@ 8
---INS IfStatement@@if (!FAILED.equals(response.get(OUTCOME).asString())) {  System.out.println("Response succeeded:");  System.out.println(response);  Assert.fail(response.get(OUTCOME).toString());} @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 6906 @LENGTH@ 221
------INS PrefixExpression@@!FAILED.equals(response.get(OUTCOME).asString()) @TO@ IfStatement@@if (!FAILED.equals(response.get(OUTCOME).asString())) {  System.out.println("Response succeeded:");  System.out.println(response);  Assert.fail(response.get(OUTCOME).toString());} @AT@ 6909 @LENGTH@ 49
---------INS Operator@@! @TO@ PrefixExpression@@!FAILED.equals(response.get(OUTCOME).asString()) @AT@ 6909 @LENGTH@ 1
---------INS MethodInvocation@@FAILED.equals(response.get(OUTCOME).asString()) @TO@ PrefixExpression@@!FAILED.equals(response.get(OUTCOME).asString()) @AT@ 6911 @LENGTH@ 47
------------INS SimpleName@@Name:FAILED @TO@ MethodInvocation@@FAILED.equals(response.get(OUTCOME).asString()) @AT@ 6911 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[response.get(OUTCOME).asString()] @TO@ MethodInvocation@@FAILED.equals(response.get(OUTCOME).asString()) @AT@ 6918 @LENGTH@ 40
---------------INS MethodInvocation@@response.get(OUTCOME).asString() @TO@ SimpleName@@MethodName:equals:[response.get(OUTCOME).asString()] @AT@ 6925 @LENGTH@ 32
------------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@response.get(OUTCOME).asString() @AT@ 6925 @LENGTH@ 21
---------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 6938 @LENGTH@ 7
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.get(OUTCOME).asString() @AT@ 6925 @LENGTH@ 8
------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@response.get(OUTCOME).asString() @AT@ 6947 @LENGTH@ 10
------INS Block@@ThenBody:{  System.out.println("Response succeeded:");  System.out.println(response);  Assert.fail(response.get(OUTCOME).toString());} @TO@ IfStatement@@if (!FAILED.equals(response.get(OUTCOME).asString())) {  System.out.println("Response succeeded:");  System.out.println(response);  Assert.fail(response.get(OUTCOME).toString());} @AT@ 6960 @LENGTH@ 167
---------INS ExpressionStatement@@MethodInvocation:System.out.println("Response succeeded:") @TO@ Block@@ThenBody:{  System.out.println("Response succeeded:");  System.out.println(response);  Assert.fail(response.get(OUTCOME).toString());} @AT@ 6974 @LENGTH@ 42
------------INS MethodInvocation@@System.out.println("Response succeeded:") @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Response succeeded:") @AT@ 6974 @LENGTH@ 41
---------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Response succeeded:") @AT@ 6974 @LENGTH@ 10
---------------INS SimpleName@@MethodName:println:["Response succeeded:"] @TO@ MethodInvocation@@System.out.println("Response succeeded:") @AT@ 6985 @LENGTH@ 30
------------------INS StringLiteral@@"Response succeeded:" @TO@ SimpleName@@MethodName:println:["Response succeeded:"] @AT@ 6993 @LENGTH@ 21
---------INS ExpressionStatement@@MethodInvocation:System.out.println(response) @TO@ Block@@ThenBody:{  System.out.println("Response succeeded:");  System.out.println(response);  Assert.fail(response.get(OUTCOME).toString());} @AT@ 7029 @LENGTH@ 29
------------INS MethodInvocation@@System.out.println(response) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(response) @AT@ 7029 @LENGTH@ 28
---------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(response) @AT@ 7029 @LENGTH@ 10
---------------INS SimpleName@@MethodName:println:[response] @TO@ MethodInvocation@@System.out.println(response) @AT@ 7040 @LENGTH@ 17
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:println:[response] @AT@ 7048 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:Assert.fail(response.get(OUTCOME).toString()) @TO@ Block@@ThenBody:{  System.out.println("Response succeeded:");  System.out.println(response);  Assert.fail(response.get(OUTCOME).toString());} @AT@ 7071 @LENGTH@ 46
------------INS MethodInvocation@@Assert.fail(response.get(OUTCOME).toString()) @TO@ ExpressionStatement@@MethodInvocation:Assert.fail(response.get(OUTCOME).toString()) @AT@ 7071 @LENGTH@ 45
---------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail(response.get(OUTCOME).toString()) @AT@ 7071 @LENGTH@ 6
---------------INS SimpleName@@MethodName:fail:[response.get(OUTCOME).toString()] @TO@ MethodInvocation@@Assert.fail(response.get(OUTCOME).toString()) @AT@ 7078 @LENGTH@ 38
------------------INS MethodInvocation@@response.get(OUTCOME).toString() @TO@ SimpleName@@MethodName:fail:[response.get(OUTCOME).toString()] @AT@ 7083 @LENGTH@ 32
---------------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@response.get(OUTCOME).toString() @AT@ 7083 @LENGTH@ 21
------------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 7096 @LENGTH@ 7
---------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.get(OUTCOME).toString() @AT@ 7083 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@response.get(OUTCOME).toString() @AT@ 7105 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue("failure description exists",response.has(FAILURE_DESCRIPTION)) @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 7137 @LENGTH@ 83
------INS MethodInvocation@@Assert.assertTrue("failure description exists",response.has(FAILURE_DESCRIPTION)) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue("failure description exists",response.has(FAILURE_DESCRIPTION)) @AT@ 7137 @LENGTH@ 82
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue("failure description exists",response.has(FAILURE_DESCRIPTION)) @AT@ 7137 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:["failure description exists", response.has(FAILURE_DESCRIPTION)] @TO@ MethodInvocation@@Assert.assertTrue("failure description exists",response.has(FAILURE_DESCRIPTION)) @AT@ 7144 @LENGTH@ 75
------------INS StringLiteral@@"failure description exists" @TO@ SimpleName@@MethodName:assertTrue:["failure description exists", response.has(FAILURE_DESCRIPTION)] @AT@ 7155 @LENGTH@ 28
------------INS MethodInvocation@@response.has(FAILURE_DESCRIPTION) @TO@ SimpleName@@MethodName:assertTrue:["failure description exists", response.has(FAILURE_DESCRIPTION)] @AT@ 7185 @LENGTH@ 33
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.has(FAILURE_DESCRIPTION) @AT@ 7185 @LENGTH@ 8
---------------INS SimpleName@@MethodName:has:[FAILURE_DESCRIPTION] @TO@ MethodInvocation@@response.has(FAILURE_DESCRIPTION) @AT@ 7194 @LENGTH@ 24
------------------INS SimpleName@@FAILURE_DESCRIPTION @TO@ SimpleName@@MethodName:has:[FAILURE_DESCRIPTION] @AT@ 7198 @LENGTH@ 19
---INS ReturnStatement@@MethodInvocation:response.get(FAILURE_DESCRIPTION) @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:validateFailedResponse, ModelNode response,  @AT@ 7229 @LENGTH@ 41
------INS MethodInvocation@@response.get(FAILURE_DESCRIPTION) @TO@ ReturnStatement@@MethodInvocation:response.get(FAILURE_DESCRIPTION) @AT@ 7236 @LENGTH@ 33
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.get(FAILURE_DESCRIPTION) @AT@ 7236 @LENGTH@ 8
---------INS SimpleName@@MethodName:get:[FAILURE_DESCRIPTION] @TO@ MethodInvocation@@response.get(FAILURE_DESCRIPTION) @AT@ 7245 @LENGTH@ 24
------------INS SimpleName@@FAILURE_DESCRIPTION @TO@ SimpleName@@MethodName:get:[FAILURE_DESCRIPTION] @AT@ 7249 @LENGTH@ 19


UPD TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  String s=EntityUtils.toString(response.getEntity());  boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s);  boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s);  if (!m1 && !m2) {    fail("Not expected body returned: " + s);  }}  finally {  httpclient.getConnectionManager().shutdown();} @TO@ try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  String s=EntityUtils.toString(response.getEntity());  assertNotNull(s);  boolean m1=s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>");  boolean m2=s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>");  if (!m1 && !m2) {    fail("Not expected body returned: " + s);  }}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 4613 @LENGTH@ 791
---UPD VariableDeclarationStatement@@boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s); @TO@ boolean m1=s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>"); @AT@ 4904 @LENGTH@ 148
------UPD VariableDeclarationFragment@@m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @TO@ m1=s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>") @AT@ 4912 @LENGTH@ 139
---------UPD MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @TO@ s.endsWith("<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>") @AT@ 4917 @LENGTH@ 134
------------DEL StringLiteral@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>" @AT@ 4917 @LENGTH@ 124
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 4947 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>"] @TO@ MethodInvocation@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s) @AT@ 4949 @LENGTH@ 134
---------------INS StringLiteral@@"<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>" @TO@ SimpleName@@MethodName:endsWith:["<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>"] @AT@ 4958 @LENGTH@ 124
------------DEL SimpleName@@MethodName:equals:[s] @AT@ 5042 @LENGTH@ 9
---------------DEL SimpleName@@s @AT@ 5049 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertNotNull(s) @TO@ TryStatement@@try {  HttpResponse response=httpclient.execute(get);  assertEquals(200,response.getStatusLine().getStatusCode());  String s=EntityUtils.toString(response.getEntity());  boolean m1="<Customers><Customer><id>123</id><name>John</name></Customer><Customer><id>113</id><name>Dan</name></Customer></Customers>".equals(s);  boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s);  if (!m1 && !m2) {    fail("Not expected body returned: " + s);  }}  finally {  httpclient.getConnectionManager().shutdown();} @AT@ 4904 @LENGTH@ 17
------INS MethodInvocation@@assertNotNull(s) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(s) @AT@ 4904 @LENGTH@ 16
---------INS SimpleName@@MethodName:assertNotNull:[s] @TO@ MethodInvocation@@assertNotNull(s) @AT@ 4904 @LENGTH@ 16
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertNotNull:[s] @AT@ 4918 @LENGTH@ 1
---UPD VariableDeclarationStatement@@boolean m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s); @TO@ boolean m2=s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>"); @AT@ 5065 @LENGTH@ 148
------UPD VariableDeclarationFragment@@m2="<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @TO@ m2=s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>") @AT@ 5073 @LENGTH@ 139
---------UPD MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @TO@ s.endsWith("<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>") @AT@ 5078 @LENGTH@ 134
------------DEL StringLiteral@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>" @AT@ 5078 @LENGTH@ 124
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 5110 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>"] @TO@ MethodInvocation@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>".equals(s) @AT@ 5112 @LENGTH@ 134
---------------INS StringLiteral@@"<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>" @TO@ SimpleName@@MethodName:endsWith:["<Customers><Customer><id>113</id><name>Dan</name></Customer><Customer><id>123</id><name>John</name></Customer></Customers>"] @AT@ 5121 @LENGTH@ 124
------------DEL SimpleName@@MethodName:equals:[s] @AT@ 5203 @LENGTH@ 9
---------------DEL SimpleName@@s @AT@ 5210 @LENGTH@ 1


UPD FieldDeclaration@@private, static, Class<?>[], [classes=new Class<?>[]{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class}] @TO@ private, static, Class<?>[], [classes=new Class<?>[]{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class,ValueManagedReferenceFactory.ValueManagedReference.class}] @AT@ 2285 @LENGTH@ 823
---UPD VariableDeclarationFragment@@classes=new Class<?>[]{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class} @TO@ classes=new Class<?>[]{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class,ValueManagedReferenceFactory.ValueManagedReference.class} @AT@ 2311 @LENGTH@ 796
------UPD ArrayCreation@@new Class<?>[]{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class} @TO@ new Class<?>[]{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class,ValueManagedReferenceFactory.ValueManagedReference.class} @AT@ 2321 @LENGTH@ 786
---------UPD ArrayInitializer@@{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class} @TO@ {SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class,ValueManagedReferenceFactory.ValueManagedReference.class} @AT@ 2336 @LENGTH@ 771
------------INS TypeLiteral@@ValueManagedReferenceFactory.ValueManagedReference.class @TO@ ArrayInitializer@@{SessionContext.class,UserTransaction.class,EntityManager.class,EntityManagerFactory.class,Timer.class,SessionID.class,SessionID.Serialized.class,EJBHome.class,EJBObject.class,Handle.class,HomeHandle.class,EJBMetaData.class,UUID.class,StatefulSessionComponentInstance.class,SessionBeanComponentInstance.class,EjbComponentInstance.class,BasicComponentInstance.class,Serializable.class,Cacheable.class,SerializationGroupImpl.class,SerializationGroupMemberImpl.class,AbstractBackingCacheEntry.class,StatefulSerializedProxy.class,ManagedReference.class} @AT@ 3167 @LENGTH@ 56


UPD TypeDeclaration@@[public]SystemPropertyRemoveHandler, AbstractRemoveStepHandler[DescriptionProvider] @TO@ [public]SystemPropertyRemoveHandler, [OperationStepHandler, DescriptionProvider] @AT@ 1931 @LENGTH@ 2998
---UPD SimpleType@@AbstractRemoveStepHandler @TO@ OperationStepHandler @AT@ 1980 @LENGTH@ 25


UPD ReturnStatement@@MethodInvocation:controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,false) @TO@ MethodInvocation:controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,rollbackOnRuntimeFailure) @AT@ 8541 @LENGTH@ 131
---UPD MethodInvocation@@controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,false) @TO@ controller.boot(bootOperations,OperationMessageHandler.logging,ModelController.OperationTransactionControl.COMMIT,rollbackOnRuntimeFailure) @AT@ 8548 @LENGTH@ 123
------UPD SimpleName@@MethodName:boot:[bootOperations, OperationMessageHandler.logging, ModelController.OperationTransactionControl.COMMIT, false] @TO@ MethodName:boot:[bootOperations, OperationMessageHandler.logging, ModelController.OperationTransactionControl.COMMIT, rollbackOnRuntimeFailure] @AT@ 8559 @LENGTH@ 112
---------INS SimpleName@@rollbackOnRuntimeFailure @TO@ SimpleName@@MethodName:boot:[bootOperations, OperationMessageHandler.logging, ModelController.OperationTransactionControl.COMMIT, false] @AT@ 8665 @LENGTH@ 24
---------DEL BooleanLiteral@@false @AT@ 8665 @LENGTH@ 5


UPD ReturnStatement@@QualifiedName:ManagementProtocol.TYPE_PING @TO@ QualifiedName:ManagementProtocol.TYPE_PONG @AT@ 1318 @LENGTH@ 36
---UPD QualifiedName@@ManagementProtocol.TYPE_PING @TO@ ManagementProtocol.TYPE_PONG @AT@ 1325 @LENGTH@ 28
------UPD SimpleName@@TYPE_PING @TO@ TYPE_PONG @AT@ 1344 @LENGTH@ 9


UPD EnhancedForStatement@@for (CreateContainerMetadata metadata : createMetadata) {  createContainerConfig(parent,metadata.getContainerName());  containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);  containers[container++].setCreateContainerMetadata(metadata);} @TO@ for (CreateContainerMetadata metadata : createMetadata) {  if (!options.isEnsembleServer()) {    createContainerConfig(parent,metadata.getContainerName());  }  containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);  containers[container++].setCreateContainerMetadata(metadata);} @AT@ 8571 @LENGTH@ 353
---INS IfStatement@@if (!options.isEnsembleServer()) {  createContainerConfig(parent,metadata.getContainerName());} @TO@ EnhancedForStatement@@for (CreateContainerMetadata metadata : createMetadata) {  createContainerConfig(parent,metadata.getContainerName());  containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);  containers[container++].setCreateContainerMetadata(metadata);} @AT@ 8822 @LENGTH@ 132
------INS PrefixExpression@@!options.isEnsembleServer() @TO@ IfStatement@@if (!options.isEnsembleServer()) {  createContainerConfig(parent,metadata.getContainerName());} @AT@ 8826 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!options.isEnsembleServer() @AT@ 8826 @LENGTH@ 1
---------INS MethodInvocation@@options.isEnsembleServer() @TO@ PrefixExpression@@!options.isEnsembleServer() @AT@ 8827 @LENGTH@ 26
------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 8827 @LENGTH@ 7
------------INS SimpleName@@MethodName:isEnsembleServer:[] @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 8835 @LENGTH@ 18
------INS Block@@ThenBody:{  createContainerConfig(parent,metadata.getContainerName());} @TO@ IfStatement@@if (!options.isEnsembleServer()) {  createContainerConfig(parent,metadata.getContainerName());} @AT@ 8855 @LENGTH@ 99
---------MOV ExpressionStatement@@MethodInvocation:createContainerConfig(parent,metadata.getContainerName()) @TO@ Block@@ThenBody:{  createContainerConfig(parent,metadata.getContainerName());} @AT@ 8644 @LENGTH@ 59


UPD ExpressionStatement@@Assignment:parent=uri.getHost() @TO@ Assignment:parent=getParentFromURI(uri) @AT@ 8368 @LENGTH@ 23
---UPD Assignment@@parent=uri.getHost() @TO@ parent=getParentFromURI(uri) @AT@ 8368 @LENGTH@ 22
------UPD MethodInvocation@@uri.getHost() @TO@ getParentFromURI(uri) @AT@ 8377 @LENGTH@ 13
---------DEL SimpleName@@Name:uri @AT@ 8377 @LENGTH@ 3
---------UPD SimpleName@@MethodName:getHost:[] @TO@ MethodName:getParentFromURI:[uri] @AT@ 8381 @LENGTH@ 9
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:getHost:[] @AT@ 8394 @LENGTH@ 3


INS MethodDeclaration@@protected, String, MethodName:percentText, double value,  @TO@ TypeDeclaration@@[public, abstract]FabricCommand, OsgiCommandSupport @AT@ 4520 @LENGTH@ 114
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, String, MethodName:percentText, double value,  @AT@ 4520 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, String, MethodName:percentText, double value,  @AT@ 4530 @LENGTH@ 6
---INS SimpleName@@MethodName:percentText @TO@ MethodDeclaration@@protected, String, MethodName:percentText, double value,  @AT@ 4537 @LENGTH@ 11
---INS SingleVariableDeclaration@@double value @TO@ MethodDeclaration@@protected, String, MethodName:percentText, double value,  @AT@ 4549 @LENGTH@ 12
------INS PrimitiveType@@double @TO@ SingleVariableDeclaration@@double value @AT@ 4549 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@double value @AT@ 4556 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:NumberFormat.getPercentInstance().format(value) @TO@ MethodDeclaration@@protected, String, MethodName:percentText, double value,  @AT@ 4573 @LENGTH@ 55
------INS MethodInvocation@@NumberFormat.getPercentInstance().format(value) @TO@ ReturnStatement@@MethodInvocation:NumberFormat.getPercentInstance().format(value) @AT@ 4580 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getPercentInstance:[] @TO@ MethodInvocation@@NumberFormat.getPercentInstance().format(value) @AT@ 4580 @LENGTH@ 33
---------INS SimpleName@@Name:NumberFormat @TO@ MethodInvocation@@NumberFormat.getPercentInstance().format(value) @AT@ 4580 @LENGTH@ 12
---------INS SimpleName@@MethodName:format:[value] @TO@ MethodInvocation@@NumberFormat.getPercentInstance().format(value) @AT@ 4614 @LENGTH@ 13
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:format:[value] @AT@ 4621 @LENGTH@ 5


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2122 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2276 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2311 @LENGTH@ 86
------INS MethodInvocation@@ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2311 @LENGTH@ 85
---------INS QualifiedName@@Name:ScheduledThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2311 @LENGTH@ 31
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@ScheduledThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2343 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2358 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2367 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2378 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2385 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2391 @LENGTH@ 4


UPD MethodDeclaration@@public, static, Iterator, MethodName:iterator, Object value,  @TO@ public, static, Iterator<?>, MethodName:iterator, Object value,  @AT@ 2219 @LENGTH@ 104
---INS ParameterizedType@@Iterator<?> @TO@ MethodDeclaration@@public, static, Iterator, MethodName:iterator, Object value,  @AT@ 2199 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<?> @AT@ 2199 @LENGTH@ 8
------INS WildcardType@@? @TO@ ParameterizedType@@Iterator<?> @AT@ 2208 @LENGTH@ 1
---DEL SimpleType@@Iterator @AT@ 2233 @LENGTH@ 8


INS MethodDeclaration@@public, K, MethodName:createIdentifier,  @TO@ TypeDeclaration@@[public]PassivatingBackingCacheImpl, AbstractBackingCache<K,V,E>[PassivatingBackingCache<K,V,E>] @AT@ 4808 @LENGTH@ 81
---INS Modifier@@public @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 4808 @LENGTH@ 6
---INS SimpleType@@K @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 4815 @LENGTH@ 1
---INS SimpleName@@MethodName:createIdentifier @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 4817 @LENGTH@ 16
---INS ReturnStatement@@MethodInvocation:this.store.createIdentifier() @TO@ MethodDeclaration@@public, K, MethodName:createIdentifier,  @AT@ 4846 @LENGTH@ 37
------INS MethodInvocation@@this.store.createIdentifier() @TO@ ReturnStatement@@MethodInvocation:this.store.createIdentifier() @AT@ 4853 @LENGTH@ 29
---------INS FieldAccess@@this.store @TO@ MethodInvocation@@this.store.createIdentifier() @AT@ 4853 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.store @AT@ 4853 @LENGTH@ 4
------------INS SimpleName@@store @TO@ FieldAccess@@this.store @AT@ 4858 @LENGTH@ 5
---------INS SimpleName@@MethodName:createIdentifier:[] @TO@ MethodInvocation@@this.store.createIdentifier() @AT@ 4864 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @TO@ TypeDeclaration@@[public, abstract]TestTokenStoreBase,  @AT@ 7726 @LENGTH@ 545
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 7726 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 7733 @LENGTH@ 4
---INS SimpleName@@MethodName:testRemoveRefreshToken @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 7738 @LENGTH@ 22
---INS VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=new ExpiringOAuth2RefreshToken("testToken",new Date()); @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 7767 @LENGTH@ 110
------INS SimpleType@@OAuth2RefreshToken @TO@ VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=new ExpiringOAuth2RefreshToken("testToken",new Date()); @AT@ 7767 @LENGTH@ 18
------INS VariableDeclarationFragment@@expectedExpiringRefreshToken=new ExpiringOAuth2RefreshToken("testToken",new Date()) @TO@ VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=new ExpiringOAuth2RefreshToken("testToken",new Date()); @AT@ 7786 @LENGTH@ 90
---------INS SimpleName@@expectedExpiringRefreshToken @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=new ExpiringOAuth2RefreshToken("testToken",new Date()) @AT@ 7786 @LENGTH@ 28
---------INS ClassInstanceCreation@@ExpiringOAuth2RefreshToken["testToken", new Date()] @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=new ExpiringOAuth2RefreshToken("testToken",new Date()) @AT@ 7817 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@ExpiringOAuth2RefreshToken["testToken", new Date()] @AT@ 7817 @LENGTH@ 3
------------INS SimpleType@@ExpiringOAuth2RefreshToken @TO@ ClassInstanceCreation@@ExpiringOAuth2RefreshToken["testToken", new Date()] @AT@ 7821 @LENGTH@ 26
------------INS StringLiteral@@"testToken" @TO@ ClassInstanceCreation@@ExpiringOAuth2RefreshToken["testToken", new Date()] @AT@ 7848 @LENGTH@ 11
------------INS ClassInstanceCreation@@Date[] @TO@ ClassInstanceCreation@@ExpiringOAuth2RefreshToken["testToken", new Date()] @AT@ 7865 @LENGTH@ 10
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 7865 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 7869 @LENGTH@ 4
---INS VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)); @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 7880 @LENGTH@ 165
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)); @AT@ 7880 @LENGTH@ 20
------INS VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)) @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)); @AT@ 7901 @LENGTH@ 143
---------INS SimpleName@@expectedAuthentication @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)) @AT@ 7901 @LENGTH@ 22
---------INS ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(new AuthorizationRequest("id",null,null,null),new TestAuthentication("test2",false)) @AT@ 7926 @LENGTH@ 118
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 7926 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 7930 @LENGTH@ 20
------------INS ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 7951 @LENGTH@ 52
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 7951 @LENGTH@ 3
---------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 7955 @LENGTH@ 20
---------------INS StringLiteral@@"id" @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 7976 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 7982 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 7992 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AuthorizationRequest["id", null, null, null] @AT@ 7998 @LENGTH@ 4
------------INS ClassInstanceCreation@@TestAuthentication["test2", false] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("id",null,null,null), new TestAuthentication("test2",false)] @AT@ 8005 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 8005 @LENGTH@ 3
---------------INS SimpleType@@TestAuthentication @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 8009 @LENGTH@ 18
---------------INS StringLiteral@@"test2" @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 8028 @LENGTH@ 7
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 8037 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:getTokenStore().storeRefreshToken(expectedExpiringRefreshToken,expectedAuthentication) @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 8048 @LENGTH@ 88
------INS MethodInvocation@@getTokenStore().storeRefreshToken(expectedExpiringRefreshToken,expectedAuthentication) @TO@ ExpressionStatement@@MethodInvocation:getTokenStore().storeRefreshToken(expectedExpiringRefreshToken,expectedAuthentication) @AT@ 8048 @LENGTH@ 87
---------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().storeRefreshToken(expectedExpiringRefreshToken,expectedAuthentication) @AT@ 8048 @LENGTH@ 15
---------INS SimpleName@@MethodName:storeRefreshToken:[expectedExpiringRefreshToken, expectedAuthentication] @TO@ MethodInvocation@@getTokenStore().storeRefreshToken(expectedExpiringRefreshToken,expectedAuthentication) @AT@ 8064 @LENGTH@ 71
------------INS SimpleName@@expectedExpiringRefreshToken @TO@ SimpleName@@MethodName:storeRefreshToken:[expectedExpiringRefreshToken, expectedAuthentication] @AT@ 8082 @LENGTH@ 28
------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:storeRefreshToken:[expectedExpiringRefreshToken, expectedAuthentication] @AT@ 8112 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:getTokenStore().removeRefreshToken(expectedExpiringRefreshToken) @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 8139 @LENGTH@ 65
------INS MethodInvocation@@getTokenStore().removeRefreshToken(expectedExpiringRefreshToken) @TO@ ExpressionStatement@@MethodInvocation:getTokenStore().removeRefreshToken(expectedExpiringRefreshToken) @AT@ 8139 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().removeRefreshToken(expectedExpiringRefreshToken) @AT@ 8139 @LENGTH@ 15
---------INS SimpleName@@MethodName:removeRefreshToken:[expectedExpiringRefreshToken] @TO@ MethodInvocation@@getTokenStore().removeRefreshToken(expectedExpiringRefreshToken) @AT@ 8155 @LENGTH@ 48
------------INS SimpleName@@expectedExpiringRefreshToken @TO@ SimpleName@@MethodName:removeRefreshToken:[expectedExpiringRefreshToken] @AT@ 8174 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readRefreshToken("testToken")) @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRefreshToken,  @AT@ 8210 @LENGTH@ 58
------INS MethodInvocation@@assertNull(getTokenStore().readRefreshToken("testToken")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readRefreshToken("testToken")) @AT@ 8210 @LENGTH@ 57
---------INS SimpleName@@MethodName:assertNull:[getTokenStore().readRefreshToken("testToken")] @TO@ MethodInvocation@@assertNull(getTokenStore().readRefreshToken("testToken")) @AT@ 8210 @LENGTH@ 57
------------INS MethodInvocation@@getTokenStore().readRefreshToken("testToken") @TO@ SimpleName@@MethodName:assertNull:[getTokenStore().readRefreshToken("testToken")] @AT@ 8221 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().readRefreshToken("testToken") @AT@ 8221 @LENGTH@ 15
---------------INS SimpleName@@MethodName:readRefreshToken:["testToken"] @TO@ MethodInvocation@@getTokenStore().readRefreshToken("testToken") @AT@ 8237 @LENGTH@ 29
------------------INS StringLiteral@@"testToken" @TO@ SimpleName@@MethodName:readRefreshToken:["testToken"] @AT@ 8254 @LENGTH@ 11


INS MethodDeclaration@@String, MethodName:ContextorHostNotFound, String Host, String Context,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS")]ModClusterMessages,  @AT@ 2676 @LENGTH@ 51
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:ContextorHostNotFound, String Host, String Context,  @AT@ 2669 @LENGTH@ 6
---INS SimpleName@@MethodName:ContextorHostNotFound @TO@ MethodDeclaration@@String, MethodName:ContextorHostNotFound, String Host, String Context,  @AT@ 2676 @LENGTH@ 21
---INS SingleVariableDeclaration@@String Host @TO@ MethodDeclaration@@String, MethodName:ContextorHostNotFound, String Host, String Context,  @AT@ 2698 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String Host @AT@ 2698 @LENGTH@ 6
------INS SimpleName@@Host @TO@ SingleVariableDeclaration@@String Host @AT@ 2705 @LENGTH@ 4
---INS SingleVariableDeclaration@@String Context @TO@ MethodDeclaration@@String, MethodName:ContextorHostNotFound, String Host, String Context,  @AT@ 2711 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String Context @AT@ 2711 @LENGTH@ 6
------INS SimpleName@@Context @TO@ SingleVariableDeclaration@@String Context @AT@ 2718 @LENGTH@ 7


UPD TypeDeclaration@@[public]DefaultCamelContext, ServiceSupport[ModelCamelContext, SuspendableService] @TO@ [@SuppressWarnings("deprecation"), public]DefaultCamelContext, ServiceSupport[ModelCamelContext, SuspendableService] @AT@ 5681 @LENGTH@ 91829
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]DefaultCamelContext, ServiceSupport[ModelCamelContext, SuspendableService] @AT@ 5681 @LENGTH@ 32


UPD IfStatement@@if (view instanceof EJBViewDescription) {  ejbsForViewName.add((EJBViewDescription)view);} @TO@ if (view instanceof EJBViewDescription) {  final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf();  if (viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT) {    continue;  }  ejbsForViewName.add((EJBViewDescription)view);} @AT@ 4946 @LENGTH@ 143
---UPD Block@@ThenBody:{  ejbsForViewName.add((EJBViewDescription)view);} @TO@ ThenBody:{  final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf();  if (viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT) {    continue;  }  ejbsForViewName.add((EJBViewDescription)view);} @AT@ 4986 @LENGTH@ 103
------INS VariableDeclarationStatement@@final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf(); @TO@ Block@@ThenBody:{  ejbsForViewName.add((EJBViewDescription)view);} @AT@ 5016 @LENGTH@ 72
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf(); @AT@ 5016 @LENGTH@ 5
---------INS SimpleType@@MethodIntf @TO@ VariableDeclarationStatement@@final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf(); @AT@ 5022 @LENGTH@ 10
---------INS VariableDeclarationFragment@@viewType=((EJBViewDescription)view).getMethodIntf() @TO@ VariableDeclarationStatement@@final MethodIntf viewType=((EJBViewDescription)view).getMethodIntf(); @AT@ 5033 @LENGTH@ 54
------------INS SimpleName@@viewType @TO@ VariableDeclarationFragment@@viewType=((EJBViewDescription)view).getMethodIntf() @AT@ 5033 @LENGTH@ 8
------------INS MethodInvocation@@((EJBViewDescription)view).getMethodIntf() @TO@ VariableDeclarationFragment@@viewType=((EJBViewDescription)view).getMethodIntf() @AT@ 5044 @LENGTH@ 43
---------------INS ParenthesizedExpression@@((EJBViewDescription)view) @TO@ MethodInvocation@@((EJBViewDescription)view).getMethodIntf() @AT@ 5044 @LENGTH@ 27
------------------INS CastExpression@@(EJBViewDescription)view @TO@ ParenthesizedExpression@@((EJBViewDescription)view) @AT@ 5045 @LENGTH@ 25
---------------------INS SimpleType@@EJBViewDescription @TO@ CastExpression@@(EJBViewDescription)view @AT@ 5046 @LENGTH@ 18
---------------------INS SimpleName@@view @TO@ CastExpression@@(EJBViewDescription)view @AT@ 5066 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getMethodIntf:[] @TO@ MethodInvocation@@((EJBViewDescription)view).getMethodIntf() @AT@ 5072 @LENGTH@ 15
------INS IfStatement@@if (viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT) {  continue;} @TO@ Block@@ThenBody:{  ejbsForViewName.add((EJBViewDescription)view);} @AT@ 5222 @LENGTH@ 161
---------INS InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT @TO@ IfStatement@@if (viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT) {  continue;} @AT@ 5226 @LENGTH@ 82
------------INS InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT @TO@ InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT @AT@ 5226 @LENGTH@ 39
---------------INS SimpleName@@viewType @TO@ InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT @AT@ 5226 @LENGTH@ 8
---------------INS Operator@@== @TO@ InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT @AT@ 5234 @LENGTH@ 2
---------------INS QualifiedName@@MethodIntf.SERVICE_ENDPOINT @TO@ InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT @AT@ 5238 @LENGTH@ 27
------------------INS SimpleName@@MethodIntf @TO@ QualifiedName@@MethodIntf.SERVICE_ENDPOINT @AT@ 5238 @LENGTH@ 10
------------------INS SimpleName@@SERVICE_ENDPOINT @TO@ QualifiedName@@MethodIntf.SERVICE_ENDPOINT @AT@ 5249 @LENGTH@ 16
------------INS Operator@@|| @TO@ InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT @AT@ 5265 @LENGTH@ 2
------------INS InfixExpression@@viewType == MethodIntf.MESSAGE_ENDPOINT @TO@ InfixExpression@@viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT @AT@ 5269 @LENGTH@ 39
---------------INS SimpleName@@viewType @TO@ InfixExpression@@viewType == MethodIntf.MESSAGE_ENDPOINT @AT@ 5269 @LENGTH@ 8
---------------INS Operator@@== @TO@ InfixExpression@@viewType == MethodIntf.MESSAGE_ENDPOINT @AT@ 5277 @LENGTH@ 2
---------------INS QualifiedName@@MethodIntf.MESSAGE_ENDPOINT @TO@ InfixExpression@@viewType == MethodIntf.MESSAGE_ENDPOINT @AT@ 5281 @LENGTH@ 27
------------------INS SimpleName@@MethodIntf @TO@ QualifiedName@@MethodIntf.MESSAGE_ENDPOINT @AT@ 5281 @LENGTH@ 10
------------------INS SimpleName@@MESSAGE_ENDPOINT @TO@ QualifiedName@@MethodIntf.MESSAGE_ENDPOINT @AT@ 5292 @LENGTH@ 16
---------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (viewType == MethodIntf.SERVICE_ENDPOINT || viewType == MethodIntf.MESSAGE_ENDPOINT) {  continue;} @AT@ 5310 @LENGTH@ 73
------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 5344 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, String, [PREFERRED_NODE="node-udp-1"] @TO@ public, static, final, String, [PREFERRED_NODE=NODE_2] @AT@ 2068 @LENGTH@ 57
---UPD VariableDeclarationFragment@@PREFERRED_NODE="node-udp-1" @TO@ PREFERRED_NODE=NODE_2 @AT@ 2095 @LENGTH@ 29
------DEL StringLiteral@@"node-udp-1" @AT@ 2112 @LENGTH@ 12
------INS SimpleName@@NODE_2 @TO@ VariableDeclarationFragment@@PREFERRED_NODE="node-udp-1" @AT@ 2183 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @TO@ public, void, MethodName:tearDown, Exception,  @AT@ 1424 @LENGTH@ 107
---UPD Modifier@@protected @TO@ public @AT@ 1424 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.tearDown() @AT@ 1508 @LENGTH@ 17
------DEL SuperMethodInvocation@@super.tearDown() @AT@ 1508 @LENGTH@ 16
---------DEL SimpleName@@MethodName:tearDown:[] @AT@ 1514 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:assertTrue(strNames.contains("validate-address")) @AT@ 5363 @LENGTH@ 50
---DEL MethodInvocation@@assertTrue(strNames.contains("validate-address")) @AT@ 5363 @LENGTH@ 49
------DEL SimpleName@@MethodName:assertTrue:[strNames.contains("validate-address")] @AT@ 5363 @LENGTH@ 49
---------DEL MethodInvocation@@strNames.contains("validate-address") @AT@ 5374 @LENGTH@ 37
------------DEL SimpleName@@Name:strNames @AT@ 5374 @LENGTH@ 8
------------DEL SimpleName@@MethodName:contains:["validate-address"] @AT@ 5383 @LENGTH@ 28
---------------DEL StringLiteral@@"validate-address" @AT@ 5392 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:newControllers.add(InitialContextFactoryService.addService(target,verificationHandler)) @TO@ MethodInvocation:newControllers.add(NamingSubsystemOSGiService.addService(target,InitialContext.class,InitialContext.class,verificationHandler)) @AT@ 5617 @LENGTH@ 89
---UPD MethodInvocation@@newControllers.add(InitialContextFactoryService.addService(target,verificationHandler)) @TO@ newControllers.add(NamingSubsystemOSGiService.addService(target,InitialContext.class,InitialContext.class,verificationHandler)) @AT@ 5617 @LENGTH@ 88
------UPD SimpleName@@MethodName:add:[InitialContextFactoryService.addService(target,verificationHandler)] @TO@ MethodName:add:[NamingSubsystemOSGiService.addService(target,InitialContext.class,InitialContext.class,verificationHandler)] @AT@ 5632 @LENGTH@ 73
---------UPD MethodInvocation@@InitialContextFactoryService.addService(target,verificationHandler) @TO@ NamingSubsystemOSGiService.addService(target,InitialContext.class,InitialContext.class,verificationHandler) @AT@ 5636 @LENGTH@ 68
------------UPD SimpleName@@Name:InitialContextFactoryService @TO@ Name:NamingSubsystemOSGiService @AT@ 5636 @LENGTH@ 28
------------UPD SimpleName@@MethodName:addService:[target, verificationHandler] @TO@ MethodName:addService:[target, InitialContext.class, InitialContext.class, verificationHandler] @AT@ 5665 @LENGTH@ 39
---------------INS TypeLiteral@@InitialContext.class @TO@ SimpleName@@MethodName:addService:[target, verificationHandler] @AT@ 5757 @LENGTH@ 20
---------------INS TypeLiteral@@InitialContext.class @TO@ SimpleName@@MethodName:addService:[target, verificationHandler] @AT@ 5779 @LENGTH@ 20


INS IfStatement@@if (context.isRuntimeOnlyRegistrationValid()) {  final EnumSet<OperationEntry.Flag> readOnly=EnumSet.of(OperationEntry.Flag.READ_ONLY);  stacks.registerOperationHandler(ModelKeys.EXPORT_NATIVE_CONFIGURATION,StackConfigOperationHandlers.EXPORT_NATIVE_CONFIGURATION,JGroupsSubsystemProviders.EXPORT_NATIVE_CONFIGURATION,readOnly);} @TO@ MethodDeclaration@@public, void, MethodName:initialize, ExtensionContext context,  @AT@ 4693 @LENGTH@ 365
---INS MethodInvocation@@context.isRuntimeOnlyRegistrationValid() @TO@ IfStatement@@if (context.isRuntimeOnlyRegistrationValid()) {  final EnumSet<OperationEntry.Flag> readOnly=EnumSet.of(OperationEntry.Flag.READ_ONLY);  stacks.registerOperationHandler(ModelKeys.EXPORT_NATIVE_CONFIGURATION,StackConfigOperationHandlers.EXPORT_NATIVE_CONFIGURATION,JGroupsSubsystemProviders.EXPORT_NATIVE_CONFIGURATION,readOnly);} @AT@ 4697 @LENGTH@ 40
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isRuntimeOnlyRegistrationValid() @AT@ 4697 @LENGTH@ 7
------INS SimpleName@@MethodName:isRuntimeOnlyRegistrationValid:[] @TO@ MethodInvocation@@context.isRuntimeOnlyRegistrationValid() @AT@ 4705 @LENGTH@ 32
---INS Block@@ThenBody:{  final EnumSet<OperationEntry.Flag> readOnly=EnumSet.of(OperationEntry.Flag.READ_ONLY);  stacks.registerOperationHandler(ModelKeys.EXPORT_NATIVE_CONFIGURATION,StackConfigOperationHandlers.EXPORT_NATIVE_CONFIGURATION,JGroupsSubsystemProviders.EXPORT_NATIVE_CONFIGURATION,readOnly);} @TO@ IfStatement@@if (context.isRuntimeOnlyRegistrationValid()) {  final EnumSet<OperationEntry.Flag> readOnly=EnumSet.of(OperationEntry.Flag.READ_ONLY);  stacks.registerOperationHandler(ModelKeys.EXPORT_NATIVE_CONFIGURATION,StackConfigOperationHandlers.EXPORT_NATIVE_CONFIGURATION,JGroupsSubsystemProviders.EXPORT_NATIVE_CONFIGURATION,readOnly);} @AT@ 4739 @LENGTH@ 319
------MOV VariableDeclarationStatement@@final EnumSet<OperationEntry.Flag> readOnly=EnumSet.of(OperationEntry.Flag.READ_ONLY); @TO@ Block@@ThenBody:{  final EnumSet<OperationEntry.Flag> readOnly=EnumSet.of(OperationEntry.Flag.READ_ONLY);  stacks.registerOperationHandler(ModelKeys.EXPORT_NATIVE_CONFIGURATION,StackConfigOperationHandlers.EXPORT_NATIVE_CONFIGURATION,JGroupsSubsystemProviders.EXPORT_NATIVE_CONFIGURATION,readOnly);} @AT@ 4653 @LENGTH@ 88
------MOV ExpressionStatement@@MethodInvocation:stacks.registerOperationHandler(ModelKeys.EXPORT_NATIVE_CONFIGURATION,StackConfigOperationHandlers.EXPORT_NATIVE_CONFIGURATION,JGroupsSubsystemProviders.EXPORT_NATIVE_CONFIGURATION,readOnly) @TO@ Block@@ThenBody:{  final EnumSet<OperationEntry.Flag> readOnly=EnumSet.of(OperationEntry.Flag.READ_ONLY);  stacks.registerOperationHandler(ModelKeys.EXPORT_NATIVE_CONFIGURATION,StackConfigOperationHandlers.EXPORT_NATIVE_CONFIGURATION,JGroupsSubsystemProviders.EXPORT_NATIVE_CONFIGURATION,readOnly);} @AT@ 4750 @LENGTH@ 194


UPD TypeDeclaration@@[public]InherritanceAnnSFSBTestCase, AnnSBTest @TO@ [@RunWith(Arquillian.class), @RunAsClient, public]InherritanceAnnSFSBTestCase, AnnSBTest @AT@ 1476 @LENGTH@ 1115
---INS SingleMemberAnnotation@@@RunWith(Arquillian.class) @TO@ TypeDeclaration@@[public]InherritanceAnnSFSBTestCase, AnnSBTest @AT@ 1613 @LENGTH@ 26
---INS MarkerAnnotation@@@RunAsClient @TO@ TypeDeclaration@@[public]InherritanceAnnSFSBTestCase, AnnSBTest @AT@ 1640 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @TO@ MethodInvocation:MGMT_OP_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @AT@ 6020 @LENGTH@ 84
---UPD MethodInvocation@@ROOT_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @TO@ MGMT_OP_LOGGER.debugf("Entered VERIFY stage; waiting for service container to settle") @AT@ 6020 @LENGTH@ 83
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 6020 @LENGTH@ 11


DEL MethodDeclaration@@public, static, void, MethodName:main, String[] args,  @AT@ 7339 @LENGTH@ 324
---DEL Modifier@@public @AT@ 7339 @LENGTH@ 6
---DEL Modifier@@static @AT@ 7346 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 7353 @LENGTH@ 4
---DEL SimpleName@@MethodName:main @AT@ 7358 @LENGTH@ 4
---DEL SingleVariableDeclaration@@String[] args @AT@ 7363 @LENGTH@ 13
------DEL ArrayType@@String[] @AT@ 7363 @LENGTH@ 8
---------DEL SimpleType@@String @AT@ 7363 @LENGTH@ 6
------DEL SimpleName@@args @AT@ 7372 @LENGTH@ 4
---DEL VariableDeclarationStatement@@String s="xmlns=\"urn:jboss:domain:transactions:1.1\""; @AT@ 7388 @LENGTH@ 57
------DEL SimpleType@@String @AT@ 7388 @LENGTH@ 6
------DEL VariableDeclarationFragment@@s="xmlns=\"urn:jboss:domain:transactions:1.1\"" @AT@ 7395 @LENGTH@ 49
---------DEL SimpleName@@s @AT@ 7395 @LENGTH@ 1
---------DEL StringLiteral@@"xmlns=\"urn:jboss:domain:transactions:1.1\"" @AT@ 7399 @LENGTH@ 45
---DEL ExpressionStatement@@MethodInvocation:System.out.println(Pattern.compile("xmlns=\"aaa\"").matcher("xmlns=\"aaa\"").matches()) @AT@ 7455 @LENGTH@ 88
------DEL MethodInvocation@@System.out.println(Pattern.compile("xmlns=\"aaa\"").matcher("xmlns=\"aaa\"").matches()) @AT@ 7455 @LENGTH@ 87
---------DEL QualifiedName@@Name:System.out @AT@ 7455 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[Pattern.compile("xmlns=\"aaa\"").matcher("xmlns=\"aaa\"").matches()] @AT@ 7466 @LENGTH@ 76
------------DEL MethodInvocation@@Pattern.compile("xmlns=\"aaa\"").matcher("xmlns=\"aaa\"").matches() @AT@ 7474 @LENGTH@ 67
---------------DEL MethodInvocation@@MethodName:matcher:["xmlns=\"aaa\""] @AT@ 7474 @LENGTH@ 57
------------------DEL StringLiteral@@"xmlns=\"aaa\"" @AT@ 7515 @LENGTH@ 15
---------------DEL MethodInvocation@@MethodName:compile:["xmlns=\"aaa\""] @AT@ 7474 @LENGTH@ 32
------------------DEL StringLiteral@@"xmlns=\"aaa\"" @AT@ 7490 @LENGTH@ 15
---------------DEL SimpleName@@Name:Pattern @AT@ 7474 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:matches:[] @AT@ 7532 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:System.out.println(Pattern.compile("xmlns=\".*\"").matcher("xmlns=\"xxyyy:xxx:yyy:xxx:1.1\"").matches()) @AT@ 7552 @LENGTH@ 105
------DEL MethodInvocation@@System.out.println(Pattern.compile("xmlns=\".*\"").matcher("xmlns=\"xxyyy:xxx:yyy:xxx:1.1\"").matches()) @AT@ 7552 @LENGTH@ 104
---------DEL QualifiedName@@Name:System.out @AT@ 7552 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[Pattern.compile("xmlns=\".*\"").matcher("xmlns=\"xxyyy:xxx:yyy:xxx:1.1\"").matches()] @AT@ 7563 @LENGTH@ 93
------------DEL MethodInvocation@@Pattern.compile("xmlns=\".*\"").matcher("xmlns=\"xxyyy:xxx:yyy:xxx:1.1\"").matches() @AT@ 7571 @LENGTH@ 84
---------------DEL MethodInvocation@@MethodName:matcher:["xmlns=\"xxyyy:xxx:yyy:xxx:1.1\""] @AT@ 7571 @LENGTH@ 74
------------------DEL StringLiteral@@"xmlns=\"xxyyy:xxx:yyy:xxx:1.1\"" @AT@ 7611 @LENGTH@ 33
---------------DEL MethodInvocation@@MethodName:compile:["xmlns=\".*\""] @AT@ 7571 @LENGTH@ 31
------------------DEL StringLiteral@@"xmlns=\".*\"" @AT@ 7587 @LENGTH@ 14
---------------DEL SimpleName@@Name:Pattern @AT@ 7571 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:matches:[] @AT@ 7646 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:holder.setPersistenceUnits(new ArrayList<PersistenceUnitMetadata>(flattened.values())) @AT@ 16204 @LENGTH@ 87
---DEL MethodInvocation@@holder.setPersistenceUnits(new ArrayList<PersistenceUnitMetadata>(flattened.values())) @AT@ 16204 @LENGTH@ 86
------DEL SimpleName@@Name:holder @AT@ 16204 @LENGTH@ 6
------DEL SimpleName@@MethodName:setPersistenceUnits:[new ArrayList<PersistenceUnitMetadata>(flattened.values())] @AT@ 16211 @LENGTH@ 79


UPD MethodDeclaration@@public, voidMethodName:CounterBean, CDIManagedBean bean,  @TO@ public, voidMethodName:CounterBean, DecoratorInterface bean,  @AT@ 1519 @LENGTH@ 82
---UPD SingleVariableDeclaration@@CDIManagedBean bean @TO@ DecoratorInterface bean @AT@ 1538 @LENGTH@ 19
------UPD SimpleType@@CDIManagedBean @TO@ DecoratorInterface @AT@ 1538 @LENGTH@ 14
---INS IfStatement@@if (!"Hello World".equals(bean.getMessage())) {  throw new RuntimeException("bean was not decorated");} @TO@ MethodDeclaration@@public, voidMethodName:CounterBean, CDIManagedBean bean,  @AT@ 1611 @LENGTH@ 122
------INS PrefixExpression@@!"Hello World".equals(bean.getMessage()) @TO@ IfStatement@@if (!"Hello World".equals(bean.getMessage())) {  throw new RuntimeException("bean was not decorated");} @AT@ 1614 @LENGTH@ 40
---------INS Operator@@! @TO@ PrefixExpression@@!"Hello World".equals(bean.getMessage()) @AT@ 1614 @LENGTH@ 1
---------INS MethodInvocation@@"Hello World".equals(bean.getMessage()) @TO@ PrefixExpression@@!"Hello World".equals(bean.getMessage()) @AT@ 1615 @LENGTH@ 39
------------INS StringLiteral@@"Hello World" @TO@ MethodInvocation@@"Hello World".equals(bean.getMessage()) @AT@ 1615 @LENGTH@ 13
------------INS SimpleName@@MethodName:equals:[bean.getMessage()] @TO@ MethodInvocation@@"Hello World".equals(bean.getMessage()) @AT@ 1629 @LENGTH@ 25
---------------INS MethodInvocation@@bean.getMessage() @TO@ SimpleName@@MethodName:equals:[bean.getMessage()] @AT@ 1636 @LENGTH@ 17
------------------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.getMessage() @AT@ 1636 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@bean.getMessage() @AT@ 1641 @LENGTH@ 12
------INS Block@@ThenBody:{  throw new RuntimeException("bean was not decorated");} @TO@ IfStatement@@if (!"Hello World".equals(bean.getMessage())) {  throw new RuntimeException("bean was not decorated");} @AT@ 1656 @LENGTH@ 77
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("bean was not decorated") @TO@ Block@@ThenBody:{  throw new RuntimeException("bean was not decorated");} @AT@ 1670 @LENGTH@ 53
------------INS ClassInstanceCreation@@RuntimeException["bean was not decorated"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("bean was not decorated") @AT@ 1676 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["bean was not decorated"] @AT@ 1676 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["bean was not decorated"] @AT@ 1680 @LENGTH@ 16
---------------INS StringLiteral@@"bean was not decorated" @TO@ ClassInstanceCreation@@RuntimeException["bean was not decorated"] @AT@ 1697 @LENGTH@ 24
---INS ExpressionStatement@@Assignment:this.bean=bean @TO@ MethodDeclaration@@public, voidMethodName:CounterBean, CDIManagedBean bean,  @AT@ 1742 @LENGTH@ 17
------INS Assignment@@this.bean=bean @TO@ ExpressionStatement@@Assignment:this.bean=bean @AT@ 1742 @LENGTH@ 16
---------INS FieldAccess@@this.bean @TO@ Assignment@@this.bean=bean @AT@ 1742 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.bean @AT@ 1742 @LENGTH@ 4
------------INS SimpleName@@bean @TO@ FieldAccess@@this.bean @AT@ 1747 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@this.bean=bean @AT@ 1751 @LENGTH@ 1
---------INS SimpleName@@bean @TO@ Assignment@@this.bean=bean @AT@ 1754 @LENGTH@ 4


UPD FieldDeclaration@@static, final, String, [PEOPLE_SEARCH_URL="https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?{&keywords}{&first-name}{&last-name}{&company-name}&{current-company}{&title}{&current-title}{&school-name}{&current-school}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}"] @TO@ static, final, String, [PEOPLE_SEARCH_URL="https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?{&keywords}{&first-name}{&last-name}{&company-name}{&current-company}{&title}{&current-title}{&school-name}{&current-school}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}"] @AT@ 3704 @LENGTH@ 423
---UPD VariableDeclarationFragment@@PEOPLE_SEARCH_URL="https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?{&keywords}{&first-name}{&last-name}{&company-name}&{current-company}{&title}{&current-title}{&school-name}{&current-school}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}" @TO@ PEOPLE_SEARCH_URL="https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?{&keywords}{&first-name}{&last-name}{&company-name}{&current-company}{&title}{&current-title}{&school-name}{&current-school}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}" @AT@ 3724 @LENGTH@ 402
------UPD StringLiteral@@"https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?{&keywords}{&first-name}{&last-name}{&company-name}&{current-company}{&title}{&current-title}{&school-name}{&current-school}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}" @TO@ "https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?{&keywords}{&first-name}{&last-name}{&company-name}{&current-company}{&title}{&current-title}{&school-name}{&current-school}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}" @AT@ 3744 @LENGTH@ 382


UPD MethodDeclaration@@protected, void, MethodName:doHandle, HttpServletRequest request, HttpServletResponse response, Exception authException, IOException, ServletException,  @TO@ protected, final, void, MethodName:doHandle, HttpServletRequest request, HttpServletResponse response, Exception authException, IOException, ServletException,  @AT@ 2212 @LENGTH@ 932
---INS Modifier@@final @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, HttpServletRequest request, HttpServletResponse response, Exception authException, IOException, ServletException,  @AT@ 2221 @LENGTH@ 5
---UPD TryStatement@@try {  ResponseEntity<OAuth2Exception> result=exceptionTranslator.translate(authException);  exceptionRenderer.handleHttpEntityResponse(result,new ServletWebRequest(request,response));  response.flushBuffer();} catch (ServletException e) {  if (handlerExceptionResolver.resolveException(request,response,this,e) == null) {    throw e;  }}catch (IOException e) {  throw e;}catch (RuntimeException e) {  throw e;}catch (Exception e) {  throw new RuntimeException(e);} @TO@ try {  ResponseEntity<OAuth2Exception> result=exceptionTranslator.translate(authException);  result=enhanceResponse(result,authException);  exceptionRenderer.handleHttpEntityResponse(result,new ServletWebRequest(request,response));  response.flushBuffer();} catch (ServletException e) {  if (handlerExceptionResolver.resolveException(request,response,this,e) == null) {    throw e;  }}catch (IOException e) {  throw e;}catch (RuntimeException e) {  throw e;}catch (Exception e) {  throw new RuntimeException(e);} @AT@ 2363 @LENGTH@ 778
------INS ExpressionStatement@@Assignment:result=enhanceResponse(result,authException) @TO@ TryStatement@@try {  ResponseEntity<OAuth2Exception> result=exceptionTranslator.translate(authException);  exceptionRenderer.handleHttpEntityResponse(result,new ServletWebRequest(request,response));  response.flushBuffer();} catch (ServletException e) {  if (handlerExceptionResolver.resolveException(request,response,this,e) == null) {    throw e;  }}catch (IOException e) {  throw e;}catch (RuntimeException e) {  throw e;}catch (Exception e) {  throw new RuntimeException(e);} @AT@ 2467 @LENGTH@ 48
---------INS Assignment@@result=enhanceResponse(result,authException) @TO@ ExpressionStatement@@Assignment:result=enhanceResponse(result,authException) @AT@ 2467 @LENGTH@ 47
------------INS SimpleName@@result @TO@ Assignment@@result=enhanceResponse(result,authException) @AT@ 2467 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@result=enhanceResponse(result,authException) @AT@ 2473 @LENGTH@ 1
------------INS MethodInvocation@@enhanceResponse(result,authException) @TO@ Assignment@@result=enhanceResponse(result,authException) @AT@ 2476 @LENGTH@ 38
---------------INS SimpleName@@MethodName:enhanceResponse:[result, authException] @TO@ MethodInvocation@@enhanceResponse(result,authException) @AT@ 2476 @LENGTH@ 38
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:enhanceResponse:[result, authException] @AT@ 2492 @LENGTH@ 6
------------------INS SimpleName@@authException @TO@ SimpleName@@MethodName:enhanceResponse:[result, authException] @AT@ 2500 @LENGTH@ 13


INS MethodDeclaration@@public, boolean, MethodName:isEntity,  @TO@ TypeDeclaration@@[public]EntityBeanComponentDescription, EJBComponentDescription @AT@ 10199 @LENGTH@ 54
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 10199 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 10206 @LENGTH@ 7
---INS SimpleName@@MethodName:isEntity @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 10214 @LENGTH@ 8
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:isEntity,  @AT@ 10235 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 10242 @LENGTH@ 4


UPD MethodDeclaration@@private, Object[], MethodName:getParams, CxfEndpoint endpoint, Exchange exchange, InvalidPayloadException,  @TO@ private, Object[], MethodName:getParams, CxfEndpoint endpoint, Exchange exchange, org.apache.camel.InvalidPayloadException,  @AT@ 11969 @LENGTH@ 2051
---UPD SimpleType@@InvalidPayloadException @TO@ org.apache.camel.InvalidPayloadException @AT@ 12044 @LENGTH@ 23


UPD MethodDeclaration@@private, void, MethodName:flushTestUsers,  @TO@ protected, void, MethodName:flushTestUsers,  @AT@ 19791 @LENGTH@ 549
---UPD Modifier@@private @TO@ protected @AT@ 19791 @LENGTH@ 7


UPD TypeDeclaration@@[public]SystemPropertyRemoveHandler, AbstractRemoveStepHandler[DescriptionProvider] @TO@ [public]SystemPropertyRemoveHandler, [OperationStepHandler, DescriptionProvider] @AT@ 1931 @LENGTH@ 2998
---UPD SimpleType@@AbstractRemoveStepHandler @TO@ OperationStepHandler @AT@ 1980 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2047 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2047 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2055 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2069 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2085 @LENGTH@ 23


INS MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]RestEasyIntegrationTestCase,  @AT@ 4995 @LENGTH@ 353
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 4995 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5002 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5009 @LENGTH@ 6
---INS SimpleName@@MethodName:formatPossibleIpv6Address @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5016 @LENGTH@ 25
---INS SingleVariableDeclaration@@String address @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5042 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String address @AT@ 5042 @LENGTH@ 6
------INS SimpleName@@address @TO@ SingleVariableDeclaration@@String address @AT@ 5049 @LENGTH@ 7
---INS IfStatement@@if (address == null) {  return address;} @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5068 @LENGTH@ 60
------INS InfixExpression@@address == null @TO@ IfStatement@@if (address == null) {  return address;} @AT@ 5072 @LENGTH@ 15
---------INS SimpleName@@address @TO@ InfixExpression@@address == null @AT@ 5072 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@address == null @AT@ 5079 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@address == null @AT@ 5083 @LENGTH@ 4
------INS Block@@ThenBody:{  return address;} @TO@ IfStatement@@if (address == null) {  return address;} @AT@ 5089 @LENGTH@ 39
---------INS ReturnStatement@@SimpleName:address @TO@ Block@@ThenBody:{  return address;} @AT@ 5103 @LENGTH@ 15
------------INS SimpleName@@address @TO@ ReturnStatement@@SimpleName:address @AT@ 5110 @LENGTH@ 7
---INS IfStatement@@if (!address.contains(":")) {  return address;} @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5137 @LENGTH@ 67
------INS PrefixExpression@@!address.contains(":") @TO@ IfStatement@@if (!address.contains(":")) {  return address;} @AT@ 5141 @LENGTH@ 22
---------INS Operator@@! @TO@ PrefixExpression@@!address.contains(":") @AT@ 5141 @LENGTH@ 1
---------INS MethodInvocation@@address.contains(":") @TO@ PrefixExpression@@!address.contains(":") @AT@ 5142 @LENGTH@ 21
------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.contains(":") @AT@ 5142 @LENGTH@ 7
------------INS SimpleName@@MethodName:contains:[":"] @TO@ MethodInvocation@@address.contains(":") @AT@ 5150 @LENGTH@ 13
---------------INS StringLiteral@@":" @TO@ SimpleName@@MethodName:contains:[":"] @AT@ 5159 @LENGTH@ 3
------INS Block@@ThenBody:{  return address;} @TO@ IfStatement@@if (!address.contains(":")) {  return address;} @AT@ 5165 @LENGTH@ 39
---------INS ReturnStatement@@SimpleName:address @TO@ Block@@ThenBody:{  return address;} @AT@ 5179 @LENGTH@ 15
------------INS SimpleName@@address @TO@ ReturnStatement@@SimpleName:address @AT@ 5186 @LENGTH@ 7
---INS IfStatement@@if (address.startsWith("[") && address.endsWith("]")) {  return address;} @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5213 @LENGTH@ 93
------INS InfixExpression@@address.startsWith("[") && address.endsWith("]") @TO@ IfStatement@@if (address.startsWith("[") && address.endsWith("]")) {  return address;} @AT@ 5217 @LENGTH@ 48
---------INS MethodInvocation@@address.startsWith("[") @TO@ InfixExpression@@address.startsWith("[") && address.endsWith("]") @AT@ 5217 @LENGTH@ 23
------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.startsWith("[") @AT@ 5217 @LENGTH@ 7
------------INS SimpleName@@MethodName:startsWith:["["] @TO@ MethodInvocation@@address.startsWith("[") @AT@ 5225 @LENGTH@ 15
---------------INS StringLiteral@@"[" @TO@ SimpleName@@MethodName:startsWith:["["] @AT@ 5236 @LENGTH@ 3
---------INS Operator@@&& @TO@ InfixExpression@@address.startsWith("[") && address.endsWith("]") @AT@ 5240 @LENGTH@ 2
---------INS MethodInvocation@@address.endsWith("]") @TO@ InfixExpression@@address.startsWith("[") && address.endsWith("]") @AT@ 5244 @LENGTH@ 21
------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.endsWith("]") @AT@ 5244 @LENGTH@ 7
------------INS SimpleName@@MethodName:endsWith:["]"] @TO@ MethodInvocation@@address.endsWith("]") @AT@ 5252 @LENGTH@ 13
---------------INS StringLiteral@@"]" @TO@ SimpleName@@MethodName:endsWith:["]"] @AT@ 5261 @LENGTH@ 3
------INS Block@@ThenBody:{  return address;} @TO@ IfStatement@@if (address.startsWith("[") && address.endsWith("]")) {  return address;} @AT@ 5267 @LENGTH@ 39
---------INS ReturnStatement@@SimpleName:address @TO@ Block@@ThenBody:{  return address;} @AT@ 5281 @LENGTH@ 15
------------INS SimpleName@@address @TO@ ReturnStatement@@SimpleName:address @AT@ 5288 @LENGTH@ 7
---INS ReturnStatement@@InfixExpression:"[" + address + "]" @TO@ MethodDeclaration@@public, static, String, MethodName:formatPossibleIpv6Address, String address,  @AT@ 5315 @LENGTH@ 27
------INS InfixExpression@@"[" + address + "]" @TO@ ReturnStatement@@InfixExpression:"[" + address + "]" @AT@ 5322 @LENGTH@ 19
---------INS StringLiteral@@"[" @TO@ InfixExpression@@"[" + address + "]" @AT@ 5322 @LENGTH@ 3
---------INS Operator@@+ @TO@ InfixExpression@@"[" + address + "]" @AT@ 5325 @LENGTH@ 1
---------INS SimpleName@@address @TO@ InfixExpression@@"[" + address + "]" @AT@ 5328 @LENGTH@ 7
---------INS StringLiteral@@"]" @TO@ InfixExpression@@"[" + address + "]" @AT@ 5338 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3373 @LENGTH@ 367
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 3432 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3432 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3438 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3445 @LENGTH@ 11


UPD VariableDeclarationStatement@@TraceHandlerTestHandler handler=(TraceHandlerTestHandler)tracer.getTraceHandler(); @TO@ TraceHandlerTestHandler handler=(TraceHandlerTestHandler)tracer.getTraceHandlers().get(0); @AT@ 1316 @LENGTH@ 85
---UPD VariableDeclarationFragment@@handler=(TraceHandlerTestHandler)tracer.getTraceHandler() @TO@ handler=(TraceHandlerTestHandler)tracer.getTraceHandlers().get(0) @AT@ 1340 @LENGTH@ 60
------UPD CastExpression@@(TraceHandlerTestHandler)tracer.getTraceHandler() @TO@ (TraceHandlerTestHandler)tracer.getTraceHandlers().get(0) @AT@ 1350 @LENGTH@ 50
---------UPD MethodInvocation@@tracer.getTraceHandler() @TO@ tracer.getTraceHandlers().get(0) @AT@ 1376 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getTraceHandlers:[] @TO@ MethodInvocation@@tracer.getTraceHandler() @AT@ 1376 @LENGTH@ 25
------------UPD SimpleName@@MethodName:getTraceHandler:[] @TO@ MethodName:get:[0] @AT@ 1383 @LENGTH@ 17
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getTraceHandler:[] @AT@ 1406 @LENGTH@ 1


INS IfStatement@@if (view != null) {  Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class);  if (viewType != null) {    final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);    if (!marker.isFirstInvocation()) {      throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();    }  }} @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, InterceptorContext context, Exception,  @AT@ 2740 @LENGTH@ 557
---INS InfixExpression@@view != null @TO@ IfStatement@@if (view != null) {  Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class);  if (viewType != null) {    final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);    if (!marker.isFirstInvocation()) {      throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();    }  }} @AT@ 2744 @LENGTH@ 12
------INS SimpleName@@view @TO@ InfixExpression@@view != null @AT@ 2744 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@view != null @AT@ 2748 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@view != null @AT@ 2752 @LENGTH@ 4
---INS Block@@ThenBody:{  Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class);  if (viewType != null) {    final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);    if (!marker.isFirstInvocation()) {      throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();    }  }} @TO@ IfStatement@@if (view != null) {  Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class);  if (viewType != null) {    final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);    if (!marker.isFirstInvocation()) {      throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();    }  }} @AT@ 2758 @LENGTH@ 539
------INS VariableDeclarationStatement@@Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class); @TO@ Block@@ThenBody:{  Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class);  if (viewType != null) {    final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);    if (!marker.isFirstInvocation()) {      throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();    }  }} @AT@ 2772 @LENGTH@ 66
---------INS SimpleType@@Ejb2xViewType @TO@ VariableDeclarationStatement@@Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class); @AT@ 2772 @LENGTH@ 13
---------INS VariableDeclarationFragment@@viewType=view.getPrivateData(Ejb2xViewType.class) @TO@ VariableDeclarationStatement@@Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class); @AT@ 2786 @LENGTH@ 51
------------INS SimpleName@@viewType @TO@ VariableDeclarationFragment@@viewType=view.getPrivateData(Ejb2xViewType.class) @AT@ 2786 @LENGTH@ 8
------------INS MethodInvocation@@view.getPrivateData(Ejb2xViewType.class) @TO@ VariableDeclarationFragment@@viewType=view.getPrivateData(Ejb2xViewType.class) @AT@ 2797 @LENGTH@ 40
---------------INS SimpleName@@Name:view @TO@ MethodInvocation@@view.getPrivateData(Ejb2xViewType.class) @AT@ 2797 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getPrivateData:[Ejb2xViewType.class] @TO@ MethodInvocation@@view.getPrivateData(Ejb2xViewType.class) @AT@ 2802 @LENGTH@ 35
------------------INS TypeLiteral@@Ejb2xViewType.class @TO@ SimpleName@@MethodName:getPrivateData:[Ejb2xViewType.class] @AT@ 2817 @LENGTH@ 19
------INS IfStatement@@if (viewType != null) {  final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);  if (!marker.isFirstInvocation()) {    throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();  }} @TO@ Block@@ThenBody:{  Ejb2xViewType viewType=view.getPrivateData(Ejb2xViewType.class);  if (viewType != null) {    final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);    if (!marker.isFirstInvocation()) {      throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();    }  }} @AT@ 2851 @LENGTH@ 436
---------INS InfixExpression@@viewType != null @TO@ IfStatement@@if (viewType != null) {  final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);  if (!marker.isFirstInvocation()) {    throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();  }} @AT@ 2855 @LENGTH@ 16
------------INS SimpleName@@viewType @TO@ InfixExpression@@viewType != null @AT@ 2855 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@viewType != null @AT@ 2863 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@viewType != null @AT@ 2867 @LENGTH@ 4
---------INS Block@@ThenBody:{  final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);  if (!marker.isFirstInvocation()) {    throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();  }} @TO@ IfStatement@@if (viewType != null) {  final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);  if (!marker.isFirstInvocation()) {    throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();  }} @AT@ 2873 @LENGTH@ 414
------------INS VariableDeclarationStatement@@final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class); @TO@ Block@@ThenBody:{  final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);  if (!marker.isFirstInvocation()) {    throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();  }} @AT@ 3014 @LENGTH@ 97
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class); @AT@ 3014 @LENGTH@ 5
---------------INS SimpleType@@StatefulTransactionMarker @TO@ VariableDeclarationStatement@@final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class); @AT@ 3020 @LENGTH@ 25
---------------INS VariableDeclarationFragment@@marker=context.getPrivateData(StatefulTransactionMarker.class) @TO@ VariableDeclarationStatement@@final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class); @AT@ 3046 @LENGTH@ 64
------------------INS SimpleName@@marker @TO@ VariableDeclarationFragment@@marker=context.getPrivateData(StatefulTransactionMarker.class) @AT@ 3046 @LENGTH@ 6
------------------INS MethodInvocation@@context.getPrivateData(StatefulTransactionMarker.class) @TO@ VariableDeclarationFragment@@marker=context.getPrivateData(StatefulTransactionMarker.class) @AT@ 3055 @LENGTH@ 55
---------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPrivateData(StatefulTransactionMarker.class) @AT@ 3055 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getPrivateData:[StatefulTransactionMarker.class] @TO@ MethodInvocation@@context.getPrivateData(StatefulTransactionMarker.class) @AT@ 3063 @LENGTH@ 47
------------------------INS TypeLiteral@@StatefulTransactionMarker.class @TO@ SimpleName@@MethodName:getPrivateData:[StatefulTransactionMarker.class] @AT@ 3078 @LENGTH@ 31
------------INS IfStatement@@if (!marker.isFirstInvocation()) {  throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();} @TO@ Block@@ThenBody:{  final StatefulTransactionMarker marker=context.getPrivateData(StatefulTransactionMarker.class);  if (!marker.isFirstInvocation()) {    throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();  }} @AT@ 3128 @LENGTH@ 145
---------------INS PrefixExpression@@!marker.isFirstInvocation() @TO@ IfStatement@@if (!marker.isFirstInvocation()) {  throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();} @AT@ 3131 @LENGTH@ 27
------------------INS Operator@@! @TO@ PrefixExpression@@!marker.isFirstInvocation() @AT@ 3131 @LENGTH@ 1
------------------INS MethodInvocation@@marker.isFirstInvocation() @TO@ PrefixExpression@@!marker.isFirstInvocation() @AT@ 3132 @LENGTH@ 26
---------------------INS SimpleName@@Name:marker @TO@ MethodInvocation@@marker.isFirstInvocation() @AT@ 3132 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:isFirstInvocation:[] @TO@ MethodInvocation@@marker.isFirstInvocation() @AT@ 3139 @LENGTH@ 19
---------------INS Block@@ThenBody:{  throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();} @TO@ IfStatement@@if (!marker.isFirstInvocation()) {  throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();} @AT@ 3160 @LENGTH@ 113
------------------INS ThrowStatement@@MethodInvocation:EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction() @TO@ Block@@ThenBody:{  throw EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction();} @AT@ 3182 @LENGTH@ 73
---------------------INS MethodInvocation@@EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction() @TO@ ThrowStatement@@MethodInvocation:EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction() @AT@ 3188 @LENGTH@ 66
------------------------INS QualifiedName@@Name:EjbMessages.MESSAGES @TO@ MethodInvocation@@EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction() @AT@ 3188 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:cannotRemoveWhileParticipatingInTransaction:[] @TO@ MethodInvocation@@EjbMessages.MESSAGES.cannotRemoveWhileParticipatingInTransaction() @AT@ 3209 @LENGTH@ 45


UPD ReturnStatement@@CastExpression:(SubsetConfiguration)new MapConfiguration(new HashMap()).subset("test") @TO@ CastExpression:(SubsetConfiguration)new MapConfiguration(new HashMap<String,Object>()).subset("test") @AT@ 1309 @LENGTH@ 79
---UPD CastExpression@@(SubsetConfiguration)new MapConfiguration(new HashMap()).subset("test") @TO@ (SubsetConfiguration)new MapConfiguration(new HashMap<String,Object>()).subset("test") @AT@ 1316 @LENGTH@ 71
------UPD MethodInvocation@@new MapConfiguration(new HashMap()).subset("test") @TO@ new MapConfiguration(new HashMap<String,Object>()).subset("test") @AT@ 1337 @LENGTH@ 50
---------UPD ClassInstanceCreation@@MapConfiguration[new HashMap()] @TO@ MapConfiguration[new HashMap<String,Object>()] @AT@ 1337 @LENGTH@ 35
------------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,Object>[] @AT@ 1358 @LENGTH@ 13
---------------DEL SimpleType@@HashMap @AT@ 1362 @LENGTH@ 7
---------------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1376 @LENGTH@ 23
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1376 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1384 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 1392 @LENGTH@ 6


UPD MethodDeclaration@@Object, MethodName:remove, K key,  @TO@ Object, MethodName:remove, Object key,  @AT@ 6357 @LENGTH@ 14
---UPD SingleVariableDeclaration@@K key @TO@ Object key @AT@ 6364 @LENGTH@ 5
------UPD SimpleType@@K @TO@ Object @AT@ 6364 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:result=ctx.wasCancelCalled() ? "true" : "false" @TO@ Assignment:result+=ctx.wasCancelCalled() ? "true" : "false" @AT@ 2710 @LENGTH@ 50
---UPD Assignment@@result=ctx.wasCancelCalled() ? "true" : "false" @TO@ result+=ctx.wasCancelCalled() ? "true" : "false" @AT@ 2710 @LENGTH@ 49
------UPD Operator@@= @TO@ += @AT@ 2716 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:latch=new CountDownLatch(1) @TO@ Assignment:latch=new CountDownLatch(count) @AT@ 39505 @LENGTH@ 30
---UPD Assignment@@latch=new CountDownLatch(1) @TO@ latch=new CountDownLatch(count) @AT@ 39505 @LENGTH@ 29
------UPD ClassInstanceCreation@@CountDownLatch[1] @TO@ CountDownLatch[count] @AT@ 39513 @LENGTH@ 21
---------INS SimpleName@@count @TO@ ClassInstanceCreation@@CountDownLatch[1] @AT@ 39532 @LENGTH@ 5
---------DEL NumberLiteral@@1 @AT@ 39532 @LENGTH@ 1


UPD ExpressionStatement@@SuperMethodInvocation:DelayProcessorSupport.super.process(exchange,callback) @TO@ SuperMethodInvocation:DelayProcessorSupport.super.process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId());
    callback.done(false);
  }
}
) @AT@ 2364 @LENGTH@ 56
---UPD SuperMethodInvocation@@DelayProcessorSupport.super.process(exchange,callback) @TO@ DelayProcessorSupport.super.process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId());
    callback.done(false);
  }
}
) @AT@ 2364 @LENGTH@ 55
------UPD SimpleName@@MethodName:process:[exchange, callback] @TO@ MethodName:process:[exchange, new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId());
    callback.done(false);
  }
}
] @AT@ 2392 @LENGTH@ 7
------DEL SimpleName@@callback @AT@ 2410 @LENGTH@ 8
------INS ClassInstanceCreation@@AsyncCallback[] @TO@ SuperMethodInvocation@@DelayProcessorSupport.super.process(exchange,callback) @AT@ 2467 @LENGTH@ 570
---------INS New@@new @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 2467 @LENGTH@ 3
---------INS SimpleType@@AsyncCallback @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 2471 @LENGTH@ 13
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 2487 @LENGTH@ 550
------------INS MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2531 @LENGTH@ 492
---------------MOV ExpressionStatement@@MethodInvocation:callback.done(false) @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 2482 @LENGTH@ 21
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 2531 @LENGTH@ 6
---------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 2538 @LENGTH@ 4
---------------INS SimpleName@@MethodName:done @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 2543 @LENGTH@ 4
---------------INS SingleVariableDeclaration@@boolean doneSync @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 2548 @LENGTH@ 16
------------------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean doneSync @AT@ 2548 @LENGTH@ 7
------------------INS SimpleName@@doneSync @TO@ SingleVariableDeclaration@@boolean doneSync @AT@ 2556 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId()) @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 2588 @LENGTH@ 76
------------------INS MethodInvocation@@log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId()) @TO@ ExpressionStatement@@MethodInvocation:log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId()) @AT@ 2588 @LENGTH@ 75
---------------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId()) @AT@ 2588 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:trace:["Delayed task done for exchangeId: {}", exchange.getExchangeId()] @TO@ MethodInvocation@@log.trace("Delayed task done for exchangeId: {}",exchange.getExchangeId()) @AT@ 2592 @LENGTH@ 71
------------------------INS StringLiteral@@"Delayed task done for exchangeId: {}" @TO@ SimpleName@@MethodName:trace:["Delayed task done for exchangeId: {}", exchange.getExchangeId()] @AT@ 2598 @LENGTH@ 38
------------------------INS MethodInvocation@@exchange.getExchangeId() @TO@ SimpleName@@MethodName:trace:["Delayed task done for exchangeId: {}", exchange.getExchangeId()] @AT@ 2638 @LENGTH@ 24
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 2638 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@exchange.getExchangeId() @AT@ 2647 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("Super",remote1.getSuperEmployee().getName()) @TO@ MethodDeclaration@@public, void, MethodName:testPassivationMaxSize, Exception,  @AT@ 6908 @LENGTH@ 67
---INS MethodInvocation@@Assert.assertEquals("Super",remote1.getSuperEmployee().getName()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("Super",remote1.getSuperEmployee().getName()) @AT@ 6908 @LENGTH@ 66
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("Super",remote1.getSuperEmployee().getName()) @AT@ 6908 @LENGTH@ 6
------INS SimpleName@@MethodName:assertEquals:["Super", remote1.getSuperEmployee().getName()] @TO@ MethodInvocation@@Assert.assertEquals("Super",remote1.getSuperEmployee().getName()) @AT@ 6915 @LENGTH@ 59
---------INS StringLiteral@@"Super" @TO@ SimpleName@@MethodName:assertEquals:["Super", remote1.getSuperEmployee().getName()] @AT@ 6928 @LENGTH@ 7
---------INS MethodInvocation@@remote1.getSuperEmployee().getName() @TO@ SimpleName@@MethodName:assertEquals:["Super", remote1.getSuperEmployee().getName()] @AT@ 6937 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getSuperEmployee:[] @TO@ MethodInvocation@@remote1.getSuperEmployee().getName() @AT@ 6937 @LENGTH@ 26
------------INS SimpleName@@Name:remote1 @TO@ MethodInvocation@@remote1.getSuperEmployee().getName() @AT@ 6937 @LENGTH@ 7
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@remote1.getSuperEmployee().getName() @AT@ 6964 @LENGTH@ 9


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @TO@ MethodInvocation:ThreadsMessages.MESSAGES.unboundedQueueThreadPoolServiceNotFound(serviceName) @AT@ 4227 @LENGTH@ 98
---INS MethodInvocation@@ThreadsMessages.MESSAGES.unboundedQueueThreadPoolServiceNotFound(serviceName) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @AT@ 3483 @LENGTH@ 77
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unboundedQueueThreadPoolServiceNotFound(serviceName) @AT@ 3483 @LENGTH@ 24
------MOV SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.unboundedQueueThreadPoolServiceNotFound(serviceName) @AT@ 4278 @LENGTH@ 45
---------INS SimpleName@@serviceName @TO@ SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @AT@ 3548 @LENGTH@ 11
---------INS SimpleName@@serviceName @TO@ SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @AT@ 3548 @LENGTH@ 11
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("Service " + serviceName + " not found.")] @AT@ 4233 @LENGTH@ 91
------DEL New@@new @AT@ 4233 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 4237 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("Service " + serviceName + " not found.") @AT@ 4262 @LENGTH@ 61
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 4262 @LENGTH@ 15
------------DEL New@@new @AT@ 4262 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 4266 @LENGTH@ 9


UPD EnhancedForStatement@@for (Method method : getRepositoryInterface().getMethods()) {  if (!isCustomMethod(method) && !isBaseClassMethod(method)) {    result.add(method);  }} @TO@ for (Method method : getRepositoryInterface().getMethods()) {  method=ClassUtils.getMostSpecificMethod(method,getRepositoryInterface());  if (!isCustomMethod(method) && !isBaseClassMethod(method)) {    result.add(method);  }} @AT@ 4667 @LENGTH@ 158
---INS ExpressionStatement@@Assignment:method=ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @TO@ EnhancedForStatement@@for (Method method : getRepositoryInterface().getMethods()) {  if (!isCustomMethod(method) && !isBaseClassMethod(method)) {    result.add(method);  }} @AT@ 4776 @LENGTH@ 76
------INS Assignment@@method=ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @TO@ ExpressionStatement@@Assignment:method=ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @AT@ 4776 @LENGTH@ 75
---------INS SimpleName@@method @TO@ Assignment@@method=ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @AT@ 4776 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@method=ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @AT@ 4782 @LENGTH@ 1
---------INS MethodInvocation@@ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @TO@ Assignment@@method=ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @AT@ 4785 @LENGTH@ 66
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @AT@ 4785 @LENGTH@ 10
------------INS SimpleName@@MethodName:getMostSpecificMethod:[method, getRepositoryInterface()] @TO@ MethodInvocation@@ClassUtils.getMostSpecificMethod(method,getRepositoryInterface()) @AT@ 4796 @LENGTH@ 55
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:getMostSpecificMethod:[method, getRepositoryInterface()] @AT@ 4818 @LENGTH@ 6
---------------INS MethodInvocation@@MethodName:getRepositoryInterface:[] @TO@ SimpleName@@MethodName:getMostSpecificMethod:[method, getRepositoryInterface()] @AT@ 4826 @LENGTH@ 24


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @TO@ MethodInvocation:ThreadsMessages.MESSAGES.queuelessThreadPoolServiceNotFound(serviceName) @AT@ 4275 @LENGTH@ 98
---INS MethodInvocation@@ThreadsMessages.MESSAGES.queuelessThreadPoolServiceNotFound(serviceName) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @AT@ 3738 @LENGTH@ 72
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.queuelessThreadPoolServiceNotFound(serviceName) @AT@ 3738 @LENGTH@ 24
------MOV SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.queuelessThreadPoolServiceNotFound(serviceName) @AT@ 4326 @LENGTH@ 45
---------INS SimpleName@@serviceName @TO@ SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @AT@ 3798 @LENGTH@ 11
---------INS SimpleName@@serviceName @TO@ SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @AT@ 3798 @LENGTH@ 11
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("Service " + serviceName + " not found.")] @AT@ 4281 @LENGTH@ 91
------DEL New@@new @AT@ 4281 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 4285 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("Service " + serviceName + " not found.") @AT@ 4310 @LENGTH@ 61
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 4310 @LENGTH@ 15
------------DEL New@@new @AT@ 4310 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 4314 @LENGTH@ 9


DEL TryStatement@@try {  logger.debug("Received cluster removal notification for cluster " + groupMembershipNotifier.getGroupName());  this.sendClusterRemovedMessage(groupMembershipNotifier);} catch (IOException ioe) {  logger.warn("Could not send a cluster removal message for cluster: " + groupMembershipNotifier.getGroupName() + " to the client on channel "+ channel,ioe);} @AT@ 12728 @LENGTH@ 431
---DEL ExpressionStatement@@MethodInvocation:logger.debug("Received cluster removal notification for cluster " + groupMembershipNotifier.getGroupName()) @AT@ 12746 @LENGTH@ 108
------DEL MethodInvocation@@logger.debug("Received cluster removal notification for cluster " + groupMembershipNotifier.getGroupName()) @AT@ 12746 @LENGTH@ 107
---------DEL SimpleName@@Name:logger @AT@ 12746 @LENGTH@ 6
---------DEL SimpleName@@MethodName:debug:["Received cluster removal notification for cluster " + groupMembershipNotifier.getGroupName()] @AT@ 12753 @LENGTH@ 100
------------DEL InfixExpression@@"Received cluster removal notification for cluster " + groupMembershipNotifier.getGroupName() @AT@ 12759 @LENGTH@ 93
---------------DEL StringLiteral@@"Received cluster removal notification for cluster " @AT@ 12759 @LENGTH@ 52
---------------DEL Operator@@+ @AT@ 12811 @LENGTH@ 1
---------------DEL MethodInvocation@@groupMembershipNotifier.getGroupName() @AT@ 12814 @LENGTH@ 38
------------------DEL SimpleName@@Name:groupMembershipNotifier @AT@ 12814 @LENGTH@ 23
------------------DEL SimpleName@@MethodName:getGroupName:[] @AT@ 12838 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:this.sendClusterRemovedMessage(groupMembershipNotifier) @AT@ 12867 @LENGTH@ 56
------DEL MethodInvocation@@this.sendClusterRemovedMessage(groupMembershipNotifier) @AT@ 12867 @LENGTH@ 55
---------DEL ThisExpression@@this @AT@ 12867 @LENGTH@ 4
---------DEL SimpleName@@MethodName:sendClusterRemovedMessage:[groupMembershipNotifier] @AT@ 12872 @LENGTH@ 50
------------DEL SimpleName@@groupMembershipNotifier @AT@ 12898 @LENGTH@ 23
---DEL CatchClause@@catch (IOException ioe) {  logger.warn("Could not send a cluster removal message for cluster: " + groupMembershipNotifier.getGroupName() + " to the client on channel "+ channel,ioe);} @AT@ 12934 @LENGTH@ 225
------DEL SingleVariableDeclaration@@IOException ioe @AT@ 12941 @LENGTH@ 15
---------DEL SimpleType@@IOException @AT@ 12941 @LENGTH@ 11
---------DEL SimpleName@@ioe @AT@ 12953 @LENGTH@ 3
------DEL ExpressionStatement@@MethodInvocation:logger.warn("Could not send a cluster removal message for cluster: " + groupMembershipNotifier.getGroupName() + " to the client on channel "+ channel,ioe) @AT@ 12972 @LENGTH@ 177
---------DEL MethodInvocation@@logger.warn("Could not send a cluster removal message for cluster: " + groupMembershipNotifier.getGroupName() + " to the client on channel "+ channel,ioe) @AT@ 12972 @LENGTH@ 176
------------DEL SimpleName@@Name:logger @AT@ 12972 @LENGTH@ 6
------------DEL SimpleName@@MethodName:warn:["Could not send a cluster removal message for cluster: " + groupMembershipNotifier.getGroupName() + " to the client on channel "+ channel, ioe] @AT@ 12979 @LENGTH@ 169
---------------DEL InfixExpression@@"Could not send a cluster removal message for cluster: " + groupMembershipNotifier.getGroupName() + " to the client on channel "+ channel @AT@ 12984 @LENGTH@ 158
------------------DEL StringLiteral@@"Could not send a cluster removal message for cluster: " @AT@ 12984 @LENGTH@ 56
------------------DEL Operator@@+ @AT@ 13040 @LENGTH@ 1
------------------DEL MethodInvocation@@groupMembershipNotifier.getGroupName() @AT@ 13043 @LENGTH@ 38
---------------------DEL SimpleName@@Name:groupMembershipNotifier @AT@ 13043 @LENGTH@ 23
---------------------DEL SimpleName@@MethodName:getGroupName:[] @AT@ 13067 @LENGTH@ 14
------------------DEL StringLiteral@@" to the client on channel " @AT@ 13104 @LENGTH@ 28
------------------DEL SimpleName@@channel @AT@ 13135 @LENGTH@ 7
---------------DEL SimpleName@@ioe @AT@ 13144 @LENGTH@ 3


UPD SuperConstructorInvocation@@super(id,timerService,calendarTimeout.getFirstTimeout() == null ? null : calendarTimeout.getFirstTimeout().getTime(),0,info,persistent,primaryKey);
 @TO@ super(id,timerService,calendarTimeout.getFirstTimeout() == null ? null : calendarTimeout.getFirstTimeout().getTime(),0,info,persistent,primaryKey,TimerState.CREATED);
 @AT@ 4528 @LENGTH@ 170
---INS QualifiedName@@TimerState.CREATED @TO@ SuperConstructorInvocation@@super(id,timerService,calendarTimeout.getFirstTimeout() == null ? null : calendarTimeout.getFirstTimeout().getTime(),0,info,persistent,primaryKey);
 @AT@ 4698 @LENGTH@ 18
------INS SimpleName@@TimerState @TO@ QualifiedName@@TimerState.CREATED @AT@ 4698 @LENGTH@ 10
------INS SimpleName@@CREATED @TO@ QualifiedName@@TimerState.CREATED @AT@ 4709 @LENGTH@ 7


DEL IfStatement@@if (requirements == null) {  requirements=new FabricRequirements();} @AT@ 1175 @LENGTH@ 90
---DEL InfixExpression@@requirements == null @AT@ 1179 @LENGTH@ 20
------DEL SimpleName@@requirements @AT@ 1179 @LENGTH@ 12
------DEL Operator@@== @AT@ 1191 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1195 @LENGTH@ 4
---DEL Block@@ThenBody:{  requirements=new FabricRequirements();} @AT@ 1201 @LENGTH@ 64
------DEL ExpressionStatement@@Assignment:requirements=new FabricRequirements() @AT@ 1215 @LENGTH@ 40
---------DEL Assignment@@requirements=new FabricRequirements() @AT@ 1215 @LENGTH@ 39
------------DEL SimpleName@@requirements @AT@ 1215 @LENGTH@ 12
------------DEL Operator@@= @AT@ 1227 @LENGTH@ 1
------------DEL ClassInstanceCreation@@FabricRequirements[] @AT@ 1230 @LENGTH@ 24
---------------DEL New@@new @AT@ 1230 @LENGTH@ 3
---------------DEL SimpleType@@FabricRequirements @AT@ 1234 @LENGTH@ 18


MOV ExpressionStatement@@MethodInvocation:_events.add(false) @TO@ MethodDeclaration@@public, void, MethodName:end,  @AT@ 6593 @LENGTH@ 19


UPD MethodDeclaration@@OperationFailedException, MethodName:couldNotCreateURI, @Param ModelNode node,  @TO@ OperationFailedException, MethodName:couldNotCreateURI, String uri, String msg,  @AT@ 4529 @LENGTH@ 41
---UPD SingleVariableDeclaration@@@Param ModelNode node @TO@ String uri @AT@ 4547 @LENGTH@ 21
------UPD SimpleType@@ModelNode @TO@ String @AT@ 4554 @LENGTH@ 9
------UPD SimpleName@@node @TO@ uri @AT@ 4564 @LENGTH@ 4
---INS SingleVariableDeclaration@@String msg @TO@ MethodDeclaration@@OperationFailedException, MethodName:couldNotCreateURI, @Param ModelNode node,  @AT@ 4566 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String msg @AT@ 4566 @LENGTH@ 6
------INS SimpleName@@msg @TO@ SingleVariableDeclaration@@String msg @AT@ 4573 @LENGTH@ 3


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:DuplicateUserCheckState, final ConsoleWrapper theConsole, final StateValues stateValues,  @AT@ 1657 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1661 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1661 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1661 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1672 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1684 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1688 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1694 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 1708 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 1714 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1714 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1723 @LENGTH@ 20


UPD TryStatement@@try {  String line;  while ((line=br.readLine()) != null) {    String trimmed=line.trim();    if (trimmed.startsWith("#")) {      bw.append(line);      bw.newLine();    } else     if (trimmed.length() == 0) {      bw.newLine();    } else {      int equals=trimmed.indexOf('=');      if (equals > 0) {        String userName=trimmed.substring(0,equals);        if (toSave.containsKey(userName)) {          String escapedUserName=escapeString(userName,ESCAPE_ARRAY);          bw.append(escapedUserName + "=" + toSave.getProperty(userName));          bw.newLine();          toSave.remove(userName);        }      }    }  }  for (  Object currentKey : toSave.keySet()) {    String escapedUserName=escapeString((String)currentKey,ESCAPE_ARRAY);    bw.append(escapedUserName + "=" + toSave.getProperty((String)currentKey));    bw.newLine();  }  bw.newLine();}  finally {  safeClose(bw);  safeClose(br);  safeClose(fr);} @TO@ try {  String line;  while ((line=br.readLine()) != null) {    String trimmed=line.trim();    if (trimmed.startsWith("#")) {      bw.append(line);      bw.newLine();    } else     if (trimmed.length() == 0) {      bw.newLine();    } else {      int equals=trimmed.indexOf('=');      if (equals > 0) {        String userName=trimmed.substring(0,equals);        if (toSave.containsKey(userName)) {          String escapedUserName=escapeString(userName,ESCAPE_ARRAY);          bw.append(escapedUserName + "=" + toSave.getProperty(userName));          bw.newLine();          toSave.remove(userName);        }      }    }  }  for (  Object currentKey : toSave.keySet()) {    String escapedUserName=escapeString((String)currentKey,ESCAPE_ARRAY);    bw.append(escapedUserName + "=" + toSave.getProperty((String)currentKey));    bw.newLine();  }}  finally {  safeClose(bw);  safeClose(br);  safeClose(fr);} @AT@ 5601 @LENGTH@ 1429
---DEL ExpressionStatement@@MethodInvocation:bw.newLine() @AT@ 6906 @LENGTH@ 13
------DEL MethodInvocation@@bw.newLine() @AT@ 6906 @LENGTH@ 12
---------DEL SimpleName@@Name:bw @AT@ 6906 @LENGTH@ 2
---------DEL SimpleName@@MethodName:newLine:[] @AT@ 6909 @LENGTH@ 9


UPD TypeDeclaration@@[@Command(name="cloud-provider-list",scope="fabric",description="Registers a cloud provider to the registry."), public]CloudProviderList, FabricCommand @TO@ [@Command(name="cloud-provider-list",scope="fabric",description="Lists the cloud providers registered with the fabric."), public]CloudProviderList, FabricCommand @AT@ 1033 @LENGTH@ 2547
---UPD NormalAnnotation@@@Command(name="cloud-provider-list",scope="fabric",description="Registers a cloud provider to the registry.") @TO@ @Command(name="cloud-provider-list",scope="fabric",description="Lists the cloud providers registered with the fabric.") @AT@ 1033 @LENGTH@ 117


UPD ExpressionStatement@@MethodInvocation:jvmOptsBuilder.append("-server -Dcom.sun.management.jmxremote ").append(options.getJvmOpts()).append(" ").append(options.getZookeeperUrl() != null ? "-Dzookeeper.url=\"" + options.getZookeeperUrl() + "\"" : "") @TO@ MethodInvocation:jvmOptsBuilder.append("-server -Dcom.sun.management.jmxremote ").append(options.getZookeeperUrl() != null ? "-Dzookeeper.url=\"" + options.getZookeeperUrl() + "\"" : "") @AT@ 2479 @LENGTH@ 261
---UPD MethodInvocation@@jvmOptsBuilder.append("-server -Dcom.sun.management.jmxremote ").append(options.getJvmOpts()).append(" ").append(options.getZookeeperUrl() != null ? "-Dzookeeper.url=\"" + options.getZookeeperUrl() + "\"" : "") @TO@ jvmOptsBuilder.append("-server -Dcom.sun.management.jmxremote ").append(options.getZookeeperUrl() != null ? "-Dzookeeper.url=\"" + options.getZookeeperUrl() + "\"" : "") @AT@ 2479 @LENGTH@ 260
------DEL MethodInvocation@@MethodName:append:[" "] @AT@ 2479 @LENGTH@ 130
---------DEL StringLiteral@@" " @AT@ 2605 @LENGTH@ 3
------DEL MethodInvocation@@MethodName:append:[options.getJvmOpts()] @AT@ 2479 @LENGTH@ 118
---------DEL MethodInvocation@@options.getJvmOpts() @AT@ 2576 @LENGTH@ 20
------------DEL SimpleName@@Name:options @AT@ 2576 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getJvmOpts:[] @AT@ 2584 @LENGTH@ 12


UPD VariableDeclarationStatement@@List<ProcessorDefinition> outputs=route.getOutputs(); @TO@ List<ProcessorDefinition<?>> outputs=route.getOutputs(); @AT@ 4433 @LENGTH@ 55
---UPD ParameterizedType@@List<ProcessorDefinition> @TO@ List<ProcessorDefinition<?>> @AT@ 4433 @LENGTH@ 25
------INS ParameterizedType@@ProcessorDefinition<?> @TO@ ParameterizedType@@List<ProcessorDefinition> @AT@ 4438 @LENGTH@ 22
---------MOV SimpleType@@ProcessorDefinition @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 4438 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorDefinition<?> @AT@ 4458 @LENGTH@ 1


UPD VariableDeclarationStatement@@Integer num=exchange.getContext().getTypeConverter().convertTo(Integer.class,key); @TO@ Integer num=exchange.getContext().getTypeConverter().tryConvertTo(Integer.class,key); @AT@ 11336 @LENGTH@ 85
---UPD VariableDeclarationFragment@@num=exchange.getContext().getTypeConverter().convertTo(Integer.class,key) @TO@ num=exchange.getContext().getTypeConverter().tryConvertTo(Integer.class,key) @AT@ 11344 @LENGTH@ 76
------UPD MethodInvocation@@exchange.getContext().getTypeConverter().convertTo(Integer.class,key) @TO@ exchange.getContext().getTypeConverter().tryConvertTo(Integer.class,key) @AT@ 11350 @LENGTH@ 70
---------UPD SimpleName@@MethodName:convertTo:[Integer.class, key] @TO@ MethodName:tryConvertTo:[Integer.class, key] @AT@ 11391 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:ALIAS.addResourceAttributeDescription(resources,keyPrefix,container).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @TO@ MethodInvocation:ALIASES.addResourceAttributeDescription(resources,keyPrefix,container).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @AT@ 4779 @LENGTH@ 152
---UPD MethodInvocation@@ALIAS.addResourceAttributeDescription(resources,keyPrefix,container).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @TO@ ALIASES.addResourceAttributeDescription(resources,keyPrefix,container).get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING) @AT@ 4779 @LENGTH@ 151
------UPD SimpleName@@Name:ALIAS @TO@ Name:ALIASES @AT@ 4779 @LENGTH@ 5


UPD TryStatement@@try {  Object value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args);  if (value instanceof Enumeration) {    Enumeration enumeration=(Enumeration)value;    List result=new ArrayList();    while (enumeration.hasMoreElements()) {      result.add(enumeration.nextElement());    }    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else   if (value instanceof Collection) {    List result;    if (value instanceof List)     result=(List)value; else     result=new ArrayList((Collection)value);    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else {    return Collections.singleton(value != null ? factory.getEntityObject(value) : null);  }} catch (IllegalAccessException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Unable to access finder implementation: " + finderMethod.getName());}catch (IllegalArgumentException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Illegal arguments for finder " + "implementation: " + finderMethod.getName());}catch (InvocationTargetException e) {  Throwable ex=e.getTargetException();  if (ex instanceof FinderException) {    throw (FinderException)ex;  } else {    throw new FinderException("Errror invoking cutom finder " + finderMethod.getName() + ": "+ ex);  }} @TO@ try {  Object value;  final EntityBeanComponentInstance componentInstance=ctx.getComponent().getCache().get(ctx.getPrimaryKey());  try {    value=finderMethod.invoke(componentInstance,args);  }  finally {    ctx.getComponent().getCache().release(componentInstance,true);  }  if (value instanceof Enumeration) {    Enumeration enumeration=(Enumeration)value;    List result=new ArrayList();    while (enumeration.hasMoreElements()) {      result.add(enumeration.nextElement());    }    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else   if (value instanceof Collection) {    List result;    if (value instanceof List)     result=(List)value; else     result=new ArrayList((Collection)value);    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else {    return Collections.singleton(value != null ? factory.getEntityObject(value) : null);  }} catch (IllegalAccessException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Unable to access finder implementation: " + finderMethod.getName());}catch (IllegalArgumentException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Illegal arguments for finder " + "implementation: " + finderMethod.getName());}catch (InvocationTargetException e) {  Throwable ex=e.getTargetException();  if (ex instanceof FinderException) {    throw (FinderException)ex;  } else {    throw new FinderException("Errror invoking cutom finder " + finderMethod.getName() + ": "+ ex);  }} @AT@ 3633 @LENGTH@ 2266
---UPD VariableDeclarationStatement@@Object value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args); @TO@ final EntityBeanComponentInstance componentInstance=ctx.getComponent().getCache().get(ctx.getPrimaryKey()); @AT@ 3711 @LENGTH@ 97
------UPD SimpleType@@Object @TO@ EntityBeanComponentInstance @AT@ 3711 @LENGTH@ 6
------UPD VariableDeclarationFragment@@value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args) @TO@ componentInstance=ctx.getComponent().getCache().get(ctx.getPrimaryKey()) @AT@ 3718 @LENGTH@ 89
---------DEL SimpleName@@value @AT@ 3718 @LENGTH@ 5
---------DEL MethodInvocation@@finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args) @AT@ 3726 @LENGTH@ 81
------------DEL SimpleName@@Name:finderMethod @AT@ 3726 @LENGTH@ 12
------------DEL SimpleName@@MethodName:invoke:[ctx.getComponent().getCache().get(ctx.getPrimaryKey()), args] @AT@ 3739 @LENGTH@ 68
---------------DEL SimpleName@@args @AT@ 3802 @LENGTH@ 4
---------MOV MethodInvocation@@ctx.getComponent().getCache().get(ctx.getPrimaryKey()) @TO@ VariableDeclarationFragment@@value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args) @AT@ 3746 @LENGTH@ 54
---------INS SimpleName@@componentInstance @TO@ VariableDeclarationFragment@@value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args) @AT@ 3842 @LENGTH@ 17
------INS Modifier@@final @TO@ VariableDeclarationStatement@@Object value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args); @AT@ 3808 @LENGTH@ 5
---INS VariableDeclarationStatement@@Object value; @TO@ TryStatement@@try {  Object value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args);  if (value instanceof Enumeration) {    Enumeration enumeration=(Enumeration)value;    List result=new ArrayList();    while (enumeration.hasMoreElements()) {      result.add(enumeration.nextElement());    }    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else   if (value instanceof Collection) {    List result;    if (value instanceof List)     result=(List)value; else     result=new ArrayList((Collection)value);    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else {    return Collections.singleton(value != null ? factory.getEntityObject(value) : null);  }} catch (IllegalAccessException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Unable to access finder implementation: " + finderMethod.getName());}catch (IllegalArgumentException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Illegal arguments for finder " + "implementation: " + finderMethod.getName());}catch (InvocationTargetException e) {  Throwable ex=e.getTargetException();  if (ex instanceof FinderException) {    throw (FinderException)ex;  } else {    throw new FinderException("Errror invoking cutom finder " + finderMethod.getName() + ": "+ ex);  }} @AT@ 3782 @LENGTH@ 13
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value; @AT@ 3782 @LENGTH@ 6
------INS VariableDeclarationFragment@@value @TO@ VariableDeclarationStatement@@Object value; @AT@ 3789 @LENGTH@ 5
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value @AT@ 3789 @LENGTH@ 5
---INS TryStatement@@try {  value=finderMethod.invoke(componentInstance,args);}  finally {  ctx.getComponent().getCache().release(componentInstance,true);} @TO@ TryStatement@@try {  Object value=finderMethod.invoke(ctx.getComponent().getCache().get(ctx.getPrimaryKey()),args);  if (value instanceof Enumeration) {    Enumeration enumeration=(Enumeration)value;    List result=new ArrayList();    while (enumeration.hasMoreElements()) {      result.add(enumeration.nextElement());    }    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else   if (value instanceof Collection) {    List result;    if (value instanceof List)     result=(List)value; else     result=new ArrayList((Collection)value);    cacheResults(result);    return EntityProxyFactory.Util.getEntityCollection(factory,result);  } else {    return Collections.singleton(value != null ? factory.getEntityObject(value) : null);  }} catch (IllegalAccessException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Unable to access finder implementation: " + finderMethod.getName());}catch (IllegalArgumentException e) {  log.error("Error invoking custom finder " + finderMethod.getName(),e);  throw new FinderException("Illegal arguments for finder " + "implementation: " + finderMethod.getName());}catch (InvocationTargetException e) {  Throwable ex=e.getTargetException();  if (ex instanceof FinderException) {    throw (FinderException)ex;  } else {    throw new FinderException("Errror invoking cutom finder " + finderMethod.getName() + ": "+ ex);  }} @AT@ 3930 @LENGTH@ 193
------INS ExpressionStatement@@Assignment:value=finderMethod.invoke(componentInstance,args) @TO@ TryStatement@@try {  value=finderMethod.invoke(componentInstance,args);}  finally {  ctx.getComponent().getCache().release(componentInstance,true);} @AT@ 3952 @LENGTH@ 53
---------INS Assignment@@value=finderMethod.invoke(componentInstance,args) @TO@ ExpressionStatement@@Assignment:value=finderMethod.invoke(componentInstance,args) @AT@ 3952 @LENGTH@ 52
------------INS SimpleName@@value @TO@ Assignment@@value=finderMethod.invoke(componentInstance,args) @AT@ 3952 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@value=finderMethod.invoke(componentInstance,args) @AT@ 3957 @LENGTH@ 1
------------INS MethodInvocation@@finderMethod.invoke(componentInstance,args) @TO@ Assignment@@value=finderMethod.invoke(componentInstance,args) @AT@ 3960 @LENGTH@ 44
---------------INS SimpleName@@Name:finderMethod @TO@ MethodInvocation@@finderMethod.invoke(componentInstance,args) @AT@ 3960 @LENGTH@ 12
---------------INS SimpleName@@MethodName:invoke:[componentInstance, args] @TO@ MethodInvocation@@finderMethod.invoke(componentInstance,args) @AT@ 3973 @LENGTH@ 31
------------------INS SimpleName@@componentInstance @TO@ SimpleName@@MethodName:invoke:[componentInstance, args] @AT@ 3980 @LENGTH@ 17
------------------INS SimpleName@@args @TO@ SimpleName@@MethodName:invoke:[componentInstance, args] @AT@ 3999 @LENGTH@ 4
------INS Block@@FinallyBody:{  ctx.getComponent().getCache().release(componentInstance,true);} @TO@ TryStatement@@try {  value=finderMethod.invoke(componentInstance,args);}  finally {  ctx.getComponent().getCache().release(componentInstance,true);} @AT@ 4028 @LENGTH@ 95
---------INS ExpressionStatement@@MethodInvocation:ctx.getComponent().getCache().release(componentInstance,true) @TO@ Block@@FinallyBody:{  ctx.getComponent().getCache().release(componentInstance,true);} @AT@ 4046 @LENGTH@ 63
------------INS MethodInvocation@@ctx.getComponent().getCache().release(componentInstance,true) @TO@ ExpressionStatement@@MethodInvocation:ctx.getComponent().getCache().release(componentInstance,true) @AT@ 4046 @LENGTH@ 62
---------------INS MethodInvocation@@MethodName:getCache:[] @TO@ MethodInvocation@@ctx.getComponent().getCache().release(componentInstance,true) @AT@ 4046 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@ctx.getComponent().getCache().release(componentInstance,true) @AT@ 4046 @LENGTH@ 18
---------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getComponent().getCache().release(componentInstance,true) @AT@ 4046 @LENGTH@ 3
---------------INS SimpleName@@MethodName:release:[componentInstance, true] @TO@ MethodInvocation@@ctx.getComponent().getCache().release(componentInstance,true) @AT@ 4076 @LENGTH@ 32
------------------INS SimpleName@@componentInstance @TO@ SimpleName@@MethodName:release:[componentInstance, true] @AT@ 4084 @LENGTH@ 17
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:release:[componentInstance, true] @AT@ 4103 @LENGTH@ 4


UPD MethodDeclaration@@public, static, void, MethodName:createHostRegistry, final ManagementResourceRegistration root, final HostControllerConfigurationPersister configurationPersister, final HostControllerEnvironment environment, final HostRunningModeControl runningModeControl, final HostFileRepository localFileRepository, final LocalHostControllerInfoImpl hostControllerInfo, final ServerInventory serverInventory, final RemoteFileRepository remoteFileRepository, final ContentRepository contentRepository, final DomainController domainController, final UnregisteredHostChannelRegistry channelRegistry, final ExtensionRegistry extensionRegistry, final AbstractVaultReader vaultReader, final ControlledProcessState processState,  @TO@ public, static, void, MethodName:createHostRegistry, final ManagementResourceRegistration root, final HostControllerConfigurationPersister configurationPersister, final HostControllerEnvironment environment, final HostRunningModeControl runningModeControl, final HostFileRepository localFileRepository, final LocalHostControllerInfoImpl hostControllerInfo, final ServerInventory serverInventory, final HostFileRepository remoteFileRepository, final ContentRepository contentRepository, final DomainController domainController, final UnregisteredHostChannelRegistry channelRegistry, final ExtensionRegistry extensionRegistry, final AbstractVaultReader vaultReader, final ControlledProcessState processState,  @AT@ 12114 @LENGTH@ 18034
---UPD SingleVariableDeclaration@@final RemoteFileRepository remoteFileRepository @TO@ final HostFileRepository remoteFileRepository @AT@ 12663 @LENGTH@ 47
------UPD SimpleType@@RemoteFileRepository @TO@ HostFileRepository @AT@ 12669 @LENGTH@ 20


UPD IfStatement@@if (!tmp.exists() && !tmp.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(tmp);} @TO@ if (!tmp.exists() || !tmp.isDirectory()) {  throw MESSAGES.configDirectoryDoesNotExist(tmp);} @AT@ 13592 @LENGTH@ 113
---UPD InfixExpression@@!tmp.exists() && !tmp.isDirectory() @TO@ !tmp.exists() || !tmp.isDirectory() @AT@ 13596 @LENGTH@ 35
------UPD Operator@@&& @TO@ || @AT@ 13609 @LENGTH@ 2


UPD MethodDeclaration@@protected, Container, MethodName:createChildAgent, String name, InterruptedException,  @TO@ protected, Container, MethodName:createChildAgent, String name, Exception,  @AT@ 2556 @LENGTH@ 866
---UPD SimpleType@@InterruptedException @TO@ Exception @AT@ 2613 @LENGTH@ 20
---UPD VariableDeclarationStatement@@Container child=fabricService.createContainers(args)[0]; @TO@ CreateContainerMetadata[] metadata=fabricService.createContainers(args); @AT@ 3336 @LENGTH@ 58
------DEL SimpleType@@Container @AT@ 3336 @LENGTH@ 9
------UPD VariableDeclarationFragment@@child=fabricService.createContainers(args)[0] @TO@ metadata=fabricService.createContainers(args) @AT@ 3346 @LENGTH@ 47
---------UPD SimpleName@@child @TO@ metadata @AT@ 3346 @LENGTH@ 5
---------DEL ArrayAccess@@fabricService.createContainers(args)[0] @AT@ 3354 @LENGTH@ 39
------------DEL NumberLiteral@@0 @AT@ 3391 @LENGTH@ 1
---------MOV MethodInvocation@@fabricService.createContainers(args) @TO@ VariableDeclarationFragment@@child=fabricService.createContainers(args)[0] @AT@ 3354 @LENGTH@ 36
------INS ArrayType@@CreateContainerMetadata[] @TO@ VariableDeclarationStatement@@Container child=fabricService.createContainers(args)[0]; @AT@ 3383 @LENGTH@ 25
---------INS SimpleType@@CreateContainerMetadata @TO@ ArrayType@@CreateContainerMetadata[] @AT@ 3383 @LENGTH@ 23
---DEL ReturnStatement@@SimpleName:child @AT@ 3403 @LENGTH@ 13
------DEL SimpleName@@child @AT@ 3410 @LENGTH@ 5
---INS IfStatement@@if (metadata.length > 0) {  return metadata[0].getContainer();} @TO@ MethodDeclaration@@protected, Container, MethodName:createChildAgent, String name, InterruptedException,  @AT@ 3466 @LENGTH@ 83
------INS InfixExpression@@metadata.length > 0 @TO@ IfStatement@@if (metadata.length > 0) {  return metadata[0].getContainer();} @AT@ 3470 @LENGTH@ 19
---------INS QualifiedName@@metadata.length @TO@ InfixExpression@@metadata.length > 0 @AT@ 3470 @LENGTH@ 15
------------INS SimpleName@@metadata @TO@ QualifiedName@@metadata.length @AT@ 3470 @LENGTH@ 8
------------INS SimpleName@@length @TO@ QualifiedName@@metadata.length @AT@ 3479 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@metadata.length > 0 @AT@ 3485 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@metadata.length > 0 @AT@ 3488 @LENGTH@ 1
------INS Block@@ThenBody:{  return metadata[0].getContainer();} @TO@ IfStatement@@if (metadata.length > 0) {  return metadata[0].getContainer();} @AT@ 3491 @LENGTH@ 58
---------INS ReturnStatement@@MethodInvocation:metadata[0].getContainer() @TO@ Block@@ThenBody:{  return metadata[0].getContainer();} @AT@ 3505 @LENGTH@ 34
------------INS MethodInvocation@@metadata[0].getContainer() @TO@ ReturnStatement@@MethodInvocation:metadata[0].getContainer() @AT@ 3512 @LENGTH@ 26
---------------INS ArrayAccess@@metadata[0] @TO@ MethodInvocation@@metadata[0].getContainer() @AT@ 3512 @LENGTH@ 11
------------------INS SimpleName@@metadata @TO@ ArrayAccess@@metadata[0] @AT@ 3512 @LENGTH@ 8
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@metadata[0] @AT@ 3521 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getContainer:[] @TO@ MethodInvocation@@metadata[0].getContainer() @AT@ 3524 @LENGTH@ 14
---INS ThrowStatement@@ClassInstanceCreation:new Exception("Cohild container not created") @TO@ MethodDeclaration@@protected, Container, MethodName:createChildAgent, String name, InterruptedException,  @AT@ 3558 @LENGTH@ 52
------INS ClassInstanceCreation@@Exception["Cohild container not created"] @TO@ ThrowStatement@@ClassInstanceCreation:new Exception("Cohild container not created") @AT@ 3564 @LENGTH@ 45
---------INS New@@new @TO@ ClassInstanceCreation@@Exception["Cohild container not created"] @AT@ 3564 @LENGTH@ 3
---------INS SimpleType@@Exception @TO@ ClassInstanceCreation@@Exception["Cohild container not created"] @AT@ 3568 @LENGTH@ 9
---------INS StringLiteral@@"Cohild container not created" @TO@ ClassInstanceCreation@@Exception["Cohild container not created"] @AT@ 3578 @LENGTH@ 30


UPD ForStatement@@for (int i=pa.size() - 1; i > 0; i++) {  PathElement pe=pa.getElement(i);  if (ModelDescriptionConstants.SECURITY_REALM.equals(pe.getKey())) {    realmPA=pa.subAddress(0,i + 1);    break;  }} @TO@ for (int i=pa.size() - 1; i > 0; i--) {  PathElement pe=pa.getElement(i);  if (ModelDescriptionConstants.SECURITY_REALM.equals(pe.getKey())) {    realmPA=pa.subAddress(0,i + 1);    break;  }} @AT@ 2525 @LENGTH@ 266
---UPD PostfixExpression@@i++ @TO@ i-- @AT@ 2560 @LENGTH@ 3
------UPD Operator@@++ @TO@ -- @AT@ 2562 @LENGTH@ 2


UPD VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(url.openStream())); @TO@ BufferedReader reader=IOHelper.buffered(new InputStreamReader(url.openStream())); @AT@ 10183 @LENGTH@ 84
---UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(url.openStream())) @TO@ reader=IOHelper.buffered(new InputStreamReader(url.openStream())) @AT@ 10198 @LENGTH@ 68
------DEL ClassInstanceCreation@@BufferedReader[new InputStreamReader(url.openStream())] @AT@ 10207 @LENGTH@ 59
---------DEL New@@new @AT@ 10207 @LENGTH@ 3
---------DEL SimpleType@@BufferedReader @AT@ 10211 @LENGTH@ 14
------INS MethodInvocation@@IOHelper.buffered(new InputStreamReader(url.openStream())) @TO@ VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(url.openStream())) @AT@ 10224 @LENGTH@ 58
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new InputStreamReader(url.openStream())) @AT@ 10224 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[new InputStreamReader(url.openStream())] @TO@ MethodInvocation@@IOHelper.buffered(new InputStreamReader(url.openStream())) @AT@ 10233 @LENGTH@ 49
------------MOV ClassInstanceCreation@@InputStreamReader[url.openStream()] @TO@ SimpleName@@MethodName:buffered:[new InputStreamReader(url.openStream())] @AT@ 10226 @LENGTH@ 39


UPD EnhancedForStatement@@for (final FieldMetadata field : locatedFields) {  final CustomData customData=field.getCustomData();  final JavaType fieldType=field.getFieldType();  final String simpleTypeName=fieldType.getSimpleTypeName();  final String fieldName=field.getFieldName().getSymbolName();  final String fieldLabelId=fieldName + suffix1;  final BigDecimal minValue=ObjectUtils.max(getMinOrMaxValue(field,MIN),getMinOrMaxValue(field,DECIMAL_MIN));  final BigDecimal maxValue=ObjectUtils.min(getMinOrMaxValue(field,MAX),getMinOrMaxValue(field,DECIMAL_MAX));  final Integer sizeMinValue=getSizeMinOrMax(field,"min");  final BigDecimal sizeMaxValue=new BigDecimal(ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field)));  final boolean required=action != Action.VIEW && (!isNullable(field) || minValue != null || maxValue != null || sizeMinValue != null || sizeMaxValue != null);  final boolean isTextarea=sizeMinValue != null && sizeMinValue.intValue() > 30 || sizeMaxValue != null && sizeMaxValue.intValue() > 30 || customData.keySet().contains(CustomDataKeys.LOB_FIELD);  bodyBuilder.appendFormalLine("HtmlOutputText " + fieldLabelId + " = "+ getComponentCreation("HtmlOutputText"));  bodyBuilder.appendFormalLine(fieldLabelId + ".setId(\"" + fieldLabelId+ "\");");  bodyBuilder.appendFormalLine(fieldLabelId + ".setValue(\"" + field.getFieldName().getReadableSymbolName()+ ": "+ (required ? "* " : "  ")+ "\");");  bodyBuilder.appendFormalLine(getAddToPanelText(fieldLabelId));  bodyBuilder.appendFormalLine("");  final String fieldValueId=fieldName + suffix2;  final String converterName=fieldValueId + "Converter";  final String htmlOutputTextStr="HtmlOutputText " + fieldValueId + " = "+ getComponentCreation("HtmlOutputText");  final String inputTextStr="InputText " + fieldValueId + " = "+ getComponentCreation("InputText");  final String componentIdStr=fieldValueId + ".setId(\"" + fieldValueId+ "\");";  final String requiredStr=fieldValueId + ".setRequired(" + required+ ");";  if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {    final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);    final String contentType=(String)annotation.getAttribute("contentType").getValue();    final String allowedType=UploadedFileContentType.getFileExtension(contentType).name();    if (action == Action.VIEW) {      builder.getImportRegistrationResolver().addImports(UI_COMPONENT,PRIMEFACES_FILE_DOWNLOAD_ACTION_LISTENER,PRIMEFACES_COMMAND_BUTTON,PRIMEFACES_STREAMED_CONTENT);      bodyBuilder.appendFormalLine("UIComponent " + fieldValueId + ";");      bodyBuilder.appendFormalLine("if (" + entityName + " != null && "+ entityName+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null && "+ entityName+ ".get"+ StringUtils.capitalize(fieldName)+ "().length > 0) {");      bodyBuilder.indent();      bodyBuilder.appendFormalLine(fieldValueId + " = " + getComponentCreation("CommandButton"));      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").addActionListener(new FileDownloadActionListener(expressionFactory.createValueExpression(elContext, \"#{"+ beanName+ "."+ fieldName+ "StreamedContent}\", StreamedContent.class), null));");      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").setValue(\"Download\");");      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").setAjax(false);");      bodyBuilder.indentRemove();      bodyBuilder.appendFormalLine("} else {");      bodyBuilder.indent();      bodyBuilder.appendFormalLine(fieldValueId + " = " + getComponentCreation("HtmlOutputText"));      bodyBuilder.appendFormalLine("((HtmlOutputText) " + fieldValueId + ").setValue(\"\");");      bodyBuilder.indentRemove();      bodyBuilder.appendFormalLine("}");    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_FILE_UPLOAD,PRIMEFACES_FILE_UPLOAD_EVENT);      bodyBuilder.appendFormalLine("FileUpload " + fieldValueId + " = "+ getComponentCreation("FileUpload"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(fieldValueId + ".setFileUploadListener(expressionFactory.createMethodExpression(elContext, \"#{" + beanName+ "."+ getFileUploadMethodName(fieldName)+ "}\", void.class, new Class[] { FileUploadEvent.class }));");      bodyBuilder.appendFormalLine(fieldValueId + ".setMode(\"advanced\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setAllowTypes(\"/(\\\\.|\\\\/)(" + getAllowTypeRegex(allowedType)+ ")$/\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setUpdate(\"messages\");");      final AnnotationAttributeValue<?> autoUploadAttr=annotation.getAttribute("autoUpload");      if (autoUploadAttr != null && (Boolean)autoUploadAttr.getValue()) {        bodyBuilder.appendFormalLine(fieldValueId + ".setAuto(true);");      }    }  } else   if (fieldType.equals(BOOLEAN_OBJECT) || fieldType.equals(BOOLEAN_PRIMITIVE)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_SELECT_BOOLEAN_CHECKBOX);      bodyBuilder.appendFormalLine("SelectBooleanCheckbox " + fieldValueId + " = "+ getComponentCreation("SelectBooleanCheckbox"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);    }  } else   if (customData.keySet().contains(ENUMERATED_KEY)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_AUTO_COMPLETE,fieldType);      bodyBuilder.appendFormalLine("AutoComplete " + fieldValueId + " = "+ getComponentCreation("AutoComplete"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(getSetCompleteMethod(fieldValueId,fieldName));      bodyBuilder.appendFormalLine(fieldValueId + ".setDropdown(true);");      bodyBuilder.appendFormalLine(requiredStr);    }  } else   if (JdkJavaType.isDateField(fieldType)) {    if (action == Action.VIEW) {      builder.getImportRegistrationResolver().addImport(DATE_TIME_CONVERTER);      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine("DateTimeConverter " + converterName + " = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);");      bodyBuilder.appendFormalLine(converterName + ".setPattern(\"dd/MM/yyyy\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(" + converterName+ ");");    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_CALENDAR,DATE);      bodyBuilder.appendFormalLine("Calendar " + fieldValueId + " = "+ getComponentCreation("Calendar"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,"Date"));      bodyBuilder.appendFormalLine(fieldValueId + ".setNavigator(true);");      bodyBuilder.appendFormalLine(fieldValueId + ".setEffect(\"slideDown\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setPattern(\"dd/MM/yyyy\");");      bodyBuilder.appendFormalLine(requiredStr);      if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),PAST) != null) {        bodyBuilder.appendFormalLine(fieldValueId + ".setMaxdate(new Date());");      }      if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),FUTURE) != null) {        bodyBuilder.appendFormalLine(fieldValueId + ".setMindate(new Date());");      }    }  } else   if (JdkJavaType.isIntegerType(fieldType)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_INPUT_TEXT,PRIMEFACES_SPINNER);      if (fieldType.equals(JdkJavaType.BIG_INTEGER)) {        builder.getImportRegistrationResolver().addImport(fieldType);      }      bodyBuilder.appendFormalLine("Spinner " + fieldValueId + " = "+ getComponentCreation("Spinner"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);      if (minValue != null || maxValue != null) {        if (minValue != null) {          bodyBuilder.appendFormalLine(fieldValueId + ".setMin(" + minValue.doubleValue()+ ");");        }        if (maxValue != null) {          bodyBuilder.appendFormalLine(fieldValueId + ".setMax(" + maxValue.doubleValue()+ ");");        }        bodyBuilder.append(getLongRangeValdatorString(fieldValueId,minValue,maxValue));      }      bodyBuilder.appendFormalLine("");    }  } else   if (JdkJavaType.isDecimalType(fieldType)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);      if (fieldType.equals(JdkJavaType.BIG_DECIMAL)) {        builder.getImportRegistrationResolver().addImport(fieldType);      }      bodyBuilder.appendFormalLine(inputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);      if (minValue != null || maxValue != null) {        bodyBuilder.append(getDoubleRangeValdatorString(fieldValueId,minValue,maxValue));      }    }  } else   if (fieldType.equals(STRING)) {    if (isTextarea) {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXTAREA);      bodyBuilder.appendFormalLine("InputTextarea " + fieldValueId + " = "+ getComponentCreation("InputTextarea"));      bodyBuilder.appendFormalLine(fieldValueId + ".setMaxHeight(100);");    } else {      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);      } else {        builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);        bodyBuilder.appendFormalLine(inputTextStr);      }    }    bodyBuilder.appendFormalLine(componentIdStr);    bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    if (action == Action.VIEW) {      if (isTextarea) {        bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");      }    } else {      if (sizeMinValue != null || sizeMaxValue != null) {        bodyBuilder.append(getLengthValdatorString(fieldValueId,sizeMinValue,sizeMaxValue));        bodyBuilder.appendFormalLine(requiredStr);      }      setRegexPatternValidationString(field,fieldValueId,bodyBuilder);    }  } else   if (customData.keySet().contains(PARAMETER_TYPE_KEY)) {    final JavaType parameterType=(JavaType)customData.get(PARAMETER_TYPE_KEY);    final String parameterTypeSimpleTypeName=parameterType.getSimpleTypeName();    final String parameterTypeFieldName=StringUtils.uncapitalize(parameterTypeSimpleTypeName);    final String parameterTypeManagedBeanName=(String)customData.get(PARAMETER_TYPE_MANAGED_BEAN_NAME_KEY);    final String parameterTypePlural=(String)customData.get(PARAMETER_TYPE_PLURAL_KEY);    if (StringUtils.isNotBlank(parameterTypeManagedBeanName)) {      if (customData.keySet().contains(ONE_TO_MANY_FIELD) || customData.keySet().contains(MANY_TO_MANY_FIELD) && isInverseSideOfRelationship(field,ONE_TO_MANY,MANY_TO_MANY)) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(fieldValueId + ".setValue(\"This relationship is managed from the " + parameterTypeSimpleTypeName+ " side\");");      } else {        final JavaType converterType=new JavaType(destination.getPackage().getFullyQualifiedPackageName() + ".converter." + parameterTypeSimpleTypeName+ "Converter");        builder.getImportRegistrationResolver().addImports(PRIMEFACES_SELECT_MANY_MENU,UI_SELECT_ITEMS,fieldType,converterType);        bodyBuilder.appendFormalLine("SelectManyMenu " + fieldValueId + " = "+ getComponentCreation("SelectManyMenu"));        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine("UISelectItems " + fieldValueId + "Items = (UISelectItems) application.createComponent(UISelectItems.COMPONENT_TYPE);");        if (action == Action.VIEW) {          bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");          bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");          bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ entityName.getSymbolName()+ "."+ fieldName+ "}\", "+ simpleTypeName+ ".class));");        } else {          bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeManagedBeanName+ ".all"+ StringUtils.capitalize(parameterTypePlural)+ "}\", List.class));");          bodyBuilder.appendFormalLine(requiredStr);        }        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + parameterTypeFieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", "+ parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Items"));      }    } else {      bodyBuilder.appendFormalLine("SelectManyMenu " + fieldValueId + " = "+ getComponentCreation("SelectManyMenu"));      bodyBuilder.appendFormalLine(componentIdStr);      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine("UISelectItems " + fieldValueId + "Items = (UISelectItems) application.createComponent(UISelectItems.COMPONENT_TYPE);");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ entityName.getSymbolName()+ "."+ fieldName+ "}\", "+ simpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + parameterTypeFieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", "+ parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Items"));      } else {        builder.getImportRegistrationResolver().addImports(UI_SELECT_ITEM,ENUM_CONVERTER);        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new EnumConverter(" + parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(requiredStr);        bodyBuilder.appendFormalLine("UISelectItem " + fieldValueId + "Item;");        bodyBuilder.appendFormalLine("for (" + parameterTypeSimpleTypeName + " "+ StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ " : "+ parameterTypeSimpleTypeName+ ".values()) {");        bodyBuilder.indent();        bodyBuilder.appendFormalLine(fieldValueId + "Item = (UISelectItem) application.createComponent(UISelectItem.COMPONENT_TYPE);");        bodyBuilder.appendFormalLine(fieldValueId + "Item.setItemLabel(" + StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ ".name());");        bodyBuilder.appendFormalLine(fieldValueId + "Item.setItemValue(" + StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ ");");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Item"));        bodyBuilder.indentRemove();        bodyBuilder.appendFormalLine("}");      }    }  } else   if (customData.keySet().contains(APPLICATION_TYPE_KEY)) {    if (customData.keySet().contains(ONE_TO_ONE_FIELD) && isInverseSideOfRelationship(field,ONE_TO_ONE)) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(fieldValueId + ".setValue(\"This relationship is managed from the " + simpleTypeName+ " side\");");    } else {      final JavaType converterType=new JavaType(destination.getPackage().getFullyQualifiedPackageName() + ".converter." + simpleTypeName+ "Converter");      builder.getImportRegistrationResolver().addImport(converterType);      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);        bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");      } else {        builder.getImportRegistrationResolver().addImports(PRIMEFACES_AUTO_COMPLETE,fieldType);        bodyBuilder.appendFormalLine("AutoComplete " + fieldValueId + " = "+ getComponentCreation("AutoComplete"));        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));        bodyBuilder.appendFormalLine(getSetCompleteMethod(fieldValueId,fieldName));        bodyBuilder.appendFormalLine(fieldValueId + ".setDropdown(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + fieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"" + getAutoCcompleteItemLabelValue(field,fieldName)+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + fieldName+ "}\", "+ simpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");        bodyBuilder.appendFormalLine(requiredStr);      }    }  } else {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);      bodyBuilder.appendFormalLine(inputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);    }  }  if (action != Action.VIEW) {    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId));    builder.getImportRegistrationResolver().addImport(PRIMEFACES_MESSAGE);    bodyBuilder.appendFormalLine("");    bodyBuilder.appendFormalLine("Message " + fieldValueId + "Message = "+ getComponentCreation("Message"));    bodyBuilder.appendFormalLine(fieldValueId + "Message.setId(\"" + fieldValueId+ "Message\");");    bodyBuilder.appendFormalLine(fieldValueId + "Message.setFor(\"" + fieldValueId+ "\");");    bodyBuilder.appendFormalLine(fieldValueId + "Message.setDisplay(\"icon\");");    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId + "Message"));  } else {    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId));  }  bodyBuilder.appendFormalLine("");} @TO@ for (final FieldMetadata field : locatedFields) {  final CustomData customData=field.getCustomData();  final JavaType fieldType=field.getFieldType();  final String simpleTypeName=fieldType.getSimpleTypeName();  final String fieldName=field.getFieldName().getSymbolName();  final String fieldLabelId=fieldName + suffix1;  final BigDecimal minValue=ObjectUtils.max(getMinOrMaxValue(field,MIN),getMinOrMaxValue(field,DECIMAL_MIN));  final BigDecimal maxValue=ObjectUtils.min(getMinOrMaxValue(field,MAX),getMinOrMaxValue(field,DECIMAL_MAX));  final Integer sizeMinValue=getSizeMinOrMax(field,"min");  final Integer min=ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field));  final BigDecimal sizeMaxValue=min != null ? new BigDecimal(min) : null;  final boolean required=action != Action.VIEW && (!isNullable(field) || minValue != null || maxValue != null || sizeMinValue != null || sizeMaxValue != null);  final boolean isTextarea=sizeMinValue != null && sizeMinValue.intValue() > 30 || sizeMaxValue != null && sizeMaxValue.intValue() > 30 || customData.keySet().contains(CustomDataKeys.LOB_FIELD);  bodyBuilder.appendFormalLine("HtmlOutputText " + fieldLabelId + " = "+ getComponentCreation("HtmlOutputText"));  bodyBuilder.appendFormalLine(fieldLabelId + ".setId(\"" + fieldLabelId+ "\");");  bodyBuilder.appendFormalLine(fieldLabelId + ".setValue(\"" + field.getFieldName().getReadableSymbolName()+ ": "+ (required ? "* " : "  ")+ "\");");  bodyBuilder.appendFormalLine(getAddToPanelText(fieldLabelId));  bodyBuilder.appendFormalLine("");  final String fieldValueId=fieldName + suffix2;  final String converterName=fieldValueId + "Converter";  final String htmlOutputTextStr="HtmlOutputText " + fieldValueId + " = "+ getComponentCreation("HtmlOutputText");  final String inputTextStr="InputText " + fieldValueId + " = "+ getComponentCreation("InputText");  final String componentIdStr=fieldValueId + ".setId(\"" + fieldValueId+ "\");";  final String requiredStr=fieldValueId + ".setRequired(" + required+ ");";  if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {    final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);    final String contentType=(String)annotation.getAttribute("contentType").getValue();    final String allowedType=UploadedFileContentType.getFileExtension(contentType).name();    if (action == Action.VIEW) {      builder.getImportRegistrationResolver().addImports(UI_COMPONENT,PRIMEFACES_FILE_DOWNLOAD_ACTION_LISTENER,PRIMEFACES_COMMAND_BUTTON,PRIMEFACES_STREAMED_CONTENT);      bodyBuilder.appendFormalLine("UIComponent " + fieldValueId + ";");      bodyBuilder.appendFormalLine("if (" + entityName + " != null && "+ entityName+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null && "+ entityName+ ".get"+ StringUtils.capitalize(fieldName)+ "().length > 0) {");      bodyBuilder.indent();      bodyBuilder.appendFormalLine(fieldValueId + " = " + getComponentCreation("CommandButton"));      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").addActionListener(new FileDownloadActionListener(expressionFactory.createValueExpression(elContext, \"#{"+ beanName+ "."+ fieldName+ "StreamedContent}\", StreamedContent.class), null));");      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").setValue(\"Download\");");      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").setAjax(false);");      bodyBuilder.indentRemove();      bodyBuilder.appendFormalLine("} else {");      bodyBuilder.indent();      bodyBuilder.appendFormalLine(fieldValueId + " = " + getComponentCreation("HtmlOutputText"));      bodyBuilder.appendFormalLine("((HtmlOutputText) " + fieldValueId + ").setValue(\"\");");      bodyBuilder.indentRemove();      bodyBuilder.appendFormalLine("}");    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_FILE_UPLOAD,PRIMEFACES_FILE_UPLOAD_EVENT);      bodyBuilder.appendFormalLine("FileUpload " + fieldValueId + " = "+ getComponentCreation("FileUpload"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(fieldValueId + ".setFileUploadListener(expressionFactory.createMethodExpression(elContext, \"#{" + beanName+ "."+ getFileUploadMethodName(fieldName)+ "}\", void.class, new Class[] { FileUploadEvent.class }));");      bodyBuilder.appendFormalLine(fieldValueId + ".setMode(\"advanced\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setAllowTypes(\"/(\\\\.|\\\\/)(" + getAllowTypeRegex(allowedType)+ ")$/\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setUpdate(\"messages\");");      final AnnotationAttributeValue<?> autoUploadAttr=annotation.getAttribute("autoUpload");      if (autoUploadAttr != null && (Boolean)autoUploadAttr.getValue()) {        bodyBuilder.appendFormalLine(fieldValueId + ".setAuto(true);");      }    }  } else   if (fieldType.equals(BOOLEAN_OBJECT) || fieldType.equals(BOOLEAN_PRIMITIVE)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_SELECT_BOOLEAN_CHECKBOX);      bodyBuilder.appendFormalLine("SelectBooleanCheckbox " + fieldValueId + " = "+ getComponentCreation("SelectBooleanCheckbox"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);    }  } else   if (customData.keySet().contains(ENUMERATED_KEY)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_AUTO_COMPLETE,fieldType);      bodyBuilder.appendFormalLine("AutoComplete " + fieldValueId + " = "+ getComponentCreation("AutoComplete"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(getSetCompleteMethod(fieldValueId,fieldName));      bodyBuilder.appendFormalLine(fieldValueId + ".setDropdown(true);");      bodyBuilder.appendFormalLine(requiredStr);    }  } else   if (JdkJavaType.isDateField(fieldType)) {    if (action == Action.VIEW) {      builder.getImportRegistrationResolver().addImport(DATE_TIME_CONVERTER);      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine("DateTimeConverter " + converterName + " = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);");      bodyBuilder.appendFormalLine(converterName + ".setPattern(\"dd/MM/yyyy\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(" + converterName+ ");");    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_CALENDAR,DATE);      bodyBuilder.appendFormalLine("Calendar " + fieldValueId + " = "+ getComponentCreation("Calendar"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,"Date"));      bodyBuilder.appendFormalLine(fieldValueId + ".setNavigator(true);");      bodyBuilder.appendFormalLine(fieldValueId + ".setEffect(\"slideDown\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setPattern(\"dd/MM/yyyy\");");      bodyBuilder.appendFormalLine(requiredStr);      if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),PAST) != null) {        bodyBuilder.appendFormalLine(fieldValueId + ".setMaxdate(new Date());");      }      if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),FUTURE) != null) {        bodyBuilder.appendFormalLine(fieldValueId + ".setMindate(new Date());");      }    }  } else   if (JdkJavaType.isIntegerType(fieldType)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_INPUT_TEXT,PRIMEFACES_SPINNER);      if (fieldType.equals(JdkJavaType.BIG_INTEGER)) {        builder.getImportRegistrationResolver().addImport(fieldType);      }      bodyBuilder.appendFormalLine("Spinner " + fieldValueId + " = "+ getComponentCreation("Spinner"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);      if (minValue != null || maxValue != null) {        if (minValue != null) {          bodyBuilder.appendFormalLine(fieldValueId + ".setMin(" + minValue.doubleValue()+ ");");        }        if (maxValue != null) {          bodyBuilder.appendFormalLine(fieldValueId + ".setMax(" + maxValue.doubleValue()+ ");");        }        bodyBuilder.append(getLongRangeValdatorString(fieldValueId,minValue,maxValue));      }      bodyBuilder.appendFormalLine("");    }  } else   if (JdkJavaType.isDecimalType(fieldType)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);      if (fieldType.equals(JdkJavaType.BIG_DECIMAL)) {        builder.getImportRegistrationResolver().addImport(fieldType);      }      bodyBuilder.appendFormalLine(inputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);      if (minValue != null || maxValue != null) {        bodyBuilder.append(getDoubleRangeValdatorString(fieldValueId,minValue,maxValue));      }    }  } else   if (fieldType.equals(STRING)) {    if (isTextarea) {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXTAREA);      bodyBuilder.appendFormalLine("InputTextarea " + fieldValueId + " = "+ getComponentCreation("InputTextarea"));      bodyBuilder.appendFormalLine(fieldValueId + ".setMaxHeight(100);");    } else {      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);      } else {        builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);        bodyBuilder.appendFormalLine(inputTextStr);      }    }    bodyBuilder.appendFormalLine(componentIdStr);    bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    if (action == Action.VIEW) {      if (isTextarea) {        bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");      }    } else {      if (sizeMinValue != null || sizeMaxValue != null) {        bodyBuilder.append(getLengthValdatorString(fieldValueId,sizeMinValue,sizeMaxValue));        bodyBuilder.appendFormalLine(requiredStr);      }      setRegexPatternValidationString(field,fieldValueId,bodyBuilder);    }  } else   if (customData.keySet().contains(PARAMETER_TYPE_KEY)) {    final JavaType parameterType=(JavaType)customData.get(PARAMETER_TYPE_KEY);    final String parameterTypeSimpleTypeName=parameterType.getSimpleTypeName();    final String parameterTypeFieldName=StringUtils.uncapitalize(parameterTypeSimpleTypeName);    final String parameterTypeManagedBeanName=(String)customData.get(PARAMETER_TYPE_MANAGED_BEAN_NAME_KEY);    final String parameterTypePlural=(String)customData.get(PARAMETER_TYPE_PLURAL_KEY);    if (StringUtils.isNotBlank(parameterTypeManagedBeanName)) {      if (customData.keySet().contains(ONE_TO_MANY_FIELD) || customData.keySet().contains(MANY_TO_MANY_FIELD) && isInverseSideOfRelationship(field,ONE_TO_MANY,MANY_TO_MANY)) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(fieldValueId + ".setValue(\"This relationship is managed from the " + parameterTypeSimpleTypeName+ " side\");");      } else {        final JavaType converterType=new JavaType(destination.getPackage().getFullyQualifiedPackageName() + ".converter." + parameterTypeSimpleTypeName+ "Converter");        builder.getImportRegistrationResolver().addImports(PRIMEFACES_SELECT_MANY_MENU,UI_SELECT_ITEMS,fieldType,converterType);        bodyBuilder.appendFormalLine("SelectManyMenu " + fieldValueId + " = "+ getComponentCreation("SelectManyMenu"));        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine("UISelectItems " + fieldValueId + "Items = (UISelectItems) application.createComponent(UISelectItems.COMPONENT_TYPE);");        if (action == Action.VIEW) {          bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");          bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");          bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ entityName.getSymbolName()+ "."+ fieldName+ "}\", "+ simpleTypeName+ ".class));");        } else {          bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeManagedBeanName+ ".all"+ StringUtils.capitalize(parameterTypePlural)+ "}\", List.class));");          bodyBuilder.appendFormalLine(requiredStr);        }        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + parameterTypeFieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", "+ parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Items"));      }    } else {      bodyBuilder.appendFormalLine("SelectManyMenu " + fieldValueId + " = "+ getComponentCreation("SelectManyMenu"));      bodyBuilder.appendFormalLine(componentIdStr);      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine("UISelectItems " + fieldValueId + "Items = (UISelectItems) application.createComponent(UISelectItems.COMPONENT_TYPE);");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ entityName.getSymbolName()+ "."+ fieldName+ "}\", "+ simpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + parameterTypeFieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", "+ parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Items"));      } else {        builder.getImportRegistrationResolver().addImports(UI_SELECT_ITEM,ENUM_CONVERTER);        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new EnumConverter(" + parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(requiredStr);        bodyBuilder.appendFormalLine("UISelectItem " + fieldValueId + "Item;");        bodyBuilder.appendFormalLine("for (" + parameterTypeSimpleTypeName + " "+ StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ " : "+ parameterTypeSimpleTypeName+ ".values()) {");        bodyBuilder.indent();        bodyBuilder.appendFormalLine(fieldValueId + "Item = (UISelectItem) application.createComponent(UISelectItem.COMPONENT_TYPE);");        bodyBuilder.appendFormalLine(fieldValueId + "Item.setItemLabel(" + StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ ".name());");        bodyBuilder.appendFormalLine(fieldValueId + "Item.setItemValue(" + StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ ");");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Item"));        bodyBuilder.indentRemove();        bodyBuilder.appendFormalLine("}");      }    }  } else   if (customData.keySet().contains(APPLICATION_TYPE_KEY)) {    if (customData.keySet().contains(ONE_TO_ONE_FIELD) && isInverseSideOfRelationship(field,ONE_TO_ONE)) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(fieldValueId + ".setValue(\"This relationship is managed from the " + simpleTypeName+ " side\");");    } else {      final JavaType converterType=new JavaType(destination.getPackage().getFullyQualifiedPackageName() + ".converter." + simpleTypeName+ "Converter");      builder.getImportRegistrationResolver().addImport(converterType);      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);        bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");      } else {        builder.getImportRegistrationResolver().addImports(PRIMEFACES_AUTO_COMPLETE,fieldType);        bodyBuilder.appendFormalLine("AutoComplete " + fieldValueId + " = "+ getComponentCreation("AutoComplete"));        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));        bodyBuilder.appendFormalLine(getSetCompleteMethod(fieldValueId,fieldName));        bodyBuilder.appendFormalLine(fieldValueId + ".setDropdown(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + fieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"" + getAutoCcompleteItemLabelValue(field,fieldName)+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + fieldName+ "}\", "+ simpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");        bodyBuilder.appendFormalLine(requiredStr);      }    }  } else {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);      bodyBuilder.appendFormalLine(inputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);    }  }  if (action != Action.VIEW) {    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId));    builder.getImportRegistrationResolver().addImport(PRIMEFACES_MESSAGE);    bodyBuilder.appendFormalLine("");    bodyBuilder.appendFormalLine("Message " + fieldValueId + "Message = "+ getComponentCreation("Message"));    bodyBuilder.appendFormalLine(fieldValueId + "Message.setId(\"" + fieldValueId+ "Message\");");    bodyBuilder.appendFormalLine(fieldValueId + "Message.setFor(\"" + fieldValueId+ "\");");    bodyBuilder.appendFormalLine(fieldValueId + "Message.setDisplay(\"icon\");");    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId + "Message"));  } else {    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId));  }  bodyBuilder.appendFormalLine("");} @AT@ 49303 @LENGTH@ 36773
---UPD VariableDeclarationStatement@@final BigDecimal sizeMaxValue=new BigDecimal(ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field))); @TO@ final Integer min=ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field)); @AT@ 50105 @LENGTH@ 140
------UPD SimpleType@@BigDecimal @TO@ Integer @AT@ 50111 @LENGTH@ 10
------UPD VariableDeclarationFragment@@sizeMaxValue=new BigDecimal(ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field))) @TO@ min=ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field)) @AT@ 50122 @LENGTH@ 122
---------UPD SimpleName@@sizeMaxValue @TO@ min @AT@ 50122 @LENGTH@ 12
---------DEL ClassInstanceCreation@@BigDecimal[ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field))] @AT@ 50137 @LENGTH@ 107
------------DEL New@@new @AT@ 50137 @LENGTH@ 3
------------DEL SimpleType@@BigDecimal @AT@ 50141 @LENGTH@ 10
---------MOV MethodInvocation@@ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field)) @TO@ VariableDeclarationFragment@@sizeMaxValue=new BigDecimal(ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field))) @AT@ 50152 @LENGTH@ 91
---INS VariableDeclarationStatement@@final BigDecimal sizeMaxValue=min != null ? new BigDecimal(min) : null; @TO@ EnhancedForStatement@@for (final FieldMetadata field : locatedFields) {  final CustomData customData=field.getCustomData();  final JavaType fieldType=field.getFieldType();  final String simpleTypeName=fieldType.getSimpleTypeName();  final String fieldName=field.getFieldName().getSymbolName();  final String fieldLabelId=fieldName + suffix1;  final BigDecimal minValue=ObjectUtils.max(getMinOrMaxValue(field,MIN),getMinOrMaxValue(field,DECIMAL_MIN));  final BigDecimal maxValue=ObjectUtils.min(getMinOrMaxValue(field,MAX),getMinOrMaxValue(field,DECIMAL_MAX));  final Integer sizeMinValue=getSizeMinOrMax(field,"min");  final BigDecimal sizeMaxValue=new BigDecimal(ObjectUtils.min(getSizeMinOrMax(field,"max"),getColumnLength(field)));  final boolean required=action != Action.VIEW && (!isNullable(field) || minValue != null || maxValue != null || sizeMinValue != null || sizeMaxValue != null);  final boolean isTextarea=sizeMinValue != null && sizeMinValue.intValue() > 30 || sizeMaxValue != null && sizeMaxValue.intValue() > 30 || customData.keySet().contains(CustomDataKeys.LOB_FIELD);  bodyBuilder.appendFormalLine("HtmlOutputText " + fieldLabelId + " = "+ getComponentCreation("HtmlOutputText"));  bodyBuilder.appendFormalLine(fieldLabelId + ".setId(\"" + fieldLabelId+ "\");");  bodyBuilder.appendFormalLine(fieldLabelId + ".setValue(\"" + field.getFieldName().getReadableSymbolName()+ ": "+ (required ? "* " : "  ")+ "\");");  bodyBuilder.appendFormalLine(getAddToPanelText(fieldLabelId));  bodyBuilder.appendFormalLine("");  final String fieldValueId=fieldName + suffix2;  final String converterName=fieldValueId + "Converter";  final String htmlOutputTextStr="HtmlOutputText " + fieldValueId + " = "+ getComponentCreation("HtmlOutputText");  final String inputTextStr="InputText " + fieldValueId + " = "+ getComponentCreation("InputText");  final String componentIdStr=fieldValueId + ".setId(\"" + fieldValueId+ "\");";  final String requiredStr=fieldValueId + ".setRequired(" + required+ ");";  if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {    final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);    final String contentType=(String)annotation.getAttribute("contentType").getValue();    final String allowedType=UploadedFileContentType.getFileExtension(contentType).name();    if (action == Action.VIEW) {      builder.getImportRegistrationResolver().addImports(UI_COMPONENT,PRIMEFACES_FILE_DOWNLOAD_ACTION_LISTENER,PRIMEFACES_COMMAND_BUTTON,PRIMEFACES_STREAMED_CONTENT);      bodyBuilder.appendFormalLine("UIComponent " + fieldValueId + ";");      bodyBuilder.appendFormalLine("if (" + entityName + " != null && "+ entityName+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null && "+ entityName+ ".get"+ StringUtils.capitalize(fieldName)+ "().length > 0) {");      bodyBuilder.indent();      bodyBuilder.appendFormalLine(fieldValueId + " = " + getComponentCreation("CommandButton"));      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").addActionListener(new FileDownloadActionListener(expressionFactory.createValueExpression(elContext, \"#{"+ beanName+ "."+ fieldName+ "StreamedContent}\", StreamedContent.class), null));");      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").setValue(\"Download\");");      bodyBuilder.appendFormalLine("((CommandButton) " + fieldValueId + ").setAjax(false);");      bodyBuilder.indentRemove();      bodyBuilder.appendFormalLine("} else {");      bodyBuilder.indent();      bodyBuilder.appendFormalLine(fieldValueId + " = " + getComponentCreation("HtmlOutputText"));      bodyBuilder.appendFormalLine("((HtmlOutputText) " + fieldValueId + ").setValue(\"\");");      bodyBuilder.indentRemove();      bodyBuilder.appendFormalLine("}");    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_FILE_UPLOAD,PRIMEFACES_FILE_UPLOAD_EVENT);      bodyBuilder.appendFormalLine("FileUpload " + fieldValueId + " = "+ getComponentCreation("FileUpload"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(fieldValueId + ".setFileUploadListener(expressionFactory.createMethodExpression(elContext, \"#{" + beanName+ "."+ getFileUploadMethodName(fieldName)+ "}\", void.class, new Class[] { FileUploadEvent.class }));");      bodyBuilder.appendFormalLine(fieldValueId + ".setMode(\"advanced\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setAllowTypes(\"/(\\\\.|\\\\/)(" + getAllowTypeRegex(allowedType)+ ")$/\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setUpdate(\"messages\");");      final AnnotationAttributeValue<?> autoUploadAttr=annotation.getAttribute("autoUpload");      if (autoUploadAttr != null && (Boolean)autoUploadAttr.getValue()) {        bodyBuilder.appendFormalLine(fieldValueId + ".setAuto(true);");      }    }  } else   if (fieldType.equals(BOOLEAN_OBJECT) || fieldType.equals(BOOLEAN_PRIMITIVE)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_SELECT_BOOLEAN_CHECKBOX);      bodyBuilder.appendFormalLine("SelectBooleanCheckbox " + fieldValueId + " = "+ getComponentCreation("SelectBooleanCheckbox"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);    }  } else   if (customData.keySet().contains(ENUMERATED_KEY)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_AUTO_COMPLETE,fieldType);      bodyBuilder.appendFormalLine("AutoComplete " + fieldValueId + " = "+ getComponentCreation("AutoComplete"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(getSetCompleteMethod(fieldValueId,fieldName));      bodyBuilder.appendFormalLine(fieldValueId + ".setDropdown(true);");      bodyBuilder.appendFormalLine(requiredStr);    }  } else   if (JdkJavaType.isDateField(fieldType)) {    if (action == Action.VIEW) {      builder.getImportRegistrationResolver().addImport(DATE_TIME_CONVERTER);      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine("DateTimeConverter " + converterName + " = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);");      bodyBuilder.appendFormalLine(converterName + ".setPattern(\"dd/MM/yyyy\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(" + converterName+ ");");    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_CALENDAR,DATE);      bodyBuilder.appendFormalLine("Calendar " + fieldValueId + " = "+ getComponentCreation("Calendar"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,"Date"));      bodyBuilder.appendFormalLine(fieldValueId + ".setNavigator(true);");      bodyBuilder.appendFormalLine(fieldValueId + ".setEffect(\"slideDown\");");      bodyBuilder.appendFormalLine(fieldValueId + ".setPattern(\"dd/MM/yyyy\");");      bodyBuilder.appendFormalLine(requiredStr);      if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),PAST) != null) {        bodyBuilder.appendFormalLine(fieldValueId + ".setMaxdate(new Date());");      }      if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),FUTURE) != null) {        bodyBuilder.appendFormalLine(fieldValueId + ".setMindate(new Date());");      }    }  } else   if (JdkJavaType.isIntegerType(fieldType)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImports(PRIMEFACES_INPUT_TEXT,PRIMEFACES_SPINNER);      if (fieldType.equals(JdkJavaType.BIG_INTEGER)) {        builder.getImportRegistrationResolver().addImport(fieldType);      }      bodyBuilder.appendFormalLine("Spinner " + fieldValueId + " = "+ getComponentCreation("Spinner"));      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);      if (minValue != null || maxValue != null) {        if (minValue != null) {          bodyBuilder.appendFormalLine(fieldValueId + ".setMin(" + minValue.doubleValue()+ ");");        }        if (maxValue != null) {          bodyBuilder.appendFormalLine(fieldValueId + ".setMax(" + maxValue.doubleValue()+ ");");        }        bodyBuilder.append(getLongRangeValdatorString(fieldValueId,minValue,maxValue));      }      bodyBuilder.appendFormalLine("");    }  } else   if (JdkJavaType.isDecimalType(fieldType)) {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);      if (fieldType.equals(JdkJavaType.BIG_DECIMAL)) {        builder.getImportRegistrationResolver().addImport(fieldType);      }      bodyBuilder.appendFormalLine(inputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);      if (minValue != null || maxValue != null) {        bodyBuilder.append(getDoubleRangeValdatorString(fieldValueId,minValue,maxValue));      }    }  } else   if (fieldType.equals(STRING)) {    if (isTextarea) {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXTAREA);      bodyBuilder.appendFormalLine("InputTextarea " + fieldValueId + " = "+ getComponentCreation("InputTextarea"));      bodyBuilder.appendFormalLine(fieldValueId + ".setMaxHeight(100);");    } else {      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);      } else {        builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);        bodyBuilder.appendFormalLine(inputTextStr);      }    }    bodyBuilder.appendFormalLine(componentIdStr);    bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    if (action == Action.VIEW) {      if (isTextarea) {        bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");      }    } else {      if (sizeMinValue != null || sizeMaxValue != null) {        bodyBuilder.append(getLengthValdatorString(fieldValueId,sizeMinValue,sizeMaxValue));        bodyBuilder.appendFormalLine(requiredStr);      }      setRegexPatternValidationString(field,fieldValueId,bodyBuilder);    }  } else   if (customData.keySet().contains(PARAMETER_TYPE_KEY)) {    final JavaType parameterType=(JavaType)customData.get(PARAMETER_TYPE_KEY);    final String parameterTypeSimpleTypeName=parameterType.getSimpleTypeName();    final String parameterTypeFieldName=StringUtils.uncapitalize(parameterTypeSimpleTypeName);    final String parameterTypeManagedBeanName=(String)customData.get(PARAMETER_TYPE_MANAGED_BEAN_NAME_KEY);    final String parameterTypePlural=(String)customData.get(PARAMETER_TYPE_PLURAL_KEY);    if (StringUtils.isNotBlank(parameterTypeManagedBeanName)) {      if (customData.keySet().contains(ONE_TO_MANY_FIELD) || customData.keySet().contains(MANY_TO_MANY_FIELD) && isInverseSideOfRelationship(field,ONE_TO_MANY,MANY_TO_MANY)) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(fieldValueId + ".setValue(\"This relationship is managed from the " + parameterTypeSimpleTypeName+ " side\");");      } else {        final JavaType converterType=new JavaType(destination.getPackage().getFullyQualifiedPackageName() + ".converter." + parameterTypeSimpleTypeName+ "Converter");        builder.getImportRegistrationResolver().addImports(PRIMEFACES_SELECT_MANY_MENU,UI_SELECT_ITEMS,fieldType,converterType);        bodyBuilder.appendFormalLine("SelectManyMenu " + fieldValueId + " = "+ getComponentCreation("SelectManyMenu"));        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine("UISelectItems " + fieldValueId + "Items = (UISelectItems) application.createComponent(UISelectItems.COMPONENT_TYPE);");        if (action == Action.VIEW) {          bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");          bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");          bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ entityName.getSymbolName()+ "."+ fieldName+ "}\", "+ simpleTypeName+ ".class));");        } else {          bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeManagedBeanName+ ".all"+ StringUtils.capitalize(parameterTypePlural)+ "}\", List.class));");          bodyBuilder.appendFormalLine(requiredStr);        }        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + parameterTypeFieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", "+ parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Items"));      }    } else {      bodyBuilder.appendFormalLine("SelectManyMenu " + fieldValueId + " = "+ getComponentCreation("SelectManyMenu"));      bodyBuilder.appendFormalLine(componentIdStr);      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(fieldValueId + ".setReadonly(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setDisabled(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine("UISelectItems " + fieldValueId + "Items = (UISelectItems) application.createComponent(UISelectItems.COMPONENT_TYPE);");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ entityName.getSymbolName()+ "."+ fieldName+ "}\", "+ simpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + parameterTypeFieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + "Items.setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + parameterTypeFieldName+ "}\", "+ parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Items"));      } else {        builder.getImportRegistrationResolver().addImports(UI_SELECT_ITEM,ENUM_CONVERTER);        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"value\", expressionFactory.createValueExpression(elContext, \"#{" + beanName+ "."+ getSelectedFieldName(fieldName)+ "}\", List.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new EnumConverter(" + parameterTypeSimpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(requiredStr);        bodyBuilder.appendFormalLine("UISelectItem " + fieldValueId + "Item;");        bodyBuilder.appendFormalLine("for (" + parameterTypeSimpleTypeName + " "+ StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ " : "+ parameterTypeSimpleTypeName+ ".values()) {");        bodyBuilder.indent();        bodyBuilder.appendFormalLine(fieldValueId + "Item = (UISelectItem) application.createComponent(UISelectItem.COMPONENT_TYPE);");        bodyBuilder.appendFormalLine(fieldValueId + "Item.setItemLabel(" + StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ ".name());");        bodyBuilder.appendFormalLine(fieldValueId + "Item.setItemValue(" + StringUtils.uncapitalize(parameterTypeSimpleTypeName)+ ");");        bodyBuilder.appendFormalLine(getAddChildToComponent(fieldValueId,fieldValueId + "Item"));        bodyBuilder.indentRemove();        bodyBuilder.appendFormalLine("}");      }    }  } else   if (customData.keySet().contains(APPLICATION_TYPE_KEY)) {    if (customData.keySet().contains(ONE_TO_ONE_FIELD) && isInverseSideOfRelationship(field,ONE_TO_ONE)) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(fieldValueId + ".setValue(\"This relationship is managed from the " + simpleTypeName+ " side\");");    } else {      final JavaType converterType=new JavaType(destination.getPackage().getFullyQualifiedPackageName() + ".converter." + simpleTypeName+ "Converter");      builder.getImportRegistrationResolver().addImport(converterType);      if (action == Action.VIEW) {        bodyBuilder.appendFormalLine(htmlOutputTextStr);        bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");      } else {        builder.getImportRegistrationResolver().addImports(PRIMEFACES_AUTO_COMPLETE,fieldType);        bodyBuilder.appendFormalLine("AutoComplete " + fieldValueId + " = "+ getComponentCreation("AutoComplete"));        bodyBuilder.appendFormalLine(componentIdStr);        bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));        bodyBuilder.appendFormalLine(getSetCompleteMethod(fieldValueId,fieldName));        bodyBuilder.appendFormalLine(fieldValueId + ".setDropdown(true);");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"var\", expressionFactory.createValueExpression(elContext, \"" + fieldName+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"itemLabel\", expressionFactory.createValueExpression(elContext, \"" + getAutoCcompleteItemLabelValue(field,fieldName)+ "\", String.class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setValueExpression(\"itemValue\", expressionFactory.createValueExpression(elContext, \"#{" + fieldName+ "}\", "+ simpleTypeName+ ".class));");        bodyBuilder.appendFormalLine(fieldValueId + ".setConverter(new " + converterType.getSimpleTypeName()+ "());");        bodyBuilder.appendFormalLine(requiredStr);      }    }  } else {    if (action == Action.VIEW) {      bodyBuilder.appendFormalLine(htmlOutputTextStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName));    } else {      builder.getImportRegistrationResolver().addImport(PRIMEFACES_INPUT_TEXT);      bodyBuilder.appendFormalLine(inputTextStr);      bodyBuilder.appendFormalLine(componentIdStr);      bodyBuilder.appendFormalLine(getSetValueExpression(fieldValueId,fieldName,simpleTypeName));      bodyBuilder.appendFormalLine(requiredStr);    }  }  if (action != Action.VIEW) {    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId));    builder.getImportRegistrationResolver().addImport(PRIMEFACES_MESSAGE);    bodyBuilder.appendFormalLine("");    bodyBuilder.appendFormalLine("Message " + fieldValueId + "Message = "+ getComponentCreation("Message"));    bodyBuilder.appendFormalLine(fieldValueId + "Message.setId(\"" + fieldValueId+ "Message\");");    bodyBuilder.appendFormalLine(fieldValueId + "Message.setFor(\"" + fieldValueId+ "\");");    bodyBuilder.appendFormalLine(fieldValueId + "Message.setDisplay(\"icon\");");    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId + "Message"));  } else {    bodyBuilder.appendFormalLine(getAddToPanelText(fieldValueId));  }  bodyBuilder.appendFormalLine("");} @AT@ 50232 @LENGTH@ 93
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final BigDecimal sizeMaxValue=min != null ? new BigDecimal(min) : null; @AT@ 50232 @LENGTH@ 5
------INS SimpleType@@BigDecimal @TO@ VariableDeclarationStatement@@final BigDecimal sizeMaxValue=min != null ? new BigDecimal(min) : null; @AT@ 50238 @LENGTH@ 10
------INS VariableDeclarationFragment@@sizeMaxValue=min != null ? new BigDecimal(min) : null @TO@ VariableDeclarationStatement@@final BigDecimal sizeMaxValue=min != null ? new BigDecimal(min) : null; @AT@ 50249 @LENGTH@ 75
---------INS SimpleName@@sizeMaxValue @TO@ VariableDeclarationFragment@@sizeMaxValue=min != null ? new BigDecimal(min) : null @AT@ 50249 @LENGTH@ 12
---------INS ConditionalExpression@@min != null ? new BigDecimal(min) : null @TO@ VariableDeclarationFragment@@sizeMaxValue=min != null ? new BigDecimal(min) : null @AT@ 50264 @LENGTH@ 60
------------INS InfixExpression@@min != null @TO@ ConditionalExpression@@min != null ? new BigDecimal(min) : null @AT@ 50264 @LENGTH@ 11
---------------INS SimpleName@@min @TO@ InfixExpression@@min != null @AT@ 50264 @LENGTH@ 3
---------------INS Operator@@!= @TO@ InfixExpression@@min != null @AT@ 50267 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@min != null @AT@ 50271 @LENGTH@ 4
------------INS ClassInstanceCreation@@BigDecimal[min] @TO@ ConditionalExpression@@min != null ? new BigDecimal(min) : null @AT@ 50278 @LENGTH@ 19
---------------INS New@@new @TO@ ClassInstanceCreation@@BigDecimal[min] @AT@ 50278 @LENGTH@ 3
---------------INS SimpleType@@BigDecimal @TO@ ClassInstanceCreation@@BigDecimal[min] @AT@ 50282 @LENGTH@ 10
---------------INS SimpleName@@min @TO@ ClassInstanceCreation@@BigDecimal[min] @AT@ 50293 @LENGTH@ 3
------------INS NullLiteral@@null @TO@ ConditionalExpression@@min != null ? new BigDecimal(min) : null @AT@ 50320 @LENGTH@ 4


UPD IfStatement@@if (expected == null) {  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} else {  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @TO@ if (expected == null) {  actual=exchange.getOut().getMandatoryBody();  assertEquals("output body of: " + exchange,expected,actual);} else {  actual=exchange.getOut().getMandatoryBody(expected.getClass());} @AT@ 7322 @LENGTH@ 280
---UPD Block@@ThenBody:{  actual=ExchangeHelper.getMandatoryOutBody(exchange);  assertEquals("output body of: " + exchange,expected,actual);} @TO@ ThenBody:{  actual=exchange.getOut().getMandatoryBody();  assertEquals("output body of: " + exchange,expected,actual);} @AT@ 7344 @LENGTH@ 153
------UPD ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryOutBody(exchange) @TO@ Assignment:actual=exchange.getOut().getMandatoryBody() @AT@ 7358 @LENGTH@ 54
---------UPD Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange) @TO@ actual=exchange.getOut().getMandatoryBody() @AT@ 7358 @LENGTH@ 53
------------UPD MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange) @TO@ exchange.getOut().getMandatoryBody() @AT@ 7367 @LENGTH@ 44
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange) @AT@ 7349 @LENGTH@ 17
---------------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 7367 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:getMandatoryOutBody:[exchange] @TO@ MethodName:getMandatoryBody:[] @AT@ 7382 @LENGTH@ 29
------------------DEL SimpleName@@exchange @AT@ 7402 @LENGTH@ 8
---UPD Block@@ElseBody:{  actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass());} @TO@ ElseBody:{  actual=exchange.getOut().getMandatoryBody(expected.getClass());} @AT@ 7503 @LENGTH@ 99
------UPD ExpressionStatement@@Assignment:actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @TO@ Assignment:actual=exchange.getOut().getMandatoryBody(expected.getClass()) @AT@ 7517 @LENGTH@ 75
---------UPD Assignment@@actual=ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @TO@ actual=exchange.getOut().getMandatoryBody(expected.getClass()) @AT@ 7517 @LENGTH@ 74
------------UPD MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @TO@ exchange.getOut().getMandatoryBody(expected.getClass()) @AT@ 7526 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@ExchangeHelper.getMandatoryOutBody(exchange,expected.getClass()) @AT@ 7500 @LENGTH@ 17
---------------UPD SimpleName@@Name:ExchangeHelper @TO@ Name:exchange @AT@ 7526 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:getMandatoryOutBody:[exchange, expected.getClass()] @TO@ MethodName:getMandatoryBody:[expected.getClass()] @AT@ 7541 @LENGTH@ 50
------------------DEL SimpleName@@exchange @AT@ 7561 @LENGTH@ 8


UPD IfStatement@@if (!StringUtils.isBlank(string)) {  return null;} @TO@ if (StringUtils.isBlank(string)) {  return null;} @AT@ 3249 @LENGTH@ 70
---DEL PrefixExpression@@!StringUtils.isBlank(string) @AT@ 3253 @LENGTH@ 28
------DEL Operator@@! @AT@ 3253 @LENGTH@ 1
---MOV MethodInvocation@@StringUtils.isBlank(string) @TO@ IfStatement@@if (!StringUtils.isBlank(string)) {  return null;} @AT@ 3254 @LENGTH@ 27


DEL MethodDeclaration@@protected, boolean, MethodName:requiresRuntime, final OperationContext context,  @AT@ 1670 @LENGTH@ 94
---DEL Modifier@@protected @AT@ 1670 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1680 @LENGTH@ 7
---DEL SimpleName@@MethodName:requiresRuntime @AT@ 1688 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 1704 @LENGTH@ 30
------DEL Modifier@@final @AT@ 1704 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 1710 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 1727 @LENGTH@ 7
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1746 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1753 @LENGTH@ 4


UPD MethodDeclaration@@NoSuchEJBException, MethodName:instaceWasRemoved, String componentName, Object primaryKey,  @TO@ NoSuchEntityException, MethodName:instaceWasRemoved, String componentName, Object primaryKey,  @AT@ 18662 @LENGTH@ 59
---UPD SimpleType@@NoSuchEJBException @TO@ NoSuchEntityException @AT@ 18643 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:timerService.removeTimer(this) @TO@ MethodInvocation:timerService.persistTimer(this) @AT@ 16740 @LENGTH@ 31
---UPD MethodInvocation@@timerService.removeTimer(this) @TO@ timerService.persistTimer(this) @AT@ 16740 @LENGTH@ 30
------UPD SimpleName@@MethodName:removeTimer:[this] @TO@ MethodName:persistTimer:[this] @AT@ 16753 @LENGTH@ 17


UPD VariableDeclarationStatement@@final SimpleAnalyzer analyzer=new SimpleAnalyzer(); @TO@ final SimpleAnalyzer analyzer=new SimpleAnalyzer(Version.LUCENE_35); @AT@ 4244 @LENGTH@ 53
---UPD VariableDeclarationFragment@@analyzer=new SimpleAnalyzer() @TO@ analyzer=new SimpleAnalyzer(Version.LUCENE_35) @AT@ 4265 @LENGTH@ 31
------UPD ClassInstanceCreation@@SimpleAnalyzer[] @TO@ SimpleAnalyzer[Version.LUCENE_35] @AT@ 4276 @LENGTH@ 20
---------INS QualifiedName@@Version.LUCENE_35 @TO@ ClassInstanceCreation@@SimpleAnalyzer[] @AT@ 4295 @LENGTH@ 17
------------INS SimpleName@@Version @TO@ QualifiedName@@Version.LUCENE_35 @AT@ 4295 @LENGTH@ 7
------------INS SimpleName@@LUCENE_35 @TO@ QualifiedName@@Version.LUCENE_35 @AT@ 4303 @LENGTH@ 9


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1709 @LENGTH@ 166
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:performRuntime @AT@ 1724 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:destroy,  @TO@ protected, void, MethodName:preDestroy,  @AT@ 3716 @LENGTH@ 274
---UPD Modifier@@public @TO@ protected @AT@ 3716 @LENGTH@ 6
---UPD SimpleName@@MethodName:destroy @TO@ MethodName:preDestroy @AT@ 3728 @LENGTH@ 7
---DEL ExpressionStatement@@SuperMethodInvocation:super.destroy() @AT@ 3968 @LENGTH@ 16
------DEL SuperMethodInvocation@@super.destroy() @AT@ 3968 @LENGTH@ 15
---------DEL SimpleName@@MethodName:destroy:[] @AT@ 3974 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:context.isNormalServer() @TO@ BooleanLiteral:true @AT@ 2051 @LENGTH@ 32
---DEL MethodInvocation@@context.isNormalServer() @AT@ 2058 @LENGTH@ 24
------DEL SimpleName@@Name:context @AT@ 2058 @LENGTH@ 7
------DEL SimpleName@@MethodName:isNormalServer:[] @AT@ 2066 @LENGTH@ 16
---INS BooleanLiteral@@true @TO@ ReturnStatement@@MethodInvocation:context.isNormalServer() @AT@ 2058 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:config.setBeanCache(model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString()) @TO@ MethodInvocation:config.setClientMappingCache(model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString()) @AT@ 2555 @LENGTH@ 84
---UPD MethodInvocation@@config.setBeanCache(model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString()) @TO@ config.setClientMappingCache(model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString()) @AT@ 2555 @LENGTH@ 83
------UPD SimpleName@@MethodName:setBeanCache:[model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString()] @TO@ MethodName:setClientMappingCache:[model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString()] @AT@ 2562 @LENGTH@ 76


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2173 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2327 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2362 @LENGTH@ 91
------INS MethodInvocation@@UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2362 @LENGTH@ 90
---------INS QualifiedName@@Name:UnboundedQueueThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2362 @LENGTH@ 36
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@UnboundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2399 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2414 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2423 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2434 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2441 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2447 @LENGTH@ 4


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:DuplicateUserCheckState, final ConsoleWrapper theConsole, final StateValues stateValues,  @AT@ 1657 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1661 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1661 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1661 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1672 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1684 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1688 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1694 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 1708 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 1714 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1714 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1723 @LENGTH@ 20


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]Hit, [Serializable] @AT@ 933 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 933 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 941 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 948 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 954 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 959 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 959 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 978 @LENGTH@ 2


UPD TypeDeclaration@@[public]CamelTwitterWebSocketMain,  @TO@ [public, final]CamelTwitterWebSocketMain,  @AT@ 926 @LENGTH@ 2536
---INS Modifier@@final @TO@ TypeDeclaration@@[public]CamelTwitterWebSocketMain,  @AT@ 933 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:beanMap.put(bean.getClass().getName(),bean) @TO@ MethodInvocation:beanMap.put(bean.toString(),bean) @AT@ 3384 @LENGTH@ 45
---UPD MethodInvocation@@beanMap.put(bean.getClass().getName(),bean) @TO@ beanMap.put(bean.toString(),bean) @AT@ 3384 @LENGTH@ 44
------UPD SimpleName@@MethodName:put:[bean.getClass().getName(), bean] @TO@ MethodName:put:[bean.toString(), bean] @AT@ 3392 @LENGTH@ 36
---------UPD MethodInvocation@@bean.getClass().getName() @TO@ bean.toString() @AT@ 3396 @LENGTH@ 25
------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 3396 @LENGTH@ 15
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:toString:[] @AT@ 3412 @LENGTH@ 9


UPD SwitchStatement@@switch (attribute) {case KEY_ALIAS:case PASSWORD:case CERTIFICATE_KEY_FILE:case CIPHER_SUITE:case PROTOCOL:case CA_REVOCATION_URL:  ModClusterSSLResourceDefinition.ATTRIBUTES_BY_NAME.get(attribute.getLocalName()).parseAndSetParameter(value,ssl,reader);break;default :throw unexpectedAttribute(reader,i);} @TO@ switch (attribute) {case KEY_ALIAS:case PASSWORD:case CERTIFICATE_KEY_FILE:case CIPHER_SUITE:case PROTOCOL:case CA_CERTIFICATE_FILE:case CA_REVOCATION_URL:  ModClusterSSLResourceDefinition.ATTRIBUTES_BY_NAME.get(attribute.getLocalName()).parseAndSetParameter(value,ssl,reader);break;default :throw unexpectedAttribute(reader,i);} @AT@ 9194 @LENGTH@ 458
---INS SwitchCase@@case CA_CERTIFICATE_FILE: @TO@ SwitchStatement@@switch (attribute) {case KEY_ALIAS:case PASSWORD:case CERTIFICATE_KEY_FILE:case CIPHER_SUITE:case PROTOCOL:case CA_REVOCATION_URL:  ModClusterSSLResourceDefinition.ATTRIBUTES_BY_NAME.get(attribute.getLocalName()).parseAndSetParameter(value,ssl,reader);break;default :throw unexpectedAttribute(reader,i);} @AT@ 9379 @LENGTH@ 25
------INS SimpleName@@CA_CERTIFICATE_FILE @TO@ SwitchCase@@case CA_CERTIFICATE_FILE: @AT@ 9384 @LENGTH@ 19


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId,  @AT@ 1418 @LENGTH@ 1045
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient,  @AT@ 1477 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 1477 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 1483 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 1490 @LENGTH@ 11


UPD ReturnStatement@@CastExpression:(ConfigurationNode)nds.get(0) @TO@ MethodInvocation:nds.get(0) @AT@ 6983 @LENGTH@ 38
---DEL CastExpression@@(ConfigurationNode)nds.get(0) @AT@ 6990 @LENGTH@ 30
------DEL SimpleType@@ConfigurationNode @AT@ 6991 @LENGTH@ 17
---MOV MethodInvocation@@nds.get(0) @TO@ ReturnStatement@@CastExpression:(ConfigurationNode)nds.get(0) @AT@ 7010 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:SSOBaseCase.executeFormAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @TO@ MethodInvocation:SSOTestBase.executeFormAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @AT@ 3137 @LENGTH@ 79
---UPD MethodInvocation@@SSOBaseCase.executeFormAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @TO@ SSOTestBase.executeFormAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log) @AT@ 3137 @LENGTH@ 78
------UPD SimpleName@@Name:SSOBaseCase @TO@ Name:SSOTestBase @AT@ 3137 @LENGTH@ 11


INS IfStatement@@if (underlyingEntityManager.isOpen()) {  underlyingEntityManager.close();} @TO@ MethodDeclaration@@public, void, MethodName:containerClose,  @AT@ 4941 @LENGTH@ 94
---INS MethodInvocation@@underlyingEntityManager.isOpen() @TO@ IfStatement@@if (underlyingEntityManager.isOpen()) {  underlyingEntityManager.close();} @AT@ 4945 @LENGTH@ 32
------INS SimpleName@@Name:underlyingEntityManager @TO@ MethodInvocation@@underlyingEntityManager.isOpen() @AT@ 4945 @LENGTH@ 23
------INS SimpleName@@MethodName:isOpen:[] @TO@ MethodInvocation@@underlyingEntityManager.isOpen() @AT@ 4969 @LENGTH@ 8
---INS Block@@ThenBody:{  underlyingEntityManager.close();} @TO@ IfStatement@@if (underlyingEntityManager.isOpen()) {  underlyingEntityManager.close();} @AT@ 4979 @LENGTH@ 56
------MOV ExpressionStatement@@MethodInvocation:underlyingEntityManager.close() @TO@ Block@@ThenBody:{  underlyingEntityManager.close();} @AT@ 4941 @LENGTH@ 32


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]HttpConfiguration, [Serializable] @AT@ 958 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 958 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 966 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 973 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 979 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 984 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 984 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1003 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @TO@ TypeDeclaration@@[public]CSVPrinterTest, TestCase @AT@ 3591 @LENGTH@ 276
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3591 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3598 @LENGTH@ 4
---INS SimpleName@@MethodName:testPrintNullValues @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3603 @LENGTH@ 19
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3632 @LENGTH@ 11
---INS VariableDeclarationStatement@@StringWriter sw=new StringWriter(); @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3654 @LENGTH@ 37
------INS SimpleType@@StringWriter @TO@ VariableDeclarationStatement@@StringWriter sw=new StringWriter(); @AT@ 3654 @LENGTH@ 12
------INS VariableDeclarationFragment@@sw=new StringWriter() @TO@ VariableDeclarationStatement@@StringWriter sw=new StringWriter(); @AT@ 3667 @LENGTH@ 23
---------INS SimpleName@@sw @TO@ VariableDeclarationFragment@@sw=new StringWriter() @AT@ 3667 @LENGTH@ 2
---------INS ClassInstanceCreation@@StringWriter[] @TO@ VariableDeclarationFragment@@sw=new StringWriter() @AT@ 3672 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@StringWriter[] @AT@ 3672 @LENGTH@ 3
------------INS SimpleType@@StringWriter @TO@ ClassInstanceCreation@@StringWriter[] @AT@ 3676 @LENGTH@ 12
---INS VariableDeclarationStatement@@CSVPrinter printer=new CSVPrinter(sw,CSVFormat.DEFAULT); @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3700 @LENGTH@ 59
------INS SimpleType@@CSVPrinter @TO@ VariableDeclarationStatement@@CSVPrinter printer=new CSVPrinter(sw,CSVFormat.DEFAULT); @AT@ 3700 @LENGTH@ 10
------INS VariableDeclarationFragment@@printer=new CSVPrinter(sw,CSVFormat.DEFAULT) @TO@ VariableDeclarationStatement@@CSVPrinter printer=new CSVPrinter(sw,CSVFormat.DEFAULT); @AT@ 3711 @LENGTH@ 47
---------INS SimpleName@@printer @TO@ VariableDeclarationFragment@@printer=new CSVPrinter(sw,CSVFormat.DEFAULT) @AT@ 3711 @LENGTH@ 7
---------INS ClassInstanceCreation@@CSVPrinter[sw, CSVFormat.DEFAULT] @TO@ VariableDeclarationFragment@@printer=new CSVPrinter(sw,CSVFormat.DEFAULT) @AT@ 3721 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@CSVPrinter[sw, CSVFormat.DEFAULT] @AT@ 3721 @LENGTH@ 3
------------INS SimpleType@@CSVPrinter @TO@ ClassInstanceCreation@@CSVPrinter[sw, CSVFormat.DEFAULT] @AT@ 3725 @LENGTH@ 10
------------INS SimpleName@@sw @TO@ ClassInstanceCreation@@CSVPrinter[sw, CSVFormat.DEFAULT] @AT@ 3736 @LENGTH@ 2
------------INS QualifiedName@@CSVFormat.DEFAULT @TO@ ClassInstanceCreation@@CSVPrinter[sw, CSVFormat.DEFAULT] @AT@ 3740 @LENGTH@ 17
---------------INS SimpleName@@CSVFormat @TO@ QualifiedName@@CSVFormat.DEFAULT @AT@ 3740 @LENGTH@ 9
---------------INS SimpleName@@DEFAULT @TO@ QualifiedName@@CSVFormat.DEFAULT @AT@ 3750 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:printer.println("a",null,"b") @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3768 @LENGTH@ 32
------INS MethodInvocation@@printer.println("a",null,"b") @TO@ ExpressionStatement@@MethodInvocation:printer.println("a",null,"b") @AT@ 3768 @LENGTH@ 31
---------INS SimpleName@@Name:printer @TO@ MethodInvocation@@printer.println("a",null,"b") @AT@ 3768 @LENGTH@ 7
---------INS SimpleName@@MethodName:println:["a", null, "b"] @TO@ MethodInvocation@@printer.println("a",null,"b") @AT@ 3776 @LENGTH@ 23
------------INS StringLiteral@@"a" @TO@ SimpleName@@MethodName:println:["a", null, "b"] @AT@ 3784 @LENGTH@ 3
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:println:["a", null, "b"] @AT@ 3789 @LENGTH@ 4
------------INS StringLiteral@@"b" @TO@ SimpleName@@MethodName:println:["a", null, "b"] @AT@ 3795 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals("a,,b" + lineSeparator,sw.toString()) @TO@ MethodDeclaration@@public, void, MethodName:testPrintNullValues, IOException,  @AT@ 3809 @LENGTH@ 52
------INS MethodInvocation@@assertEquals("a,,b" + lineSeparator,sw.toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("a,,b" + lineSeparator,sw.toString()) @AT@ 3809 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertEquals:["a,,b" + lineSeparator, sw.toString()] @TO@ MethodInvocation@@assertEquals("a,,b" + lineSeparator,sw.toString()) @AT@ 3809 @LENGTH@ 51
------------INS InfixExpression@@"a,,b" + lineSeparator @TO@ SimpleName@@MethodName:assertEquals:["a,,b" + lineSeparator, sw.toString()] @AT@ 3822 @LENGTH@ 22
---------------INS StringLiteral@@"a,,b" @TO@ InfixExpression@@"a,,b" + lineSeparator @AT@ 3822 @LENGTH@ 6
---------------INS Operator@@+ @TO@ InfixExpression@@"a,,b" + lineSeparator @AT@ 3828 @LENGTH@ 1
---------------INS SimpleName@@lineSeparator @TO@ InfixExpression@@"a,,b" + lineSeparator @AT@ 3831 @LENGTH@ 13
------------INS MethodInvocation@@sw.toString() @TO@ SimpleName@@MethodName:assertEquals:["a,,b" + lineSeparator, sw.toString()] @AT@ 3846 @LENGTH@ 13
---------------INS SimpleName@@Name:sw @TO@ MethodInvocation@@sw.toString() @AT@ 3846 @LENGTH@ 2
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sw.toString() @AT@ 3849 @LENGTH@ 10


UPD TryStatement@@try {  persistenceProviderAdaptor.afterCreateContainerEntityManagerFactory(pu);}  finally {  pu.setAnnotationIndex(null);  pu.setTempClassLoaderFactory(null);} @TO@ try {  persistenceProviderAdaptor.afterCreateContainerEntityManagerFactory(pu);}  finally {  pu.setAnnotationIndex(null);} @AT@ 6046 @LENGTH@ 442
---UPD Block@@FinallyBody:{  pu.setAnnotationIndex(null);  pu.setTempClassLoaderFactory(null);} @TO@ FinallyBody:{  pu.setAnnotationIndex(null);} @AT@ 6163 @LENGTH@ 325
------DEL ExpressionStatement@@MethodInvocation:pu.setTempClassLoaderFactory(null) @AT@ 6333 @LENGTH@ 35
---------DEL MethodInvocation@@pu.setTempClassLoaderFactory(null) @AT@ 6333 @LENGTH@ 34
------------DEL SimpleName@@Name:pu @AT@ 6333 @LENGTH@ 2
------------DEL SimpleName@@MethodName:setTempClassLoaderFactory:[null] @AT@ 6336 @LENGTH@ 31
---------------DEL NullLiteral@@null @AT@ 6362 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:PACKAGES_IN_JAR_CACHE.remove(pu) @TO@ MethodDeclaration@@static, void, MethodName:cleanup, PersistenceUnitMetadata pu,  @AT@ 5980 @LENGTH@ 33
---INS MethodInvocation@@PACKAGES_IN_JAR_CACHE.remove(pu) @TO@ ExpressionStatement@@MethodInvocation:PACKAGES_IN_JAR_CACHE.remove(pu) @AT@ 5980 @LENGTH@ 32
------INS SimpleName@@Name:PACKAGES_IN_JAR_CACHE @TO@ MethodInvocation@@PACKAGES_IN_JAR_CACHE.remove(pu) @AT@ 5980 @LENGTH@ 21
------INS SimpleName@@MethodName:remove:[pu] @TO@ MethodInvocation@@PACKAGES_IN_JAR_CACHE.remove(pu) @AT@ 6002 @LENGTH@ 10
---------INS SimpleName@@pu @TO@ SimpleName@@MethodName:remove:[pu] @AT@ 6009 @LENGTH@ 2


UPD ReturnStatement@@MethodInvocation:DeploymentDescription.getDeployDeploymentOperation(locale) @TO@ MethodInvocation:DeploymentDescription.getReplaceDeploymentOperation(locale) @AT@ 3566 @LENGTH@ 66
---UPD MethodInvocation@@DeploymentDescription.getDeployDeploymentOperation(locale) @TO@ DeploymentDescription.getReplaceDeploymentOperation(locale) @AT@ 3573 @LENGTH@ 58
------UPD SimpleName@@MethodName:getDeployDeploymentOperation:[locale] @TO@ MethodName:getReplaceDeploymentOperation:[locale] @AT@ 3595 @LENGTH@ 36


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[private, static]MyOrderTypeConverter, [TypeConverter] @AT@ 3531 @LENGTH@ 239
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3531 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3542 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3544 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3557 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3557 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 3557 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 3563 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 3566 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3572 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3572 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3581 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3591 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 3591 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 3598 @LENGTH@ 5
---INS TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 3619 @LENGTH@ 141
------INS ReturnStatement@@MethodInvocation:convertTo(type,exchange,value) @TO@ TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @AT@ 3641 @LENGTH@ 40
---------INS MethodInvocation@@convertTo(type,exchange,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,exchange,value) @AT@ 3648 @LENGTH@ 32
------------INS SimpleName@@MethodName:convertTo:[type, exchange, value] @TO@ MethodInvocation@@convertTo(type,exchange,value) @AT@ 3648 @LENGTH@ 32
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 3658 @LENGTH@ 4
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 3664 @LENGTH@ 8
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, exchange, value] @AT@ 3674 @LENGTH@ 5
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return convertTo(type,exchange,value);} catch (Exception e) {  return null;} @AT@ 3696 @LENGTH@ 64
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3703 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3703 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3713 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3734 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3741 @LENGTH@ 4


UPD IfStatement@@if (!syncRegistered) {  instance.store();  releaseInstance(instance,true);} @TO@ if (currentTransactionKey == null) {  instance.store();  releaseInstance(instance,true);} else if (!syncRegistered) {  lock.unlock();} @AT@ 6898 @LENGTH@ 143
---INS InfixExpression@@currentTransactionKey == null @TO@ IfStatement@@if (!syncRegistered) {  instance.store();  releaseInstance(instance,true);} @AT@ 6866 @LENGTH@ 29
------INS SimpleName@@currentTransactionKey @TO@ InfixExpression@@currentTransactionKey == null @AT@ 6866 @LENGTH@ 21
------INS Operator@@== @TO@ InfixExpression@@currentTransactionKey == null @AT@ 6887 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@currentTransactionKey == null @AT@ 6891 @LENGTH@ 4
---INS Block@@ElseBody:if (!syncRegistered) {  lock.unlock();} @TO@ IfStatement@@if (!syncRegistered) {  instance.store();  releaseInstance(instance,true);} @AT@ 7025 @LENGTH@ 82
------INS IfStatement@@if (!syncRegistered) {  lock.unlock();} @TO@ Block@@ElseBody:if (!syncRegistered) {  lock.unlock();} @AT@ 7025 @LENGTH@ 82
---------MOV PrefixExpression@@!syncRegistered @TO@ IfStatement@@if (!syncRegistered) {  lock.unlock();} @AT@ 6902 @LENGTH@ 15
---------INS Block@@ThenBody:{  lock.unlock();} @TO@ IfStatement@@if (!syncRegistered) {  lock.unlock();} @AT@ 7045 @LENGTH@ 62
------------INS ExpressionStatement@@MethodInvocation:lock.unlock() @TO@ Block@@ThenBody:{  lock.unlock();} @AT@ 7071 @LENGTH@ 14
---------------INS MethodInvocation@@lock.unlock() @TO@ ExpressionStatement@@MethodInvocation:lock.unlock() @AT@ 7071 @LENGTH@ 13
------------------INS SimpleName@@Name:lock @TO@ MethodInvocation@@lock.unlock() @AT@ 7071 @LENGTH@ 4
------------------INS SimpleName@@MethodName:unlock:[] @TO@ MethodInvocation@@lock.unlock() @AT@ 7076 @LENGTH@ 8


INS TryStatement@@try {  SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class);  fail("Should have thrown exception");} catch (TypeConversionException e) {  assertIsInstanceOf(NumberFormatException.class,e.getCause());} @TO@ MethodDeclaration@@public, void, MethodName:testResultType, Exception,  @AT@ 2027 @LENGTH@ 314
---MOV ExpressionStatement@@MethodInvocation:assertEquals(null,SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class)) @TO@ TryStatement@@try {  SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class);  fail("Should have thrown exception");} catch (TypeConversionException e) {  assertIsInstanceOf(NumberFormatException.class,e.getCause());} @AT@ 2002 @LENGTH@ 96
------DEL MethodInvocation@@assertEquals(null,SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class)) @AT@ 2002 @LENGTH@ 95
---------DEL SimpleName@@MethodName:assertEquals:[null, SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class)] @AT@ 2002 @LENGTH@ 95
------------DEL NullLiteral@@null @AT@ 2015 @LENGTH@ 4
------MOV MethodInvocation@@SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(null,SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class)) @AT@ 2021 @LENGTH@ 75
---INS ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @TO@ TryStatement@@try {  SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class);  fail("Should have thrown exception");} catch (TypeConversionException e) {  assertIsInstanceOf(NumberFormatException.class,e.getCause());} @AT@ 2173 @LENGTH@ 37
------INS MethodInvocation@@fail("Should have thrown exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @AT@ 2173 @LENGTH@ 36
---------INS SimpleName@@MethodName:fail:["Should have thrown exception"] @TO@ MethodInvocation@@fail("Should have thrown exception") @AT@ 2173 @LENGTH@ 36
------------INS StringLiteral@@"Should have thrown exception" @TO@ SimpleName@@MethodName:fail:["Should have thrown exception"] @AT@ 2178 @LENGTH@ 30
---INS CatchClause@@catch (TypeConversionException e) {  assertIsInstanceOf(NumberFormatException.class,e.getCause());} @TO@ TryStatement@@try {  SimpleBuilder.simple("${body}",int.class).evaluate(exchange,Object.class);  fail("Should have thrown exception");} catch (TypeConversionException e) {  assertIsInstanceOf(NumberFormatException.class,e.getCause());} @AT@ 2221 @LENGTH@ 120
------INS SingleVariableDeclaration@@TypeConversionException e @TO@ CatchClause@@catch (TypeConversionException e) {  assertIsInstanceOf(NumberFormatException.class,e.getCause());} @AT@ 2228 @LENGTH@ 25
---------INS SimpleType@@TypeConversionException @TO@ SingleVariableDeclaration@@TypeConversionException e @AT@ 2228 @LENGTH@ 23
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@TypeConversionException e @AT@ 2252 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:assertIsInstanceOf(NumberFormatException.class,e.getCause()) @TO@ CatchClause@@catch (TypeConversionException e) {  assertIsInstanceOf(NumberFormatException.class,e.getCause());} @AT@ 2269 @LENGTH@ 62
---------INS MethodInvocation@@assertIsInstanceOf(NumberFormatException.class,e.getCause()) @TO@ ExpressionStatement@@MethodInvocation:assertIsInstanceOf(NumberFormatException.class,e.getCause()) @AT@ 2269 @LENGTH@ 61
------------INS SimpleName@@MethodName:assertIsInstanceOf:[NumberFormatException.class, e.getCause()] @TO@ MethodInvocation@@assertIsInstanceOf(NumberFormatException.class,e.getCause()) @AT@ 2269 @LENGTH@ 61
---------------INS TypeLiteral@@NumberFormatException.class @TO@ SimpleName@@MethodName:assertIsInstanceOf:[NumberFormatException.class, e.getCause()] @AT@ 2288 @LENGTH@ 27
---------------INS MethodInvocation@@e.getCause() @TO@ SimpleName@@MethodName:assertIsInstanceOf:[NumberFormatException.class, e.getCause()] @AT@ 2317 @LENGTH@ 12
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 2317 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 2319 @LENGTH@ 10


INS TryStatement@@try {  return getLatestFavouriteTweet();} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@public, String, MethodName:getStartupNotifications,  @AT@ 2976 @LENGTH@ 126
---INS ReturnStatement@@MethodInvocation:getLatestFavouriteTweet() @TO@ TryStatement@@try {  return getLatestFavouriteTweet();} catch (Exception e) {  return null;} @AT@ 2994 @LENGTH@ 33
------MOV MethodInvocation@@MethodName:getLatestFavouriteTweet:[] @TO@ ReturnStatement@@MethodInvocation:getLatestFavouriteTweet() @AT@ 2983 @LENGTH@ 25
---INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  return getLatestFavouriteTweet();} catch (Exception e) {  return null;} @AT@ 3046 @LENGTH@ 56
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3053 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3053 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3063 @LENGTH@ 1
------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 3080 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3087 @LENGTH@ 4


INS MethodDeclaration@@List<TimerEntity>, MethodName:loadActiveTimers, String timedObjectId, Object primaryKey,  @TO@ TypeDeclaration@@[public]TimerPersistence,  @AT@ 2068 @LENGTH@ 58
---INS ParameterizedType@@List<TimerEntity> @TO@ MethodDeclaration@@List<TimerEntity>, MethodName:loadActiveTimers, String timedObjectId, Object primaryKey,  @AT@ 2050 @LENGTH@ 17
------INS SimpleType@@List @TO@ ParameterizedType@@List<TimerEntity> @AT@ 2050 @LENGTH@ 4
------INS SimpleType@@TimerEntity @TO@ ParameterizedType@@List<TimerEntity> @AT@ 2055 @LENGTH@ 11
---INS SimpleName@@MethodName:loadActiveTimers @TO@ MethodDeclaration@@List<TimerEntity>, MethodName:loadActiveTimers, String timedObjectId, Object primaryKey,  @AT@ 2068 @LENGTH@ 16
---INS SingleVariableDeclaration@@String timedObjectId @TO@ MethodDeclaration@@List<TimerEntity>, MethodName:loadActiveTimers, String timedObjectId, Object primaryKey,  @AT@ 2085 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String timedObjectId @AT@ 2085 @LENGTH@ 6
------INS SimpleName@@timedObjectId @TO@ SingleVariableDeclaration@@String timedObjectId @AT@ 2092 @LENGTH@ 13
---INS SingleVariableDeclaration@@Object primaryKey @TO@ MethodDeclaration@@List<TimerEntity>, MethodName:loadActiveTimers, String timedObjectId, Object primaryKey,  @AT@ 2107 @LENGTH@ 17
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object primaryKey @AT@ 2107 @LENGTH@ 6
------INS SimpleName@@primaryKey @TO@ SingleVariableDeclaration@@Object primaryKey @AT@ 2114 @LENGTH@ 10


DEL ExpressionStatement@@MethodInvocation:add(denied,InvocationType.ENTITY_EJB_CREATE,MethodType.GET_TIMER_SERVICE) @AT@ 753 @LENGTH@ 76
---DEL MethodInvocation@@add(denied,InvocationType.ENTITY_EJB_CREATE,MethodType.GET_TIMER_SERVICE) @AT@ 753 @LENGTH@ 75
------DEL SimpleName@@MethodName:add:[denied, InvocationType.ENTITY_EJB_CREATE, MethodType.GET_TIMER_SERVICE] @AT@ 753 @LENGTH@ 75
---------DEL SimpleName@@denied @AT@ 757 @LENGTH@ 6
---------DEL QualifiedName@@InvocationType.ENTITY_EJB_CREATE @AT@ 765 @LENGTH@ 32
------------DEL SimpleName@@InvocationType @AT@ 765 @LENGTH@ 14
------------DEL SimpleName@@ENTITY_EJB_CREATE @AT@ 780 @LENGTH@ 17
---------DEL QualifiedName@@MethodType.GET_TIMER_SERVICE @AT@ 799 @LENGTH@ 28
------------DEL SimpleName@@MethodType @AT@ 799 @LENGTH@ 10
------------DEL SimpleName@@GET_TIMER_SERVICE @AT@ 810 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:ejbRemoteConnectorServiceBuilder.addDependency(EJB3ThreadPoolAdd.BASE_SERVICE_NAME.append(threadPoolName),ExecutorService.class,ejbRemoteConnectorService.getExecutorService()).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,ejbRemoteConnectorService.getDeploymentRepositoryInjector()).addDependency(EJBRemoteTransactionsRepository.SERVICE_NAME,EJBRemoteTransactionsRepository.class,ejbRemoteConnectorService.getEJBRemoteTransactionsRepositoryInjector()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,ejbRemoteConnectorService.getClusterRegistryInjector()).addDependency(ServerEnvironmentService.SERVICE_NAME,ServerEnvironment.class,ejbRemoteConnectorService.getServerEnvironmentInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,EJBRemoteConnectorService.EJB_REMOTE_CONNECTOR_CLIENT_MAPPINGS_REGISTRY_SERVICE,Registry.class,ejbRemoteConnectorService.getClientMappingsRegistryServiceInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,clientMappingCacheServiceName,Cache.class,ejbRemoteConnectorService.getClientMappingsBackingCacheInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @TO@ MethodInvocation:ejbRemoteConnectorServiceBuilder.addDependency(EJB3ThreadPoolAdd.BASE_SERVICE_NAME.append(threadPoolName),ExecutorService.class,ejbRemoteConnectorService.getExecutorService()).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,ejbRemoteConnectorService.getDeploymentRepositoryInjector()).addDependency(EJBRemoteTransactionsRepository.SERVICE_NAME,EJBRemoteTransactionsRepository.class,ejbRemoteConnectorService.getEJBRemoteTransactionsRepositoryInjector()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,ejbRemoteConnectorService.getClusterRegistryInjector()).addDependency(ServerEnvironmentService.SERVICE_NAME,ServerEnvironment.class,ejbRemoteConnectorService.getServerEnvironmentInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,clientMappingCacheServiceName,Cache.class,ejbRemoteConnectorService.getClientMappingsBackingCacheInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @AT@ 10261 @LENGTH@ 1740
---UPD MethodInvocation@@ejbRemoteConnectorServiceBuilder.addDependency(EJB3ThreadPoolAdd.BASE_SERVICE_NAME.append(threadPoolName),ExecutorService.class,ejbRemoteConnectorService.getExecutorService()).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,ejbRemoteConnectorService.getDeploymentRepositoryInjector()).addDependency(EJBRemoteTransactionsRepository.SERVICE_NAME,EJBRemoteTransactionsRepository.class,ejbRemoteConnectorService.getEJBRemoteTransactionsRepositoryInjector()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,ejbRemoteConnectorService.getClusterRegistryInjector()).addDependency(ServerEnvironmentService.SERVICE_NAME,ServerEnvironment.class,ejbRemoteConnectorService.getServerEnvironmentInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,EJBRemoteConnectorService.EJB_REMOTE_CONNECTOR_CLIENT_MAPPINGS_REGISTRY_SERVICE,Registry.class,ejbRemoteConnectorService.getClientMappingsRegistryServiceInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,clientMappingCacheServiceName,Cache.class,ejbRemoteConnectorService.getClientMappingsBackingCacheInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @TO@ ejbRemoteConnectorServiceBuilder.addDependency(EJB3ThreadPoolAdd.BASE_SERVICE_NAME.append(threadPoolName),ExecutorService.class,ejbRemoteConnectorService.getExecutorService()).addDependency(DeploymentRepository.SERVICE_NAME,DeploymentRepository.class,ejbRemoteConnectorService.getDeploymentRepositoryInjector()).addDependency(EJBRemoteTransactionsRepository.SERVICE_NAME,EJBRemoteTransactionsRepository.class,ejbRemoteConnectorService.getEJBRemoteTransactionsRepositoryInjector()).addDependency(GroupMembershipNotifierRegistryService.SERVICE_NAME,GroupMembershipNotifierRegistry.class,ejbRemoteConnectorService.getClusterRegistryInjector()).addDependency(ServerEnvironmentService.SERVICE_NAME,ServerEnvironment.class,ejbRemoteConnectorService.getServerEnvironmentInjector()).addDependency(ServiceBuilder.DependencyType.OPTIONAL,clientMappingCacheServiceName,Cache.class,ejbRemoteConnectorService.getClientMappingsBackingCacheInjector()).setInitialMode(ServiceController.Mode.ACTIVE) @AT@ 10261 @LENGTH@ 1739
------DEL MethodInvocation@@MethodName:addDependency:[ServiceBuilder.DependencyType.OPTIONAL, EJBRemoteConnectorService.EJB_REMOTE_CONNECTOR_CLIENT_MAPPINGS_REGISTRY_SERVICE, Registry.class, ejbRemoteConnectorService.getClientMappingsRegistryServiceInjector()] @AT@ 10261 @LENGTH@ 1311
---------DEL QualifiedName@@ServiceBuilder.DependencyType.OPTIONAL @AT@ 11366 @LENGTH@ 38
------------DEL QualifiedName@@ServiceBuilder.DependencyType @AT@ 11366 @LENGTH@ 29
---------------DEL SimpleName@@ServiceBuilder @AT@ 11366 @LENGTH@ 14
---------------DEL SimpleName@@DependencyType @AT@ 11381 @LENGTH@ 14
------------DEL SimpleName@@OPTIONAL @AT@ 11396 @LENGTH@ 8
---------DEL QualifiedName@@EJBRemoteConnectorService.EJB_REMOTE_CONNECTOR_CLIENT_MAPPINGS_REGISTRY_SERVICE @AT@ 11406 @LENGTH@ 79
------------DEL SimpleName@@EJBRemoteConnectorService @AT@ 11406 @LENGTH@ 25
------------DEL SimpleName@@EJB_REMOTE_CONNECTOR_CLIENT_MAPPINGS_REGISTRY_SERVICE @AT@ 11432 @LENGTH@ 53
---------DEL TypeLiteral@@Registry.class @AT@ 11487 @LENGTH@ 14
---------DEL MethodInvocation@@ejbRemoteConnectorService.getClientMappingsRegistryServiceInjector() @AT@ 11503 @LENGTH@ 68
------------DEL SimpleName@@Name:ejbRemoteConnectorService @AT@ 11503 @LENGTH@ 25
------------DEL SimpleName@@MethodName:getClientMappingsRegistryServiceInjector:[] @AT@ 11529 @LENGTH@ 42


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PropertyFileFinder, ConsoleWrapper theConsole, final StateValues stateValues,  @AT@ 2865 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2869 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2869 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2869 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 2880 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2892 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 2896 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 2902 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 2916 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 2922 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2922 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 2931 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:httpExchange.setURI(uri) @TO@ MethodInvocation:httpExchange.setRequestURI(uri) @AT@ 9721 @LENGTH@ 25
---UPD MethodInvocation@@httpExchange.setURI(uri) @TO@ httpExchange.setRequestURI(uri) @AT@ 9721 @LENGTH@ 24
------UPD SimpleName@@MethodName:setURI:[uri] @TO@ MethodName:setRequestURI:[uri] @AT@ 9734 @LENGTH@ 11


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyConfiguration();      ROOT_LOGGER.debugf("Mod_cluster ProxyConfiguration %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyConfiguration();      ROOT_LOGGER.debugf("Mod_cluster ProxyConfiguration %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2084 @LENGTH@ 1329
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2088 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2088 @LENGTH@ 17
------DEL Operator@@== @AT@ 2105 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2109 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2109 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2109 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2126 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2131 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      Map<InetSocketAddress,String> map=modcluster.getProxyConfiguration();      ROOT_LOGGER.debugf("Mod_cluster ProxyConfiguration %s",map);      if (!map.isEmpty()) {        final ModelNode result=new ModelNode();        Object[] addr=map.keySet().toArray();        for (int i=0; i < addr.length; i++) {          InetSocketAddress address=(InetSocketAddress)addr[i];          result.add(address.getHostName() + ":" + address.getPort());          result.add(map.get(addr[i]));        }        context.getResult().set(result);      }      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 2088 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2088 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2088 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2096 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:AttributeAccess.Storage.valueOf(currentNode.get(descriptor).asString().toUpperCase()) @TO@ MethodInvocation:AttributeAccess.Storage.valueOf(currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH)) @AT@ 25002 @LENGTH@ 86
---UPD MethodInvocation@@AttributeAccess.Storage.valueOf(currentNode.get(descriptor).asString().toUpperCase()) @TO@ AttributeAccess.Storage.valueOf(currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH)) @AT@ 25002 @LENGTH@ 85
------UPD SimpleName@@MethodName:valueOf:[currentNode.get(descriptor).asString().toUpperCase()] @TO@ MethodName:valueOf:[currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH)] @AT@ 25026 @LENGTH@ 61
---------UPD MethodInvocation@@currentNode.get(descriptor).asString().toUpperCase() @TO@ currentNode.get(descriptor).asString().toUpperCase(Locale.ENGLISH) @AT@ 25034 @LENGTH@ 52
------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 25073 @LENGTH@ 13
---------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 25124 @LENGTH@ 14
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 25124 @LENGTH@ 6
------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 25131 @LENGTH@ 7


UPD VariableDeclarationStatement@@final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,0); @TO@ final SubsystemRegistration subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,1); @AT@ 2771 @LENGTH@ 88
---UPD VariableDeclarationFragment@@subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,0) @TO@ subsystem=context.registerSubsystem(SUBSYSTEM_NAME,1,1) @AT@ 2799 @LENGTH@ 59
------UPD MethodInvocation@@context.registerSubsystem(SUBSYSTEM_NAME,1,0) @TO@ context.registerSubsystem(SUBSYSTEM_NAME,1,1) @AT@ 2811 @LENGTH@ 47
---------UPD SimpleName@@MethodName:registerSubsystem:[SUBSYSTEM_NAME, 1, 0] @TO@ MethodName:registerSubsystem:[SUBSYSTEM_NAME, 1, 1] @AT@ 2819 @LENGTH@ 39
------------UPD NumberLiteral@@0 @TO@ 1 @AT@ 2856 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:clone.put(entry.getKey(),new HashSet<InetAddress>(entry.getValue())) @TO@ MethodInvocation:clone.put(entry.getKey(),new LinkedHashSet<InetAddress>(entry.getValue())) @AT@ 3799 @LENGTH@ 70
---UPD MethodInvocation@@clone.put(entry.getKey(),new HashSet<InetAddress>(entry.getValue())) @TO@ clone.put(entry.getKey(),new LinkedHashSet<InetAddress>(entry.getValue())) @AT@ 3799 @LENGTH@ 69
------UPD SimpleName@@MethodName:put:[entry.getKey(), new HashSet<InetAddress>(entry.getValue())] @TO@ MethodName:put:[entry.getKey(), new LinkedHashSet<InetAddress>(entry.getValue())] @AT@ 3805 @LENGTH@ 63
---------UPD ClassInstanceCreation@@HashSet<InetAddress>[entry.getValue()] @TO@ LinkedHashSet<InetAddress>[entry.getValue()] @AT@ 3825 @LENGTH@ 42
------------UPD ParameterizedType@@HashSet<InetAddress> @TO@ LinkedHashSet<InetAddress> @AT@ 3829 @LENGTH@ 20
---------------UPD SimpleType@@HashSet @TO@ LinkedHashSet @AT@ 3829 @LENGTH@ 7


UPD IfStatement@@if (!componentInstance.isRemoved() && !componentInstance.isDiscarded()) {  componentInstance.store();} @TO@ if (!componentInstance.isRemoved() && !componentInstance.isDiscarded() && componentInstance.getPrimaryKey() != null) {  componentInstance.store();} @AT@ 8932 @LENGTH@ 154
---UPD InfixExpression@@!componentInstance.isRemoved() && !componentInstance.isDiscarded() @TO@ !componentInstance.isRemoved() && !componentInstance.isDiscarded() && componentInstance.getPrimaryKey() != null @AT@ 8936 @LENGTH@ 66
------INS InfixExpression@@componentInstance.getPrimaryKey() != null @TO@ InfixExpression@@!componentInstance.isRemoved() && !componentInstance.isDiscarded() @AT@ 9199 @LENGTH@ 41
---------INS MethodInvocation@@componentInstance.getPrimaryKey() @TO@ InfixExpression@@componentInstance.getPrimaryKey() != null @AT@ 9199 @LENGTH@ 33
------------INS SimpleName@@Name:componentInstance @TO@ MethodInvocation@@componentInstance.getPrimaryKey() @AT@ 9199 @LENGTH@ 17
------------INS SimpleName@@MethodName:getPrimaryKey:[] @TO@ MethodInvocation@@componentInstance.getPrimaryKey() @AT@ 9217 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@componentInstance.getPrimaryKey() != null @AT@ 9232 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@componentInstance.getPrimaryKey() != null @AT@ 9236 @LENGTH@ 4


UPD IfStatement@@if (connector == null) {  LOGGER.warn("No JMX Connector yet " + this);  return null;} @TO@ if (connector == null) {  throw new IllegalStateException("JMX connector can not be created");} @AT@ 1294 @LENGTH@ 116
---UPD Block@@ThenBody:{  LOGGER.warn("No JMX Connector yet " + this);  return null;} @TO@ ThenBody:{  throw new IllegalStateException("JMX connector can not be created");} @AT@ 1317 @LENGTH@ 93
------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("JMX connector can not be created") @TO@ Block@@ThenBody:{  LOGGER.warn("No JMX Connector yet " + this);  return null;} @AT@ 1331 @LENGTH@ 68
---------INS ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("JMX connector can not be created") @AT@ 1337 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @AT@ 1337 @LENGTH@ 3
------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @AT@ 1341 @LENGTH@ 21
------------INS StringLiteral@@"JMX connector can not be created" @TO@ ClassInstanceCreation@@IllegalStateException["JMX connector can not be created"] @AT@ 1363 @LENGTH@ 34
------DEL ExpressionStatement@@MethodInvocation:LOGGER.warn("No JMX Connector yet " + this) @AT@ 1331 @LENGTH@ 44
---------DEL MethodInvocation@@LOGGER.warn("No JMX Connector yet " + this) @AT@ 1331 @LENGTH@ 43
------------DEL SimpleName@@Name:LOGGER @AT@ 1331 @LENGTH@ 6
------------DEL SimpleName@@MethodName:warn:["No JMX Connector yet " + this] @AT@ 1338 @LENGTH@ 36
---------------DEL InfixExpression@@"No JMX Connector yet " + this @AT@ 1343 @LENGTH@ 30
------------------DEL StringLiteral@@"No JMX Connector yet " @AT@ 1343 @LENGTH@ 23
------------------DEL Operator@@+ @AT@ 1366 @LENGTH@ 1
------------------DEL ThisExpression@@this @AT@ 1369 @LENGTH@ 4
------DEL ReturnStatement@@NullLiteral:null @AT@ 1388 @LENGTH@ 12
---------DEL NullLiteral@@null @AT@ 1395 @LENGTH@ 4


UPD IfStatement@@if (up != null) {  identity=up;  if (getUseFirstPass()) {    String userName=identity.getName();    if (log.isDebugEnabled())     log.debug("Storing username '" + userName + "' and empty password");    sharedState.put("javax.security.auth.login.name",identity);    sharedState.put("javax.security.auth.login.password","");  }  return true;} else {  throw new LoginException("Remoting connection found but no UserPrincipal.");} @TO@ if (up != null) {  identity=up;  if (getUseFirstPass()) {    String userName=identity.getName();    if (log.isDebugEnabled())     log.debug("Storing username '" + userName + "' and empty password");    sharedState.put("javax.security.auth.login.name",identity);    sharedState.put("javax.security.auth.login.password","");  }  loginOk=true;  return true;} else {  throw new LoginException("Remoting connection found but no UserPrincipal.");} @AT@ 2534 @LENGTH@ 860
---UPD Block@@ThenBody:{  identity=up;  if (getUseFirstPass()) {    String userName=identity.getName();    if (log.isDebugEnabled())     log.debug("Storing username '" + userName + "' and empty password");    sharedState.put("javax.security.auth.login.name",identity);    sharedState.put("javax.security.auth.login.password","");  }  return true;} @TO@ ThenBody:{  identity=up;  if (getUseFirstPass()) {    String userName=identity.getName();    if (log.isDebugEnabled())     log.debug("Storing username '" + userName + "' and empty password");    sharedState.put("javax.security.auth.login.name",identity);    sharedState.put("javax.security.auth.login.password","");  }  loginOk=true;  return true;} @AT@ 2550 @LENGTH@ 577
------INS ExpressionStatement@@Assignment:loginOk=true @TO@ Block@@ThenBody:{  identity=up;  if (getUseFirstPass()) {    String userName=identity.getName();    if (log.isDebugEnabled())     log.debug("Storing username '" + userName + "' and empty password");    sharedState.put("javax.security.auth.login.name",identity);    sharedState.put("javax.security.auth.login.password","");  }  return true;} @AT@ 3101 @LENGTH@ 15
---------INS Assignment@@loginOk=true @TO@ ExpressionStatement@@Assignment:loginOk=true @AT@ 3101 @LENGTH@ 14
------------INS SimpleName@@loginOk @TO@ Assignment@@loginOk=true @AT@ 3101 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@loginOk=true @AT@ 3108 @LENGTH@ 1
------------INS BooleanLiteral@@true @TO@ Assignment@@loginOk=true @AT@ 3111 @LENGTH@ 4


INS AssertStatement@@MethodInvocation:result.isDefined() @TO@ MethodDeclaration@@protected, Map<String,ModelNode>, MethodName:getChildren, final ModelNode result,  @AT@ 6591 @LENGTH@ 26
---INS MethodInvocation@@result.isDefined() @TO@ AssertStatement@@MethodInvocation:result.isDefined() @AT@ 6598 @LENGTH@ 18
------MOV SimpleName@@Name:result @TO@ MethodInvocation@@result.isDefined() @AT@ 6602 @LENGTH@ 6
------MOV SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@result.isDefined() @AT@ 6609 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @TO@ MethodDeclaration@@public, CommandProcessorResponse, MethodName:run, String command,  @AT@ 2238 @LENGTH@ 107
---INS MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @TO@ ExpressionStatement@@MethodInvocation:Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2238 @LENGTH@ 106
------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2238 @LENGTH@ 22
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2238 @LENGTH@ 6
------INS SimpleName@@MethodName:setContextClassLoader:[Utilities.addResourceFilesToClassPath(ss.getConf())] @TO@ MethodInvocation@@Thread.currentThread().setContextClassLoader(Utilities.addResourceFilesToClassPath(ss.getConf())) @AT@ 2261 @LENGTH@ 83
---------INS MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @TO@ SimpleName@@MethodName:setContextClassLoader:[Utilities.addResourceFilesToClassPath(ss.getConf())] @AT@ 2292 @LENGTH@ 51
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @AT@ 2292 @LENGTH@ 9
------------INS SimpleName@@MethodName:addResourceFilesToClassPath:[ss.getConf()] @TO@ MethodInvocation@@Utilities.addResourceFilesToClassPath(ss.getConf()) @AT@ 2302 @LENGTH@ 41
---------------INS MethodInvocation@@ss.getConf() @TO@ SimpleName@@MethodName:addResourceFilesToClassPath:[ss.getConf()] @AT@ 2330 @LENGTH@ 12
------------------INS SimpleName@@Name:ss @TO@ MethodInvocation@@ss.getConf() @AT@ 2330 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getConf:[] @TO@ MethodInvocation@@ss.getConf() @AT@ 2333 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:System.err.println(executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @TO@ MethodInvocation:System.err.println(executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @AT@ 5174 @LENGTH@ 238
---UPD MethodInvocation@@System.err.println(executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @TO@ System.err.println(executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)) @AT@ 5174 @LENGTH@ 237
------UPD SimpleName@@MethodName:println:[executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)] @TO@ MethodName:println:[executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false)] @AT@ 5185 @LENGTH@ 226
---------UPD MethodInvocation@@executeCommand(String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false) @TO@ executeCommand(String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user),10 * 60000L,false) @AT@ 5193 @LENGTH@ 217
------------UPD SimpleName@@MethodName:executeCommand:[String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user), 10 * 60000L, false] @TO@ MethodName:executeCommand:[String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user), 10 * 60000L, false] @AT@ 5193 @LENGTH@ 217
---------------UPD MethodInvocation@@String.format("fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user) @TO@ String.format("fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1",image,location,group,user) @AT@ 5208 @LENGTH@ 181
------------------UPD SimpleName@@MethodName:format:["fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1", image, location, group, user] @TO@ MethodName:format:["fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1", image, location, group, user] @AT@ 5215 @LENGTH@ 174
---------------------UPD StringLiteral@@"fabric:agent-container --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1" @TO@ "fabric:container-create --ensemble-server --url jclouds://aws-ec2?imageId=%s&locationId=%s&group=%s&user=%s --profile default ensemble1" @AT@ 5222 @LENGTH@ 136


UPD ExpressionStatement@@MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ MethodInvocation:HOST_CONTROLLER_LOGGER.warnIgnoringProfileInclude(reader.getLocation()) @AT@ 30226 @LENGTH@ 82
---UPD MethodInvocation@@HOST_CONTROLLER_LOGGER.warnIgnoringSocketBindingGroupIgnore(reader.getLocation()) @TO@ HOST_CONTROLLER_LOGGER.warnIgnoringProfileInclude(reader.getLocation()) @AT@ 30226 @LENGTH@ 81
------UPD SimpleName@@MethodName:warnIgnoringSocketBindingGroupIgnore:[reader.getLocation()] @TO@ MethodName:warnIgnoringProfileInclude:[reader.getLocation()] @AT@ 30249 @LENGTH@ 58


UPD ThrowStatement@@MethodInvocation:MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_PORT),reader.getLocation()) @TO@ MethodInvocation:MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_ADDRESS),reader.getLocation()) @AT@ 57403 @LENGTH@ 100
---UPD MethodInvocation@@MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_PORT),reader.getLocation()) @TO@ MESSAGES.missingRequiredAttributes(new StringBuilder(DESTINATION_ADDRESS),reader.getLocation()) @AT@ 57409 @LENGTH@ 93
------UPD SimpleName@@MethodName:missingRequiredAttributes:[new StringBuilder(DESTINATION_PORT), reader.getLocation()] @TO@ MethodName:missingRequiredAttributes:[new StringBuilder(DESTINATION_ADDRESS), reader.getLocation()] @AT@ 57418 @LENGTH@ 84
---------UPD ClassInstanceCreation@@StringBuilder[DESTINATION_PORT] @TO@ StringBuilder[DESTINATION_ADDRESS] @AT@ 57444 @LENGTH@ 35
------------UPD SimpleName@@DESTINATION_PORT @TO@ DESTINATION_ADDRESS @AT@ 57462 @LENGTH@ 16


MOV MethodDeclaration@@String, MethodName:handlerAttachedToHandlers, String handlerName, Collection<String> handlers,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]LoggingMessages,  @AT@ 5193 @LENGTH@ 75


UPD IfStatement@@if (zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null) {  List<String> children=zooKeeper.getChildren(ZkPath.MAVEN_PROXY.getPath("upload"));  if (children != null && !children.isEmpty()) {    Collections.sort(children);  }  String mavenRepo=ZooKeeperUtils.getSubstitutedPath(zooKeeper,ZkPath.MAVEN_PROXY.getPath("upload") + "/" + children.get(0));  if (mavenRepo != null && !mavenRepo.endsWith("/")) {    mavenRepo+="/";  }  uri=new URI(mavenRepo);} @TO@ if (zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null) {  List<String> children=zooKeeper.getChildren(ZkPath.MAVEN_PROXY.getPath("upload"));  if (children != null && !children.isEmpty()) {    Collections.sort(children);  }  String mavenRepo=ZooKeeperUtils.getSubstitutedPath(zooKeeper,ZkPath.MAVEN_PROXY.getPath("upload") + "/" + children.get(0));  if (mavenRepo != null && !mavenRepo.endsWith("/")) {    mavenRepo+="/";  }  uri=new URI(mavenRepo);} @AT@ 13473 @LENGTH@ 621
---INS InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null @TO@ IfStatement@@if (zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null) {  List<String> children=zooKeeper.getChildren(ZkPath.MAVEN_PROXY.getPath("upload"));  if (children != null && !children.isEmpty()) {    Collections.sort(children);  }  String mavenRepo=ZooKeeperUtils.getSubstitutedPath(zooKeeper,ZkPath.MAVEN_PROXY.getPath("upload") + "/" + children.get(0));  if (mavenRepo != null && !mavenRepo.endsWith("/")) {    mavenRepo+="/";  }  uri=new URI(mavenRepo);} @AT@ 13498 @LENGTH@ 83
------MOV InfixExpression@@zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null @TO@ InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null @AT@ 13477 @LENGTH@ 62
------INS InfixExpression@@zooKeeper != null @TO@ InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null @AT@ 13498 @LENGTH@ 17
---------INS SimpleName@@zooKeeper @TO@ InfixExpression@@zooKeeper != null @AT@ 13498 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@zooKeeper != null @AT@ 13507 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@zooKeeper != null @AT@ 13511 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@zooKeeper != null && zooKeeper.exists(ZkPath.MAVEN_PROXY.getPath("upload")) != null @AT@ 13515 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong size of resource classess",sfb.getResourceClasses().size(),1) @TO@ MethodInvocation:assertEquals("Get a wrong size of resource classes",sfb.getResourceClasses().size(),1) @AT@ 1920 @LENGTH@ 90
---UPD MethodInvocation@@assertEquals("Get a wrong size of resource classess",sfb.getResourceClasses().size(),1) @TO@ assertEquals("Get a wrong size of resource classes",sfb.getResourceClasses().size(),1) @AT@ 1920 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertEquals:["Get a wrong size of resource classess", sfb.getResourceClasses().size(), 1] @TO@ MethodName:assertEquals:["Get a wrong size of resource classes", sfb.getResourceClasses().size(), 1] @AT@ 1920 @LENGTH@ 89
---------UPD StringLiteral@@"Get a wrong size of resource classess" @TO@ "Get a wrong size of resource classes" @AT@ 1933 @LENGTH@ 39


UPD MethodDeclaration@@public, void, MethodName:test, ClientProtocolException, IOException,  @TO@ public, void, MethodName:test, @ArquillianResource(SimpleServlet.class) URL baseURL, ClientProtocolException, IOException,  @AT@ 2242 @LENGTH@ 1229
---UPD TryStatement@@try {  HttpResponse response=client.execute(new HttpGet("http://localhost:8080/distributable/simple"));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),1);  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet("http://localhost:8080/distributable/simple"));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),2);  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @TO@ try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @AT@ 2375 @LENGTH@ 1090
------UPD VariableDeclarationStatement@@HttpResponse response=client.execute(new HttpGet("http://localhost:8080/distributable/simple")); @TO@ HttpResponse response=client.execute(new HttpGet(url)); @AT@ 2393 @LENGTH@ 98
---------UPD VariableDeclarationFragment@@response=client.execute(new HttpGet("http://localhost:8080/distributable/simple")) @TO@ response=client.execute(new HttpGet(url)) @AT@ 2406 @LENGTH@ 84
------------UPD MethodInvocation@@client.execute(new HttpGet("http://localhost:8080/distributable/simple")) @TO@ client.execute(new HttpGet(url)) @AT@ 2417 @LENGTH@ 73
---------------UPD SimpleName@@MethodName:execute:[new HttpGet("http://localhost:8080/distributable/simple")] @TO@ MethodName:execute:[new HttpGet(url)] @AT@ 2424 @LENGTH@ 66
------------------UPD ClassInstanceCreation@@HttpGet["http://localhost:8080/distributable/simple"] @TO@ HttpGet[url] @AT@ 2432 @LENGTH@ 57
---------------------DEL StringLiteral@@"http://localhost:8080/distributable/simple" @AT@ 2444 @LENGTH@ 44
---------------------INS SimpleName@@url @TO@ ClassInstanceCreation@@HttpGet["http://localhost:8080/distributable/simple"] @AT@ 2775 @LENGTH@ 3
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),1) @TO@ MethodInvocation:Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 2606 @LENGTH@ 86
---------UPD MethodInvocation@@Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),1) @TO@ Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 2606 @LENGTH@ 85
------------UPD SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 1] @TO@ MethodName:assertEquals:[1, Integer.parseInt(response.getFirstHeader("value").getValue())] @AT@ 2613 @LENGTH@ 78
---------------MOV MethodInvocation@@Integer.parseInt(response.getFirstHeader("value").getValue()) @TO@ SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 1] @AT@ 2626 @LENGTH@ 61
------UPD ExpressionStatement@@Assignment:response=client.execute(new HttpGet("http://localhost:8080/distributable/simple")) @TO@ Assignment:response=client.execute(new HttpGet(url)) @AT@ 2860 @LENGTH@ 85
---------UPD Assignment@@response=client.execute(new HttpGet("http://localhost:8080/distributable/simple")) @TO@ response=client.execute(new HttpGet(url)) @AT@ 2860 @LENGTH@ 84
------------UPD MethodInvocation@@client.execute(new HttpGet("http://localhost:8080/distributable/simple")) @TO@ client.execute(new HttpGet(url)) @AT@ 2871 @LENGTH@ 73
---------------UPD SimpleName@@MethodName:execute:[new HttpGet("http://localhost:8080/distributable/simple")] @TO@ MethodName:execute:[new HttpGet(url)] @AT@ 2878 @LENGTH@ 66
------------------UPD ClassInstanceCreation@@HttpGet["http://localhost:8080/distributable/simple"] @TO@ HttpGet[url] @AT@ 2886 @LENGTH@ 57
---------------------DEL StringLiteral@@"http://localhost:8080/distributable/simple" @AT@ 2898 @LENGTH@ 44
---------------------INS SimpleName@@url @TO@ ClassInstanceCreation@@HttpGet["http://localhost:8080/distributable/simple"] @AT@ 3188 @LENGTH@ 3
------UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),2) @TO@ MethodInvocation:Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 3060 @LENGTH@ 86
---------UPD MethodInvocation@@Assert.assertEquals(Integer.parseInt(response.getFirstHeader("value").getValue()),2) @TO@ Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue())) @AT@ 3060 @LENGTH@ 85
------------UPD SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 2] @TO@ MethodName:assertEquals:[2, Integer.parseInt(response.getFirstHeader("value").getValue())] @AT@ 3067 @LENGTH@ 78
---------------MOV MethodInvocation@@Integer.parseInt(response.getFirstHeader("value").getValue()) @TO@ SimpleName@@MethodName:assertEquals:[Integer.parseInt(response.getFirstHeader("value").getValue()), 2] @AT@ 3080 @LENGTH@ 61
---INS SingleVariableDeclaration@@@ArquillianResource(SimpleServlet.class) URL baseURL @TO@ MethodDeclaration@@public, void, MethodName:test, ClientProtocolException, IOException,  @AT@ 2484 @LENGTH@ 52
------INS SimpleType@@URL @TO@ SingleVariableDeclaration@@@ArquillianResource(SimpleServlet.class) URL baseURL @AT@ 2525 @LENGTH@ 3
------INS SimpleName@@baseURL @TO@ SingleVariableDeclaration@@@ArquillianResource(SimpleServlet.class) URL baseURL @AT@ 2529 @LENGTH@ 7
---INS VariableDeclarationStatement@@String url=baseURL.toString() + "simple"; @TO@ MethodDeclaration@@public, void, MethodName:test, ClientProtocolException, IOException,  @AT@ 2653 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String url=baseURL.toString() + "simple"; @AT@ 2653 @LENGTH@ 6
------INS VariableDeclarationFragment@@url=baseURL.toString() + "simple" @TO@ VariableDeclarationStatement@@String url=baseURL.toString() + "simple"; @AT@ 2660 @LENGTH@ 35
---------INS SimpleName@@url @TO@ VariableDeclarationFragment@@url=baseURL.toString() + "simple" @AT@ 2660 @LENGTH@ 3
---------INS InfixExpression@@baseURL.toString() + "simple" @TO@ VariableDeclarationFragment@@url=baseURL.toString() + "simple" @AT@ 2666 @LENGTH@ 29
------------INS MethodInvocation@@baseURL.toString() @TO@ InfixExpression@@baseURL.toString() + "simple" @AT@ 2666 @LENGTH@ 18
---------------INS SimpleName@@Name:baseURL @TO@ MethodInvocation@@baseURL.toString() @AT@ 2666 @LENGTH@ 7
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@baseURL.toString() @AT@ 2674 @LENGTH@ 10
------------INS Operator@@+ @TO@ InfixExpression@@baseURL.toString() + "simple" @AT@ 2684 @LENGTH@ 1
------------INS StringLiteral@@"simple" @TO@ InfixExpression@@baseURL.toString() + "simple" @AT@ 2687 @LENGTH@ 8


UPD TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=new File(URI.create(system.getURL().toString())).getPath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.toString() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @TO@ try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 3551 @LENGTH@ 1046
---UPD VariableDeclarationStatement@@String repository=new File(URI.create(system.getURL().toString())).getPath(); @TO@ String repository=system.getFile().getAbsolutePath(); @AT@ 3644 @LENGTH@ 79
------UPD VariableDeclarationFragment@@repository=new File(URI.create(system.getURL().toString())).getPath() @TO@ repository=system.getFile().getAbsolutePath() @AT@ 3651 @LENGTH@ 71
---------UPD MethodInvocation@@new File(URI.create(system.getURL().toString())).getPath() @TO@ system.getFile().getAbsolutePath() @AT@ 3664 @LENGTH@ 58
------------DEL ClassInstanceCreation@@File[URI.create(system.getURL().toString())] @AT@ 3664 @LENGTH@ 48
---------------DEL New@@new @AT@ 3664 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 3668 @LENGTH@ 4
---------------DEL MethodInvocation@@URI.create(system.getURL().toString()) @AT@ 3673 @LENGTH@ 38
------------------DEL SimpleName@@Name:URI @AT@ 3673 @LENGTH@ 3
------------------DEL SimpleName@@MethodName:create:[system.getURL().toString()] @AT@ 3677 @LENGTH@ 34
---------------------DEL MethodInvocation@@system.getURL().toString() @AT@ 3684 @LENGTH@ 26
------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 3700 @LENGTH@ 10
------------MOV MethodInvocation@@MethodName:getURL:[] @TO@ MethodInvocation@@new File(URI.create(system.getURL().toString())).getPath() @AT@ 3684 @LENGTH@ 15
------------MOV SimpleName@@Name:system @TO@ MethodInvocation@@new File(URI.create(system.getURL().toString())).getPath() @AT@ 3684 @LENGTH@ 6
------------UPD SimpleName@@MethodName:getPath:[] @TO@ MethodName:getAbsolutePath:[] @AT@ 3713 @LENGTH@ 9
---UPD VariableDeclarationStatement@@File tmp=new File(file.toString() + ".tmp"); @TO@ File tmp=new File(file.getAbsolutePath() + ".tmp"); @AT@ 4031 @LENGTH@ 46
------UPD VariableDeclarationFragment@@tmp=new File(file.toString() + ".tmp") @TO@ tmp=new File(file.getAbsolutePath() + ".tmp") @AT@ 4036 @LENGTH@ 40
---------UPD ClassInstanceCreation@@File[file.toString() + ".tmp"] @TO@ File[file.getAbsolutePath() + ".tmp"] @AT@ 4042 @LENGTH@ 34
------------UPD InfixExpression@@file.toString() + ".tmp" @TO@ file.getAbsolutePath() + ".tmp" @AT@ 4051 @LENGTH@ 24
---------------UPD MethodInvocation@@file.toString() @TO@ file.getAbsolutePath() @AT@ 4051 @LENGTH@ 15
------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getAbsolutePath:[] @AT@ 4056 @LENGTH@ 10


UPD MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2142 @LENGTH@ 136
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2296 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2331 @LENGTH@ 89
------INS MethodInvocation@@BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2331 @LENGTH@ 88
---------INS QualifiedName@@Name:BoundedQueueThreadPoolAdd.INSTANCE @TO@ MethodInvocation@@BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2331 @LENGTH@ 34
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@BoundedQueueThreadPoolAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2366 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2381 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2390 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2401 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2408 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2414 @LENGTH@ 4


UPD IfStatement@@if (timerState == TimerState.IN_TIMEOUT || timerState == TimerState.RETRY_TIMEOUT) {  if (calendarTimer.getNextExpiration() == null) {    calendarTimer.expireTimer();  } else {    calendarTimer.setTimerState(TimerState.ACTIVE);    timerService.persistTimer(calendarTimer);  }} @TO@ if (timerState != TimerState.CANCELED && timerState != TimerState.EXPIRED) {  if (calendarTimer.getNextExpiration() == null) {    calendarTimer.expireTimer();  } else {    calendarTimer.setTimerState(TimerState.ACTIVE);    timerService.persistTimer(calendarTimer);  }} @AT@ 3215 @LENGTH@ 392
---UPD InfixExpression@@timerState == TimerState.IN_TIMEOUT || timerState == TimerState.RETRY_TIMEOUT @TO@ timerState != TimerState.CANCELED && timerState != TimerState.EXPIRED @AT@ 3219 @LENGTH@ 77
------UPD InfixExpression@@timerState == TimerState.IN_TIMEOUT @TO@ timerState != TimerState.CANCELED @AT@ 3219 @LENGTH@ 35
---------UPD Operator@@== @TO@ != @AT@ 3229 @LENGTH@ 2
---------UPD QualifiedName@@TimerState.IN_TIMEOUT @TO@ TimerState.CANCELED @AT@ 3233 @LENGTH@ 21
------------UPD SimpleName@@IN_TIMEOUT @TO@ CANCELED @AT@ 3244 @LENGTH@ 10
------UPD Operator@@|| @TO@ && @AT@ 3254 @LENGTH@ 2
------UPD InfixExpression@@timerState == TimerState.RETRY_TIMEOUT @TO@ timerState != TimerState.EXPIRED @AT@ 3258 @LENGTH@ 38
---------UPD Operator@@== @TO@ != @AT@ 3268 @LENGTH@ 2
---------UPD QualifiedName@@TimerState.RETRY_TIMEOUT @TO@ TimerState.EXPIRED @AT@ 3272 @LENGTH@ 24
------------UPD SimpleName@@RETRY_TIMEOUT @TO@ EXPIRED @AT@ 3283 @LENGTH@ 13


UPD VariableDeclarationStatement@@Object response=null; @TO@ Object response; @AT@ 1555 @LENGTH@ 23
---UPD VariableDeclarationFragment@@response=null @TO@ response @AT@ 1562 @LENGTH@ 15
------DEL NullLiteral@@null @AT@ 1573 @LENGTH@ 4


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.disable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.disable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1905 @LENGTH@ 597
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      modcluster.disable();      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1909 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1909 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1909 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1917 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1933 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1937 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1937 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1937 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 1964 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1937 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 1971 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 1982 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 1982 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2000 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2005 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2007 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1909 @LENGTH@ 24


UPD MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:tearDown, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 3499 @LENGTH@ 119
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:tearDown, final ManagementClient managementClient, Exception,  @AT@ 3557 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3557 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3563 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 3570 @LENGTH@ 11


UPD TryStatement@@try {  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.remove(type);  }} catch (Exception e) {  LOGGER.error("Failed to remove maven proxy from registry.",e);} @TO@ try {  Set<String> proxyNodes=registeredProxies.get(type);  if (proxyNodes != null) {    for (    String entry : registeredProxies.get(type)) {      if (zookeeper.isConnected()) {        zookeeper.deleteWithChildren(entry);      }      registeredProxies.get(type).clear();    }  }} catch (Exception e) {  LOGGER.error("Failed to remove maven proxy from registry.",e);} @AT@ 4377 @LENGTH@ 372
---UPD EnhancedForStatement@@for (String entry : registeredProxies.get(type)) {  if (zookeeper.isConnected()) {    zookeeper.deleteWithChildren(entry);  }  registeredProxies.remove(type);} @TO@ for (String entry : registeredProxies.get(type)) {  if (zookeeper.isConnected()) {    zookeeper.deleteWithChildren(entry);  }  registeredProxies.get(type).clear();} @AT@ 4396 @LENGTH@ 235
---INS VariableDeclarationStatement@@Set<String> proxyNodes=registeredProxies.get(type); @TO@ TryStatement@@try {  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.remove(type);  }} catch (Exception e) {  LOGGER.error("Failed to remove maven proxy from registry.",e);} @AT@ 4397 @LENGTH@ 53
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> proxyNodes=registeredProxies.get(type); @AT@ 4397 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 4397 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 4401 @LENGTH@ 6
------INS VariableDeclarationFragment@@proxyNodes=registeredProxies.get(type) @TO@ VariableDeclarationStatement@@Set<String> proxyNodes=registeredProxies.get(type); @AT@ 4409 @LENGTH@ 40
---------INS SimpleName@@proxyNodes @TO@ VariableDeclarationFragment@@proxyNodes=registeredProxies.get(type) @AT@ 4409 @LENGTH@ 10
---------INS MethodInvocation@@registeredProxies.get(type) @TO@ VariableDeclarationFragment@@proxyNodes=registeredProxies.get(type) @AT@ 4422 @LENGTH@ 27
------------INS SimpleName@@Name:registeredProxies @TO@ MethodInvocation@@registeredProxies.get(type) @AT@ 4422 @LENGTH@ 17
------------INS SimpleName@@MethodName:get:[type] @TO@ MethodInvocation@@registeredProxies.get(type) @AT@ 4440 @LENGTH@ 9
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:get:[type] @AT@ 4444 @LENGTH@ 4
---INS IfStatement@@if (proxyNodes != null) {  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.get(type).clear();  }} @TO@ TryStatement@@try {  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.remove(type);  }} catch (Exception e) {  LOGGER.error("Failed to remove maven proxy from registry.",e);} @AT@ 4463 @LENGTH@ 315
------INS InfixExpression@@proxyNodes != null @TO@ IfStatement@@if (proxyNodes != null) {  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.get(type).clear();  }} @AT@ 4467 @LENGTH@ 18
---------INS SimpleName@@proxyNodes @TO@ InfixExpression@@proxyNodes != null @AT@ 4467 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@proxyNodes != null @AT@ 4477 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@proxyNodes != null @AT@ 4481 @LENGTH@ 4
------INS Block@@ThenBody:{  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.get(type).clear();  }} @TO@ IfStatement@@if (proxyNodes != null) {  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.get(type).clear();  }} @AT@ 4487 @LENGTH@ 291
---------MOV EnhancedForStatement@@for (String entry : registeredProxies.get(type)) {  if (zookeeper.isConnected()) {    zookeeper.deleteWithChildren(entry);  }  registeredProxies.remove(type);} @TO@ Block@@ThenBody:{  for (  String entry : registeredProxies.get(type)) {    if (zookeeper.isConnected()) {      zookeeper.deleteWithChildren(entry);    }    registeredProxies.get(type).clear();  }} @AT@ 4396 @LENGTH@ 235
------------UPD ExpressionStatement@@MethodInvocation:registeredProxies.remove(type) @TO@ MethodInvocation:registeredProxies.get(type).clear() @AT@ 4585 @LENGTH@ 31
---------------UPD MethodInvocation@@registeredProxies.remove(type) @TO@ registeredProxies.get(type).clear() @AT@ 4585 @LENGTH@ 30
------------------DEL SimpleName@@MethodName:remove:[type] @AT@ 4603 @LENGTH@ 12
---------------------DEL SimpleName@@type @AT@ 4610 @LENGTH@ 4
------------------INS MethodInvocation@@MethodName:get:[type] @TO@ MethodInvocation@@registeredProxies.remove(type) @AT@ 4710 @LENGTH@ 27
---------------------INS SimpleName@@type @TO@ MethodInvocation@@MethodName:get:[type] @AT@ 4732 @LENGTH@ 4
------------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@registeredProxies.remove(type) @AT@ 4738 @LENGTH@ 7


INS MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @TO@ TypeDeclaration@@[public]ManagementRequestContext,  @AT@ 2370 @LENGTH@ 57
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2365 @LENGTH@ 4
---INS SimpleName@@MethodName:executeAsync @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2370 @LENGTH@ 12
---INS SingleVariableDeclaration@@final AsyncTask<A> task @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2383 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2383 @LENGTH@ 5
------INS ParameterizedType@@AsyncTask<A> @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2389 @LENGTH@ 12
---------INS SimpleType@@AsyncTask @TO@ ParameterizedType@@AsyncTask<A> @AT@ 2389 @LENGTH@ 9
---------INS SimpleType@@A @TO@ ParameterizedType@@AsyncTask<A> @AT@ 2399 @LENGTH@ 1
------INS SimpleName@@task @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2402 @LENGTH@ 4
---INS SingleVariableDeclaration@@Executor executor @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, Executor executor,  @AT@ 2408 @LENGTH@ 17
------INS SimpleType@@Executor @TO@ SingleVariableDeclaration@@Executor executor @AT@ 2408 @LENGTH@ 8
------INS SimpleName@@executor @TO@ SingleVariableDeclaration@@Executor executor @AT@ 2417 @LENGTH@ 8


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("stop-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("stop-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1990 @LENGTH@ 812
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      ROOT_LOGGER.debugf("stop-context: %s",operation);      ContextHost contexthost=new ContextHost(operation);      modcluster.stopContext(contexthost.webhost,contexthost.webcontext,contexthost.waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1994 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1994 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1994 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 2002 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2018 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2022 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2022 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2022 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2049 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2022 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2056 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2067 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2067 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2085 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2090 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2092 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1994 @LENGTH@ 24


UPD ReturnStatement@@MethodInvocation:context.isNormalServer() @TO@ BooleanLiteral:true @AT@ 7335 @LENGTH@ 32
---DEL MethodInvocation@@context.isNormalServer() @AT@ 7342 @LENGTH@ 24
------DEL SimpleName@@Name:context @AT@ 7342 @LENGTH@ 7
------DEL SimpleName@@MethodName:isNormalServer:[] @AT@ 7350 @LENGTH@ 16
---INS BooleanLiteral@@true @TO@ ReturnStatement@@MethodInvocation:context.isNormalServer() @AT@ 7342 @LENGTH@ 4


UPD MethodDeclaration@@public, Context, MethodName:getInitialContext, Hashtable env, NamingException,  @TO@ public, Context, MethodName:getInitialContext, @SuppressWarnings("rawtypes") Hashtable env, NamingException,  @AT@ 3242 @LENGTH@ 1899
---UPD SingleVariableDeclaration@@Hashtable env @TO@ @SuppressWarnings("rawtypes") Hashtable env @AT@ 3275 @LENGTH@ 13


UPD TryStatement@@try {  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.start(CONTAINER_2);  deployer.deploy(DEPLOYMENT_2);  response=client.execute(new HttpGet(url1));  long startTime=System.currentTimeMillis();  while (response.getStatusLine().getStatusCode() != HttpServletResponse.SC_OK && startTime + GRACE_TIME_TO_MEMBERSHIP_CHANGE > System.currentTimeMillis()) {    response=client.execute(new HttpGet(url1));  }  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.stop(CONTAINER_2);  response=tryGet(client,url1);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.start(CONTAINER_2);  response=tryGet(client,url1);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.stop(CONTAINER_1);  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("node-udp-1",response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.start(CONTAINER_1);  response=tryGet(client,url1);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();  deployer.undeploy(DEPLOYMENT_1);  controller.stop(CONTAINER_1);  deployer.undeploy(DEPLOYMENT_2);  controller.stop(CONTAINER_2);} @TO@ try {  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.start(CONTAINER_2);  deployer.deploy(DEPLOYMENT_2);  response=client.execute(new HttpGet(url1));  long startTime=System.currentTimeMillis();  while (response.getStatusLine().getStatusCode() != HttpServletResponse.SC_OK && startTime + GRACE_TIME_TO_MEMBERSHIP_CHANGE > System.currentTimeMillis()) {    response=client.execute(new HttpGet(url1));  }  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.stop(CONTAINER_2);  response=tryGet(client,url1);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.start(CONTAINER_2);  response=tryGet(client,url1);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.stop(CONTAINER_1);  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  controller.start(CONTAINER_1);  response=tryGet(client,url1);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();  response=tryGet(client,url2);  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(MyServiceContextListener.PREFERRED_NODE,response.getFirstHeader("node").getValue());  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();  deployer.undeploy(DEPLOYMENT_1);  controller.stop(CONTAINER_1);  deployer.undeploy(DEPLOYMENT_2);  controller.stop(CONTAINER_2);} @AT@ 4599 @LENGTH@ 3672
---UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue()) @TO@ MethodInvocation:Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue()) @AT@ 4790 @LENGTH@ 78
------UPD MethodInvocation@@Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue()) @TO@ Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue()) @AT@ 4790 @LENGTH@ 77
---------UPD SimpleName@@MethodName:assertEquals:["node-udp-0", response.getFirstHeader("node").getValue()] @TO@ MethodName:assertEquals:[NODE_1, response.getFirstHeader("node").getValue()] @AT@ 4797 @LENGTH@ 70
------------DEL StringLiteral@@"node-udp-0" @AT@ 4810 @LENGTH@ 12
------------INS SimpleName@@NODE_1 @TO@ SimpleName@@MethodName:assertEquals:["node-udp-0", response.getFirstHeader("node").getValue()] @AT@ 4810 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue()) @TO@ MethodInvocation:Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue()) @AT@ 6170 @LENGTH@ 78
------UPD MethodInvocation@@Assert.assertEquals("node-udp-0",response.getFirstHeader("node").getValue()) @TO@ Assert.assertEquals(NODE_1,response.getFirstHeader("node").getValue()) @AT@ 6170 @LENGTH@ 77
---------UPD SimpleName@@MethodName:assertEquals:["node-udp-0", response.getFirstHeader("node").getValue()] @TO@ MethodName:assertEquals:[NODE_1, response.getFirstHeader("node").getValue()] @AT@ 6177 @LENGTH@ 70
------------INS SimpleName@@NODE_1 @TO@ SimpleName@@MethodName:assertEquals:["node-udp-0", response.getFirstHeader("node").getValue()] @AT@ 6184 @LENGTH@ 6
------------DEL StringLiteral@@"node-udp-0" @AT@ 6190 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("node-udp-1",response.getFirstHeader("node").getValue()) @TO@ MethodInvocation:Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue()) @AT@ 7193 @LENGTH@ 78
------UPD MethodInvocation@@Assert.assertEquals("node-udp-1",response.getFirstHeader("node").getValue()) @TO@ Assert.assertEquals(NODE_2,response.getFirstHeader("node").getValue()) @AT@ 7193 @LENGTH@ 77
---------UPD SimpleName@@MethodName:assertEquals:["node-udp-1", response.getFirstHeader("node").getValue()] @TO@ MethodName:assertEquals:[NODE_2, response.getFirstHeader("node").getValue()] @AT@ 7200 @LENGTH@ 70
------------INS SimpleName@@NODE_2 @TO@ SimpleName@@MethodName:assertEquals:["node-udp-1", response.getFirstHeader("node").getValue()] @AT@ 7201 @LENGTH@ 6
------------DEL StringLiteral@@"node-udp-1" @AT@ 7213 @LENGTH@ 12


UPD FieldDeclaration@@private, static, final, byte[], [ONE=new byte[]{1}] @TO@ private, static, final, byte[], [ONE=new byte[]{'1'}] @AT@ 2425 @LENGTH@ 51
---UPD VariableDeclarationFragment@@ONE=new byte[]{1} @TO@ ONE=new byte[]{'1'} @AT@ 2453 @LENGTH@ 22
------UPD ArrayCreation@@new byte[]{1} @TO@ new byte[]{'1'} @AT@ 2459 @LENGTH@ 16
---------UPD ArrayInitializer@@{1} @TO@ {'1'} @AT@ 2470 @LENGTH@ 5
------------INS CharacterLiteral@@'1' @TO@ ArrayInitializer@@{1} @AT@ 2472 @LENGTH@ 3
------------DEL NumberLiteral@@1 @AT@ 2472 @LENGTH@ 1


INS VariableDeclarationStatement@@final ComponentView view=context.getPrivateData(ComponentView.class); @TO@ MethodDeclaration@@public, Object, MethodName:processInvocation, InterceptorContext context, Exception,  @AT@ 2660 @LENGTH@ 71
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final ComponentView view=context.getPrivateData(ComponentView.class); @AT@ 2660 @LENGTH@ 5
---INS SimpleType@@ComponentView @TO@ VariableDeclarationStatement@@final ComponentView view=context.getPrivateData(ComponentView.class); @AT@ 2666 @LENGTH@ 13
---INS VariableDeclarationFragment@@view=context.getPrivateData(ComponentView.class) @TO@ VariableDeclarationStatement@@final ComponentView view=context.getPrivateData(ComponentView.class); @AT@ 2680 @LENGTH@ 50
------INS SimpleName@@view @TO@ VariableDeclarationFragment@@view=context.getPrivateData(ComponentView.class) @AT@ 2680 @LENGTH@ 4
------INS MethodInvocation@@context.getPrivateData(ComponentView.class) @TO@ VariableDeclarationFragment@@view=context.getPrivateData(ComponentView.class) @AT@ 2687 @LENGTH@ 43
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPrivateData(ComponentView.class) @AT@ 2687 @LENGTH@ 7
---------INS SimpleName@@MethodName:getPrivateData:[ComponentView.class] @TO@ MethodInvocation@@context.getPrivateData(ComponentView.class) @AT@ 2695 @LENGTH@ 35
------------INS TypeLiteral@@ComponentView.class @TO@ SimpleName@@MethodName:getPrivateData:[ComponentView.class] @AT@ 2710 @LENGTH@ 19


UPD IfStatement@@if (Arrays.asList(entry.getValue()).contains(serverName)) return entry.getKey(); @TO@ if (Arrays.asList(entry.getValue()).contains(serverName)) {  return entry.getKey();} @AT@ 5593 @LENGTH@ 80
---UPD Block@@ThenBody:return entry.getKey(); @TO@ ThenBody:{  return entry.getKey();} @AT@ 5651 @LENGTH@ 22


UPD MethodDeclaration@@voidMethodName:CmpEntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, Map<Method,Interceptor> methodInterceptors, final Interceptor relationshipInterceptor,  @TO@ voidMethodName:CmpEntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, Map<Method,Interceptor> methodInterceptors, final Interceptor relationshipInterceptor, final InterceptorFactoryContext interceptorContext,  @AT@ 2074 @LENGTH@ 410
---UPD SuperConstructorInvocation@@super(component,instanceReference,preDestroyInterceptor,methodInterceptors);
 @TO@ super(component,instanceReference,preDestroyInterceptor,methodInterceptors,interceptorContext);
 @AT@ 2335 @LENGTH@ 79
------INS SimpleName@@interceptorContext @TO@ SuperConstructorInvocation@@super(component,instanceReference,preDestroyInterceptor,methodInterceptors);
 @AT@ 2521 @LENGTH@ 18
---INS SingleVariableDeclaration@@final InterceptorFactoryContext interceptorContext @TO@ MethodDeclaration@@voidMethodName:CmpEntityBeanComponentInstance, final BasicComponent component, final AtomicReference<ManagedReference> instanceReference, final Interceptor preDestroyInterceptor, Map<Method,Interceptor> methodInterceptors, final Interceptor relationshipInterceptor,  @AT@ 2380 @LENGTH@ 50
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext interceptorContext @AT@ 2380 @LENGTH@ 5
------INS SimpleType@@InterceptorFactoryContext @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext interceptorContext @AT@ 2386 @LENGTH@ 25
------INS SimpleName@@interceptorContext @TO@ SingleVariableDeclaration@@final InterceptorFactoryContext interceptorContext @AT@ 2412 @LENGTH@ 18


INS MethodDeclaration@@protected, Predicate, MethodName:createPredicate, RouteContext routeContext,  @TO@ TypeDeclaration@@[@XmlAccessorType(XmlAccessType.FIELD), public]ExpressionNode, ProcessorDefinition<ExpressionNode> @AT@ 3700 @LENGTH@ 132
---MOV ReturnStatement@@ClassInstanceCreation:new FilterProcessor(getExpression().createPredicate(routeContext),childProcessor) @TO@ MethodDeclaration@@protected, Predicate, MethodName:createPredicate, RouteContext routeContext,  @AT@ 3189 @LENGTH@ 90
------DEL ClassInstanceCreation@@FilterProcessor[getExpression().createPredicate(routeContext), childProcessor] @AT@ 3196 @LENGTH@ 82
---------DEL New@@new @AT@ 3196 @LENGTH@ 3
---------DEL SimpleType@@FilterProcessor @AT@ 3200 @LENGTH@ 15
---------DEL SimpleName@@childProcessor @AT@ 3263 @LENGTH@ 14
------MOV MethodInvocation@@getExpression().createPredicate(routeContext) @TO@ ReturnStatement@@ClassInstanceCreation:new FilterProcessor(getExpression().createPredicate(routeContext),childProcessor) @AT@ 3216 @LENGTH@ 45
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Predicate, MethodName:createPredicate, RouteContext routeContext,  @AT@ 3700 @LENGTH@ 9
---INS SimpleType@@Predicate @TO@ MethodDeclaration@@protected, Predicate, MethodName:createPredicate, RouteContext routeContext,  @AT@ 3710 @LENGTH@ 9
---INS SimpleName@@MethodName:createPredicate @TO@ MethodDeclaration@@protected, Predicate, MethodName:createPredicate, RouteContext routeContext,  @AT@ 3720 @LENGTH@ 15
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@protected, Predicate, MethodName:createPredicate, RouteContext routeContext,  @AT@ 3736 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 3736 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 3749 @LENGTH@ 12


INS IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @TO@ MethodDeclaration@@public, voidMethodName:PromptPasswordState, ConsoleWrapper theConsole, StateValues stateValues,  @AT@ 1816 @LENGTH@ 97
---INS InfixExpression@@theConsole.getConsole() == null @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1820 @LENGTH@ 31
------INS MethodInvocation@@theConsole.getConsole() @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1820 @LENGTH@ 23
---------INS SimpleName@@Name:theConsole @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1820 @LENGTH@ 10
---------INS SimpleName@@MethodName:getConsole:[] @TO@ MethodInvocation@@theConsole.getConsole() @AT@ 1831 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1843 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@theConsole.getConsole() == null @AT@ 1847 @LENGTH@ 4
---INS Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @TO@ IfStatement@@if (theConsole.getConsole() == null) {  throw MESSAGES.noConsoleAvailable();} @AT@ 1853 @LENGTH@ 60
------INS ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @TO@ Block@@ThenBody:{  throw MESSAGES.noConsoleAvailable();} @AT@ 1867 @LENGTH@ 36
---------INS MethodInvocation@@MESSAGES.noConsoleAvailable() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.noConsoleAvailable() @AT@ 1873 @LENGTH@ 29
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1873 @LENGTH@ 8
------------INS SimpleName@@MethodName:noConsoleAvailable:[] @TO@ MethodInvocation@@MESSAGES.noConsoleAvailable() @AT@ 1882 @LENGTH@ 20


UPD SwitchStatement@@switch (element) {case TRANSPORT_GUARANTEE:  userDataConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @TO@ switch (element) {case TRANSPORT_GUARANTEE:  try {    userDataConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));  } catch (  IllegalArgumentException e) {    throw unexpectedValue(reader,e);  }break;default :throw unexpectedElement(reader);} @AT@ 2902 @LENGTH@ 277
---INS TryStatement@@try {  userDataConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case TRANSPORT_GUARANTEE:  userDataConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @AT@ 2983 @LENGTH@ 266
------MOV ExpressionStatement@@MethodInvocation:userDataConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  userDataConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 2983 @LENGTH@ 97
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  userDataConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3133 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3140 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3140 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3165 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3194 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 3200 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 3200 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3216 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3224 @LENGTH@ 1


UPD VariableDeclarationStatement@@final EntityBeanComponentInstance instance=component.getCache().get(primaryKey); @TO@ final EntityBeanComponentInstance instance; @AT@ 2771 @LENGTH@ 82
---UPD VariableDeclarationFragment@@instance=component.getCache().get(primaryKey) @TO@ instance @AT@ 2805 @LENGTH@ 47


DEL IfStatement@@if (isParallelProcessing() && executorService == null) {  String ref=this.executorServiceRef != null ? this.executorServiceRef : "RecipientList";  ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager();  executorService=manager.newDefaultThreadPool(this,ref);} @AT@ 4641 @LENGTH@ 344
---DEL InfixExpression@@isParallelProcessing() && executorService == null @AT@ 4645 @LENGTH@ 49
------DEL MethodInvocation@@MethodName:isParallelProcessing:[] @AT@ 4645 @LENGTH@ 22
------DEL Operator@@&& @AT@ 4667 @LENGTH@ 2
------DEL InfixExpression@@executorService == null @AT@ 4671 @LENGTH@ 23
---------DEL SimpleName@@executorService @AT@ 4671 @LENGTH@ 15
---------DEL Operator@@== @AT@ 4686 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4690 @LENGTH@ 4
---DEL Block@@ThenBody:{  String ref=this.executorServiceRef != null ? this.executorServiceRef : "RecipientList";  ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager();  executorService=manager.newDefaultThreadPool(this,ref);} @AT@ 4696 @LENGTH@ 289
------DEL VariableDeclarationStatement@@String ref=this.executorServiceRef != null ? this.executorServiceRef : "RecipientList"; @AT@ 4710 @LENGTH@ 89
---------DEL SimpleType@@String @AT@ 4710 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@ref=this.executorServiceRef != null ? this.executorServiceRef : "RecipientList" @AT@ 4717 @LENGTH@ 81
------------DEL SimpleName@@ref @AT@ 4717 @LENGTH@ 3
------------DEL ConditionalExpression@@this.executorServiceRef != null ? this.executorServiceRef : "RecipientList" @AT@ 4723 @LENGTH@ 75
---------------DEL InfixExpression@@this.executorServiceRef != null @AT@ 4723 @LENGTH@ 31
------------------DEL FieldAccess@@this.executorServiceRef @AT@ 4723 @LENGTH@ 23
---------------------DEL ThisExpression@@this @AT@ 4723 @LENGTH@ 4
---------------------DEL SimpleName@@executorServiceRef @AT@ 4728 @LENGTH@ 18
------------------DEL Operator@@!= @AT@ 4746 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 4750 @LENGTH@ 4
---------------DEL FieldAccess@@this.executorServiceRef @AT@ 4757 @LENGTH@ 23
------------------DEL ThisExpression@@this @AT@ 4757 @LENGTH@ 4
------------------DEL SimpleName@@executorServiceRef @AT@ 4762 @LENGTH@ 18
---------------DEL StringLiteral@@"RecipientList" @AT@ 4783 @LENGTH@ 15
------DEL VariableDeclarationStatement@@ExecutorServiceManager manager=routeContext.getCamelContext().getExecutorServiceManager(); @AT@ 4812 @LENGTH@ 92
---------DEL SimpleType@@ExecutorServiceManager @AT@ 4812 @LENGTH@ 22
---------DEL VariableDeclarationFragment@@manager=routeContext.getCamelContext().getExecutorServiceManager() @AT@ 4835 @LENGTH@ 68
------------DEL SimpleName@@manager @AT@ 4835 @LENGTH@ 7
------------DEL MethodInvocation@@routeContext.getCamelContext().getExecutorServiceManager() @AT@ 4845 @LENGTH@ 58
---------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 4845 @LENGTH@ 30
---------------DEL SimpleName@@Name:routeContext @AT@ 4845 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getExecutorServiceManager:[] @AT@ 4876 @LENGTH@ 27
------DEL ExpressionStatement@@Assignment:executorService=manager.newDefaultThreadPool(this,ref) @AT@ 4917 @LENGTH@ 58


INS MethodDeclaration@@String, MethodName:getUrl,  @TO@ TypeDeclaration@@[public]DownloadFuture, [Future<DownloadFuture>] @AT@ 885 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:getUrl,  @AT@ 878 @LENGTH@ 6
---INS SimpleName@@MethodName:getUrl @TO@ MethodDeclaration@@String, MethodName:getUrl,  @AT@ 885 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:ExtensionContextImpl.this.registerSubsystem(name) @TO@ MethodInvocation:ExtensionContextImpl.this.doRegisterSubsystem(name) @AT@ 19578 @LENGTH@ 57
---UPD MethodInvocation@@ExtensionContextImpl.this.registerSubsystem(name) @TO@ ExtensionContextImpl.this.doRegisterSubsystem(name) @AT@ 19585 @LENGTH@ 49
------UPD SimpleName@@MethodName:registerSubsystem:[name] @TO@ MethodName:doRegisterSubsystem:[name] @AT@ 19611 @LENGTH@ 23


UPD VariableDeclarationStatement@@String string=new String(input).trim(); @TO@ String string=ArchiveUtils.toAsciiString(input).trim(); @AT@ 7376 @LENGTH@ 41
---UPD VariableDeclarationFragment@@string=new String(input).trim() @TO@ string=ArchiveUtils.toAsciiString(input).trim() @AT@ 7383 @LENGTH@ 33
------UPD MethodInvocation@@new String(input).trim() @TO@ ArchiveUtils.toAsciiString(input).trim() @AT@ 7392 @LENGTH@ 24
---------DEL ClassInstanceCreation@@String[input] @AT@ 7392 @LENGTH@ 17
------------DEL New@@new @AT@ 7392 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 7396 @LENGTH@ 6
------------DEL SimpleName@@input @AT@ 7403 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:toAsciiString:[input] @TO@ MethodInvocation@@new String(input).trim() @AT@ 7408 @LENGTH@ 33
------------INS SimpleName@@input @TO@ MethodInvocation@@MethodName:toAsciiString:[input] @AT@ 7435 @LENGTH@ 5
---------INS SimpleName@@Name:ArchiveUtils @TO@ MethodInvocation@@new String(input).trim() @AT@ 7408 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:setUp,  @TO@ public, void, MethodName:setUp, InterruptedException,  @AT@ 1006 @LENGTH@ 136
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 1033 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @TO@ MethodInvocation:cli.sendLine("connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort()) @AT@ 1766 @LENGTH@ 105
---UPD MethodInvocation@@cli.sendLine("connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(),false) @TO@ cli.sendLine("connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort()) @AT@ 1766 @LENGTH@ 104
------UPD SimpleName@@MethodName:sendLine:["connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort(), false] @TO@ MethodName:sendLine:["connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort()] @AT@ 1770 @LENGTH@ 100
---------UPD InfixExpression@@"connect " + ServerAddress.getServerAddress() + ":"+ ServerAddress.getServerPort() @TO@ "connect " + TestSuiteEnvironment.getServerAddress() + ":"+ TestSuiteEnvironment.getServerPort() @AT@ 1779 @LENGTH@ 83
------------UPD MethodInvocation@@ServerAddress.getServerAddress() @TO@ TestSuiteEnvironment.getServerAddress() @AT@ 1792 @LENGTH@ 32
---------------UPD SimpleName@@Name:ServerAddress @TO@ Name:TestSuiteEnvironment @AT@ 1792 @LENGTH@ 13
------------UPD MethodInvocation@@ServerAddress.getServerPort() @TO@ TestSuiteEnvironment.getServerPort() @AT@ 1833 @LENGTH@ 29
---------------UPD SimpleName@@Name:ServerAddress @TO@ Name:TestSuiteEnvironment @AT@ 1833 @LENGTH@ 13
---------DEL BooleanLiteral@@false @AT@ 1864 @LENGTH@ 5


UPD TryStatement@@try {  ContainerProvider provider=getProvider(options.getProviderType());  if (provider == null) {    throw new FabricException("Unable to find an container provider type '" + options.getProviderType() + "'");  }  Set<? extends CreateContainerMetadata> createMetadata=new LinkedHashSet<CreateContainerMetadata>();  String parent=options.getParent() != null ? options.getParent() : "";  Container parentContainer=null;  if (provider instanceof ChildContainerProvider && !getCurrentContainer().getId().equals(parent)) {    createMetadata=createChildContainer((CreateContainerChildOptions)options);  } else {    createMetadata=provider.create(options);  }  containers=new Container[createMetadata.size()];  int container=0;  for (  CreateContainerMetadata metadata : createMetadata) {    if (!options.isEnsembleServer()) {      createContainerConfig(parent,metadata.getContainerName());    }    containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);    containers[container++].setCreateContainerMetadata(metadata);  }} catch (FabricException e) {  throw e;}catch (Exception e) {  throw new FabricException(e);} @TO@ try {  ContainerProvider provider=getProvider(options.getProviderType());  if (provider == null) {    throw new FabricException("Unable to find an container provider type '" + options.getProviderType() + "'");  }  Set<? extends CreateContainerMetadata> createMetadata=new LinkedHashSet<CreateContainerMetadata>();  String parent=options.getParent() != null ? options.getParent() : "";  Container parentContainer=null;  String currentID="";  Container currentContainer=getCurrentContainer();  if (currentContainer != null) {    currentID=currentContainer.getId();  }  if (provider instanceof ChildContainerProvider && !parent.equals(currentID)) {    createMetadata=createChildContainer(options);  } else {    createMetadata=provider.create(options);  }  containers=new Container[createMetadata.size()];  int container=0;  for (  CreateContainerMetadata metadata : createMetadata) {    if (!options.isEnsembleServer()) {      createContainerConfig(parent,metadata.getContainerName());    }    containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);    containers[container++].setCreateContainerMetadata(metadata);  }} catch (FabricException e) {  throw e;}catch (Exception e) {  throw new FabricException(e);} @AT@ 7657 @LENGTH@ 1661
---UPD IfStatement@@if (provider instanceof ChildContainerProvider && !getCurrentContainer().getId().equals(parent)) {  createMetadata=createChildContainer((CreateContainerChildOptions)options);} else {  createMetadata=provider.create(options);} @TO@ if (provider instanceof ChildContainerProvider && !parent.equals(currentID)) {  createMetadata=createChildContainer(options);} else {  createMetadata=provider.create(options);} @AT@ 8177 @LENGTH@ 286
------UPD InfixExpression@@provider instanceof ChildContainerProvider && !getCurrentContainer().getId().equals(parent) @TO@ provider instanceof ChildContainerProvider && !parent.equals(currentID) @AT@ 8181 @LENGTH@ 91
---------UPD PrefixExpression@@!getCurrentContainer().getId().equals(parent) @TO@ !parent.equals(currentID) @AT@ 8227 @LENGTH@ 45
------------UPD MethodInvocation@@getCurrentContainer().getId().equals(parent) @TO@ parent.equals(currentID) @AT@ 8228 @LENGTH@ 44
---------------DEL MethodInvocation@@MethodName:getId:[] @AT@ 8228 @LENGTH@ 29
---------------DEL MethodInvocation@@MethodName:getCurrentContainer:[] @AT@ 8228 @LENGTH@ 21
---------------UPD SimpleName@@MethodName:equals:[parent] @TO@ MethodName:equals:[currentID] @AT@ 8258 @LENGTH@ 14
------------------UPD SimpleName@@parent @TO@ currentID @AT@ 8265 @LENGTH@ 6
---------------INS SimpleName@@Name:parent @TO@ MethodInvocation@@getCurrentContainer().getId().equals(parent) @AT@ 8439 @LENGTH@ 6
------UPD Block@@ThenBody:{  createMetadata=createChildContainer((CreateContainerChildOptions)options);} @TO@ ThenBody:{  createMetadata=createChildContainer(options);} @AT@ 8274 @LENGTH@ 109
---------UPD ExpressionStatement@@Assignment:createMetadata=createChildContainer((CreateContainerChildOptions)options) @TO@ Assignment:createMetadata=createChildContainer(options) @AT@ 8292 @LENGTH@ 77
------------UPD Assignment@@createMetadata=createChildContainer((CreateContainerChildOptions)options) @TO@ createMetadata=createChildContainer(options) @AT@ 8292 @LENGTH@ 76
---------------UPD MethodInvocation@@createChildContainer((CreateContainerChildOptions)options) @TO@ createChildContainer(options) @AT@ 8309 @LENGTH@ 59
------------------UPD SimpleName@@MethodName:createChildContainer:[(CreateContainerChildOptions)options] @TO@ MethodName:createChildContainer:[options] @AT@ 8309 @LENGTH@ 59
---------------------DEL CastExpression@@(CreateContainerChildOptions)options @AT@ 8330 @LENGTH@ 37
------------------------DEL SimpleType@@CreateContainerChildOptions @AT@ 8331 @LENGTH@ 27
------------------------DEL SimpleName@@options @AT@ 8360 @LENGTH@ 7
---------------------INS SimpleName@@options @TO@ SimpleName@@MethodName:createChildContainer:[(CreateContainerChildOptions)options] @AT@ 8521 @LENGTH@ 7
---INS VariableDeclarationStatement@@String currentID=""; @TO@ TryStatement@@try {  ContainerProvider provider=getProvider(options.getProviderType());  if (provider == null) {    throw new FabricException("Unable to find an container provider type '" + options.getProviderType() + "'");  }  Set<? extends CreateContainerMetadata> createMetadata=new LinkedHashSet<CreateContainerMetadata>();  String parent=options.getParent() != null ? options.getParent() : "";  Container parentContainer=null;  if (provider instanceof ChildContainerProvider && !getCurrentContainer().getId().equals(parent)) {    createMetadata=createChildContainer((CreateContainerChildOptions)options);  } else {    createMetadata=provider.create(options);  }  containers=new Container[createMetadata.size()];  int container=0;  for (  CreateContainerMetadata metadata : createMetadata) {    if (!options.isEnsembleServer()) {      createContainerConfig(parent,metadata.getContainerName());    }    containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);    containers[container++].setCreateContainerMetadata(metadata);  }} catch (FabricException e) {  throw e;}catch (Exception e) {  throw new FabricException(e);} @AT@ 8177 @LENGTH@ 22
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String currentID=""; @AT@ 8177 @LENGTH@ 6
------INS VariableDeclarationFragment@@currentID="" @TO@ VariableDeclarationStatement@@String currentID=""; @AT@ 8184 @LENGTH@ 14
---------INS SimpleName@@currentID @TO@ VariableDeclarationFragment@@currentID="" @AT@ 8184 @LENGTH@ 9
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@currentID="" @AT@ 8196 @LENGTH@ 2
---INS VariableDeclarationStatement@@Container currentContainer=getCurrentContainer(); @TO@ TryStatement@@try {  ContainerProvider provider=getProvider(options.getProviderType());  if (provider == null) {    throw new FabricException("Unable to find an container provider type '" + options.getProviderType() + "'");  }  Set<? extends CreateContainerMetadata> createMetadata=new LinkedHashSet<CreateContainerMetadata>();  String parent=options.getParent() != null ? options.getParent() : "";  Container parentContainer=null;  if (provider instanceof ChildContainerProvider && !getCurrentContainer().getId().equals(parent)) {    createMetadata=createChildContainer((CreateContainerChildOptions)options);  } else {    createMetadata=provider.create(options);  }  containers=new Container[createMetadata.size()];  int container=0;  for (  CreateContainerMetadata metadata : createMetadata) {    if (!options.isEnsembleServer()) {      createContainerConfig(parent,metadata.getContainerName());    }    containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);    containers[container++].setCreateContainerMetadata(metadata);  }} catch (FabricException e) {  throw e;}catch (Exception e) {  throw new FabricException(e);} @AT@ 8212 @LENGTH@ 51
------INS SimpleType@@Container @TO@ VariableDeclarationStatement@@Container currentContainer=getCurrentContainer(); @AT@ 8212 @LENGTH@ 9
------INS VariableDeclarationFragment@@currentContainer=getCurrentContainer() @TO@ VariableDeclarationStatement@@Container currentContainer=getCurrentContainer(); @AT@ 8222 @LENGTH@ 40
---------INS SimpleName@@currentContainer @TO@ VariableDeclarationFragment@@currentContainer=getCurrentContainer() @AT@ 8222 @LENGTH@ 16
---------INS MethodInvocation@@MethodName:getCurrentContainer:[] @TO@ VariableDeclarationFragment@@currentContainer=getCurrentContainer() @AT@ 8241 @LENGTH@ 21
---INS IfStatement@@if (currentContainer != null) {  currentID=currentContainer.getId();} @TO@ TryStatement@@try {  ContainerProvider provider=getProvider(options.getProviderType());  if (provider == null) {    throw new FabricException("Unable to find an container provider type '" + options.getProviderType() + "'");  }  Set<? extends CreateContainerMetadata> createMetadata=new LinkedHashSet<CreateContainerMetadata>();  String parent=options.getParent() != null ? options.getParent() : "";  Container parentContainer=null;  if (provider instanceof ChildContainerProvider && !getCurrentContainer().getId().equals(parent)) {    createMetadata=createChildContainer((CreateContainerChildOptions)options);  } else {    createMetadata=provider.create(options);  }  containers=new Container[createMetadata.size()];  int container=0;  for (  CreateContainerMetadata metadata : createMetadata) {    if (!options.isEnsembleServer()) {      createContainerConfig(parent,metadata.getContainerName());    }    containers[container]=new ContainerImpl(parentContainer,metadata.getContainerName(),FabricServiceImpl.this);    containers[container++].setCreateContainerMetadata(metadata);  }} catch (FabricException e) {  throw e;}catch (Exception e) {  throw new FabricException(e);} @AT@ 8276 @LENGTH@ 99
------INS InfixExpression@@currentContainer != null @TO@ IfStatement@@if (currentContainer != null) {  currentID=currentContainer.getId();} @AT@ 8280 @LENGTH@ 24
---------INS SimpleName@@currentContainer @TO@ InfixExpression@@currentContainer != null @AT@ 8280 @LENGTH@ 16
---------INS Operator@@!= @TO@ InfixExpression@@currentContainer != null @AT@ 8296 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@currentContainer != null @AT@ 8300 @LENGTH@ 4
------INS Block@@ThenBody:{  currentID=currentContainer.getId();} @TO@ IfStatement@@if (currentContainer != null) {  currentID=currentContainer.getId();} @AT@ 8306 @LENGTH@ 69
---------INS ExpressionStatement@@Assignment:currentID=currentContainer.getId() @TO@ Block@@ThenBody:{  currentID=currentContainer.getId();} @AT@ 8324 @LENGTH@ 37
------------INS Assignment@@currentID=currentContainer.getId() @TO@ ExpressionStatement@@Assignment:currentID=currentContainer.getId() @AT@ 8324 @LENGTH@ 36
---------------INS SimpleName@@currentID @TO@ Assignment@@currentID=currentContainer.getId() @AT@ 8324 @LENGTH@ 9
---------------INS Operator@@= @TO@ Assignment@@currentID=currentContainer.getId() @AT@ 8333 @LENGTH@ 1
---------------INS MethodInvocation@@currentContainer.getId() @TO@ Assignment@@currentID=currentContainer.getId() @AT@ 8336 @LENGTH@ 24
------------------INS SimpleName@@Name:currentContainer @TO@ MethodInvocation@@currentContainer.getId() @AT@ 8336 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@currentContainer.getId() @AT@ 8353 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from(de).filter(simple("${in.body.id} == ID:2")).to(testEndPointUri2) @TO@ MethodInvocation:from(de).filter(simple("${in.body.id} == 'ID:2'")).to(testEndPointUri2) @AT@ 9817 @LENGTH@ 70
---UPD MethodInvocation@@from(de).filter(simple("${in.body.id} == ID:2")).to(testEndPointUri2) @TO@ from(de).filter(simple("${in.body.id} == 'ID:2'")).to(testEndPointUri2) @AT@ 9817 @LENGTH@ 69
------UPD MethodInvocation@@MethodName:filter:[simple("${in.body.id} == ID:2")] @TO@ MethodName:filter:[simple("${in.body.id} == 'ID:2'")] @AT@ 9817 @LENGTH@ 48
---------UPD MethodInvocation@@simple("${in.body.id} == ID:2") @TO@ simple("${in.body.id} == 'ID:2'") @AT@ 9833 @LENGTH@ 31
------------UPD SimpleName@@MethodName:simple:["${in.body.id} == ID:2"] @TO@ MethodName:simple:["${in.body.id} == 'ID:2'"] @AT@ 9833 @LENGTH@ 31
---------------UPD StringLiteral@@"${in.body.id} == ID:2" @TO@ "${in.body.id} == 'ID:2'" @AT@ 9840 @LENGTH@ 23


DEL IfStatement@@if (status != Status.STATUS_COMMITTED) {  entityBeanComponent.releaseEntityBeanInstance(instance);} @AT@ 5877 @LENGTH@ 167
---DEL InfixExpression@@status != Status.STATUS_COMMITTED @AT@ 5881 @LENGTH@ 33
------DEL SimpleName@@status @AT@ 5881 @LENGTH@ 6
------DEL Operator@@!= @AT@ 5887 @LENGTH@ 2
------DEL QualifiedName@@Status.STATUS_COMMITTED @AT@ 5891 @LENGTH@ 23
---------DEL SimpleName@@Status @AT@ 5891 @LENGTH@ 6
---------DEL SimpleName@@STATUS_COMMITTED @AT@ 5898 @LENGTH@ 16
---DEL Block@@ThenBody:{  entityBeanComponent.releaseEntityBeanInstance(instance);} @AT@ 5916 @LENGTH@ 128
------DEL ExpressionStatement@@MethodInvocation:entityBeanComponent.releaseEntityBeanInstance(instance) @AT@ 5954 @LENGTH@ 56
---------DEL MethodInvocation@@entityBeanComponent.releaseEntityBeanInstance(instance) @AT@ 5954 @LENGTH@ 55
------------DEL SimpleName@@Name:entityBeanComponent @AT@ 5954 @LENGTH@ 19
------------DEL SimpleName@@MethodName:releaseEntityBeanInstance:[instance] @AT@ 5974 @LENGTH@ 35
---------------DEL SimpleName@@instance @AT@ 6000 @LENGTH@ 8


UPD Block@@ThenBody:{  response.setContentLength(data.length());  response.getWriter().print(data);  response.getWriter().flush();} @TO@ ThenBody:{  String charset=IOHelper.getCharsetName(exchange,true);  final int dataByteLength=data.getBytes(charset).length;  response.setCharacterEncoding(charset);  response.setContentLength(dataByteLength);  response.getWriter().print(data);  response.getWriter().flush();} @AT@ 14681 @LENGTH@ 228
---UPD ExpressionStatement@@MethodInvocation:response.setContentLength(data.length()) @TO@ MethodInvocation:response.setContentLength(dataByteLength) @AT@ 14758 @LENGTH@ 41
------UPD MethodInvocation@@response.setContentLength(data.length()) @TO@ response.setContentLength(dataByteLength) @AT@ 14758 @LENGTH@ 40
---------UPD SimpleName@@MethodName:setContentLength:[data.length()] @TO@ MethodName:setContentLength:[dataByteLength] @AT@ 14767 @LENGTH@ 31
------------DEL MethodInvocation@@data.length() @AT@ 14784 @LENGTH@ 13
---------------DEL SimpleName@@Name:data @AT@ 14784 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:length:[] @AT@ 14789 @LENGTH@ 8
------------INS SimpleName@@dataByteLength @TO@ SimpleName@@MethodName:setContentLength:[data.length()] @AT@ 15001 @LENGTH@ 14
---INS VariableDeclarationStatement@@String charset=IOHelper.getCharsetName(exchange,true); @TO@ Block@@ThenBody:{  response.setContentLength(data.length());  response.getWriter().print(data);  response.getWriter().flush();} @AT@ 14771 @LENGTH@ 57
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String charset=IOHelper.getCharsetName(exchange,true); @AT@ 14771 @LENGTH@ 6
------INS VariableDeclarationFragment@@charset=IOHelper.getCharsetName(exchange,true) @TO@ VariableDeclarationStatement@@String charset=IOHelper.getCharsetName(exchange,true); @AT@ 14778 @LENGTH@ 49
---------INS SimpleName@@charset @TO@ VariableDeclarationFragment@@charset=IOHelper.getCharsetName(exchange,true) @AT@ 14778 @LENGTH@ 7
---------INS MethodInvocation@@IOHelper.getCharsetName(exchange,true) @TO@ VariableDeclarationFragment@@charset=IOHelper.getCharsetName(exchange,true) @AT@ 14788 @LENGTH@ 39
------------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.getCharsetName(exchange,true) @AT@ 14788 @LENGTH@ 8
------------INS SimpleName@@MethodName:getCharsetName:[exchange, true] @TO@ MethodInvocation@@IOHelper.getCharsetName(exchange,true) @AT@ 14797 @LENGTH@ 30
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getCharsetName:[exchange, true] @AT@ 14812 @LENGTH@ 8
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getCharsetName:[exchange, true] @AT@ 14822 @LENGTH@ 4
---INS VariableDeclarationStatement@@final int dataByteLength=data.getBytes(charset).length; @TO@ Block@@ThenBody:{  response.setContentLength(data.length());  response.getWriter().print(data);  response.getWriter().flush();} @AT@ 14845 @LENGTH@ 57
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int dataByteLength=data.getBytes(charset).length; @AT@ 14845 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int dataByteLength=data.getBytes(charset).length; @AT@ 14851 @LENGTH@ 3
------INS VariableDeclarationFragment@@dataByteLength=data.getBytes(charset).length @TO@ VariableDeclarationStatement@@final int dataByteLength=data.getBytes(charset).length; @AT@ 14855 @LENGTH@ 46
---------INS SimpleName@@dataByteLength @TO@ VariableDeclarationFragment@@dataByteLength=data.getBytes(charset).length @AT@ 14855 @LENGTH@ 14
---------INS FieldAccess@@data.getBytes(charset).length @TO@ VariableDeclarationFragment@@dataByteLength=data.getBytes(charset).length @AT@ 14872 @LENGTH@ 29
------------INS MethodInvocation@@data.getBytes(charset) @TO@ FieldAccess@@data.getBytes(charset).length @AT@ 14872 @LENGTH@ 22
---------------INS SimpleName@@Name:data @TO@ MethodInvocation@@data.getBytes(charset) @AT@ 14872 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getBytes:[charset] @TO@ MethodInvocation@@data.getBytes(charset) @AT@ 14877 @LENGTH@ 17
------------------INS SimpleName@@charset @TO@ SimpleName@@MethodName:getBytes:[charset] @AT@ 14886 @LENGTH@ 7
------------INS SimpleName@@length @TO@ FieldAccess@@data.getBytes(charset).length @AT@ 14895 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:response.setCharacterEncoding(charset) @TO@ Block@@ThenBody:{  response.setContentLength(data.length());  response.getWriter().print(data);  response.getWriter().flush();} @AT@ 14919 @LENGTH@ 39
------INS MethodInvocation@@response.setCharacterEncoding(charset) @TO@ ExpressionStatement@@MethodInvocation:response.setCharacterEncoding(charset) @AT@ 14919 @LENGTH@ 38
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setCharacterEncoding(charset) @AT@ 14919 @LENGTH@ 8
---------INS SimpleName@@MethodName:setCharacterEncoding:[charset] @TO@ MethodInvocation@@response.setCharacterEncoding(charset) @AT@ 14928 @LENGTH@ 29
------------INS SimpleName@@charset @TO@ SimpleName@@MethodName:setCharacterEncoding:[charset] @AT@ 14949 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]LRUSoftCache, LRUCache<K,V> @AT@ 2359 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2359 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2367 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2374 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2380 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 2385 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 2385 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 2404 @LENGTH@ 2


UPD SwitchStatement@@switch (element) {case SESSION_TIMEOUT:  try {    sessionConfig.setSessionTimeout(Integer.valueOf(getElementText(reader)));  } catch (  NumberFormatException e) {    throw unexpectedValue(reader,e);  }break;case COOKIE_CONFIG:sessionConfig.setCookieConfig(CookieConfigMetaDataParser.parse(reader));break;case TRACKING_MODE:List<SessionTrackingModeType> trackingModes=sessionConfig.getSessionTrackingModes();if (trackingModes == null) {trackingModes=new ArrayList<SessionTrackingModeType>();sessionConfig.setSessionTrackingModes(trackingModes);}trackingModes.add(SessionTrackingModeType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @TO@ switch (element) {case SESSION_TIMEOUT:  try {    sessionConfig.setSessionTimeout(Integer.valueOf(getElementText(reader)));  } catch (  NumberFormatException e) {    throw unexpectedValue(reader,e);  }break;case COOKIE_CONFIG:sessionConfig.setCookieConfig(CookieConfigMetaDataParser.parse(reader));break;case TRACKING_MODE:List<SessionTrackingModeType> trackingModes=sessionConfig.getSessionTrackingModes();if (trackingModes == null) {trackingModes=new ArrayList<SessionTrackingModeType>();sessionConfig.setSessionTrackingModes(trackingModes);}try {trackingModes.add(SessionTrackingModeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {throw unexpectedValue(reader,e);}break;default :throw unexpectedElement(reader);} @AT@ 2466 @LENGTH@ 1069
---INS TryStatement@@try {  trackingModes.add(SessionTrackingModeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ SwitchStatement@@switch (element) {case SESSION_TIMEOUT:  try {    sessionConfig.setSessionTimeout(Integer.valueOf(getElementText(reader)));  } catch (  NumberFormatException e) {    throw unexpectedValue(reader,e);  }break;case COOKIE_CONFIG:sessionConfig.setCookieConfig(CookieConfigMetaDataParser.parse(reader));break;case TRACKING_MODE:List<SessionTrackingModeType> trackingModes=sessionConfig.getSessionTrackingModes();if (trackingModes == null) {trackingModes=new ArrayList<SessionTrackingModeType>();sessionConfig.setSessionTrackingModes(trackingModes);}trackingModes.add(SessionTrackingModeType.valueOf(getElementText(reader)));break;default :throw unexpectedElement(reader);} @AT@ 3360 @LENGTH@ 244
------MOV ExpressionStatement@@MethodInvocation:trackingModes.add(SessionTrackingModeType.valueOf(getElementText(reader))) @TO@ TryStatement@@try {  trackingModes.add(SessionTrackingModeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3360 @LENGTH@ 75
------INS CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @TO@ TryStatement@@try {  trackingModes.add(SessionTrackingModeType.valueOf(getElementText(reader)));} catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3488 @LENGTH@ 116
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3495 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3495 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3520 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw unexpectedValue(reader,e);} @AT@ 3549 @LENGTH@ 33
------------INS MethodInvocation@@unexpectedValue(reader,e) @TO@ ThrowStatement@@MethodInvocation:unexpectedValue(reader,e) @AT@ 3555 @LENGTH@ 26
---------------INS SimpleName@@MethodName:unexpectedValue:[reader, e] @TO@ MethodInvocation@@unexpectedValue(reader,e) @AT@ 3555 @LENGTH@ 26
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3571 @LENGTH@ 6
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:unexpectedValue:[reader, e] @AT@ 3579 @LENGTH@ 1


UPD IfStatement@@if (callback instanceof CallerPrincipalCallback) {  CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;  if (callerCallback.getPrincipal() != null)   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());} else if (callback instanceof PasswordValidationCallback) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} else if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @TO@ if (callback instanceof CallerPrincipalCallback) {  if (this.callerPrincipalCallback == null) {    CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;    if (callerCallback.getPrincipal() != null)     this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else     this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());  }} else if (callback instanceof PasswordValidationCallback) {  if (this.passwordValidationCallback == null) {    PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;    this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());  }} else if (callback instanceof GroupPrincipalCallback) {  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 2231 @LENGTH@ 1436
---INS Block@@ThenBody:{  if (this.callerPrincipalCallback == null) {    CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;    if (callerCallback.getPrincipal() != null)     this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else     this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());  }} @TO@ IfStatement@@if (callback instanceof CallerPrincipalCallback) {  CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;  if (callerCallback.getPrincipal() != null)   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());} else if (callback instanceof PasswordValidationCallback) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} else if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 2281 @LENGTH@ 666
------INS IfStatement@@if (this.callerPrincipalCallback == null) {  CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;  if (callerCallback.getPrincipal() != null)   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());} @TO@ Block@@ThenBody:{  if (this.callerPrincipalCallback == null) {    CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;    if (callerCallback.getPrincipal() != null)     this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else     this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());  }} @AT@ 2303 @LENGTH@ 626
---------MOV Block@@ThenBody:{  CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;  if (callerCallback.getPrincipal() != null)   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());} @TO@ IfStatement@@if (this.callerPrincipalCallback == null) {  CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;  if (callerCallback.getPrincipal() != null)   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());} @AT@ 2280 @LENGTH@ 552
---------INS InfixExpression@@this.callerPrincipalCallback == null @TO@ IfStatement@@if (this.callerPrincipalCallback == null) {  CallerPrincipalCallback callerCallback=(CallerPrincipalCallback)callback;  if (callerCallback.getPrincipal() != null)   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getPrincipal()); else   this.callerPrincipalCallback=new CallerPrincipalCallback(callerCallback.getSubject(),callerCallback.getName());} @AT@ 2307 @LENGTH@ 36
------------INS FieldAccess@@this.callerPrincipalCallback @TO@ InfixExpression@@this.callerPrincipalCallback == null @AT@ 2307 @LENGTH@ 28
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.callerPrincipalCallback @AT@ 2307 @LENGTH@ 4
---------------INS SimpleName@@callerPrincipalCallback @TO@ FieldAccess@@this.callerPrincipalCallback @AT@ 2312 @LENGTH@ 23
------------INS Operator@@== @TO@ InfixExpression@@this.callerPrincipalCallback == null @AT@ 2335 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.callerPrincipalCallback == null @AT@ 2339 @LENGTH@ 4
---UPD Block@@ElseBody:if (callback instanceof PasswordValidationCallback) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} else if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @TO@ ElseBody:if (callback instanceof PasswordValidationCallback) {  if (this.passwordValidationCallback == null) {    PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;    this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());  }} else if (callback instanceof GroupPrincipalCallback) {  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 2838 @LENGTH@ 829
------UPD IfStatement@@if (callback instanceof PasswordValidationCallback) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} else if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @TO@ if (callback instanceof PasswordValidationCallback) {  if (this.passwordValidationCallback == null) {    PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;    this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());  }} else if (callback instanceof GroupPrincipalCallback) {  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 2838 @LENGTH@ 829
---------INS Block@@ThenBody:{  if (this.passwordValidationCallback == null) {    PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;    this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());  }} @TO@ IfStatement@@if (callback instanceof PasswordValidationCallback) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} else if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 3005 @LENGTH@ 418
------------INS IfStatement@@if (this.passwordValidationCallback == null) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} @TO@ Block@@ThenBody:{  if (this.passwordValidationCallback == null) {    PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;    this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());  }} @AT@ 3027 @LENGTH@ 378
---------------MOV Block@@ThenBody:{  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} @TO@ IfStatement@@if (this.passwordValidationCallback == null) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} @AT@ 2890 @LENGTH@ 317
---------------MOV Block@@ThenBody:{  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} @TO@ IfStatement@@if (this.passwordValidationCallback == null) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} @AT@ 2890 @LENGTH@ 317
---------------INS InfixExpression@@this.passwordValidationCallback == null @TO@ IfStatement@@if (this.passwordValidationCallback == null) {  PasswordValidationCallback passCallback=(PasswordValidationCallback)callback;  this.passwordValidationCallback=new PasswordValidationCallback(passCallback.getSubject(),passCallback.getUsername(),passCallback.getPassword());} @AT@ 3031 @LENGTH@ 39
------------------INS FieldAccess@@this.passwordValidationCallback @TO@ InfixExpression@@this.passwordValidationCallback == null @AT@ 3031 @LENGTH@ 31
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.passwordValidationCallback @AT@ 3031 @LENGTH@ 4
---------------------INS SimpleName@@passwordValidationCallback @TO@ FieldAccess@@this.passwordValidationCallback @AT@ 3036 @LENGTH@ 26
------------------INS Operator@@== @TO@ InfixExpression@@this.passwordValidationCallback == null @AT@ 3062 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@this.passwordValidationCallback == null @AT@ 3066 @LENGTH@ 4
---------UPD Block@@ElseBody:if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @TO@ ElseBody:if (callback instanceof GroupPrincipalCallback) {  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 3213 @LENGTH@ 454
------------UPD IfStatement@@if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @TO@ if (callback instanceof GroupPrincipalCallback) {  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 3213 @LENGTH@ 454
---------------INS Block@@ThenBody:{  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} @TO@ IfStatement@@if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 3477 @LENGTH@ 371
------------------INS IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ Block@@ThenBody:{  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} @AT@ 3499 @LENGTH@ 331
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------INS InfixExpression@@this.groupPrincipalCallback == null @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3503 @LENGTH@ 35
------------------------INS FieldAccess@@this.groupPrincipalCallback @TO@ InfixExpression@@this.groupPrincipalCallback == null @AT@ 3503 @LENGTH@ 27
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.groupPrincipalCallback @AT@ 3503 @LENGTH@ 4
---------------------------INS SimpleName@@groupPrincipalCallback @TO@ FieldAccess@@this.groupPrincipalCallback @AT@ 3508 @LENGTH@ 22
------------------------INS Operator@@== @TO@ InfixExpression@@this.groupPrincipalCallback == null @AT@ 3530 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@this.groupPrincipalCallback == null @AT@ 3534 @LENGTH@ 4
------------UPD IfStatement@@if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @TO@ if (callback instanceof GroupPrincipalCallback) {  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 3213 @LENGTH@ 454
---------------INS Block@@ThenBody:{  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} @TO@ IfStatement@@if (callback instanceof GroupPrincipalCallback) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} else WebLogger.WEB_SECURITY_LOGGER.tracef("Callback %s not supported",callback.getClass().getCanonicalName()); @AT@ 3477 @LENGTH@ 371
------------------INS IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ Block@@ThenBody:{  if (this.groupPrincipalCallback == null) {    GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;    this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());  }} @AT@ 3499 @LENGTH@ 331
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------MOV Block@@ThenBody:{  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3261 @LENGTH@ 274
---------------------INS InfixExpression@@this.groupPrincipalCallback == null @TO@ IfStatement@@if (this.groupPrincipalCallback == null) {  GroupPrincipalCallback groupCallback=(GroupPrincipalCallback)callback;  this.groupPrincipalCallback=new GroupPrincipalCallback(groupCallback.getSubject(),groupCallback.getGroups());} @AT@ 3503 @LENGTH@ 35
------------------------INS FieldAccess@@this.groupPrincipalCallback @TO@ InfixExpression@@this.groupPrincipalCallback == null @AT@ 3503 @LENGTH@ 27
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.groupPrincipalCallback @AT@ 3503 @LENGTH@ 4
---------------------------INS SimpleName@@groupPrincipalCallback @TO@ FieldAccess@@this.groupPrincipalCallback @AT@ 3508 @LENGTH@ 22
------------------------INS Operator@@== @TO@ InfixExpression@@this.groupPrincipalCallback == null @AT@ 3530 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@this.groupPrincipalCallback == null @AT@ 3534 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(3000) @TO@ MethodInvocation:Thread.sleep(4000) @AT@ 1628 @LENGTH@ 19
---UPD MethodInvocation@@Thread.sleep(3000) @TO@ Thread.sleep(4000) @AT@ 1628 @LENGTH@ 18
------UPD SimpleName@@MethodName:sleep:[3000] @TO@ MethodName:sleep:[4000] @AT@ 1635 @LENGTH@ 11
---------UPD NumberLiteral@@3000 @TO@ 4000 @AT@ 1641 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 2491 @LENGTH@ 1029
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 2550 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2550 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2556 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 2563 @LENGTH@ 11


UPD IfStatement@@if (!isEmpty(ejbName)) {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name));} else {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name));} @TO@ if (!isEmpty(ejbName)) {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name,deploymentUnit));} else {  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name,deploymentUnit));} @AT@ 6262 @LENGTH@ 406
---UPD Block@@ThenBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name));} @TO@ ThenBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name,deploymentUnit));} @AT@ 6285 @LENGTH@ 193
------UPD ExpressionStatement@@Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name)) @TO@ Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name,deploymentUnit)) @AT@ 6311 @LENGTH@ 145
---------UPD Assignment@@bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name)) @TO@ bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name,deploymentUnit)) @AT@ 6311 @LENGTH@ 144
------------UPD ClassInstanceCreation@@BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name)] @TO@ BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name,deploymentUnit)] @AT@ 6334 @LENGTH@ 121
---------------UPD Assignment@@ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name) @TO@ ejbInjectionSource=new EjbInjectionSource(ejbName,remoteInterfaceType.getName(),name,deploymentUnit) @AT@ 6365 @LENGTH@ 89
------------------UPD ClassInstanceCreation@@EjbInjectionSource[ejbName, remoteInterfaceType.getName(), name] @TO@ EjbInjectionSource[ejbName, remoteInterfaceType.getName(), name, deploymentUnit] @AT@ 6386 @LENGTH@ 68
---------------------INS SimpleName@@deploymentUnit @TO@ ClassInstanceCreation@@EjbInjectionSource[ejbName, remoteInterfaceType.getName(), name] @AT@ 6455 @LENGTH@ 14
---UPD Block@@ElseBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name));} @TO@ ElseBody:{  bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name,deploymentUnit));} @AT@ 6484 @LENGTH@ 184
------UPD ExpressionStatement@@Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name)) @TO@ Assignment:bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name,deploymentUnit)) @AT@ 6510 @LENGTH@ 136
---------UPD Assignment@@bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name)) @TO@ bindingConfiguration=new BindingConfiguration(name,ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name,deploymentUnit)) @AT@ 6510 @LENGTH@ 135
------------UPD ClassInstanceCreation@@BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name)] @TO@ BindingConfiguration[name, ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name,deploymentUnit)] @AT@ 6533 @LENGTH@ 112
---------------UPD Assignment@@ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name) @TO@ ejbInjectionSource=new EjbInjectionSource(remoteInterfaceType.getName(),name,deploymentUnit) @AT@ 6564 @LENGTH@ 80
------------------UPD ClassInstanceCreation@@EjbInjectionSource[remoteInterfaceType.getName(), name] @TO@ EjbInjectionSource[remoteInterfaceType.getName(), name, deploymentUnit] @AT@ 6585 @LENGTH@ 59
---------------------INS SimpleName@@deploymentUnit @TO@ ClassInstanceCreation@@EjbInjectionSource[remoteInterfaceType.getName(), name] @AT@ 6661 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @TO@ MethodDeclaration@@voidMethodName:ServerGroupSeparatorState, ServerGroupState sg,  @AT@ 1666 @LENGTH@ 27
---INS MethodInvocation@@setIgnoreWhitespaces(true) @TO@ ExpressionStatement@@MethodInvocation:setIgnoreWhitespaces(true) @AT@ 1666 @LENGTH@ 26
------INS SimpleName@@MethodName:setIgnoreWhitespaces:[true] @TO@ MethodInvocation@@setIgnoreWhitespaces(true) @AT@ 1666 @LENGTH@ 26
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setIgnoreWhitespaces:[true] @AT@ 1687 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo("https://api.linkedin.com/v1/people/~/network/updates?format=json&count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/updates.json",getClass()),responseHeaders)) @TO@ MethodInvocation:mockServer.expect(requestTo("https://api.linkedin.com/v1/people/~/network/updates?count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL&format=json")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/updates.json",getClass()),responseHeaders)) @AT@ 5351 @LENGTH@ 372
---UPD MethodInvocation@@mockServer.expect(requestTo("https://api.linkedin.com/v1/people/~/network/updates?format=json&count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/updates.json",getClass()),responseHeaders)) @TO@ mockServer.expect(requestTo("https://api.linkedin.com/v1/people/~/network/updates?count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL&format=json")).andExpect(method(GET)).andRespond(withResponse(new ClassPathResource("testdata/updates.json",getClass()),responseHeaders)) @AT@ 5351 @LENGTH@ 371
------UPD MethodInvocation@@MethodName:expect:[requestTo("https://api.linkedin.com/v1/people/~/network/updates?format=json&count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL")] @TO@ MethodName:expect:[requestTo("https://api.linkedin.com/v1/people/~/network/updates?count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL&format=json")] @AT@ 5351 @LENGTH@ 243
---------UPD MethodInvocation@@requestTo("https://api.linkedin.com/v1/people/~/network/updates?format=json&count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL") @TO@ requestTo("https://api.linkedin.com/v1/people/~/network/updates?count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL&format=json") @AT@ 5369 @LENGTH@ 224
------------UPD SimpleName@@MethodName:requestTo:["https://api.linkedin.com/v1/people/~/network/updates?format=json&count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL"] @TO@ MethodName:requestTo:["https://api.linkedin.com/v1/people/~/network/updates?count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL&format=json"] @AT@ 5369 @LENGTH@ 224
---------------UPD StringLiteral@@"https://api.linkedin.com/v1/people/~/network/updates?format=json&count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL" @TO@ "https://api.linkedin.com/v1/people/~/network/updates?count=10&start=0&type=ANSW&type=APPS&type=CMPY&type=CONN&type=JOBS&type=JGRP&type=PICT&type=PRFX&type=RECU&type=PRFU&type=QSTN&type=SHAR&type=VIRL&format=json" @AT@ 5379 @LENGTH@ 213


UPD MethodDeclaration@@public, static, synchronized, Set<ServiceName>, MethodName:getResourceAdapterDependencies, final String raName,  @TO@ public, static, synchronized, Set<ServiceName>, MethodName:getResourceAdapterServiceNames, final String raName,  @AT@ 12914 @LENGTH@ 710
---UPD SimpleName@@MethodName:getResourceAdapterDependencies @TO@ MethodName:getResourceAdapterServiceNames @AT@ 12958 @LENGTH@ 30


UPD MethodDeclaration@@public, void, MethodName:testReadChildrenResources, IOException,  @TO@ public, void, MethodName:testReadChildrenResources, IOException, MgmtOperationException,  @AT@ 3041 @LENGTH@ 953
---INS SimpleType@@MgmtOperationException @TO@ MethodDeclaration@@public, void, MethodName:testReadChildrenResources, IOException,  @AT@ 3178 @LENGTH@ 22


UPD IfStatement@@if (port == -1) this.destinationPort=port; @TO@ if (this.destinationPort == -1) {  this.destinationPort=port;} @AT@ 4126 @LENGTH@ 56
---UPD InfixExpression@@port == -1 @TO@ this.destinationPort == -1 @AT@ 4130 @LENGTH@ 10
------DEL SimpleName@@port @AT@ 4130 @LENGTH@ 4
------INS FieldAccess@@this.destinationPort @TO@ InfixExpression@@port == -1 @AT@ 4130 @LENGTH@ 20
---------INS ThisExpression@@this @TO@ FieldAccess@@this.destinationPort @AT@ 4130 @LENGTH@ 4
---------INS SimpleName@@destinationPort @TO@ FieldAccess@@this.destinationPort @AT@ 4135 @LENGTH@ 15
---UPD Block@@ThenBody:this.destinationPort=port; @TO@ ThenBody:{  this.destinationPort=port;} @AT@ 4154 @LENGTH@ 28


UPD VariableDeclarationStatement@@Future future=(Future)value; @TO@ Future<?> future=(Future<?>)value; @AT@ 1952 @LENGTH@ 31
---INS ParameterizedType@@Future<?> @TO@ VariableDeclarationStatement@@Future future=(Future)value; @AT@ 1952 @LENGTH@ 9
------INS SimpleType@@Future @TO@ ParameterizedType@@Future<?> @AT@ 1952 @LENGTH@ 6
------INS WildcardType@@? @TO@ ParameterizedType@@Future<?> @AT@ 1959 @LENGTH@ 1
---DEL SimpleType@@Future @AT@ 1952 @LENGTH@ 6
---UPD VariableDeclarationFragment@@future=(Future)value @TO@ future=(Future<?>)value @AT@ 1959 @LENGTH@ 23
------UPD CastExpression@@(Future)value @TO@ (Future<?>)value @AT@ 1968 @LENGTH@ 14
---------DEL SimpleType@@Future @AT@ 1969 @LENGTH@ 6
---------INS ParameterizedType@@Future<?> @TO@ CastExpression@@(Future)value @AT@ 1972 @LENGTH@ 9
------------INS SimpleType@@Future @TO@ ParameterizedType@@Future<?> @AT@ 1972 @LENGTH@ 6
------------INS WildcardType@@? @TO@ ParameterizedType@@Future<?> @AT@ 1979 @LENGTH@ 1


UPD Block@@SyncBody:{  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      component.getCache().reference(instance);      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        syncRegistered=true;        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (currentTransactionKey == null) {      instance.store();      releaseInstance(instance,true);    } else     if (!syncRegistered) {      lock.unlock();    }  }} @TO@ SyncBody:{  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  if (context.getPrivateData(InternalInvocationMarker.class) == null) {    if (instance.isRemoved() || instance.isDiscarded()) {      final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);      component.getCache().release(instance,true);      lock.unlock();      throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);    }  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        syncRegistered=true;        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (currentTransactionKey == null) {      instance.store();      releaseInstance(instance,true);    } else     if (!syncRegistered) {      component.getCache().release(instance,true);      lock.unlock();    }  }} @AT@ 4047 @LENGTH@ 3093
---INS IfStatement@@if (context.getPrivateData(InternalInvocationMarker.class) == null) {  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    component.getCache().release(instance,true);    lock.unlock();    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} @TO@ Block@@SyncBody:{  if (ROOT_LOGGER.isTraceEnabled()) {    ROOT_LOGGER.trace("Acquired lock: " + lock + " for entity bean instance: "+ instance+ " during invocation: "+ context);  }  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }  Object currentTransactionKey=null;  try {    currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();    if (!instance.isSynchronizeRegistered()) {      component.getCache().reference(instance);      if (currentTransactionKey != null) {        final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);        transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);        syncRegistered=true;        if (ROOT_LOGGER.isTraceEnabled()) {          ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);        }      }      instance.setSynchronizationRegistered(true);    }    return context.proceed();  }  finally {    if (currentTransactionKey == null) {      instance.store();      releaseInstance(instance,true);    } else     if (!syncRegistered) {      lock.unlock();    }  }} @AT@ 4279 @LENGTH@ 511
------INS InfixExpression@@context.getPrivateData(InternalInvocationMarker.class) == null @TO@ IfStatement@@if (context.getPrivateData(InternalInvocationMarker.class) == null) {  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    component.getCache().release(instance,true);    lock.unlock();    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} @AT@ 4283 @LENGTH@ 62
---------INS MethodInvocation@@context.getPrivateData(InternalInvocationMarker.class) @TO@ InfixExpression@@context.getPrivateData(InternalInvocationMarker.class) == null @AT@ 4283 @LENGTH@ 54
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPrivateData(InternalInvocationMarker.class) @AT@ 4283 @LENGTH@ 7
------------INS SimpleName@@MethodName:getPrivateData:[InternalInvocationMarker.class] @TO@ MethodInvocation@@context.getPrivateData(InternalInvocationMarker.class) @AT@ 4291 @LENGTH@ 46
---------------INS TypeLiteral@@InternalInvocationMarker.class @TO@ SimpleName@@MethodName:getPrivateData:[InternalInvocationMarker.class] @AT@ 4306 @LENGTH@ 30
---------INS Operator@@== @TO@ InfixExpression@@context.getPrivateData(InternalInvocationMarker.class) == null @AT@ 4337 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getPrivateData(InternalInvocationMarker.class) == null @AT@ 4341 @LENGTH@ 4
------INS Block@@ThenBody:{  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    component.getCache().release(instance,true);    lock.unlock();    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} @TO@ IfStatement@@if (context.getPrivateData(InternalInvocationMarker.class) == null) {  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    component.getCache().release(instance,true);    lock.unlock();    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} @AT@ 4347 @LENGTH@ 443
---------MOV IfStatement@@if (instance.isRemoved() || instance.isDiscarded()) {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ Block@@ThenBody:{  if (instance.isRemoved() || instance.isDiscarded()) {    final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);    component.getCache().release(instance,true);    lock.unlock();    throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);  }} @AT@ 4320 @LENGTH@ 282
------------UPD Block@@ThenBody:{  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ ThenBody:{  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  component.getCache().release(instance,true);  lock.unlock();  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4372 @LENGTH@ 230
---------------INS ExpressionStatement@@MethodInvocation:component.getCache().release(instance,true) @TO@ Block@@ThenBody:{  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4566 @LENGTH@ 45
------------------INS MethodInvocation@@component.getCache().release(instance,true) @TO@ ExpressionStatement@@MethodInvocation:component.getCache().release(instance,true) @AT@ 4566 @LENGTH@ 44
---------------------INS MethodInvocation@@MethodName:getCache:[] @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 4566 @LENGTH@ 20
---------------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 4566 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:release:[instance, true] @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 4587 @LENGTH@ 23
------------------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 4595 @LENGTH@ 8
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 4605 @LENGTH@ 4
---------------INS ExpressionStatement@@MethodInvocation:lock.unlock() @TO@ Block@@ThenBody:{  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4636 @LENGTH@ 14
------------------INS MethodInvocation@@lock.unlock() @TO@ ExpressionStatement@@MethodInvocation:lock.unlock() @AT@ 4636 @LENGTH@ 13
---------------------INS SimpleName@@Name:lock @TO@ MethodInvocation@@lock.unlock() @AT@ 4636 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:unlock:[] @TO@ MethodInvocation@@lock.unlock() @AT@ 4641 @LENGTH@ 8
---UPD IfStatement@@if (instance.isRemoved() || instance.isDiscarded()) {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @TO@ if (instance.isRemoved() || instance.isDiscarded()) {  final Object primaryKey=context.getPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY);  component.getCache().release(instance,true);  lock.unlock();  throw MESSAGES.instaceWasRemoved(component.getComponentName(),primaryKey);} @AT@ 4320 @LENGTH@ 282
---UPD TryStatement@@try {  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  if (!instance.isSynchronizeRegistered()) {    component.getCache().reference(instance);    if (currentTransactionKey != null) {      final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);      transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);      syncRegistered=true;      if (ROOT_LOGGER.isTraceEnabled()) {        ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);      }    }    instance.setSynchronizationRegistered(true);  }  return context.proceed();}  finally {  if (currentTransactionKey == null) {    instance.store();    releaseInstance(instance,true);  } else   if (!syncRegistered) {    lock.unlock();  }} @TO@ try {  currentTransactionKey=transactionSynchronizationRegistry.getTransactionKey();  if (!instance.isSynchronizeRegistered()) {    if (currentTransactionKey != null) {      final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);      transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);      syncRegistered=true;      if (ROOT_LOGGER.isTraceEnabled()) {        ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);      }    }    instance.setSynchronizationRegistered(true);  }  return context.proceed();}  finally {  if (currentTransactionKey == null) {    instance.store();    releaseInstance(instance,true);  } else   if (!syncRegistered) {    component.getCache().release(instance,true);    lock.unlock();  }} @AT@ 4672 @LENGTH@ 2454
------UPD IfStatement@@if (!instance.isSynchronizeRegistered()) {  component.getCache().reference(instance);  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    syncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @TO@ if (!instance.isSynchronizeRegistered()) {  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    syncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @AT@ 4884 @LENGTH@ 1248
---------UPD Block@@ThenBody:{  component.getCache().reference(instance);  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    syncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @TO@ ThenBody:{  if (currentTransactionKey != null) {    final Synchronization entitySynchronization=new EntityBeanSynchronization(instance,lockOwner);    transactionSynchronizationRegistry.registerInterposedSynchronization(entitySynchronization);    syncRegistered=true;    if (ROOT_LOGGER.isTraceEnabled()) {      ROOT_LOGGER.trace("Registered tx synchronization: " + entitySynchronization + " for tx: "+ currentTransactionKey+ " associated with stateful component instance: "+ instance);    }  }  instance.setSynchronizationRegistered(true);} @AT@ 4925 @LENGTH@ 1207
------------DEL ExpressionStatement@@MethodInvocation:component.getCache().reference(instance) @AT@ 4951 @LENGTH@ 41
---------------DEL MethodInvocation@@component.getCache().reference(instance) @AT@ 4951 @LENGTH@ 40
------------------DEL MethodInvocation@@MethodName:getCache:[] @AT@ 4951 @LENGTH@ 20
------------------DEL SimpleName@@Name:component @AT@ 4951 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:reference:[instance] @AT@ 4972 @LENGTH@ 19
---------------------DEL SimpleName@@instance @AT@ 4982 @LENGTH@ 8
------UPD Block@@FinallyBody:{  if (currentTransactionKey == null) {    instance.store();    releaseInstance(instance,true);  } else   if (!syncRegistered) {    lock.unlock();  }} @TO@ FinallyBody:{  if (currentTransactionKey == null) {    instance.store();    releaseInstance(instance,true);  } else   if (!syncRegistered) {    component.getCache().release(instance,true);    lock.unlock();  }} @AT@ 6257 @LENGTH@ 869
---------UPD IfStatement@@if (currentTransactionKey == null) {  instance.store();  releaseInstance(instance,true);} else if (!syncRegistered) {  lock.unlock();} @TO@ if (currentTransactionKey == null) {  instance.store();  releaseInstance(instance,true);} else if (!syncRegistered) {  component.getCache().release(instance,true);  lock.unlock();} @AT@ 6862 @LENGTH@ 246
------------UPD Block@@ElseBody:if (!syncRegistered) {  lock.unlock();} @TO@ ElseBody:if (!syncRegistered) {  component.getCache().release(instance,true);  lock.unlock();} @AT@ 7025 @LENGTH@ 83
---------------UPD IfStatement@@if (!syncRegistered) {  lock.unlock();} @TO@ if (!syncRegistered) {  component.getCache().release(instance,true);  lock.unlock();} @AT@ 7025 @LENGTH@ 83
------------------UPD Block@@ThenBody:{  lock.unlock();} @TO@ ThenBody:{  component.getCache().release(instance,true);  lock.unlock();} @AT@ 7046 @LENGTH@ 62
---------------------INS ExpressionStatement@@MethodInvocation:component.getCache().release(instance,true) @TO@ Block@@ThenBody:{  lock.unlock();} @AT@ 7195 @LENGTH@ 45
------------------------INS MethodInvocation@@component.getCache().release(instance,true) @TO@ ExpressionStatement@@MethodInvocation:component.getCache().release(instance,true) @AT@ 7195 @LENGTH@ 44
---------------------------INS MethodInvocation@@MethodName:getCache:[] @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 7195 @LENGTH@ 20
---------------------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 7195 @LENGTH@ 9
---------------------------INS SimpleName@@MethodName:release:[instance, true] @TO@ MethodInvocation@@component.getCache().release(instance,true) @AT@ 7216 @LENGTH@ 23
------------------------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 7224 @LENGTH@ 8
------------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:release:[instance, true] @AT@ 7234 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model,  @TO@ protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 1846 @LENGTH@ 156
---UPD SimpleName@@MethodName:performRemove @TO@ MethodName:recoverServices @AT@ 1861 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:context.removeService(LogServices.ROOT_LOGGER) @TO@ MethodInvocation:RootLoggerAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 1949 @LENGTH@ 47
------UPD MethodInvocation@@context.removeService(LogServices.ROOT_LOGGER) @TO@ RootLoggerAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 1949 @LENGTH@ 46
---------DEL SimpleName@@Name:context @AT@ 1949 @LENGTH@ 7
---------DEL SimpleName@@MethodName:removeService:[LogServices.ROOT_LOGGER] @AT@ 1957 @LENGTH@ 38
------------DEL QualifiedName@@LogServices.ROOT_LOGGER @AT@ 1971 @LENGTH@ 23
---------------DEL SimpleName@@LogServices @AT@ 1971 @LENGTH@ 11
---------------DEL SimpleName@@ROOT_LOGGER @AT@ 1983 @LENGTH@ 11
---------INS QualifiedName@@Name:RootLoggerAdd.INSTANCE @TO@ MethodInvocation@@context.removeService(LogServices.ROOT_LOGGER) @AT@ 2352 @LENGTH@ 22
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@context.removeService(LogServices.ROOT_LOGGER) @AT@ 2375 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2390 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2399 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2410 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2417 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2423 @LENGTH@ 4
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:performRemove, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2317 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:fail("Should thrown an exception") @TO@ MethodInvocation:fail("Should have thrown an exception") @AT@ 2087 @LENGTH@ 35
---UPD MethodInvocation@@fail("Should thrown an exception") @TO@ fail("Should have thrown an exception") @AT@ 2087 @LENGTH@ 34
------UPD SimpleName@@MethodName:fail:["Should thrown an exception"] @TO@ MethodName:fail:["Should have thrown an exception"] @AT@ 2087 @LENGTH@ 34
---------UPD StringLiteral@@"Should thrown an exception" @TO@ "Should have thrown an exception" @AT@ 2092 @LENGTH@ 28


UPD IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      final ModelNode metric=new ModelNode();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("property")) {          String properties=prop.getValue().asString();          ModelNode props=ModelNode.fromString(properties);          metric.get("property").set(props);        } else {          metric.get(prop.getName()).set(prop.getValue().asString());        }      }      if (!metric.get("class").isDefined()) {        throw new OperationFailedException(new ModelNode().set(MESSAGES.classAttributeRequired("add-custom-metric")));      }      if (!dynamicLoadProvider.isDefined()) {        dynamicLoadProvider.get(CommonAttributes.HISTORY).set(9);        dynamicLoadProvider.get(CommonAttributes.DECAY).set(2);      }      replaceMetric(dynamicLoadProvider,metric);      context.completeStep();    }    private void replaceMetric(    ModelNode dynamicLoadProvider,    ModelNode metric){      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      if (dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {        String classname=metric.get("class").asString();        List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();        Iterator<ModelNode> it=list.iterator();        dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);        while (it.hasNext()) {          ModelNode node=it.next();          if (!node.get("class").asString().equals(classname)) {            dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(node);          }        }      } else {        dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);      }      dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(metric);    }  },OperationContext.Stage.MODEL);} @TO@ if (context.getProcessType().isServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      final ModelNode metric=new ModelNode();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("property")) {          String properties=prop.getValue().asString();          ModelNode props=ModelNode.fromString(properties);          metric.get("property").set(props);        } else {          metric.get(prop.getName()).set(prop.getValue().asString());        }      }      if (!metric.get("class").isDefined()) {        throw new OperationFailedException(new ModelNode().set(MESSAGES.classAttributeRequired("add-custom-metric")));      }      if (!dynamicLoadProvider.isDefined()) {        dynamicLoadProvider.get(CommonAttributes.HISTORY).set(9);        dynamicLoadProvider.get(CommonAttributes.DECAY).set(2);      }      replaceMetric(dynamicLoadProvider,metric);      context.completeStep();    }    private void replaceMetric(    ModelNode dynamicLoadProvider,    ModelNode metric){      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      if (dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {        String classname=metric.get("class").asString();        List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();        Iterator<ModelNode> it=list.iterator();        dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);        while (it.hasNext()) {          ModelNode node=it.next();          if (!node.get("class").asString().equals(classname)) {            dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(node);          }        }      } else {        dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);      }      dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(metric);    }  },OperationContext.Stage.MODEL);} @AT@ 2318 @LENGTH@ 3230
---DEL InfixExpression@@context.getType() == OperationContext.Type.SERVER @AT@ 2322 @LENGTH@ 49
------DEL MethodInvocation@@context.getType() @AT@ 2322 @LENGTH@ 17
------DEL Operator@@== @AT@ 2339 @LENGTH@ 2
------DEL QualifiedName@@OperationContext.Type.SERVER @AT@ 2343 @LENGTH@ 28
---------DEL QualifiedName@@OperationContext.Type @AT@ 2343 @LENGTH@ 21
------------DEL SimpleName@@OperationContext @AT@ 2343 @LENGTH@ 16
------------DEL SimpleName@@Type @AT@ 2360 @LENGTH@ 4
---------DEL SimpleName@@SERVER @AT@ 2365 @LENGTH@ 6
---INS MethodInvocation@@context.getProcessType().isServer() @TO@ IfStatement@@if (context.getType() == OperationContext.Type.SERVER) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      final ModelNode dynamicLoadProvider=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS).getModel().get(CommonAttributes.DYNAMIC_LOAD_PROVIDER);      final ModelNode metric=new ModelNode();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("property")) {          String properties=prop.getValue().asString();          ModelNode props=ModelNode.fromString(properties);          metric.get("property").set(props);        } else {          metric.get(prop.getName()).set(prop.getValue().asString());        }      }      if (!metric.get("class").isDefined()) {        throw new OperationFailedException(new ModelNode().set(MESSAGES.classAttributeRequired("add-custom-metric")));      }      if (!dynamicLoadProvider.isDefined()) {        dynamicLoadProvider.get(CommonAttributes.HISTORY).set(9);        dynamicLoadProvider.get(CommonAttributes.DECAY).set(2);      }      replaceMetric(dynamicLoadProvider,metric);      context.completeStep();    }    private void replaceMetric(    ModelNode dynamicLoadProvider,    ModelNode metric){      List<ModelNode> newlist=Collections.<ModelNode>emptyList();      if (dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).isDefined()) {        String classname=metric.get("class").asString();        List<ModelNode> list=dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).asList();        Iterator<ModelNode> it=list.iterator();        dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);        while (it.hasNext()) {          ModelNode node=it.next();          if (!node.get("class").asString().equals(classname)) {            dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(node);          }        }      } else {        dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).set(newlist);      }      dynamicLoadProvider.get(CommonAttributes.CUSTOM_LOAD_METRIC).add(metric);    }  },OperationContext.Stage.MODEL);} @AT@ 2322 @LENGTH@ 35
------INS MethodInvocation@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2322 @LENGTH@ 24
------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2322 @LENGTH@ 7
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@context.getProcessType().isServer() @AT@ 2330 @LENGTH@ 9


UPD MethodDeclaration@@public, boolean, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @TO@ public, boolean, MethodName:checkParseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11609 @LENGTH@ 342
---UPD SimpleName@@MethodName:parseAndSetParameter @TO@ MethodName:checkParseAndSetParameter @AT@ 11624 @LENGTH@ 20


UPD ForStatement@@for (int i=pa.size() - 1; i > 0; i++) {  PathElement pe=pa.getElement(i);  if (SECURITY_REALM.equals(pe.getKey())) {    realmName=pe.getValue();    break;  }} @TO@ for (int i=pa.size() - 1; i > 0; i--) {  PathElement pe=pa.getElement(i);  if (SECURITY_REALM.equals(pe.getKey())) {    realmName=pe.getValue();    break;  }} @AT@ 3097 @LENGTH@ 232
---UPD PostfixExpression@@i++ @TO@ i-- @AT@ 3132 @LENGTH@ 3
------UPD Operator@@++ @TO@ -- @AT@ 3134 @LENGTH@ 2


UPD ReturnStatement@@QualifiedName:ManagementProtocol.TYPE_PONG @TO@ QualifiedName:ManagementProtocol.TYPE_PING @AT@ 1318 @LENGTH@ 36
---UPD QualifiedName@@ManagementProtocol.TYPE_PONG @TO@ ManagementProtocol.TYPE_PING @AT@ 1325 @LENGTH@ 28
------UPD SimpleName@@TYPE_PONG @TO@ TYPE_PING @AT@ 1344 @LENGTH@ 9


UPD CatchClause@@catch (FailedToCreateProducerException e) {  IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause().getCause());  assertEquals("No enum const class org.apache.camel.component.http.AuthMethod.foo",cause.getMessage());} @TO@ catch (FailedToCreateProducerException e) {  IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause().getCause());  boolean b=cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo");  assertTrue("Bad fault message: " + cause.getMessage(),b);} @AT@ 3732 @LENGTH@ 302
---UPD ExpressionStatement@@MethodInvocation:assertEquals("No enum const class org.apache.camel.component.http.AuthMethod.foo",cause.getMessage()) @TO@ MethodInvocation:assertTrue("Bad fault message: " + cause.getMessage(),b) @AT@ 3921 @LENGTH@ 103
------UPD MethodInvocation@@assertEquals("No enum const class org.apache.camel.component.http.AuthMethod.foo",cause.getMessage()) @TO@ assertTrue("Bad fault message: " + cause.getMessage(),b) @AT@ 3921 @LENGTH@ 102
---------UPD SimpleName@@MethodName:assertEquals:["No enum const class org.apache.camel.component.http.AuthMethod.foo", cause.getMessage()] @TO@ MethodName:assertTrue:["Bad fault message: " + cause.getMessage(), b] @AT@ 3921 @LENGTH@ 102
------------DEL StringLiteral@@"No enum const class org.apache.camel.component.http.AuthMethod.foo" @AT@ 3934 @LENGTH@ 68
------------DEL MethodInvocation@@cause.getMessage() @AT@ 4004 @LENGTH@ 18
------------INS InfixExpression@@"Bad fault message: " + cause.getMessage() @TO@ SimpleName@@MethodName:assertEquals:["No enum const class org.apache.camel.component.http.AuthMethod.foo", cause.getMessage()] @AT@ 4155 @LENGTH@ 42
---------------INS StringLiteral@@"Bad fault message: " @TO@ InfixExpression@@"Bad fault message: " + cause.getMessage() @AT@ 4155 @LENGTH@ 21
---------------INS Operator@@+ @TO@ InfixExpression@@"Bad fault message: " + cause.getMessage() @AT@ 4176 @LENGTH@ 1
---------------INS MethodInvocation@@cause.getMessage() @TO@ InfixExpression@@"Bad fault message: " + cause.getMessage() @AT@ 4179 @LENGTH@ 18
------------------MOV SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage() @AT@ 4004 @LENGTH@ 5
------------------MOV SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage() @AT@ 4004 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage() @AT@ 4010 @LENGTH@ 12
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage() @AT@ 4010 @LENGTH@ 12
------------INS SimpleName@@b @TO@ SimpleName@@MethodName:assertEquals:["No enum const class org.apache.camel.component.http.AuthMethod.foo", cause.getMessage()] @AT@ 4199 @LENGTH@ 1
---INS VariableDeclarationStatement@@boolean b=cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo"); @TO@ CatchClause@@catch (FailedToCreateProducerException e) {  IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause().getCause());  assertEquals("No enum const class org.apache.camel.component.http.AuthMethod.foo",cause.getMessage());} @AT@ 3977 @LENGTH@ 154
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean b=cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo"); @AT@ 3977 @LENGTH@ 7
------INS VariableDeclarationFragment@@b=cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @TO@ VariableDeclarationStatement@@boolean b=cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo"); @AT@ 3985 @LENGTH@ 145
---------INS SimpleName@@b @TO@ VariableDeclarationFragment@@b=cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 3985 @LENGTH@ 1
---------INS InfixExpression@@cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @TO@ VariableDeclarationFragment@@b=cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 3989 @LENGTH@ 141
------------INS MethodInvocation@@cause.getMessage().contains("No enum const") @TO@ InfixExpression@@cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 3989 @LENGTH@ 44
---------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage().contains("No enum const") @AT@ 3989 @LENGTH@ 18
---------------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage().contains("No enum const") @AT@ 3989 @LENGTH@ 5
---------------INS SimpleName@@MethodName:contains:["No enum const"] @TO@ MethodInvocation@@cause.getMessage().contains("No enum const") @AT@ 4008 @LENGTH@ 25
------------------INS StringLiteral@@"No enum const" @TO@ SimpleName@@MethodName:contains:["No enum const"] @AT@ 4017 @LENGTH@ 15
------------INS Operator@@&& @TO@ InfixExpression@@cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 4033 @LENGTH@ 2
------------INS MethodInvocation@@cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @TO@ InfixExpression@@cause.getMessage().contains("No enum const") && cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 4053 @LENGTH@ 77
---------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 4053 @LENGTH@ 18
---------------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 4053 @LENGTH@ 5
---------------INS SimpleName@@MethodName:contains:["org.apache.camel.component.http.AuthMethod.foo"] @TO@ MethodInvocation@@cause.getMessage().contains("org.apache.camel.component.http.AuthMethod.foo") @AT@ 4072 @LENGTH@ 58
------------------INS StringLiteral@@"org.apache.camel.component.http.AuthMethod.foo" @TO@ SimpleName@@MethodName:contains:["org.apache.camel.component.http.AuthMethod.foo"] @AT@ 4081 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.reloadRequired() @AT@ 2322 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.reloadRequired() @AT@ 2322 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:reloadRequired:[] @AT@ 2330 @LENGTH@ 14


DEL ExpressionStatement@@MethodInvocation:System.out.println(configuration.getBindAddress()) @AT@ 3508 @LENGTH@ 51
---DEL MethodInvocation@@System.out.println(configuration.getBindAddress()) @AT@ 3508 @LENGTH@ 50
------DEL QualifiedName@@Name:System.out @AT@ 3508 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[configuration.getBindAddress()] @AT@ 3519 @LENGTH@ 39
---------DEL MethodInvocation@@configuration.getBindAddress() @AT@ 3527 @LENGTH@ 30
------------DEL SimpleName@@Name:configuration @AT@ 3527 @LENGTH@ 13
------------DEL SimpleName@@MethodName:getBindAddress:[] @AT@ 3541 @LENGTH@ 16


INS FieldDeclaration@@private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class)] @TO@ TypeDeclaration@@[public, abstract]NonCachingJmxTemplate, JmxTemplateSupport @AT@ 1072 @LENGTH@ 90
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class)] @AT@ 1072 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class)] @AT@ 1080 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class)] @AT@ 1087 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class)] @AT@ 1093 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class)] @AT@ 1100 @LENGTH@ 61
------INS SimpleName@@LOGGER @TO@ VariableDeclarationFragment@@LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class) @AT@ 1100 @LENGTH@ 6
------INS MethodInvocation@@LoggerFactory.getLogger(NonCachingJmxTemplate.class) @TO@ VariableDeclarationFragment@@LOGGER=LoggerFactory.getLogger(NonCachingJmxTemplate.class) @AT@ 1109 @LENGTH@ 52
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(NonCachingJmxTemplate.class) @AT@ 1109 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[NonCachingJmxTemplate.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(NonCachingJmxTemplate.class) @AT@ 1123 @LENGTH@ 38
------------INS TypeLiteral@@NonCachingJmxTemplate.class @TO@ SimpleName@@MethodName:getLogger:[NonCachingJmxTemplate.class] @AT@ 1133 @LENGTH@ 27


DEL ExpressionStatement@@MethodInvocation:OSGiTestSupport.changeStartLevel(context,3,10,TimeUnit.SECONDS) @AT@ 3550 @LENGTH@ 67
---DEL MethodInvocation@@OSGiTestSupport.changeStartLevel(context,3,10,TimeUnit.SECONDS) @AT@ 3550 @LENGTH@ 66
------DEL SimpleName@@Name:OSGiTestSupport @AT@ 3550 @LENGTH@ 15
------DEL SimpleName@@MethodName:changeStartLevel:[context, 3, 10, TimeUnit.SECONDS] @AT@ 3566 @LENGTH@ 50
---------DEL SimpleName@@context @AT@ 3583 @LENGTH@ 7
---------DEL NumberLiteral@@3 @AT@ 3592 @LENGTH@ 1
---------DEL NumberLiteral@@10 @AT@ 3595 @LENGTH@ 2
---------DEL QualifiedName@@TimeUnit.SECONDS @AT@ 3599 @LENGTH@ 16
------------DEL SimpleName@@TimeUnit @AT@ 3599 @LENGTH@ 8
------------DEL SimpleName@@SECONDS @AT@ 3608 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:createPost, Integer groupId, String title, String summary,  @TO@ public, URI, MethodName:createPost, Integer groupId, String title, String summary,  @AT@ 3227 @LENGTH@ 277
---DEL PrimitiveType@@void @AT@ 3234 @LENGTH@ 4
---INS SimpleType@@URI @TO@ MethodDeclaration@@public, void, MethodName:createPost, Integer groupId, String title, String summary,  @AT@ 3255 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:restOperations.postForObject(GROUP_CREATE_POST_URL,post,String.class,groupId) @AT@ 3420 @LENGTH@ 81
------DEL MethodInvocation@@restOperations.postForObject(GROUP_CREATE_POST_URL,post,String.class,groupId) @AT@ 3420 @LENGTH@ 80
---INS ReturnStatement@@MethodInvocation:restOperations.postForLocation(GROUP_CREATE_POST_URL,post,groupId) @TO@ MethodDeclaration@@public, void, MethodName:createPost, Integer groupId, String title, String summary,  @AT@ 3440 @LENGTH@ 76
------INS MethodInvocation@@restOperations.postForLocation(GROUP_CREATE_POST_URL,post,groupId) @TO@ ReturnStatement@@MethodInvocation:restOperations.postForLocation(GROUP_CREATE_POST_URL,post,groupId) @AT@ 3447 @LENGTH@ 68
---------MOV SimpleName@@Name:restOperations @TO@ MethodInvocation@@restOperations.postForLocation(GROUP_CREATE_POST_URL,post,groupId) @AT@ 3420 @LENGTH@ 14
---------MOV SimpleName@@MethodName:postForObject:[GROUP_CREATE_POST_URL, post, String.class, groupId] @TO@ MethodInvocation@@restOperations.postForLocation(GROUP_CREATE_POST_URL,post,groupId) @AT@ 3435 @LENGTH@ 65
------------DEL TypeLiteral@@String.class @AT@ 3478 @LENGTH@ 12


INS IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return XAResource.XA_OK;} @TO@ MethodDeclaration@@private, int, MethodName:prepareTransaction, Throwable,  @AT@ 4074 @LENGTH@ 381
---INS InfixExpression@@transaction == null @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return XAResource.XA_OK;} @AT@ 4077 @LENGTH@ 19
------INS SimpleName@@transaction @TO@ InfixExpression@@transaction == null @AT@ 4077 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@transaction == null @AT@ 4088 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@transaction == null @AT@ 4092 @LENGTH@ 4
---INS Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return XAResource.XA_OK;} @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return XAResource.XA_OK;} @AT@ 4098 @LENGTH@ 357
------INS IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return XAResource.XA_OK;} @AT@ 4112 @LENGTH@ 296
---------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 4115 @LENGTH@ 49
------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 4115 @LENGTH@ 32
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 4148 @LENGTH@ 16
---------INS Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 4166 @LENGTH@ 242
------------INS ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 4262 @LENGTH@ 132
---------------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 4262 @LENGTH@ 131
------------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 4262 @LENGTH@ 32
------------------INS SimpleName@@MethodName:debug:["Not preparing transaction " + this.xidTransactionID + " as is was not found on the server"] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 4295 @LENGTH@ 98
---------------------INS InfixExpression@@"Not preparing transaction " + this.xidTransactionID + " as is was not found on the server" @TO@ SimpleName@@MethodName:debug:["Not preparing transaction " + this.xidTransactionID + " as is was not found on the server"] @AT@ 4301 @LENGTH@ 91
------------------------INS StringLiteral@@"Not preparing transaction " @TO@ InfixExpression@@"Not preparing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 4301 @LENGTH@ 28
------------------------INS Operator@@+ @TO@ InfixExpression@@"Not preparing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 4329 @LENGTH@ 1
------------------------INS FieldAccess@@this.xidTransactionID @TO@ InfixExpression@@"Not preparing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 4332 @LENGTH@ 21
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.xidTransactionID @AT@ 4332 @LENGTH@ 4
---------------------------INS SimpleName@@xidTransactionID @TO@ FieldAccess@@this.xidTransactionID @AT@ 4337 @LENGTH@ 16
------------------------INS StringLiteral@@" as is was not found on the server" @TO@ InfixExpression@@"Not preparing transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 4356 @LENGTH@ 36
------INS ReturnStatement@@QualifiedName:XAResource.XA_OK @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not preparing transaction " + this.xidTransactionID + " as is was not found on the server");  }  return XAResource.XA_OK;} @AT@ 4421 @LENGTH@ 24
---------INS QualifiedName@@XAResource.XA_OK @TO@ ReturnStatement@@QualifiedName:XAResource.XA_OK @AT@ 4428 @LENGTH@ 16
------------INS SimpleName@@XAResource @TO@ QualifiedName@@XAResource.XA_OK @AT@ 4428 @LENGTH@ 10
------------INS SimpleName@@XA_OK @TO@ QualifiedName@@XAResource.XA_OK @AT@ 4439 @LENGTH@ 5


UPD IfStatement@@if (binding == null) {  final SocketBinding socketBinding=socketBindings.get(name);  if (socketBinding == null) {    throw MESSAGES.failedToFindConnectorSocketBinding(tc.getName());  }  InetSocketAddress sa=socketBinding.getSocketAddress();  host=sa.getAddress().getHostName();  port=sa.getPort();} else {  host=binding.getDestinationAddress().getHostName();  port=binding.getDestinationPort();} @TO@ if (binding == null) {  final SocketBinding socketBinding=socketBindings.get(name);  if (socketBinding == null) {    throw MESSAGES.failedToFindConnectorSocketBinding(tc.getName());  }  InetSocketAddress sa=socketBinding.getSocketAddress();  port=sa.getPort();  if (sa.getAddress().isLoopbackAddress()) {    host=sa.getAddress().getHostName();  } else {    host=sa.getAddress().getHostAddress();  }} else {  port=binding.getDestinationPort();  if (binding.getDestinationAddress().isLoopbackAddress()) {    host=binding.getDestinationAddress().getHostName();  } else {    host=binding.getDestinationAddress().getHostAddress();  }} @AT@ 5783 @LENGTH@ 702
---UPD Block@@ThenBody:{  final SocketBinding socketBinding=socketBindings.get(name);  if (socketBinding == null) {    throw MESSAGES.failedToFindConnectorSocketBinding(tc.getName());  }  InetSocketAddress sa=socketBinding.getSocketAddress();  host=sa.getAddress().getHostName();  port=sa.getPort();} @TO@ ThenBody:{  final SocketBinding socketBinding=socketBindings.get(name);  if (socketBinding == null) {    throw MESSAGES.failedToFindConnectorSocketBinding(tc.getName());  }  InetSocketAddress sa=socketBinding.getSocketAddress();  port=sa.getPort();  if (sa.getAddress().isLoopbackAddress()) {    host=sa.getAddress().getHostName();  } else {    host=sa.getAddress().getHostAddress();  }} @AT@ 5804 @LENGTH@ 501
------INS IfStatement@@if (sa.getAddress().isLoopbackAddress()) {  host=sa.getAddress().getHostName();} else {  host=sa.getAddress().getHostAddress();} @TO@ Block@@ThenBody:{  final SocketBinding socketBinding=socketBindings.get(name);  if (socketBinding == null) {    throw MESSAGES.failedToFindConnectorSocketBinding(tc.getName());  }  InetSocketAddress sa=socketBinding.getSocketAddress();  host=sa.getAddress().getHostName();  port=sa.getPort();} @AT@ 6349 @LENGTH@ 252
---------INS MethodInvocation@@sa.getAddress().isLoopbackAddress() @TO@ IfStatement@@if (sa.getAddress().isLoopbackAddress()) {  host=sa.getAddress().getHostName();} else {  host=sa.getAddress().getHostAddress();} @AT@ 6353 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:getAddress:[] @TO@ MethodInvocation@@sa.getAddress().isLoopbackAddress() @AT@ 6353 @LENGTH@ 15
------------INS SimpleName@@Name:sa @TO@ MethodInvocation@@sa.getAddress().isLoopbackAddress() @AT@ 6353 @LENGTH@ 2
------------INS SimpleName@@MethodName:isLoopbackAddress:[] @TO@ MethodInvocation@@sa.getAddress().isLoopbackAddress() @AT@ 6369 @LENGTH@ 19
---------INS Block@@ThenBody:{  host=sa.getAddress().getHostName();} @TO@ IfStatement@@if (sa.getAddress().isLoopbackAddress()) {  host=sa.getAddress().getHostName();} else {  host=sa.getAddress().getHostAddress();} @AT@ 6390 @LENGTH@ 101
------------MOV ExpressionStatement@@Assignment:host=sa.getAddress().getHostName() @TO@ Block@@ThenBody:{  host=sa.getAddress().getHostName();} @AT@ 6193 @LENGTH@ 37
---------INS Block@@ElseBody:{  host=sa.getAddress().getHostAddress();} @TO@ IfStatement@@if (sa.getAddress().isLoopbackAddress()) {  host=sa.getAddress().getHostName();} else {  host=sa.getAddress().getHostAddress();} @AT@ 6497 @LENGTH@ 104
------------INS ExpressionStatement@@Assignment:host=sa.getAddress().getHostAddress() @TO@ Block@@ElseBody:{  host=sa.getAddress().getHostAddress();} @AT@ 6531 @LENGTH@ 40
---------------INS Assignment@@host=sa.getAddress().getHostAddress() @TO@ ExpressionStatement@@Assignment:host=sa.getAddress().getHostAddress() @AT@ 6531 @LENGTH@ 39
------------------INS SimpleName@@host @TO@ Assignment@@host=sa.getAddress().getHostAddress() @AT@ 6531 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@host=sa.getAddress().getHostAddress() @AT@ 6535 @LENGTH@ 1
------------------INS MethodInvocation@@sa.getAddress().getHostAddress() @TO@ Assignment@@host=sa.getAddress().getHostAddress() @AT@ 6538 @LENGTH@ 32
---------------------INS MethodInvocation@@MethodName:getAddress:[] @TO@ MethodInvocation@@sa.getAddress().getHostAddress() @AT@ 6538 @LENGTH@ 15
---------------------INS SimpleName@@Name:sa @TO@ MethodInvocation@@sa.getAddress().getHostAddress() @AT@ 6538 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getHostAddress:[] @TO@ MethodInvocation@@sa.getAddress().getHostAddress() @AT@ 6554 @LENGTH@ 16
---UPD Block@@ElseBody:{  host=binding.getDestinationAddress().getHostName();  port=binding.getDestinationPort();} @TO@ ThenBody:{  host=binding.getDestinationAddress().getHostName();} @AT@ 6311 @LENGTH@ 174
---INS Block@@ElseBody:{  port=binding.getDestinationPort();  if (binding.getDestinationAddress().isLoopbackAddress()) {    host=binding.getDestinationAddress().getHostName();  } else {    host=binding.getDestinationAddress().getHostAddress();  }} @TO@ IfStatement@@if (binding == null) {  final SocketBinding socketBinding=socketBindings.get(name);  if (socketBinding == null) {    throw MESSAGES.failedToFindConnectorSocketBinding(tc.getName());  }  InetSocketAddress sa=socketBinding.getSocketAddress();  host=sa.getAddress().getHostName();  port=sa.getPort();} else {  host=binding.getDestinationAddress().getHostName();  port=binding.getDestinationPort();} @AT@ 6633 @LENGTH@ 421
------MOV ExpressionStatement@@Assignment:port=binding.getDestinationPort() @TO@ Block@@ElseBody:{  port=binding.getDestinationPort();  if (binding.getDestinationAddress().isLoopbackAddress()) {    host=binding.getDestinationAddress().getHostName();  } else {    host=binding.getDestinationAddress().getHostAddress();  }} @AT@ 6423 @LENGTH@ 36
------INS IfStatement@@if (binding.getDestinationAddress().isLoopbackAddress()) {  host=binding.getDestinationAddress().getHostName();} else {  host=binding.getDestinationAddress().getHostAddress();} @TO@ Block@@ElseBody:{  port=binding.getDestinationPort();  if (binding.getDestinationAddress().isLoopbackAddress()) {    host=binding.getDestinationAddress().getHostName();  } else {    host=binding.getDestinationAddress().getHostAddress();  }} @AT@ 6728 @LENGTH@ 300
---------MOV Block@@ElseBody:{  host=binding.getDestinationAddress().getHostName();  port=binding.getDestinationPort();} @TO@ IfStatement@@if (binding.getDestinationAddress().isLoopbackAddress()) {  host=binding.getDestinationAddress().getHostName();} else {  host=binding.getDestinationAddress().getHostAddress();} @AT@ 6311 @LENGTH@ 174
---------INS MethodInvocation@@binding.getDestinationAddress().isLoopbackAddress() @TO@ IfStatement@@if (binding.getDestinationAddress().isLoopbackAddress()) {  host=binding.getDestinationAddress().getHostName();} else {  host=binding.getDestinationAddress().getHostAddress();} @AT@ 6732 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:getDestinationAddress:[] @TO@ MethodInvocation@@binding.getDestinationAddress().isLoopbackAddress() @AT@ 6732 @LENGTH@ 31
------------INS SimpleName@@Name:binding @TO@ MethodInvocation@@binding.getDestinationAddress().isLoopbackAddress() @AT@ 6732 @LENGTH@ 7
------------INS SimpleName@@MethodName:isLoopbackAddress:[] @TO@ MethodInvocation@@binding.getDestinationAddress().isLoopbackAddress() @AT@ 6764 @LENGTH@ 19
---------INS Block@@ElseBody:{  host=binding.getDestinationAddress().getHostAddress();} @TO@ IfStatement@@if (binding.getDestinationAddress().isLoopbackAddress()) {  host=binding.getDestinationAddress().getHostName();} else {  host=binding.getDestinationAddress().getHostAddress();} @AT@ 6908 @LENGTH@ 120
------------INS ExpressionStatement@@Assignment:host=binding.getDestinationAddress().getHostAddress() @TO@ Block@@ElseBody:{  host=binding.getDestinationAddress().getHostAddress();} @AT@ 6942 @LENGTH@ 56
---------------INS Assignment@@host=binding.getDestinationAddress().getHostAddress() @TO@ ExpressionStatement@@Assignment:host=binding.getDestinationAddress().getHostAddress() @AT@ 6942 @LENGTH@ 55
------------------INS SimpleName@@host @TO@ Assignment@@host=binding.getDestinationAddress().getHostAddress() @AT@ 6942 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@host=binding.getDestinationAddress().getHostAddress() @AT@ 6946 @LENGTH@ 1
------------------INS MethodInvocation@@binding.getDestinationAddress().getHostAddress() @TO@ Assignment@@host=binding.getDestinationAddress().getHostAddress() @AT@ 6949 @LENGTH@ 48
---------------------INS MethodInvocation@@MethodName:getDestinationAddress:[] @TO@ MethodInvocation@@binding.getDestinationAddress().getHostAddress() @AT@ 6949 @LENGTH@ 31
---------------------INS SimpleName@@Name:binding @TO@ MethodInvocation@@binding.getDestinationAddress().getHostAddress() @AT@ 6949 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getHostAddress:[] @TO@ MethodInvocation@@binding.getDestinationAddress().getHostAddress() @AT@ 6981 @LENGTH@ 16


DEL IfStatement@@if (existingSession != null) {  this.id=existingSession;} else {  SessionID id=null;  do {    final UUID uuid=UUID.randomUUID();    ByteBuffer bb=ByteBuffer.wrap(new byte[16]);    bb.putLong(uuid.getMostSignificantBits());    bb.putLong(uuid.getLeastSignificantBits());    id=SessionID.createSessionID(bb.array());  } while (!component.getCache().hasAffinity(id));  this.id=id;} @AT@ 3068 @LENGTH@ 528
---DEL InfixExpression@@existingSession != null @AT@ 3072 @LENGTH@ 23
------DEL SimpleName@@existingSession @AT@ 3072 @LENGTH@ 15
------DEL Operator@@!= @AT@ 3087 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 3091 @LENGTH@ 4
---DEL Block@@ThenBody:{  this.id=existingSession;} @AT@ 3097 @LENGTH@ 50
------DEL ExpressionStatement@@Assignment:this.id=existingSession @AT@ 3111 @LENGTH@ 26
---------DEL Assignment@@this.id=existingSession @AT@ 3111 @LENGTH@ 25
------------DEL SimpleName@@existingSession @AT@ 3121 @LENGTH@ 15
---DEL Block@@ElseBody:{  SessionID id=null;  do {    final UUID uuid=UUID.randomUUID();    ByteBuffer bb=ByteBuffer.wrap(new byte[16]);    bb.putLong(uuid.getMostSignificantBits());    bb.putLong(uuid.getLeastSignificantBits());    id=SessionID.createSessionID(bb.array());  } while (!component.getCache().hasAffinity(id));  this.id=id;} @AT@ 3153 @LENGTH@ 443
------DEL VariableDeclarationStatement@@SessionID id=null; @AT@ 3167 @LENGTH@ 20
---------DEL SimpleType@@SessionID @AT@ 3167 @LENGTH@ 9
---------DEL VariableDeclarationFragment@@id=null @AT@ 3177 @LENGTH@ 9
------------DEL SimpleName@@id @AT@ 3177 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 3182 @LENGTH@ 4
------DEL DoStatement@@do {  final UUID uuid=UUID.randomUUID();  ByteBuffer bb=ByteBuffer.wrap(new byte[16]);  bb.putLong(uuid.getMostSignificantBits());  bb.putLong(uuid.getLeastSignificantBits());  id=SessionID.createSessionID(bb.array());} while (!component.getCache().hasAffinity(id)); @AT@ 3200 @LENGTH@ 360
---------DEL VariableDeclarationStatement@@final UUID uuid=UUID.randomUUID(); @AT@ 3221 @LENGTH@ 36
------------DEL Modifier@@final @AT@ 3221 @LENGTH@ 5
------------DEL SimpleType@@UUID @AT@ 3227 @LENGTH@ 4
------------DEL VariableDeclarationFragment@@uuid=UUID.randomUUID() @AT@ 3232 @LENGTH@ 24
---------------DEL SimpleName@@uuid @AT@ 3232 @LENGTH@ 4
---------------DEL MethodInvocation@@UUID.randomUUID() @AT@ 3239 @LENGTH@ 17
------------------DEL SimpleName@@Name:UUID @AT@ 3239 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:randomUUID:[] @AT@ 3244 @LENGTH@ 12
---------DEL VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(new byte[16]); @AT@ 3274 @LENGTH@ 46
------------DEL SimpleType@@ByteBuffer @AT@ 3274 @LENGTH@ 10
------------DEL VariableDeclarationFragment@@bb=ByteBuffer.wrap(new byte[16]) @AT@ 3285 @LENGTH@ 34
---------------DEL SimpleName@@bb @AT@ 3285 @LENGTH@ 2
---------------DEL MethodInvocation@@ByteBuffer.wrap(new byte[16]) @AT@ 3290 @LENGTH@ 29
------------------DEL SimpleName@@Name:ByteBuffer @AT@ 3290 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:wrap:[new byte[16]] @AT@ 3301 @LENGTH@ 18
---------------------DEL ArrayCreation@@new byte[16] @AT@ 3306 @LENGTH@ 12
------------------------DEL ArrayType@@byte[] @AT@ 3310 @LENGTH@ 8
---------------------------DEL PrimitiveType@@byte @AT@ 3310 @LENGTH@ 4
------------------------DEL NumberLiteral@@16 @AT@ 3315 @LENGTH@ 2
---------DEL ExpressionStatement@@MethodInvocation:bb.putLong(uuid.getMostSignificantBits()) @AT@ 3337 @LENGTH@ 42
------------DEL MethodInvocation@@bb.putLong(uuid.getMostSignificantBits()) @AT@ 3337 @LENGTH@ 41
---------------DEL SimpleName@@Name:bb @AT@ 3337 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:putLong:[uuid.getMostSignificantBits()] @AT@ 3340 @LENGTH@ 38
------------------DEL MethodInvocation@@uuid.getMostSignificantBits() @AT@ 3348 @LENGTH@ 29
---------------------DEL SimpleName@@Name:uuid @AT@ 3348 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getMostSignificantBits:[] @AT@ 3353 @LENGTH@ 24
---------DEL ExpressionStatement@@MethodInvocation:bb.putLong(uuid.getLeastSignificantBits()) @AT@ 3396 @LENGTH@ 43
------------DEL MethodInvocation@@bb.putLong(uuid.getLeastSignificantBits()) @AT@ 3396 @LENGTH@ 42
---------------DEL SimpleName@@Name:bb @AT@ 3396 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:putLong:[uuid.getLeastSignificantBits()] @AT@ 3399 @LENGTH@ 39
------------------DEL MethodInvocation@@uuid.getLeastSignificantBits() @AT@ 3407 @LENGTH@ 30
---------------------DEL SimpleName@@Name:uuid @AT@ 3407 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getLeastSignificantBits:[] @AT@ 3412 @LENGTH@ 25
---------DEL ExpressionStatement@@Assignment:id=SessionID.createSessionID(bb.array()) @AT@ 3456 @LENGTH@ 43
------------DEL Assignment@@id=SessionID.createSessionID(bb.array()) @AT@ 3456 @LENGTH@ 42
---------------DEL SimpleName@@id @AT@ 3456 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 3458 @LENGTH@ 1
---------------DEL MethodInvocation@@SessionID.createSessionID(bb.array()) @AT@ 3461 @LENGTH@ 37
------------------DEL SimpleName@@Name:SessionID @AT@ 3461 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:createSessionID:[bb.array()] @AT@ 3471 @LENGTH@ 27
---------------------DEL MethodInvocation@@bb.array() @AT@ 3487 @LENGTH@ 10
------------------------DEL SimpleName@@Name:bb @AT@ 3487 @LENGTH@ 2
------------------------DEL SimpleName@@MethodName:array:[] @AT@ 3490 @LENGTH@ 7
---------DEL PrefixExpression@@!component.getCache().hasAffinity(id) @AT@ 3521 @LENGTH@ 37
------------DEL Operator@@! @AT@ 3521 @LENGTH@ 1
------------DEL MethodInvocation@@component.getCache().hasAffinity(id) @AT@ 3522 @LENGTH@ 36
------DEL ExpressionStatement@@Assignment:this.id=id @AT@ 3573 @LENGTH@ 13
---------DEL Assignment@@this.id=id @AT@ 3573 @LENGTH@ 12
------------DEL FieldAccess@@this.id @AT@ 3573 @LENGTH@ 7
---------------DEL ThisExpression@@this @AT@ 3573 @LENGTH@ 4
---------------DEL SimpleName@@id @AT@ 3578 @LENGTH@ 2
------------DEL Operator@@= @AT@ 3580 @LENGTH@ 1
------------DEL SimpleName@@id @AT@ 3583 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @TO@ MethodInvocation:MGMT_OP_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @AT@ 3357 @LENGTH@ 62
---UPD MethodInvocation@@ROOT_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @TO@ MGMT_OP_LOGGER.failedToStoreConfiguration(e,fileName.getName()) @AT@ 3357 @LENGTH@ 61
------UPD SimpleName@@Name:ROOT_LOGGER @TO@ Name:MGMT_OP_LOGGER @AT@ 3357 @LENGTH@ 11


INS MethodDeclaration@@private, voidMethodName:CamelTwitterWebSocketMain,  @TO@ TypeDeclaration@@[public]CamelTwitterWebSocketMain,  @AT@ 1555 @LENGTH@ 68
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CamelTwitterWebSocketMain,  @AT@ 1555 @LENGTH@ 7
---INS SimpleName@@MethodName:CamelTwitterWebSocketMain @TO@ MethodDeclaration@@private, voidMethodName:CamelTwitterWebSocketMain,  @AT@ 1563 @LENGTH@ 25


UPD FieldDeclaration@@private, final, Channel.Receiver, [receiver] @TO@ private, final, ManagementChannelReceiver, [receiver] @AT@ 2143 @LENGTH@ 40
---UPD SimpleType@@Channel.Receiver @TO@ ManagementChannelReceiver @AT@ 2157 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @TO@ TypeDeclaration@@[public]SimpleAttributeDefinition, AttributeDefinition @AT@ 11507 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11507 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11514 @LENGTH@ 4
---INS SimpleName@@MethodName:parseAndSetParameter @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11519 @LENGTH@ 20
---INS SingleVariableDeclaration@@final String value @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11540 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String value @AT@ 11540 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String value @AT@ 11546 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@final String value @AT@ 11553 @LENGTH@ 5
---INS SingleVariableDeclaration@@final ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11560 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 11560 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 11566 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@final ModelNode operation @AT@ 11576 @LENGTH@ 9
---INS SingleVariableDeclaration@@final XMLStreamReader reader @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11587 @LENGTH@ 28
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 11587 @LENGTH@ 5
------INS SimpleType@@XMLStreamReader @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 11593 @LENGTH@ 15
------INS SimpleName@@reader @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 11609 @LENGTH@ 6
---INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11624 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:checkParseAndSetParameter(value,operation,reader) @TO@ MethodDeclaration@@public, void, MethodName:parseAndSetParameter, final String value, final ModelNode operation, final XMLStreamReader reader, XMLStreamException,  @AT@ 11653 @LENGTH@ 52
------INS MethodInvocation@@checkParseAndSetParameter(value,operation,reader) @TO@ ExpressionStatement@@MethodInvocation:checkParseAndSetParameter(value,operation,reader) @AT@ 11653 @LENGTH@ 51
---------INS SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @TO@ MethodInvocation@@checkParseAndSetParameter(value,operation,reader) @AT@ 11653 @LENGTH@ 51
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @AT@ 11679 @LENGTH@ 5
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @AT@ 11686 @LENGTH@ 9
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:checkParseAndSetParameter:[value, operation, reader] @AT@ 11697 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:findsPeopleBySexPaginated,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 9780 @LENGTH@ 158
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleBySexPaginated,  @AT@ 9780 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleBySexPaginated,  @AT@ 9787 @LENGTH@ 4
---INS SimpleName@@MethodName:findsPeopleBySexPaginated @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleBySexPaginated,  @AT@ 9792 @LENGTH@ 25
---INS VariableDeclarationStatement@@List<Person> males=repository.findBySex(Sex.MALE,new PageRequest(0,2)); @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleBySexPaginated,  @AT@ 9825 @LENGTH@ 75
------INS ParameterizedType@@List<Person> @TO@ VariableDeclarationStatement@@List<Person> males=repository.findBySex(Sex.MALE,new PageRequest(0,2)); @AT@ 9825 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 9825 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 9830 @LENGTH@ 6
------INS VariableDeclarationFragment@@males=repository.findBySex(Sex.MALE,new PageRequest(0,2)) @TO@ VariableDeclarationStatement@@List<Person> males=repository.findBySex(Sex.MALE,new PageRequest(0,2)); @AT@ 9838 @LENGTH@ 61
---------INS SimpleName@@males @TO@ VariableDeclarationFragment@@males=repository.findBySex(Sex.MALE,new PageRequest(0,2)) @AT@ 9838 @LENGTH@ 5
---------INS MethodInvocation@@repository.findBySex(Sex.MALE,new PageRequest(0,2)) @TO@ VariableDeclarationFragment@@males=repository.findBySex(Sex.MALE,new PageRequest(0,2)) @AT@ 9846 @LENGTH@ 53
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findBySex(Sex.MALE,new PageRequest(0,2)) @AT@ 9846 @LENGTH@ 10
------------INS SimpleName@@MethodName:findBySex:[Sex.MALE, new PageRequest(0,2)] @TO@ MethodInvocation@@repository.findBySex(Sex.MALE,new PageRequest(0,2)) @AT@ 9857 @LENGTH@ 42
---------------INS QualifiedName@@Sex.MALE @TO@ SimpleName@@MethodName:findBySex:[Sex.MALE, new PageRequest(0,2)] @AT@ 9867 @LENGTH@ 8
------------------INS SimpleName@@Sex @TO@ QualifiedName@@Sex.MALE @AT@ 9867 @LENGTH@ 3
------------------INS SimpleName@@MALE @TO@ QualifiedName@@Sex.MALE @AT@ 9871 @LENGTH@ 4
---------------INS ClassInstanceCreation@@PageRequest[0, 2] @TO@ SimpleName@@MethodName:findBySex:[Sex.MALE, new PageRequest(0,2)] @AT@ 9877 @LENGTH@ 21
------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 2] @AT@ 9877 @LENGTH@ 3
------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 2] @AT@ 9881 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 2] @AT@ 9893 @LENGTH@ 1
------------------INS NumberLiteral@@2 @TO@ ClassInstanceCreation@@PageRequest[0, 2] @AT@ 9896 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(males.size(),is(2)) @TO@ MethodDeclaration@@public, void, MethodName:findsPeopleBySexPaginated,  @AT@ 9903 @LENGTH@ 32
------INS MethodInvocation@@assertThat(males.size(),is(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(males.size(),is(2)) @AT@ 9903 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertThat:[males.size(), is(2)] @TO@ MethodInvocation@@assertThat(males.size(),is(2)) @AT@ 9903 @LENGTH@ 31
------------INS MethodInvocation@@males.size() @TO@ SimpleName@@MethodName:assertThat:[males.size(), is(2)] @AT@ 9914 @LENGTH@ 12
---------------INS SimpleName@@Name:males @TO@ MethodInvocation@@males.size() @AT@ 9914 @LENGTH@ 5
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@males.size() @AT@ 9920 @LENGTH@ 6
------------INS MethodInvocation@@is(2) @TO@ SimpleName@@MethodName:assertThat:[males.size(), is(2)] @AT@ 9928 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 9928 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 9931 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 9928 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 9931 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:config.allowNullValueTypeForOperationParameter(ROOT_ADDR,"check-address",VALUE) @TO@ MethodDeclaration@@public, void, MethodName:testValidateModel, Exception,  @AT@ 4951 @LENGTH@ 82
---INS MethodInvocation@@config.allowNullValueTypeForOperationParameter(ROOT_ADDR,"check-address",VALUE) @TO@ ExpressionStatement@@MethodInvocation:config.allowNullValueTypeForOperationParameter(ROOT_ADDR,"check-address",VALUE) @AT@ 4951 @LENGTH@ 81
------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.allowNullValueTypeForOperationParameter(ROOT_ADDR,"check-address",VALUE) @AT@ 4951 @LENGTH@ 6
------INS SimpleName@@MethodName:allowNullValueTypeForOperationParameter:[ROOT_ADDR, "check-address", VALUE] @TO@ MethodInvocation@@config.allowNullValueTypeForOperationParameter(ROOT_ADDR,"check-address",VALUE) @AT@ 4958 @LENGTH@ 74
---------INS SimpleName@@ROOT_ADDR @TO@ SimpleName@@MethodName:allowNullValueTypeForOperationParameter:[ROOT_ADDR, "check-address", VALUE] @AT@ 4998 @LENGTH@ 9
---------INS StringLiteral@@"check-address" @TO@ SimpleName@@MethodName:allowNullValueTypeForOperationParameter:[ROOT_ADDR, "check-address", VALUE] @AT@ 5009 @LENGTH@ 15
---------INS SimpleName@@VALUE @TO@ SimpleName@@MethodName:allowNullValueTypeForOperationParameter:[ROOT_ADDR, "check-address", VALUE] @AT@ 5026 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1)).build() @TO@ MethodInvocation:SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1,true)).build() @AT@ 4660 @LENGTH@ 209
---UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1)).build() @TO@ SimpleAttributeDefinitionBuilder.create(name,ModelType.INT,true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1,true)).build() @AT@ 4667 @LENGTH@ 201
------UPD MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(1)] @TO@ MethodName:setValidator:[new IntRangeValidator(1,true)] @AT@ 4667 @LENGTH@ 193
---------UPD ClassInstanceCreation@@IntRangeValidator[1] @TO@ IntRangeValidator[1, true] @AT@ 4835 @LENGTH@ 24
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[1] @AT@ 4860 @LENGTH@ 4


UPD TypeDeclaration@@[@RunAs("Employee"), @RunAsPrincipal("javajoe"), @Stateless, public]FirstBean, [BeanInterface] @TO@ [@RunAs("Employee"), @RunAsPrincipal("javajoe"), @Stateless, @Remote(BeanInterface.class), public]FirstBean, [BeanInterface] @AT@ 1320 @LENGTH@ 374
---INS SingleMemberAnnotation@@@Remote(BeanInterface.class) @TO@ TypeDeclaration@@[@RunAs("Employee"), @RunAsPrincipal("javajoe"), @Stateless, public]FirstBean, [BeanInterface] @AT@ 1405 @LENGTH@ 28


UPD TryStatement@@try {  BufferedReader reader=new BufferedReader(new InputStreamReader(socket.getInputStream()));  output=new BufferedOutputStream(socket.getOutputStream());  String headLine=reader.readLine();  if (headLine == null || !headLine.startsWith("GET ") || !headLine.endsWith(" HTTP/1.0") && !headLine.endsWith(" HTTP/1.1")) {    LOGGER.log(Level.WARNING,String.format("Received invalid method : %s",headLine));    output.write("HTTP/1.0 405 Invalid method.\r\n\r\n".getBytes());    return;  }  String path=headLine.substring(4,headLine.length() - 9);  if (path.startsWith("/")) {    path=path.substring(1);  }  String mvn=convertToMavenUrl(path);  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));  try {    Artifact artifact=new DefaultArtifact(mvn,null);    ArtifactRequest request=new ArtifactRequest(artifact,repositories,null);    ArtifactResult result=system.resolveArtifact(session,request);    inputStream=new FileInputStream(result.getArtifact().getFile());  } catch (  Exception e) {    LOGGER.log(Level.WARNING,String.format("Could not find file : %s due to %s",mvn,e));    output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());    return;  }  LOGGER.log(Level.INFO,String.format("Writing response for file : %s",mvn));  output.write(("HTTP/1.1 200 OK\r\n" + "Date: " + (new Date()).toString() + "\r\n"+ "Server: FON Proxy/"+ "1.0-SNAPSHOT"+ "\r\n"+ "Connection: close\r\n"+ "Content-Type: application/octet-stream\r\n"+ "Content-Length: "+ inputStream.available()+ "\r\n"+ "\r\n").getBytes());  byte buffer[]=new byte[4096];  int length;  while ((length=inputStream.read(buffer)) != -1) {    output.write(buffer,0,length);  }  output.close();} catch (Exception e) {  LOGGER.log(Level.SEVERE,"Exception caught in maven proxy",e);} finally {  close(inputStream,output);} @TO@ try {  BufferedReader reader=new BufferedReader(new InputStreamReader(socket.getInputStream()));  output=new BufferedOutputStream(socket.getOutputStream());  String headLine=reader.readLine();  if (headLine == null || !headLine.startsWith("GET ") || !headLine.endsWith(" HTTP/1.0") && !headLine.endsWith(" HTTP/1.1")) {    LOGGER.log(Level.WARNING,String.format("Received invalid method : %s",headLine));    output.write("HTTP/1.0 405 Invalid method.\r\n\r\n".getBytes());    return;  }  String path=headLine.substring(4,headLine.length() - 9);  if (path.startsWith("/")) {    path=path.substring(1);  }  String mvn=convertToMavenUrl(path);  if (mvn == null) {    LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));    output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());    return;  } else {    LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));  }  try {    Artifact artifact=new DefaultArtifact(mvn,null);    ArtifactRequest request=new ArtifactRequest(artifact,repositories,null);    ArtifactResult result=system.resolveArtifact(session,request);    inputStream=new FileInputStream(result.getArtifact().getFile());  } catch (  Exception e) {    LOGGER.log(Level.WARNING,String.format("Could not find file : %s due to %s",mvn,e));    output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());    return;  }  LOGGER.log(Level.INFO,String.format("Writing response for file : %s",mvn));  output.write(("HTTP/1.1 200 OK\r\n" + "Date: " + (new Date()).toString() + "\r\n"+ "Server: FON Proxy/"+ "1.0-SNAPSHOT"+ "\r\n"+ "Connection: close\r\n"+ "Content-Type: application/octet-stream\r\n"+ "Content-Length: "+ inputStream.available()+ "\r\n"+ "\r\n").getBytes());  byte buffer[]=new byte[4096];  int length;  while ((length=inputStream.read(buffer)) != -1) {    output.write(buffer,0,length);  }  output.close();} catch (Exception e) {  LOGGER.log(Level.SEVERE,"Exception caught in maven proxy",e);} finally {  close(inputStream,output);} @AT@ 7138 @LENGTH@ 2606
---INS IfStatement@@if (mvn == null) {  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} else {  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));} @TO@ TryStatement@@try {  BufferedReader reader=new BufferedReader(new InputStreamReader(socket.getInputStream()));  output=new BufferedOutputStream(socket.getOutputStream());  String headLine=reader.readLine();  if (headLine == null || !headLine.startsWith("GET ") || !headLine.endsWith(" HTTP/1.0") && !headLine.endsWith(" HTTP/1.1")) {    LOGGER.log(Level.WARNING,String.format("Received invalid method : %s",headLine));    output.write("HTTP/1.0 405 Invalid method.\r\n\r\n".getBytes());    return;  }  String path=headLine.substring(4,headLine.length() - 9);  if (path.startsWith("/")) {    path=path.substring(1);  }  String mvn=convertToMavenUrl(path);  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));  try {    Artifact artifact=new DefaultArtifact(mvn,null);    ArtifactRequest request=new ArtifactRequest(artifact,repositories,null);    ArtifactResult result=system.resolveArtifact(session,request);    inputStream=new FileInputStream(result.getArtifact().getFile());  } catch (  Exception e) {    LOGGER.log(Level.WARNING,String.format("Could not find file : %s due to %s",mvn,e));    output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());    return;  }  LOGGER.log(Level.INFO,String.format("Writing response for file : %s",mvn));  output.write(("HTTP/1.1 200 OK\r\n" + "Date: " + (new Date()).toString() + "\r\n"+ "Server: FON Proxy/"+ "1.0-SNAPSHOT"+ "\r\n"+ "Connection: close\r\n"+ "Content-Type: application/octet-stream\r\n"+ "Content-Length: "+ inputStream.available()+ "\r\n"+ "\r\n").getBytes());  byte buffer[]=new byte[4096];  int length;  while ((length=inputStream.read(buffer)) != -1) {    output.write(buffer,0,length);  }  output.close();} catch (Exception e) {  LOGGER.log(Level.SEVERE,"Exception caught in maven proxy",e);} finally {  close(inputStream,output);} @AT@ 8014 @LENGTH@ 375
------INS InfixExpression@@mvn == null @TO@ IfStatement@@if (mvn == null) {  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} else {  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));} @AT@ 8018 @LENGTH@ 11
---------INS SimpleName@@mvn @TO@ InfixExpression@@mvn == null @AT@ 8018 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@mvn == null @AT@ 8021 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@mvn == null @AT@ 8025 @LENGTH@ 4
------INS Block@@ThenBody:{  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} @TO@ IfStatement@@if (mvn == null) {  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} else {  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));} @AT@ 8031 @LENGTH@ 235
---------INS ExpressionStatement@@MethodInvocation:LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path)) @TO@ Block@@ThenBody:{  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} @AT@ 8053 @LENGTH@ 82
------------INS MethodInvocation@@LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path)) @TO@ ExpressionStatement@@MethodInvocation:LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path)) @AT@ 8053 @LENGTH@ 81
---------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path)) @AT@ 8053 @LENGTH@ 6
---------------INS SimpleName@@MethodName:log:[Level.WARNING, String.format("Received non maven request : %s",path)] @TO@ MethodInvocation@@LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path)) @AT@ 8060 @LENGTH@ 74
------------------INS QualifiedName@@Level.WARNING @TO@ SimpleName@@MethodName:log:[Level.WARNING, String.format("Received non maven request : %s",path)] @AT@ 8064 @LENGTH@ 13
---------------------INS SimpleName@@Level @TO@ QualifiedName@@Level.WARNING @AT@ 8064 @LENGTH@ 5
---------------------INS SimpleName@@WARNING @TO@ QualifiedName@@Level.WARNING @AT@ 8070 @LENGTH@ 7
------------------INS MethodInvocation@@String.format("Received non maven request : %s",path) @TO@ SimpleName@@MethodName:log:[Level.WARNING, String.format("Received non maven request : %s",path)] @AT@ 8079 @LENGTH@ 54
---------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Received non maven request : %s",path) @AT@ 8079 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:format:["Received non maven request : %s", path] @TO@ MethodInvocation@@String.format("Received non maven request : %s",path) @AT@ 8086 @LENGTH@ 47
------------------------INS StringLiteral@@"Received non maven request : %s" @TO@ SimpleName@@MethodName:format:["Received non maven request : %s", path] @AT@ 8093 @LENGTH@ 33
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:format:["Received non maven request : %s", path] @AT@ 8128 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes()) @TO@ Block@@ThenBody:{  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} @AT@ 8156 @LENGTH@ 64
------------INS MethodInvocation@@output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes()) @TO@ ExpressionStatement@@MethodInvocation:output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes()) @AT@ 8156 @LENGTH@ 63
---------------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes()) @AT@ 8156 @LENGTH@ 6
---------------INS SimpleName@@MethodName:write:["HTTP/1.0 404 File not found.\r\n\r\n".getBytes()] @TO@ MethodInvocation@@output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes()) @AT@ 8163 @LENGTH@ 56
------------------INS MethodInvocation@@"HTTP/1.0 404 File not found.\r\n\r\n".getBytes() @TO@ SimpleName@@MethodName:write:["HTTP/1.0 404 File not found.\r\n\r\n".getBytes()] @AT@ 8169 @LENGTH@ 49
---------------------INS StringLiteral@@"HTTP/1.0 404 File not found.\r\n\r\n" @TO@ MethodInvocation@@"HTTP/1.0 404 File not found.\r\n\r\n".getBytes() @AT@ 8169 @LENGTH@ 38
---------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"HTTP/1.0 404 File not found.\r\n\r\n".getBytes() @AT@ 8208 @LENGTH@ 10
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} @AT@ 8241 @LENGTH@ 7
------INS Block@@ElseBody:{  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));} @TO@ IfStatement@@if (mvn == null) {  LOGGER.log(Level.WARNING,String.format("Received non maven request : %s",path));  output.write("HTTP/1.0 404 File not found.\r\n\r\n".getBytes());  return;} else {  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));} @AT@ 8272 @LENGTH@ 117
---------MOV ExpressionStatement@@MethodInvocation:LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn)) @TO@ Block@@ElseBody:{  LOGGER.log(Level.INFO,String.format("Received request for file : %s",mvn));} @AT@ 8014 @LENGTH@ 77


INS MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @TO@ TypeDeclaration@@[private, static]MyOrderTypeConverter, [TypeConverter] @AT@ 2840 @LENGTH@ 128
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2840 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2851 @LENGTH@ 1
---INS SimpleName@@MethodName:tryConvertTo @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2853 @LENGTH@ 12
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2866 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2866 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 2866 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 2872 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 2875 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2881 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2881 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2890 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2900 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2900 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2907 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:convertTo(type,value) @TO@ MethodDeclaration@@public, T, T, MethodName:tryConvertTo, Class<T> type, Exchange exchange, Object value,  @AT@ 2928 @LENGTH@ 30
------INS MethodInvocation@@convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:convertTo(type,value) @AT@ 2935 @LENGTH@ 22
---------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@convertTo(type,value) @AT@ 2935 @LENGTH@ 22
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2945 @LENGTH@ 4
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 2951 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:stream=new BufferedInputStream(new FileInputStream(file)) @TO@ Assignment:stream=IOHelper.buffered(new FileInputStream(file)) @AT@ 1881 @LENGTH@ 60
---UPD Assignment@@stream=new BufferedInputStream(new FileInputStream(file)) @TO@ stream=IOHelper.buffered(new FileInputStream(file)) @AT@ 1881 @LENGTH@ 59
------INS MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @TO@ Assignment@@stream=new BufferedInputStream(new FileInputStream(file)) @AT@ 1822 @LENGTH@ 44
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @AT@ 1822 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[new FileInputStream(file)] @TO@ MethodInvocation@@IOHelper.buffered(new FileInputStream(file)) @AT@ 1831 @LENGTH@ 35
------------INS ClassInstanceCreation@@FileInputStream[file] @TO@ SimpleName@@MethodName:buffered:[new FileInputStream(file)] @AT@ 1840 @LENGTH@ 25
---------------MOV New@@new @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 1914 @LENGTH@ 3
---------------MOV SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 1918 @LENGTH@ 15
---------------MOV SimpleName@@file @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 1934 @LENGTH@ 4
------DEL ClassInstanceCreation@@BufferedInputStream[new FileInputStream(file)] @AT@ 1890 @LENGTH@ 50
---------DEL New@@new @AT@ 1890 @LENGTH@ 3
---------DEL SimpleType@@BufferedInputStream @AT@ 1894 @LENGTH@ 19
---------DEL ClassInstanceCreation@@FileInputStream[file] @AT@ 1914 @LENGTH@ 25


INS IfStatement@@if (clazz == Object.class) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:isSerializable, Class<?> clazz,  @AT@ 1606 @LENGTH@ 63
---INS InfixExpression@@clazz == Object.class @TO@ IfStatement@@if (clazz == Object.class) {  return false;} @AT@ 1609 @LENGTH@ 21
------INS SimpleName@@clazz @TO@ InfixExpression@@clazz == Object.class @AT@ 1609 @LENGTH@ 5
------INS Operator@@== @TO@ InfixExpression@@clazz == Object.class @AT@ 1614 @LENGTH@ 2
------INS TypeLiteral@@Object.class @TO@ InfixExpression@@clazz == Object.class @AT@ 1618 @LENGTH@ 12
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (clazz == Object.class) {  return false;} @AT@ 1632 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1646 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1653 @LENGTH@ 5


UPD FieldDeclaration@@private, Version, [luceneVersion=Version.LUCENE_30] @TO@ private, Version, [luceneVersion=Version.LUCENE_35] @AT@ 1395 @LENGTH@ 50
---UPD VariableDeclarationFragment@@luceneVersion=Version.LUCENE_30 @TO@ luceneVersion=Version.LUCENE_35 @AT@ 1411 @LENGTH@ 33
------UPD QualifiedName@@Version.LUCENE_30 @TO@ Version.LUCENE_35 @AT@ 1427 @LENGTH@ 17
---------UPD SimpleName@@LUCENE_30 @TO@ LUCENE_35 @AT@ 1435 @LENGTH@ 9


UPD MethodDeclaration@@void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 279 @LENGTH@ 64
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 326 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 326 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 332 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 339 @LENGTH@ 11


UPD MethodDeclaration@@static, private, Exchange, MethodName:copyExchangeNoAttachments, Exchange exchange, boolean preserveExchangeId,  @TO@ private, static, Exchange, MethodName:copyExchangeNoAttachments, Exchange exchange, boolean preserveExchangeId,  @AT@ 9792 @LENGTH@ 255
---INS Modifier@@private @TO@ MethodDeclaration@@static, private, Exchange, MethodName:copyExchangeNoAttachments, Exchange exchange, boolean preserveExchangeId,  @AT@ 9792 @LENGTH@ 7
---DEL Modifier@@private @AT@ 9799 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:reader=new BufferedInputStream(in) @TO@ Assignment:reader=IOHelper.buffered(in) @AT@ 5556 @LENGTH@ 37
---UPD Assignment@@reader=new BufferedInputStream(in) @TO@ reader=IOHelper.buffered(in) @AT@ 5556 @LENGTH@ 36
------DEL ClassInstanceCreation@@BufferedInputStream[in] @AT@ 5565 @LENGTH@ 27
---------DEL New@@new @AT@ 5565 @LENGTH@ 3
---------DEL SimpleType@@BufferedInputStream @AT@ 5569 @LENGTH@ 19
---------DEL SimpleName@@in @AT@ 5589 @LENGTH@ 2
------INS MethodInvocation@@IOHelper.buffered(in) @TO@ Assignment@@reader=new BufferedInputStream(in) @AT@ 5565 @LENGTH@ 21
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(in) @AT@ 5565 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[in] @TO@ MethodInvocation@@IOHelper.buffered(in) @AT@ 5574 @LENGTH@ 12
------------INS SimpleName@@in @TO@ SimpleName@@MethodName:buffered:[in] @AT@ 5583 @LENGTH@ 2


UPD TypeDeclaration@@[@Command(name="cloud-provider-add",scope="fabric",description="Registers a cloud provider to the registry."), public]CloudProviderAdd, FabricCommand @TO@ [@Command(name="cloud-provider-add",scope="fabric",description="Registers a cloud provider with the fabric."), public]CloudProviderAdd, FabricCommand @AT@ 1462 @LENGTH@ 2162
---UPD NormalAnnotation@@@Command(name="cloud-provider-add",scope="fabric",description="Registers a cloud provider to the registry.") @TO@ @Command(name="cloud-provider-add",scope="fabric",description="Registers a cloud provider with the fabric.") @AT@ 1462 @LENGTH@ 116


UPD EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @TO@ for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  if (set == null) {    Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();    while (subs.hasMoreElements()) {      set=accepted.get(subs.nextElement());      if (set != null) {        break;      }    }  }  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 1716 @LENGTH@ 711
---INS IfStatement@@if (set == null) {  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @TO@ EnhancedForStatement@@for (Map.Entry<NetworkInterface,Set<InetAddress>> entry : allCandidates.entrySet()) {  InetAddress target=entry.getValue().iterator().next();  InterfaceCriteria criteria=new InetAddressMatchInterfaceCriteria(target);  Map<NetworkInterface,Set<InetAddress>> accepted=criteria.getAcceptableAddresses(allCandidates);  assertNotNull(accepted);  accepted=OverallInterfaceCriteria.pruneAliasDuplicates(accepted);  assertEquals(1,accepted.size());  Set<InetAddress> set=accepted.get(entry.getKey());  assertNotNull(set);  assertEquals(1,set.size());  assertTrue(set.contains(target));} @AT@ 2341 @LENGTH@ 339
------INS InfixExpression@@set == null @TO@ IfStatement@@if (set == null) {  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2345 @LENGTH@ 11
---------INS SimpleName@@set @TO@ InfixExpression@@set == null @AT@ 2345 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@set == null @AT@ 2348 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@set == null @AT@ 2352 @LENGTH@ 4
------INS Block@@ThenBody:{  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @TO@ IfStatement@@if (set == null) {  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2358 @LENGTH@ 322
---------INS VariableDeclarationStatement@@Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces(); @TO@ Block@@ThenBody:{  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2376 @LENGTH@ 71
------------INS ParameterizedType@@Enumeration<NetworkInterface> @TO@ VariableDeclarationStatement@@Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces(); @AT@ 2376 @LENGTH@ 29
---------------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<NetworkInterface> @AT@ 2376 @LENGTH@ 11
---------------INS SimpleType@@NetworkInterface @TO@ ParameterizedType@@Enumeration<NetworkInterface> @AT@ 2388 @LENGTH@ 16
------------INS VariableDeclarationFragment@@subs=entry.getKey().getSubInterfaces() @TO@ VariableDeclarationStatement@@Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces(); @AT@ 2406 @LENGTH@ 40
---------------INS SimpleName@@subs @TO@ VariableDeclarationFragment@@subs=entry.getKey().getSubInterfaces() @AT@ 2406 @LENGTH@ 4
---------------INS MethodInvocation@@entry.getKey().getSubInterfaces() @TO@ VariableDeclarationFragment@@subs=entry.getKey().getSubInterfaces() @AT@ 2413 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey().getSubInterfaces() @AT@ 2413 @LENGTH@ 14
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey().getSubInterfaces() @AT@ 2413 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getSubInterfaces:[] @TO@ MethodInvocation@@entry.getKey().getSubInterfaces() @AT@ 2428 @LENGTH@ 18
---------INS WhileStatement@@while (subs.hasMoreElements()) {  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @TO@ Block@@ThenBody:{  Enumeration<NetworkInterface> subs=entry.getKey().getSubInterfaces();  while (subs.hasMoreElements()) {    set=accepted.get(subs.nextElement());    if (set != null) {      break;    }  }} @AT@ 2464 @LENGTH@ 202
------------INS MethodInvocation@@subs.hasMoreElements() @TO@ WhileStatement@@while (subs.hasMoreElements()) {  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2471 @LENGTH@ 22
---------------INS SimpleName@@Name:subs @TO@ MethodInvocation@@subs.hasMoreElements() @AT@ 2471 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hasMoreElements:[] @TO@ MethodInvocation@@subs.hasMoreElements() @AT@ 2476 @LENGTH@ 17
------------INS Block@@WhileBody:{  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @TO@ WhileStatement@@while (subs.hasMoreElements()) {  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2495 @LENGTH@ 171
---------------INS ExpressionStatement@@Assignment:set=accepted.get(subs.nextElement()) @TO@ Block@@WhileBody:{  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2517 @LENGTH@ 39
------------------INS Assignment@@set=accepted.get(subs.nextElement()) @TO@ ExpressionStatement@@Assignment:set=accepted.get(subs.nextElement()) @AT@ 2517 @LENGTH@ 38
---------------------INS SimpleName@@set @TO@ Assignment@@set=accepted.get(subs.nextElement()) @AT@ 2517 @LENGTH@ 3
---------------------INS Operator@@= @TO@ Assignment@@set=accepted.get(subs.nextElement()) @AT@ 2520 @LENGTH@ 1
---------------------INS MethodInvocation@@accepted.get(subs.nextElement()) @TO@ Assignment@@set=accepted.get(subs.nextElement()) @AT@ 2523 @LENGTH@ 32
------------------------INS SimpleName@@Name:accepted @TO@ MethodInvocation@@accepted.get(subs.nextElement()) @AT@ 2523 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:get:[subs.nextElement()] @TO@ MethodInvocation@@accepted.get(subs.nextElement()) @AT@ 2532 @LENGTH@ 23
---------------------------INS MethodInvocation@@subs.nextElement() @TO@ SimpleName@@MethodName:get:[subs.nextElement()] @AT@ 2536 @LENGTH@ 18
------------------------------INS SimpleName@@Name:subs @TO@ MethodInvocation@@subs.nextElement() @AT@ 2536 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:nextElement:[] @TO@ MethodInvocation@@subs.nextElement() @AT@ 2541 @LENGTH@ 13
---------------INS IfStatement@@if (set != null) {  break;} @TO@ Block@@WhileBody:{  set=accepted.get(subs.nextElement());  if (set != null) {    break;  }} @AT@ 2577 @LENGTH@ 71
------------------INS InfixExpression@@set != null @TO@ IfStatement@@if (set != null) {  break;} @AT@ 2581 @LENGTH@ 11
---------------------INS SimpleName@@set @TO@ InfixExpression@@set != null @AT@ 2581 @LENGTH@ 3
---------------------INS Operator@@!= @TO@ InfixExpression@@set != null @AT@ 2584 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@set != null @AT@ 2588 @LENGTH@ 4
------------------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (set != null) {  break;} @AT@ 2594 @LENGTH@ 54
---------------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 2620 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:this.getUseJK() @TO@ BooleanLiteral:false @AT@ 28030 @LENGTH@ 23
---DEL MethodInvocation@@this.getUseJK() @AT@ 28037 @LENGTH@ 15
------DEL ThisExpression@@this @AT@ 28037 @LENGTH@ 4
------DEL SimpleName@@MethodName:getUseJK:[] @AT@ 28042 @LENGTH@ 10
---INS BooleanLiteral@@false @TO@ ReturnStatement@@MethodInvocation:this.getUseJK() @AT@ 28387 @LENGTH@ 5


UPD VariableDeclarationStatement@@Object jmsOperationsInstance=null; @TO@ Object jmsOperationsInstance; @AT@ 3199 @LENGTH@ 36
---UPD VariableDeclarationFragment@@jmsOperationsInstance=null @TO@ jmsOperationsInstance @AT@ 3206 @LENGTH@ 28
------DEL NullLiteral@@null @AT@ 3230 @LENGTH@ 4


UPD MethodDeclaration@@public, final, void, MethodName:setup, final ManagementClient managementClient, Exception,  @TO@ public, final, void, MethodName:setup, final ManagementClient managementClient, final String containerId, Exception,  @AT@ 579 @LENGTH@ 174
---INS SingleVariableDeclaration@@final String containerId @TO@ MethodDeclaration@@public, final, void, MethodName:setup, final ManagementClient managementClient, Exception,  @AT@ 644 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String containerId @AT@ 644 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String containerId @AT@ 650 @LENGTH@ 6
------INS SimpleName@@containerId @TO@ SingleVariableDeclaration@@final String containerId @AT@ 657 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:operation=GetOperation.valueOf(value.toUpperCase().replace('-','_')) @TO@ Assignment:operation=GetOperation.valueOf(value.toUpperCase(Locale.ENGLISH).replace('-','_')) @AT@ 18894 @LENGTH@ 72
---UPD Assignment@@operation=GetOperation.valueOf(value.toUpperCase().replace('-','_')) @TO@ operation=GetOperation.valueOf(value.toUpperCase(Locale.ENGLISH).replace('-','_')) @AT@ 18894 @LENGTH@ 71
------UPD MethodInvocation@@GetOperation.valueOf(value.toUpperCase().replace('-','_')) @TO@ GetOperation.valueOf(value.toUpperCase(Locale.ENGLISH).replace('-','_')) @AT@ 18906 @LENGTH@ 59
---------UPD SimpleName@@MethodName:valueOf:[value.toUpperCase().replace('-','_')] @TO@ MethodName:valueOf:[value.toUpperCase(Locale.ENGLISH).replace('-','_')] @AT@ 18919 @LENGTH@ 46
------------UPD MethodInvocation@@value.toUpperCase().replace('-','_') @TO@ value.toUpperCase(Locale.ENGLISH).replace('-','_') @AT@ 18927 @LENGTH@ 37
---------------UPD MethodInvocation@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 18927 @LENGTH@ 19
------------------INS QualifiedName@@Locale.ENGLISH @TO@ MethodInvocation@@MethodName:toUpperCase:[] @AT@ 18970 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 18970 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 18977 @LENGTH@ 7


UPD IfStatement@@if (key == null) {  return;} @TO@ if (key == null) {  instance.passivate();  component.releaseEntityBeanInstance(instance);  return;} @AT@ 3760 @LENGTH@ 48
---UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  instance.passivate();  component.releaseEntityBeanInstance(instance);  return;} @AT@ 3777 @LENGTH@ 31
------INS ExpressionStatement@@MethodInvocation:instance.passivate() @TO@ Block@@ThenBody:{  return;} @AT@ 3791 @LENGTH@ 21
---------INS MethodInvocation@@instance.passivate() @TO@ ExpressionStatement@@MethodInvocation:instance.passivate() @AT@ 3791 @LENGTH@ 20
------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.passivate() @AT@ 3791 @LENGTH@ 8
------------INS SimpleName@@MethodName:passivate:[] @TO@ MethodInvocation@@instance.passivate() @AT@ 3800 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:component.releaseEntityBeanInstance(instance) @TO@ Block@@ThenBody:{  return;} @AT@ 3825 @LENGTH@ 46
---------INS MethodInvocation@@component.releaseEntityBeanInstance(instance) @TO@ ExpressionStatement@@MethodInvocation:component.releaseEntityBeanInstance(instance) @AT@ 3825 @LENGTH@ 45
------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.releaseEntityBeanInstance(instance) @AT@ 3825 @LENGTH@ 9
------------INS SimpleName@@MethodName:releaseEntityBeanInstance:[instance] @TO@ MethodInvocation@@component.releaseEntityBeanInstance(instance) @AT@ 3835 @LENGTH@ 35
---------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:releaseEntityBeanInstance:[instance] @AT@ 3861 @LENGTH@ 8


UPD VariableDeclarationStatement@@Map<Object,Object> systemProperties=System.getProperties(); @TO@ @SuppressWarnings("unchecked") Map<String,Object> systemProperties=(Map<String,Object>)(Object)System.getProperties(); @AT@ 9308 @LENGTH@ 62
---UPD ParameterizedType@@Map<Object,Object> @TO@ Map<String,Object> @AT@ 9308 @LENGTH@ 19
------UPD SimpleType@@Object @TO@ String @AT@ 9312 @LENGTH@ 6
---UPD VariableDeclarationFragment@@systemProperties=System.getProperties() @TO@ systemProperties=(Map<String,Object>)(Object)System.getProperties() @AT@ 9328 @LENGTH@ 41
------DEL MethodInvocation@@System.getProperties() @AT@ 9347 @LENGTH@ 22
------INS CastExpression@@(Map<String,Object>)(Object)System.getProperties() @TO@ VariableDeclarationFragment@@systemProperties=System.getProperties() @AT@ 9598 @LENGTH@ 53
---------INS ParameterizedType@@Map<String,Object> @TO@ CastExpression@@(Map<String,Object>)(Object)System.getProperties() @AT@ 9599 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 9599 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 9603 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 9611 @LENGTH@ 6
---------INS CastExpression@@(Object)System.getProperties() @TO@ CastExpression@@(Map<String,Object>)(Object)System.getProperties() @AT@ 9620 @LENGTH@ 31
------------INS SimpleType@@Object @TO@ CastExpression@@(Object)System.getProperties() @AT@ 9621 @LENGTH@ 6
------------INS MethodInvocation@@System.getProperties() @TO@ CastExpression@@(Object)System.getProperties() @AT@ 9629 @LENGTH@ 22
---------------MOV SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperties() @AT@ 9347 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:getProperties:[] @TO@ MethodInvocation@@System.getProperties() @AT@ 9354 @LENGTH@ 15


DEL IfStatement@@if (attachments == null) {  attachments=createAttachments();} @AT@ 8546 @LENGTH@ 83
---DEL InfixExpression@@attachments == null @AT@ 8550 @LENGTH@ 19
------DEL SimpleName@@attachments @AT@ 8550 @LENGTH@ 11
------DEL Operator@@== @AT@ 8561 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 8565 @LENGTH@ 4
---DEL Block@@ThenBody:{  attachments=createAttachments();} @AT@ 8571 @LENGTH@ 58
------DEL ExpressionStatement@@Assignment:attachments=createAttachments() @AT@ 8585 @LENGTH@ 34
---------DEL Assignment@@attachments=createAttachments() @AT@ 8585 @LENGTH@ 33
------------DEL SimpleName@@attachments @AT@ 8585 @LENGTH@ 11
------------DEL Operator@@= @AT@ 8596 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:createAttachments:[] @AT@ 8599 @LENGTH@ 19


UPD TypeDeclaration@@[public]PigTaskletParser, AbstractImprovedSimpleBeanDefinitionParser @TO@ PigTaskletParser, AbstractImprovedSimpleBeanDefinitionParser @AT@ 1104 @LENGTH@ 595
---DEL Modifier@@public @AT@ 1104 @LENGTH@ 6


MOV ExpressionStatement@@MethodInvocation:Assert.assertNull(mock.getExchanges().get(0).getIn().getHeader("foo")) @TO@ MethodDeclaration@@public, void, MethodName:testXPathWithNamespaceDifferentNamespace, Exception,  @AT@ 2301 @LENGTH@ 71


UPD EnhancedForStatement@@for (String url : patch.getBundles()) {  JarInputStream jis=new JarInputStream(new URL(url).openStream());  Attributes att=jis.getManifest().getMainAttributes();  jis.close();  String sn=att.getValue(Constants.BUNDLE_SYMBOLICNAME);  String vr=att.getValue(Constants.BUNDLE_VERSION);  Version v=VersionTable.getVersion(vr);  if (v.getMicro() > 0) {    VersionRange range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true);    for (    Bundle bundle : allBundles) {      Version oldV=bundle.getVersion();      if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {        String location=bundle.getLocation();        updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));        toInstall.add(url);        toDelete.add(bundle);      }    }  }} @TO@ for (String url : patch.getBundles()) {  JarInputStream jis=new JarInputStream(new URL(url).openStream());  Attributes att=jis.getManifest().getMainAttributes();  jis.close();  String sn=att.getValue(Constants.BUNDLE_SYMBOLICNAME);  String vr=att.getValue(Constants.BUNDLE_VERSION);  Version v=VersionTable.getVersion(vr);  Version lower=new Version(v.getMajor(),v.getMinor(),0);  if (v.compareTo(lower) > 0) {    VersionRange range=new VersionRange(false,lower,v,true);    for (    Bundle bundle : allBundles) {      Version oldV=bundle.getVersion();      if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {        String location=bundle.getLocation();        updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));        toInstall.add(url);        toDelete.add(bundle);      }    }  }} @AT@ 13367 @LENGTH@ 1212
---UPD IfStatement@@if (v.getMicro() > 0) {  VersionRange range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true);  for (  Bundle bundle : allBundles) {    Version oldV=bundle.getVersion();    if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {      String location=bundle.getLocation();      updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));      toInstall.add(url);      toDelete.add(bundle);    }  }} @TO@ if (v.compareTo(lower) > 0) {  VersionRange range=new VersionRange(false,lower,v,true);  for (  Bundle bundle : allBundles) {    Version oldV=bundle.getVersion();    if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {      String location=bundle.getLocation();      updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));      toInstall.add(url);      toDelete.add(bundle);    }  }} @AT@ 13877 @LENGTH@ 688
------UPD InfixExpression@@v.getMicro() > 0 @TO@ v.compareTo(lower) > 0 @AT@ 13881 @LENGTH@ 16
---------UPD MethodInvocation@@v.getMicro() @TO@ v.compareTo(lower) @AT@ 13881 @LENGTH@ 12
------------UPD SimpleName@@MethodName:getMicro:[] @TO@ MethodName:compareTo:[lower] @AT@ 13883 @LENGTH@ 10
---------------INS SimpleName@@lower @TO@ SimpleName@@MethodName:getMicro:[] @AT@ 13969 @LENGTH@ 5
------UPD Block@@ThenBody:{  VersionRange range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true);  for (  Bundle bundle : allBundles) {    Version oldV=bundle.getVersion();    if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {      String location=bundle.getLocation();      updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));      toInstall.add(url);      toDelete.add(bundle);    }  }} @TO@ ThenBody:{  VersionRange range=new VersionRange(false,lower,v,true);  for (  Bundle bundle : allBundles) {    Version oldV=bundle.getVersion();    if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {      String location=bundle.getLocation();      updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));      toInstall.add(url);      toDelete.add(bundle);    }  }} @AT@ 13899 @LENGTH@ 666
---------UPD VariableDeclarationStatement@@VersionRange range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true); @TO@ Version lower=new Version(v.getMajor(),v.getMinor(),0); @AT@ 13921 @LENGTH@ 98
---------INS VariableDeclarationStatement@@VersionRange range=new VersionRange(false,lower,v,true); @TO@ Block@@ThenBody:{  VersionRange range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true);  for (  Bundle bundle : allBundles) {    Version oldV=bundle.getVersion();    if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {      String location=bundle.getLocation();      updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));      toInstall.add(url);      toDelete.add(bundle);    }  }} @AT@ 14003 @LENGTH@ 61
------------INS SimpleType@@VersionRange @TO@ VariableDeclarationStatement@@VersionRange range=new VersionRange(false,lower,v,true); @AT@ 14003 @LENGTH@ 12
------------INS VariableDeclarationFragment@@range=new VersionRange(false,lower,v,true) @TO@ VariableDeclarationStatement@@VersionRange range=new VersionRange(false,lower,v,true); @AT@ 14016 @LENGTH@ 47
---------------INS SimpleName@@range @TO@ VariableDeclarationFragment@@range=new VersionRange(false,lower,v,true) @AT@ 14016 @LENGTH@ 5
---------------INS ClassInstanceCreation@@VersionRange[false, lower, v, true] @TO@ VariableDeclarationFragment@@range=new VersionRange(false,lower,v,true) @AT@ 14024 @LENGTH@ 39
------------------INS New@@new @TO@ ClassInstanceCreation@@VersionRange[false, lower, v, true] @AT@ 14024 @LENGTH@ 3
------------------INS SimpleType@@VersionRange @TO@ ClassInstanceCreation@@VersionRange[false, lower, v, true] @AT@ 14028 @LENGTH@ 12
------------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@VersionRange[false, lower, v, true] @AT@ 14041 @LENGTH@ 5
------------------INS SimpleName@@lower @TO@ ClassInstanceCreation@@VersionRange[false, lower, v, true] @AT@ 14048 @LENGTH@ 5
------------------INS SimpleName@@v @TO@ ClassInstanceCreation@@VersionRange[false, lower, v, true] @AT@ 14055 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@VersionRange[false, lower, v, true] @AT@ 14058 @LENGTH@ 4
---MOV VariableDeclarationStatement@@VersionRange range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true); @TO@ EnhancedForStatement@@for (String url : patch.getBundles()) {  JarInputStream jis=new JarInputStream(new URL(url).openStream());  Attributes att=jis.getManifest().getMainAttributes();  jis.close();  String sn=att.getValue(Constants.BUNDLE_SYMBOLICNAME);  String vr=att.getValue(Constants.BUNDLE_VERSION);  Version v=VersionTable.getVersion(vr);  if (v.getMicro() > 0) {    VersionRange range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true);    for (    Bundle bundle : allBundles) {      Version oldV=bundle.getVersion();      if (sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {        String location=bundle.getLocation();        updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));        toInstall.add(url);        toDelete.add(bundle);      }    }  }} @AT@ 13921 @LENGTH@ 98
------UPD SimpleType@@VersionRange @TO@ Version @AT@ 13921 @LENGTH@ 12
------UPD VariableDeclarationFragment@@range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true) @TO@ lower=new Version(v.getMajor(),v.getMinor(),0) @AT@ 13934 @LENGTH@ 84
---------UPD SimpleName@@range @TO@ lower @AT@ 13934 @LENGTH@ 5
---------DEL ClassInstanceCreation@@VersionRange[false, new Version(v.getMajor(),v.getMinor(),0), v, true] @AT@ 13942 @LENGTH@ 76
------------DEL New@@new @AT@ 13942 @LENGTH@ 3
------------DEL SimpleType@@VersionRange @AT@ 13946 @LENGTH@ 12
------------DEL BooleanLiteral@@false @AT@ 13959 @LENGTH@ 5
------------DEL SimpleName@@v @AT@ 14010 @LENGTH@ 1
------------DEL BooleanLiteral@@true @AT@ 14013 @LENGTH@ 4
---------MOV ClassInstanceCreation@@Version[v.getMajor(), v.getMinor(), 0] @TO@ VariableDeclarationFragment@@range=new VersionRange(false,new Version(v.getMajor(),v.getMinor(),0),v,true) @AT@ 13966 @LENGTH@ 42


UPD ExpressionStatement@@Assignment:currentStream=new BufferedOutputStream(new FileOutputStream(tempFile)) @TO@ Assignment:currentStream=IOHelper.buffered(new FileOutputStream(tempFile)) @AT@ 7998 @LENGTH@ 73
---UPD Assignment@@currentStream=new BufferedOutputStream(new FileOutputStream(tempFile)) @TO@ currentStream=IOHelper.buffered(new FileOutputStream(tempFile)) @AT@ 7998 @LENGTH@ 72
------DEL ClassInstanceCreation@@BufferedOutputStream[new FileOutputStream(tempFile)] @AT@ 8014 @LENGTH@ 56
---------DEL New@@new @AT@ 8014 @LENGTH@ 3
---------DEL SimpleType@@BufferedOutputStream @AT@ 8018 @LENGTH@ 20
---------DEL ClassInstanceCreation@@FileOutputStream[tempFile] @AT@ 8039 @LENGTH@ 30
------INS MethodInvocation@@IOHelper.buffered(new FileOutputStream(tempFile)) @TO@ Assignment@@currentStream=new BufferedOutputStream(new FileOutputStream(tempFile)) @AT@ 8016 @LENGTH@ 49
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.buffered(new FileOutputStream(tempFile)) @AT@ 8016 @LENGTH@ 8
---------INS SimpleName@@MethodName:buffered:[new FileOutputStream(tempFile)] @TO@ MethodInvocation@@IOHelper.buffered(new FileOutputStream(tempFile)) @AT@ 8025 @LENGTH@ 40
------------INS ClassInstanceCreation@@FileOutputStream[tempFile] @TO@ SimpleName@@MethodName:buffered:[new FileOutputStream(tempFile)] @AT@ 8034 @LENGTH@ 30
---------------MOV New@@new @TO@ ClassInstanceCreation@@FileOutputStream[tempFile] @AT@ 8039 @LENGTH@ 3
---------------MOV SimpleType@@FileOutputStream @TO@ ClassInstanceCreation@@FileOutputStream[tempFile] @AT@ 8043 @LENGTH@ 16
---------------MOV SimpleName@@tempFile @TO@ ClassInstanceCreation@@FileOutputStream[tempFile] @AT@ 8060 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:testTypeAttributeFragmen, Exception,  @TO@ public, void, MethodName:testTypeAttributeFragment, Exception,  @AT@ 5154 @LENGTH@ 662
---UPD SimpleName@@MethodName:testTypeAttributeFragmen @TO@ MethodName:testTypeAttributeFragment @AT@ 5166 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:node.get(REPLY_PROPERTIES,DESCRIPTION).set(bundle.getString("core.management.whoami.reply")) @TO@ MethodInvocation:node.get(REPLY_PROPERTIES).setEmptyObject() @AT@ 3071 @LENGTH@ 94
---UPD MethodInvocation@@node.get(REPLY_PROPERTIES,DESCRIPTION).set(bundle.getString("core.management.whoami.reply")) @TO@ node.get(REPLY_PROPERTIES).setEmptyObject() @AT@ 3071 @LENGTH@ 93
------UPD MethodInvocation@@MethodName:get:[REPLY_PROPERTIES, DESCRIPTION] @TO@ MethodName:get:[REPLY_PROPERTIES] @AT@ 3071 @LENGTH@ 39
---------DEL SimpleName@@DESCRIPTION @AT@ 3098 @LENGTH@ 11
------UPD SimpleName@@MethodName:set:[bundle.getString("core.management.whoami.reply")] @TO@ MethodName:setEmptyObject:[] @AT@ 3111 @LENGTH@ 53
---------DEL MethodInvocation@@bundle.getString("core.management.whoami.reply") @AT@ 3115 @LENGTH@ 48
------------DEL SimpleName@@Name:bundle @AT@ 3115 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getString:["core.management.whoami.reply"] @AT@ 3122 @LENGTH@ 41
---------------DEL StringLiteral@@"core.management.whoami.reply" @AT@ 3132 @LENGTH@ 30


UPD TypeDeclaration@@[public]InvalidPayloadException, CamelExchangeException @TO@ [@Deprecated, public]InvalidPayloadException, CamelExchangeException @AT@ 969 @LENGTH@ 1100
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InvalidPayloadException, CamelExchangeException @AT@ 1013 @LENGTH@ 11


UPD SuperConstructorInvocation@@super(uri,TradeExecutorComponent.this.getCamelContext());
 @TO@ super(uri,TradeExecutorComponent.this);
 @AT@ 3732 @LENGTH@ 58
---DEL MethodInvocation@@TradeExecutorComponent.this.getCamelContext() @AT@ 3743 @LENGTH@ 45
------DEL ThisExpression@@this @AT@ 3743 @LENGTH@ 27
------DEL SimpleName@@MethodName:getCamelContext:[] @AT@ 3771 @LENGTH@ 17
---INS ThisExpression@@this @TO@ SuperConstructorInvocation@@super(uri,TradeExecutorComponent.this.getCamelContext());
 @AT@ 3743 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:policySet.setLocation(policyDir.getAbsolutePath()) @TO@ MethodInvocation:policySet.setLocation(policyDir.toURI().getPath()) @AT@ 11311 @LENGTH@ 51
---UPD MethodInvocation@@policySet.setLocation(policyDir.getAbsolutePath()) @TO@ policySet.setLocation(policyDir.toURI().getPath()) @AT@ 11311 @LENGTH@ 50
------UPD SimpleName@@MethodName:setLocation:[policyDir.getAbsolutePath()] @TO@ MethodName:setLocation:[policyDir.toURI().getPath()] @AT@ 11321 @LENGTH@ 40
---------UPD MethodInvocation@@policyDir.getAbsolutePath() @TO@ policyDir.toURI().getPath() @AT@ 11333 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:toURI:[] @TO@ MethodInvocation@@policyDir.getAbsolutePath() @AT@ 11317 @LENGTH@ 17
------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:getPath:[] @AT@ 11343 @LENGTH@ 17


UPD MethodDeclaration@@protected, Object, MethodName:doConvertTo, final Class type, final Exchange exchange, final Object value,  @TO@ protected, Object, MethodName:doConvertTo, final Class<?> type, final Exchange exchange, final Object value,  @AT@ 1771 @LENGTH@ 425
---UPD SingleVariableDeclaration@@final Class type @TO@ final Class<?> type @AT@ 1800 @LENGTH@ 16
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@final Class type @AT@ 1806 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1806 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1812 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 1806 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ MethodInvocation:context.removeService(ThreadsServices.executorName(name)) @AT@ 2098 @LENGTH@ 63
---UPD MethodInvocation@@context.removeService(ThreadsServices.threadFactoryName(name)) @TO@ context.removeService(ThreadsServices.executorName(name)) @AT@ 2098 @LENGTH@ 62
------UPD SimpleName@@MethodName:removeService:[ThreadsServices.threadFactoryName(name)] @TO@ MethodName:removeService:[ThreadsServices.executorName(name)] @AT@ 2106 @LENGTH@ 54
---------UPD MethodInvocation@@ThreadsServices.threadFactoryName(name) @TO@ ThreadsServices.executorName(name) @AT@ 2120 @LENGTH@ 39
------------UPD SimpleName@@MethodName:threadFactoryName:[name] @TO@ MethodName:executorName:[name] @AT@ 2136 @LENGTH@ 23


DEL IfStatement@@if (endpoint != null) {  if (!uri.getScheme().equals("remote")) {    throw MESSAGES.invalidUrl("remote");  }} else {  if (!uriScheme.equals(uri.getScheme())) {    throw MESSAGES.unmatchedScheme(uriScheme,uri);  }} @AT@ 9574 @LENGTH@ 404
---DEL InfixExpression@@endpoint != null @AT@ 9578 @LENGTH@ 16
------DEL SimpleName@@endpoint @AT@ 9578 @LENGTH@ 8
------DEL Operator@@!= @AT@ 9586 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 9590 @LENGTH@ 4
---DEL Block@@ThenBody:{  if (!uri.getScheme().equals("remote")) {    throw MESSAGES.invalidUrl("remote");  }} @AT@ 9595 @LENGTH@ 218
------DEL IfStatement@@if (!uri.getScheme().equals("remote")) {  throw MESSAGES.invalidUrl("remote");} @AT@ 9684 @LENGTH@ 115
---------DEL PrefixExpression@@!uri.getScheme().equals("remote") @AT@ 9688 @LENGTH@ 33
------------DEL Operator@@! @AT@ 9688 @LENGTH@ 1
------------DEL MethodInvocation@@uri.getScheme().equals("remote") @AT@ 9689 @LENGTH@ 32
---------------DEL MethodInvocation@@MethodName:getScheme:[] @AT@ 9689 @LENGTH@ 15
---------------DEL SimpleName@@Name:uri @AT@ 9689 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:equals:["remote"] @AT@ 9705 @LENGTH@ 16
------------------DEL StringLiteral@@"remote" @AT@ 9712 @LENGTH@ 8
---------DEL Block@@ThenBody:{  throw MESSAGES.invalidUrl("remote");} @AT@ 9723 @LENGTH@ 76
------------DEL ThrowStatement@@MethodInvocation:MESSAGES.invalidUrl("remote") @AT@ 9745 @LENGTH@ 36
---------------DEL MethodInvocation@@MESSAGES.invalidUrl("remote") @AT@ 9751 @LENGTH@ 29
------------------DEL SimpleName@@Name:MESSAGES @AT@ 9751 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:invalidUrl:["remote"] @AT@ 9760 @LENGTH@ 20
---------------------DEL StringLiteral@@"remote" @AT@ 9771 @LENGTH@ 8
---DEL Block@@ElseBody:{  if (!uriScheme.equals(uri.getScheme())) {    throw MESSAGES.unmatchedScheme(uriScheme,uri);  }} @AT@ 9819 @LENGTH@ 159
------DEL IfStatement@@if (!uriScheme.equals(uri.getScheme())) {  throw MESSAGES.unmatchedScheme(uriScheme,uri);} @AT@ 9837 @LENGTH@ 127
---------DEL PrefixExpression@@!uriScheme.equals(uri.getScheme()) @AT@ 9841 @LENGTH@ 34
------------DEL Operator@@! @AT@ 9841 @LENGTH@ 1
------------DEL MethodInvocation@@uriScheme.equals(uri.getScheme()) @AT@ 9842 @LENGTH@ 33
---------------DEL SimpleName@@Name:uriScheme @AT@ 9842 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:equals:[uri.getScheme()] @AT@ 9852 @LENGTH@ 23
------------------DEL MethodInvocation@@uri.getScheme() @AT@ 9859 @LENGTH@ 15
---------------------DEL SimpleName@@Name:uri @AT@ 9859 @LENGTH@ 3
---------------------DEL SimpleName@@MethodName:getScheme:[] @AT@ 9863 @LENGTH@ 11
---------DEL Block@@ThenBody:{  throw MESSAGES.unmatchedScheme(uriScheme,uri);} @AT@ 9877 @LENGTH@ 87
------------DEL ThrowStatement@@MethodInvocation:MESSAGES.unmatchedScheme(uriScheme,uri) @AT@ 9899 @LENGTH@ 47
---------------DEL MethodInvocation@@MESSAGES.unmatchedScheme(uriScheme,uri) @AT@ 9905 @LENGTH@ 40
------------------DEL SimpleName@@Name:MESSAGES @AT@ 9905 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:unmatchedScheme:[uriScheme, uri] @AT@ 9914 @LENGTH@ 31
---------------------DEL SimpleName@@uriScheme @AT@ 9930 @LENGTH@ 9
---------------------DEL SimpleName@@uri @AT@ 9941 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:mockLog.expectedBodiesReceived("Hell David") @TO@ MethodInvocation:mockLog.expectedBodiesReceived("Hello David") @AT@ 1375 @LENGTH@ 45
---UPD MethodInvocation@@mockLog.expectedBodiesReceived("Hell David") @TO@ mockLog.expectedBodiesReceived("Hello David") @AT@ 1375 @LENGTH@ 44
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Hell David"] @TO@ MethodName:expectedBodiesReceived:["Hello David"] @AT@ 1383 @LENGTH@ 36
---------UPD StringLiteral@@"Hell David" @TO@ "Hello David" @AT@ 1406 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE),new SimpleSingletonElectionPolicy())) @TO@ MethodInvocation:singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER),new SimpleSingletonElectionPolicy())) @AT@ 1295 @LENGTH@ 139
---UPD MethodInvocation@@singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE),new SimpleSingletonElectionPolicy())) @TO@ singleton.setElectionPolicy(new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER),new SimpleSingletonElectionPolicy())) @AT@ 1295 @LENGTH@ 138
------UPD SimpleName@@MethodName:setElectionPolicy:[new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE),new SimpleSingletonElectionPolicy())] @TO@ MethodName:setElectionPolicy:[new PreferredSingletonElectionPolicy(new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER),new SimpleSingletonElectionPolicy())] @AT@ 1305 @LENGTH@ 128
---------UPD ClassInstanceCreation@@PreferredSingletonElectionPolicy[new NamePreference(PREFERRED_NODE), new SimpleSingletonElectionPolicy()] @TO@ PreferredSingletonElectionPolicy[new NamePreference(PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER), new SimpleSingletonElectionPolicy()] @AT@ 1323 @LENGTH@ 109
------------UPD ClassInstanceCreation@@NamePreference[PREFERRED_NODE] @TO@ NamePreference[PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER] @AT@ 1360 @LENGTH@ 34
---------------INS InfixExpression@@PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER @TO@ ClassInstanceCreation@@NamePreference[PREFERRED_NODE] @AT@ 1379 @LENGTH@ 57
------------------INS SimpleName@@PREFERRED_NODE @TO@ InfixExpression@@PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER @AT@ 1379 @LENGTH@ 14
------------------INS Operator@@+ @TO@ InfixExpression@@PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER @AT@ 1393 @LENGTH@ 1
------------------INS StringLiteral@@"/" @TO@ InfixExpression@@PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER @AT@ 1396 @LENGTH@ 3
------------------INS QualifiedName@@SingletonService.DEFAULT_CONTAINER @TO@ InfixExpression@@PREFERRED_NODE + "/" + SingletonService.DEFAULT_CONTAINER @AT@ 1402 @LENGTH@ 34
---------------------INS SimpleName@@SingletonService @TO@ QualifiedName@@SingletonService.DEFAULT_CONTAINER @AT@ 1402 @LENGTH@ 16
---------------------INS SimpleName@@DEFAULT_CONTAINER @TO@ QualifiedName@@SingletonService.DEFAULT_CONTAINER @AT@ 1419 @LENGTH@ 17
---------------DEL SimpleName@@PREFERRED_NODE @AT@ 1379 @LENGTH@ 14


INS TryStatement@@try {  if (useDom) {    source=exchange.getIn().getBody(DOMSource.class);    result=new DOMResult();  } else {    source=exchange.getIn().getBody(SAXSource.class);    result=new SAXResult();  }} catch (Exception e) {  throw new NoXmlBodyValidationException(exchange,e);} @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2532 @LENGTH@ 393
---MOV IfStatement@@if (useDom) {  source=exchange.getIn().getBody(DOMSource.class);  result=new DOMResult();} else {  source=exchange.getIn().getBody(SAXSource.class);  result=new SAXResult();} @TO@ TryStatement@@try {  if (useDom) {    source=exchange.getIn().getBody(DOMSource.class);    result=new DOMResult();  } else {    source=exchange.getIn().getBody(SAXSource.class);    result=new SAXResult();  }} catch (Exception e) {  throw new NoXmlBodyValidationException(exchange,e);} @AT@ 2532 @LENGTH@ 244
---INS CatchClause@@catch (Exception e) {  throw new NoXmlBodyValidationException(exchange,e);} @TO@ TryStatement@@try {  if (useDom) {    source=exchange.getIn().getBody(DOMSource.class);    result=new DOMResult();  } else {    source=exchange.getIn().getBody(SAXSource.class);    result=new SAXResult();  }} catch (Exception e) {  throw new NoXmlBodyValidationException(exchange,e);} @AT@ 2829 @LENGTH@ 96
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new NoXmlBodyValidationException(exchange,e);} @AT@ 2836 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2836 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2846 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new NoXmlBodyValidationException(exchange,e) @TO@ CatchClause@@catch (Exception e) {  throw new NoXmlBodyValidationException(exchange,e);} @AT@ 2863 @LENGTH@ 52
---------INS ClassInstanceCreation@@NoXmlBodyValidationException[exchange, e] @TO@ ThrowStatement@@ClassInstanceCreation:new NoXmlBodyValidationException(exchange,e) @AT@ 2869 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@NoXmlBodyValidationException[exchange, e] @AT@ 2869 @LENGTH@ 3
------------INS SimpleType@@NoXmlBodyValidationException @TO@ ClassInstanceCreation@@NoXmlBodyValidationException[exchange, e] @AT@ 2873 @LENGTH@ 28
------------INS SimpleName@@exchange @TO@ ClassInstanceCreation@@NoXmlBodyValidationException[exchange, e] @AT@ 2902 @LENGTH@ 8
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@NoXmlBodyValidationException[exchange, e] @AT@ 2912 @LENGTH@ 1


INS IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @TO@ MethodDeclaration@@protected, void, MethodName:manageTransaction, Throwable,  @AT@ 2549 @LENGTH@ 367
---INS InfixExpression@@transaction == null @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2552 @LENGTH@ 19
------INS SimpleName@@transaction @TO@ InfixExpression@@transaction == null @AT@ 2552 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@transaction == null @AT@ 2563 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@transaction == null @AT@ 2567 @LENGTH@ 4
---INS Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @TO@ IfStatement@@if (transaction == null) {  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2573 @LENGTH@ 343
------INS IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2587 @LENGTH@ 299
---------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2590 @LENGTH@ 49
------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 2590 @LENGTH@ 32
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled() @AT@ 2623 @LENGTH@ 16
---------INS Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");} @TO@ IfStatement@@if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2641 @LENGTH@ 245
------------INS ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ Block@@ThenBody:{  EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");} @AT@ 2737 @LENGTH@ 135
---------------INS MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server") @TO@ ExpressionStatement@@MethodInvocation:EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 2737 @LENGTH@ 134
------------------INS QualifiedName@@Name:EjbLogger.EJB3_INVOCATION_LOGGER @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 2737 @LENGTH@ 32
------------------INS SimpleName@@MethodName:debug:["Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server"] @TO@ MethodInvocation@@EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server") @AT@ 2770 @LENGTH@ 101
---------------------INS InfixExpression@@"Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server" @TO@ SimpleName@@MethodName:debug:["Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server"] @AT@ 2776 @LENGTH@ 94
------------------------INS StringLiteral@@"Not rolling back transaction " @TO@ InfixExpression@@"Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2776 @LENGTH@ 31
------------------------INS Operator@@+ @TO@ InfixExpression@@"Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2807 @LENGTH@ 1
------------------------INS FieldAccess@@this.xidTransactionID @TO@ InfixExpression@@"Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2810 @LENGTH@ 21
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.xidTransactionID @AT@ 2810 @LENGTH@ 4
---------------------------INS SimpleName@@xidTransactionID @TO@ FieldAccess@@this.xidTransactionID @AT@ 2815 @LENGTH@ 16
------------------------INS StringLiteral@@" as is was not found on the server" @TO@ InfixExpression@@"Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server" @AT@ 2834 @LENGTH@ 36
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  if (EjbLogger.EJB3_INVOCATION_LOGGER.isDebugEnabled()) {    EjbLogger.EJB3_INVOCATION_LOGGER.debug("Not rolling back transaction " + this.xidTransactionID + " as is was not found on the server");  }  return;} @AT@ 2899 @LENGTH@ 7


UPD SwitchStatement@@switch (transition) {case STARTING_to_UP:{    CommonDeployment deploymentMD=((ResourceAdapterDeploymentService)controller.getService()).getRaDeployment();    if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {      StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();      if (poolStats.getNames().size() != 0) {        DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);        for (        String statName : poolStats.getNames()) {          subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));        }        subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);      }    }    break;  }case UP_to_STOP_REQUESTED:{  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {    registration.unregisterSubModel(pe);  }  break;}} @TO@ switch (transition) {case STARTING_to_UP:{    CommonDeployment deploymentMD=((ResourceAdapterDeploymentService)controller.getService()).getRaDeployment();    if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {      StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();      if (poolStats.getNames().size() != 0) {        DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration overrideRegistration=registration;        if (registration.isAllowsOverride()) {          overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){            @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(            Locale locale){              return Collections.emptyMap();            }            @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(            Locale locale){              return Collections.emptyMap();            }          });        }        ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);        for (        String statName : poolStats.getNames()) {          subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));        }        subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);      }    }    break;  }case UP_to_STOP_REQUESTED:{  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnit.getName());  if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {    overrideRegistration.unregisterSubModel(pe);  }  break;}} @AT@ 9172 @LENGTH@ 2137
---UPD IfStatement@@if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @TO@ if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration overrideRegistration=registration;    if (registration.isAllowsOverride()) {      overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){        @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }        @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }      });    }    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9411 @LENGTH@ 1352
------UPD Block@@ThenBody:{  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @TO@ ThenBody:{  StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();  if (poolStats.getNames().size() != 0) {    DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);    PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);    ManagementResourceRegistration overrideRegistration=registration;    if (registration.isAllowsOverride()) {      overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){        @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }        @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(        Locale locale){          return Collections.emptyMap();        }      });    }    ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);    for (    String statName : poolStats.getNames()) {      subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));    }    subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);  }} @AT@ 9522 @LENGTH@ 1241
---------UPD IfStatement@@if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ if (poolStats.getNames().size() != 0) {  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 9684 @LENGTH@ 1049
------------UPD Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @TO@ ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration overrideRegistration=registration;  if (registration.isAllowsOverride()) {    overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){      @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }      @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(      Locale locale){        return Collections.emptyMap();      }    });  }  ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 9722 @LENGTH@ 1011
---------------UPD VariableDeclarationStatement@@ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider); @TO@ ManagementResourceRegistration subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider); @AT@ 10118 @LENGTH@ 117
------------------UPD VariableDeclarationFragment@@subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider) @TO@ subRegistration=overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider) @AT@ 10149 @LENGTH@ 85
---------------------UPD MethodInvocation@@registration.registerSubModel(pe,statsResourceDescriptionProvider) @TO@ overrideRegistration.registerSubModel(pe,statsResourceDescriptionProvider) @AT@ 10167 @LENGTH@ 67
------------------------UPD SimpleName@@Name:registration @TO@ Name:overrideRegistration @AT@ 10167 @LENGTH@ 12
---------------INS VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration; @TO@ Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 10278 @LENGTH@ 67
------------------INS SimpleType@@ManagementResourceRegistration @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration; @AT@ 10278 @LENGTH@ 30
------------------INS VariableDeclarationFragment@@overrideRegistration=registration @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration; @AT@ 10309 @LENGTH@ 35
---------------------INS SimpleName@@overrideRegistration @TO@ VariableDeclarationFragment@@overrideRegistration=registration @AT@ 10309 @LENGTH@ 20
---------------------INS SimpleName@@registration @TO@ VariableDeclarationFragment@@overrideRegistration=registration @AT@ 10332 @LENGTH@ 12
---------------INS IfStatement@@if (registration.isAllowsOverride()) {  overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @TO@ Block@@ThenBody:{  DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);  for (  String statName : poolStats.getNames()) {    subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));  }  subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);} @AT@ 10593 @LENGTH@ 887
------------------INS MethodInvocation@@registration.isAllowsOverride() @TO@ IfStatement@@if (registration.isAllowsOverride()) {  overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @AT@ 10597 @LENGTH@ 31
---------------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.isAllowsOverride() @AT@ 10597 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:isAllowsOverride:[] @TO@ MethodInvocation@@registration.isAllowsOverride() @AT@ 10610 @LENGTH@ 18
------------------INS Block@@ThenBody:{  overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @TO@ IfStatement@@if (registration.isAllowsOverride()) {  overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @AT@ 10630 @LENGTH@ 850
---------------------INS ExpressionStatement@@Assignment:overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @TO@ Block@@ThenBody:{  overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){    @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }    @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(    Locale locale){      return Collections.emptyMap();    }  });} @AT@ 10672 @LENGTH@ 770
------------------------INS Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @TO@ ExpressionStatement@@Assignment:overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10672 @LENGTH@ 769
---------------------------INS SimpleName@@overrideRegistration @TO@ Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10672 @LENGTH@ 20
---------------------------INS Operator@@= @TO@ Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10692 @LENGTH@ 1
---------------------------INS MethodInvocation@@registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @TO@ Assignment@@overrideRegistration=registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10695 @LENGTH@ 746
------------------------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10695 @LENGTH@ 12
------------------------------INS SimpleName@@MethodName:registerOverrideModel:[deploymentUnit.getName(), new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
] @TO@ MethodInvocation@@registration.registerOverrideModel(deploymentUnit.getName(),new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
) @AT@ 10708 @LENGTH@ 733
---------------------------------INS MethodInvocation@@deploymentUnit.getName() @TO@ SimpleName@@MethodName:registerOverrideModel:[deploymentUnit.getName(), new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
] @AT@ 10730 @LENGTH@ 24
------------------------------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getName() @AT@ 10730 @LENGTH@ 14
------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@deploymentUnit.getName() @AT@ 10745 @LENGTH@ 9
---------------------------------INS ClassInstanceCreation@@OverrideDescriptionProvider[] @TO@ SimpleName@@MethodName:registerOverrideModel:[deploymentUnit.getName(), new OverrideDescriptionProvider(){
  @Override public Map<String,ModelNode> getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map<String,ModelNode> getChildTypeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
}
] @AT@ 10756 @LENGTH@ 684
------------------------------------INS New@@new @TO@ ClassInstanceCreation@@OverrideDescriptionProvider[] @AT@ 10756 @LENGTH@ 3
------------------------------------INS SimpleType@@OverrideDescriptionProvider @TO@ ClassInstanceCreation@@OverrideDescriptionProvider[] @AT@ 10760 @LENGTH@ 27
------------------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OverrideDescriptionProvider[] @AT@ 10790 @LENGTH@ 650
---------------------------------------INS MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 10890 @LENGTH@ 204
------------------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10890 @LENGTH@ 6
------------------------------------------INS ParameterizedType@@Map<String,ModelNode> @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10897 @LENGTH@ 22
---------------------------------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 10897 @LENGTH@ 3
---------------------------------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 10901 @LENGTH@ 6
---------------------------------------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 10909 @LENGTH@ 9
------------------------------------------INS SimpleName@@MethodName:getAttributeOverrideDescriptions @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10920 @LENGTH@ 32
------------------------------------------INS SingleVariableDeclaration@@Locale locale @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 10953 @LENGTH@ 13
---------------------------------------------INS SimpleType@@Locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 10953 @LENGTH@ 6
---------------------------------------------INS SimpleName@@locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 10960 @LENGTH@ 6
------------------------------------------INS ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getAttributeOverrideDescriptions, Locale locale,  @AT@ 11018 @LENGTH@ 30
---------------------------------------------INS MethodInvocation@@Collections.emptyMap() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyMap() @AT@ 11025 @LENGTH@ 22
------------------------------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 11025 @LENGTH@ 11
------------------------------------------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 11037 @LENGTH@ 10
---------------------------------------INS MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 11194 @LENGTH@ 204
------------------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11194 @LENGTH@ 6
------------------------------------------INS ParameterizedType@@Map<String,ModelNode> @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11201 @LENGTH@ 22
---------------------------------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 11201 @LENGTH@ 3
---------------------------------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 11205 @LENGTH@ 6
---------------------------------------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@Map<String,ModelNode> @AT@ 11213 @LENGTH@ 9
------------------------------------------INS SimpleName@@MethodName:getChildTypeOverrideDescriptions @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11224 @LENGTH@ 32
------------------------------------------INS SingleVariableDeclaration@@Locale locale @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11257 @LENGTH@ 13
---------------------------------------------INS SimpleType@@Locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 11257 @LENGTH@ 6
---------------------------------------------INS SimpleName@@locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 11264 @LENGTH@ 6
------------------------------------------INS ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ MethodDeclaration@@public, Map<String,ModelNode>, MethodName:getChildTypeOverrideDescriptions, Locale locale,  @AT@ 11322 @LENGTH@ 30
---------------------------------------------INS MethodInvocation@@Collections.emptyMap() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyMap() @AT@ 11329 @LENGTH@ 22
------------------------------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 11329 @LENGTH@ 11
------------------------------------------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 11341 @LENGTH@ 10
---UPD IfStatement@@if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {  registration.unregisterSubModel(pe);} @TO@ if (overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null) {  overrideRegistration.unregisterSubModel(pe);} @AT@ 11057 @LENGTH@ 167
------UPD InfixExpression@@registration.getSubModel(PathAddress.pathAddress(pe)) != null @TO@ overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) != null @AT@ 11061 @LENGTH@ 61
---------UPD MethodInvocation@@registration.getSubModel(PathAddress.pathAddress(pe)) @TO@ overrideRegistration.getSubModel(PathAddress.pathAddress(pe)) @AT@ 11061 @LENGTH@ 53
------------UPD SimpleName@@Name:registration @TO@ Name:overrideRegistration @AT@ 11061 @LENGTH@ 12
------UPD Block@@ThenBody:{  registration.unregisterSubModel(pe);} @TO@ ThenBody:{  overrideRegistration.unregisterSubModel(pe);} @AT@ 11124 @LENGTH@ 100
---------UPD ExpressionStatement@@MethodInvocation:registration.unregisterSubModel(pe) @TO@ MethodInvocation:overrideRegistration.unregisterSubModel(pe) @AT@ 11158 @LENGTH@ 36
------------UPD MethodInvocation@@registration.unregisterSubModel(pe) @TO@ overrideRegistration.unregisterSubModel(pe) @AT@ 11158 @LENGTH@ 35
---------------UPD SimpleName@@Name:registration @TO@ Name:overrideRegistration @AT@ 11158 @LENGTH@ 12
---INS VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnit.getName()); @TO@ SwitchStatement@@switch (transition) {case STARTING_to_UP:{    CommonDeployment deploymentMD=((ResourceAdapterDeploymentService)controller.getService()).getRaDeployment();    if (deploymentMD.getConnectionManagers() != null && deploymentMD.getConnectionManagers()[0].getPool() != null) {      StatisticsPlugin poolStats=deploymentMD.getConnectionManagers()[0].getPool().getStatistics();      if (poolStats.getNames().size() != 0) {        DescriptionProvider statsResourceDescriptionProvider=new StatisticsDescriptionProvider(ResourceAdaptersSubsystemProviders.RESOURCE_NAME,"statistics",poolStats);        PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);        ManagementResourceRegistration subRegistration=registration.registerSubModel(pe,statsResourceDescriptionProvider);        for (        String statName : poolStats.getNames()) {          subRegistration.registerMetric(statName,new PoolMetrics.ParametrizedPoolMetricsHandler(poolStats));        }        subRegistration.registerOperationHandler("clear-statistics",new ClearStatisticsHandler(poolStats),ResourceAdaptersSubsystemProviders.CLEAR_STATISTICS_DESC,false);      }    }    break;  }case UP_to_STOP_REQUESTED:{  PathElement pe=PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,ResourceAdaptersExtension.SUBSYSTEM_NAME);  if (registration.getSubModel(PathAddress.pathAddress(pe)) != null) {    registration.unregisterSubModel(pe);  }  break;}} @AT@ 12465 @LENGTH@ 110
------INS SimpleType@@ManagementResourceRegistration @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnit.getName()); @AT@ 12465 @LENGTH@ 30
------INS VariableDeclarationFragment@@overrideRegistration=registration.getOverrideModel(deploymentUnit.getName()) @TO@ VariableDeclarationStatement@@ManagementResourceRegistration overrideRegistration=registration.getOverrideModel(deploymentUnit.getName()); @AT@ 12496 @LENGTH@ 78
---------INS SimpleName@@overrideRegistration @TO@ VariableDeclarationFragment@@overrideRegistration=registration.getOverrideModel(deploymentUnit.getName()) @AT@ 12496 @LENGTH@ 20
---------INS MethodInvocation@@registration.getOverrideModel(deploymentUnit.getName()) @TO@ VariableDeclarationFragment@@overrideRegistration=registration.getOverrideModel(deploymentUnit.getName()) @AT@ 12519 @LENGTH@ 55
------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.getOverrideModel(deploymentUnit.getName()) @AT@ 12519 @LENGTH@ 12
------------INS SimpleName@@MethodName:getOverrideModel:[deploymentUnit.getName()] @TO@ MethodInvocation@@registration.getOverrideModel(deploymentUnit.getName()) @AT@ 12532 @LENGTH@ 42
---------------INS MethodInvocation@@deploymentUnit.getName() @TO@ SimpleName@@MethodName:getOverrideModel:[deploymentUnit.getName()] @AT@ 12549 @LENGTH@ 24
------------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getName() @AT@ 12549 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@deploymentUnit.getName() @AT@ 12564 @LENGTH@ 9


UPD IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      int waittime=10;      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("waittime")) {          waittime=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));        }      }      modcluster.stop(waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @TO@ if (context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      int waittime=10;      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("waittime")) {          waittime=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));        }      }      modcluster.stop(waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1974 @LENGTH@ 1087
---INS InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ IfStatement@@if (context.isNormalServer()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      ServiceController<?> controller=context.getServiceRegistry(false).getService(ModClusterService.NAME);      ModCluster modcluster=(ModCluster)controller.getValue();      List<Property> list=operation.asPropertyList();      Iterator<Property> it=list.iterator();      int waittime=10;      while (it.hasNext()) {        Property prop=it.next();        if (prop.getName().equals("waittime")) {          waittime=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));        }      }      modcluster.stop(waittime);      context.completeStep();    }  },OperationContext.Stage.RUNTIME);} @AT@ 1978 @LENGTH@ 102
------INS MethodInvocation@@context.isNormalServer() @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 1978 @LENGTH@ 24
---------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1978 @LENGTH@ 7
---------MOV SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 1986 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2002 @LENGTH@ 2
------INS InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @TO@ InfixExpression@@context.isNormalServer() && context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2006 @LENGTH@ 74
---------INS MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2006 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getServiceRegistry:[false] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2006 @LENGTH@ 33
---------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:getServiceRegistry:[false] @AT@ 2033 @LENGTH@ 5
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2006 @LENGTH@ 7
------------INS SimpleName@@MethodName:getService:[ModClusterService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getService(ModClusterService.NAME) @AT@ 2040 @LENGTH@ 34
---------------INS QualifiedName@@ModClusterService.NAME @TO@ SimpleName@@MethodName:getService:[ModClusterService.NAME] @AT@ 2051 @LENGTH@ 22
------------------INS SimpleName@@ModClusterService @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2051 @LENGTH@ 17
------------------INS SimpleName@@NAME @TO@ QualifiedName@@ModClusterService.NAME @AT@ 2069 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2074 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@context.getServiceRegistry(false).getService(ModClusterService.NAME) != null @AT@ 2076 @LENGTH@ 4
---DEL MethodInvocation@@context.isNormalServer() @AT@ 1978 @LENGTH@ 24


INS MethodDeclaration@@Employee, MethodName:getSuperEmployee,  @TO@ TypeDeclaration@@[public]TestPassivationRemote,  @AT@ 1837 @LENGTH@ 19
---INS SimpleType@@Employee @TO@ MethodDeclaration@@Employee, MethodName:getSuperEmployee,  @AT@ 1828 @LENGTH@ 8
---INS SimpleName@@MethodName:getSuperEmployee @TO@ MethodDeclaration@@Employee, MethodName:getSuperEmployee,  @AT@ 1837 @LENGTH@ 16


UPD TypeDeclaration@@[public]HiveServerParser, AbstractPropertiesConfiguredBeanDefinitionParser @TO@ HiveServerParser, AbstractPropertiesConfiguredBeanDefinitionParser @AT@ 1052 @LENGTH@ 715
---DEL Modifier@@public @AT@ 1052 @LENGTH@ 6


UPD FieldDeclaration@@public, static, SimpleAttributeDefinition, [MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,false).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<Mode>(Mode.class,true,false)).build()] @TO@ public, static, SimpleAttributeDefinition, [MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,false).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<Mode>(Mode.class,false,true)).build()] @AT@ 843 @LENGTH@ 432
---UPD VariableDeclarationFragment@@MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,false).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<Mode>(Mode.class,true,false)).build() @TO@ MODE=new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,false).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<Mode>(Mode.class,false,true)).build() @AT@ 883 @LENGTH@ 391
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,false).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<Mode>(Mode.class,true,false)).build() @TO@ new SimpleAttributeDefinitionBuilder(ModelKeys.MODE,ModelType.STRING,false).setXmlName(Attribute.MODE.getLocalName()).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).setValidator(new EnumValidator<Mode>(Mode.class,false,true)).build() @AT@ 902 @LENGTH@ 372
---------UPD MethodInvocation@@MethodName:setValidator:[new EnumValidator<Mode>(Mode.class,true,false)] @TO@ MethodName:setValidator:[new EnumValidator<Mode>(Mode.class,false,true)] @AT@ 902 @LENGTH@ 343
------------UPD ClassInstanceCreation@@EnumValidator<Mode>[Mode.class, true, false] @TO@ EnumValidator<Mode>[Mode.class, false, true] @AT@ 1196 @LENGTH@ 48
---------------UPD BooleanLiteral@@true @TO@ false @AT@ 1232 @LENGTH@ 4
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 1238 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:dataSourceInjector.uninject() @TO@ MethodDeclaration@@public, void, MethodName:uninject,  @AT@ 31559 @LENGTH@ 30
---INS MethodInvocation@@dataSourceInjector.uninject() @TO@ ExpressionStatement@@MethodInvocation:dataSourceInjector.uninject() @AT@ 31559 @LENGTH@ 29
------INS SimpleName@@Name:dataSourceInjector @TO@ MethodInvocation@@dataSourceInjector.uninject() @AT@ 31559 @LENGTH@ 18
------INS SimpleName@@MethodName:uninject:[] @TO@ MethodInvocation@@dataSourceInjector.uninject() @AT@ 31578 @LENGTH@ 10


UPD VariableDeclarationStatement@@Integer maximum=profile.getMinimumInstances(); @TO@ Integer maximum=profile.getMaximumInstances(); @AT@ 1941 @LENGTH@ 48
---UPD VariableDeclarationFragment@@maximum=profile.getMinimumInstances() @TO@ maximum=profile.getMaximumInstances() @AT@ 1949 @LENGTH@ 39
------UPD MethodInvocation@@profile.getMinimumInstances() @TO@ profile.getMaximumInstances() @AT@ 1959 @LENGTH@ 29
---------UPD SimpleName@@MethodName:getMinimumInstances:[] @TO@ MethodName:getMaximumInstances:[] @AT@ 1967 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:builder.append("  --runtime_name=").append(runtimeName) @TO@ MethodInvocation:builder.append("  --runtime-name=").append(runtimeName) @AT@ 8392 @LENGTH@ 56
---UPD MethodInvocation@@builder.append("  --runtime_name=").append(runtimeName) @TO@ builder.append("  --runtime-name=").append(runtimeName) @AT@ 8392 @LENGTH@ 55
------UPD MethodInvocation@@MethodName:append:["  --runtime_name="] @TO@ MethodName:append:["  --runtime-name="] @AT@ 8392 @LENGTH@ 35
---------UPD StringLiteral@@"  --runtime_name=" @TO@ "  --runtime-name=" @AT@ 8407 @LENGTH@ 19


UPD TryStatement@@try {  String toDisplay=toDisplay(record);  if (toDisplay.equals(lastMessage) && suppressDuplicateMessages) {    return;  }  lastMessage=toDisplay;  StringBuffer buffer=reader.getCursorBuffer().getBuffer();  int cursor=reader.getCursorBuffer().cursor;  if (reader.getCursorBuffer().length() > 0) {    reader.printNewline();    reader.getCursorBuffer().setBuffer(new StringBuffer());    reader.getCursorBuffer().cursor=0;  }  reader.setDefaultPrompt("");  reader.redrawLine();  reader.printString(toDisplay);  reader.setDefaultPrompt(shellPromptAccessor.getShellPrompt());  reader.getCursorBuffer().setBuffer(buffer);  reader.getCursorBuffer().cursor=cursor;  Boolean prohibitingRedraw=redrawProhibit.get();  if (prohibitingRedraw == null) {    reader.redrawLine();  }  reader.flushConsole();} catch (Exception e) {  reportError("Could not publish log message",e,Level.SEVERE.intValue());} @TO@ try {  String toDisplay=toDisplay(record);  if (toDisplay.equals(lastMessage) && suppressDuplicateMessages) {    return;  }  lastMessage=toDisplay;  StringBuffer buffer=reader.getCursorBuffer().getBuffer();  int cursor=reader.getCursorBuffer().cursor;  if (reader.getCursorBuffer().length() > 0) {    reader.printNewline();    reader.getCursorBuffer().setBuffer(new StringBuffer());    reader.getCursorBuffer().cursor=0;  }  reader.setDefaultPrompt("");  reader.printString(toDisplay);  reader.setDefaultPrompt(shellPromptAccessor.getShellPrompt());  reader.getCursorBuffer().setBuffer(buffer);  reader.getCursorBuffer().cursor=cursor;  Boolean prohibitingRedraw=redrawProhibit.get();  if (prohibitingRedraw == null) {    reader.redrawLine();  }  reader.flushConsole();} catch (Exception e) {  reportError("Could not publish log message",e,Level.SEVERE.intValue());} @AT@ 3039 @LENGTH@ 1402
---DEL ExpressionStatement@@MethodInvocation:reader.redrawLine() @AT@ 3903 @LENGTH@ 20
------DEL MethodInvocation@@reader.redrawLine() @AT@ 3903 @LENGTH@ 19
---------DEL SimpleName@@Name:reader @AT@ 3903 @LENGTH@ 6
---------DEL SimpleName@@MethodName:redrawLine:[] @AT@ 3910 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:connection.randomKey() @TO@ MethodInvocation:connection.sRandMember(rawKey) @AT@ 4578 @LENGTH@ 30
---UPD MethodInvocation@@connection.randomKey() @TO@ connection.sRandMember(rawKey) @AT@ 4585 @LENGTH@ 22
------UPD SimpleName@@MethodName:randomKey:[] @TO@ MethodName:sRandMember:[rawKey] @AT@ 4596 @LENGTH@ 11
---------INS SimpleName@@rawKey @TO@ SimpleName@@MethodName:randomKey:[] @AT@ 4608 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:ShrinkWrap.create(JavaArchive.class,"test2.jar").addClasses(IIOPNamingHome.class,IIOPRemote.class,IIOPNamingBean.class).addAsManifestResource("ejb/iiop/jboss-ejb3-nameing.xml","jboss-ejb3.xml") @TO@ MethodInvocation:ShrinkWrap.create(JavaArchive.class,"test2.jar").addPackage(IIOPNamingInContainerTestCase.class.getPackage()).addAsManifestResource("ejb/iiop/jboss-ejb3-nameing.xml","jboss-ejb3.xml") @AT@ 1200 @LENGTH@ 239
---UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"test2.jar").addClasses(IIOPNamingHome.class,IIOPRemote.class,IIOPNamingBean.class).addAsManifestResource("ejb/iiop/jboss-ejb3-nameing.xml","jboss-ejb3.xml") @TO@ ShrinkWrap.create(JavaArchive.class,"test2.jar").addPackage(IIOPNamingInContainerTestCase.class.getPackage()).addAsManifestResource("ejb/iiop/jboss-ejb3-nameing.xml","jboss-ejb3.xml") @AT@ 1207 @LENGTH@ 231
------UPD MethodInvocation@@MethodName:addClasses:[IIOPNamingHome.class, IIOPRemote.class, IIOPNamingBean.class] @TO@ MethodName:addPackage:[IIOPNamingInContainerTestCase.class.getPackage()] @AT@ 1207 @LENGTH@ 139
---------UPD TypeLiteral@@IIOPNamingHome.class @TO@ IIOPNamingInContainerTestCase.class @AT@ 1285 @LENGTH@ 20
---------DEL TypeLiteral@@IIOPRemote.class @AT@ 1307 @LENGTH@ 16
---------DEL TypeLiteral@@IIOPNamingBean.class @AT@ 1325 @LENGTH@ 20
---------INS MethodInvocation@@IIOPNamingInContainerTestCase.class.getPackage() @TO@ MethodInvocation@@MethodName:addClasses:[IIOPNamingHome.class, IIOPRemote.class, IIOPNamingBean.class] @AT@ 1352 @LENGTH@ 48
------------MOV TypeLiteral@@IIOPNamingHome.class @TO@ MethodInvocation@@IIOPNamingInContainerTestCase.class.getPackage() @AT@ 1285 @LENGTH@ 20
------------INS SimpleName@@MethodName:getPackage:[] @TO@ MethodInvocation@@IIOPNamingInContainerTestCase.class.getPackage() @AT@ 1388 @LENGTH@ 12


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @Ignore("Causes processes to not cleanly shutdown"), @Ignore("There is an issue with the zookeeper bundle, so the server cannot be started in pax-exam karaf container"), public]ZookeeperOSGiTest, ZookeeperOSGiTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @Ignore("Causes processes to not cleanly shutdown. " + "And There is an issue with the zookeeper bundle, so the server cannot be started in pax-exam karaf container"), public]ZookeeperOSGiTest, ZookeeperOSGiTestSupport @AT@ 1650 @LENGTH@ 5865
---DEL SingleMemberAnnotation@@@Ignore("Causes processes to not cleanly shutdown") @AT@ 1683 @LENGTH@ 51
---UPD SingleMemberAnnotation@@@Ignore("There is an issue with the zookeeper bundle, so the server cannot be started in pax-exam karaf container") @TO@ @Ignore("Causes processes to not cleanly shutdown. " + "And There is an issue with the zookeeper bundle, so the server cannot be started in pax-exam karaf container") @AT@ 1735 @LENGTH@ 115


UPD VariableDeclarationStatement@@final Transaction transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID); @TO@ final Transaction transaction=this.transactionsRepository.getTransaction(this.xidTransactionID); @AT@ 2302 @LENGTH@ 101
---UPD VariableDeclarationFragment@@transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ transaction=this.transactionsRepository.getTransaction(this.xidTransactionID) @AT@ 2320 @LENGTH@ 82
------UPD MethodInvocation@@this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ this.transactionsRepository.getTransaction(this.xidTransactionID) @AT@ 2334 @LENGTH@ 68
---------UPD SimpleName@@MethodName:removeTransaction:[this.xidTransactionID] @TO@ MethodName:getTransaction:[this.xidTransactionID] @AT@ 2362 @LENGTH@ 40


INS MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ TypeDeclaration@@[public]EndpointConfigRemove, AbstractRemoveStepHandler @AT@ 2789 @LENGTH@ 224
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2789 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2799 @LENGTH@ 4
---INS SimpleName@@MethodName:recoverServices @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2804 @LENGTH@ 15
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2820 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2820 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2837 @LENGTH@ 7
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2846 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2846 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2856 @LENGTH@ 9
---INS SingleVariableDeclaration@@ModelNode model @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2867 @LENGTH@ 15
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 2867 @LENGTH@ 9
------INS SimpleName@@model @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 2877 @LENGTH@ 5
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2891 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:EndpointConfigAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ MethodDeclaration@@protected, void, MethodName:recoverServices, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 2926 @LENGTH@ 81
------INS MethodInvocation@@EndpointConfigAdd.INSTANCE.performRuntime(context,operation,model,null,null) @TO@ ExpressionStatement@@MethodInvocation:EndpointConfigAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2926 @LENGTH@ 80
---------INS QualifiedName@@Name:EndpointConfigAdd.INSTANCE @TO@ MethodInvocation@@EndpointConfigAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2926 @LENGTH@ 26
---------INS SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @TO@ MethodInvocation@@EndpointConfigAdd.INSTANCE.performRuntime(context,operation,model,null,null) @AT@ 2953 @LENGTH@ 53
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2968 @LENGTH@ 7
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2977 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2988 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 2995 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:performRuntime:[context, operation, model, null, null] @AT@ 3001 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @TO@ MethodInvocation:ThreadsMessages.MESSAGES.scheduledThreadPoolServiceNotFound(serviceName) @AT@ 2709 @LENGTH@ 98
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("Service " + serviceName + " not found.")] @AT@ 2715 @LENGTH@ 91
------DEL New@@new @AT@ 2715 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 2719 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("Service " + serviceName + " not found.") @AT@ 2744 @LENGTH@ 61
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2744 @LENGTH@ 15
------------DEL New@@new @AT@ 2744 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 2748 @LENGTH@ 9
---INS MethodInvocation@@ThreadsMessages.MESSAGES.scheduledThreadPoolServiceNotFound(serviceName) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("Service " + serviceName + " not found.")) @AT@ 2799 @LENGTH@ 72
------MOV SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.scheduledThreadPoolServiceNotFound(serviceName) @AT@ 2760 @LENGTH@ 45
---------DEL InfixExpression@@"Service " + serviceName + " not found." @AT@ 2764 @LENGTH@ 40
------------DEL StringLiteral@@"Service " @AT@ 2764 @LENGTH@ 10
------------DEL Operator@@+ @AT@ 2774 @LENGTH@ 1
------------DEL SimpleName@@serviceName @AT@ 2777 @LENGTH@ 11
------------DEL StringLiteral@@" not found." @AT@ 2791 @LENGTH@ 13
---------INS SimpleName@@serviceName @TO@ SimpleName@@MethodName:set:["Service " + serviceName + " not found."] @AT@ 2859 @LENGTH@ 11
------INS QualifiedName@@Name:ThreadsMessages.MESSAGES @TO@ MethodInvocation@@ThreadsMessages.MESSAGES.scheduledThreadPoolServiceNotFound(serviceName) @AT@ 2799 @LENGTH@ 24

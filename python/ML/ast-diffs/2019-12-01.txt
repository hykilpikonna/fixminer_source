INS FieldDeclaration@@String, [INSUFFICIENT_SCOPE="insufficient_scope"] @TO@ TypeDeclaration@@[public]OAuth2ErrorCodes,  @AT@ 2254 @LENGTH@ 49
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [INSUFFICIENT_SCOPE="insufficient_scope"] @AT@ 2254 @LENGTH@ 6
---INS VariableDeclarationFragment@@INSUFFICIENT_SCOPE="insufficient_scope" @TO@ FieldDeclaration@@String, [INSUFFICIENT_SCOPE="insufficient_scope"] @AT@ 2261 @LENGTH@ 41
------INS SimpleName@@INSUFFICIENT_SCOPE @TO@ VariableDeclarationFragment@@INSUFFICIENT_SCOPE="insufficient_scope" @AT@ 2261 @LENGTH@ 18
------INS StringLiteral@@"insufficient_scope" @TO@ VariableDeclarationFragment@@INSUFFICIENT_SCOPE="insufficient_scope" @AT@ 2282 @LENGTH@ 20


DEL MethodDeclaration@@public, void, MethodName:testToString,  @AT@ 2432 @LENGTH@ 265
---DEL Modifier@@public @AT@ 2432 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2439 @LENGTH@ 4
---DEL SimpleName@@MethodName:testToString @AT@ 2444 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:assertEquals("jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.pgm?connectionPool=%23mockPool&fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true&outputFieldsIdx=1%2C2",endpoint.toString()) @AT@ 2469 @LENGTH@ 222
------DEL MethodInvocation@@assertEquals("jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.pgm?connectionPool=%23mockPool&fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true&outputFieldsIdx=1%2C2",endpoint.toString()) @AT@ 2469 @LENGTH@ 221
---------DEL SimpleName@@MethodName:assertEquals:["jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.pgm?connectionPool=%23mockPool&fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true&outputFieldsIdx=1%2C2", endpoint.toString()] @AT@ 2469 @LENGTH@ 221
------------DEL StringLiteral@@"jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.pgm?connectionPool=%23mockPool&fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true&outputFieldsIdx=1%2C2" @AT@ 2482 @LENGTH@ 165
------------DEL MethodInvocation@@endpoint.toString() @AT@ 2670 @LENGTH@ 19
---------------DEL SimpleName@@Name:endpoint @AT@ 2670 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 2679 @LENGTH@ 10


UPD MethodDeclaration@@default, CryptoCmsEndpointBuilder, MethodName:recipient, String recipient,  @TO@ default, CryptoCmsEndpointBuilder, MethodName:recipient, Map values,  @AT@ 11879 @LENGTH@ 148
---UPD SingleVariableDeclaration@@String recipient @TO@ Map values @AT@ 11922 @LENGTH@ 16
------UPD SimpleType@@String @TO@ Map @AT@ 11922 @LENGTH@ 6
------UPD SimpleName@@recipient @TO@ values @AT@ 11929 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:doSetProperty("recipient",recipient) @TO@ MethodInvocation:doSetMultiValueProperties("recipient","null",values) @AT@ 11954 @LENGTH@ 38
------UPD MethodInvocation@@doSetProperty("recipient",recipient) @TO@ doSetMultiValueProperties("recipient","null",values) @AT@ 11954 @LENGTH@ 37
---------UPD SimpleName@@MethodName:doSetProperty:["recipient", recipient] @TO@ MethodName:doSetMultiValueProperties:["recipient", "null", values] @AT@ 11954 @LENGTH@ 37
------------INS StringLiteral@@"null" @TO@ SimpleName@@MethodName:doSetProperty:["recipient", recipient] @AT@ 11444 @LENGTH@ 6
------------UPD SimpleName@@recipient @TO@ values @AT@ 11981 @LENGTH@ 9


INS MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @TO@ TypeDeclaration@@RenderingVisitor, ReflectiveVisitor @AT@ 7309 @LENGTH@ 342
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7304 @LENGTH@ 4
---INS SimpleName@@MethodName:enter @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7309 @LENGTH@ 5
---INS SingleVariableDeclaration@@RelationshipLength length @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7315 @LENGTH@ 25
------INS SimpleType@@RelationshipLength @TO@ SingleVariableDeclaration@@RelationshipLength length @AT@ 7315 @LENGTH@ 18
------INS SimpleName@@length @TO@ SingleVariableDeclaration@@RelationshipLength length @AT@ 7334 @LENGTH@ 6
---INS VariableDeclarationStatement@@Integer minimum=length.getMinimum(); @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7347 @LENGTH@ 38
------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer minimum=length.getMinimum(); @AT@ 7347 @LENGTH@ 7
------INS VariableDeclarationFragment@@minimum=length.getMinimum() @TO@ VariableDeclarationStatement@@Integer minimum=length.getMinimum(); @AT@ 7355 @LENGTH@ 29
---------INS SimpleName@@minimum @TO@ VariableDeclarationFragment@@minimum=length.getMinimum() @AT@ 7355 @LENGTH@ 7
---------INS MethodInvocation@@length.getMinimum() @TO@ VariableDeclarationFragment@@minimum=length.getMinimum() @AT@ 7365 @LENGTH@ 19
------------INS SimpleName@@Name:length @TO@ MethodInvocation@@length.getMinimum() @AT@ 7365 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMinimum:[] @TO@ MethodInvocation@@length.getMinimum() @AT@ 7372 @LENGTH@ 12
---INS VariableDeclarationStatement@@Integer maximum=length.getMaximum(); @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7388 @LENGTH@ 38
------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer maximum=length.getMaximum(); @AT@ 7388 @LENGTH@ 7
------INS VariableDeclarationFragment@@maximum=length.getMaximum() @TO@ VariableDeclarationStatement@@Integer maximum=length.getMaximum(); @AT@ 7396 @LENGTH@ 29
---------INS SimpleName@@maximum @TO@ VariableDeclarationFragment@@maximum=length.getMaximum() @AT@ 7396 @LENGTH@ 7
---------INS MethodInvocation@@length.getMaximum() @TO@ VariableDeclarationFragment@@maximum=length.getMaximum() @AT@ 7406 @LENGTH@ 19
------------INS SimpleName@@Name:length @TO@ MethodInvocation@@length.getMaximum() @AT@ 7406 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMaximum:[] @TO@ MethodInvocation@@length.getMaximum() @AT@ 7413 @LENGTH@ 12
---INS IfStatement@@if (minimum == null && maximum == null) {  return;} @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7430 @LENGTH@ 56
------INS InfixExpression@@minimum == null && maximum == null @TO@ IfStatement@@if (minimum == null && maximum == null) {  return;} @AT@ 7434 @LENGTH@ 34
---------INS InfixExpression@@minimum == null @TO@ InfixExpression@@minimum == null && maximum == null @AT@ 7434 @LENGTH@ 15
------------INS SimpleName@@minimum @TO@ InfixExpression@@minimum == null @AT@ 7434 @LENGTH@ 7
------------INS Operator@@== @TO@ InfixExpression@@minimum == null @AT@ 7441 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@minimum == null @AT@ 7445 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@minimum == null && maximum == null @AT@ 7449 @LENGTH@ 2
---------INS InfixExpression@@maximum == null @TO@ InfixExpression@@minimum == null && maximum == null @AT@ 7453 @LENGTH@ 15
------------INS SimpleName@@maximum @TO@ InfixExpression@@maximum == null @AT@ 7453 @LENGTH@ 7
------------INS Operator@@== @TO@ InfixExpression@@maximum == null @AT@ 7460 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@maximum == null @AT@ 7464 @LENGTH@ 4
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (minimum == null && maximum == null) {  return;} @AT@ 7470 @LENGTH@ 16
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 7475 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:builder.append("*") @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7490 @LENGTH@ 20
------INS MethodInvocation@@builder.append("*") @TO@ ExpressionStatement@@MethodInvocation:builder.append("*") @AT@ 7490 @LENGTH@ 19
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append("*") @AT@ 7490 @LENGTH@ 7
---------INS SimpleName@@MethodName:append:["*"] @TO@ MethodInvocation@@builder.append("*") @AT@ 7498 @LENGTH@ 11
------------INS StringLiteral@@"*" @TO@ SimpleName@@MethodName:append:["*"] @AT@ 7505 @LENGTH@ 3
---INS IfStatement@@if (minimum != null) {  builder.append(minimum);} @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7513 @LENGTH@ 54
------INS InfixExpression@@minimum != null @TO@ IfStatement@@if (minimum != null) {  builder.append(minimum);} @AT@ 7517 @LENGTH@ 15
---------INS SimpleName@@minimum @TO@ InfixExpression@@minimum != null @AT@ 7517 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@minimum != null @AT@ 7524 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@minimum != null @AT@ 7528 @LENGTH@ 4
------INS Block@@ThenBody:{  builder.append(minimum);} @TO@ IfStatement@@if (minimum != null) {  builder.append(minimum);} @AT@ 7534 @LENGTH@ 33
---------INS ExpressionStatement@@MethodInvocation:builder.append(minimum) @TO@ Block@@ThenBody:{  builder.append(minimum);} @AT@ 7539 @LENGTH@ 24
------------INS MethodInvocation@@builder.append(minimum) @TO@ ExpressionStatement@@MethodInvocation:builder.append(minimum) @AT@ 7539 @LENGTH@ 23
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append(minimum) @AT@ 7539 @LENGTH@ 7
---------------INS SimpleName@@MethodName:append:[minimum] @TO@ MethodInvocation@@builder.append(minimum) @AT@ 7547 @LENGTH@ 15
------------------INS SimpleName@@minimum @TO@ SimpleName@@MethodName:append:[minimum] @AT@ 7554 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:builder.append("..") @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7570 @LENGTH@ 21
------INS MethodInvocation@@builder.append("..") @TO@ ExpressionStatement@@MethodInvocation:builder.append("..") @AT@ 7570 @LENGTH@ 20
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append("..") @AT@ 7570 @LENGTH@ 7
---------INS SimpleName@@MethodName:append:[".."] @TO@ MethodInvocation@@builder.append("..") @AT@ 7578 @LENGTH@ 12
------------INS StringLiteral@@".." @TO@ SimpleName@@MethodName:append:[".."] @AT@ 7585 @LENGTH@ 4
---INS IfStatement@@if (maximum != null) {  builder.append(maximum);} @TO@ MethodDeclaration@@void, MethodName:enter, RelationshipLength length,  @AT@ 7594 @LENGTH@ 54
------INS InfixExpression@@maximum != null @TO@ IfStatement@@if (maximum != null) {  builder.append(maximum);} @AT@ 7598 @LENGTH@ 15
---------INS SimpleName@@maximum @TO@ InfixExpression@@maximum != null @AT@ 7598 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@maximum != null @AT@ 7605 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@maximum != null @AT@ 7609 @LENGTH@ 4
------INS Block@@ThenBody:{  builder.append(maximum);} @TO@ IfStatement@@if (maximum != null) {  builder.append(maximum);} @AT@ 7615 @LENGTH@ 33
---------INS ExpressionStatement@@MethodInvocation:builder.append(maximum) @TO@ Block@@ThenBody:{  builder.append(maximum);} @AT@ 7620 @LENGTH@ 24
------------INS MethodInvocation@@builder.append(maximum) @TO@ ExpressionStatement@@MethodInvocation:builder.append(maximum) @AT@ 7620 @LENGTH@ 23
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append(maximum) @AT@ 7620 @LENGTH@ 7
---------------INS SimpleName@@MethodName:append:[maximum] @TO@ MethodInvocation@@builder.append(maximum) @AT@ 7628 @LENGTH@ 15
------------------INS SimpleName@@maximum @TO@ SimpleName@@MethodName:append:[maximum] @AT@ 7635 @LENGTH@ 7


UPD Block@@ThenBody:{  this.userId=(long)Files.getAttribute(file,"unix:uid");  this.groupId=(long)Files.getAttribute(file,"unix:gid");} @TO@ ThenBody:{  this.userId=((Number)Files.getAttribute(file,"unix:uid")).longValue();  this.groupId=((Number)Files.getAttribute(file,"unix:gid")).longValue();} @AT@ 16923 @LENGTH@ 178
---UPD ExpressionStatement@@Assignment:this.userId=(long)Files.getAttribute(file,"unix:uid") @TO@ Assignment:this.userId=((Number)Files.getAttribute(file,"unix:uid")).longValue() @AT@ 16945 @LENGTH@ 58
------UPD Assignment@@this.userId=(long)Files.getAttribute(file,"unix:uid") @TO@ this.userId=((Number)Files.getAttribute(file,"unix:uid")).longValue() @AT@ 16945 @LENGTH@ 57
---------INS MethodInvocation@@((Number)Files.getAttribute(file,"unix:uid")).longValue() @TO@ Assignment@@this.userId=(long)Files.getAttribute(file,"unix:uid") @AT@ 16959 @LENGTH@ 59
------------INS ParenthesizedExpression@@((Number)Files.getAttribute(file,"unix:uid")) @TO@ MethodInvocation@@((Number)Files.getAttribute(file,"unix:uid")).longValue() @AT@ 16959 @LENGTH@ 47
---------------MOV CastExpression@@(long)Files.getAttribute(file,"unix:uid") @TO@ ParenthesizedExpression@@((Number)Files.getAttribute(file,"unix:uid")) @AT@ 16959 @LENGTH@ 43
------------------INS SimpleType@@Number @TO@ CastExpression@@(long)Files.getAttribute(file,"unix:uid") @AT@ 16961 @LENGTH@ 6
------------INS SimpleName@@MethodName:longValue:[] @TO@ MethodInvocation@@((Number)Files.getAttribute(file,"unix:uid")).longValue() @AT@ 17007 @LENGTH@ 11
---------UPD CastExpression@@(long)Files.getAttribute(file,"unix:uid") @TO@ (Number)Files.getAttribute(file,"unix:uid") @AT@ 16959 @LENGTH@ 43
---UPD ExpressionStatement@@Assignment:this.groupId=(long)Files.getAttribute(file,"unix:gid") @TO@ Assignment:this.groupId=((Number)Files.getAttribute(file,"unix:gid")).longValue() @AT@ 17024 @LENGTH@ 59
------UPD Assignment@@this.groupId=(long)Files.getAttribute(file,"unix:gid") @TO@ this.groupId=((Number)Files.getAttribute(file,"unix:gid")).longValue() @AT@ 17024 @LENGTH@ 58
---------UPD CastExpression@@(long)Files.getAttribute(file,"unix:gid") @TO@ (Number)Files.getAttribute(file,"unix:gid") @AT@ 17039 @LENGTH@ 43
---------INS MethodInvocation@@((Number)Files.getAttribute(file,"unix:gid")).longValue() @TO@ Assignment@@this.groupId=(long)Files.getAttribute(file,"unix:gid") @AT@ 17055 @LENGTH@ 59
------------INS ParenthesizedExpression@@((Number)Files.getAttribute(file,"unix:gid")) @TO@ MethodInvocation@@((Number)Files.getAttribute(file,"unix:gid")).longValue() @AT@ 17055 @LENGTH@ 47
---------------MOV CastExpression@@(long)Files.getAttribute(file,"unix:gid") @TO@ ParenthesizedExpression@@((Number)Files.getAttribute(file,"unix:gid")) @AT@ 17039 @LENGTH@ 43
------------------DEL PrimitiveType@@long @AT@ 17040 @LENGTH@ 4
------------------INS SimpleType@@Number @TO@ CastExpression@@(long)Files.getAttribute(file,"unix:gid") @AT@ 17057 @LENGTH@ 6
------------INS SimpleName@@MethodName:longValue:[] @TO@ MethodInvocation@@((Number)Files.getAttribute(file,"unix:gid")).longValue() @AT@ 17103 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/opaque-token/iss").with(opaqueToken().attribute("iss","https://idp.example.org"))).andExpect(content().string("https://idp.example.org")) @TO@ MethodInvocation:this.mvc.perform(get("/opaque-token/iss").with(opaqueToken().attributes(a -> a.put("iss","https://idp.example.org")))).andExpect(content().string("https://idp.example.org")) @AT@ 4015 @LENGTH@ 172
---UPD MethodInvocation@@this.mvc.perform(get("/opaque-token/iss").with(opaqueToken().attribute("iss","https://idp.example.org"))).andExpect(content().string("https://idp.example.org")) @TO@ this.mvc.perform(get("/opaque-token/iss").with(opaqueToken().attributes(a -> a.put("iss","https://idp.example.org")))).andExpect(content().string("https://idp.example.org")) @AT@ 4015 @LENGTH@ 171
------UPD MethodInvocation@@MethodName:perform:[get("/opaque-token/iss").with(opaqueToken().attribute("iss","https://idp.example.org"))] @TO@ MethodName:perform:[get("/opaque-token/iss").with(opaqueToken().attributes(a -> a.put("iss","https://idp.example.org")))] @AT@ 4015 @LENGTH@ 111
---------UPD MethodInvocation@@get("/opaque-token/iss").with(opaqueToken().attribute("iss","https://idp.example.org")) @TO@ get("/opaque-token/iss").with(opaqueToken().attributes(a -> a.put("iss","https://idp.example.org"))) @AT@ 4032 @LENGTH@ 93
------------UPD SimpleName@@MethodName:with:[opaqueToken().attribute("iss","https://idp.example.org")] @TO@ MethodName:with:[opaqueToken().attributes(a -> a.put("iss","https://idp.example.org"))] @AT@ 4062 @LENGTH@ 63
---------------UPD MethodInvocation@@opaqueToken().attribute("iss","https://idp.example.org") @TO@ opaqueToken().attributes(a -> a.put("iss","https://idp.example.org")) @AT@ 4067 @LENGTH@ 57
------------------UPD SimpleName@@MethodName:attribute:["iss", "https://idp.example.org"] @TO@ MethodName:put:["iss", "https://idp.example.org"] @AT@ 4081 @LENGTH@ 43
------------------INS SimpleName@@MethodName:attributes:[a -> a.put("iss","https://idp.example.org")] @TO@ MethodInvocation@@opaqueToken().attribute("iss","https://idp.example.org") @AT@ 4178 @LENGTH@ 56
---------------------INS LambdaExpression@@a -> a.put("iss","https://idp.example.org") @TO@ SimpleName@@MethodName:attributes:[a -> a.put("iss","https://idp.example.org")] @AT@ 4189 @LENGTH@ 44
------------------------INS VariableDeclarationFragment@@a @TO@ LambdaExpression@@a -> a.put("iss","https://idp.example.org") @AT@ 4189 @LENGTH@ 1
---------------------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 4189 @LENGTH@ 1
------------------------INS MethodInvocation@@a.put("iss","https://idp.example.org") @TO@ LambdaExpression@@a -> a.put("iss","https://idp.example.org") @AT@ 4194 @LENGTH@ 39
---------------------------MOV SimpleName@@MethodName:attribute:["iss", "https://idp.example.org"] @TO@ MethodInvocation@@a.put("iss","https://idp.example.org") @AT@ 4081 @LENGTH@ 43
---------------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.put("iss","https://idp.example.org") @AT@ 4194 @LENGTH@ 1


INS MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @TO@ TypeDeclaration@@[public]ErrorHandlerBuilderRef, ErrorHandlerBuilderSupport @AT@ 1705 @LENGTH@ 141
---INS Modifier@@public @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1705 @LENGTH@ 6
---INS SimpleType@@ErrorHandlerFactory @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1712 @LENGTH@ 19
---INS SimpleName@@MethodName:getOrLookupErrorHandlerFactory @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1732 @LENGTH@ 30
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1763 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 1763 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 1776 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:lookupErrorHandler(routeContext) @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1800 @LENGTH@ 40
------INS MethodInvocation@@lookupErrorHandler(routeContext) @TO@ ReturnStatement@@MethodInvocation:lookupErrorHandler(routeContext) @AT@ 1807 @LENGTH@ 32
---------INS SimpleName@@MethodName:lookupErrorHandler:[routeContext] @TO@ MethodInvocation@@lookupErrorHandler(routeContext) @AT@ 1807 @LENGTH@ 32
------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:lookupErrorHandler:[routeContext] @AT@ 1826 @LENGTH@ 12


UPD ThrowStatement@@ClassInstanceCreation:new OAuth2IntrospectionException("Provided token [" + token + "] isn't active") @TO@ ClassInstanceCreation:new BadOpaqueTokenException("Provided token isn't active") @AT@ 6741 @LENGTH@ 86
---UPD ClassInstanceCreation@@OAuth2IntrospectionException["Provided token [" + token + "] isn't active"] @TO@ BadOpaqueTokenException["Provided token isn't active"] @AT@ 6747 @LENGTH@ 79
------INS StringLiteral@@"Provided token isn't active" @TO@ ClassInstanceCreation@@OAuth2IntrospectionException["Provided token [" + token + "] isn't active"] @AT@ 6747 @LENGTH@ 29
------UPD SimpleType@@OAuth2IntrospectionException @TO@ BadOpaqueTokenException @AT@ 6751 @LENGTH@ 28
------DEL InfixExpression@@"Provided token [" + token + "] isn't active" @AT@ 6780 @LENGTH@ 45
---------DEL StringLiteral@@"Provided token [" @AT@ 6780 @LENGTH@ 18
---------DEL Operator@@+ @AT@ 6798 @LENGTH@ 1
---------DEL SimpleName@@token @AT@ 6801 @LENGTH@ 5
---------DEL StringLiteral@@"] isn't active" @AT@ 6809 @LENGTH@ 16


INS MethodDeclaration@@void, MethodName:multipleRelationshipTypes,  @TO@ TypeDeclaration@@[@Nested]ReadingAndReturn,  @AT@ 2884 @LENGTH@ 311
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:multipleRelationshipTypes,  @AT@ 2879 @LENGTH@ 4
---INS SimpleName@@MethodName:multipleRelationshipTypes @TO@ MethodDeclaration@@void, MethodName:multipleRelationshipTypes,  @AT@ 2884 @LENGTH@ 25
---INS VariableDeclarationStatement@@Statement statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build(); @TO@ MethodDeclaration@@void, MethodName:multipleRelationshipTypes,  @AT@ 2918 @LENGTH@ 143
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@Statement statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build(); @AT@ 2918 @LENGTH@ 9
------INS VariableDeclarationFragment@@statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @TO@ VariableDeclarationStatement@@Statement statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build(); @AT@ 2928 @LENGTH@ 132
---------INS SimpleName@@statement @TO@ VariableDeclarationFragment@@statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @AT@ 2928 @LENGTH@ 9
---------INS MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @TO@ VariableDeclarationFragment@@statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @AT@ 2940 @LENGTH@ 120
------------INS MethodInvocation@@MethodName:returning:[bikeNode, userNode] @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @AT@ 2940 @LENGTH@ 106
---------------INS SimpleName@@bikeNode @TO@ MethodInvocation@@MethodName:returning:[bikeNode, userNode] @AT@ 3027 @LENGTH@ 8
---------------INS SimpleName@@userNode @TO@ MethodInvocation@@MethodName:returning:[bikeNode, userNode] @AT@ 3037 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:match:[userNode.relationshipTo(bikeNode,"OWNS","RIDES")] @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @AT@ 2940 @LENGTH@ 70
---------------INS MethodInvocation@@userNode.relationshipTo(bikeNode,"OWNS","RIDES") @TO@ MethodInvocation@@MethodName:match:[userNode.relationshipTo(bikeNode,"OWNS","RIDES")] @AT@ 2959 @LENGTH@ 50
------------------INS SimpleName@@Name:userNode @TO@ MethodInvocation@@userNode.relationshipTo(bikeNode,"OWNS","RIDES") @AT@ 2959 @LENGTH@ 8
------------------INS SimpleName@@MethodName:relationshipTo:[bikeNode, "OWNS", "RIDES"] @TO@ MethodInvocation@@userNode.relationshipTo(bikeNode,"OWNS","RIDES") @AT@ 2968 @LENGTH@ 41
---------------------INS SimpleName@@bikeNode @TO@ SimpleName@@MethodName:relationshipTo:[bikeNode, "OWNS", "RIDES"] @AT@ 2983 @LENGTH@ 8
---------------------INS StringLiteral@@"OWNS" @TO@ SimpleName@@MethodName:relationshipTo:[bikeNode, "OWNS", "RIDES"] @AT@ 2993 @LENGTH@ 6
---------------------INS StringLiteral@@"RIDES" @TO@ SimpleName@@MethodName:relationshipTo:[bikeNode, "OWNS", "RIDES"] @AT@ 3001 @LENGTH@ 7
------------INS SimpleName@@Name:Cypher @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @AT@ 2940 @LENGTH@ 6
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS","RIDES")).returning(bikeNode,userNode).build() @AT@ 3053 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u") @TO@ MethodDeclaration@@void, MethodName:multipleRelationshipTypes,  @AT@ 3067 @LENGTH@ 123
------INS MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u") @AT@ 3067 @LENGTH@ 122
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u") @AT@ 3067 @LENGTH@ 44
------------INS MethodInvocation@@cypherRenderer.render(statement) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @AT@ 3078 @LENGTH@ 32
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 3078 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[statement] @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 3093 @LENGTH@ 17
------------------INS SimpleName@@statement @TO@ SimpleName@@MethodName:render:[statement] @AT@ 3100 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u") @AT@ 3118 @LENGTH@ 71
------------INS StringLiteral@@"MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (u:`User`)-[:`OWNS`|`RIDES`]->(b:`Bike`) RETURN b, u"] @AT@ 3128 @LENGTH@ 60


INS IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("DynamicSendTo {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 10313 @LENGTH@ 453
---INS InfixExpression@@producerCache == null @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("DynamicSendTo {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 10317 @LENGTH@ 21
------INS SimpleName@@producerCache @TO@ InfixExpression@@producerCache == null @AT@ 10317 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@producerCache == null @AT@ 10330 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@producerCache == null @AT@ 10334 @LENGTH@ 4
---INS Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("DynamicSendTo {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("DynamicSendTo {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 10340 @LENGTH@ 426
------MOV IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("DynamicSendTo {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 10257 @LENGTH@ 239
---------DEL InfixExpression@@producerCache == null @AT@ 10261 @LENGTH@ 21
------------DEL SimpleName@@producerCache @AT@ 10261 @LENGTH@ 13
------------DEL Operator@@== @AT@ 10274 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 10278 @LENGTH@ 4
---------UPD Block@@ThenBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ ElseBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 10284 @LENGTH@ 212
------------UPD ExpressionStatement@@MethodInvocation:LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ MethodInvocation:LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 10383 @LENGTH@ 103
---------------UPD MethodInvocation@@LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 10383 @LENGTH@ 102
------------------UPD SimpleName@@MethodName:debug:["DynamicSendTo {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @TO@ MethodName:debug:["DynamicSendTo {} using ProducerCache with cacheSize={}", this, cacheSize] @AT@ 10387 @LENGTH@ 98
---------------------DEL MethodInvocation@@producerCache.getCapacity() @AT@ 10457 @LENGTH@ 27
------------------------DEL SimpleName@@Name:producerCache @AT@ 10457 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:getCapacity:[] @AT@ 10471 @LENGTH@ 13
---------------------INS SimpleName@@cacheSize @TO@ SimpleName@@MethodName:debug:["DynamicSendTo {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @AT@ 10731 @LENGTH@ 9
---------INS InfixExpression@@cacheSize < 0 @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 10358 @LENGTH@ 13
------------INS SimpleName@@cacheSize @TO@ InfixExpression@@cacheSize < 0 @AT@ 10358 @LENGTH@ 9
------------INS Operator@@< @TO@ InfixExpression@@cacheSize < 0 @AT@ 10367 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@cacheSize < 0 @AT@ 10370 @LENGTH@ 1
---------INS Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("DynamicSendTo {} is not using ProducerCache",this);} @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 10373 @LENGTH@ 171
------------INS ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("DynamicSendTo {} is not using ProducerCache",this);} @AT@ 10391 @LENGTH@ 59
---------------INS Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @TO@ ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @AT@ 10391 @LENGTH@ 58
------------------INS SimpleName@@producerCache @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 10391 @LENGTH@ 13
------------------INS Operator@@= @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 10404 @LENGTH@ 1
------------------INS ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 10407 @LENGTH@ 42
---------------------INS New@@new @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 10407 @LENGTH@ 3
---------------------INS SimpleType@@EmptyProducerCache @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 10411 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 10430 @LENGTH@ 4
---------------------INS SimpleName@@camelContext @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 10436 @LENGTH@ 12
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("DynamicSendTo {} is not using ProducerCache",this) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("DynamicSendTo {} is not using ProducerCache",this);} @AT@ 10467 @LENGTH@ 63
---------------INS MethodInvocation@@LOG.debug("DynamicSendTo {} is not using ProducerCache",this) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("DynamicSendTo {} is not using ProducerCache",this) @AT@ 10467 @LENGTH@ 62
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("DynamicSendTo {} is not using ProducerCache",this) @AT@ 10467 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["DynamicSendTo {} is not using ProducerCache", this] @TO@ MethodInvocation@@LOG.debug("DynamicSendTo {} is not using ProducerCache",this) @AT@ 10471 @LENGTH@ 58
---------------------INS StringLiteral@@"DynamicSendTo {} is not using ProducerCache" @TO@ SimpleName@@MethodName:debug:["DynamicSendTo {} is not using ProducerCache", this] @AT@ 10477 @LENGTH@ 45
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:debug:["DynamicSendTo {} is not using ProducerCache", this] @AT@ 10524 @LENGTH@ 4


UPD MethodDeclaration@@default, UpdateWithUpdate<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, UpdateWithUpdate<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 6025 @LENGTH@ 134
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 6062 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 6081 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 6106 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 6113 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 6113 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 6122 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 6128 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 6134 @LENGTH@ 18


UPD ExpressionStatement@@Assignment:info=new BeanInfo(camelContext,bean.getClass(),strategy) @TO@ Assignment:info=new BeanInfo(camelContext,bean.getClass(),DefaultParameterMappingStrategy.INSTANCE) @AT@ 2636 @LENGTH@ 61
---UPD Assignment@@info=new BeanInfo(camelContext,bean.getClass(),strategy) @TO@ info=new BeanInfo(camelContext,bean.getClass(),DefaultParameterMappingStrategy.INSTANCE) @AT@ 2636 @LENGTH@ 60
------UPD ClassInstanceCreation@@BeanInfo[camelContext, bean.getClass(), strategy] @TO@ BeanInfo[camelContext, bean.getClass(), DefaultParameterMappingStrategy.INSTANCE] @AT@ 2643 @LENGTH@ 53
---------INS QualifiedName@@DefaultParameterMappingStrategy.INSTANCE @TO@ ClassInstanceCreation@@BeanInfo[camelContext, bean.getClass(), strategy] @AT@ 2591 @LENGTH@ 40
------------INS SimpleName@@DefaultParameterMappingStrategy @TO@ QualifiedName@@DefaultParameterMappingStrategy.INSTANCE @AT@ 2591 @LENGTH@ 31
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@DefaultParameterMappingStrategy.INSTANCE @AT@ 2623 @LENGTH@ 8
---------DEL SimpleName@@strategy @AT@ 2687 @LENGTH@ 8


DEL MethodDeclaration@@public, String, MethodName:blueprintSchemaAsXml,  @AT@ 21364 @LENGTH@ 124
---DEL Modifier@@public @AT@ 21364 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 21371 @LENGTH@ 6
---DEL SimpleName@@MethodName:blueprintSchemaAsXml @AT@ 21378 @LENGTH@ 20
---DEL ReturnStatement@@MethodInvocation:cache(SCHEMAS_XML + "/camel-blueprint.xsd",this::loadResource) @AT@ 21411 @LENGTH@ 71
------DEL MethodInvocation@@cache(SCHEMAS_XML + "/camel-blueprint.xsd",this::loadResource) @AT@ 21418 @LENGTH@ 63
---------DEL SimpleName@@MethodName:cache:[SCHEMAS_XML + "/camel-blueprint.xsd", this::loadResource] @AT@ 21418 @LENGTH@ 63
------------DEL InfixExpression@@SCHEMAS_XML + "/camel-blueprint.xsd" @AT@ 21424 @LENGTH@ 36
---------------DEL SimpleName@@SCHEMAS_XML @AT@ 21424 @LENGTH@ 11
---------------DEL Operator@@+ @AT@ 21435 @LENGTH@ 1
---------------DEL StringLiteral@@"/camel-blueprint.xsd" @AT@ 21438 @LENGTH@ 22


UPD VariableDeclarationStatement@@final Long jobId=BeanstalkExchangeHelper.getJobID(exchange); @TO@ final long jobId=BeanstalkExchangeHelper.getJobID(exchange); @AT@ 1655 @LENGTH@ 62
---DEL SimpleType@@Long @AT@ 1661 @LENGTH@ 4
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@final Long jobId=BeanstalkExchangeHelper.getJobID(exchange); @AT@ 1661 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:when(this.introspector.getMatchableHandlerMapping(this.request)).thenReturn(this.mapping) @AT@ 2185 @LENGTH@ 95
---DEL MethodInvocation@@when(this.introspector.getMatchableHandlerMapping(this.request)).thenReturn(this.mapping) @AT@ 2185 @LENGTH@ 94
------DEL MethodInvocation@@MethodName:when:[this.introspector.getMatchableHandlerMapping(this.request)] @AT@ 2185 @LENGTH@ 64
---------DEL MethodInvocation@@this.introspector.getMatchableHandlerMapping(this.request) @AT@ 2190 @LENGTH@ 58
------------DEL FieldAccess@@this.introspector @AT@ 2190 @LENGTH@ 17
---------------DEL ThisExpression@@this @AT@ 2190 @LENGTH@ 4
---------------DEL SimpleName@@introspector @AT@ 2195 @LENGTH@ 12
------------DEL SimpleName@@MethodName:getMatchableHandlerMapping:[this.request] @AT@ 2208 @LENGTH@ 40
---------------DEL FieldAccess@@this.request @AT@ 2235 @LENGTH@ 12
------------------DEL ThisExpression@@this @AT@ 2235 @LENGTH@ 4
------------------DEL SimpleName@@request @AT@ 2240 @LENGTH@ 7
------DEL SimpleName@@MethodName:thenReturn:[this.mapping] @AT@ 2255 @LENGTH@ 24
---------DEL FieldAccess@@this.mapping @AT@ 2266 @LENGTH@ 12
------------DEL ThisExpression@@this @AT@ 2266 @LENGTH@ 4
------------DEL SimpleName@@mapping @AT@ 2271 @LENGTH@ 7


UPD TypeDeclaration@@[public]OAuth2AuthorizedClientManager,  @TO@ [@FunctionalInterface, public]OAuth2AuthorizedClientManager,  @AT@ 1608 @LENGTH@ 1247
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]OAuth2AuthorizedClientManager,  @AT@ 1608 @LENGTH@ 20


INS VariableDeclarationStatement@@String msg=parseString(definition.getMessage()); @TO@ MethodDeclaration@@public, Processor, MethodName:createProcessor, Exception,  @AT@ 1871 @LENGTH@ 50
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String msg=parseString(definition.getMessage()); @AT@ 1871 @LENGTH@ 6
---INS VariableDeclarationFragment@@msg=parseString(definition.getMessage()) @TO@ VariableDeclarationStatement@@String msg=parseString(definition.getMessage()); @AT@ 1878 @LENGTH@ 42
------INS SimpleName@@msg @TO@ VariableDeclarationFragment@@msg=parseString(definition.getMessage()) @AT@ 1878 @LENGTH@ 3
------INS MethodInvocation@@parseString(definition.getMessage()) @TO@ VariableDeclarationFragment@@msg=parseString(definition.getMessage()) @AT@ 1884 @LENGTH@ 36
---------INS SimpleName@@MethodName:parseString:[definition.getMessage()] @TO@ MethodInvocation@@parseString(definition.getMessage()) @AT@ 1884 @LENGTH@ 36
------------INS MethodInvocation@@definition.getMessage() @TO@ SimpleName@@MethodName:parseString:[definition.getMessage()] @AT@ 1896 @LENGTH@ 23
---------------INS SimpleName@@Name:definition @TO@ MethodInvocation@@definition.getMessage() @AT@ 1896 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@definition.getMessage() @AT@ 1907 @LENGTH@ 12


UPD IfStatement@@if (StringUtils.isEmpty(str1) && StringUtils.isEmpty(str2)) {  return true;} else if (!StringUtils.isEmpty(str1)) {  return str1.equals(str2);} else {  return false;} @TO@ if (StringUtils.isEmpty(str1)) {  return StringUtils.isEmpty(str2);} else {  return str1.equals(str2);} @AT@ 7082 @LENGTH@ 181
---DEL InfixExpression@@StringUtils.isEmpty(str1) && StringUtils.isEmpty(str2) @AT@ 7086 @LENGTH@ 54
------DEL Operator@@&& @AT@ 7111 @LENGTH@ 2
---MOV MethodInvocation@@StringUtils.isEmpty(str1) @TO@ IfStatement@@if (StringUtils.isEmpty(str1) && StringUtils.isEmpty(str2)) {  return true;} else if (!StringUtils.isEmpty(str1)) {  return str1.equals(str2);} else {  return false;} @AT@ 7086 @LENGTH@ 25
---UPD Block@@ThenBody:{  return true;} @TO@ ThenBody:{  return StringUtils.isEmpty(str2);} @AT@ 7142 @LENGTH@ 21
------UPD ReturnStatement@@BooleanLiteral:true @TO@ MethodInvocation:StringUtils.isEmpty(str2) @AT@ 7147 @LENGTH@ 12
---------MOV MethodInvocation@@StringUtils.isEmpty(str2) @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 7115 @LENGTH@ 25
---------DEL BooleanLiteral@@true @AT@ 7154 @LENGTH@ 4
---DEL Block@@ElseBody:if (!StringUtils.isEmpty(str1)) {  return str1.equals(str2);} else {  return false;} @AT@ 7169 @LENGTH@ 94
------DEL IfStatement@@if (!StringUtils.isEmpty(str1)) {  return str1.equals(str2);} else {  return false;} @AT@ 7169 @LENGTH@ 94
---------DEL PrefixExpression@@!StringUtils.isEmpty(str1) @AT@ 7173 @LENGTH@ 26
------------DEL Operator@@! @AT@ 7173 @LENGTH@ 1
------------DEL MethodInvocation@@StringUtils.isEmpty(str1) @AT@ 7174 @LENGTH@ 25
---------------DEL SimpleName@@Name:StringUtils @AT@ 7174 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:isEmpty:[str1] @AT@ 7186 @LENGTH@ 13
------------------DEL SimpleName@@str1 @AT@ 7194 @LENGTH@ 4
---------DEL Block@@ElseBody:{  return false;} @AT@ 7241 @LENGTH@ 22
------------DEL ReturnStatement@@BooleanLiteral:false @AT@ 7246 @LENGTH@ 13
---------------DEL BooleanLiteral@@false @AT@ 7253 @LENGTH@ 5
---MOV Block@@ThenBody:{  return str1.equals(str2);} @TO@ IfStatement@@if (StringUtils.isEmpty(str1) && StringUtils.isEmpty(str2)) {  return true;} else if (!StringUtils.isEmpty(str1)) {  return str1.equals(str2);} else {  return false;} @AT@ 7201 @LENGTH@ 34


UPD VariableDeclarationStatement@@long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong(); @TO@ long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong(); @AT@ 4981 @LENGTH@ 332
---UPD VariableDeclarationFragment@@numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @TO@ numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @AT@ 4986 @LENGTH@ 326
------UPD MethodInvocation@@transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @TO@ transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @AT@ 5006 @LENGTH@ 306
---------UPD MethodInvocation@@MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations", Values.parameters("id",recorded.iterator().next().getId())] @TO@ MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations", Values.parameters("id",recorded.iterator().next().getId())] @AT@ 5006 @LENGTH@ 258
------------UPD InfixExpression@@"" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations" @TO@ "" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations" @AT@ 5022 @LENGTH@ 176
---------------UPD StringLiteral@@"RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))" @TO@ "RETURN size((t)-->(:Person))" @AT@ 5088 @LENGTH@ 80


UPD SuperConstructorInvocation@@super(new Parameters(PATH,LoggingExtension.getResourceDescriptionResolver(NAME)).setAddHandler(ADD).setRemoveHandler(REMOVE));
 @TO@ super(new Parameters(PATH,LoggingExtension.getResourceDescriptionResolver(NAME)).setAddHandler(ADD).setRemoveHandler(REMOVE).addCapabilities(Capabilities.FILTER_CAPABILITY));
 @AT@ 11491 @LENGTH@ 161
---UPD MethodInvocation@@new Parameters(PATH,LoggingExtension.getResourceDescriptionResolver(NAME)).setAddHandler(ADD).setRemoveHandler(REMOVE) @TO@ new Parameters(PATH,LoggingExtension.getResourceDescriptionResolver(NAME)).setAddHandler(ADD).setRemoveHandler(REMOVE).addCapabilities(Capabilities.FILTER_CAPABILITY) @AT@ 11497 @LENGTH@ 153
------INS MethodInvocation@@MethodName:setRemoveHandler:[REMOVE] @TO@ MethodInvocation@@new Parameters(PATH,LoggingExtension.getResourceDescriptionResolver(NAME)).setAddHandler(ADD).setRemoveHandler(REMOVE) @AT@ 10697 @LENGTH@ 153
---------INS SimpleName@@REMOVE @TO@ MethodInvocation@@MethodName:setRemoveHandler:[REMOVE] @AT@ 10843 @LENGTH@ 6
------UPD SimpleName@@MethodName:setRemoveHandler:[REMOVE] @TO@ MethodName:addCapabilities:[Capabilities.FILTER_CAPABILITY] @AT@ 11626 @LENGTH@ 24
---------INS QualifiedName@@Capabilities.FILTER_CAPABILITY @TO@ SimpleName@@MethodName:setRemoveHandler:[REMOVE] @AT@ 10884 @LENGTH@ 30
------------INS SimpleName@@Capabilities @TO@ QualifiedName@@Capabilities.FILTER_CAPABILITY @AT@ 10884 @LENGTH@ 12
------------INS SimpleName@@FILTER_CAPABILITY @TO@ QualifiedName@@Capabilities.FILTER_CAPABILITY @AT@ 10897 @LENGTH@ 17
---------DEL SimpleName@@REMOVE @AT@ 11643 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:headerExpression(simpleExpression(headerName),constantExpression(type)) @TO@ MethodInvocation:headerExpression(simpleExpression(headerName),constantExpression(type.getName())) @AT@ 4411 @LENGTH@ 80
---UPD MethodInvocation@@headerExpression(simpleExpression(headerName),constantExpression(type)) @TO@ headerExpression(simpleExpression(headerName),constantExpression(type.getName())) @AT@ 4418 @LENGTH@ 72
------UPD SimpleName@@MethodName:headerExpression:[simpleExpression(headerName), constantExpression(type)] @TO@ MethodName:headerExpression:[simpleExpression(headerName), constantExpression(type.getName())] @AT@ 4418 @LENGTH@ 72
---------UPD MethodInvocation@@constantExpression(type) @TO@ constantExpression(type.getName()) @AT@ 4465 @LENGTH@ 24
------------UPD SimpleName@@MethodName:constantExpression:[type] @TO@ MethodName:constantExpression:[type.getName()] @AT@ 4465 @LENGTH@ 24
---------------INS MethodInvocation@@type.getName() @TO@ SimpleName@@MethodName:constantExpression:[type] @AT@ 4484 @LENGTH@ 14
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getName() @AT@ 4484 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@type.getName() @AT@ 4489 @LENGTH@ 9
---------------DEL SimpleName@@type @AT@ 4484 @LENGTH@ 4
------------UPD SimpleName@@MethodName:constantExpression:[type] @TO@ MethodName:constantExpression:[type.getName()] @AT@ 4465 @LENGTH@ 24
---------------INS MethodInvocation@@type.getName() @TO@ SimpleName@@MethodName:constantExpression:[type] @AT@ 4484 @LENGTH@ 14
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getName() @AT@ 4484 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@type.getName() @AT@ 4489 @LENGTH@ 9
---------------DEL SimpleName@@type @AT@ 4484 @LENGTH@ 4


UPD IfStatement@@if (sb2.length() < 84) {  sb.append(sb2);} else {  sb.append(indent);  if (method.isPublic) {    sb.append("public ");  } else   if (method.isProtected) {    sb.append("protected ");  } else   if (method.isPrivate) {    sb.append("private ");  }  if (method.isDefault) {    sb.append("default ");  }  if (!method.isConstructor) {    sb.append(method.returnType != null ? shortName(method.returnType) : "void");    sb.append(" ");  }  sb.append(method.name);  if (method.parameters.size() > 0) {    sb.append("(\n");    sb.append(method.parameters.stream().map(p -> indent + "        " + shortName(p.type)+ " "+ p.name).collect(Collectors.joining(",\n")));    sb.append(")");  } else {    sb.append("()");  }  if (!method.exceptions.isEmpty()) {    sb.append("\n            throws");    sb.append(method.exceptions.stream().map(this::shortName).collect(Collectors.joining(", "," ","")));  }  if (!method.isAbstract) {    sb.append(" {");  }} @TO@ if (sb2.length() < 84) {  sb.append(sb2);} else {  sb.append(indent);  if (method.isPublic) {    sb.append("public ");  } else   if (method.isProtected) {    sb.append("protected ");  } else   if (method.isPrivate) {    sb.append("private ");  }  if (method.isStatic) {    sb.append("static ");  }  if (method.isDefault) {    sb.append("default ");  }  if (!method.isConstructor) {    sb.append(method.returnType != null ? shortName(method.returnType) : "void");    sb.append(" ");  }  sb.append(method.name);  if (method.parameters.size() > 0) {    sb.append("(\n");    sb.append(method.parameters.stream().map(p -> indent + "        " + shortName(p.type)+ " "+ p.name).collect(Collectors.joining(",\n")));    sb.append(")");  } else {    sb.append("()");  }  if (!method.exceptions.isEmpty()) {    sb.append("\n            throws");    sb.append(method.exceptions.stream().map(this::shortName).collect(Collectors.joining(", "," ","")));  }  if (!method.isAbstract) {    sb.append(" {");  }} @AT@ 15208 @LENGTH@ 1486
---UPD Block@@ElseBody:{  sb.append(indent);  if (method.isPublic) {    sb.append("public ");  } else   if (method.isProtected) {    sb.append("protected ");  } else   if (method.isPrivate) {    sb.append("private ");  }  if (method.isDefault) {    sb.append("default ");  }  if (!method.isConstructor) {    sb.append(method.returnType != null ? shortName(method.returnType) : "void");    sb.append(" ");  }  sb.append(method.name);  if (method.parameters.size() > 0) {    sb.append("(\n");    sb.append(method.parameters.stream().map(p -> indent + "        " + shortName(p.type)+ " "+ p.name).collect(Collectors.joining(",\n")));    sb.append(")");  } else {    sb.append("()");  }  if (!method.exceptions.isEmpty()) {    sb.append("\n            throws");    sb.append(method.exceptions.stream().map(this::shortName).collect(Collectors.joining(", "," ","")));  }  if (!method.isAbstract) {    sb.append(" {");  }} @TO@ ElseBody:{  sb.append(indent);  if (method.isPublic) {    sb.append("public ");  } else   if (method.isProtected) {    sb.append("protected ");  } else   if (method.isPrivate) {    sb.append("private ");  }  if (method.isStatic) {    sb.append("static ");  }  if (method.isDefault) {    sb.append("default ");  }  if (!method.isConstructor) {    sb.append(method.returnType != null ? shortName(method.returnType) : "void");    sb.append(" ");  }  sb.append(method.name);  if (method.parameters.size() > 0) {    sb.append("(\n");    sb.append(method.parameters.stream().map(p -> indent + "        " + shortName(p.type)+ " "+ p.name).collect(Collectors.joining(",\n")));    sb.append(")");  } else {    sb.append("()");  }  if (!method.exceptions.isEmpty()) {    sb.append("\n            throws");    sb.append(method.exceptions.stream().map(this::shortName).collect(Collectors.joining(", "," ","")));  }  if (!method.isAbstract) {    sb.append(" {");  }} @AT@ 15284 @LENGTH@ 1410
------INS IfStatement@@if (method.isStatic) {  sb.append("static ");} @TO@ Block@@ElseBody:{  sb.append(indent);  if (method.isPublic) {    sb.append("public ");  } else   if (method.isProtected) {    sb.append("protected ");  } else   if (method.isPrivate) {    sb.append("private ");  }  if (method.isDefault) {    sb.append("default ");  }  if (!method.isConstructor) {    sb.append(method.returnType != null ? shortName(method.returnType) : "void");    sb.append(" ");  }  sb.append(method.name);  if (method.parameters.size() > 0) {    sb.append("(\n");    sb.append(method.parameters.stream().map(p -> indent + "        " + shortName(p.type)+ " "+ p.name).collect(Collectors.joining(",\n")));    sb.append(")");  } else {    sb.append("()");  }  if (!method.exceptions.isEmpty()) {    sb.append("\n            throws");    sb.append(method.exceptions.stream().map(this::shortName).collect(Collectors.joining(", "," ","")));  }  if (!method.isAbstract) {    sb.append(" {");  }} @AT@ 15620 @LENGTH@ 82
---------INS QualifiedName@@method.isStatic @TO@ IfStatement@@if (method.isStatic) {  sb.append("static ");} @AT@ 15624 @LENGTH@ 15
------------INS SimpleName@@method @TO@ QualifiedName@@method.isStatic @AT@ 15624 @LENGTH@ 6
------------INS SimpleName@@isStatic @TO@ QualifiedName@@method.isStatic @AT@ 15631 @LENGTH@ 8
---------INS Block@@ThenBody:{  sb.append("static ");} @TO@ IfStatement@@if (method.isStatic) {  sb.append("static ");} @AT@ 15641 @LENGTH@ 61
------------INS ExpressionStatement@@MethodInvocation:sb.append("static ") @TO@ Block@@ThenBody:{  sb.append("static ");} @AT@ 15663 @LENGTH@ 21
---------------INS MethodInvocation@@sb.append("static ") @TO@ ExpressionStatement@@MethodInvocation:sb.append("static ") @AT@ 15663 @LENGTH@ 20
------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append("static ") @AT@ 15663 @LENGTH@ 2
------------------INS SimpleName@@MethodName:append:["static "] @TO@ MethodInvocation@@sb.append("static ") @AT@ 15666 @LENGTH@ 17
---------------------INS StringLiteral@@"static " @TO@ SimpleName@@MethodName:append:["static "] @AT@ 15673 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> introspectionClient.introspect("token").block()).isInstanceOf(OAuth2IntrospectionException.class).extracting("message").isEqualTo("Provided token [token] isn't active") @TO@ MethodInvocation:assertThatCode(() -> introspectionClient.introspect("token").block()).isInstanceOf(BadOpaqueTokenException.class).extracting("message").isEqualTo("Provided token isn't active") @AT@ 6256 @LENGTH@ 205
---UPD MethodInvocation@@assertThatCode(() -> introspectionClient.introspect("token").block()).isInstanceOf(OAuth2IntrospectionException.class).extracting("message").isEqualTo("Provided token [token] isn't active") @TO@ assertThatCode(() -> introspectionClient.introspect("token").block()).isInstanceOf(BadOpaqueTokenException.class).extracting("message").isEqualTo("Provided token isn't active") @AT@ 6256 @LENGTH@ 204
------UPD MethodInvocation@@MethodName:isInstanceOf:[OAuth2IntrospectionException.class] @TO@ MethodName:isInstanceOf:[BadOpaqueTokenException.class] @AT@ 6256 @LENGTH@ 123
---------UPD TypeLiteral@@OAuth2IntrospectionException.class @TO@ BadOpaqueTokenException.class @AT@ 6344 @LENGTH@ 34
------UPD SimpleName@@MethodName:isEqualTo:["Provided token [token] isn't active"] @TO@ MethodName:isEqualTo:["Provided token isn't active"] @AT@ 6412 @LENGTH@ 48
---------UPD StringLiteral@@"Provided token [token] isn't active" @TO@ "Provided token isn't active" @AT@ 6422 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:camelContext.addService(producer,true,true) @TO@ MethodInvocation:camelContext.addService(producer,true,false) @AT@ 3573 @LENGTH@ 46
---UPD MethodInvocation@@camelContext.addService(producer,true,true) @TO@ camelContext.addService(producer,true,false) @AT@ 3573 @LENGTH@ 45
------UPD SimpleName@@MethodName:addService:[producer, true, true] @TO@ MethodName:addService:[producer, true, false] @AT@ 3586 @LENGTH@ 32
---------UPD BooleanLiteral@@true @TO@ false @AT@ 3613 @LENGTH@ 4


UPD IfStatement@@if (currentProvider == null) {  Security.addProvider(new XMLDSigRI());} @TO@ if (currentProvider != null) {  Security.removeProvider(currentProvider.getName());} @AT@ 2942 @LENGTH@ 107
---UPD InfixExpression@@currentProvider == null @TO@ currentProvider != null @AT@ 2946 @LENGTH@ 23
------UPD Operator@@== @TO@ != @AT@ 2961 @LENGTH@ 2
---UPD Block@@ThenBody:{  Security.addProvider(new XMLDSigRI());} @TO@ ThenBody:{  Security.removeProvider(currentProvider.getName());} @AT@ 2971 @LENGTH@ 78
------INS ExpressionStatement@@MethodInvocation:Security.removeProvider(currentProvider.getName()) @TO@ Block@@ThenBody:{  Security.addProvider(new XMLDSigRI());} @AT@ 2993 @LENGTH@ 51
---------INS MethodInvocation@@Security.removeProvider(currentProvider.getName()) @TO@ ExpressionStatement@@MethodInvocation:Security.removeProvider(currentProvider.getName()) @AT@ 2993 @LENGTH@ 50
------------INS SimpleName@@Name:Security @TO@ MethodInvocation@@Security.removeProvider(currentProvider.getName()) @AT@ 2993 @LENGTH@ 8
------------INS SimpleName@@MethodName:removeProvider:[currentProvider.getName()] @TO@ MethodInvocation@@Security.removeProvider(currentProvider.getName()) @AT@ 3002 @LENGTH@ 41
---------------INS MethodInvocation@@currentProvider.getName() @TO@ SimpleName@@MethodName:removeProvider:[currentProvider.getName()] @AT@ 3017 @LENGTH@ 25
------------------INS SimpleName@@Name:currentProvider @TO@ MethodInvocation@@currentProvider.getName() @AT@ 3017 @LENGTH@ 15
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@currentProvider.getName() @AT@ 3033 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:itemReader.open(new ExecutionContext()) @TO@ MethodDeclaration@@public, void, MethodName:testReadItem, Exception,  @AT@ 3260 @LENGTH@ 40
---INS MethodInvocation@@itemReader.open(new ExecutionContext()) @TO@ ExpressionStatement@@MethodInvocation:itemReader.open(new ExecutionContext()) @AT@ 3260 @LENGTH@ 39
------INS SimpleName@@Name:itemReader @TO@ MethodInvocation@@itemReader.open(new ExecutionContext()) @AT@ 3260 @LENGTH@ 10
------INS SimpleName@@MethodName:open:[new ExecutionContext()] @TO@ MethodInvocation@@itemReader.open(new ExecutionContext()) @AT@ 3271 @LENGTH@ 28
---------INS ClassInstanceCreation@@ExecutionContext[] @TO@ SimpleName@@MethodName:open:[new ExecutionContext()] @AT@ 3276 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@ExecutionContext[] @AT@ 3276 @LENGTH@ 3
------------INS SimpleType@@ExecutionContext @TO@ ClassInstanceCreation@@ExecutionContext[] @AT@ 3280 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> introspectionClient.introspect("token")).isInstanceOf(OAuth2IntrospectionException.class).extracting("message").isEqualTo("Provided token [token] isn't active") @TO@ MethodInvocation:assertThatCode(() -> introspectionClient.introspect("token")).isInstanceOf(OAuth2IntrospectionException.class).extracting("message").isEqualTo("Provided token isn't active") @AT@ 7501 @LENGTH@ 197
---UPD MethodInvocation@@assertThatCode(() -> introspectionClient.introspect("token")).isInstanceOf(OAuth2IntrospectionException.class).extracting("message").isEqualTo("Provided token [token] isn't active") @TO@ assertThatCode(() -> introspectionClient.introspect("token")).isInstanceOf(OAuth2IntrospectionException.class).extracting("message").isEqualTo("Provided token isn't active") @AT@ 7501 @LENGTH@ 196
------UPD SimpleName@@MethodName:isEqualTo:["Provided token [token] isn't active"] @TO@ MethodName:isEqualTo:["Provided token isn't active"] @AT@ 7649 @LENGTH@ 48
---------UPD StringLiteral@@"Provided token [token] isn't active" @TO@ "Provided token isn't active" @AT@ 7659 @LENGTH@ 37


UPD ExpressionStatement@@Assignment:processor=builder.createErrorHandler(routeContext,processor) @TO@ Assignment:processor=createErrorHandler(routeContext,builder,exchange,processor) @AT@ 31186 @LENGTH@ 64
---UPD Assignment@@processor=builder.createErrorHandler(routeContext,processor) @TO@ processor=createErrorHandler(routeContext,builder,exchange,processor) @AT@ 31186 @LENGTH@ 63
------INS MethodInvocation@@createErrorHandler(routeContext,builder,exchange,processor) @TO@ Assignment@@processor=builder.createErrorHandler(routeContext,processor) @AT@ 31198 @LENGTH@ 62
---------INS SimpleName@@MethodName:createErrorHandler:[routeContext, builder, exchange, processor] @TO@ MethodInvocation@@createErrorHandler(routeContext,builder,exchange,processor) @AT@ 31198 @LENGTH@ 62
------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:createErrorHandler:[routeContext, builder, exchange, processor] @AT@ 31217 @LENGTH@ 12
------------INS SimpleName@@builder @TO@ SimpleName@@MethodName:createErrorHandler:[routeContext, builder, exchange, processor] @AT@ 31231 @LENGTH@ 7
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:createErrorHandler:[routeContext, builder, exchange, processor] @AT@ 31240 @LENGTH@ 8
------------INS SimpleName@@processor @TO@ SimpleName@@MethodName:createErrorHandler:[routeContext, builder, exchange, processor] @AT@ 31250 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:testToString,  @AT@ 1823 @LENGTH@ 206
---DEL Modifier@@public @AT@ 1823 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1830 @LENGTH@ 4
---DEL SimpleName@@MethodName:testToString @AT@ 1835 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:assertEquals("jt400://user:xxxxxx@host/qsys.lib/library.lib/queue.dtaq?ccsid=500&connectionPool=%23mockPool&format=binary&guiAvailable=true",endpoint.toString()) @AT@ 1860 @LENGTH@ 163
------DEL MethodInvocation@@assertEquals("jt400://user:xxxxxx@host/qsys.lib/library.lib/queue.dtaq?ccsid=500&connectionPool=%23mockPool&format=binary&guiAvailable=true",endpoint.toString()) @AT@ 1860 @LENGTH@ 162
---------DEL SimpleName@@MethodName:assertEquals:["jt400://user:xxxxxx@host/qsys.lib/library.lib/queue.dtaq?ccsid=500&connectionPool=%23mockPool&format=binary&guiAvailable=true", endpoint.toString()] @AT@ 1860 @LENGTH@ 162
------------DEL StringLiteral@@"jt400://user:xxxxxx@host/qsys.lib/library.lib/queue.dtaq?ccsid=500&connectionPool=%23mockPool&format=binary&guiAvailable=true" @AT@ 1873 @LENGTH@ 127
------------DEL MethodInvocation@@endpoint.toString() @AT@ 2002 @LENGTH@ 19
---------------DEL SimpleName@@Name:endpoint @AT@ 2002 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 2011 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertIsInstanceOf(PropertyBindingException.class,e.getCause()) @TO@ MethodInvocation:assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @AT@ 5012 @LENGTH@ 65
---UPD MethodInvocation@@assertIsInstanceOf(PropertyBindingException.class,e.getCause()) @TO@ assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @AT@ 5012 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertIsInstanceOf:[PropertyBindingException.class, e.getCause()] @TO@ MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @AT@ 5012 @LENGTH@ 64
---------UPD TypeLiteral@@PropertyBindingException.class @TO@ IllegalArgumentException.class @AT@ 5031 @LENGTH@ 30


UPD ExpressionStatement@@Assignment:this.authorizedClientManager=createDefaultAuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @TO@ Assignment:this.authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 4902 @LENGTH@ 126
---UPD Assignment@@this.authorizedClientManager=createDefaultAuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @TO@ this.authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 4902 @LENGTH@ 125
------INS ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @TO@ Assignment@@this.authorizedClientManager=createDefaultAuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 4933 @LENGTH@ 103
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 4933 @LENGTH@ 3
---------INS SimpleType@@DefaultOAuth2AuthorizedClientManager @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 4937 @LENGTH@ 36
---------INS SimpleName@@clientRegistrationRepository @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 4979 @LENGTH@ 28
---------INS SimpleName@@authorizedClientRepository @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 5009 @LENGTH@ 26
------DEL MethodInvocation@@createDefaultAuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 4933 @LENGTH@ 94
---------DEL SimpleName@@MethodName:createDefaultAuthorizedClientManager:[clientRegistrationRepository, authorizedClientRepository] @AT@ 4933 @LENGTH@ 94
------------DEL SimpleName@@clientRegistrationRepository @AT@ 4970 @LENGTH@ 28
------------DEL SimpleName@@authorizedClientRepository @AT@ 5000 @LENGTH@ 26


UPD FieldDeclaration@@private, boolean, [clearModelReferences=false] @TO@ private, boolean, [clearModelReferences] @AT@ 10663 @LENGTH@ 45
---UPD VariableDeclarationFragment@@clearModelReferences=false @TO@ clearModelReferences @AT@ 10679 @LENGTH@ 28
------DEL BooleanLiteral@@false @AT@ 10702 @LENGTH@ 5


INS IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RecipientList {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7477 @LENGTH@ 453
---INS InfixExpression@@producerCache == null @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RecipientList {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 7481 @LENGTH@ 21
------INS SimpleName@@producerCache @TO@ InfixExpression@@producerCache == null @AT@ 7481 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@producerCache == null @AT@ 7494 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@producerCache == null @AT@ 7498 @LENGTH@ 4
---INS Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RecipientList {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RecipientList {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 7504 @LENGTH@ 426
------MOV IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RecipientList {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 7421 @LENGTH@ 239
---------DEL InfixExpression@@producerCache == null @AT@ 7425 @LENGTH@ 21
------------DEL SimpleName@@producerCache @AT@ 7425 @LENGTH@ 13
------------DEL Operator@@== @AT@ 7438 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 7442 @LENGTH@ 4
---------UPD Block@@ThenBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ ElseBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 7448 @LENGTH@ 212
------------UPD ExpressionStatement@@MethodInvocation:LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ MethodInvocation:LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 7547 @LENGTH@ 103
---------------UPD MethodInvocation@@LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 7547 @LENGTH@ 102
------------------UPD SimpleName@@MethodName:debug:["RecipientList {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @TO@ MethodName:debug:["RecipientList {} using ProducerCache with cacheSize={}", this, cacheSize] @AT@ 7551 @LENGTH@ 98
---------------------DEL MethodInvocation@@producerCache.getCapacity() @AT@ 7621 @LENGTH@ 27
------------------------DEL SimpleName@@Name:producerCache @AT@ 7621 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:getCapacity:[] @AT@ 7635 @LENGTH@ 13
---------------------INS SimpleName@@cacheSize @TO@ SimpleName@@MethodName:debug:["RecipientList {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @AT@ 7895 @LENGTH@ 9
---------INS InfixExpression@@cacheSize < 0 @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 7522 @LENGTH@ 13
------------INS SimpleName@@cacheSize @TO@ InfixExpression@@cacheSize < 0 @AT@ 7522 @LENGTH@ 9
------------INS Operator@@< @TO@ InfixExpression@@cacheSize < 0 @AT@ 7531 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@cacheSize < 0 @AT@ 7534 @LENGTH@ 1
---------INS Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RecipientList {} is not using ProducerCache",this);} @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 7537 @LENGTH@ 171
------------INS ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RecipientList {} is not using ProducerCache",this);} @AT@ 7555 @LENGTH@ 59
---------------INS Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @TO@ ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @AT@ 7555 @LENGTH@ 58
------------------INS SimpleName@@producerCache @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 7555 @LENGTH@ 13
------------------INS Operator@@= @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 7568 @LENGTH@ 1
------------------INS ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 7571 @LENGTH@ 42
---------------------INS New@@new @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 7571 @LENGTH@ 3
---------------------INS SimpleType@@EmptyProducerCache @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 7575 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 7594 @LENGTH@ 4
---------------------INS SimpleName@@camelContext @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 7600 @LENGTH@ 12
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("RecipientList {} is not using ProducerCache",this) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RecipientList {} is not using ProducerCache",this);} @AT@ 7631 @LENGTH@ 63
---------------INS MethodInvocation@@LOG.debug("RecipientList {} is not using ProducerCache",this) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("RecipientList {} is not using ProducerCache",this) @AT@ 7631 @LENGTH@ 62
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("RecipientList {} is not using ProducerCache",this) @AT@ 7631 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["RecipientList {} is not using ProducerCache", this] @TO@ MethodInvocation@@LOG.debug("RecipientList {} is not using ProducerCache",this) @AT@ 7635 @LENGTH@ 58
---------------------INS StringLiteral@@"RecipientList {} is not using ProducerCache" @TO@ SimpleName@@MethodName:debug:["RecipientList {} is not using ProducerCache", this] @AT@ 7641 @LENGTH@ 45
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:debug:["RecipientList {} is not using ProducerCache", this] @AT@ 7688 @LENGTH@ 4


UPD TypeDeclaration@@[public]FileUtil,  @TO@ [public, final]FileUtil,  @AT@ 223 @LENGTH@ 2838
---INS Modifier@@final @TO@ TypeDeclaration@@[public]FileUtil,  @AT@ 1033 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ MethodDeclaration@@public, void, MethodName:testCacheConsumersFromContext, Exception,  @AT@ 12066 @LENGTH@ 87
---INS MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 12066 @LENGTH@ 86
------INS MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 12066 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 12081 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 12084 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 12084 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 12093 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 12066 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 12102 @LENGTH@ 50
---------INS LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @TO@ SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @AT@ 12108 @LENGTH@ 43
------------INS InfixExpression@@template.getCurrentCacheSize() == 500 @TO@ LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @AT@ 12114 @LENGTH@ 37
---------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 12114 @LENGTH@ 30
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 12114 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 12123 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 12144 @LENGTH@ 2
---------------INS NumberLiteral@@500 @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 12148 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:DefaultStatementBuilder.this.addWith(buildWith()).returning(expressions) @TO@ MethodInvocation:DefaultStatementBuilder.this.addWith(buildWith()).returningDistinct(expressions) @AT@ 12480 @LENGTH@ 90
---UPD MethodInvocation@@DefaultStatementBuilder.this.addWith(buildWith()).returning(expressions) @TO@ DefaultStatementBuilder.this.addWith(buildWith()).returningDistinct(expressions) @AT@ 12487 @LENGTH@ 82
------UPD SimpleName@@MethodName:returning:[expressions] @TO@ MethodName:returningDistinct:[expressions] @AT@ 12547 @LENGTH@ 22


UPD ReturnStatement@@MethodInvocation:createThenBuilder().then(fieldReference) @TO@ MethodInvocation:createThenBuilder().thenValueOf(fieldReference) @AT@ 7197 @LENGTH@ 48
---UPD MethodInvocation@@createThenBuilder().then(fieldReference) @TO@ createThenBuilder().thenValueOf(fieldReference) @AT@ 7204 @LENGTH@ 40
------UPD SimpleName@@MethodName:then:[fieldReference] @TO@ MethodName:thenValueOf:[fieldReference] @AT@ 7224 @LENGTH@ 20


INS MethodDeclaration@@public, CamelNamespace, MethodName:getNamespace,  @TO@ TypeDeclaration@@[@Component("milo-server"), public]MiloServerComponent, DefaultComponent @AT@ 5164 @LENGTH@ 70
---INS Modifier@@public @TO@ MethodDeclaration@@public, CamelNamespace, MethodName:getNamespace,  @AT@ 5164 @LENGTH@ 6
---INS SimpleType@@CamelNamespace @TO@ MethodDeclaration@@public, CamelNamespace, MethodName:getNamespace,  @AT@ 5171 @LENGTH@ 14
---INS SimpleName@@MethodName:getNamespace @TO@ MethodDeclaration@@public, CamelNamespace, MethodName:getNamespace,  @AT@ 5186 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:namespace @TO@ MethodDeclaration@@public, CamelNamespace, MethodName:getNamespace,  @AT@ 5211 @LENGTH@ 17
------INS SimpleName@@namespace @TO@ ReturnStatement@@SimpleName:namespace @AT@ 5218 @LENGTH@ 9


UPD VariableDeclarationStatement@@final long result=Arrays.deepHashCode(new Object[]{last,buffer}); @TO@ final long result=31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer); @AT@ 2055 @LENGTH@ 71
---UPD VariableDeclarationFragment@@result=Arrays.deepHashCode(new Object[]{last,buffer}) @TO@ result=31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer) @AT@ 2066 @LENGTH@ 59
------DEL MethodInvocation@@Arrays.deepHashCode(new Object[]{last,buffer}) @AT@ 2075 @LENGTH@ 50
------INS InfixExpression@@31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer) @TO@ VariableDeclarationFragment@@result=Arrays.deepHashCode(new Object[]{last,buffer}) @AT@ 2445 @LENGTH@ 57
---------INS InfixExpression@@31 * (31 + Long.hashCode(last)) @TO@ InfixExpression@@31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer) @AT@ 2445 @LENGTH@ 31
------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * (31 + Long.hashCode(last)) @AT@ 2445 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@31 * (31 + Long.hashCode(last)) @AT@ 2447 @LENGTH@ 1
------------INS ParenthesizedExpression@@(31 + Long.hashCode(last)) @TO@ InfixExpression@@31 * (31 + Long.hashCode(last)) @AT@ 2450 @LENGTH@ 26
---------------INS InfixExpression@@31 + Long.hashCode(last) @TO@ ParenthesizedExpression@@(31 + Long.hashCode(last)) @AT@ 2451 @LENGTH@ 24
------------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 + Long.hashCode(last) @AT@ 2451 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@31 + Long.hashCode(last) @AT@ 2453 @LENGTH@ 1
------------------INS MethodInvocation@@Long.hashCode(last) @TO@ InfixExpression@@31 + Long.hashCode(last) @AT@ 2456 @LENGTH@ 19
---------------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.hashCode(last) @AT@ 2456 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hashCode:[last] @TO@ MethodInvocation@@Long.hashCode(last) @AT@ 2461 @LENGTH@ 14
------------------------INS SimpleName@@last @TO@ SimpleName@@MethodName:hashCode:[last] @AT@ 2470 @LENGTH@ 4
---------INS Operator@@+ @TO@ InfixExpression@@31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer) @AT@ 2476 @LENGTH@ 1
---------INS MethodInvocation@@Arrays.hashCode(buffer) @TO@ InfixExpression@@31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer) @AT@ 2479 @LENGTH@ 23
------------MOV SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.hashCode(buffer) @AT@ 2075 @LENGTH@ 6
------------MOV SimpleName@@MethodName:deepHashCode:[new Object[]{last,buffer}] @TO@ MethodInvocation@@Arrays.hashCode(buffer) @AT@ 2082 @LENGTH@ 43
---------------DEL ArrayCreation@@new Object[]{last,buffer} @AT@ 2095 @LENGTH@ 29
------------------DEL ArrayType@@Object[] @AT@ 2099 @LENGTH@ 8
---------------------DEL SimpleType@@Object @AT@ 2099 @LENGTH@ 6
------------------DEL ArrayInitializer@@{last,buffer} @AT@ 2108 @LENGTH@ 16
---------------------DEL SimpleName@@last @AT@ 2110 @LENGTH@ 4
---------------------DEL SimpleName@@buffer @AT@ 2116 @LENGTH@ 6
---------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:deepHashCode:[new Object[]{last,buffer}] @AT@ 2495 @LENGTH@ 6


INS IfStatement@@if (ClassUtils.isAssignable(Map.class,type)) {  return BsonType.DOCUMENT;} @TO@ MethodDeclaration@@private, BsonType, MethodName:bsonTypeForValue, Object value,  @AT@ 15341 @LENGTH@ 80
---INS MethodInvocation@@ClassUtils.isAssignable(Map.class,type) @TO@ IfStatement@@if (ClassUtils.isAssignable(Map.class,type)) {  return BsonType.DOCUMENT;} @AT@ 15345 @LENGTH@ 40
------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@ClassUtils.isAssignable(Map.class,type) @AT@ 15345 @LENGTH@ 10
------INS SimpleName@@MethodName:isAssignable:[Map.class, type] @TO@ MethodInvocation@@ClassUtils.isAssignable(Map.class,type) @AT@ 15356 @LENGTH@ 29
---------INS TypeLiteral@@Map.class @TO@ SimpleName@@MethodName:isAssignable:[Map.class, type] @AT@ 15369 @LENGTH@ 9
---------INS SimpleName@@type @TO@ SimpleName@@MethodName:isAssignable:[Map.class, type] @AT@ 15380 @LENGTH@ 4
---INS Block@@ThenBody:{  return BsonType.DOCUMENT;} @TO@ IfStatement@@if (ClassUtils.isAssignable(Map.class,type)) {  return BsonType.DOCUMENT;} @AT@ 15387 @LENGTH@ 34
------INS ReturnStatement@@QualifiedName:BsonType.DOCUMENT @TO@ Block@@ThenBody:{  return BsonType.DOCUMENT;} @AT@ 15392 @LENGTH@ 25
---------INS QualifiedName@@BsonType.DOCUMENT @TO@ ReturnStatement@@QualifiedName:BsonType.DOCUMENT @AT@ 15399 @LENGTH@ 17
------------INS SimpleName@@BsonType @TO@ QualifiedName@@BsonType.DOCUMENT @AT@ 15399 @LENGTH@ 8
------------INS SimpleName@@DOCUMENT @TO@ QualifiedName@@BsonType.DOCUMENT @AT@ 15408 @LENGTH@ 8


UPD VariableDeclarationStatement@@String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class); @TO@ String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder",message,String.class); @AT@ 3358 @LENGTH@ 150
---UPD VariableDeclarationFragment@@out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class) @TO@ out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder",message,String.class) @AT@ 3365 @LENGTH@ 142
------UPD MethodInvocation@@template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder",message,String.class) @AT@ 3371 @LENGTH@ 136
---------UPD SimpleName@@MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder", message, String.class] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder", message, String.class] @AT@ 3380 @LENGTH@ 127
------------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder" @AT@ 3392 @LENGTH@ 91
---------------UPD StringLiteral@@"?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @TO@ "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder" @AT@ 3431 @LENGTH@ 52


UPD EnhancedForStatement@@for (EipOptionModel opt : def.getOptions()) {  DataFormatOptionModel option=new DataFormatOptionModel();  option.setName(opt.getName());  option.setKind(opt.getKind());  option.setDisplayName(opt.getDisplayName());  option.setGroup(opt.getGroup());  option.setLabel(opt.getLabel());  option.setRequired(opt.isRequired());  option.setType(opt.getType());  option.setJavaType(opt.getJavaType());  option.setEnums(opt.getEnums());  option.setOneOfs(opt.getOneOfs());  option.setPrefix(opt.getPrefix());  option.setOptionalPrefix(opt.getOptionalPrefix());  option.setMultiValue(opt.isMultiValue());  option.setDeprecated(opt.isDeprecated());  option.setDeprecationNote(opt.getDeprecationNote());  option.setSecret(opt.isSecret());  option.setDefaultValue(opt.getDefaultValue());  option.setDefaultValueNote(opt.getDefaultValueNote());  option.setAsPredicate(opt.isAsPredicate());  option.setConfigurationClass(opt.getConfigurationClass());  option.setConfigurationField(opt.getConfigurationField());  option.setDescription(opt.getDescription());  if ("type".equals(option.getName()) && "bindy".equals(model.getModelName())) {switch (name) {case "bindy-csv":      option.setDefaultValue("Csv");    break;case "bindy-fixed":  option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;}}if ("library".equals(option.getName()) && "json".equals(model.getModelName())) {switch (name) {case "json-gson":option.setDefaultValue("Gson");break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;}}model.addOption(option);} @TO@ for (EipOptionModel opt : def.getOptions()) {  DataFormatOptionModel option=new DataFormatOptionModel();  option.setName(opt.getName());  option.setKind(opt.getKind());  option.setDisplayName(opt.getDisplayName());  option.setGroup(opt.getGroup());  option.setLabel(opt.getLabel());  option.setRequired(opt.isRequired());  option.setType(opt.getType());  option.setJavaType(opt.getJavaType());  option.setEnums(opt.getEnums());  option.setOneOfs(opt.getOneOfs());  option.setPrefix(opt.getPrefix());  option.setOptionalPrefix(opt.getOptionalPrefix());  option.setMultiValue(opt.isMultiValue());  option.setDeprecated(opt.isDeprecated());  option.setDeprecationNote(opt.getDeprecationNote());  option.setSecret(opt.isSecret());  option.setDefaultValue(opt.getDefaultValue());  option.setDefaultValueNote(opt.getDefaultValueNote());  option.setAsPredicate(opt.isAsPredicate());  option.setConfigurationClass(opt.getConfigurationClass());  option.setConfigurationField(opt.getConfigurationField());  option.setDescription(opt.getDescription());  if ("type".equals(option.getName()) && "bindy".equals(model.getModelName())) {switch (name) {case "bindy-csv":      option.setDefaultValue("Csv");    break;case "bindy-fixed":  option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;default :}}if ("library".equals(option.getName()) && "json".equals(model.getModelName())) {switch (name) {case "json-gson":option.setDefaultValue("Gson");break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;default :}}model.addOption(option);} @AT@ 11790 @LENGTH@ 2591
---UPD IfStatement@@if ("type".equals(option.getName()) && "bindy".equals(model.getModelName())) {switch (name) {case "bindy-csv":    option.setDefaultValue("Csv");  break;case "bindy-fixed":option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;}} @TO@ if ("type".equals(option.getName()) && "bindy".equals(model.getModelName())) {switch (name) {case "bindy-csv":    option.setDefaultValue("Csv");  break;case "bindy-fixed":option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;default :}} @AT@ 13100 @LENGTH@ 487
------UPD Block@@ThenBody:{switch (name) {case "bindy-csv":    option.setDefaultValue("Csv");  break;case "bindy-fixed":option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;}} @TO@ ThenBody:{switch (name) {case "bindy-csv":    option.setDefaultValue("Csv");  break;case "bindy-fixed":option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;default :}} @AT@ 13177 @LENGTH@ 410
---------UPD SwitchStatement@@switch (name) {case "bindy-csv":  option.setDefaultValue("Csv");break;case "bindy-fixed":option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;} @TO@ switch (name) {case "bindy-csv":  option.setDefaultValue("Csv");break;case "bindy-fixed":option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;default :} @AT@ 13195 @LENGTH@ 378
------------INS SwitchCase@@default @TO@ SwitchStatement@@switch (name) {case "bindy-csv":  option.setDefaultValue("Csv");break;case "bindy-fixed":option.setDefaultValue("Fixed");break;case "bindy-kvp":option.setDefaultValue("KeyValue");break;} @AT@ 13572 @LENGTH@ 8
---UPD IfStatement@@if ("library".equals(option.getName()) && "json".equals(model.getModelName())) {switch (name) {case "json-gson":    option.setDefaultValue("Gson");  break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;}} @TO@ if ("library".equals(option.getName()) && "json".equals(model.getModelName())) {switch (name) {case "json-gson":    option.setDefaultValue("Gson");  break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;default :}} @AT@ 13600 @LENGTH@ 734
------UPD Block@@ThenBody:{switch (name) {case "json-gson":    option.setDefaultValue("Gson");  break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;}} @TO@ ThenBody:{switch (name) {case "json-gson":    option.setDefaultValue("Gson");  break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;default :}} @AT@ 13679 @LENGTH@ 655
---------UPD SwitchStatement@@switch (name) {case "json-gson":  option.setDefaultValue("Gson");break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;} @TO@ switch (name) {case "json-gson":  option.setDefaultValue("Gson");break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;default :} @AT@ 13697 @LENGTH@ 623
------------INS SwitchCase@@default @TO@ SwitchStatement@@switch (name) {case "json-gson":  option.setDefaultValue("Gson");break;case "json-jackson":option.setDefaultValue("Jackson");break;case "json-johnzon":option.setDefaultValue("Johnzon");break;case "json-fastson":option.setDefaultValue("Fastjson");break;case "json-xstream":option.setDefaultValue("XStream");break;} @AT@ 14345 @LENGTH@ 8


UPD VariableDeclarationStatement@@CloudWatchClient cloudWatchClient=mock(CloudWatchClient.class); @TO@ CloudWatchClient cloudWatchClient=new CloudWatchClientMock(); @AT@ 1366 @LENGTH@ 65
---UPD VariableDeclarationFragment@@cloudWatchClient=mock(CloudWatchClient.class) @TO@ cloudWatchClient=new CloudWatchClientMock() @AT@ 1383 @LENGTH@ 47
------INS ClassInstanceCreation@@CloudWatchClientMock[] @TO@ VariableDeclarationFragment@@cloudWatchClient=mock(CloudWatchClient.class) @AT@ 1333 @LENGTH@ 26
---------INS New@@new @TO@ ClassInstanceCreation@@CloudWatchClientMock[] @AT@ 1333 @LENGTH@ 3
---------INS SimpleType@@CloudWatchClientMock @TO@ ClassInstanceCreation@@CloudWatchClientMock[] @AT@ 1337 @LENGTH@ 20
------DEL MethodInvocation@@mock(CloudWatchClient.class) @AT@ 1402 @LENGTH@ 28
---------DEL SimpleName@@MethodName:mock:[CloudWatchClient.class] @AT@ 1402 @LENGTH@ 28
------------DEL TypeLiteral@@CloudWatchClient.class @AT@ 1407 @LENGTH@ 22


UPD VariableDeclarationStatement@@ComponentModel model=componentModel(scheme); @TO@ ComponentModel model=scheme != null ? componentModel(scheme) : null; @AT@ 14903 @LENGTH@ 46
---UPD VariableDeclarationFragment@@model=componentModel(scheme) @TO@ model=scheme != null ? componentModel(scheme) : null @AT@ 14918 @LENGTH@ 30
------INS ConditionalExpression@@scheme != null ? componentModel(scheme) : null @TO@ VariableDeclarationFragment@@model=componentModel(scheme) @AT@ 14926 @LENGTH@ 46
---------MOV MethodInvocation@@componentModel(scheme) @TO@ ConditionalExpression@@scheme != null ? componentModel(scheme) : null @AT@ 14926 @LENGTH@ 22
---------INS InfixExpression@@scheme != null @TO@ ConditionalExpression@@scheme != null ? componentModel(scheme) : null @AT@ 14926 @LENGTH@ 14
------------INS SimpleName@@scheme @TO@ InfixExpression@@scheme != null @AT@ 14926 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@scheme != null @AT@ 14932 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@scheme != null @AT@ 14936 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@scheme != null ? componentModel(scheme) : null @AT@ 14968 @LENGTH@ 4


INS MethodDeclaration@@private, voidMethodName:FileUtil,  @TO@ TypeDeclaration@@[public]FileUtil,  @AT@ 1061 @LENGTH@ 26
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:FileUtil,  @AT@ 1061 @LENGTH@ 7
---INS SimpleName@@MethodName:FileUtil @TO@ MethodDeclaration@@private, voidMethodName:FileUtil,  @AT@ 1069 @LENGTH@ 8


UPD TryStatement@@try {  CreateAliasRequest request=new CreateAliasRequest().withFunctionName(getEndpoint().getFunction());  String version=exchange.getIn().getHeader(LambdaConstants.FUNCTION_VERSION,String.class);  String aliasName=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(version) || ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function Version and alias must be specified to create an alias");  }  if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION))) {    String aliasDescription=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION,String.class);    request.setDescription(aliasDescription);  }  result=lambdaClient.createAlias(request);} catch (AmazonServiceException ase) {  log.trace("createAlias command returned the error code {}",ase.getErrorCode());  throw ase;} @TO@ try {  CreateAliasRequest request=new CreateAliasRequest().withFunctionName(getEndpoint().getFunction());  String version=exchange.getIn().getHeader(LambdaConstants.FUNCTION_VERSION,String.class);  String aliasName=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(version) || ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function Version and alias must be specified to create an alias");  }  request.setFunctionVersion(version);  request.setName(aliasName);  if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION))) {    String aliasDescription=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION,String.class);    request.setDescription(aliasDescription);  }  result=lambdaClient.createAlias(request);} catch (AmazonServiceException ase) {  log.trace("createAlias command returned the error code {}",ase.getErrorCode());  throw ase;} @AT@ 29013 @LENGTH@ 1095
---INS ExpressionStatement@@MethodInvocation:request.setFunctionVersion(version) @TO@ TryStatement@@try {  CreateAliasRequest request=new CreateAliasRequest().withFunctionName(getEndpoint().getFunction());  String version=exchange.getIn().getHeader(LambdaConstants.FUNCTION_VERSION,String.class);  String aliasName=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(version) || ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function Version and alias must be specified to create an alias");  }  if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION))) {    String aliasDescription=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION,String.class);    request.setDescription(aliasDescription);  }  result=lambdaClient.createAlias(request);} catch (AmazonServiceException ase) {  log.trace("createAlias command returned the error code {}",ase.getErrorCode());  throw ase;} @AT@ 29576 @LENGTH@ 36
------INS MethodInvocation@@request.setFunctionVersion(version) @TO@ ExpressionStatement@@MethodInvocation:request.setFunctionVersion(version) @AT@ 29576 @LENGTH@ 35
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setFunctionVersion(version) @AT@ 29576 @LENGTH@ 7
---------INS SimpleName@@MethodName:setFunctionVersion:[version] @TO@ MethodInvocation@@request.setFunctionVersion(version) @AT@ 29584 @LENGTH@ 27
------------INS SimpleName@@version @TO@ SimpleName@@MethodName:setFunctionVersion:[version] @AT@ 29603 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:request.setName(aliasName) @TO@ TryStatement@@try {  CreateAliasRequest request=new CreateAliasRequest().withFunctionName(getEndpoint().getFunction());  String version=exchange.getIn().getHeader(LambdaConstants.FUNCTION_VERSION,String.class);  String aliasName=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(version) || ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function Version and alias must be specified to create an alias");  }  if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION))) {    String aliasDescription=exchange.getIn().getHeader(LambdaConstants.FUNCTION_ALIAS_DESCRIPTION,String.class);    request.setDescription(aliasDescription);  }  result=lambdaClient.createAlias(request);} catch (AmazonServiceException ase) {  log.trace("createAlias command returned the error code {}",ase.getErrorCode());  throw ase;} @AT@ 29625 @LENGTH@ 27
------INS MethodInvocation@@request.setName(aliasName) @TO@ ExpressionStatement@@MethodInvocation:request.setName(aliasName) @AT@ 29625 @LENGTH@ 26
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setName(aliasName) @AT@ 29625 @LENGTH@ 7
---------INS SimpleName@@MethodName:setName:[aliasName] @TO@ MethodInvocation@@request.setName(aliasName) @AT@ 29633 @LENGTH@ 18
------------INS SimpleName@@aliasName @TO@ SimpleName@@MethodName:setName:[aliasName] @AT@ 29641 @LENGTH@ 9


INS FieldDeclaration@@public, static, final, String, [SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V"] @TO@ TypeDeclaration@@[public]RsaTestKeyData,  @AT@ 6295 @LENGTH@ 482
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V"] @AT@ 6295 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V"] @AT@ 6302 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V"] @AT@ 6309 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V"] @AT@ 6315 @LENGTH@ 6
---INS VariableDeclarationFragment@@SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @TO@ FieldDeclaration@@public, static, final, String, [SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V"] @AT@ 6322 @LENGTH@ 454
------INS SimpleName@@SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT @TO@ VariableDeclarationFragment@@SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6322 @LENGTH@ 37
------INS InfixExpression@@"ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @TO@ VariableDeclarationFragment@@SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT="ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6362 @LENGTH@ 414
---------INS StringLiteral@@"ssh-rsa " @TO@ InfixExpression@@"ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6362 @LENGTH@ 10
---------INS Operator@@+ @TO@ InfixExpression@@"ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6372 @LENGTH@ 1
---------INS StringLiteral@@"AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" @TO@ InfixExpression@@"ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6378 @LENGTH@ 104
---------INS StringLiteral@@"hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW" @TO@ InfixExpression@@"ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6488 @LENGTH@ 104
---------INS StringLiteral@@"eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7" @TO@ InfixExpression@@"ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6598 @LENGTH@ 104
---------INS StringLiteral@@"2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @TO@ InfixExpression@@"ssh-rsa " + "AAAAB3NzaC1yc2EAAAADAQABAAABAQDABE3hLtnRqxISPrX5Ii+1RS4eil399+d7UJtodc3GP9wjitjSTkQtnZIYIVWCbH1cAMkmFi" + "hAiY768zEUCptbHI7jkHWtlHWrQKEQVYsY+Y0H59jxOsUciMlvzvezR3YVNgM7Cy3od0o+NeQt2AYc7grV8uc7VxAcoaCUEq9zhlJW"+ "eJQ4nUR0pkfEaeRWOmzWE/3wC9DHoSmYoTF7B3gwyPvuBFgB5KjSk+G6AuubLkMs+jFJQZJkQcI+UJ859MC3024ThjBukLAN8OZBv7"+ "2d6rtDQ/Ca0/qMWtXhVneKvZxZg5MXoVwvtkidwbdoK9fGnylRDs0+KZh3vR0Q+67V" @AT@ 6708 @LENGTH@ 68


UPD TryStatement@@try (final FileInputStream fileInputStream=new FileInputStream(getFile("bla.ar"))){  final InputStream simpleInputStream=new InputStream(){    @Override public int read() throws IOException {      return fileInputStream.read();    }  };  ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream);  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @TO@ try (final FileInputStream fileInputStream=new FileInputStream(getFile("bla.ar"))){  final InputStream simpleInputStream=new InputStream(){    @Override public int read() throws IOException {      return fileInputStream.read();    }  };  try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){    ArArchiveEntry entry1=archiveInputStream.getNextArEntry();    assertThat(entry1,not(nullValue()));    assertThat(entry1.getName(),equalTo("test1.xml"));    assertThat(entry1.getLength(),equalTo(610L));    ArArchiveEntry entry2=archiveInputStream.getNextArEntry();    assertThat(entry2.getName(),equalTo("test2.xml"));    assertThat(entry2.getLength(),equalTo(82L));    assertThat(archiveInputStream.getNextArEntry(),nullValue());  } }  @AT@ 3455 @LENGTH@ 1146
---INS TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @TO@ TryStatement@@try (final FileInputStream fileInputStream=new FileInputStream(getFile("bla.ar"))){  final InputStream simpleInputStream=new InputStream(){    @Override public int read() throws IOException {      return fileInputStream.read();    }  };  ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream);  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 3988 @LENGTH@ 656
------INS VariableDeclarationExpression@@ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream) @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 3993 @LENGTH@ 85
---------INS SimpleType@@ArArchiveInputStream @TO@ VariableDeclarationExpression@@ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream) @AT@ 3993 @LENGTH@ 20
---------MOV VariableDeclarationFragment@@archiveInputStream=new ArArchiveInputStream(simpleInputStream) @TO@ VariableDeclarationExpression@@ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream) @AT@ 4009 @LENGTH@ 64
------MOV VariableDeclarationStatement@@ArArchiveEntry entry1=archiveInputStream.getNextArEntry(); @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4087 @LENGTH@ 60
------MOV ExpressionStatement@@MethodInvocation:assertThat(entry1,not(nullValue())) @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4160 @LENGTH@ 37
------MOV ExpressionStatement@@MethodInvocation:assertThat(entry1.getName(),equalTo("test1.xml")) @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4210 @LENGTH@ 51
------MOV ExpressionStatement@@MethodInvocation:assertThat(entry1.getLength(),equalTo(610L)) @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4274 @LENGTH@ 46
------MOV VariableDeclarationStatement@@ArArchiveEntry entry2=archiveInputStream.getNextArEntry(); @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4334 @LENGTH@ 60
------MOV ExpressionStatement@@MethodInvocation:assertThat(entry2.getName(),equalTo("test2.xml")) @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4407 @LENGTH@ 51
------MOV ExpressionStatement@@MethodInvocation:assertThat(entry2.getLength(),equalTo(82L)) @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4471 @LENGTH@ 45
------MOV ExpressionStatement@@MethodInvocation:assertThat(archiveInputStream.getNextArEntry(),nullValue()) @TO@ TryStatement@@try (ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream)){  ArArchiveEntry entry1=archiveInputStream.getNextArEntry();  assertThat(entry1,not(nullValue()));  assertThat(entry1.getName(),equalTo("test1.xml"));  assertThat(entry1.getLength(),equalTo(610L));  ArArchiveEntry entry2=archiveInputStream.getNextArEntry();  assertThat(entry2.getName(),equalTo("test2.xml"));  assertThat(entry2.getLength(),equalTo(82L));  assertThat(archiveInputStream.getNextArEntry(),nullValue());}  @AT@ 4530 @LENGTH@ 61
---DEL VariableDeclarationStatement@@ArArchiveInputStream archiveInputStream=new ArArchiveInputStream(simpleInputStream); @AT@ 3988 @LENGTH@ 86
------DEL SimpleType@@ArArchiveInputStream @AT@ 3988 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @TO@ TypeDeclaration@@[public]OidcIdTokenValidatorTests,  @AT@ 4129 @LENGTH@ 481
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @AT@ 4129 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @AT@ 4136 @LENGTH@ 4
---INS SimpleName@@MethodName:validateWhenMetadataIssuerMatchThenNoErrors @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @AT@ 4141 @LENGTH@ 43
---INS VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new HashMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @AT@ 4335 @LENGTH@ 60
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new HashMap<>(); @AT@ 4335 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 4335 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 4339 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 4347 @LENGTH@ 6
------INS VariableDeclarationFragment@@configurationMetadata=new HashMap<>() @TO@ VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new HashMap<>(); @AT@ 4355 @LENGTH@ 39
---------INS SimpleName@@configurationMetadata @TO@ VariableDeclarationFragment@@configurationMetadata=new HashMap<>() @AT@ 4355 @LENGTH@ 21
---------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@configurationMetadata=new HashMap<>() @AT@ 4379 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 4379 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 4383 @LENGTH@ 9
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 4383 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:configurationMetadata.put("issuer","https://issuer.example.com") @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @AT@ 4398 @LENGTH@ 66
------INS MethodInvocation@@configurationMetadata.put("issuer","https://issuer.example.com") @TO@ ExpressionStatement@@MethodInvocation:configurationMetadata.put("issuer","https://issuer.example.com") @AT@ 4398 @LENGTH@ 65
---------INS SimpleName@@Name:configurationMetadata @TO@ MethodInvocation@@configurationMetadata.put("issuer","https://issuer.example.com") @AT@ 4398 @LENGTH@ 21
---------INS SimpleName@@MethodName:put:["issuer", "https://issuer.example.com"] @TO@ MethodInvocation@@configurationMetadata.put("issuer","https://issuer.example.com") @AT@ 4420 @LENGTH@ 43
------------INS StringLiteral@@"issuer" @TO@ SimpleName@@MethodName:put:["issuer", "https://issuer.example.com"] @AT@ 4424 @LENGTH@ 8
------------INS StringLiteral@@"https://issuer.example.com" @TO@ SimpleName@@MethodName:put:["issuer", "https://issuer.example.com"] @AT@ 4434 @LENGTH@ 28
---INS ExpressionStatement@@Assignment:this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @AT@ 4467 @LENGTH@ 91
------INS Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @TO@ ExpressionStatement@@Assignment:this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 4467 @LENGTH@ 90
---------INS FieldAccess@@this.registration @TO@ Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 4467 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 4467 @LENGTH@ 4
------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 4472 @LENGTH@ 12
---------INS Operator@@= @TO@ Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 4484 @LENGTH@ 1
---------INS MethodInvocation@@this.registration.providerConfigurationMetadata(configurationMetadata) @TO@ Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 4487 @LENGTH@ 70
------------INS FieldAccess@@this.registration @TO@ MethodInvocation@@this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 4487 @LENGTH@ 17
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 4487 @LENGTH@ 4
---------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 4492 @LENGTH@ 12
------------INS SimpleName@@MethodName:providerConfigurationMetadata:[configurationMetadata] @TO@ MethodInvocation@@this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 4505 @LENGTH@ 52
---------------INS SimpleName@@configurationMetadata @TO@ SimpleName@@MethodName:providerConfigurationMetadata:[configurationMetadata] @AT@ 4535 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(this.validateIdToken()).isEmpty() @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMatchThenNoErrors,  @AT@ 4562 @LENGTH@ 45
------INS MethodInvocation@@assertThat(this.validateIdToken()).isEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.validateIdToken()).isEmpty() @AT@ 4562 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:assertThat:[this.validateIdToken()] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).isEmpty() @AT@ 4562 @LENGTH@ 34
------------INS MethodInvocation@@this.validateIdToken() @TO@ MethodInvocation@@MethodName:assertThat:[this.validateIdToken()] @AT@ 4573 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.validateIdToken() @AT@ 4573 @LENGTH@ 4
---------------INS SimpleName@@MethodName:validateIdToken:[] @TO@ MethodInvocation@@this.validateIdToken() @AT@ 4578 @LENGTH@ 17
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).isEmpty() @AT@ 4597 @LENGTH@ 9


UPD MethodDeclaration@@default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 10070 @LENGTH@ 137
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 10110 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 10129 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 10154 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 10161 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 10161 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 10170 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 10176 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 10182 @LENGTH@ 18


DEL MethodDeclaration@@default, CryptoCmsEndpointBuilder, MethodName:recipient, List<Object> recipient,  @AT@ 10532 @LENGTH@ 154
---DEL Modifier@@default @AT@ 10532 @LENGTH@ 7
---DEL SimpleType@@CryptoCmsEndpointBuilder @AT@ 10540 @LENGTH@ 24
---DEL SimpleName@@MethodName:recipient @AT@ 10565 @LENGTH@ 9
---DEL SingleVariableDeclaration@@List<Object> recipient @AT@ 10575 @LENGTH@ 22
------DEL ParameterizedType@@List<Object> @AT@ 10575 @LENGTH@ 12
---------DEL SimpleType@@List @AT@ 10575 @LENGTH@ 4
---------DEL SimpleType@@Object @AT@ 10580 @LENGTH@ 6
------DEL SimpleName@@recipient @AT@ 10588 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:doSetProperty("recipient",recipient) @AT@ 10613 @LENGTH@ 38
------DEL MethodInvocation@@doSetProperty("recipient",recipient) @AT@ 10613 @LENGTH@ 37
---------DEL SimpleName@@MethodName:doSetProperty:["recipient", recipient] @AT@ 10613 @LENGTH@ 37
------------DEL StringLiteral@@"recipient" @AT@ 10627 @LENGTH@ 11
------------DEL SimpleName@@recipient @AT@ 10640 @LENGTH@ 9
---DEL ReturnStatement@@ThisExpression:this @AT@ 10664 @LENGTH@ 12
------DEL ThisExpression@@this @AT@ 10671 @LENGTH@ 4


UPD CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @TO@ catch (RestClientException ex) {  int statusCode=500;  if (ex instanceof RestClientResponseException) {    statusCode=((RestClientResponseException)ex).getRawStatusCode();  }  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error);  throw new ClientAuthorizationException(oauth2Error,clientCredentialsGrantRequest.getClientRegistration().getRegistrationId(),message,ex);} @AT@ 3821 @LENGTH@ 294
---INS VariableDeclarationStatement@@int statusCode=500; @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3926 @LENGTH@ 21
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3926 @LENGTH@ 3
------INS VariableDeclarationFragment@@statusCode=500 @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3930 @LENGTH@ 16
---------INS SimpleName@@statusCode @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3930 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3943 @LENGTH@ 3
---INS IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3951 @LENGTH@ 125
------INS InstanceofExpression@@ex instanceof RestClientResponseException @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3955 @LENGTH@ 41
---------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3955 @LENGTH@ 2
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3958 @LENGTH@ 10
---------INS SimpleType@@RestClientResponseException @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3969 @LENGTH@ 27
------INS Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3998 @LENGTH@ 78
---------INS ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 4004 @LENGTH@ 67
------------INS Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4004 @LENGTH@ 66
---------------INS SimpleName@@statusCode @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4004 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4014 @LENGTH@ 1
---------------INS MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4017 @LENGTH@ 53
------------------INS ParenthesizedExpression@@((RestClientResponseException)ex) @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 4017 @LENGTH@ 34
---------------------INS CastExpression@@(RestClientResponseException)ex @TO@ ParenthesizedExpression@@((RestClientResponseException)ex) @AT@ 4018 @LENGTH@ 32
------------------------INS SimpleType@@RestClientResponseException @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 4019 @LENGTH@ 27
------------------------INS SimpleName@@ex @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 4048 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getRawStatusCode:[] @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 4052 @LENGTH@ 18
---UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error,ex) @TO@ ClassInstanceCreation:new ClientAuthorizationException(oauth2Error,clientCredentialsGrantRequest.getClientRegistration().getRegistrationId(),message,ex) @AT@ 4055 @LENGTH@ 56
------UPD ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @TO@ ClientAuthorizationException[oauth2Error, clientCredentialsGrantRequest.getClientRegistration().getRegistrationId(), message, ex] @AT@ 4061 @LENGTH@ 49
---------UPD SimpleType@@OAuth2AuthorizationException @TO@ ClientAuthorizationException @AT@ 4065 @LENGTH@ 28
---------INS MethodInvocation@@clientCredentialsGrantRequest.getClientRegistration().getRegistrationId() @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4491 @LENGTH@ 73
------------INS MethodInvocation@@MethodName:getClientRegistration:[] @TO@ MethodInvocation@@clientCredentialsGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4491 @LENGTH@ 53
------------INS SimpleName@@Name:clientCredentialsGrantRequest @TO@ MethodInvocation@@clientCredentialsGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4491 @LENGTH@ 29
------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@clientCredentialsGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4545 @LENGTH@ 19
---------INS SimpleName@@message @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4571 @LENGTH@ 7
---INS VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 4289 @LENGTH@ 135
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4289 @LENGTH@ 6
------INS VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4296 @LENGTH@ 127
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4296 @LENGTH@ 7
---------INS MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4306 @LENGTH@ 117
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4306 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4313 @LENGTH@ 110
---------------INS StringLiteral@@"Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s" @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4320 @LENGTH@ 67
---------------INS SimpleName@@statusCode @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4394 @LENGTH@ 10
---------------INS SimpleName@@oauth2Error @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4411 @LENGTH@ 11


INS FieldDeclaration@@protected, final, SalesforceLoginConfig, [loginConfig] @TO@ TypeDeclaration@@[public, abstract]AbstractSalesforceProcessor, [SalesforceProcessor] @AT@ 2238 @LENGTH@ 50
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, final, SalesforceLoginConfig, [loginConfig] @AT@ 2238 @LENGTH@ 9
---INS Modifier@@final @TO@ FieldDeclaration@@protected, final, SalesforceLoginConfig, [loginConfig] @AT@ 2248 @LENGTH@ 5
---INS SimpleType@@SalesforceLoginConfig @TO@ FieldDeclaration@@protected, final, SalesforceLoginConfig, [loginConfig] @AT@ 2254 @LENGTH@ 21
---INS VariableDeclarationFragment@@loginConfig @TO@ FieldDeclaration@@protected, final, SalesforceLoginConfig, [loginConfig] @AT@ 2276 @LENGTH@ 11
------INS SimpleName@@loginConfig @TO@ VariableDeclarationFragment@@loginConfig @AT@ 2276 @LENGTH@ 11


UPD VariableDeclarationStatement@@final ServiceSupport camelContext=(ServiceSupport)context.getBean(CamelContext.class); @TO@ final CamelContext camelContext=context.getBean(CamelContext.class); @AT@ 6362 @LENGTH@ 89
---UPD SimpleType@@ServiceSupport @TO@ CamelContext @AT@ 6368 @LENGTH@ 14
---UPD VariableDeclarationFragment@@camelContext=(ServiceSupport)context.getBean(CamelContext.class) @TO@ camelContext=context.getBean(CamelContext.class) @AT@ 6383 @LENGTH@ 67
------DEL CastExpression@@(ServiceSupport)context.getBean(CamelContext.class) @AT@ 6398 @LENGTH@ 52
---------DEL SimpleType@@ServiceSupport @AT@ 6399 @LENGTH@ 14
------MOV MethodInvocation@@context.getBean(CamelContext.class) @TO@ VariableDeclarationFragment@@camelContext=(ServiceSupport)context.getBean(CamelContext.class) @AT@ 6415 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:testStartupFailsIfProvidersNotSetAsList,  @TO@ TypeDeclaration@@[@SuppressWarnings("unchecked"), public]ProviderManagerTests,  @AT@ 3379 @LENGTH@ 118
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testStartupFailsIfProvidersNotSetAsList,  @AT@ 3379 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testStartupFailsIfProvidersNotSetAsList,  @AT@ 3386 @LENGTH@ 4
---INS SimpleName@@MethodName:testStartupFailsIfProvidersNotSetAsList @TO@ MethodDeclaration@@public, void, MethodName:testStartupFailsIfProvidersNotSetAsList,  @AT@ 3391 @LENGTH@ 39
---INS ExpressionStatement@@ClassInstanceCreation:new ProviderManager((List<AuthenticationProvider>)null) @TO@ MethodDeclaration@@public, void, MethodName:testStartupFailsIfProvidersNotSetAsList,  @AT@ 3437 @LENGTH@ 57
------INS ClassInstanceCreation@@ProviderManager[(List<AuthenticationProvider>)null] @TO@ ExpressionStatement@@ClassInstanceCreation:new ProviderManager((List<AuthenticationProvider>)null) @AT@ 3437 @LENGTH@ 56
---------INS New@@new @TO@ ClassInstanceCreation@@ProviderManager[(List<AuthenticationProvider>)null] @AT@ 3437 @LENGTH@ 3
---------INS SimpleType@@ProviderManager @TO@ ClassInstanceCreation@@ProviderManager[(List<AuthenticationProvider>)null] @AT@ 3441 @LENGTH@ 15
---------INS CastExpression@@(List<AuthenticationProvider>)null @TO@ ClassInstanceCreation@@ProviderManager[(List<AuthenticationProvider>)null] @AT@ 3457 @LENGTH@ 35
------------INS ParameterizedType@@List<AuthenticationProvider> @TO@ CastExpression@@(List<AuthenticationProvider>)null @AT@ 3458 @LENGTH@ 28
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<AuthenticationProvider> @AT@ 3458 @LENGTH@ 4
---------------INS SimpleType@@AuthenticationProvider @TO@ ParameterizedType@@List<AuthenticationProvider> @AT@ 3463 @LENGTH@ 22
------------INS NullLiteral@@null @TO@ CastExpression@@(List<AuthenticationProvider>)null @AT@ 3488 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new PartTreeNeo4jQuery(neo4jOperations,mappingContext,queryMethod) @TO@ MethodInvocation:PartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @AT@ 3110 @LENGTH@ 76
---INS MethodInvocation@@PartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @TO@ ReturnStatement@@ClassInstanceCreation:new PartTreeNeo4jQuery(neo4jOperations,mappingContext,queryMethod) @AT@ 3117 @LENGTH@ 71
------INS SimpleName@@Name:PartTreeNeo4jQuery @TO@ MethodInvocation@@PartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @AT@ 3117 @LENGTH@ 18
------INS SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @TO@ MethodInvocation@@PartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @AT@ 3136 @LENGTH@ 52
---------INS SimpleName@@neo4jOperations @TO@ SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @AT@ 3143 @LENGTH@ 15
---------INS SimpleName@@mappingContext @TO@ SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @AT@ 3160 @LENGTH@ 14
---------INS SimpleName@@queryMethod @TO@ SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @AT@ 3176 @LENGTH@ 11
---DEL ClassInstanceCreation@@PartTreeNeo4jQuery[neo4jOperations, mappingContext, queryMethod] @AT@ 3117 @LENGTH@ 68
------DEL New@@new @AT@ 3117 @LENGTH@ 3
------DEL SimpleType@@PartTreeNeo4jQuery @AT@ 3121 @LENGTH@ 18
------DEL SimpleName@@neo4jOperations @AT@ 3140 @LENGTH@ 15
------DEL SimpleName@@mappingContext @AT@ 3157 @LENGTH@ 14
------DEL SimpleName@@queryMethod @AT@ 3173 @LENGTH@ 11


INS MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @TO@ TypeDeclaration@@[public]MulticastProcessor, AsyncProcessorSupport[Navigate<Processor>, Traceable, IdAware, RouteIdAware] @AT@ 32308 @LENGTH@ 227
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32308 @LENGTH@ 9
---INS SimpleType@@Processor @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32318 @LENGTH@ 9
---INS SimpleName@@MethodName:createErrorHandler @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32328 @LENGTH@ 18
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32347 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 32347 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 32360 @LENGTH@ 12
---INS SingleVariableDeclaration@@ErrorHandlerFactory builder @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32374 @LENGTH@ 27
------INS SimpleType@@ErrorHandlerFactory @TO@ SingleVariableDeclaration@@ErrorHandlerFactory builder @AT@ 32374 @LENGTH@ 19
------INS SimpleName@@builder @TO@ SingleVariableDeclaration@@ErrorHandlerFactory builder @AT@ 32394 @LENGTH@ 7
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32403 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 32403 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 32412 @LENGTH@ 8
---INS SingleVariableDeclaration@@Processor processor @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32422 @LENGTH@ 19
------INS SimpleType@@Processor @TO@ SingleVariableDeclaration@@Processor processor @AT@ 32422 @LENGTH@ 9
------INS SimpleName@@processor @TO@ SingleVariableDeclaration@@Processor processor @AT@ 32432 @LENGTH@ 9
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32450 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:builder.createErrorHandler(routeContext,processor) @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 32470 @LENGTH@ 59
------MOV MethodInvocation@@builder.createErrorHandler(routeContext,processor) @TO@ ReturnStatement@@MethodInvocation:builder.createErrorHandler(routeContext,processor) @AT@ 31198 @LENGTH@ 51


UPD MethodDeclaration@@private, void, MethodName:stopTimer, Timer.Sample sample, StepExecution stepExecution, String metricName, String status, String description,  @TO@ protected, void, MethodName:stopTimer, Timer.Sample sample, StepExecution stepExecution, String metricName, String status, String description,  @AT@ 9960 @LENGTH@ 385
---UPD Modifier@@private @TO@ protected @AT@ 9960 @LENGTH@ 7


UPD VariableDeclarationStatement@@Set<Class<?>> set=camelContext.getExtension(ExtendedCamelContext.class).getPackageScanClassResolver().findImplementations(RoutesBuilder.class,pkgs); @TO@ Set<Class<?>> set=camelContext.adapt(ExtendedCamelContext.class).getPackageScanClassResolver().findImplementations(RoutesBuilder.class,pkgs); @AT@ 16829 @LENGTH@ 151
---UPD VariableDeclarationFragment@@set=camelContext.getExtension(ExtendedCamelContext.class).getPackageScanClassResolver().findImplementations(RoutesBuilder.class,pkgs) @TO@ set=camelContext.adapt(ExtendedCamelContext.class).getPackageScanClassResolver().findImplementations(RoutesBuilder.class,pkgs) @AT@ 16843 @LENGTH@ 136
------UPD MethodInvocation@@camelContext.getExtension(ExtendedCamelContext.class).getPackageScanClassResolver().findImplementations(RoutesBuilder.class,pkgs) @TO@ camelContext.adapt(ExtendedCamelContext.class).getPackageScanClassResolver().findImplementations(RoutesBuilder.class,pkgs) @AT@ 16849 @LENGTH@ 130
---------UPD MethodInvocation@@MethodName:getExtension:[ExtendedCamelContext.class] @TO@ MethodName:adapt:[ExtendedCamelContext.class] @AT@ 16849 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:assertEquals("Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid",iae.getMessage()) @TO@ MethodInvocation:assertEquals("chmod option [abc] is not valid",iae.getMessage()) @AT@ 4167 @LENGTH@ 213
---UPD MethodInvocation@@assertEquals("Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid",iae.getMessage()) @TO@ assertEquals("chmod option [abc] is not valid",iae.getMessage()) @AT@ 4167 @LENGTH@ 212
------UPD SimpleName@@MethodName:assertEquals:["Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid", iae.getMessage()] @TO@ MethodName:assertEquals:["chmod option [abc] is not valid", iae.getMessage()] @AT@ 4167 @LENGTH@ 212
---------UPD StringLiteral@@"Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid" @TO@ "chmod option [abc] is not valid" @AT@ 4180 @LENGTH@ 180


UPD MethodDeclaration@@default, TerminatingMapReduce<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, TerminatingMapReduce<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 5334 @LENGTH@ 138
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 5375 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5394 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 5419 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 5426 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 5426 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 5435 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 5441 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5447 @LENGTH@ 18


UPD WhileStatement@@while (c == '$' || c == '_' || Character.isLetterOrDigit(c) || c == '#' || c == '{' || c == '[' || c == ']' || (isExpression && isExpressionAllowedChar(c))) {  if (charCount == 0 && c == '#') {    isExpression=true;  } else   if (isExpression) {    if (c == '{') {      parenthesisCount++;    } else     if (c == '}') {      parenthesisCount--;      if (parenthesisCount == 0) {        buffer.read();        break;      }    }  }  charCount++;  c=buffer.read();} @TO@ while (c == '$' || c == '_' || Character.isLetterOrDigit(c) || c == '#' || c == '{' || c == '[' || (isExpression && isExpressionAllowedChar(c))) {  if (charCount == 0 && c == '#') {    isExpression=true;  } else   if (isExpression) {    if (c == '{') {      parenthesisCount++;    } else     if (c == '}') {      parenthesisCount--;      if (parenthesisCount == 0) {        buffer.read();        break;      }    }  }  charCount++;  c=buffer.read();} @AT@ 6034 @LENGTH@ 481
---DEL InfixExpression@@c == '$' || c == '_' || Character.isLetterOrDigit(c) || c == '#' || c == '{' || c == '[' || c == ']' || (isExpression && isExpressionAllowedChar(c)) @AT@ 6041 @LENGTH@ 152
------DEL Operator@@|| @AT@ 6141 @LENGTH@ 2
---MOV InfixExpression@@c == '$' || c == '_' || Character.isLetterOrDigit(c) || c == '#' || c == '{' || c == '[' || c == ']' @TO@ WhileStatement@@while (c == '$' || c == '_' || Character.isLetterOrDigit(c) || c == '#' || c == '{' || c == '[' || c == ']' || (isExpression && isExpressionAllowedChar(c))) {  if (charCount == 0 && c == '#') {    isExpression=true;  } else   if (isExpression) {    if (c == '{') {      parenthesisCount++;    } else     if (c == '}') {      parenthesisCount--;      if (parenthesisCount == 0) {        buffer.read();        break;      }    }  }  charCount++;  c=buffer.read();} @AT@ 6041 @LENGTH@ 100
------DEL InfixExpression@@c == ']' @AT@ 6133 @LENGTH@ 8
---------DEL SimpleName@@c @AT@ 6133 @LENGTH@ 1
---------DEL Operator@@== @AT@ 6134 @LENGTH@ 2
---------DEL CharacterLiteral@@']' @AT@ 6138 @LENGTH@ 3
------MOV ParenthesizedExpression@@(isExpression && isExpressionAllowedChar(c)) @TO@ InfixExpression@@c == '$' || c == '_' || Character.isLetterOrDigit(c) || c == '#' || c == '{' || c == '[' || c == ']' @AT@ 6149 @LENGTH@ 44


UPD MethodDeclaration@@static, byte[], MethodName:createJwtHeader, String keyId, JwkDefinition.CryptoAlgorithm algorithm, Exception,  @TO@ static, byte[], MethodName:createJwtHeader, String keyId, String x5t, JwkDefinition.CryptoAlgorithm algorithm, Exception,  @AT@ 1689 @LENGTH@ 479
---INS SingleVariableDeclaration@@String x5t @TO@ MethodDeclaration@@static, byte[], MethodName:createJwtHeader, String keyId, JwkDefinition.CryptoAlgorithm algorithm, Exception,  @AT@ 1739 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String x5t @AT@ 1739 @LENGTH@ 6
------INS SimpleName@@x5t @TO@ SingleVariableDeclaration@@String x5t @AT@ 1746 @LENGTH@ 3
---INS IfStatement@@if (x5t != null) {  jwtHeader.put(JwkAttributes.X5T,x5t);} @TO@ MethodDeclaration@@static, byte[], MethodName:createJwtHeader, String keyId, JwkDefinition.CryptoAlgorithm algorithm, Exception,  @AT@ 1952 @LENGTH@ 64
------INS InfixExpression@@x5t != null @TO@ IfStatement@@if (x5t != null) {  jwtHeader.put(JwkAttributes.X5T,x5t);} @AT@ 1956 @LENGTH@ 11
---------INS SimpleName@@x5t @TO@ InfixExpression@@x5t != null @AT@ 1956 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@x5t != null @AT@ 1959 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@x5t != null @AT@ 1963 @LENGTH@ 4
------INS Block@@ThenBody:{  jwtHeader.put(JwkAttributes.X5T,x5t);} @TO@ IfStatement@@if (x5t != null) {  jwtHeader.put(JwkAttributes.X5T,x5t);} @AT@ 1969 @LENGTH@ 47
---------INS ExpressionStatement@@MethodInvocation:jwtHeader.put(JwkAttributes.X5T,x5t) @TO@ Block@@ThenBody:{  jwtHeader.put(JwkAttributes.X5T,x5t);} @AT@ 1974 @LENGTH@ 38
------------INS MethodInvocation@@jwtHeader.put(JwkAttributes.X5T,x5t) @TO@ ExpressionStatement@@MethodInvocation:jwtHeader.put(JwkAttributes.X5T,x5t) @AT@ 1974 @LENGTH@ 37
---------------INS SimpleName@@Name:jwtHeader @TO@ MethodInvocation@@jwtHeader.put(JwkAttributes.X5T,x5t) @AT@ 1974 @LENGTH@ 9
---------------INS SimpleName@@MethodName:put:[JwkAttributes.X5T, x5t] @TO@ MethodInvocation@@jwtHeader.put(JwkAttributes.X5T,x5t) @AT@ 1984 @LENGTH@ 27
------------------INS QualifiedName@@JwkAttributes.X5T @TO@ SimpleName@@MethodName:put:[JwkAttributes.X5T, x5t] @AT@ 1988 @LENGTH@ 17
---------------------INS SimpleName@@JwkAttributes @TO@ QualifiedName@@JwkAttributes.X5T @AT@ 1988 @LENGTH@ 13
---------------------INS SimpleName@@X5T @TO@ QualifiedName@@JwkAttributes.X5T @AT@ 2002 @LENGTH@ 3
------------------INS SimpleName@@x5t @TO@ SimpleName@@MethodName:put:[JwkAttributes.X5T, x5t] @AT@ 2007 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @TO@ TypeDeclaration@@[public]AvailablePortFinderTest,  @AT@ 2442 @LENGTH@ 346
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2442 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2449 @LENGTH@ 4
---INS SimpleName@@MethodName:testPortRange @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2454 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2477 @LENGTH@ 9
---INS VariableDeclarationStatement@@int p1=AvailablePortFinder.getNextAvailable(49152,65535); @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2497 @LENGTH@ 60
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int p1=AvailablePortFinder.getNextAvailable(49152,65535); @AT@ 2497 @LENGTH@ 3
------INS VariableDeclarationFragment@@p1=AvailablePortFinder.getNextAvailable(49152,65535) @TO@ VariableDeclarationStatement@@int p1=AvailablePortFinder.getNextAvailable(49152,65535); @AT@ 2501 @LENGTH@ 55
---------INS SimpleName@@p1 @TO@ VariableDeclarationFragment@@p1=AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2501 @LENGTH@ 2
---------INS MethodInvocation@@AvailablePortFinder.getNextAvailable(49152,65535) @TO@ VariableDeclarationFragment@@p1=AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2506 @LENGTH@ 50
------------INS SimpleName@@Name:AvailablePortFinder @TO@ MethodInvocation@@AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2506 @LENGTH@ 19
------------INS SimpleName@@MethodName:getNextAvailable:[49152, 65535] @TO@ MethodInvocation@@AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2526 @LENGTH@ 30
---------------INS NumberLiteral@@49152 @TO@ SimpleName@@MethodName:getNextAvailable:[49152, 65535] @AT@ 2543 @LENGTH@ 5
---------------INS NumberLiteral@@65535 @TO@ SimpleName@@MethodName:getNextAvailable:[49152, 65535] @AT@ 2550 @LENGTH@ 5
---INS VariableDeclarationStatement@@ServerSocket socket1=new ServerSocket(p1); @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2566 @LENGTH@ 44
------INS SimpleType@@ServerSocket @TO@ VariableDeclarationStatement@@ServerSocket socket1=new ServerSocket(p1); @AT@ 2566 @LENGTH@ 12
------INS VariableDeclarationFragment@@socket1=new ServerSocket(p1) @TO@ VariableDeclarationStatement@@ServerSocket socket1=new ServerSocket(p1); @AT@ 2579 @LENGTH@ 30
---------INS SimpleName@@socket1 @TO@ VariableDeclarationFragment@@socket1=new ServerSocket(p1) @AT@ 2579 @LENGTH@ 7
---------INS ClassInstanceCreation@@ServerSocket[p1] @TO@ VariableDeclarationFragment@@socket1=new ServerSocket(p1) @AT@ 2589 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@ServerSocket[p1] @AT@ 2589 @LENGTH@ 3
------------INS SimpleType@@ServerSocket @TO@ ClassInstanceCreation@@ServerSocket[p1] @AT@ 2593 @LENGTH@ 12
------------INS SimpleName@@p1 @TO@ ClassInstanceCreation@@ServerSocket[p1] @AT@ 2606 @LENGTH@ 2
---INS VariableDeclarationStatement@@int p2=AvailablePortFinder.getNextAvailable(49152,65535); @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2619 @LENGTH@ 60
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int p2=AvailablePortFinder.getNextAvailable(49152,65535); @AT@ 2619 @LENGTH@ 3
------INS VariableDeclarationFragment@@p2=AvailablePortFinder.getNextAvailable(49152,65535) @TO@ VariableDeclarationStatement@@int p2=AvailablePortFinder.getNextAvailable(49152,65535); @AT@ 2623 @LENGTH@ 55
---------INS SimpleName@@p2 @TO@ VariableDeclarationFragment@@p2=AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2623 @LENGTH@ 2
---------INS MethodInvocation@@AvailablePortFinder.getNextAvailable(49152,65535) @TO@ VariableDeclarationFragment@@p2=AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2628 @LENGTH@ 50
------------INS SimpleName@@Name:AvailablePortFinder @TO@ MethodInvocation@@AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2628 @LENGTH@ 19
------------INS SimpleName@@MethodName:getNextAvailable:[49152, 65535] @TO@ MethodInvocation@@AvailablePortFinder.getNextAvailable(49152,65535) @AT@ 2648 @LENGTH@ 30
---------------INS NumberLiteral@@49152 @TO@ SimpleName@@MethodName:getNextAvailable:[49152, 65535] @AT@ 2665 @LENGTH@ 5
---------------INS NumberLiteral@@65535 @TO@ SimpleName@@MethodName:getNextAvailable:[49152, 65535] @AT@ 2672 @LENGTH@ 5
---INS VariableDeclarationStatement@@ServerSocket socket2=new ServerSocket(p2); @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2688 @LENGTH@ 44
------INS SimpleType@@ServerSocket @TO@ VariableDeclarationStatement@@ServerSocket socket2=new ServerSocket(p2); @AT@ 2688 @LENGTH@ 12
------INS VariableDeclarationFragment@@socket2=new ServerSocket(p2) @TO@ VariableDeclarationStatement@@ServerSocket socket2=new ServerSocket(p2); @AT@ 2701 @LENGTH@ 30
---------INS SimpleName@@socket2 @TO@ VariableDeclarationFragment@@socket2=new ServerSocket(p2) @AT@ 2701 @LENGTH@ 7
---------INS ClassInstanceCreation@@ServerSocket[p2] @TO@ VariableDeclarationFragment@@socket2=new ServerSocket(p2) @AT@ 2711 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@ServerSocket[p2] @AT@ 2711 @LENGTH@ 3
------------INS SimpleType@@ServerSocket @TO@ ClassInstanceCreation@@ServerSocket[p2] @AT@ 2715 @LENGTH@ 12
------------INS SimpleName@@p2 @TO@ ClassInstanceCreation@@ServerSocket[p2] @AT@ 2728 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:socket1.close() @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2741 @LENGTH@ 16
------INS MethodInvocation@@socket1.close() @TO@ ExpressionStatement@@MethodInvocation:socket1.close() @AT@ 2741 @LENGTH@ 15
---------INS SimpleName@@Name:socket1 @TO@ MethodInvocation@@socket1.close() @AT@ 2741 @LENGTH@ 7
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@socket1.close() @AT@ 2749 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:socket2.close() @TO@ MethodDeclaration@@public, void, MethodName:testPortRange, Exception,  @AT@ 2766 @LENGTH@ 16
------INS MethodInvocation@@socket2.close() @TO@ ExpressionStatement@@MethodInvocation:socket2.close() @AT@ 2766 @LENGTH@ 15
---------INS SimpleName@@Name:socket2 @TO@ MethodInvocation@@socket2.close() @AT@ 2766 @LENGTH@ 7
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@socket2.close() @AT@ 2774 @LENGTH@ 7


UPD ReturnStatement@@NullLiteral:null @TO@ MethodInvocation:Collections.emptySet() @AT@ 4242 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 4249 @LENGTH@ 4
---INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@NullLiteral:null @AT@ 4281 @LENGTH@ 22
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 4281 @LENGTH@ 11
------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 4293 @LENGTH@ 10


UPD ReturnStatement@@ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/activemq/camel/jmsConsumeSendTransacted.xml") @TO@ ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/camel/component/activemq/jmsConsumeSendTransacted.xml") @AT@ 3965 @LENGTH@ 100
---UPD ClassInstanceCreation@@ClassPathXmlApplicationContext["org/apache/activemq/camel/jmsConsumeSendTransacted.xml"] @TO@ ClassPathXmlApplicationContext["org/apache/camel/component/activemq/jmsConsumeSendTransacted.xml"] @AT@ 3972 @LENGTH@ 92
------UPD StringLiteral@@"org/apache/activemq/camel/jmsConsumeSendTransacted.xml" @TO@ "org/apache/camel/component/activemq/jmsConsumeSendTransacted.xml" @AT@ 4007 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:log.debug(String.format("Invoke '%s' on unbound conneciton",method.getName())) @TO@ MethodInvocation:log.debug(String.format("Invoke '%s' on unbound connection",method.getName())) @AT@ 12896 @LENGTH@ 80
---UPD MethodInvocation@@log.debug(String.format("Invoke '%s' on unbound conneciton",method.getName())) @TO@ log.debug(String.format("Invoke '%s' on unbound connection",method.getName())) @AT@ 12896 @LENGTH@ 79
------UPD SimpleName@@MethodName:debug:[String.format("Invoke '%s' on unbound conneciton",method.getName())] @TO@ MethodName:debug:[String.format("Invoke '%s' on unbound connection",method.getName())] @AT@ 12900 @LENGTH@ 75
---------UPD MethodInvocation@@String.format("Invoke '%s' on unbound conneciton",method.getName()) @TO@ String.format("Invoke '%s' on unbound connection",method.getName()) @AT@ 12906 @LENGTH@ 68
------------UPD SimpleName@@MethodName:format:["Invoke '%s' on unbound conneciton", method.getName()] @TO@ MethodName:format:["Invoke '%s' on unbound connection", method.getName()] @AT@ 12913 @LENGTH@ 61
---------------UPD StringLiteral@@"Invoke '%s' on unbound conneciton" @TO@ "Invoke '%s' on unbound connection" @AT@ 12920 @LENGTH@ 35


UPD MethodDeclaration@@private, OAuth2AuthenticationException, MethodName:onError, OAuth2IntrospectionException e,  @TO@ private, AuthenticationException, MethodName:onError, OAuth2IntrospectionException e,  @AT@ 4259 @LENGTH@ 143
---UPD SimpleType@@OAuth2AuthenticationException @TO@ AuthenticationException @AT@ 4267 @LENGTH@ 29
---INS IfStatement@@if (e instanceof BadOpaqueTokenException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @TO@ MethodDeclaration@@private, OAuth2AuthenticationException, MethodName:onError, OAuth2IntrospectionException e,  @AT@ 4503 @LENGTH@ 185
------INS InstanceofExpression@@e instanceof BadOpaqueTokenException @TO@ IfStatement@@if (e instanceof BadOpaqueTokenException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 4507 @LENGTH@ 36
---------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof BadOpaqueTokenException @AT@ 4507 @LENGTH@ 1
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof BadOpaqueTokenException @AT@ 4509 @LENGTH@ 10
---------INS SimpleType@@BadOpaqueTokenException @TO@ InstanceofExpression@@e instanceof BadOpaqueTokenException @AT@ 4520 @LENGTH@ 23
------INS Block@@ThenBody:{  return new InvalidBearerTokenException(e.getMessage(),e);} @TO@ IfStatement@@if (e instanceof BadOpaqueTokenException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 4545 @LENGTH@ 67
---------MOV ReturnStatement@@ClassInstanceCreation:new InvalidBearerTokenException(e.getMessage(),e) @TO@ Block@@ThenBody:{  return new InvalidBearerTokenException(e.getMessage(),e);} @AT@ 4341 @LENGTH@ 58
------INS Block@@ElseBody:{  return new AuthenticationServiceException(e.getMessage(),e);} @TO@ IfStatement@@if (e instanceof BadOpaqueTokenException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 4618 @LENGTH@ 70
---------INS ReturnStatement@@ClassInstanceCreation:new AuthenticationServiceException(e.getMessage(),e) @TO@ Block@@ElseBody:{  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 4623 @LENGTH@ 61
------------INS ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @TO@ ReturnStatement@@ClassInstanceCreation:new AuthenticationServiceException(e.getMessage(),e) @AT@ 4630 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 4630 @LENGTH@ 3
---------------INS SimpleType@@AuthenticationServiceException @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 4634 @LENGTH@ 30
---------------INS MethodInvocation@@e.getMessage() @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 4665 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 4665 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 4667 @LENGTH@ 12
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 4681 @LENGTH@ 1


UPD MethodDeclaration@@KubernetesDeploymentsEndpointBuilder, MethodName:kubernetesDeployments, String path,  @TO@ static, KubernetesDeploymentsEndpointBuilder, MethodName:kubernetesDeployments, String path,  @AT@ 45317 @LENGTH@ 459
---INS Modifier@@static @TO@ MethodDeclaration@@KubernetesDeploymentsEndpointBuilder, MethodName:kubernetesDeployments, String path,  @AT@ 45280 @LENGTH@ 6


UPD FieldDeclaration@@private, ReactiveAuthenticationManagerResolver<ServerHttpRequest>, [authenticationManagerResolver] @TO@ private, ReactiveAuthenticationManagerResolver<ServerWebExchange>, [authenticationManagerResolver] @AT@ 2329 @LENGTH@ 95
---UPD ParameterizedType@@ReactiveAuthenticationManagerResolver<ServerHttpRequest> @TO@ ReactiveAuthenticationManagerResolver<ServerWebExchange> @AT@ 2337 @LENGTH@ 56
------UPD SimpleType@@ServerHttpRequest @TO@ ServerWebExchange @AT@ 2375 @LENGTH@ 17


INS MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @TO@ TypeDeclaration@@[@Neo4jIntegrationTest]RepositoryIT,  @AT@ 48725 @LENGTH@ 156
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @AT@ 48720 @LENGTH@ 4
---INS SimpleName@@MethodName:countBySimplePropertiesOred @TO@ MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @AT@ 48725 @LENGTH@ 27
---INS VariableDeclarationStatement@@long count=repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME); @TO@ MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @AT@ 48760 @LENGTH@ 83
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long count=repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME); @AT@ 48760 @LENGTH@ 4
------INS VariableDeclarationFragment@@count=repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME) @TO@ VariableDeclarationStatement@@long count=repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME); @AT@ 48765 @LENGTH@ 77
---------INS SimpleName@@count @TO@ VariableDeclarationFragment@@count=repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME) @AT@ 48765 @LENGTH@ 5
---------INS MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME) @TO@ VariableDeclarationFragment@@count=repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME) @AT@ 48773 @LENGTH@ 69
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME) @AT@ 48773 @LENGTH@ 10
------------INS SimpleName@@MethodName:countAllByNameOrName:[TEST_PERSON1_NAME, TEST_PERSON2_NAME] @TO@ MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME) @AT@ 48784 @LENGTH@ 58
---------------INS SimpleName@@TEST_PERSON1_NAME @TO@ SimpleName@@MethodName:countAllByNameOrName:[TEST_PERSON1_NAME, TEST_PERSON2_NAME] @AT@ 48805 @LENGTH@ 17
---------------INS SimpleName@@TEST_PERSON2_NAME @TO@ SimpleName@@MethodName:countAllByNameOrName:[TEST_PERSON1_NAME, TEST_PERSON2_NAME] @AT@ 48824 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(count).isEqualTo(2L) @TO@ MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @AT@ 48846 @LENGTH@ 32
------INS MethodInvocation@@assertThat(count).isEqualTo(2L) @TO@ ExpressionStatement@@MethodInvocation:assertThat(count).isEqualTo(2L) @AT@ 48846 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:assertThat:[count] @TO@ MethodInvocation@@assertThat(count).isEqualTo(2L) @AT@ 48846 @LENGTH@ 17
------------INS SimpleName@@count @TO@ MethodInvocation@@MethodName:assertThat:[count] @AT@ 48857 @LENGTH@ 5
---------INS SimpleName@@MethodName:isEqualTo:[2L] @TO@ MethodInvocation@@assertThat(count).isEqualTo(2L) @AT@ 48864 @LENGTH@ 13
------------INS NumberLiteral@@2L @TO@ SimpleName@@MethodName:isEqualTo:[2L] @AT@ 48874 @LENGTH@ 2


UPD MethodDeclaration@@default, TerminatingMapReduce<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, TerminatingMapReduce<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 5377 @LENGTH@ 138
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 5418 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5437 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 5462 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 5469 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 5469 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 5478 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 5484 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5490 @LENGTH@ 18


INS MethodDeclaration@@private, voidMethodName:EmbedMongoConfiguration,  @TO@ TypeDeclaration@@[public]EmbedMongoConfiguration,  @AT@ 1838 @LENGTH@ 41
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:EmbedMongoConfiguration,  @AT@ 1838 @LENGTH@ 7
---INS SimpleName@@MethodName:EmbedMongoConfiguration @TO@ MethodDeclaration@@private, voidMethodName:EmbedMongoConfiguration,  @AT@ 1846 @LENGTH@ 23


UPD MethodDeclaration@@public, voidMethodName:AWS2S3ClientIAMOptimizedImpl, AWS2S3Configuration configuration, int maxConnections,  @TO@ public, voidMethodName:AWS2S3ClientIAMOptimizedImpl, AWS2S3Configuration configuration,  @AT@ 2161 @LENGTH@ 306
---DEL SingleVariableDeclaration@@int maxConnections @AT@ 2232 @LENGTH@ 18
------DEL PrimitiveType@@int @AT@ 2232 @LENGTH@ 3
------DEL SimpleName@@maxConnections @AT@ 2236 @LENGTH@ 14
---DEL ExpressionStatement@@Assignment:this.maxConnections=maxConnections @AT@ 2424 @LENGTH@ 37
------DEL Assignment@@this.maxConnections=maxConnections @AT@ 2424 @LENGTH@ 36
---------DEL FieldAccess@@this.maxConnections @AT@ 2424 @LENGTH@ 19
------------DEL ThisExpression@@this @AT@ 2424 @LENGTH@ 4
------------DEL SimpleName@@maxConnections @AT@ 2429 @LENGTH@ 14
---------DEL Operator@@= @AT@ 2443 @LENGTH@ 1
---------DEL SimpleName@@maxConnections @AT@ 2446 @LENGTH@ 14


INS FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}"] @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareForTest({System.class}), abstract]BaseOAuth2AccessTokenJacksonTest,  @AT@ 2960 @LENGTH@ 138
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}"] @AT@ 2960 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}"] @AT@ 2970 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}"] @AT@ 2977 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}"] @AT@ 2983 @LENGTH@ 6
---INS VariableDeclarationFragment@@ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}" @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}"] @AT@ 2990 @LENGTH@ 107
------INS SimpleName@@ACCESS_TOKEN_ZERO_EXPIRES @TO@ VariableDeclarationFragment@@ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}" @AT@ 2990 @LENGTH@ 25
------INS StringLiteral@@"{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}" @TO@ VariableDeclarationFragment@@ACCESS_TOKEN_ZERO_EXPIRES="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"expires_in\":0}" @AT@ 3018 @LENGTH@ 79


UPD VariableDeclarationStatement@@Expression exp=camelContext.resolveLanguage("simple").createExpression(definition.getMessage()); @TO@ Expression exp=camelContext.resolveLanguage("simple").createExpression(msg); @AT@ 1948 @LENGTH@ 98
---UPD VariableDeclarationFragment@@exp=camelContext.resolveLanguage("simple").createExpression(definition.getMessage()) @TO@ exp=camelContext.resolveLanguage("simple").createExpression(msg) @AT@ 1959 @LENGTH@ 86
------UPD MethodInvocation@@camelContext.resolveLanguage("simple").createExpression(definition.getMessage()) @TO@ camelContext.resolveLanguage("simple").createExpression(msg) @AT@ 1965 @LENGTH@ 80
---------UPD SimpleName@@MethodName:createExpression:[definition.getMessage()] @TO@ MethodName:createExpression:[msg] @AT@ 2004 @LENGTH@ 41
------------DEL MethodInvocation@@definition.getMessage() @AT@ 2021 @LENGTH@ 23
---------------DEL SimpleName@@Name:definition @AT@ 2021 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 2032 @LENGTH@ 12
------------INS SimpleName@@msg @TO@ SimpleName@@MethodName:createExpression:[definition.getMessage()] @AT@ 2080 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:this.comments.addAll(Arrays.asList(comments)) @TO@ Assignment:this.comments=Arrays.asList(comments) @AT@ 6210 @LENGTH@ 46
---DEL MethodInvocation@@this.comments.addAll(Arrays.asList(comments)) @AT@ 6210 @LENGTH@ 45
------DEL FieldAccess@@this.comments @AT@ 6210 @LENGTH@ 13
------DEL SimpleName@@MethodName:addAll:[Arrays.asList(comments)] @AT@ 6224 @LENGTH@ 31
---INS Assignment@@this.comments=Arrays.asList(comments) @TO@ ExpressionStatement@@MethodInvocation:this.comments.addAll(Arrays.asList(comments)) @AT@ 6463 @LENGTH@ 39
------MOV MethodInvocation@@Arrays.asList(comments) @TO@ Assignment@@this.comments=Arrays.asList(comments) @AT@ 6231 @LENGTH@ 23
------INS FieldAccess@@this.comments @TO@ Assignment@@this.comments=Arrays.asList(comments) @AT@ 6463 @LENGTH@ 13
---------MOV ThisExpression@@this @TO@ FieldAccess@@this.comments @AT@ 6210 @LENGTH@ 4
---------MOV SimpleName@@comments @TO@ FieldAccess@@this.comments @AT@ 6215 @LENGTH@ 8
------INS Operator@@= @TO@ Assignment@@this.comments=Arrays.asList(comments) @AT@ 6476 @LENGTH@ 1


UPD IfStatement@@if (isIdProperty() && getFieldName() != ID_FIELD_NAME) {  LOG.warn("Customizing field name for id property not allowed! Custom name will not be considered!");} @TO@ if (isIdProperty() && hasExplicitFieldName()) {  String annotatedName=getAnnotatedFieldName();  if (!ID_FIELD_NAME.equals(annotatedName)) {    LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);  }} @AT@ 3005 @LENGTH@ 164
---DEL InfixExpression@@isIdProperty() && getFieldName() != ID_FIELD_NAME @AT@ 3009 @LENGTH@ 49
------DEL InfixExpression@@getFieldName() != ID_FIELD_NAME @AT@ 3027 @LENGTH@ 31
---------DEL MethodInvocation@@MethodName:getFieldName:[] @AT@ 3027 @LENGTH@ 14
---------DEL Operator@@!= @AT@ 3041 @LENGTH@ 2
---------DEL SimpleName@@ID_FIELD_NAME @AT@ 3045 @LENGTH@ 13
---INS InfixExpression@@isIdProperty() && hasExplicitFieldName() @TO@ IfStatement@@if (isIdProperty() && getFieldName() != ID_FIELD_NAME) {  LOG.warn("Customizing field name for id property not allowed! Custom name will not be considered!");} @AT@ 3009 @LENGTH@ 40
------MOV MethodInvocation@@MethodName:isIdProperty:[] @TO@ InfixExpression@@isIdProperty() && hasExplicitFieldName() @AT@ 3009 @LENGTH@ 14
------MOV Operator@@&& @TO@ InfixExpression@@isIdProperty() && hasExplicitFieldName() @AT@ 3023 @LENGTH@ 2
------INS MethodInvocation@@MethodName:hasExplicitFieldName:[] @TO@ InfixExpression@@isIdProperty() && hasExplicitFieldName() @AT@ 3027 @LENGTH@ 22
---INS Block@@ThenBody:{  String annotatedName=getAnnotatedFieldName();  if (!ID_FIELD_NAME.equals(annotatedName)) {    LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);  }} @TO@ IfStatement@@if (isIdProperty() && getFieldName() != ID_FIELD_NAME) {  LOG.warn("Customizing field name for id property not allowed! Custom name will not be considered!");} @AT@ 3051 @LENGTH@ 288
------INS VariableDeclarationStatement@@String annotatedName=getAnnotatedFieldName(); @TO@ Block@@ThenBody:{  String annotatedName=getAnnotatedFieldName();  if (!ID_FIELD_NAME.equals(annotatedName)) {    LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);  }} @AT@ 3057 @LENGTH@ 47
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String annotatedName=getAnnotatedFieldName(); @AT@ 3057 @LENGTH@ 6
---------INS VariableDeclarationFragment@@annotatedName=getAnnotatedFieldName() @TO@ VariableDeclarationStatement@@String annotatedName=getAnnotatedFieldName(); @AT@ 3064 @LENGTH@ 39
------------INS SimpleName@@annotatedName @TO@ VariableDeclarationFragment@@annotatedName=getAnnotatedFieldName() @AT@ 3064 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:getAnnotatedFieldName:[] @TO@ VariableDeclarationFragment@@annotatedName=getAnnotatedFieldName() @AT@ 3080 @LENGTH@ 23
------INS IfStatement@@if (!ID_FIELD_NAME.equals(annotatedName)) {  LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);} @TO@ Block@@ThenBody:{  String annotatedName=getAnnotatedFieldName();  if (!ID_FIELD_NAME.equals(annotatedName)) {    LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);  }} @AT@ 3108 @LENGTH@ 227
---------MOV Block@@ThenBody:{  LOG.warn("Customizing field name for id property not allowed! Custom name will not be considered!");} @TO@ IfStatement@@if (!ID_FIELD_NAME.equals(annotatedName)) {  LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);} @AT@ 3060 @LENGTH@ 109
------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Customizing field name for id property not allowed! Custom name will not be considered!") @TO@ MethodInvocation:LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName) @AT@ 3065 @LENGTH@ 100
---------------UPD MethodInvocation@@LOG.warn("Customizing field name for id property not allowed! Custom name will not be considered!") @TO@ LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName) @AT@ 3065 @LENGTH@ 99
------------------UPD SimpleName@@MethodName:warn:["Customizing field name for id property not allowed! Custom name will not be considered!"] @TO@ MethodName:warn:["Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!", owner.getName(), getName(), annotatedName] @AT@ 3069 @LENGTH@ 95
---------------------UPD StringLiteral@@"Customizing field name for id property not allowed! Custom name will not be considered!" @TO@ "Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!" @AT@ 3074 @LENGTH@ 89
---------------------INS MethodInvocation@@owner.getName() @TO@ SimpleName@@MethodName:warn:["Customizing field name for id property not allowed! Custom name will not be considered!"] @AT@ 3287 @LENGTH@ 15
------------------------INS SimpleName@@Name:owner @TO@ MethodInvocation@@owner.getName() @AT@ 3287 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@owner.getName() @AT@ 3293 @LENGTH@ 9
---------------------INS MethodInvocation@@MethodName:getName:[] @TO@ SimpleName@@MethodName:warn:["Customizing field name for id property not allowed! Custom name will not be considered!"] @AT@ 3304 @LENGTH@ 9
---------------------INS SimpleName@@annotatedName @TO@ SimpleName@@MethodName:warn:["Customizing field name for id property not allowed! Custom name will not be considered!"] @AT@ 3315 @LENGTH@ 13
---------INS PrefixExpression@@!ID_FIELD_NAME.equals(annotatedName) @TO@ IfStatement@@if (!ID_FIELD_NAME.equals(annotatedName)) {  LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);} @AT@ 3112 @LENGTH@ 36
------------INS Operator@@! @TO@ PrefixExpression@@!ID_FIELD_NAME.equals(annotatedName) @AT@ 3112 @LENGTH@ 1
------------INS MethodInvocation@@ID_FIELD_NAME.equals(annotatedName) @TO@ PrefixExpression@@!ID_FIELD_NAME.equals(annotatedName) @AT@ 3113 @LENGTH@ 35
---------------INS SimpleName@@Name:ID_FIELD_NAME @TO@ MethodInvocation@@ID_FIELD_NAME.equals(annotatedName) @AT@ 3113 @LENGTH@ 13
---------------INS SimpleName@@MethodName:equals:[annotatedName] @TO@ MethodInvocation@@ID_FIELD_NAME.equals(annotatedName) @AT@ 3127 @LENGTH@ 21
------------------INS SimpleName@@annotatedName @TO@ SimpleName@@MethodName:equals:[annotatedName] @AT@ 3134 @LENGTH@ 13
---UPD Block@@ThenBody:{  LOG.warn("Customizing field name for id property not allowed! Custom name will not be considered!");} @TO@ ThenBody:{  LOG.warn("Customizing field name for id property '{}.{}' is not allowed! Custom name ('{}') will not be considered!",owner.getName(),getName(),annotatedName);} @AT@ 3060 @LENGTH@ 109


INS MethodDeclaration@@private, voidMethodName:GridFsConverter,  @TO@ TypeDeclaration@@[@Converter(generateLoader=true), public]GridFsConverter,  @AT@ 1069 @LENGTH@ 33
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:GridFsConverter,  @AT@ 1069 @LENGTH@ 7
---INS SimpleName@@MethodName:GridFsConverter @TO@ MethodDeclaration@@private, voidMethodName:GridFsConverter,  @AT@ 1077 @LENGTH@ 15


INS MethodDeclaration@@void, MethodName:setOptions, Map<String,Object> options,  @TO@ TypeDeclaration@@[public]BeanHolder,  @AT@ 1264 @LENGTH@ 40
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1259 @LENGTH@ 4
---INS SimpleName@@MethodName:setOptions @TO@ MethodDeclaration@@void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1264 @LENGTH@ 10
---INS SingleVariableDeclaration@@Map<String,Object> options @TO@ MethodDeclaration@@void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1275 @LENGTH@ 27
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> options @AT@ 1275 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1275 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1279 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1287 @LENGTH@ 6
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@Map<String,Object> options @AT@ 1295 @LENGTH@ 7


DEL VariableDeclarationStatement@@List<Path> paths=new ArrayList<>(); @AT@ 10327 @LENGTH@ 37
---DEL ParameterizedType@@List<Path> @AT@ 10327 @LENGTH@ 10
------DEL SimpleType@@List @AT@ 10327 @LENGTH@ 4
------DEL SimpleType@@Path @AT@ 10332 @LENGTH@ 4
---DEL VariableDeclarationFragment@@paths=new ArrayList<>() @AT@ 10338 @LENGTH@ 25
------DEL SimpleName@@paths @AT@ 10338 @LENGTH@ 5
------DEL ClassInstanceCreation@@ArrayList<>[] @AT@ 10346 @LENGTH@ 17
---------DEL New@@new @AT@ 10346 @LENGTH@ 3
---------DEL ParameterizedType@@ArrayList<> @AT@ 10350 @LENGTH@ 11
------------DEL SimpleType@@ArrayList @AT@ 10350 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:GraphDatabase.driver("bolt://localhost:7687",AuthTokens.basic("neo4j","secret")) @TO@ MethodInvocation:neo4jConnectionSupport.getDriver() @AT@ 100168 @LENGTH@ 90
---UPD MethodInvocation@@GraphDatabase.driver("bolt://localhost:7687",AuthTokens.basic("neo4j","secret")) @TO@ neo4jConnectionSupport.getDriver() @AT@ 100175 @LENGTH@ 82
------DEL SimpleName@@Name:GraphDatabase @AT@ 100175 @LENGTH@ 13
------DEL SimpleName@@MethodName:driver:["bolt://localhost:7687", AuthTokens.basic("neo4j","secret")] @AT@ 100189 @LENGTH@ 68
---------DEL StringLiteral@@"bolt://localhost:7687" @AT@ 100196 @LENGTH@ 23
---------DEL MethodInvocation@@AuthTokens.basic("neo4j","secret") @AT@ 100221 @LENGTH@ 35
------MOV SimpleName@@Name:AuthTokens @TO@ MethodInvocation@@GraphDatabase.driver("bolt://localhost:7687",AuthTokens.basic("neo4j","secret")) @AT@ 100221 @LENGTH@ 10
------MOV SimpleName@@MethodName:basic:["neo4j", "secret"] @TO@ MethodInvocation@@GraphDatabase.driver("bolt://localhost:7687",AuthTokens.basic("neo4j","secret")) @AT@ 100232 @LENGTH@ 24
---------DEL StringLiteral@@"neo4j" @AT@ 100238 @LENGTH@ 7
---------DEL StringLiteral@@"secret" @AT@ 100247 @LENGTH@ 8


UPD MethodDeclaration@@default, TerminatingRemove<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, TerminatingRemove<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 4151 @LENGTH@ 135
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 4189 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 4208 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 4233 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 4240 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 4240 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 4249 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 4255 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 4261 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:this.register(new StringFormatFactory()).register(new DateFormatFactory()).register(new BooleanFormatFactory()).register(new BigIntegerFormatFactory()).register(new LocalTimeFormatFactory()).register(new LocalDateTimeFormatFactory()).register(new LocalDateFormatFactory()).register(new CharacterFormatFactory()).register(new EnumFormatFactory()).register(new BigDecimalFormatFactory()).register(new BigDecimalPatternFormatFactory()).register(new DoubleFormatFactory()).register(new DoublePatternFormatFactory()).register(new FloatFormatFactory()).register(new FloatPatternFormatFactory()).register(new LongFormatFactory()).register(new LongPatternFormatFactory()).register(new IntegerFormatFactory()).register(new IntegerPatternFormatFactory()).register(new ShortFormatFactory()).register(new ShortPatternFormatFactory()).register(new ByteFormatFactory()).register(new BytePatternFormatFactory()) @TO@ MethodInvocation:this.register(new StringFormatFactory()).register(new DateFormatFactory()).register(new BooleanFormatFactory()).register(new BigIntegerFormatFactory()).register(new LocalTimeFormatFactory()).register(new LocalDateTimeFormatFactory()).register(new LocalDateFormatFactory()).register(new ZonedDateTimeFormatFactory()).register(new CharacterFormatFactory()).register(new EnumFormatFactory()).register(new BigDecimalFormatFactory()).register(new BigDecimalPatternFormatFactory()).register(new DoubleFormatFactory()).register(new DoublePatternFormatFactory()).register(new FloatFormatFactory()).register(new FloatPatternFormatFactory()).register(new LongFormatFactory()).register(new LongPatternFormatFactory()).register(new IntegerFormatFactory()).register(new IntegerPatternFormatFactory()).register(new ShortFormatFactory()).register(new ShortPatternFormatFactory()).register(new ByteFormatFactory()).register(new BytePatternFormatFactory()) @AT@ 1887 @LENGTH@ 1271
---UPD MethodInvocation@@this.register(new StringFormatFactory()).register(new DateFormatFactory()).register(new BooleanFormatFactory()).register(new BigIntegerFormatFactory()).register(new LocalTimeFormatFactory()).register(new LocalDateTimeFormatFactory()).register(new LocalDateFormatFactory()).register(new CharacterFormatFactory()).register(new EnumFormatFactory()).register(new BigDecimalFormatFactory()).register(new BigDecimalPatternFormatFactory()).register(new DoubleFormatFactory()).register(new DoublePatternFormatFactory()).register(new FloatFormatFactory()).register(new FloatPatternFormatFactory()).register(new LongFormatFactory()).register(new LongPatternFormatFactory()).register(new IntegerFormatFactory()).register(new IntegerPatternFormatFactory()).register(new ShortFormatFactory()).register(new ShortPatternFormatFactory()).register(new ByteFormatFactory()).register(new BytePatternFormatFactory()) @TO@ this.register(new StringFormatFactory()).register(new DateFormatFactory()).register(new BooleanFormatFactory()).register(new BigIntegerFormatFactory()).register(new LocalTimeFormatFactory()).register(new LocalDateTimeFormatFactory()).register(new LocalDateFormatFactory()).register(new ZonedDateTimeFormatFactory()).register(new CharacterFormatFactory()).register(new EnumFormatFactory()).register(new BigDecimalFormatFactory()).register(new BigDecimalPatternFormatFactory()).register(new DoubleFormatFactory()).register(new DoublePatternFormatFactory()).register(new FloatFormatFactory()).register(new FloatPatternFormatFactory()).register(new LongFormatFactory()).register(new LongPatternFormatFactory()).register(new IntegerFormatFactory()).register(new IntegerPatternFormatFactory()).register(new ShortFormatFactory()).register(new ShortPatternFormatFactory()).register(new ByteFormatFactory()).register(new BytePatternFormatFactory()) @AT@ 1887 @LENGTH@ 1270
------INS MethodInvocation@@MethodName:register:[new ZonedDateTimeFormatFactory()] @TO@ MethodInvocation@@this.register(new StringFormatFactory()).register(new DateFormatFactory()).register(new BooleanFormatFactory()).register(new BigIntegerFormatFactory()).register(new LocalTimeFormatFactory()).register(new LocalDateTimeFormatFactory()).register(new LocalDateFormatFactory()).register(new CharacterFormatFactory()).register(new EnumFormatFactory()).register(new BigDecimalFormatFactory()).register(new BigDecimalPatternFormatFactory()).register(new DoubleFormatFactory()).register(new DoublePatternFormatFactory()).register(new FloatFormatFactory()).register(new FloatPatternFormatFactory()).register(new LongFormatFactory()).register(new LongPatternFormatFactory()).register(new IntegerFormatFactory()).register(new IntegerPatternFormatFactory()).register(new ShortFormatFactory()).register(new ShortPatternFormatFactory()).register(new ByteFormatFactory()).register(new BytePatternFormatFactory()) @AT@ 1887 @LENGTH@ 434
---------INS ClassInstanceCreation@@ZonedDateTimeFormatFactory[] @TO@ MethodInvocation@@MethodName:register:[new ZonedDateTimeFormatFactory()] @AT@ 2288 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@ZonedDateTimeFormatFactory[] @AT@ 2288 @LENGTH@ 3
------------INS SimpleType@@ZonedDateTimeFormatFactory @TO@ ClassInstanceCreation@@ZonedDateTimeFormatFactory[] @AT@ 2292 @LENGTH@ 26


UPD FieldDeclaration@@private, final, Random, [rnd=new Random(1530960934483l)] @TO@ private, final, Random, [rnd=new Random(1530960934483L)] @AT@ 994 @LENGTH@ 54
---UPD VariableDeclarationFragment@@rnd=new Random(1530960934483l) @TO@ rnd=new Random(1530960934483L) @AT@ 1015 @LENGTH@ 32
------UPD ClassInstanceCreation@@Random[1530960934483l] @TO@ Random[1530960934483L] @AT@ 1021 @LENGTH@ 26
---------UPD NumberLiteral@@1530960934483l @TO@ 1530960934483L @AT@ 1032 @LENGTH@ 14


DEL FieldDeclaration@@ReactiveClientRegistrationRepository, [clientRegistrationRepository] @AT@ 2118 @LENGTH@ 66
---DEL SimpleType@@ReactiveClientRegistrationRepository @AT@ 2118 @LENGTH@ 36
---DEL VariableDeclarationFragment@@clientRegistrationRepository @AT@ 2155 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 2155 @LENGTH@ 28


UPD IfStatement@@if (compoundCondition.operator == chainingOperator) {  this.conditions.addAll(compoundCondition.conditions);} else {  CompoundCondition inner=new CompoundCondition(chainingOperator);  inner.conditions.add(compoundCondition);  this.conditions.add(inner);} @TO@ if (this.operator == chainingOperator && chainingOperator == compoundCondition.operator) {  if (compoundCondition.canBeFlattenedWith(chainingOperator)) {    this.conditions.addAll(compoundCondition.conditions);  } else {    this.conditions.add(compoundCondition);  }} else {  CompoundCondition inner=new CompoundCondition(chainingOperator);  inner.conditions.add(compoundCondition);  this.conditions.add(inner);} @AT@ 3178 @LENGTH@ 276
---INS InfixExpression@@this.operator == chainingOperator && chainingOperator == compoundCondition.operator @TO@ IfStatement@@if (compoundCondition.operator == chainingOperator) {  this.conditions.addAll(compoundCondition.conditions);} else {  CompoundCondition inner=new CompoundCondition(chainingOperator);  inner.conditions.add(compoundCondition);  this.conditions.add(inner);} @AT@ 3182 @LENGTH@ 83
------INS InfixExpression@@this.operator == chainingOperator @TO@ InfixExpression@@this.operator == chainingOperator && chainingOperator == compoundCondition.operator @AT@ 3182 @LENGTH@ 33
---------INS FieldAccess@@this.operator @TO@ InfixExpression@@this.operator == chainingOperator @AT@ 3182 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.operator @AT@ 3182 @LENGTH@ 4
------------INS SimpleName@@operator @TO@ FieldAccess@@this.operator @AT@ 3187 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@this.operator == chainingOperator @AT@ 3195 @LENGTH@ 2
---------INS SimpleName@@chainingOperator @TO@ InfixExpression@@this.operator == chainingOperator @AT@ 3199 @LENGTH@ 16
------INS Operator@@&& @TO@ InfixExpression@@this.operator == chainingOperator && chainingOperator == compoundCondition.operator @AT@ 3215 @LENGTH@ 2
------INS InfixExpression@@chainingOperator == compoundCondition.operator @TO@ InfixExpression@@this.operator == chainingOperator && chainingOperator == compoundCondition.operator @AT@ 3219 @LENGTH@ 46
---------MOV QualifiedName@@compoundCondition.operator @TO@ InfixExpression@@chainingOperator == compoundCondition.operator @AT@ 3182 @LENGTH@ 26
---------INS SimpleName@@chainingOperator @TO@ InfixExpression@@chainingOperator == compoundCondition.operator @AT@ 3219 @LENGTH@ 16
---------INS Operator@@== @TO@ InfixExpression@@chainingOperator == compoundCondition.operator @AT@ 3235 @LENGTH@ 2
---DEL InfixExpression@@compoundCondition.operator == chainingOperator @AT@ 3182 @LENGTH@ 46
------DEL Operator@@== @AT@ 3208 @LENGTH@ 2
------DEL SimpleName@@chainingOperator @AT@ 3212 @LENGTH@ 16
---INS Block@@ThenBody:{  if (compoundCondition.canBeFlattenedWith(chainingOperator)) {    this.conditions.addAll(compoundCondition.conditions);  } else {    this.conditions.add(compoundCondition);  }} @TO@ IfStatement@@if (compoundCondition.operator == chainingOperator) {  this.conditions.addAll(compoundCondition.conditions);} else {  CompoundCondition inner=new CompoundCondition(chainingOperator);  inner.conditions.add(compoundCondition);  this.conditions.add(inner);} @AT@ 3267 @LENGTH@ 195
------INS IfStatement@@if (compoundCondition.canBeFlattenedWith(chainingOperator)) {  this.conditions.addAll(compoundCondition.conditions);} else {  this.conditions.add(compoundCondition);} @TO@ Block@@ThenBody:{  if (compoundCondition.canBeFlattenedWith(chainingOperator)) {    this.conditions.addAll(compoundCondition.conditions);  } else {    this.conditions.add(compoundCondition);  }} @AT@ 3273 @LENGTH@ 184
---------MOV Block@@ThenBody:{  this.conditions.addAll(compoundCondition.conditions);} @TO@ IfStatement@@if (compoundCondition.canBeFlattenedWith(chainingOperator)) {  this.conditions.addAll(compoundCondition.conditions);} else {  this.conditions.add(compoundCondition);} @AT@ 3230 @LENGTH@ 64
---------INS MethodInvocation@@compoundCondition.canBeFlattenedWith(chainingOperator) @TO@ IfStatement@@if (compoundCondition.canBeFlattenedWith(chainingOperator)) {  this.conditions.addAll(compoundCondition.conditions);} else {  this.conditions.add(compoundCondition);} @AT@ 3277 @LENGTH@ 54
------------INS SimpleName@@Name:compoundCondition @TO@ MethodInvocation@@compoundCondition.canBeFlattenedWith(chainingOperator) @AT@ 3277 @LENGTH@ 17
------------INS SimpleName@@MethodName:canBeFlattenedWith:[chainingOperator] @TO@ MethodInvocation@@compoundCondition.canBeFlattenedWith(chainingOperator) @AT@ 3295 @LENGTH@ 36
---------------INS SimpleName@@chainingOperator @TO@ SimpleName@@MethodName:canBeFlattenedWith:[chainingOperator] @AT@ 3314 @LENGTH@ 16
---------INS Block@@ElseBody:{  this.conditions.add(compoundCondition);} @TO@ IfStatement@@if (compoundCondition.canBeFlattenedWith(chainingOperator)) {  this.conditions.addAll(compoundCondition.conditions);} else {  this.conditions.add(compoundCondition);} @AT@ 3405 @LENGTH@ 52
------------INS ExpressionStatement@@MethodInvocation:this.conditions.add(compoundCondition) @TO@ Block@@ElseBody:{  this.conditions.add(compoundCondition);} @AT@ 3412 @LENGTH@ 39
---------------INS MethodInvocation@@this.conditions.add(compoundCondition) @TO@ ExpressionStatement@@MethodInvocation:this.conditions.add(compoundCondition) @AT@ 3412 @LENGTH@ 38
------------------INS FieldAccess@@this.conditions @TO@ MethodInvocation@@this.conditions.add(compoundCondition) @AT@ 3412 @LENGTH@ 15
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.conditions @AT@ 3412 @LENGTH@ 4
---------------------INS SimpleName@@conditions @TO@ FieldAccess@@this.conditions @AT@ 3417 @LENGTH@ 10
------------------INS SimpleName@@MethodName:add:[compoundCondition] @TO@ MethodInvocation@@this.conditions.add(compoundCondition) @AT@ 3428 @LENGTH@ 22
---------------------INS SimpleName@@compoundCondition @TO@ SimpleName@@MethodName:add:[compoundCondition] @AT@ 3432 @LENGTH@ 17


UPD ExpressionStatement@@Assignment:uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ Assignment:uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 2644 @LENGTH@ 119
---UPD Assignment@@uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 2644 @LENGTH@ 118
------UPD InfixExpression@@"netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ "netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 2650 @LENGTH@ 112
---------UPD StringLiteral@@"?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 2690 @LENGTH@ 72


UPD ReturnStatement@@MethodInvocation:handleSyslogAuditEvent(event,param) @TO@ MethodInvocation:handleUnknownEvent(event,param) @AT@ 4254 @LENGTH@ 44
---UPD MethodInvocation@@handleSyslogAuditEvent(event,param) @TO@ handleUnknownEvent(event,param) @AT@ 4261 @LENGTH@ 36
------UPD SimpleName@@MethodName:handleSyslogAuditEvent:[event, param] @TO@ MethodName:handleUnknownEvent:[event, param] @AT@ 4261 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:assertThat(result.get(0).score).isEqualTo(0.0F) @TO@ MethodInvocation:assertThat(result.get(0).score).isNull() @AT@ 6897 @LENGTH@ 48
---UPD MethodInvocation@@assertThat(result.get(0).score).isEqualTo(0.0F) @TO@ assertThat(result.get(0).score).isNull() @AT@ 6897 @LENGTH@ 47
------UPD SimpleName@@MethodName:isEqualTo:[0.0F] @TO@ MethodName:isNull:[] @AT@ 6929 @LENGTH@ 15
---------DEL NumberLiteral@@0.0F @AT@ 6939 @LENGTH@ 4


INS MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizationCodeGrantFilter, OncePerRequestFilter @AT@ 7578 @LENGTH@ 164
---INS Modifier@@public @TO@ MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @AT@ 7578 @LENGTH@ 6
---INS Modifier@@final @TO@ MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @AT@ 7585 @LENGTH@ 5
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @AT@ 7591 @LENGTH@ 4
---INS SimpleName@@MethodName:setRequestCache @TO@ MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @AT@ 7596 @LENGTH@ 15
---INS SingleVariableDeclaration@@RequestCache requestCache @TO@ MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @AT@ 7612 @LENGTH@ 25
------INS SimpleType@@RequestCache @TO@ SingleVariableDeclaration@@RequestCache requestCache @AT@ 7612 @LENGTH@ 12
------INS SimpleName@@requestCache @TO@ SingleVariableDeclaration@@RequestCache requestCache @AT@ 7625 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(requestCache,"requestCache cannot be null") @TO@ MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @AT@ 7643 @LENGTH@ 60
------INS MethodInvocation@@Assert.notNull(requestCache,"requestCache cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(requestCache,"requestCache cannot be null") @AT@ 7643 @LENGTH@ 59
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(requestCache,"requestCache cannot be null") @AT@ 7643 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[requestCache, "requestCache cannot be null"] @TO@ MethodInvocation@@Assert.notNull(requestCache,"requestCache cannot be null") @AT@ 7650 @LENGTH@ 52
------------INS SimpleName@@requestCache @TO@ SimpleName@@MethodName:notNull:[requestCache, "requestCache cannot be null"] @AT@ 7658 @LENGTH@ 12
------------INS StringLiteral@@"requestCache cannot be null" @TO@ SimpleName@@MethodName:notNull:[requestCache, "requestCache cannot be null"] @AT@ 7672 @LENGTH@ 29
---INS ExpressionStatement@@Assignment:this.requestCache=requestCache @TO@ MethodDeclaration@@public, final, void, MethodName:setRequestCache, RequestCache requestCache,  @AT@ 7706 @LENGTH@ 33
------INS Assignment@@this.requestCache=requestCache @TO@ ExpressionStatement@@Assignment:this.requestCache=requestCache @AT@ 7706 @LENGTH@ 32
---------INS FieldAccess@@this.requestCache @TO@ Assignment@@this.requestCache=requestCache @AT@ 7706 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ FieldAccess@@this.requestCache @AT@ 7706 @LENGTH@ 4
------------INS SimpleName@@requestCache @TO@ FieldAccess@@this.requestCache @AT@ 7711 @LENGTH@ 12
---------INS Operator@@= @TO@ Assignment@@this.requestCache=requestCache @AT@ 7723 @LENGTH@ 1
---------INS SimpleName@@requestCache @TO@ Assignment@@this.requestCache=requestCache @AT@ 7726 @LENGTH@ 12


MOV MethodDeclaration@@public, voidMethodName:ProviderManager, List<AuthenticationProvider> providers,  @TO@ TypeDeclaration@@[public]ProviderManager, [AuthenticationManager, MessageSourceAware, InitializingBean] @AT@ 5148 @LENGTH@ 92


UPD FieldDeclaration@@private, final, Map<PersistentProperty<?>,ResourceMapping>, [propertyCache=new HashMap<PersistentProperty<?>,ResourceMapping>()] @TO@ private, final, Map<PersistentProperty<?>,ResourceMapping>, [propertyCache=new ConcurrentReferenceHashMap<PersistentProperty<?>,ResourceMapping>()] @AT@ 1787 @LENGTH@ 128
---UPD VariableDeclarationFragment@@propertyCache=new HashMap<PersistentProperty<?>,ResourceMapping>() @TO@ propertyCache=new ConcurrentReferenceHashMap<PersistentProperty<?>,ResourceMapping>() @AT@ 1845 @LENGTH@ 69
------UPD ClassInstanceCreation@@HashMap<PersistentProperty<?>,ResourceMapping>[] @TO@ ConcurrentReferenceHashMap<PersistentProperty<?>,ResourceMapping>[] @AT@ 1861 @LENGTH@ 53
---------UPD ParameterizedType@@HashMap<PersistentProperty<?>,ResourceMapping> @TO@ ConcurrentReferenceHashMap<PersistentProperty<?>,ResourceMapping> @AT@ 1865 @LENGTH@ 47
------------UPD SimpleType@@HashMap @TO@ ConcurrentReferenceHashMap @AT@ 1865 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:form.add("grant_type","refresh_token") @TO@ MethodInvocation:form.add(OAuth2Utils.GRANT_TYPE,"refresh_token") @AT@ 2020 @LENGTH@ 40
---UPD MethodInvocation@@form.add("grant_type","refresh_token") @TO@ form.add(OAuth2Utils.GRANT_TYPE,"refresh_token") @AT@ 2020 @LENGTH@ 39
------UPD SimpleName@@MethodName:add:["grant_type", "refresh_token"] @TO@ MethodName:add:[OAuth2Utils.GRANT_TYPE, "refresh_token"] @AT@ 2025 @LENGTH@ 34
---------DEL StringLiteral@@"grant_type" @AT@ 2029 @LENGTH@ 12
---------INS QualifiedName@@OAuth2Utils.GRANT_TYPE @TO@ SimpleName@@MethodName:add:["grant_type", "refresh_token"] @AT@ 2097 @LENGTH@ 22
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 2097 @LENGTH@ 11
------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 2109 @LENGTH@ 10


UPD Block@@ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2544 @LENGTH@ 223
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2544 @LENGTH@ 223
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 2773 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2787 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 2793 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2793 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2797 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2814 @LENGTH@ 72
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2544 @LENGTH@ 223
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 2773 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2787 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 2793 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2793 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2797 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2814 @LENGTH@ 72


INS MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @TO@ TypeDeclaration@@[public]Message, [Serializable] @AT@ 4926 @LENGTH@ 208
---MOV VariableDeclarationStatement@@String encoding=nullProps ? null : this.messageProperties.getContentEncoding(); @TO@ MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @AT@ 4400 @LENGTH@ 81
---MOV IfStatement@@if (encoding == null) {  encoding=bodyEncoding;} @TO@ MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @AT@ 4485 @LENGTH@ 57
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @AT@ 4926 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @AT@ 4934 @LENGTH@ 6
---INS SimpleName@@MethodName:encoding @TO@ MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @AT@ 4941 @LENGTH@ 8
---INS SingleVariableDeclaration@@boolean nullProps @TO@ MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @AT@ 4950 @LENGTH@ 17
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean nullProps @AT@ 4950 @LENGTH@ 7
------INS SimpleName@@nullProps @TO@ SingleVariableDeclaration@@boolean nullProps @AT@ 4958 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:encoding @TO@ MethodDeclaration@@private, String, MethodName:encoding, boolean nullProps,  @AT@ 5115 @LENGTH@ 16
------INS SimpleName@@encoding @TO@ ReturnStatement@@SimpleName:encoding @AT@ 5122 @LENGTH@ 8


UPD MethodDeclaration@@voidMethodName:OidcIdTokenMixin, @JsonProperty("tokenValue") String tokenValue, @JsonProperty("issuedAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant issuedAt, @JsonProperty("expiresAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant expiresAt, @JsonProperty("claims") Map<String,Object> claims,  @TO@ voidMethodName:OidcIdTokenMixin, @JsonProperty("tokenValue") String tokenValue, @JsonProperty("issuedAt") Instant issuedAt, @JsonProperty("expiresAt") Instant expiresAt, @JsonProperty("claims") Map<String,Object> claims,  @AT@ 1674 @LENGTH@ 381
---UPD SingleVariableDeclaration@@@JsonProperty("issuedAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant issuedAt @TO@ @JsonProperty("issuedAt") Instant issuedAt @AT@ 1745 @LENGTH@ 121
---UPD SingleVariableDeclaration@@@JsonProperty("expiresAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant expiresAt @TO@ @JsonProperty("expiresAt") Instant expiresAt @AT@ 1871 @LENGTH@ 123


UPD ReturnStatement@@SimpleName:DEFAULT @TO@ SimpleName:baseStability @AT@ 1742 @LENGTH@ 15
---UPD SimpleName@@DEFAULT @TO@ baseStability @AT@ 1749 @LENGTH@ 7


UPD MethodDeclaration@@void, MethodName:encode, final byte[] in, int inPos, final int inAvail, final Context context,  @TO@ void, MethodName:encode, final byte[] input, int inPos, final int inAvail, final Context context,  @AT@ 21120 @LENGTH@ 6243
---UPD SingleVariableDeclaration@@final byte[] in @TO@ final byte[] input @AT@ 21127 @LENGTH@ 15
------UPD SimpleName@@in @TO@ input @AT@ 21140 @LENGTH@ 2
---UPD IfStatement@@if (inAvail < 0) {  context.eof=true;  if (0 == context.modulus && lineLength == 0) {    return;  }  final byte[] buffer=ensureBufferSize(encodeSize,context);  final int savedPos=context.pos;switch (context.modulus) {case 0:    break;case 1:  buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 3) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 2) & MASK_5BITS];buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;break;case 2:buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 11) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 6) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 1) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 4) & MASK_5BITS];buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;break;case 3:buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 19) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 14) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 9) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 4) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 1) & MASK_5BITS];buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;break;case 4:buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 27) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 22) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 17) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 12) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 7) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 2) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 3) & MASK_5BITS];buffer[context.pos++]=pad;break;default :throw new IllegalStateException("Impossible modulus " + context.modulus);}context.currentLinePos+=context.pos - savedPos;if (lineLength > 0 && context.currentLinePos > 0) {System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);context.pos+=lineSeparator.length;}} else {for (int i=0; i < inAvail; i++) {final byte[] buffer=ensureBufferSize(encodeSize,context);context.modulus=(context.modulus + 1) % BYTES_PER_UNENCODED_BLOCK;int b=in[inPos++];if (b < 0) {b+=256;}context.lbitWorkArea=(context.lbitWorkArea << 8) + b;if (0 == context.modulus) {buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)context.lbitWorkArea & MASK_5BITS];context.currentLinePos+=BYTES_PER_ENCODED_BLOCK;if (lineLength > 0 && lineLength <= context.currentLinePos) {System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);context.pos+=lineSeparator.length;context.currentLinePos=0;}}}} @TO@ if (inAvail < 0) {  context.eof=true;  if (0 == context.modulus && lineLength == 0) {    return;  }  final byte[] buffer=ensureBufferSize(encodeSize,context);  final int savedPos=context.pos;switch (context.modulus) {case 0:    break;case 1:  buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 3) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 2) & MASK_5BITS];buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;break;case 2:buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 11) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 6) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 1) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 4) & MASK_5BITS];buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;break;case 3:buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 19) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 14) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 9) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 4) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 1) & MASK_5BITS];buffer[context.pos++]=pad;buffer[context.pos++]=pad;buffer[context.pos++]=pad;break;case 4:buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 27) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 22) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 17) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 12) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 7) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 2) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea << 3) & MASK_5BITS];buffer[context.pos++]=pad;break;default :throw new IllegalStateException("Impossible modulus " + context.modulus);}context.currentLinePos+=context.pos - savedPos;if (lineLength > 0 && context.currentLinePos > 0) {System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);context.pos+=lineSeparator.length;}} else {for (int i=0; i < inAvail; i++) {final byte[] buffer=ensureBufferSize(encodeSize,context);context.modulus=(context.modulus + 1) % BYTES_PER_UNENCODED_BLOCK;int b=input[inPos++];if (b < 0) {b+=256;}context.lbitWorkArea=(context.lbitWorkArea << 8) + b;if (0 == context.modulus) {buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];buffer[context.pos++]=encodeTable[(int)context.lbitWorkArea & MASK_5BITS];context.currentLinePos+=BYTES_PER_ENCODED_BLOCK;if (lineLength > 0 && lineLength <= context.currentLinePos) {System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);context.pos+=lineSeparator.length;context.currentLinePos=0;}}}} @AT@ 21424 @LENGTH@ 5933
------UPD Block@@ElseBody:{  for (int i=0; i < inAvail; i++) {    final byte[] buffer=ensureBufferSize(encodeSize,context);    context.modulus=(context.modulus + 1) % BYTES_PER_UNENCODED_BLOCK;    int b=in[inPos++];    if (b < 0) {      b+=256;    }    context.lbitWorkArea=(context.lbitWorkArea << 8) + b;    if (0 == context.modulus) {      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)context.lbitWorkArea & MASK_5BITS];      context.currentLinePos+=BYTES_PER_ENCODED_BLOCK;      if (lineLength > 0 && lineLength <= context.currentLinePos) {        System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);        context.pos+=lineSeparator.length;        context.currentLinePos=0;      }    }  }} @TO@ ElseBody:{  for (int i=0; i < inAvail; i++) {    final byte[] buffer=ensureBufferSize(encodeSize,context);    context.modulus=(context.modulus + 1) % BYTES_PER_UNENCODED_BLOCK;    int b=input[inPos++];    if (b < 0) {      b+=256;    }    context.lbitWorkArea=(context.lbitWorkArea << 8) + b;    if (0 == context.modulus) {      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];      buffer[context.pos++]=encodeTable[(int)context.lbitWorkArea & MASK_5BITS];      context.currentLinePos+=BYTES_PER_ENCODED_BLOCK;      if (lineLength > 0 && lineLength <= context.currentLinePos) {        System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);        context.pos+=lineSeparator.length;        context.currentLinePos=0;      }    }  }} @AT@ 25592 @LENGTH@ 1765
---------UPD ForStatement@@for (int i=0; i < inAvail; i++) {  final byte[] buffer=ensureBufferSize(encodeSize,context);  context.modulus=(context.modulus + 1) % BYTES_PER_UNENCODED_BLOCK;  int b=in[inPos++];  if (b < 0) {    b+=256;  }  context.lbitWorkArea=(context.lbitWorkArea << 8) + b;  if (0 == context.modulus) {    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)context.lbitWorkArea & MASK_5BITS];    context.currentLinePos+=BYTES_PER_ENCODED_BLOCK;    if (lineLength > 0 && lineLength <= context.currentLinePos) {      System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);      context.pos+=lineSeparator.length;      context.currentLinePos=0;    }  }} @TO@ for (int i=0; i < inAvail; i++) {  final byte[] buffer=ensureBufferSize(encodeSize,context);  context.modulus=(context.modulus + 1) % BYTES_PER_UNENCODED_BLOCK;  int b=input[inPos++];  if (b < 0) {    b+=256;  }  context.lbitWorkArea=(context.lbitWorkArea << 8) + b;  if (0 == context.modulus) {    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];    buffer[context.pos++]=encodeTable[(int)context.lbitWorkArea & MASK_5BITS];    context.currentLinePos+=BYTES_PER_ENCODED_BLOCK;    if (lineLength > 0 && lineLength <= context.currentLinePos) {      System.arraycopy(lineSeparator,0,buffer,context.pos,lineSeparator.length);      context.pos+=lineSeparator.length;      context.currentLinePos=0;    }  }} @AT@ 25606 @LENGTH@ 1741
------------UPD VariableDeclarationStatement@@int b=in[inPos++]; @TO@ int b=input[inPos++]; @AT@ 25818 @LENGTH@ 20
---------------UPD VariableDeclarationFragment@@b=in[inPos++] @TO@ b=input[inPos++] @AT@ 25822 @LENGTH@ 15
------------------UPD ArrayAccess@@in[inPos++] @TO@ input[inPos++] @AT@ 25826 @LENGTH@ 11
---------------------UPD SimpleName@@in @TO@ input @AT@ 25826 @LENGTH@ 2


UPD VariableDeclarationStatement@@Character fourth=headerName.charAt(3); @TO@ char fourth=headerName.charAt(3); @AT@ 17808 @LENGTH@ 40
---DEL SimpleType@@Character @AT@ 17808 @LENGTH@ 9
---INS PrimitiveType@@char @TO@ VariableDeclarationStatement@@Character fourth=headerName.charAt(3); @AT@ 17808 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(new Document("$and",Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.superviser","wonderwoman")))) @TO@ MethodInvocation:assertThat(target).isEqualTo(new Document("$and",Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.supervisor","wonderwoman")))) @AT@ 11818 @LENGTH@ 180
---UPD MethodInvocation@@assertThat(target).isEqualTo(new Document("$and",Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.superviser","wonderwoman")))) @TO@ assertThat(target).isEqualTo(new Document("$and",Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.supervisor","wonderwoman")))) @AT@ 11818 @LENGTH@ 179
------UPD SimpleName@@MethodName:isEqualTo:[new Document("$and",Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.superviser","wonderwoman")))] @TO@ MethodName:isEqualTo:[new Document("$and",Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.supervisor","wonderwoman")))] @AT@ 11842 @LENGTH@ 155
---------UPD ClassInstanceCreation@@Document["$and", Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.superviser","wonderwoman"))] @TO@ Document["$and", Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.supervisor","wonderwoman"))] @AT@ 11852 @LENGTH@ 144
------------UPD MethodInvocation@@Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.superviser","wonderwoman")) @TO@ Arrays.asList(new Document("_class",new Document("$eq","region")),new Document("user.supervisor","wonderwoman")) @AT@ 11873 @LENGTH@ 122
---------------UPD SimpleName@@MethodName:asList:[new Document("_class",new Document("$eq","region")), new Document("user.superviser","wonderwoman")] @TO@ MethodName:asList:[new Document("_class",new Document("$eq","region")), new Document("user.supervisor","wonderwoman")] @AT@ 11880 @LENGTH@ 115
------------------UPD ClassInstanceCreation@@Document["user.superviser", "wonderwoman"] @TO@ Document["user.supervisor", "wonderwoman"] @AT@ 11948 @LENGTH@ 46
---------------------UPD StringLiteral@@"user.superviser" @TO@ "user.supervisor" @AT@ 11961 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:OAuth2Utils.parseParameterList(request.getParameter("scope")) @TO@ MethodInvocation:OAuth2Utils.parseParameterList(request.getParameter(OAuth2Utils.SCOPE)) @AT@ 9053 @LENGTH@ 69
---UPD MethodInvocation@@OAuth2Utils.parseParameterList(request.getParameter("scope")) @TO@ OAuth2Utils.parseParameterList(request.getParameter(OAuth2Utils.SCOPE)) @AT@ 9060 @LENGTH@ 61
------UPD SimpleName@@MethodName:parseParameterList:[request.getParameter("scope")] @TO@ MethodName:parseParameterList:[request.getParameter(OAuth2Utils.SCOPE)] @AT@ 9072 @LENGTH@ 49
---------UPD MethodInvocation@@request.getParameter("scope") @TO@ request.getParameter(OAuth2Utils.SCOPE) @AT@ 9091 @LENGTH@ 29
------------UPD SimpleName@@MethodName:getParameter:["scope"] @TO@ MethodName:getParameter:[OAuth2Utils.SCOPE] @AT@ 9099 @LENGTH@ 21
---------------DEL StringLiteral@@"scope" @AT@ 9112 @LENGTH@ 7
---------------INS QualifiedName@@OAuth2Utils.SCOPE @TO@ SimpleName@@MethodName:getParameter:["scope"] @AT@ 9122 @LENGTH@ 17
------------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.SCOPE @AT@ 9122 @LENGTH@ 11
------------------INS SimpleName@@SCOPE @TO@ QualifiedName@@OAuth2Utils.SCOPE @AT@ 9134 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException) @TO@ MethodInvocation:Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException) @AT@ 4479 @LENGTH@ 157
---UPD MethodInvocation@@Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException) @TO@ Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException) @AT@ 4479 @LENGTH@ 156
------UPD SimpleName@@MethodName:assertTrue:[error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException] @TO@ MethodName:assertTrue:[error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException] @AT@ 4486 @LENGTH@ 149
---------UPD InstanceofExpression@@error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException @TO@ error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException @AT@ 4497 @LENGTH@ 137
------------UPD SimpleType@@UnresolvedAddressException @TO@ UnknownHostException @AT@ 4608 @LENGTH@ 26


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 14154 @LENGTH@ 3863
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 14169 @LENGTH@ 7


INS IfStatement@@if (useSecureCookie == null) {  cookie.setSecure(request.isSecure());} else {  cookie.setSecure(useSecureCookie);} @TO@ MethodDeclaration@@protected, void, MethodName:cancelCookie, HttpServletRequest request, HttpServletResponse response,  @AT@ 13628 @LENGTH@ 126
---INS InfixExpression@@useSecureCookie == null @TO@ IfStatement@@if (useSecureCookie == null) {  cookie.setSecure(request.isSecure());} else {  cookie.setSecure(useSecureCookie);} @AT@ 13632 @LENGTH@ 23
------INS SimpleName@@useSecureCookie @TO@ InfixExpression@@useSecureCookie == null @AT@ 13632 @LENGTH@ 15
------INS Operator@@== @TO@ InfixExpression@@useSecureCookie == null @AT@ 13647 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@useSecureCookie == null @AT@ 13651 @LENGTH@ 4
---INS Block@@ThenBody:{  cookie.setSecure(request.isSecure());} @TO@ IfStatement@@if (useSecureCookie == null) {  cookie.setSecure(request.isSecure());} else {  cookie.setSecure(useSecureCookie);} @AT@ 13657 @LENGTH@ 46
------INS ExpressionStatement@@MethodInvocation:cookie.setSecure(request.isSecure()) @TO@ Block@@ThenBody:{  cookie.setSecure(request.isSecure());} @AT@ 13662 @LENGTH@ 37
---------INS MethodInvocation@@cookie.setSecure(request.isSecure()) @TO@ ExpressionStatement@@MethodInvocation:cookie.setSecure(request.isSecure()) @AT@ 13662 @LENGTH@ 36
------------INS SimpleName@@Name:cookie @TO@ MethodInvocation@@cookie.setSecure(request.isSecure()) @AT@ 13662 @LENGTH@ 6
------------INS SimpleName@@MethodName:setSecure:[request.isSecure()] @TO@ MethodInvocation@@cookie.setSecure(request.isSecure()) @AT@ 13669 @LENGTH@ 29
---------------INS MethodInvocation@@request.isSecure() @TO@ SimpleName@@MethodName:setSecure:[request.isSecure()] @AT@ 13679 @LENGTH@ 18
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.isSecure() @AT@ 13679 @LENGTH@ 7
------------------INS SimpleName@@MethodName:isSecure:[] @TO@ MethodInvocation@@request.isSecure() @AT@ 13687 @LENGTH@ 10
---INS Block@@ElseBody:{  cookie.setSecure(useSecureCookie);} @TO@ IfStatement@@if (useSecureCookie == null) {  cookie.setSecure(request.isSecure());} else {  cookie.setSecure(useSecureCookie);} @AT@ 13711 @LENGTH@ 43
------INS ExpressionStatement@@MethodInvocation:cookie.setSecure(useSecureCookie) @TO@ Block@@ElseBody:{  cookie.setSecure(useSecureCookie);} @AT@ 13716 @LENGTH@ 34
---------INS MethodInvocation@@cookie.setSecure(useSecureCookie) @TO@ ExpressionStatement@@MethodInvocation:cookie.setSecure(useSecureCookie) @AT@ 13716 @LENGTH@ 33
------------INS SimpleName@@Name:cookie @TO@ MethodInvocation@@cookie.setSecure(useSecureCookie) @AT@ 13716 @LENGTH@ 6
------------INS SimpleName@@MethodName:setSecure:[useSecureCookie] @TO@ MethodInvocation@@cookie.setSecure(useSecureCookie) @AT@ 13723 @LENGTH@ 26
---------------INS SimpleName@@useSecureCookie @TO@ SimpleName@@MethodName:setSecure:[useSecureCookie] @AT@ 13733 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:s3Client=configuration.getAmazonS3Client() != null ? configuration.getAmazonS3Client() : AWS2S3ClientFactory.getAWSS3Client(configuration,getMaxConnections()).getS3Client() @TO@ Assignment:s3Client=configuration.getAmazonS3Client() != null ? configuration.getAmazonS3Client() : AWS2S3ClientFactory.getAWSS3Client(configuration).getS3Client() @AT@ 3869 @LENGTH@ 176
---UPD Assignment@@s3Client=configuration.getAmazonS3Client() != null ? configuration.getAmazonS3Client() : AWS2S3ClientFactory.getAWSS3Client(configuration,getMaxConnections()).getS3Client() @TO@ s3Client=configuration.getAmazonS3Client() != null ? configuration.getAmazonS3Client() : AWS2S3ClientFactory.getAWSS3Client(configuration).getS3Client() @AT@ 3869 @LENGTH@ 175
------UPD ConditionalExpression@@configuration.getAmazonS3Client() != null ? configuration.getAmazonS3Client() : AWS2S3ClientFactory.getAWSS3Client(configuration,getMaxConnections()).getS3Client() @TO@ configuration.getAmazonS3Client() != null ? configuration.getAmazonS3Client() : AWS2S3ClientFactory.getAWSS3Client(configuration).getS3Client() @AT@ 3880 @LENGTH@ 164
---------UPD MethodInvocation@@AWS2S3ClientFactory.getAWSS3Client(configuration,getMaxConnections()).getS3Client() @TO@ AWS2S3ClientFactory.getAWSS3Client(configuration).getS3Client() @AT@ 3960 @LENGTH@ 84
------------UPD MethodInvocation@@MethodName:getAWSS3Client:[configuration, getMaxConnections()] @TO@ MethodName:getAWSS3Client:[configuration] @AT@ 3960 @LENGTH@ 70
---------------DEL MethodInvocation@@MethodName:getMaxConnections:[] @AT@ 4010 @LENGTH@ 19


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.26.0.Final").dependency("org.kie:kie-dmn-api:7.26.0.Final").dependency("org.kie:kie-dmn-model:7.26.0.Final").dependency("org.kie:kie-internal:7.26.0.Final").dependency("org.drools:drools-compiler:7.26.0.Final").dependency("org.drools:drools-core:7.26.0.Final").unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @AT@ 1441 @LENGTH@ 555
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.26.0.Final").dependency("org.kie:kie-dmn-api:7.26.0.Final").dependency("org.kie:kie-dmn-model:7.26.0.Final").dependency("org.kie:kie-internal:7.26.0.Final").dependency("org.drools:drools-compiler:7.26.0.Final").dependency("org.drools:drools-core:7.26.0.Final").unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 547
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.26.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-core:7.30.0.Final"] @AT@ 1448 @LENGTH@ 479
---------UPD StringLiteral@@"org.drools:drools-core:7.26.0.Final" @TO@ "org.drools:drools-core:7.30.0.Final" @AT@ 1889 @LENGTH@ 37
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.26.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-compiler:7.30.0.Final"] @AT@ 1448 @LENGTH@ 412
---------UPD StringLiteral@@"org.drools:drools-compiler:7.26.0.Final" @TO@ "org.drools:drools-compiler:7.30.0.Final" @AT@ 1818 @LENGTH@ 41
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-internal:7.26.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-internal:7.30.0.Final"] @AT@ 1448 @LENGTH@ 341
---------UPD StringLiteral@@"org.kie:kie-internal:7.26.0.Final" @TO@ "org.kie:kie-internal:7.30.0.Final" @AT@ 1753 @LENGTH@ 35
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-model:7.26.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-dmn-model:7.30.0.Final"] @AT@ 1448 @LENGTH@ 276
---------UPD StringLiteral@@"org.kie:kie-dmn-model:7.26.0.Final" @TO@ "org.kie:kie-dmn-model:7.30.0.Final" @AT@ 1687 @LENGTH@ 36
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-api:7.26.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-dmn-api:7.30.0.Final"] @AT@ 1448 @LENGTH@ 210
---------UPD StringLiteral@@"org.kie:kie-dmn-api:7.26.0.Final" @TO@ "org.kie:kie-dmn-api:7.30.0.Final" @AT@ 1623 @LENGTH@ 34
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-api:7.26.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-api:7.30.0.Final"] @AT@ 1448 @LENGTH@ 146
---------UPD StringLiteral@@"org.kie:kie-api:7.26.0.Final" @TO@ "org.kie:kie-api:7.30.0.Final" @AT@ 1563 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:setProperties(processor,parameters) @TO@ MethodInvocation:holder.setOptions(parameters) @AT@ 5271 @LENGTH@ 37
---UPD MethodInvocation@@setProperties(processor,parameters) @TO@ holder.setOptions(parameters) @AT@ 5271 @LENGTH@ 36
------INS SimpleName@@Name:holder @TO@ MethodInvocation@@setProperties(processor,parameters) @AT@ 5271 @LENGTH@ 6
------UPD SimpleName@@MethodName:setProperties:[processor, parameters] @TO@ MethodName:setOptions:[parameters] @AT@ 5271 @LENGTH@ 36
---------DEL SimpleName@@processor @AT@ 5285 @LENGTH@ 9


UPD MethodDeclaration@@public, final, OngoingReadingAndReturn, MethodName:orderBy, SortItem... sortItem,  @TO@ public, final, OngoingMatchAndReturnWithOrder, MethodName:orderBy, SortItem... sortItem,  @AT@ 8939 @LENGTH@ 123
---UPD SimpleType@@OngoingReadingAndReturn @TO@ OngoingMatchAndReturnWithOrder @AT@ 8952 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests(authorizeRequests -> authorizeRequests.mvcMatchers("/message/**").hasAuthority("SCOPE_message:read").anyRequest().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.opaqueToken(opaqueToken -> opaqueToken.introspectionUri(this.introspectionUri).introspectionClientCredentials(this.clientId,this.clientSecret))) @TO@ MethodInvocation:http.authorizeRequests(authorizeRequests -> authorizeRequests.antMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").antMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyRequest().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.opaqueToken(opaqueToken -> opaqueToken.introspectionUri(this.introspectionUri).introspectionClientCredentials(this.clientId,this.clientSecret))) @AT@ 1528 @LENGTH@ 436
---UPD MethodInvocation@@http.authorizeRequests(authorizeRequests -> authorizeRequests.mvcMatchers("/message/**").hasAuthority("SCOPE_message:read").anyRequest().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.opaqueToken(opaqueToken -> opaqueToken.introspectionUri(this.introspectionUri).introspectionClientCredentials(this.clientId,this.clientSecret))) @TO@ http.authorizeRequests(authorizeRequests -> authorizeRequests.antMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").antMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyRequest().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.opaqueToken(opaqueToken -> opaqueToken.introspectionUri(this.introspectionUri).introspectionClientCredentials(this.clientId,this.clientSecret))) @AT@ 1528 @LENGTH@ 435
------UPD MethodInvocation@@MethodName:authorizeRequests:[authorizeRequests -> authorizeRequests.mvcMatchers("/message/**").hasAuthority("SCOPE_message:read").anyRequest().authenticated()] @TO@ MethodName:authorizeRequests:[authorizeRequests -> authorizeRequests.antMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").antMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyRequest().authenticated()] @AT@ 1528 @LENGTH@ 177
---------UPD LambdaExpression@@authorizeRequests -> authorizeRequests.mvcMatchers("/message/**").hasAuthority("SCOPE_message:read").anyRequest().authenticated() @TO@ authorizeRequests -> authorizeRequests.antMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").antMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyRequest().authenticated() @AT@ 1555 @LENGTH@ 145
------------UPD MethodInvocation@@authorizeRequests.mvcMatchers("/message/**").hasAuthority("SCOPE_message:read").anyRequest().authenticated() @TO@ authorizeRequests.antMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").antMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyRequest().authenticated() @AT@ 1580 @LENGTH@ 120
---------------UPD MethodInvocation@@MethodName:mvcMatchers:["/message/**"] @TO@ MethodName:antMatchers:[HttpMethod.GET, "/message/**"] @AT@ 1580 @LENGTH@ 50
------------------INS QualifiedName@@HttpMethod.GET @TO@ MethodInvocation@@MethodName:mvcMatchers:["/message/**"] @AT@ 1660 @LENGTH@ 14
---------------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.GET @AT@ 1660 @LENGTH@ 10
---------------------INS SimpleName@@GET @TO@ QualifiedName@@HttpMethod.GET @AT@ 1671 @LENGTH@ 3
---------------INS MethodInvocation@@MethodName:hasAuthority:["SCOPE_message:write"] @TO@ MethodInvocation@@authorizeRequests.mvcMatchers("/message/**").hasAuthority("SCOPE_message:read").anyRequest().authenticated() @AT@ 1624 @LENGTH@ 187
------------------INS StringLiteral@@"SCOPE_message:write" @TO@ MethodInvocation@@MethodName:hasAuthority:["SCOPE_message:write"] @AT@ 1789 @LENGTH@ 21
---------------INS MethodInvocation@@MethodName:antMatchers:[HttpMethod.POST, "/message/**"] @TO@ MethodInvocation@@authorizeRequests.mvcMatchers("/message/**").hasAuthority("SCOPE_message:read").anyRequest().authenticated() @AT@ 1624 @LENGTH@ 151
------------------INS QualifiedName@@HttpMethod.POST @TO@ MethodInvocation@@MethodName:antMatchers:[HttpMethod.POST, "/message/**"] @AT@ 1744 @LENGTH@ 15
---------------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.POST @AT@ 1744 @LENGTH@ 10
---------------------INS SimpleName@@POST @TO@ QualifiedName@@HttpMethod.POST @AT@ 1755 @LENGTH@ 4
------------------INS StringLiteral@@"/message/**" @TO@ MethodInvocation@@MethodName:antMatchers:[HttpMethod.POST, "/message/**"] @AT@ 1761 @LENGTH@ 13


UPD ReturnStatement@@InfixExpression:"refresh_token".equals(parameters.get("grant_type")) && parameters.get("refresh_token") != null @TO@ MethodInvocation:"refresh_token".equals(parameters.get("grant_type")) @AT@ 8998 @LENGTH@ 103
---DEL InfixExpression@@"refresh_token".equals(parameters.get("grant_type")) && parameters.get("refresh_token") != null @AT@ 9005 @LENGTH@ 95
------DEL Operator@@&& @AT@ 9057 @LENGTH@ 2
------DEL InfixExpression@@parameters.get("refresh_token") != null @AT@ 9061 @LENGTH@ 39
---------DEL Operator@@!= @AT@ 9092 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 9096 @LENGTH@ 4
---MOV MethodInvocation@@"refresh_token".equals(parameters.get("grant_type")) @TO@ ReturnStatement@@InfixExpression:"refresh_token".equals(parameters.get("grant_type")) && parameters.get("refresh_token") != null @AT@ 9005 @LENGTH@ 52


INS TryStatement@@try {  List<?> list=query(entityManager,messageId);  if (list.isEmpty()) {    return Boolean.FALSE;  } else {    return Boolean.TRUE;  }} catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} finally {  try {    if (entityManager.isOpen()) {      entityManager.close();    }  } catch (  Exception e) {  }} @TO@ MethodDeclaration@@public, Boolean, MethodName:doInTransaction, TransactionStatus status,  @AT@ 6820 @LENGTH@ 757
---MOV VariableDeclarationStatement@@List<?> list=query(entityManager,messageId); @TO@ TryStatement@@try {  List<?> list=query(entityManager,messageId);  if (list.isEmpty()) {    return Boolean.FALSE;  } else {    return Boolean.TRUE;  }} catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} finally {  try {    if (entityManager.isOpen()) {      entityManager.close();    }  } catch (  Exception e) {  }} @AT@ 6821 @LENGTH@ 47
---MOV IfStatement@@if (list.isEmpty()) {  return Boolean.FALSE;} else {  return Boolean.TRUE;} @TO@ TryStatement@@try {  List<?> list=query(entityManager,messageId);  if (list.isEmpty()) {    return Boolean.FALSE;  } else {    return Boolean.TRUE;  }} catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} finally {  try {    if (entityManager.isOpen()) {      entityManager.close();    }  } catch (  Exception e) {  }} @AT@ 6885 @LENGTH@ 147
---INS CatchClause@@catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} @TO@ TryStatement@@try {  List<?> list=query(entityManager,messageId);  if (list.isEmpty()) {    return Boolean.FALSE;  } else {    return Boolean.TRUE;  }} catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} finally {  try {    if (entityManager.isOpen()) {      entityManager.close();    }  } catch (  Exception e) {  }} @AT@ 7096 @LENGTH@ 196
------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} @AT@ 7103 @LENGTH@ 12
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 7103 @LENGTH@ 9
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 7113 @LENGTH@ 2
------INS ExpressionStatement@@MethodInvocation:LOG.error("Something went wrong trying to check message in repository {}",ex) @TO@ CatchClause@@catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} @AT@ 7139 @LENGTH@ 79
---------INS MethodInvocation@@LOG.error("Something went wrong trying to check message in repository {}",ex) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("Something went wrong trying to check message in repository {}",ex) @AT@ 7139 @LENGTH@ 78
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("Something went wrong trying to check message in repository {}",ex) @AT@ 7139 @LENGTH@ 3
------------INS SimpleName@@MethodName:error:["Something went wrong trying to check message in repository {}", ex] @TO@ MethodInvocation@@LOG.error("Something went wrong trying to check message in repository {}",ex) @AT@ 7143 @LENGTH@ 74
---------------INS StringLiteral@@"Something went wrong trying to check message in repository {}" @TO@ SimpleName@@MethodName:error:["Something went wrong trying to check message in repository {}", ex] @AT@ 7149 @LENGTH@ 63
---------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:error:["Something went wrong trying to check message in repository {}", ex] @AT@ 7214 @LENGTH@ 2
------INS ThrowStatement@@ClassInstanceCreation:new PersistenceException(ex) @TO@ CatchClause@@catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} @AT@ 7239 @LENGTH@ 35
---------INS ClassInstanceCreation@@PersistenceException[ex] @TO@ ThrowStatement@@ClassInstanceCreation:new PersistenceException(ex) @AT@ 7245 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@PersistenceException[ex] @AT@ 7245 @LENGTH@ 3
------------INS SimpleType@@PersistenceException @TO@ ClassInstanceCreation@@PersistenceException[ex] @AT@ 7249 @LENGTH@ 20
------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@PersistenceException[ex] @AT@ 7270 @LENGTH@ 2
---INS Block@@FinallyBody:{  try {    if (entityManager.isOpen()) {      entityManager.close();    }  } catch (  Exception e) {  }} @TO@ TryStatement@@try {  List<?> list=query(entityManager,messageId);  if (list.isEmpty()) {    return Boolean.FALSE;  } else {    return Boolean.TRUE;  }} catch (Exception ex) {  LOG.error("Something went wrong trying to check message in repository {}",ex);  throw new PersistenceException(ex);} finally {  try {    if (entityManager.isOpen()) {      entityManager.close();    }  } catch (  Exception e) {  }} @AT@ 7301 @LENGTH@ 276
------INS TryStatement@@try {  if (entityManager.isOpen()) {    entityManager.close();  }} catch (Exception e) {} @TO@ Block@@FinallyBody:{  try {    if (entityManager.isOpen()) {      entityManager.close();    }  } catch (  Exception e) {  }} @AT@ 7323 @LENGTH@ 236
---------INS IfStatement@@if (entityManager.isOpen()) {  entityManager.close();} @TO@ TryStatement@@try {  if (entityManager.isOpen()) {    entityManager.close();  }} catch (Exception e) {} @AT@ 7353 @LENGTH@ 106
------------INS MethodInvocation@@entityManager.isOpen() @TO@ IfStatement@@if (entityManager.isOpen()) {  entityManager.close();} @AT@ 7357 @LENGTH@ 22
---------------INS SimpleName@@Name:entityManager @TO@ MethodInvocation@@entityManager.isOpen() @AT@ 7357 @LENGTH@ 13
---------------INS SimpleName@@MethodName:isOpen:[] @TO@ MethodInvocation@@entityManager.isOpen() @AT@ 7371 @LENGTH@ 8
------------INS Block@@ThenBody:{  entityManager.close();} @TO@ IfStatement@@if (entityManager.isOpen()) {  entityManager.close();} @AT@ 7381 @LENGTH@ 78
---------------INS ExpressionStatement@@MethodInvocation:entityManager.close() @TO@ Block@@ThenBody:{  entityManager.close();} @AT@ 7411 @LENGTH@ 22
------------------INS MethodInvocation@@entityManager.close() @TO@ ExpressionStatement@@MethodInvocation:entityManager.close() @AT@ 7411 @LENGTH@ 21
---------------------INS SimpleName@@Name:entityManager @TO@ MethodInvocation@@entityManager.close() @AT@ 7411 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@entityManager.close() @AT@ 7425 @LENGTH@ 7
---------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  if (entityManager.isOpen()) {    entityManager.close();  }} catch (Exception e) {} @AT@ 7482 @LENGTH@ 77
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 7489 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 7489 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 7499 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:form.set("grant_type","client_credentials") @TO@ MethodInvocation:form.set(OAuth2Utils.GRANT_TYPE,"client_credentials") @AT@ 2503 @LENGTH@ 45
---UPD MethodInvocation@@form.set("grant_type","client_credentials") @TO@ form.set(OAuth2Utils.GRANT_TYPE,"client_credentials") @AT@ 2503 @LENGTH@ 44
------UPD SimpleName@@MethodName:set:["grant_type", "client_credentials"] @TO@ MethodName:set:[OAuth2Utils.GRANT_TYPE, "client_credentials"] @AT@ 2508 @LENGTH@ 39
---------DEL StringLiteral@@"grant_type" @AT@ 2512 @LENGTH@ 12
---------INS QualifiedName@@OAuth2Utils.GRANT_TYPE @TO@ SimpleName@@MethodName:set:["grant_type", "client_credentials"] @AT@ 2580 @LENGTH@ 22
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 2580 @LENGTH@ 11
------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 2592 @LENGTH@ 10


UPD Block@@ThenBody:{  ServletRequestAttributes context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes();  if (context != null) {    servletRequest=context.getRequest();  }} @TO@ ThenBody:{  RequestAttributes context=RequestContextHolder.getRequestAttributes();  if (context instanceof ServletRequestAttributes) {    servletRequest=((ServletRequestAttributes)context).getRequest();  }} @AT@ 6073 @LENGTH@ 189
---UPD VariableDeclarationStatement@@ServletRequestAttributes context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes(); @TO@ RequestAttributes context=RequestContextHolder.getRequestAttributes(); @AT@ 6078 @LENGTH@ 106
------UPD SimpleType@@ServletRequestAttributes @TO@ RequestAttributes @AT@ 6078 @LENGTH@ 24
------UPD VariableDeclarationFragment@@context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes() @TO@ context=RequestContextHolder.getRequestAttributes() @AT@ 6103 @LENGTH@ 80
---------DEL CastExpression@@(ServletRequestAttributes)RequestContextHolder.getRequestAttributes() @AT@ 6113 @LENGTH@ 70
------------DEL SimpleType@@ServletRequestAttributes @AT@ 6114 @LENGTH@ 24
------------DEL MethodInvocation@@RequestContextHolder.getRequestAttributes() @AT@ 6140 @LENGTH@ 43
---------INS MethodInvocation@@RequestContextHolder.getRequestAttributes() @TO@ VariableDeclarationFragment@@context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes() @AT@ 6172 @LENGTH@ 43
------------MOV SimpleName@@Name:RequestContextHolder @TO@ MethodInvocation@@RequestContextHolder.getRequestAttributes() @AT@ 6140 @LENGTH@ 20
------------MOV SimpleName@@MethodName:getRequestAttributes:[] @TO@ MethodInvocation@@RequestContextHolder.getRequestAttributes() @AT@ 6161 @LENGTH@ 22
---UPD IfStatement@@if (context != null) {  servletRequest=context.getRequest();} @TO@ if (context instanceof ServletRequestAttributes) {  servletRequest=((ServletRequestAttributes)context).getRequest();} @AT@ 6188 @LENGTH@ 70
------DEL InfixExpression@@context != null @AT@ 6192 @LENGTH@ 15
---------DEL SimpleName@@context @AT@ 6192 @LENGTH@ 7
---------DEL Operator@@!= @AT@ 6199 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 6203 @LENGTH@ 4
------UPD Block@@ThenBody:{  servletRequest=context.getRequest();} @TO@ ThenBody:{  servletRequest=((ServletRequestAttributes)context).getRequest();} @AT@ 6209 @LENGTH@ 49
---------UPD ExpressionStatement@@Assignment:servletRequest=context.getRequest() @TO@ Assignment:servletRequest=((ServletRequestAttributes)context).getRequest() @AT@ 6215 @LENGTH@ 38
------------UPD Assignment@@servletRequest=context.getRequest() @TO@ servletRequest=((ServletRequestAttributes)context).getRequest() @AT@ 6215 @LENGTH@ 37
---------------UPD MethodInvocation@@context.getRequest() @TO@ ((ServletRequestAttributes)context).getRequest() @AT@ 6232 @LENGTH@ 20
------------------DEL SimpleName@@Name:context @AT@ 6232 @LENGTH@ 7
------------------INS ParenthesizedExpression@@((ServletRequestAttributes)context) @TO@ MethodInvocation@@context.getRequest() @AT@ 6292 @LENGTH@ 36
---------------------INS CastExpression@@(ServletRequestAttributes)context @TO@ ParenthesizedExpression@@((ServletRequestAttributes)context) @AT@ 6293 @LENGTH@ 34
------------------------INS SimpleType@@ServletRequestAttributes @TO@ CastExpression@@(ServletRequestAttributes)context @AT@ 6294 @LENGTH@ 24
------------------------INS SimpleName@@context @TO@ CastExpression@@(ServletRequestAttributes)context @AT@ 6320 @LENGTH@ 7
------INS InstanceofExpression@@context instanceof ServletRequestAttributes @TO@ IfStatement@@if (context != null) {  servletRequest=context.getRequest();} @AT@ 6224 @LENGTH@ 43
---------INS SimpleName@@context @TO@ InstanceofExpression@@context instanceof ServletRequestAttributes @AT@ 6224 @LENGTH@ 7
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@context instanceof ServletRequestAttributes @AT@ 6232 @LENGTH@ 10
---------INS SimpleType@@ServletRequestAttributes @TO@ InstanceofExpression@@context instanceof ServletRequestAttributes @AT@ 6243 @LENGTH@ 24


UPD TryStatement@@try {  analyzer=getAnalyzer(project,instructions,classpath);  if (supportIncrementalBuild) {    writeIncrementalInfo(project);  }} catch (FileNotFoundException e) {  throw new MojoExecutionException("Cannot find " + e.getMessage() + " (manifest goal must be run after compile phase)",e);}catch (IOException e) {  throw new MojoExecutionException("Error trying to generate Manifest",e);}catch (MojoFailureException e) {  getLog().error(e.getLocalizedMessage());  throw new MojoExecutionException("Error(s) found in manifest configuration",e);}catch (Exception e) {  getLog().error("An internal error occurred",e);  throw new MojoExecutionException("Internal error in maven-bundle-plugin",e);} @TO@ try {  analyzer=getAnalyzer(project,instructions,classpath);} catch (FileNotFoundException e) {  throw new MojoExecutionException("Cannot find " + e.getMessage() + " (manifest goal must be run after compile phase)",e);}catch (IOException e) {  throw new MojoExecutionException("Error trying to generate Manifest",e);}catch (MojoFailureException e) {  getLog().error(e.getLocalizedMessage());  throw new MojoExecutionException("Error(s) found in manifest configuration",e);}catch (Exception e) {  getLog().error("An internal error occurred",e);  throw new MojoExecutionException("Internal error in maven-bundle-plugin",e);} @AT@ 3946 @LENGTH@ 861


UPD MethodDeclaration@@static, void, MethodName:parseFilter, final ModelNode operation, final XMLExtendedStreamReader reader, XMLStreamException,  @TO@ static, void, MethodName:parseFilter, final ModelNode operation, final AttributeDefinition attribute, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 8047 @LENGTH@ 301
---INS SingleVariableDeclaration@@final AttributeDefinition attribute @TO@ MethodDeclaration@@static, void, MethodName:parseFilter, final ModelNode operation, final XMLExtendedStreamReader reader, XMLStreamException,  @AT@ 8153 @LENGTH@ 35
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final AttributeDefinition attribute @AT@ 8153 @LENGTH@ 5
------INS SimpleType@@AttributeDefinition @TO@ SingleVariableDeclaration@@final AttributeDefinition attribute @AT@ 8159 @LENGTH@ 19
------INS SimpleName@@attribute @TO@ SingleVariableDeclaration@@final AttributeDefinition attribute @AT@ 8179 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:operation.get(FILTER_SPEC.getName()).set(filter.toString()) @TO@ MethodInvocation:operation.get(attribute.getName()).set(filter.toString()) @AT@ 8282 @LENGTH@ 60
------UPD MethodInvocation@@operation.get(FILTER_SPEC.getName()).set(filter.toString()) @TO@ operation.get(attribute.getName()).set(filter.toString()) @AT@ 8282 @LENGTH@ 59
---------UPD MethodInvocation@@MethodName:get:[FILTER_SPEC.getName()] @TO@ MethodName:get:[attribute.getName()] @AT@ 8282 @LENGTH@ 36
------------UPD MethodInvocation@@FILTER_SPEC.getName() @TO@ attribute.getName() @AT@ 8296 @LENGTH@ 21
---------------UPD SimpleName@@Name:FILTER_SPEC @TO@ Name:attribute @AT@ 8296 @LENGTH@ 11


UPD WhileStatement@@while (reader.readBsonType() != BsonType.END_OF_DOCUMENT) {  String fieldName=reader.readName();  document.put(fieldName,readValue(reader,decoderContext));} @TO@ while (reader.readBsonType() != BsonType.END_OF_DOCUMENT) {  String fieldName=reader.readName();  Object value=readValue(reader,decoderContext);  document.put(fieldName,value);} @AT@ 6899 @LENGTH@ 167


INS MethodDeclaration@@private, voidMethodName:JavadocHelper,  @TO@ TypeDeclaration@@[public]JavadocHelper,  @AT@ 1021 @LENGTH@ 31
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:JavadocHelper,  @AT@ 1021 @LENGTH@ 7
---INS SimpleName@@MethodName:JavadocHelper @TO@ MethodDeclaration@@private, voidMethodName:JavadocHelper,  @AT@ 1029 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:setExecutionContextName(ClassUtils.getShortName(JsonItemReader.class)) @TO@ MethodDeclaration@@public, voidMethodName:JsonItemReader, Resource resource, JsonObjectReader<T> jsonObjectReader,  @AT@ 2340 @LENGTH@ 71
---INS MethodInvocation@@setExecutionContextName(ClassUtils.getShortName(JsonItemReader.class)) @TO@ ExpressionStatement@@MethodInvocation:setExecutionContextName(ClassUtils.getShortName(JsonItemReader.class)) @AT@ 2340 @LENGTH@ 70
------INS SimpleName@@MethodName:setExecutionContextName:[ClassUtils.getShortName(JsonItemReader.class)] @TO@ MethodInvocation@@setExecutionContextName(ClassUtils.getShortName(JsonItemReader.class)) @AT@ 2340 @LENGTH@ 70
---------INS MethodInvocation@@ClassUtils.getShortName(JsonItemReader.class) @TO@ SimpleName@@MethodName:setExecutionContextName:[ClassUtils.getShortName(JsonItemReader.class)] @AT@ 2364 @LENGTH@ 45
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@ClassUtils.getShortName(JsonItemReader.class) @AT@ 2364 @LENGTH@ 10
------------INS SimpleName@@MethodName:getShortName:[JsonItemReader.class] @TO@ MethodInvocation@@ClassUtils.getShortName(JsonItemReader.class) @AT@ 2375 @LENGTH@ 34
---------------INS TypeLiteral@@JsonItemReader.class @TO@ SimpleName@@MethodName:getShortName:[JsonItemReader.class] @AT@ 2388 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @TO@ MethodDeclaration@@public, void, MethodName:testTemplateMaximumCache, Exception,  @AT@ 2354 @LENGTH@ 70
---INS MethodInvocation@@assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @AT@ 2354 @LENGTH@ 69
------INS SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @TO@ MethodInvocation@@assertEquals("Size should be 50",50,template.getCurrentCacheSize()) @AT@ 2354 @LENGTH@ 69
---------INS StringLiteral@@"Size should be 50" @TO@ SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @AT@ 2367 @LENGTH@ 19
---------INS NumberLiteral@@50 @TO@ SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @AT@ 2388 @LENGTH@ 2
---------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ SimpleName@@MethodName:assertEquals:["Size should be 50", 50, template.getCurrentCacheSize()] @AT@ 2392 @LENGTH@ 30
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2392 @LENGTH@ 8
------------INS SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2401 @LENGTH@ 21


INS MethodDeclaration@@public, Builder, MethodName:principal, String principalName,  @TO@ TypeDeclaration@@[public, static]Builder,  @AT@ 4853 @LENGTH@ 110
---INS Modifier@@public @TO@ MethodDeclaration@@public, Builder, MethodName:principal, String principalName,  @AT@ 4853 @LENGTH@ 6
---INS SimpleType@@Builder @TO@ MethodDeclaration@@public, Builder, MethodName:principal, String principalName,  @AT@ 4860 @LENGTH@ 7
---INS SimpleName@@MethodName:principal @TO@ MethodDeclaration@@public, Builder, MethodName:principal, String principalName,  @AT@ 4868 @LENGTH@ 9
---INS SingleVariableDeclaration@@String principalName @TO@ MethodDeclaration@@public, Builder, MethodName:principal, String principalName,  @AT@ 4878 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String principalName @AT@ 4878 @LENGTH@ 6
------INS SimpleName@@principalName @TO@ SingleVariableDeclaration@@String principalName @AT@ 4885 @LENGTH@ 13
---INS ReturnStatement@@MethodInvocation:principal(createAuthentication(principalName)) @TO@ MethodDeclaration@@public, Builder, MethodName:principal, String principalName,  @AT@ 4905 @LENGTH@ 54
------INS MethodInvocation@@principal(createAuthentication(principalName)) @TO@ ReturnStatement@@MethodInvocation:principal(createAuthentication(principalName)) @AT@ 4912 @LENGTH@ 46
---------INS SimpleName@@MethodName:principal:[createAuthentication(principalName)] @TO@ MethodInvocation@@principal(createAuthentication(principalName)) @AT@ 4912 @LENGTH@ 46
------------INS MethodInvocation@@createAuthentication(principalName) @TO@ SimpleName@@MethodName:principal:[createAuthentication(principalName)] @AT@ 4922 @LENGTH@ 35
---------------INS SimpleName@@MethodName:createAuthentication:[principalName] @TO@ MethodInvocation@@createAuthentication(principalName) @AT@ 4922 @LENGTH@ 35
------------------INS SimpleName@@principalName @TO@ SimpleName@@MethodName:createAuthentication:[principalName] @AT@ 4943 @LENGTH@ 13
---------------INS SimpleName@@MethodName:createAuthentication:[principalName] @TO@ MethodInvocation@@createAuthentication(principalName) @AT@ 4922 @LENGTH@ 35
------------------INS SimpleName@@principalName @TO@ SimpleName@@MethodName:createAuthentication:[principalName] @AT@ 4943 @LENGTH@ 13


UPD FieldDeclaration@@private, RelyingPartyRegistration, [registration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://example.com/destination")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.addAll(relyingPartyCredentials())).build()] @TO@ private, RelyingPartyRegistration, [registration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://example.com/destination")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.add(relyingPartySigningCredential())).build()] @AT@ 1390 @LENGTH@ 395
---UPD VariableDeclarationFragment@@registration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://example.com/destination")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.addAll(relyingPartyCredentials())).build() @TO@ registration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://example.com/destination")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.add(relyingPartySigningCredential())).build() @AT@ 1423 @LENGTH@ 361
------UPD MethodInvocation@@RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://example.com/destination")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.addAll(relyingPartyCredentials())).build() @TO@ RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://example.com/destination")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.add(relyingPartySigningCredential())).build() @AT@ 1438 @LENGTH@ 346
---------UPD MethodInvocation@@MethodName:credentials:[c -> c.addAll(relyingPartyCredentials())] @TO@ MethodName:credentials:[c -> c.add(relyingPartySigningCredential())] @AT@ 1438 @LENGTH@ 334
------------UPD LambdaExpression@@c -> c.addAll(relyingPartyCredentials()) @TO@ c -> c.add(relyingPartySigningCredential()) @AT@ 1731 @LENGTH@ 40
---------------UPD MethodInvocation@@c.addAll(relyingPartyCredentials()) @TO@ c.add(relyingPartySigningCredential()) @AT@ 1736 @LENGTH@ 35
------------------UPD SimpleName@@MethodName:addAll:[relyingPartyCredentials()] @TO@ MethodName:add:[relyingPartySigningCredential()] @AT@ 1738 @LENGTH@ 33
---------------------UPD MethodInvocation@@MethodName:relyingPartyCredentials:[] @TO@ MethodName:relyingPartySigningCredential:[] @AT@ 1745 @LENGTH@ 25


UPD Block@@ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2632 @LENGTH@ 226
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2632 @LENGTH@ 226
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 2864 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2878 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 2884 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2884 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2888 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2905 @LENGTH@ 72
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2632 @LENGTH@ 226
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(model,translator,exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 2864 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2878 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 2884 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2884 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2888 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2905 @LENGTH@ 72


UPD Block@@ElseBody:if (modelPropertyName.equals(AbstractHandlerDefinition.FORMATTER.getName()) || modelPropertyName.equals(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {  if (handlerModel.hasDefined(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {    configValue=handlerConfig.getFormatterName();    modelValue=handlerModel.get(AbstractHandlerDefinition.NAMED_FORMATTER.getName());  } else {    final String formatterName=handlerConfig.getFormatterName();    if (formatterName == null) {      configValue=null;    } else {      final FormatterConfiguration formatterConfig=logContextConfig.getFormatterConfiguration(formatterName);      configValue=formatterConfig.getPropertyValueString(PatternFormatterResourceDefinition.PATTERN.getName());      modelValue=handlerModel.get(AbstractHandlerDefinition.FORMATTER.getName());    }  }  modelStringValue=modelValue.asString();} else if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ ElseBody:if (modelPropertyName.equals(AbstractHandlerDefinition.FORMATTER.getName()) || modelPropertyName.equals(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {  if (handlerModel.hasDefined(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {    configValue=handlerConfig.getFormatterName();    modelValue=handlerModel.get(AbstractHandlerDefinition.NAMED_FORMATTER.getName());  } else {    final String formatterName=handlerConfig.getFormatterName();    if (formatterName == null) {      configValue=null;    } else {      final FormatterConfiguration formatterConfig=logContextConfig.getFormatterConfiguration(formatterName);      configValue=formatterConfig.getPropertyValueString(PatternFormatterResourceDefinition.PATTERN.getName());      modelValue=handlerModel.get(AbstractHandlerDefinition.FORMATTER.getName());    }  }  modelStringValue=modelValue.asString();} else if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 19374 @LENGTH@ 6312
---UPD IfStatement@@if (modelPropertyName.equals(AbstractHandlerDefinition.FORMATTER.getName()) || modelPropertyName.equals(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {  if (handlerModel.hasDefined(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {    configValue=handlerConfig.getFormatterName();    modelValue=handlerModel.get(AbstractHandlerDefinition.NAMED_FORMATTER.getName());  } else {    final String formatterName=handlerConfig.getFormatterName();    if (formatterName == null) {      configValue=null;    } else {      final FormatterConfiguration formatterConfig=logContextConfig.getFormatterConfiguration(formatterName);      configValue=formatterConfig.getPropertyValueString(PatternFormatterResourceDefinition.PATTERN.getName());      modelValue=handlerModel.get(AbstractHandlerDefinition.FORMATTER.getName());    }  }  modelStringValue=modelValue.asString();} else if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FORMATTER.getName()) || modelPropertyName.equals(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {  if (handlerModel.hasDefined(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {    configValue=handlerConfig.getFormatterName();    modelValue=handlerModel.get(AbstractHandlerDefinition.NAMED_FORMATTER.getName());  } else {    final String formatterName=handlerConfig.getFormatterName();    if (formatterName == null) {      configValue=null;    } else {      final FormatterConfiguration formatterConfig=logContextConfig.getFormatterConfiguration(formatterName);      configValue=formatterConfig.getPropertyValueString(PatternFormatterResourceDefinition.PATTERN.getName());      modelValue=handlerModel.get(AbstractHandlerDefinition.FORMATTER.getName());    }  }  modelStringValue=modelValue.asString();} else if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 19374 @LENGTH@ 6312
------UPD Block@@ElseBody:if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ ElseBody:if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---UPD IfStatement@@if (modelPropertyName.equals(AbstractHandlerDefinition.FORMATTER.getName()) || modelPropertyName.equals(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {  if (handlerModel.hasDefined(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {    configValue=handlerConfig.getFormatterName();    modelValue=handlerModel.get(AbstractHandlerDefinition.NAMED_FORMATTER.getName());  } else {    final String formatterName=handlerConfig.getFormatterName();    if (formatterName == null) {      configValue=null;    } else {      final FormatterConfiguration formatterConfig=logContextConfig.getFormatterConfiguration(formatterName);      configValue=formatterConfig.getPropertyValueString(PatternFormatterResourceDefinition.PATTERN.getName());      modelValue=handlerModel.get(AbstractHandlerDefinition.FORMATTER.getName());    }  }  modelStringValue=modelValue.asString();} else if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FORMATTER.getName()) || modelPropertyName.equals(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {  if (handlerModel.hasDefined(AbstractHandlerDefinition.NAMED_FORMATTER.getName())) {    configValue=handlerConfig.getFormatterName();    modelValue=handlerModel.get(AbstractHandlerDefinition.NAMED_FORMATTER.getName());  } else {    final String formatterName=handlerConfig.getFormatterName();    if (formatterName == null) {      configValue=null;    } else {      final FormatterConfiguration formatterConfig=logContextConfig.getFormatterConfiguration(formatterName);      configValue=formatterConfig.getPropertyValueString(PatternFormatterResourceDefinition.PATTERN.getName());      modelValue=handlerModel.get(AbstractHandlerDefinition.FORMATTER.getName());    }  }  modelStringValue=modelValue.asString();} else if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 19374 @LENGTH@ 6312
------UPD Block@@ElseBody:if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ ElseBody:if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28
---------UPD IfStatement@@if (modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @TO@ if (modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName())) {  configValue=handlerConfig.getFilter();} else if (modelPropertyName.equals(CommonAttributes.LEVEL.getName())) {  configValue=handlerConfig.getLevel();} else {  final String configPropertyName;  if (modelPropertyName.equals(CommonAttributes.AUTOFLUSH.getName())) {    configPropertyName=CommonAttributes.AUTOFLUSH.getPropertyName();  } else   if (modelPropertyName.equals(SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getName())) {    configPropertyName=SizeRotatingHandlerResourceDefinition.ROTATE_SIZE.getPropertyName();    modelStringValue=String.valueOf(SizeResolver.INSTANCE.parseSize(modelValue));  } else   if (modelPropertyName.equals(CommonAttributes.FILE.getName())) {    configPropertyName=CommonAttributes.FILE.getPropertyName();    modelStringValue=modelValue.get(PathResourceDefinition.PATH.getName()).asString();    if (modelValue.hasDefined(PathResourceDefinition.RELATIVE_TO.getName())) {      final String relativeTo=System.getProperty(modelValue.get(PathResourceDefinition.RELATIVE_TO.getName()).asString());      modelStringValue=relativeTo + File.separator + modelStringValue;    }  } else   if (modelPropertyName.equals(ConsoleHandlerResourceDefinition.TARGET.getName())) {    configPropertyName=ConsoleHandlerResourceDefinition.TARGET.getPropertyName();    modelStringValue=Target.fromString(modelValue.asString()).name();  } else   if (modelPropertyName.equals(AsyncHandlerResourceDefinition.SUBHANDLERS.getName())) {    final List<String> handlerHandlerNames=handlerConfig.getHandlerNames();    final ModelNode handlers=handlerModel.get(modelPropertyName);    if (handlers.isDefined()) {      final List<String> modelHandlerNames=new ArrayList<>();      for (      ModelNode handler : handlers.asList()) {        modelHandlerNames.add(handler.asString());      }      final List<String> missingConfigHandlers=new ArrayList<>(handlerHandlerNames);      missingConfigHandlers.removeAll(modelHandlerNames);      final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);      missingModelHandlers.removeAll(handlerHandlerNames);      Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());      Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());    } else {      Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerHandlerNames.isEmpty());    }    continue;  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.FACILITY.getName())) {    configPropertyName=modelPropertyName;    modelStringValue=FacilityAttribute.fromString(modelValue.asString()).getFacility().name();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SERVER_ADDRESS.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SERVER_ADDRESS.getPropertyName();  } else   if (modelPropertyName.equals(SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getName())) {    configPropertyName=SyslogHandlerResourceDefinition.SYSLOG_FORMATTER.getPropertyName();  } else {    configPropertyName=convertModelPropertyName(modelPropertyName);  }  Assert.assertTrue("Configuration is missing property name: " + modelPropertyName,configPropertyNames.contains(configPropertyName));  configValue=handlerConfig.getPropertyValueString(configPropertyName);} @AT@ 20985 @LENGTH@ 4701
------------UPD MethodInvocation@@modelPropertyName.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ modelPropertyName.equals(AbstractHandlerDefinition.FILTER_SPEC.getName()) @AT@ 20989 @LENGTH@ 64
---------------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[AbstractHandlerDefinition.FILTER_SPEC.getName()] @AT@ 21007 @LENGTH@ 46
------------------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ AbstractHandlerDefinition.FILTER_SPEC.getName() @AT@ 21014 @LENGTH@ 38
---------------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:AbstractHandlerDefinition.FILTER_SPEC @AT@ 21014 @LENGTH@ 28


MOV MethodDeclaration@@voidMethodName:AbstractRestProcessor, final SalesforceEndpoint endpoint, final RestClient restClient, final Map<String,Class<?>> classMap,  @TO@ TypeDeclaration@@[public, abstract]AbstractRestProcessor, AbstractSalesforceProcessor @AT@ 4717 @LENGTH@ 378


INS MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @TO@ TypeDeclaration@@[public]ClientRegistrationsTest,  @AT@ 7890 @LENGTH@ 279
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @AT@ 7890 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @AT@ 7897 @LENGTH@ 4
---INS SimpleName@@MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @AT@ 7902 @LENGTH@ 47
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @AT@ 7959 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.response.remove("userinfo_endpoint") @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @AT@ 7973 @LENGTH@ 42
------INS MethodInvocation@@this.response.remove("userinfo_endpoint") @TO@ ExpressionStatement@@MethodInvocation:this.response.remove("userinfo_endpoint") @AT@ 7973 @LENGTH@ 41
---------INS FieldAccess@@this.response @TO@ MethodInvocation@@this.response.remove("userinfo_endpoint") @AT@ 7973 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.response @AT@ 7973 @LENGTH@ 4
------------INS SimpleName@@response @TO@ FieldAccess@@this.response @AT@ 7978 @LENGTH@ 8
---------INS SimpleName@@MethodName:remove:["userinfo_endpoint"] @TO@ MethodInvocation@@this.response.remove("userinfo_endpoint") @AT@ 7987 @LENGTH@ 27
------------INS StringLiteral@@"userinfo_endpoint" @TO@ SimpleName@@MethodName:remove:["userinfo_endpoint"] @AT@ 7994 @LENGTH@ 19
---INS VariableDeclarationStatement@@ClientRegistration registration=registration("").build(); @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @AT@ 8018 @LENGTH@ 59
------INS SimpleType@@ClientRegistration @TO@ VariableDeclarationStatement@@ClientRegistration registration=registration("").build(); @AT@ 8018 @LENGTH@ 18
------INS VariableDeclarationFragment@@registration=registration("").build() @TO@ VariableDeclarationStatement@@ClientRegistration registration=registration("").build(); @AT@ 8037 @LENGTH@ 39
---------INS SimpleName@@registration @TO@ VariableDeclarationFragment@@registration=registration("").build() @AT@ 8037 @LENGTH@ 12
---------INS MethodInvocation@@registration("").build() @TO@ VariableDeclarationFragment@@registration=registration("").build() @AT@ 8052 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:registration:[""] @TO@ MethodInvocation@@registration("").build() @AT@ 8052 @LENGTH@ 16
---------------INS StringLiteral@@"" @TO@ MethodInvocation@@MethodName:registration:[""] @AT@ 8065 @LENGTH@ 2
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@registration("").build() @AT@ 8069 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(registration.getProviderDetails().getUserInfoEndpoint().getUri()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:issuerWhenResponseMissingUserInfoUriThenSuccess, Exception,  @AT@ 8080 @LENGTH@ 86
------INS MethodInvocation@@assertThat(registration.getProviderDetails().getUserInfoEndpoint().getUri()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(registration.getProviderDetails().getUserInfoEndpoint().getUri()).isNull() @AT@ 8080 @LENGTH@ 85
---------INS MethodInvocation@@MethodName:assertThat:[registration.getProviderDetails().getUserInfoEndpoint().getUri()] @TO@ MethodInvocation@@assertThat(registration.getProviderDetails().getUserInfoEndpoint().getUri()).isNull() @AT@ 8080 @LENGTH@ 76
------------INS MethodInvocation@@registration.getProviderDetails().getUserInfoEndpoint().getUri() @TO@ MethodInvocation@@MethodName:assertThat:[registration.getProviderDetails().getUserInfoEndpoint().getUri()] @AT@ 8091 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:getUserInfoEndpoint:[] @TO@ MethodInvocation@@registration.getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 8091 @LENGTH@ 55
---------------INS MethodInvocation@@MethodName:getProviderDetails:[] @TO@ MethodInvocation@@registration.getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 8091 @LENGTH@ 33
---------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 8091 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getUri:[] @TO@ MethodInvocation@@registration.getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 8147 @LENGTH@ 8
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(registration.getProviderDetails().getUserInfoEndpoint().getUri()).isNull() @AT@ 8157 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testUsernameNotFound,  @TO@ TypeDeclaration@@[public]ResourceOwnerPasswordTokenGranterTests,  @AT@ 8046 @LENGTH@ 438
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testUsernameNotFound,  @AT@ 8046 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testUsernameNotFound,  @AT@ 8053 @LENGTH@ 4
---INS SimpleName@@MethodName:testUsernameNotFound @TO@ MethodDeclaration@@public, void, MethodName:testUsernameNotFound,  @AT@ 8058 @LENGTH@ 20
---INS VariableDeclarationStatement@@ResourceOwnerPasswordTokenGranter granter=new ResourceOwnerPasswordTokenGranter(new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
,providerTokenServices,clientDetailsService,requestFactory); @TO@ MethodDeclaration@@public, void, MethodName:testUsernameNotFound,  @AT@ 8085 @LENGTH@ 353
------INS SimpleType@@ResourceOwnerPasswordTokenGranter @TO@ VariableDeclarationStatement@@ResourceOwnerPasswordTokenGranter granter=new ResourceOwnerPasswordTokenGranter(new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
,providerTokenServices,clientDetailsService,requestFactory); @AT@ 8085 @LENGTH@ 33
------INS VariableDeclarationFragment@@granter=new ResourceOwnerPasswordTokenGranter(new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
,providerTokenServices,clientDetailsService,requestFactory) @TO@ VariableDeclarationStatement@@ResourceOwnerPasswordTokenGranter granter=new ResourceOwnerPasswordTokenGranter(new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
,providerTokenServices,clientDetailsService,requestFactory); @AT@ 8119 @LENGTH@ 318
---------INS SimpleName@@granter @TO@ VariableDeclarationFragment@@granter=new ResourceOwnerPasswordTokenGranter(new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
,providerTokenServices,clientDetailsService,requestFactory) @AT@ 8119 @LENGTH@ 7
---------INS ClassInstanceCreation@@ResourceOwnerPasswordTokenGranter[new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
, providerTokenServices, clientDetailsService, requestFactory] @TO@ VariableDeclarationFragment@@granter=new ResourceOwnerPasswordTokenGranter(new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
,providerTokenServices,clientDetailsService,requestFactory) @AT@ 8129 @LENGTH@ 308
------------INS New@@new @TO@ ClassInstanceCreation@@ResourceOwnerPasswordTokenGranter[new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
, providerTokenServices, clientDetailsService, requestFactory] @AT@ 8129 @LENGTH@ 3
------------INS SimpleType@@ResourceOwnerPasswordTokenGranter @TO@ ClassInstanceCreation@@ResourceOwnerPasswordTokenGranter[new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
, providerTokenServices, clientDetailsService, requestFactory] @AT@ 8133 @LENGTH@ 33
------------INS ClassInstanceCreation@@AuthenticationManager[] @TO@ ClassInstanceCreation@@ResourceOwnerPasswordTokenGranter[new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
, providerTokenServices, clientDetailsService, requestFactory] @AT@ 8167 @LENGTH@ 208
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticationManager[] @AT@ 8167 @LENGTH@ 3
---------------INS SimpleType@@AuthenticationManager @TO@ ClassInstanceCreation@@AuthenticationManager[] @AT@ 8171 @LENGTH@ 21
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AuthenticationManager[] @AT@ 8195 @LENGTH@ 180
------------------INS MethodDeclaration@@public, Authentication, MethodName:authenticate, final Authentication authentication, AuthenticationException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 8213 @LENGTH@ 158
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, final Authentication authentication, AuthenticationException,  @AT@ 8213 @LENGTH@ 6
---------------------INS SimpleType@@Authentication @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, final Authentication authentication, AuthenticationException,  @AT@ 8220 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:authenticate @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, final Authentication authentication, AuthenticationException,  @AT@ 8235 @LENGTH@ 12
---------------------INS SingleVariableDeclaration@@final Authentication authentication @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, final Authentication authentication, AuthenticationException,  @AT@ 8248 @LENGTH@ 35
------------------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Authentication authentication @AT@ 8248 @LENGTH@ 5
------------------------INS SimpleType@@Authentication @TO@ SingleVariableDeclaration@@final Authentication authentication @AT@ 8254 @LENGTH@ 14
------------------------INS SimpleName@@authentication @TO@ SingleVariableDeclaration@@final Authentication authentication @AT@ 8269 @LENGTH@ 14
---------------------INS SimpleType@@AuthenticationException @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, final Authentication authentication, AuthenticationException,  @AT@ 8292 @LENGTH@ 23
---------------------INS ThrowStatement@@ClassInstanceCreation:new UsernameNotFoundException("test") @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, final Authentication authentication, AuthenticationException,  @AT@ 8322 @LENGTH@ 44
------------------------INS ClassInstanceCreation@@UsernameNotFoundException["test"] @TO@ ThrowStatement@@ClassInstanceCreation:new UsernameNotFoundException("test") @AT@ 8328 @LENGTH@ 37
---------------------------INS New@@new @TO@ ClassInstanceCreation@@UsernameNotFoundException["test"] @AT@ 8328 @LENGTH@ 3
---------------------------INS SimpleType@@UsernameNotFoundException @TO@ ClassInstanceCreation@@UsernameNotFoundException["test"] @AT@ 8332 @LENGTH@ 25
---------------------------INS StringLiteral@@"test" @TO@ ClassInstanceCreation@@UsernameNotFoundException["test"] @AT@ 8358 @LENGTH@ 6
------------INS SimpleName@@providerTokenServices @TO@ ClassInstanceCreation@@ResourceOwnerPasswordTokenGranter[new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
, providerTokenServices, clientDetailsService, requestFactory] @AT@ 8377 @LENGTH@ 21
------------INS SimpleName@@clientDetailsService @TO@ ClassInstanceCreation@@ResourceOwnerPasswordTokenGranter[new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
, providerTokenServices, clientDetailsService, requestFactory] @AT@ 8400 @LENGTH@ 20
------------INS SimpleName@@requestFactory @TO@ ClassInstanceCreation@@ResourceOwnerPasswordTokenGranter[new AuthenticationManager(){
  @Override public Authentication authenticate(  final Authentication authentication) throws AuthenticationException {
    throw new UsernameNotFoundException("test");
  }
}
, providerTokenServices, clientDetailsService, requestFactory] @AT@ 8422 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:granter.grant("password",tokenRequest) @TO@ MethodDeclaration@@public, void, MethodName:testUsernameNotFound,  @AT@ 8441 @LENGTH@ 40
------INS MethodInvocation@@granter.grant("password",tokenRequest) @TO@ ExpressionStatement@@MethodInvocation:granter.grant("password",tokenRequest) @AT@ 8441 @LENGTH@ 39
---------INS SimpleName@@Name:granter @TO@ MethodInvocation@@granter.grant("password",tokenRequest) @AT@ 8441 @LENGTH@ 7
---------INS SimpleName@@MethodName:grant:["password", tokenRequest] @TO@ MethodInvocation@@granter.grant("password",tokenRequest) @AT@ 8449 @LENGTH@ 31
------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:grant:["password", tokenRequest] @AT@ 8455 @LENGTH@ 10
------------INS SimpleName@@tokenRequest @TO@ SimpleName@@MethodName:grant:["password", tokenRequest] @AT@ 8467 @LENGTH@ 12


UPD TypeDeclaration@@[public]EmbedMongoConfiguration,  @TO@ [public, final]EmbedMongoConfiguration,  @AT@ 1602 @LENGTH@ 886
---INS Modifier@@final @TO@ TypeDeclaration@@[public]EmbedMongoConfiguration,  @AT@ 1609 @LENGTH@ 5


UPD TypeDeclaration@@[public]SessionRegistryImpl, [SessionRegistry, ApplicationListener<ApplicationEvent>] @TO@ [public]SessionRegistryImpl, [SessionRegistry, ApplicationListener<AbstractSessionEvent>] @AT@ 1726 @LENGTH@ 4901
---UPD ParameterizedType@@ApplicationListener<ApplicationEvent> @TO@ ApplicationListener<AbstractSessionEvent> @AT@ 1789 @LENGTH@ 37
------UPD SimpleType@@ApplicationEvent @TO@ AbstractSessionEvent @AT@ 1809 @LENGTH@ 16


UPD VariableDeclarationStatement@@Integer port=split.length > 1 ? Integer.parseInt(split[1]) : ElasticsearchConstants.DEFAULT_PORT; @TO@ int port=split.length > 1 ? Integer.parseInt(split[1]) : ElasticsearchConstants.DEFAULT_PORT; @AT@ 4829 @LENGTH@ 99
---DEL SimpleType@@Integer @AT@ 4829 @LENGTH@ 7
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@Integer port=split.length > 1 ? Integer.parseInt(split[1]) : ElasticsearchConstants.DEFAULT_PORT; @AT@ 4829 @LENGTH@ 3


MOV FieldDeclaration@@private, volatile, Expression, [expr] @TO@ TypeDeclaration@@[public]ExpressionClause, [Expression, Predicate] @AT@ 32941 @LENGTH@ 33


DEL MethodDeclaration@@public, void, MethodName:authenticateWhenRedirectUriNotEqualThenOAuth2AuthorizationException,  @AT@ 3622 @LENGTH@ 253
---DEL Modifier@@public @AT@ 3622 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3629 @LENGTH@ 4
---DEL SimpleName@@MethodName:authenticateWhenRedirectUriNotEqualThenOAuth2AuthorizationException @AT@ 3634 @LENGTH@ 67
---DEL ExpressionStatement@@MethodInvocation:this.authorizationRequest.redirectUri("https://example.org/notequal") @AT@ 3708 @LENGTH@ 70
------DEL MethodInvocation@@this.authorizationRequest.redirectUri("https://example.org/notequal") @AT@ 3708 @LENGTH@ 69
---------DEL FieldAccess@@this.authorizationRequest @AT@ 3708 @LENGTH@ 25
------------DEL ThisExpression@@this @AT@ 3708 @LENGTH@ 4
------------DEL SimpleName@@authorizationRequest @AT@ 3713 @LENGTH@ 20
---------DEL SimpleName@@MethodName:redirectUri:["https://example.org/notequal"] @AT@ 3734 @LENGTH@ 43
------------DEL StringLiteral@@"https://example.org/notequal" @AT@ 3746 @LENGTH@ 30
---DEL ExpressionStatement@@MethodInvocation:assertThatCode(() -> authenticate()).isInstanceOf(OAuth2AuthorizationException.class) @AT@ 3781 @LENGTH@ 91
------DEL MethodInvocation@@assertThatCode(() -> authenticate()).isInstanceOf(OAuth2AuthorizationException.class) @AT@ 3781 @LENGTH@ 90
---------DEL MethodInvocation@@MethodName:assertThatCode:[() -> authenticate()] @AT@ 3781 @LENGTH@ 36
------------DEL LambdaExpression@@() -> authenticate() @AT@ 3796 @LENGTH@ 20
---------------DEL MethodInvocation@@MethodName:authenticate:[] @AT@ 3802 @LENGTH@ 14
---------DEL SimpleName@@MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @AT@ 3823 @LENGTH@ 48
------------DEL TypeLiteral@@OAuth2AuthorizationException.class @AT@ 3836 @LENGTH@ 34


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 4231 @LENGTH@ 824
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 4246 @LENGTH@ 7


INS MethodDeclaration@@private, boolean, MethodName:canBeFlattenedWith, Operator operatorBefore,  @TO@ TypeDeclaration@@[@API(status=INTERNAL,since="1.0"), public, final]CompoundCondition, [Condition] @AT@ 4055 @LENGTH@ 242
---INS Modifier@@private @TO@ MethodDeclaration@@private, boolean, MethodName:canBeFlattenedWith, Operator operatorBefore,  @AT@ 4055 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, boolean, MethodName:canBeFlattenedWith, Operator operatorBefore,  @AT@ 4063 @LENGTH@ 7
---INS SimpleName@@MethodName:canBeFlattenedWith @TO@ MethodDeclaration@@private, boolean, MethodName:canBeFlattenedWith, Operator operatorBefore,  @AT@ 4071 @LENGTH@ 18
---INS SingleVariableDeclaration@@Operator operatorBefore @TO@ MethodDeclaration@@private, boolean, MethodName:canBeFlattenedWith, Operator operatorBefore,  @AT@ 4090 @LENGTH@ 23
------INS SimpleType@@Operator @TO@ SingleVariableDeclaration@@Operator operatorBefore @AT@ 4090 @LENGTH@ 8
------INS SimpleName@@operatorBefore @TO@ SingleVariableDeclaration@@Operator operatorBefore @AT@ 4099 @LENGTH@ 14
---INS EnhancedForStatement@@for (Condition c : this.conditions) {  if (c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore) {    return false;  }} @TO@ MethodDeclaration@@private, boolean, MethodName:canBeFlattenedWith, Operator operatorBefore,  @AT@ 4120 @LENGTH@ 159
------INS SingleVariableDeclaration@@Condition c @TO@ EnhancedForStatement@@for (Condition c : this.conditions) {  if (c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore) {    return false;  }} @AT@ 4125 @LENGTH@ 11
---------INS SimpleType@@Condition @TO@ SingleVariableDeclaration@@Condition c @AT@ 4125 @LENGTH@ 9
---------INS SimpleName@@c @TO@ SingleVariableDeclaration@@Condition c @AT@ 4135 @LENGTH@ 1
------INS FieldAccess@@this.conditions @TO@ EnhancedForStatement@@for (Condition c : this.conditions) {  if (c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore) {    return false;  }} @AT@ 4139 @LENGTH@ 15
---------INS ThisExpression@@this @TO@ FieldAccess@@this.conditions @AT@ 4139 @LENGTH@ 4
---------INS SimpleName@@conditions @TO@ FieldAccess@@this.conditions @AT@ 4144 @LENGTH@ 10
------INS IfStatement@@if (c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore) {  return false;} @TO@ EnhancedForStatement@@for (Condition c : this.conditions) {  if (c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore) {    return false;  }} @AT@ 4161 @LENGTH@ 114
---------INS InfixExpression@@c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore @TO@ IfStatement@@if (c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore) {  return false;} @AT@ 4165 @LENGTH@ 84
------------INS InstanceofExpression@@c instanceof CompoundCondition @TO@ InfixExpression@@c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore @AT@ 4165 @LENGTH@ 30
---------------INS SimpleName@@c @TO@ InstanceofExpression@@c instanceof CompoundCondition @AT@ 4165 @LENGTH@ 1
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@c instanceof CompoundCondition @AT@ 4167 @LENGTH@ 10
---------------INS SimpleType@@CompoundCondition @TO@ InstanceofExpression@@c instanceof CompoundCondition @AT@ 4178 @LENGTH@ 17
------------INS Operator@@&& @TO@ InfixExpression@@c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore @AT@ 4195 @LENGTH@ 2
------------INS InfixExpression@@((CompoundCondition)c).operator != operatorBefore @TO@ InfixExpression@@c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore @AT@ 4199 @LENGTH@ 50
---------------INS FieldAccess@@((CompoundCondition)c).operator @TO@ InfixExpression@@((CompoundCondition)c).operator != operatorBefore @AT@ 4199 @LENGTH@ 32
------------------INS ParenthesizedExpression@@((CompoundCondition)c) @TO@ FieldAccess@@((CompoundCondition)c).operator @AT@ 4199 @LENGTH@ 23
---------------------INS CastExpression@@(CompoundCondition)c @TO@ ParenthesizedExpression@@((CompoundCondition)c) @AT@ 4200 @LENGTH@ 21
------------------------INS SimpleType@@CompoundCondition @TO@ CastExpression@@(CompoundCondition)c @AT@ 4201 @LENGTH@ 17
------------------------INS SimpleName@@c @TO@ CastExpression@@(CompoundCondition)c @AT@ 4220 @LENGTH@ 1
------------------INS SimpleName@@operator @TO@ FieldAccess@@((CompoundCondition)c).operator @AT@ 4223 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@((CompoundCondition)c).operator != operatorBefore @AT@ 4231 @LENGTH@ 2
---------------INS SimpleName@@operatorBefore @TO@ InfixExpression@@((CompoundCondition)c).operator != operatorBefore @AT@ 4235 @LENGTH@ 14
---------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (c instanceof CompoundCondition && ((CompoundCondition)c).operator != operatorBefore) {  return false;} @AT@ 4251 @LENGTH@ 24
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 4257 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4264 @LENGTH@ 5
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@private, boolean, MethodName:canBeFlattenedWith, Operator operatorBefore,  @AT@ 4282 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4289 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:onApplicationEvent, ApplicationEvent event,  @TO@ public, void, MethodName:onApplicationEvent, AbstractSessionEvent event,  @AT@ 3625 @LENGTH@ 670
---UPD SingleVariableDeclaration@@ApplicationEvent event @TO@ AbstractSessionEvent event @AT@ 3656 @LENGTH@ 22
------UPD SimpleType@@ApplicationEvent @TO@ AbstractSessionEvent @AT@ 3656 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:testSave,  @TO@ public, void, MethodName:testSave, IOException,  @AT@ 8803 @LENGTH@ 701
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testSave,  @AT@ 8833 @LENGTH@ 11
---DEL VariableDeclarationStatement@@final ByteArrayOutputStream actual=new ByteArrayOutputStream(); @AT@ 8902 @LENGTH@ 65
------DEL Modifier@@final @AT@ 8902 @LENGTH@ 5
------DEL SimpleType@@ByteArrayOutputStream @AT@ 8908 @LENGTH@ 21
---INS TryStatement@@try (final ByteArrayOutputStream actual=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(actual)){    PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);  }   try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){    try (final PrintStream out=new PrintStream(expected)){      PropertiesFactory.INSTANCE.createProperties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());    expected.reset();    try (final PrintStream out=new PrintStream(expected)){      new Properties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  } }  @TO@ MethodDeclaration@@public, void, MethodName:testSave,  @AT@ 8921 @LENGTH@ 900
------INS VariableDeclarationExpression@@final ByteArrayOutputStream actual=new ByteArrayOutputStream() @TO@ TryStatement@@try (final ByteArrayOutputStream actual=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(actual)){    PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);  }   try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){    try (final PrintStream out=new PrintStream(expected)){      PropertiesFactory.INSTANCE.createProperties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());    expected.reset();    try (final PrintStream out=new PrintStream(expected)){      new Properties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  } }  @AT@ 8926 @LENGTH@ 64
---------INS Modifier@@final @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream actual=new ByteArrayOutputStream() @AT@ 8926 @LENGTH@ 5
---------MOV VariableDeclarationFragment@@actual=new ByteArrayOutputStream() @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream actual=new ByteArrayOutputStream() @AT@ 8930 @LENGTH@ 36
---------INS SimpleType@@ByteArrayOutputStream @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream actual=new ByteArrayOutputStream() @AT@ 8932 @LENGTH@ 21
------INS TryStatement@@try (final PrintStream out=new PrintStream(actual)){  PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);}  @TO@ TryStatement@@try (final ByteArrayOutputStream actual=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(actual)){    PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);  }   try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){    try (final PrintStream out=new PrintStream(expected)){      PropertiesFactory.INSTANCE.createProperties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());    expected.reset();    try (final PrintStream out=new PrintStream(expected)){      new Properties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  } }  @AT@ 9006 @LENGTH@ 141
---------INS VariableDeclarationExpression@@final PrintStream out=new PrintStream(actual) @TO@ TryStatement@@try (final PrintStream out=new PrintStream(actual)){  PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);}  @AT@ 9011 @LENGTH@ 47
------------INS Modifier@@final @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(actual) @AT@ 9011 @LENGTH@ 5
------------INS SimpleType@@PrintStream @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(actual) @AT@ 9017 @LENGTH@ 11
------------INS VariableDeclarationFragment@@out=new PrintStream(actual) @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(actual) @AT@ 9029 @LENGTH@ 29
---------------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=new PrintStream(actual) @AT@ 9029 @LENGTH@ 3
---------------INS ClassInstanceCreation@@PrintStream[actual] @TO@ VariableDeclarationFragment@@out=new PrintStream(actual) @AT@ 9035 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@PrintStream[actual] @AT@ 9035 @LENGTH@ 3
------------------INS SimpleType@@PrintStream @TO@ ClassInstanceCreation@@PrintStream[actual] @AT@ 9039 @LENGTH@ 11
------------------INS SimpleName@@actual @TO@ ClassInstanceCreation@@PrintStream[actual] @AT@ 9051 @LENGTH@ 6
---------INS ExpressionStatement@@MethodInvocation:PropertiesFactory.EMPTY_PROPERTIES.save(out,comments) @TO@ TryStatement@@try (final PrintStream out=new PrintStream(actual)){  PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);}  @AT@ 9078 @LENGTH@ 55
------------MOV MethodInvocation@@PropertiesFactory.EMPTY_PROPERTIES.save(new PrintStream(actual),comments) @TO@ ExpressionStatement@@MethodInvocation:PropertiesFactory.EMPTY_PROPERTIES.save(out,comments) @AT@ 8976 @LENGTH@ 74
---------------UPD SimpleName@@MethodName:save:[new PrintStream(actual), comments] @TO@ MethodName:save:[out, comments] @AT@ 9011 @LENGTH@ 39
------------------DEL ClassInstanceCreation@@PrintStream[actual] @AT@ 9016 @LENGTH@ 23
---------------------DEL New@@new @AT@ 9016 @LENGTH@ 3
---------------------DEL SimpleType@@PrintStream @AT@ 9020 @LENGTH@ 11
---------------------DEL SimpleName@@actual @AT@ 9032 @LENGTH@ 6
------------------INS SimpleName@@out @TO@ SimpleName@@MethodName:save:[new PrintStream(actual), comments] @AT@ 9118 @LENGTH@ 3
------INS TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @TO@ TryStatement@@try (final ByteArrayOutputStream actual=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(actual)){    PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);  }   try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){    try (final PrintStream out=new PrintStream(expected)){      PropertiesFactory.INSTANCE.createProperties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());    expected.reset();    try (final PrintStream out=new PrintStream(expected)){      new Properties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  } }  @AT@ 9184 @LENGTH@ 627
---------INS VariableDeclarationExpression@@final ByteArrayOutputStream expected=new ByteArrayOutputStream() @TO@ TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @AT@ 9189 @LENGTH@ 66
------------MOV VariableDeclarationFragment@@expected=new ByteArrayOutputStream() @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream expected=new ByteArrayOutputStream() @AT@ 9108 @LENGTH@ 38
------------INS Modifier@@final @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream expected=new ByteArrayOutputStream() @AT@ 9189 @LENGTH@ 5
------------INS SimpleType@@ByteArrayOutputStream @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream expected=new ByteArrayOutputStream() @AT@ 9195 @LENGTH@ 21
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray()) @TO@ TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @AT@ 9253 @LENGTH@ 71
---------INS TryStatement@@try (final PrintStream out=new PrintStream(expected)){  PropertiesFactory.INSTANCE.createProperties().save(out,comments);}  @TO@ TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @AT@ 9275 @LENGTH@ 162
------------INS VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @TO@ TryStatement@@try (final PrintStream out=new PrintStream(expected)){  PropertiesFactory.INSTANCE.createProperties().save(out,comments);}  @AT@ 9280 @LENGTH@ 49
---------------INS Modifier@@final @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @AT@ 9280 @LENGTH@ 5
---------------INS SimpleType@@PrintStream @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @AT@ 9286 @LENGTH@ 11
---------------INS VariableDeclarationFragment@@out=new PrintStream(expected) @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @AT@ 9298 @LENGTH@ 31
------------------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=new PrintStream(expected) @AT@ 9298 @LENGTH@ 3
------------------INS ClassInstanceCreation@@PrintStream[expected] @TO@ VariableDeclarationFragment@@out=new PrintStream(expected) @AT@ 9304 @LENGTH@ 25
---------------------INS New@@new @TO@ ClassInstanceCreation@@PrintStream[expected] @AT@ 9304 @LENGTH@ 3
---------------------INS SimpleType@@PrintStream @TO@ ClassInstanceCreation@@PrintStream[expected] @AT@ 9308 @LENGTH@ 11
---------------------INS SimpleName@@expected @TO@ ClassInstanceCreation@@PrintStream[expected] @AT@ 9320 @LENGTH@ 8
------------INS ExpressionStatement@@MethodInvocation:PropertiesFactory.INSTANCE.createProperties().save(out,comments) @TO@ TryStatement@@try (final PrintStream out=new PrintStream(expected)){  PropertiesFactory.INSTANCE.createProperties().save(out,comments);}  @AT@ 9353 @LENGTH@ 66
---------------MOV MethodInvocation@@PropertiesFactory.INSTANCE.createProperties().save(new PrintStream(expected),comments) @TO@ ExpressionStatement@@MethodInvocation:PropertiesFactory.INSTANCE.createProperties().save(out,comments) @AT@ 9156 @LENGTH@ 87
------------------UPD SimpleName@@MethodName:save:[new PrintStream(expected), comments] @TO@ MethodName:save:[out, comments] @AT@ 9202 @LENGTH@ 41
---------------------DEL ClassInstanceCreation@@PrintStream[expected] @AT@ 9207 @LENGTH@ 25
------------------------DEL New@@new @AT@ 9207 @LENGTH@ 3
------------------------DEL SimpleType@@PrintStream @AT@ 9211 @LENGTH@ 11
------------------------DEL SimpleName@@expected @AT@ 9223 @LENGTH@ 8
---------------------INS SimpleName@@out @TO@ SimpleName@@MethodName:save:[new PrintStream(expected), comments] @AT@ 9404 @LENGTH@ 3
---------MOV ExpressionStatement@@MethodInvocation:expected.reset() @TO@ TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @AT@ 9333 @LENGTH@ 17
---------MOV ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray()) @TO@ TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @AT@ 9427 @LENGTH@ 71
---------INS TryStatement@@try (final PrintStream out=new PrintStream(expected)){  new Properties().save(out,comments);}  @TO@ TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @AT@ 9576 @LENGTH@ 133
------------INS VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @TO@ TryStatement@@try (final PrintStream out=new PrintStream(expected)){  new Properties().save(out,comments);}  @AT@ 9581 @LENGTH@ 49
---------------INS Modifier@@final @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @AT@ 9581 @LENGTH@ 5
---------------INS SimpleType@@PrintStream @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @AT@ 9587 @LENGTH@ 11
---------------INS VariableDeclarationFragment@@out=new PrintStream(expected) @TO@ VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @AT@ 9599 @LENGTH@ 31
------------------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=new PrintStream(expected) @AT@ 9599 @LENGTH@ 3
------------------INS ClassInstanceCreation@@PrintStream[expected] @TO@ VariableDeclarationFragment@@out=new PrintStream(expected) @AT@ 9605 @LENGTH@ 25
---------------------INS New@@new @TO@ ClassInstanceCreation@@PrintStream[expected] @AT@ 9605 @LENGTH@ 3
---------------------INS SimpleType@@PrintStream @TO@ ClassInstanceCreation@@PrintStream[expected] @AT@ 9609 @LENGTH@ 11
---------------------INS SimpleName@@expected @TO@ ClassInstanceCreation@@PrintStream[expected] @AT@ 9621 @LENGTH@ 8
------------INS ExpressionStatement@@MethodInvocation:new Properties().save(out,comments) @TO@ TryStatement@@try (final PrintStream out=new PrintStream(expected)){  new Properties().save(out,comments);}  @AT@ 9654 @LENGTH@ 37
---------------MOV MethodInvocation@@new Properties().save(new PrintStream(expected),comments) @TO@ ExpressionStatement@@MethodInvocation:new Properties().save(out,comments) @AT@ 9359 @LENGTH@ 58
------------------UPD SimpleName@@MethodName:save:[new PrintStream(expected), comments] @TO@ MethodName:save:[out, comments] @AT@ 9376 @LENGTH@ 41
---------------------DEL ClassInstanceCreation@@PrintStream[expected] @AT@ 9381 @LENGTH@ 25
------------------------DEL New@@new @AT@ 9381 @LENGTH@ 3
------------------------DEL SimpleType@@PrintStream @AT@ 9385 @LENGTH@ 11
------------------------DEL SimpleName@@expected @AT@ 9397 @LENGTH@ 8
---------------------INS SimpleName@@out @TO@ SimpleName@@MethodName:save:[new PrintStream(expected), comments] @AT@ 9676 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:PropertiesFactory.EMPTY_PROPERTIES.save(new PrintStream(actual),comments) @AT@ 8976 @LENGTH@ 75
---DEL VariableDeclarationStatement@@final ByteArrayOutputStream expected=new ByteArrayOutputStream(); @AT@ 9080 @LENGTH@ 67
------DEL Modifier@@final @AT@ 9080 @LENGTH@ 5
------DEL SimpleType@@ByteArrayOutputStream @AT@ 9086 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:PropertiesFactory.INSTANCE.createProperties().save(new PrintStream(expected),comments) @AT@ 9156 @LENGTH@ 88
---DEL ExpressionStatement@@MethodInvocation:new Properties().save(new PrintStream(expected),comments) @AT@ 9359 @LENGTH@ 59


INS VariableDeclarationStatement@@int originMaxInactiveInterval=session.getMaxInactiveInterval(); @TO@ MethodDeclaration@@final, HttpSession, MethodName:applySessionFixation, HttpServletRequest request,  @AT@ 3970 @LENGTH@ 65
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int originMaxInactiveInterval=session.getMaxInactiveInterval(); @AT@ 3970 @LENGTH@ 3
---INS VariableDeclarationFragment@@originMaxInactiveInterval=session.getMaxInactiveInterval() @TO@ VariableDeclarationStatement@@int originMaxInactiveInterval=session.getMaxInactiveInterval(); @AT@ 3974 @LENGTH@ 60
------INS SimpleName@@originMaxInactiveInterval @TO@ VariableDeclarationFragment@@originMaxInactiveInterval=session.getMaxInactiveInterval() @AT@ 3974 @LENGTH@ 25
------INS MethodInvocation@@session.getMaxInactiveInterval() @TO@ VariableDeclarationFragment@@originMaxInactiveInterval=session.getMaxInactiveInterval() @AT@ 4002 @LENGTH@ 32
---------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.getMaxInactiveInterval() @AT@ 4002 @LENGTH@ 7
---------INS SimpleName@@MethodName:getMaxInactiveInterval:[] @TO@ MethodInvocation@@session.getMaxInactiveInterval() @AT@ 4010 @LENGTH@ 24


UPD ForStatement@@for (int i=0; i < list.size(); i++) {  Object obj=list.get(i);  if (obj == null) {    continue;  }  String str=obj.toString();  String raw=URIScanner.resolveRaw(str);  if (raw != null) {    list.set(i,raw);  }  ;} @TO@ for (int i=0; i < list.size(); i++) {  Object obj=list.get(i);  if (obj == null) {    continue;  }  String str=obj.toString();  String raw=URIScanner.resolveRaw(str);  if (raw != null) {    list.set(i,raw);  }} @AT@ 11057 @LENGTH@ 469


UPD ExpressionStatement@@Assignment:isNew=((Number)value).longValue() <= 0 @TO@ Assignment:isNew=((Number)value).longValue() < 0 @AT@ 4249 @LENGTH@ 42
---UPD Assignment@@isNew=((Number)value).longValue() <= 0 @TO@ isNew=((Number)value).longValue() < 0 @AT@ 4249 @LENGTH@ 41
------UPD InfixExpression@@((Number)value).longValue() <= 0 @TO@ ((Number)value).longValue() < 0 @AT@ 4257 @LENGTH@ 33
---------UPD Operator@@<= @TO@ < @AT@ 4285 @LENGTH@ 2


UPD IfStatement@@if (waitTime1 == 0 || waitTime2 == 0) {  return knownPending1 - knownPending2;} @TO@ if (waitTime1 == 0 || waitTime2 == 0) {  if (knownPending1 == knownPending2) {    if (waitTime1 == waitTime2) {      return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());    }    return waitTime2 == 0 ? -1 : 1;  }  return Long.compare(knownPending1,knownPending2);} @AT@ 2523 @LENGTH@ 89
---UPD Block@@ThenBody:{  return knownPending1 - knownPending2;} @TO@ ThenBody:{  if (knownPending1 == knownPending2) {    if (waitTime1 == waitTime2) {      return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());    }    return waitTime2 == 0 ? -1 : 1;  }  return Long.compare(knownPending1,knownPending2);} @AT@ 2561 @LENGTH@ 51
------DEL ReturnStatement@@InfixExpression:knownPending1 - knownPending2 @AT@ 2569 @LENGTH@ 37
---------DEL InfixExpression@@knownPending1 - knownPending2 @AT@ 2576 @LENGTH@ 29
------INS IfStatement@@if (knownPending1 == knownPending2) {  if (waitTime1 == waitTime2) {    return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());  }  return waitTime2 == 0 ? -1 : 1;} @TO@ Block@@ThenBody:{  return knownPending1 - knownPending2;} @AT@ 2608 @LENGTH@ 543
---------INS InfixExpression@@knownPending1 == knownPending2 @TO@ IfStatement@@if (knownPending1 == knownPending2) {  if (waitTime1 == waitTime2) {    return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());  }  return waitTime2 == 0 ? -1 : 1;} @AT@ 2612 @LENGTH@ 30
------------MOV SimpleName@@knownPending1 @TO@ InfixExpression@@knownPending1 == knownPending2 @AT@ 2576 @LENGTH@ 13
------------MOV Operator@@- @TO@ InfixExpression@@knownPending1 == knownPending2 @AT@ 2589 @LENGTH@ 1
------------MOV SimpleName@@knownPending2 @TO@ InfixExpression@@knownPending1 == knownPending2 @AT@ 2592 @LENGTH@ 13
---------INS Block@@ThenBody:{  if (waitTime1 == waitTime2) {    return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());  }  return waitTime2 == 0 ? -1 : 1;} @TO@ IfStatement@@if (knownPending1 == knownPending2) {  if (waitTime1 == waitTime2) {    return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());  }  return waitTime2 == 0 ? -1 : 1;} @AT@ 2644 @LENGTH@ 507
------------INS IfStatement@@if (waitTime1 == waitTime2) {  return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());} @TO@ Block@@ThenBody:{  if (waitTime1 == waitTime2) {    return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());  }  return waitTime2 == 0 ? -1 : 1;} @AT@ 2728 @LENGTH@ 176
---------------INS InfixExpression@@waitTime1 == waitTime2 @TO@ IfStatement@@if (waitTime1 == waitTime2) {  return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());} @AT@ 2732 @LENGTH@ 22
------------------INS SimpleName@@waitTime1 @TO@ InfixExpression@@waitTime1 == waitTime2 @AT@ 2732 @LENGTH@ 9
------------------INS Operator@@== @TO@ InfixExpression@@waitTime1 == waitTime2 @AT@ 2741 @LENGTH@ 2
------------------INS SimpleName@@waitTime2 @TO@ InfixExpression@@waitTime1 == waitTime2 @AT@ 2745 @LENGTH@ 9
---------------INS Block@@ThenBody:{  return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());} @TO@ IfStatement@@if (waitTime1 == waitTime2) {  return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());} @AT@ 2756 @LENGTH@ 148
------------------INS ReturnStatement@@MethodInvocation:Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @TO@ Block@@ThenBody:{  return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());} @AT@ 2804 @LENGTH@ 90
---------------------INS MethodInvocation@@Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @TO@ ReturnStatement@@MethodInvocation:Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @AT@ 2811 @LENGTH@ 82
------------------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @AT@ 2811 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:compare:[fri1.getCurrentAttemptStartTime(), fri2.getCurrentAttemptStartTime()] @TO@ MethodInvocation@@Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @AT@ 2816 @LENGTH@ 77
---------------------------INS MethodInvocation@@fri1.getCurrentAttemptStartTime() @TO@ SimpleName@@MethodName:compare:[fri1.getCurrentAttemptStartTime(), fri2.getCurrentAttemptStartTime()] @AT@ 2824 @LENGTH@ 33
------------------------------INS SimpleName@@Name:fri1 @TO@ MethodInvocation@@fri1.getCurrentAttemptStartTime() @AT@ 2824 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:getCurrentAttemptStartTime:[] @TO@ MethodInvocation@@fri1.getCurrentAttemptStartTime() @AT@ 2829 @LENGTH@ 28
---------------------------INS MethodInvocation@@fri2.getCurrentAttemptStartTime() @TO@ SimpleName@@MethodName:compare:[fri1.getCurrentAttemptStartTime(), fri2.getCurrentAttemptStartTime()] @AT@ 2859 @LENGTH@ 33
------------------------------INS SimpleName@@Name:fri2 @TO@ MethodInvocation@@fri2.getCurrentAttemptStartTime() @AT@ 2859 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:getCurrentAttemptStartTime:[] @TO@ MethodInvocation@@fri2.getCurrentAttemptStartTime() @AT@ 2864 @LENGTH@ 28
------------INS ReturnStatement@@ConditionalExpression:waitTime2 == 0 ? -1 : 1 @TO@ Block@@ThenBody:{  if (waitTime1 == waitTime2) {    return Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime());  }  return waitTime2 == 0 ? -1 : 1;} @AT@ 3112 @LENGTH@ 31
---------------INS ConditionalExpression@@waitTime2 == 0 ? -1 : 1 @TO@ ReturnStatement@@ConditionalExpression:waitTime2 == 0 ? -1 : 1 @AT@ 3119 @LENGTH@ 23
------------------INS InfixExpression@@waitTime2 == 0 @TO@ ConditionalExpression@@waitTime2 == 0 ? -1 : 1 @AT@ 3119 @LENGTH@ 14
---------------------INS SimpleName@@waitTime2 @TO@ InfixExpression@@waitTime2 == 0 @AT@ 3119 @LENGTH@ 9
---------------------INS Operator@@== @TO@ InfixExpression@@waitTime2 == 0 @AT@ 3128 @LENGTH@ 2
---------------------INS NumberLiteral@@0 @TO@ InfixExpression@@waitTime2 == 0 @AT@ 3132 @LENGTH@ 1
------------------INS PrefixExpression@@-1 @TO@ ConditionalExpression@@waitTime2 == 0 ? -1 : 1 @AT@ 3136 @LENGTH@ 2
---------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 3136 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 3137 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ ConditionalExpression@@waitTime2 == 0 ? -1 : 1 @AT@ 3141 @LENGTH@ 1
------INS ReturnStatement@@MethodInvocation:Long.compare(knownPending1,knownPending2) @TO@ Block@@ThenBody:{  return knownPending1 - knownPending2;} @AT@ 3324 @LENGTH@ 50
---------INS MethodInvocation@@Long.compare(knownPending1,knownPending2) @TO@ ReturnStatement@@MethodInvocation:Long.compare(knownPending1,knownPending2) @AT@ 3331 @LENGTH@ 42
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.compare(knownPending1,knownPending2) @AT@ 3331 @LENGTH@ 4
------------INS SimpleName@@MethodName:compare:[knownPending1, knownPending2] @TO@ MethodInvocation@@Long.compare(knownPending1,knownPending2) @AT@ 3336 @LENGTH@ 37
---------------INS SimpleName@@knownPending1 @TO@ SimpleName@@MethodName:compare:[knownPending1, knownPending2] @AT@ 3344 @LENGTH@ 13
---------------INS SimpleName@@knownPending2 @TO@ SimpleName@@MethodName:compare:[knownPending1, knownPending2] @AT@ 3359 @LENGTH@ 13


UPD VariableDeclarationStatement@@long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong(); @TO@ long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong(); @AT@ 4401 @LENGTH@ 264
---UPD VariableDeclarationFragment@@numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @TO@ numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @AT@ 4406 @LENGTH@ 258
------UPD MethodInvocation@@transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @TO@ transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @AT@ 4426 @LENGTH@ 238
---------UPD MethodInvocation@@MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations", Values.parameters("id",personWithRelatives.getId())] @TO@ MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations", Values.parameters("id",personWithRelatives.getId())] @AT@ 4426 @LENGTH@ 190
------------UPD InfixExpression@@"" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations" @TO@ "" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations" @AT@ 4442 @LENGTH@ 119
---------------INS StringLiteral@@"RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))" @TO@ InfixExpression@@"" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations" @AT@ 4508 @LENGTH@ 80
---------------UPD StringLiteral@@"RETURN size((t) --> (:Person)) as numberOfRelations" @TO@ " as numberOfRelations" @AT@ 4508 @LENGTH@ 53


INS FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @TO@ TypeDeclaration@@[public]DefaultBearerTokenResolverTests,  @AT@ 1157 @LENGTH@ 60
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1157 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1165 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1172 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1178 @LENGTH@ 6
---INS VariableDeclarationFragment@@CUSTOM_HEADER="custom-header" @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1185 @LENGTH@ 31
------INS SimpleName@@CUSTOM_HEADER @TO@ VariableDeclarationFragment@@CUSTOM_HEADER="custom-header" @AT@ 1185 @LENGTH@ 13
------INS StringLiteral@@"custom-header" @TO@ VariableDeclarationFragment@@CUSTOM_HEADER="custom-header" @AT@ 1201 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:this.authenticationConverter.setCredentialsCharset(Charset.forName(credentialsCharset)) @TO@ MethodDeclaration@@public, void, MethodName:setCredentialsCharset, String credentialsCharset,  @AT@ 10690 @LENGTH@ 88
---INS MethodInvocation@@this.authenticationConverter.setCredentialsCharset(Charset.forName(credentialsCharset)) @TO@ ExpressionStatement@@MethodInvocation:this.authenticationConverter.setCredentialsCharset(Charset.forName(credentialsCharset)) @AT@ 10690 @LENGTH@ 87
------INS FieldAccess@@this.authenticationConverter @TO@ MethodInvocation@@this.authenticationConverter.setCredentialsCharset(Charset.forName(credentialsCharset)) @AT@ 10690 @LENGTH@ 28
---------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationConverter @AT@ 10690 @LENGTH@ 4
---------INS SimpleName@@authenticationConverter @TO@ FieldAccess@@this.authenticationConverter @AT@ 10695 @LENGTH@ 23
------INS SimpleName@@MethodName:setCredentialsCharset:[Charset.forName(credentialsCharset)] @TO@ MethodInvocation@@this.authenticationConverter.setCredentialsCharset(Charset.forName(credentialsCharset)) @AT@ 10719 @LENGTH@ 58
---------INS MethodInvocation@@Charset.forName(credentialsCharset) @TO@ SimpleName@@MethodName:setCredentialsCharset:[Charset.forName(credentialsCharset)] @AT@ 10741 @LENGTH@ 35
------------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName(credentialsCharset) @AT@ 10741 @LENGTH@ 7
------------INS SimpleName@@MethodName:forName:[credentialsCharset] @TO@ MethodInvocation@@Charset.forName(credentialsCharset) @AT@ 10749 @LENGTH@ 27
---------------INS SimpleName@@credentialsCharset @TO@ SimpleName@@MethodName:forName:[credentialsCharset] @AT@ 10757 @LENGTH@ 18


UPD TypeDeclaration@@[public]AnimalFactory,  @TO@ [public, final]AnimalFactory,  @AT@ 838 @LENGTH@ 253
---INS Modifier@@final @TO@ TypeDeclaration@@[public]AnimalFactory,  @AT@ 845 @LENGTH@ 5


UPD IfStatement@@if (payload instanceof GetFunctionRequest) {  DeleteFunctionResponse result;  try {    result=lambdaClient.deleteFunction((DeleteFunctionRequest)payload);  } catch (  AwsServiceException ase) {    LOG.trace("deleteFunction command returned the error code {}",ase.awsErrorDetails().errorCode());    throw ase;  }  Message message=getMessageForResponse(exchange);  message.setBody(result);} @TO@ if (payload instanceof DeleteFunctionRequest) {  DeleteFunctionResponse result;  try {    result=lambdaClient.deleteFunction((DeleteFunctionRequest)payload);  } catch (  AwsServiceException ase) {    LOG.trace("deleteFunction command returned the error code {}",ase.awsErrorDetails().errorCode());    throw ase;  }  Message message=getMessageForResponse(exchange);  message.setBody(result);} @AT@ 9096 @LENGTH@ 546
---UPD InstanceofExpression@@payload instanceof GetFunctionRequest @TO@ payload instanceof DeleteFunctionRequest @AT@ 9100 @LENGTH@ 37
------UPD SimpleType@@GetFunctionRequest @TO@ DeleteFunctionRequest @AT@ 9119 @LENGTH@ 18


MOV FieldDeclaration@@int, [defaultRouteStartupOrder=1000] @TO@ TypeDeclaration@@[public, abstract]AbstractCamelContext, BaseService[ExtendedCamelContext, CatalogCamelContext, Suspendable] @AT@ 14356 @LENGTH@ 36


UPD CatchClause@@catch (InterruptedException ex) {} @TO@ catch (InterruptedException e) {} @AT@ 4466 @LENGTH@ 65
---UPD SingleVariableDeclaration@@InterruptedException ex @TO@ InterruptedException e @AT@ 4473 @LENGTH@ 23
------UPD SimpleName@@ex @TO@ e @AT@ 4494 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException) @TO@ MethodInvocation:Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException) @AT@ 4273 @LENGTH@ 157
---UPD MethodInvocation@@Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException) @TO@ Assert.assertTrue(error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException) @AT@ 4273 @LENGTH@ 156
------UPD SimpleName@@MethodName:assertTrue:[error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException] @TO@ MethodName:assertTrue:[error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException] @AT@ 4280 @LENGTH@ 149
---------UPD InstanceofExpression@@error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnresolvedAddressException @TO@ error.getDetail(ComponentVerifierExtension.VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE) instanceof UnknownHostException @AT@ 4291 @LENGTH@ 137
------------UPD SimpleType@@UnresolvedAddressException @TO@ UnknownHostException @AT@ 4402 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:FileFilterUtils.filterSet(filter,new HashSet<>(Arrays.asList((File)null))) @TO@ MethodInvocation:FileFilterUtils.filterSet(filter,new HashSet<>(Collections.singletonList((File)null))) @AT@ 61052 @LENGTH@ 77
---UPD MethodInvocation@@FileFilterUtils.filterSet(filter,new HashSet<>(Arrays.asList((File)null))) @TO@ FileFilterUtils.filterSet(filter,new HashSet<>(Collections.singletonList((File)null))) @AT@ 61052 @LENGTH@ 76
------UPD SimpleName@@MethodName:filterSet:[filter, new HashSet<>(Arrays.asList((File)null))] @TO@ MethodName:filterSet:[filter, new HashSet<>(Collections.singletonList((File)null))] @AT@ 61068 @LENGTH@ 60
---------UPD ClassInstanceCreation@@HashSet<>[Arrays.asList((File)null)] @TO@ HashSet<>[Collections.singletonList((File)null)] @AT@ 61086 @LENGTH@ 41
------------UPD MethodInvocation@@Arrays.asList((File)null) @TO@ Collections.singletonList((File)null) @AT@ 61100 @LENGTH@ 26
---------------UPD SimpleName@@Name:Arrays @TO@ Name:Collections @AT@ 61100 @LENGTH@ 6
---------------UPD SimpleName@@MethodName:asList:[(File)null] @TO@ MethodName:singletonList:[(File)null] @AT@ 61107 @LENGTH@ 19


DEL MethodDeclaration@@public, int, MethodName:size,  @AT@ 2705 @LENGTH@ 43
---DEL Modifier@@public @AT@ 2705 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 2712 @LENGTH@ 3
---DEL SimpleName@@MethodName:size @AT@ 2716 @LENGTH@ 4
---DEL ReturnStatement@@NumberLiteral:0 @AT@ 2733 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 2740 @LENGTH@ 1


UPD VariableDeclarationStatement@@DefaultAuthenticationEventPublisher eventPublisher=objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()); @TO@ AuthenticationEventPublisher eventPublisher=getAuthenticationEventPublisher(); @AT@ 9026 @LENGTH@ 133
---UPD SimpleType@@DefaultAuthenticationEventPublisher @TO@ AuthenticationEventPublisher @AT@ 9026 @LENGTH@ 35
---UPD VariableDeclarationFragment@@eventPublisher=objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @TO@ eventPublisher=getAuthenticationEventPublisher() @AT@ 9062 @LENGTH@ 96
------UPD MethodInvocation@@objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @TO@ this.objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @AT@ 9079 @LENGTH@ 79
------INS MethodInvocation@@MethodName:getAuthenticationEventPublisher:[] @TO@ VariableDeclarationFragment@@eventPublisher=objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @AT@ 9154 @LENGTH@ 33


INS MethodDeclaration@@public, void, MethodName:shouldRenderEqAggregationExpressionWithListComparison,  @TO@ TypeDeclaration@@[public]ProjectionOperationUnitTests,  @AT@ 58145 @LENGTH@ 331
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderEqAggregationExpressionWithListComparison,  @AT@ 58145 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderEqAggregationExpressionWithListComparison,  @AT@ 58152 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldRenderEqAggregationExpressionWithListComparison @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderEqAggregationExpressionWithListComparison,  @AT@ 58157 @LENGTH@ 53
---INS VariableDeclarationStatement@@Document agg=project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT); @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderEqAggregationExpressionWithListComparison,  @AT@ 58218 @LENGTH@ 155
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document agg=project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT); @AT@ 58218 @LENGTH@ 8
------INS VariableDeclarationFragment@@agg=project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @TO@ VariableDeclarationStatement@@Document agg=project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT); @AT@ 58227 @LENGTH@ 145
---------INS SimpleName@@agg @TO@ VariableDeclarationFragment@@agg=project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 58227 @LENGTH@ 3
---------INS MethodInvocation@@project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @TO@ VariableDeclarationFragment@@agg=project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 58233 @LENGTH@ 139
------------INS MethodInvocation@@MethodName:as:["eq250"] @TO@ MethodInvocation@@project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 58233 @LENGTH@ 94
---------------INS StringLiteral@@"eq250" @TO@ MethodInvocation@@MethodName:as:["eq250"] @AT@ 58319 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:and:[ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))] @TO@ MethodInvocation@@project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 58233 @LENGTH@ 82
---------------INS MethodInvocation@@ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250)) @TO@ MethodInvocation@@MethodName:and:[ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))] @AT@ 58247 @LENGTH@ 67
------------------INS MethodInvocation@@MethodName:valueOf:["qty"] @TO@ MethodInvocation@@ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250)) @AT@ 58247 @LENGTH@ 34
---------------------INS StringLiteral@@"qty" @TO@ MethodInvocation@@MethodName:valueOf:["qty"] @AT@ 58275 @LENGTH@ 5
------------------INS SimpleName@@Name:ComparisonOperators @TO@ MethodInvocation@@ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250)) @AT@ 58247 @LENGTH@ 19
------------------INS SimpleName@@MethodName:equalToValue:[Arrays.asList(250)] @TO@ MethodInvocation@@ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250)) @AT@ 58282 @LENGTH@ 32
---------------------INS MethodInvocation@@Arrays.asList(250) @TO@ SimpleName@@MethodName:equalToValue:[Arrays.asList(250)] @AT@ 58295 @LENGTH@ 18
------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(250) @AT@ 58295 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:asList:[250] @TO@ MethodInvocation@@Arrays.asList(250) @AT@ 58302 @LENGTH@ 11
---------------------------INS NumberLiteral@@250 @TO@ SimpleName@@MethodName:asList:[250] @AT@ 58309 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:project:[] @TO@ MethodInvocation@@project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 58233 @LENGTH@ 9
------------INS SimpleName@@MethodName:toDocument:[Aggregation.DEFAULT_CONTEXT] @TO@ MethodInvocation@@project().and(ComparisonOperators.valueOf("qty").equalToValue(Arrays.asList(250))).as("eq250").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 58333 @LENGTH@ 39
---------------INS QualifiedName@@Aggregation.DEFAULT_CONTEXT @TO@ SimpleName@@MethodName:toDocument:[Aggregation.DEFAULT_CONTEXT] @AT@ 58344 @LENGTH@ 27
------------------INS SimpleName@@Aggregation @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 58344 @LENGTH@ 11
------------------INS SimpleName@@DEFAULT_CONTEXT @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 58356 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(agg).isEqualTo(Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }")) @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderEqAggregationExpressionWithListComparison,  @AT@ 58377 @LENGTH@ 96
------INS MethodInvocation@@assertThat(agg).isEqualTo(Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(agg).isEqualTo(Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }")) @AT@ 58377 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:assertThat:[agg] @TO@ MethodInvocation@@assertThat(agg).isEqualTo(Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }")) @AT@ 58377 @LENGTH@ 15
------------INS SimpleName@@agg @TO@ MethodInvocation@@MethodName:assertThat:[agg] @AT@ 58388 @LENGTH@ 3
---------INS SimpleName@@MethodName:isEqualTo:[Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }")] @TO@ MethodInvocation@@assertThat(agg).isEqualTo(Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }")) @AT@ 58393 @LENGTH@ 79
------------INS MethodInvocation@@Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }") @TO@ SimpleName@@MethodName:isEqualTo:[Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }")] @AT@ 58403 @LENGTH@ 68
---------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }") @AT@ 58403 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parse:["{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }"] @TO@ MethodInvocation@@Document.parse("{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }") @AT@ 58412 @LENGTH@ 59
------------------INS StringLiteral@@"{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }" @TO@ SimpleName@@MethodName:parse:["{ $project: { eq250: { $eq: [\"$qty\", [250]]} } }"] @AT@ 58418 @LENGTH@ 52


UPD ExpressionStatement@@Assignment:baseDirectory=Paths.get(getEndpoint().getPath()) @TO@ Assignment:baseDirectory=Paths.get(getEndpoint().getPath()).toAbsolutePath() @AT@ 2522 @LENGTH@ 51
---UPD Assignment@@baseDirectory=Paths.get(getEndpoint().getPath()) @TO@ baseDirectory=Paths.get(getEndpoint().getPath()).toAbsolutePath() @AT@ 2522 @LENGTH@ 50
------UPD MethodInvocation@@Paths.get(getEndpoint().getPath()) @TO@ Paths.get(getEndpoint().getPath()).toAbsolutePath() @AT@ 2538 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:get:[getEndpoint().getPath()] @TO@ MethodInvocation@@Paths.get(getEndpoint().getPath()) @AT@ 2538 @LENGTH@ 34
------------INS MethodInvocation@@getEndpoint().getPath() @TO@ MethodInvocation@@MethodName:get:[getEndpoint().getPath()] @AT@ 2548 @LENGTH@ 23
---------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().getPath() @AT@ 2548 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@getEndpoint().getPath() @AT@ 2562 @LENGTH@ 9
---------DEL SimpleName@@MethodName:get:[getEndpoint().getPath()] @AT@ 2544 @LENGTH@ 28
------------DEL MethodInvocation@@getEndpoint().getPath() @AT@ 2548 @LENGTH@ 23
---------INS SimpleName@@MethodName:toAbsolutePath:[] @TO@ MethodInvocation@@Paths.get(getEndpoint().getPath()) @AT@ 2573 @LENGTH@ 16


UPD FieldDeclaration@@private, static, final, int, [SERVICE_PORT_BASE=8080] @TO@ private, static, final, int, [SERVICE_PORT_BASE=8280] @AT@ 1561 @LENGTH@ 50
---UPD VariableDeclarationFragment@@SERVICE_PORT_BASE=8080 @TO@ SERVICE_PORT_BASE=8280 @AT@ 1586 @LENGTH@ 24
------UPD NumberLiteral@@8080 @TO@ 8280 @AT@ 1606 @LENGTH@ 4


UPD TypeDeclaration@@[@Converter, public]WekaTypeConverters,  @TO@ [@Converter, public, final]WekaTypeConverters,  @AT@ 1007 @LENGTH@ 419
---INS Modifier@@final @TO@ TypeDeclaration@@[@Converter, public]WekaTypeConverters,  @AT@ 1024 @LENGTH@ 5


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 1682 @LENGTH@ 205
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 1697 @LENGTH@ 7
---UPD ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ SuperMethodInvocation:super.doInit() @AT@ 1734 @LENGTH@ 16
------UPD SuperMethodInvocation@@super.doStart() @TO@ super.doInit() @AT@ 1734 @LENGTH@ 15
---------UPD SimpleName@@MethodName:doStart:[] @TO@ MethodName:doInit:[] @AT@ 1740 @LENGTH@ 7


UPD VariableDeclarationStatement@@String exceptionMessage=exception; @TO@ String exceptionMessage=exception == null ? "" : exception; @AT@ 7752 @LENGTH@ 36
---UPD VariableDeclarationFragment@@exceptionMessage=exception @TO@ exceptionMessage=exception == null ? "" : exception @AT@ 7759 @LENGTH@ 28
------INS ConditionalExpression@@exception == null ? "" : exception @TO@ VariableDeclarationFragment@@exceptionMessage=exception @AT@ 7778 @LENGTH@ 34
---------INS InfixExpression@@exception == null @TO@ ConditionalExpression@@exception == null ? "" : exception @AT@ 7778 @LENGTH@ 17
------------INS SimpleName@@exception @TO@ InfixExpression@@exception == null @AT@ 7778 @LENGTH@ 9
------------INS Operator@@== @TO@ InfixExpression@@exception == null @AT@ 7787 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@exception == null @AT@ 7791 @LENGTH@ 4
---------INS StringLiteral@@"" @TO@ ConditionalExpression@@exception == null ? "" : exception @AT@ 7798 @LENGTH@ 2
---------INS SimpleName@@exception @TO@ ConditionalExpression@@exception == null ? "" : exception @AT@ 7803 @LENGTH@ 9
------DEL SimpleName@@exception @AT@ 7778 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:builder.append(details.isTyped() ? TYPE_SEPARATOR : "").append(details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining(TYPE_SEPARATOR))).append("]") @TO@ MethodInvocation:builder.append(details.isTyped() ? ":" : "").append(details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|"))).append("]") @AT@ 7272 @LENGTH@ 245
---UPD MethodInvocation@@builder.append(details.isTyped() ? TYPE_SEPARATOR : "").append(details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining(TYPE_SEPARATOR))).append("]") @TO@ builder.append(details.isTyped() ? ":" : "").append(details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|"))).append("]") @AT@ 7272 @LENGTH@ 244
------UPD MethodInvocation@@MethodName:append:[details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining(TYPE_SEPARATOR))] @TO@ MethodName:append:[details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|"))] @AT@ 7272 @LENGTH@ 228
---------UPD MethodInvocation@@details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining(TYPE_SEPARATOR)) @TO@ details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|")) @AT@ 7343 @LENGTH@ 156
------------UPD SimpleName@@MethodName:collect:[joining(TYPE_SEPARATOR)] @TO@ MethodName:collect:[joining("|")] @AT@ 7467 @LENGTH@ 32
---------------UPD MethodInvocation@@joining(TYPE_SEPARATOR) @TO@ joining("|") @AT@ 7475 @LENGTH@ 23
------------------UPD SimpleName@@MethodName:joining:[TYPE_SEPARATOR] @TO@ MethodName:joining:["|"] @AT@ 7475 @LENGTH@ 23
---------------------INS StringLiteral@@"|" @TO@ SimpleName@@MethodName:joining:[TYPE_SEPARATOR] @AT@ 7421 @LENGTH@ 3
---------------------DEL SimpleName@@TYPE_SEPARATOR @AT@ 7483 @LENGTH@ 14
------UPD MethodInvocation@@MethodName:append:[details.isTyped() ? TYPE_SEPARATOR : ""] @TO@ MethodName:append:[details.isTyped() ? ":" : ""] @AT@ 7272 @LENGTH@ 59
---------UPD ConditionalExpression@@details.isTyped() ? TYPE_SEPARATOR : "" @TO@ details.isTyped() ? ":" : "" @AT@ 7291 @LENGTH@ 39
------------INS StringLiteral@@":" @TO@ ConditionalExpression@@details.isTyped() ? TYPE_SEPARATOR : "" @AT@ 7260 @LENGTH@ 3
------------DEL SimpleName@@TYPE_SEPARATOR @AT@ 7311 @LENGTH@ 14


UPD CatchClause@@catch (Exception ex) {  assertTrue("Expect FailedToCreateRouteException",ex instanceof FailedToCreateRouteException);  assertTrue("Get a wrong reason",ex.getCause() instanceof IllegalArgumentException);} @TO@ catch (Exception ex) {  assertTrue("Expect FailedToCreateRouteException",ex instanceof FailedToCreateRouteException);} @AT@ 2470 @LENGTH@ 236
---DEL ExpressionStatement@@MethodInvocation:assertTrue("Get a wrong reason",ex.getCause() instanceof IllegalArgumentException) @AT@ 2612 @LENGTH@ 84
------DEL MethodInvocation@@assertTrue("Get a wrong reason",ex.getCause() instanceof IllegalArgumentException) @AT@ 2612 @LENGTH@ 83
---------DEL SimpleName@@MethodName:assertTrue:["Get a wrong reason", ex.getCause() instanceof IllegalArgumentException] @AT@ 2612 @LENGTH@ 83
------------DEL StringLiteral@@"Get a wrong reason" @AT@ 2623 @LENGTH@ 20
------------DEL InstanceofExpression@@ex.getCause() instanceof IllegalArgumentException @AT@ 2645 @LENGTH@ 49
---------------DEL MethodInvocation@@ex.getCause() @AT@ 2645 @LENGTH@ 13
------------------DEL SimpleName@@Name:ex @AT@ 2645 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:getCause:[] @AT@ 2648 @LENGTH@ 10
---------------DEL Instanceof@@instanceof @AT@ 2659 @LENGTH@ 10
---------------DEL SimpleType@@IllegalArgumentException @AT@ 2670 @LENGTH@ 24


UPD MethodDeclaration@@private, voidMethodName:Saml2AuthenticationRequestContext, RelyingPartyRegistration relyingPartyRegistration, String issuer, String assertionConsumerServiceUrl, String relayState,  @TO@ protected, voidMethodName:Saml2AuthenticationRequestContext, RelyingPartyRegistration relyingPartyRegistration, String issuer, String assertionConsumerServiceUrl, String relayState,  @AT@ 1630 @LENGTH@ 613
---UPD Modifier@@private @TO@ protected @AT@ 1630 @LENGTH@ 7


UPD FieldDeclaration@@static, final, String, [PROFILE="testProfile"] @TO@ protected, static, final, String, [PROFILE="testProfile"] @AT@ 1757 @LENGTH@ 44
---INS Modifier@@protected @TO@ FieldDeclaration@@static, final, String, [PROFILE="testProfile"] @AT@ 1757 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:createSubmitWorkRequestProto(fragmentNumber,selfAndUpstreamParallelism,0,firstAttemptStartTime,currentAttemptStartTime,withinDagPriority,"MockDag",false) @TO@ MethodInvocation:createSubmitWorkRequestProto(fragmentNumber,selfAndUpstreamParallelism,selfAndUpstreamComplete,firstAttemptStartTime,currentAttemptStartTime,withinDagPriority,"MockDag",false) @AT@ 6771 @LENGTH@ 176
---UPD MethodInvocation@@createSubmitWorkRequestProto(fragmentNumber,selfAndUpstreamParallelism,0,firstAttemptStartTime,currentAttemptStartTime,withinDagPriority,"MockDag",false) @TO@ createSubmitWorkRequestProto(fragmentNumber,selfAndUpstreamParallelism,selfAndUpstreamComplete,firstAttemptStartTime,currentAttemptStartTime,withinDagPriority,"MockDag",false) @AT@ 6778 @LENGTH@ 168
------UPD SimpleName@@MethodName:createSubmitWorkRequestProto:[fragmentNumber, selfAndUpstreamParallelism, 0, firstAttemptStartTime, currentAttemptStartTime, withinDagPriority, "MockDag", false] @TO@ MethodName:createSubmitWorkRequestProto:[fragmentNumber, selfAndUpstreamParallelism, selfAndUpstreamComplete, firstAttemptStartTime, currentAttemptStartTime, withinDagPriority, "MockDag", false] @AT@ 6778 @LENGTH@ 168
---------INS SimpleName@@selfAndUpstreamComplete @TO@ SimpleName@@MethodName:createSubmitWorkRequestProto:[fragmentNumber, selfAndUpstreamParallelism, 0, firstAttemptStartTime, currentAttemptStartTime, withinDagPriority, "MockDag", false] @AT@ 6851 @LENGTH@ 23
---------DEL NumberLiteral@@0 @AT@ 6851 @LENGTH@ 1


MOV ExpressionStatement@@MethodInvocation:builder.uuidRepresentation(UuidRepresentation.JAVA_LEGACY) @TO@ MethodDeclaration@@protected, MongoClientSettings, MethodName:mongoClientSettings,  @AT@ 8474 @LENGTH@ 59


INS MethodDeclaration@@protected, Integer, MethodName:determineLimit,  @TO@ TypeDeclaration@@[public, abstract]AbstractDdbCommand,  @AT@ 3672 @LENGTH@ 120
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Integer, MethodName:determineLimit,  @AT@ 3672 @LENGTH@ 9
---INS SimpleType@@Integer @TO@ MethodDeclaration@@protected, Integer, MethodName:determineLimit,  @AT@ 3682 @LENGTH@ 7
---INS SimpleName@@MethodName:determineLimit @TO@ MethodDeclaration@@protected, Integer, MethodName:determineLimit,  @AT@ 3690 @LENGTH@ 14
---INS ReturnStatement@@MethodInvocation:exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @TO@ MethodDeclaration@@protected, Integer, MethodName:determineLimit,  @AT@ 3717 @LENGTH@ 69
------INS MethodInvocation@@exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @TO@ ReturnStatement@@MethodInvocation:exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @AT@ 3724 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @AT@ 3724 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @AT@ 3724 @LENGTH@ 8
---------INS SimpleName@@MethodName:getHeader:[DdbConstants.LIMIT, Integer.class] @TO@ MethodInvocation@@exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @AT@ 3741 @LENGTH@ 44
------------INS QualifiedName@@DdbConstants.LIMIT @TO@ SimpleName@@MethodName:getHeader:[DdbConstants.LIMIT, Integer.class] @AT@ 3751 @LENGTH@ 18
---------------INS SimpleName@@DdbConstants @TO@ QualifiedName@@DdbConstants.LIMIT @AT@ 3751 @LENGTH@ 12
---------------INS SimpleName@@LIMIT @TO@ QualifiedName@@DdbConstants.LIMIT @AT@ 3764 @LENGTH@ 5
------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:getHeader:[DdbConstants.LIMIT, Integer.class] @AT@ 3771 @LENGTH@ 13


UPD VariableDeclarationStatement@@String grantType=request.getParameter("grant_type"); @TO@ String grantType=request.getParameter(OAuth2Utils.GRANT_TYPE); @AT@ 8600 @LENGTH@ 54
---UPD VariableDeclarationFragment@@grantType=request.getParameter("grant_type") @TO@ grantType=request.getParameter(OAuth2Utils.GRANT_TYPE) @AT@ 8607 @LENGTH@ 46
------UPD MethodInvocation@@request.getParameter("grant_type") @TO@ request.getParameter(OAuth2Utils.GRANT_TYPE) @AT@ 8619 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getParameter:["grant_type"] @TO@ MethodName:getParameter:[OAuth2Utils.GRANT_TYPE] @AT@ 8627 @LENGTH@ 26
------------INS QualifiedName@@OAuth2Utils.GRANT_TYPE @TO@ SimpleName@@MethodName:getParameter:["grant_type"] @AT@ 8640 @LENGTH@ 22
---------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 8640 @LENGTH@ 11
---------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 8652 @LENGTH@ 10
------------DEL StringLiteral@@"grant_type" @AT@ 8640 @LENGTH@ 12


DEL MethodDeclaration@@String, MethodName:blueprintSchemaAsXml,  @AT@ 11435 @LENGTH@ 23
---DEL SimpleType@@String @AT@ 11428 @LENGTH@ 6
---DEL SimpleName@@MethodName:blueprintSchemaAsXml @AT@ 11435 @LENGTH@ 20


UPD EnhancedForStatement@@for (HBaseCell cellModel : cellModels) {  HBaseCell resultCell=new HBaseCell();  String family=cellModel.getFamily();  String column=cellModel.getQualifier();  resultCell.setFamily(family);  resultCell.setQualifier(column);  List<Cell> kvs=result.getColumnCells(HBaseHelper.getHBaseFieldAsBytes(family),HBaseHelper.getHBaseFieldAsBytes(column));  if (kvs != null && !kvs.isEmpty()) {    resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(cellModel.getValueType(),CellUtil.cloneValue(kvs.get(0))));    resultCell.setTimestamp(kvs.get(0).getTimestamp());  }  resultCells.add(resultCell);  resultRow.getCells().add(resultCell);} @TO@ for (HBaseCell cellModel : cellModels) {  HBaseCell resultCell=new HBaseCell();  String family=cellModel.getFamily();  String column=cellModel.getQualifier();  resultCell.setFamily(family);  resultCell.setQualifier(column);  List<Cell> kvs=result.getColumnCells(HBaseHelper.getHBaseFieldAsBytes(family),HBaseHelper.getHBaseFieldAsBytes(column));  if (kvs != null && !kvs.isEmpty()) {    resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(cellModel.getValueType(),CellUtil.cloneValue(kvs.get(0))));    resultCell.setTimestamp(kvs.get(0).getTimestamp());  }  resultRow.getCells().add(resultCell);} @AT@ 7170 @LENGTH@ 854
---DEL ExpressionStatement@@MethodInvocation:resultCells.add(resultCell) @AT@ 7936 @LENGTH@ 28
------DEL MethodInvocation@@resultCells.add(resultCell) @AT@ 7936 @LENGTH@ 27
---------DEL SimpleName@@Name:resultCells @AT@ 7936 @LENGTH@ 11
---------DEL SimpleName@@MethodName:add:[resultCell] @AT@ 7948 @LENGTH@ 15
------------DEL SimpleName@@resultCell @AT@ 7952 @LENGTH@ 10


UPD TryStatement@@try {  @SuppressWarnings("unchecked") Map<String,String> errorParameters=(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage);  return this.errorConverter.convert(errorParameters);} catch (Exception ex) {  throw new HttpMessageNotReadableException("An error occurred reading the OAuth 2.0 Error: " + ex.getMessage(),ex,inputMessage);} @TO@ try {  @SuppressWarnings("unchecked") Map<String,Object> errorParameters=(Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage);  return this.errorConverter.convert(errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))));} catch (Exception ex) {  throw new HttpMessageNotReadableException("An error occurred reading the OAuth 2.0 Error: " + ex.getMessage(),ex,inputMessage);} @AT@ 2931 @LENGTH@ 424
---UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Map<String,String> errorParameters=(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage); @TO@ @SuppressWarnings("unchecked") Map<String,Object> errorParameters=(Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage); @AT@ 2940 @LENGTH@ 190
------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 2974 @LENGTH@ 19
---------UPD SimpleType@@String @TO@ Object @AT@ 2986 @LENGTH@ 6
------UPD VariableDeclarationFragment@@errorParameters=(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @TO@ errorParameters=(Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @AT@ 2994 @LENGTH@ 135
---------UPD CastExpression@@(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @TO@ (Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @AT@ 3012 @LENGTH@ 117
------------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 3013 @LENGTH@ 19
---------------UPD SimpleType@@String @TO@ Object @AT@ 3025 @LENGTH@ 6
---UPD ReturnStatement@@MethodInvocation:this.errorConverter.convert(errorParameters) @TO@ MethodInvocation:this.errorConverter.convert(errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())))) @AT@ 3134 @LENGTH@ 52
------UPD MethodInvocation@@this.errorConverter.convert(errorParameters) @TO@ this.errorConverter.convert(errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())))) @AT@ 3141 @LENGTH@ 44
---------UPD SimpleName@@MethodName:convert:[errorParameters] @TO@ MethodName:convert:[errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())))] @AT@ 3161 @LENGTH@ 24
------------DEL SimpleName@@errorParameters @AT@ 3169 @LENGTH@ 15
------------INS MethodInvocation@@errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))) @TO@ SimpleName@@MethodName:convert:[errorParameters] @AT@ 3339 @LENGTH@ 150
---------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))) @AT@ 3339 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:entrySet:[] @TO@ MethodInvocation@@errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))) @AT@ 3339 @LENGTH@ 26
---------------INS SimpleName@@Name:errorParameters @TO@ MethodInvocation@@errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))) @AT@ 3339 @LENGTH@ 15
---------------INS SimpleName@@MethodName:collect:[Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))] @TO@ MethodInvocation@@errorParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))) @AT@ 3383 @LENGTH@ 106
------------------INS MethodInvocation@@Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())) @TO@ SimpleName@@MethodName:collect:[Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))] @AT@ 3391 @LENGTH@ 97
---------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())) @AT@ 3391 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:toMap:[Map.Entry::getKey, entry -> String.valueOf(entry.getValue())] @TO@ MethodInvocation@@Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())) @AT@ 3402 @LENGTH@ 86
------------------------INS LambdaExpression@@entry -> String.valueOf(entry.getValue()) @TO@ SimpleName@@MethodName:toMap:[Map.Entry::getKey, entry -> String.valueOf(entry.getValue())] @AT@ 3446 @LENGTH@ 41
---------------------------INS VariableDeclarationFragment@@entry @TO@ LambdaExpression@@entry -> String.valueOf(entry.getValue()) @AT@ 3446 @LENGTH@ 5
------------------------------INS SimpleName@@entry @TO@ VariableDeclarationFragment@@entry @AT@ 3446 @LENGTH@ 5
---------------------------INS MethodInvocation@@String.valueOf(entry.getValue()) @TO@ LambdaExpression@@entry -> String.valueOf(entry.getValue()) @AT@ 3455 @LENGTH@ 32
------------------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(entry.getValue()) @AT@ 3455 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:valueOf:[entry.getValue()] @TO@ MethodInvocation@@String.valueOf(entry.getValue()) @AT@ 3462 @LENGTH@ 25
---------------------------------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:valueOf:[entry.getValue()] @AT@ 3470 @LENGTH@ 16
------------------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 3470 @LENGTH@ 5
------------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 3476 @LENGTH@ 10


INS MethodDeclaration@@private, voidMethodName:CamelURIParser,  @TO@ TypeDeclaration@@[public, final]CamelURIParser,  @AT@ 1107 @LENGTH@ 32
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CamelURIParser,  @AT@ 1107 @LENGTH@ 7
---INS SimpleName@@MethodName:CamelURIParser @TO@ MethodDeclaration@@private, voidMethodName:CamelURIParser,  @AT@ 1115 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:result.getExchange().getResponse().setComplete() @TO@ MethodInvocation:result.getExchange().getResponse().setComplete().block() @AT@ 2273 @LENGTH@ 49
---UPD MethodInvocation@@result.getExchange().getResponse().setComplete() @TO@ result.getExchange().getResponse().setComplete().block() @AT@ 2273 @LENGTH@ 48
------INS MethodInvocation@@MethodName:setComplete:[] @TO@ MethodInvocation@@result.getExchange().getResponse().setComplete() @AT@ 2273 @LENGTH@ 48
------UPD SimpleName@@MethodName:setComplete:[] @TO@ MethodName:block:[] @AT@ 2308 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:properties.put("collectionType",or(definition.getCollectionType(),definition.getUnmarshalTypeName())) @TO@ MethodInvocation:properties.put("collectionType",or(definition.getCollectionType(),definition.getCollectionTypeName())) @AT@ 1501 @LENGTH@ 104
---UPD MethodInvocation@@properties.put("collectionType",or(definition.getCollectionType(),definition.getUnmarshalTypeName())) @TO@ properties.put("collectionType",or(definition.getCollectionType(),definition.getCollectionTypeName())) @AT@ 1501 @LENGTH@ 103
------UPD SimpleName@@MethodName:put:["collectionType", or(definition.getCollectionType(),definition.getUnmarshalTypeName())] @TO@ MethodName:put:["collectionType", or(definition.getCollectionType(),definition.getCollectionTypeName())] @AT@ 1512 @LENGTH@ 92
---------UPD MethodInvocation@@or(definition.getCollectionType(),definition.getUnmarshalTypeName()) @TO@ or(definition.getCollectionType(),definition.getCollectionTypeName()) @AT@ 1534 @LENGTH@ 69
------------UPD SimpleName@@MethodName:or:[definition.getCollectionType(), definition.getUnmarshalTypeName()] @TO@ MethodName:or:[definition.getCollectionType(), definition.getCollectionTypeName()] @AT@ 1534 @LENGTH@ 69
---------------UPD MethodInvocation@@definition.getUnmarshalTypeName() @TO@ definition.getCollectionTypeName() @AT@ 1569 @LENGTH@ 33
------------------UPD SimpleName@@MethodName:getUnmarshalTypeName:[] @TO@ MethodName:getCollectionTypeName:[] @AT@ 1580 @LENGTH@ 22


UPD TypeDeclaration@@[public]ReactiveOAuth2AuthorizedClientManager,  @TO@ [@FunctionalInterface, public]ReactiveOAuth2AuthorizedClientManager,  @AT@ 1657 @LENGTH@ 1276
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveOAuth2AuthorizedClientManager,  @AT@ 1657 @LENGTH@ 20


UPD IfStatement@@if (conversions.isSimpleType(obj.getClass())) {  return getPotentiallyConvertedSimpleWrite(obj,typeInformation != null ? typeInformation.getType() : Object.class);} @TO@ if (conversions.isSimpleType(obj.getClass())) {  Class<?> conversionTargetType=Object.class;  if (typeInformation != null && conversions.isSimpleType(typeInformation.getType())) {    conversionTargetType=typeInformation.getType();  }  return getPotentiallyConvertedSimpleWrite(obj,conversionTargetType);} @AT@ 44481 @LENGTH@ 205
---UPD Block@@ThenBody:{  return getPotentiallyConvertedSimpleWrite(obj,typeInformation != null ? typeInformation.getType() : Object.class);} @TO@ ThenBody:{  Class<?> conversionTargetType=Object.class;  if (typeInformation != null && conversions.isSimpleType(typeInformation.getType())) {    conversionTargetType=typeInformation.getType();  }  return getPotentiallyConvertedSimpleWrite(obj,conversionTargetType);} @AT@ 44527 @LENGTH@ 159
------INS VariableDeclarationStatement@@Class<?> conversionTargetType=Object.class; @TO@ Block@@ThenBody:{  return getPotentiallyConvertedSimpleWrite(obj,typeInformation != null ? typeInformation.getType() : Object.class);} @AT@ 44533 @LENGTH@ 45
---------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> conversionTargetType=Object.class; @AT@ 44533 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 44533 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 44539 @LENGTH@ 1
---------INS VariableDeclarationFragment@@conversionTargetType=Object.class @TO@ VariableDeclarationStatement@@Class<?> conversionTargetType=Object.class; @AT@ 44542 @LENGTH@ 35
------------INS SimpleName@@conversionTargetType @TO@ VariableDeclarationFragment@@conversionTargetType=Object.class @AT@ 44542 @LENGTH@ 20
------------INS TypeLiteral@@Object.class @TO@ VariableDeclarationFragment@@conversionTargetType=Object.class @AT@ 44565 @LENGTH@ 12
------DEL ReturnStatement@@MethodInvocation:getPotentiallyConvertedSimpleWrite(obj,typeInformation != null ? typeInformation.getType() : Object.class) @AT@ 44562 @LENGTH@ 120
---------DEL MethodInvocation@@getPotentiallyConvertedSimpleWrite(obj,typeInformation != null ? typeInformation.getType() : Object.class) @AT@ 44569 @LENGTH@ 112
------------DEL SimpleName@@MethodName:getPotentiallyConvertedSimpleWrite:[obj, typeInformation != null ? typeInformation.getType() : Object.class] @AT@ 44569 @LENGTH@ 112
---------------DEL SimpleName@@obj @AT@ 44604 @LENGTH@ 3
---------------DEL ConditionalExpression@@typeInformation != null ? typeInformation.getType() : Object.class @AT@ 44614 @LENGTH@ 66
------------------DEL InfixExpression@@typeInformation != null @AT@ 44614 @LENGTH@ 23
------------------DEL MethodInvocation@@typeInformation.getType() @AT@ 44640 @LENGTH@ 25
------------------DEL TypeLiteral@@Object.class @AT@ 44668 @LENGTH@ 12
------INS IfStatement@@if (typeInformation != null && conversions.isSimpleType(typeInformation.getType())) {  conversionTargetType=typeInformation.getType();} @TO@ Block@@ThenBody:{  return getPotentiallyConvertedSimpleWrite(obj,typeInformation != null ? typeInformation.getType() : Object.class);} @AT@ 44582 @LENGTH@ 143
---------INS InfixExpression@@typeInformation != null && conversions.isSimpleType(typeInformation.getType()) @TO@ IfStatement@@if (typeInformation != null && conversions.isSimpleType(typeInformation.getType())) {  conversionTargetType=typeInformation.getType();} @AT@ 44585 @LENGTH@ 78
------------INS InfixExpression@@typeInformation != null @TO@ InfixExpression@@typeInformation != null && conversions.isSimpleType(typeInformation.getType()) @AT@ 44585 @LENGTH@ 23
---------------MOV SimpleName@@typeInformation @TO@ InfixExpression@@typeInformation != null @AT@ 44614 @LENGTH@ 15
---------------MOV Operator@@!= @TO@ InfixExpression@@typeInformation != null @AT@ 44629 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@typeInformation != null @AT@ 44633 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@typeInformation != null && conversions.isSimpleType(typeInformation.getType()) @AT@ 44608 @LENGTH@ 2
------------INS MethodInvocation@@conversions.isSimpleType(typeInformation.getType()) @TO@ InfixExpression@@typeInformation != null && conversions.isSimpleType(typeInformation.getType()) @AT@ 44612 @LENGTH@ 51
---------------INS SimpleName@@Name:conversions @TO@ MethodInvocation@@conversions.isSimpleType(typeInformation.getType()) @AT@ 44612 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isSimpleType:[typeInformation.getType()] @TO@ MethodInvocation@@conversions.isSimpleType(typeInformation.getType()) @AT@ 44624 @LENGTH@ 39
------------------INS MethodInvocation@@typeInformation.getType() @TO@ SimpleName@@MethodName:isSimpleType:[typeInformation.getType()] @AT@ 44637 @LENGTH@ 25
---------------------MOV SimpleName@@Name:typeInformation @TO@ MethodInvocation@@typeInformation.getType() @AT@ 44640 @LENGTH@ 15
---------------------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@typeInformation.getType() @AT@ 44656 @LENGTH@ 9
---------INS Block@@ThenBody:{  conversionTargetType=typeInformation.getType();} @TO@ IfStatement@@if (typeInformation != null && conversions.isSimpleType(typeInformation.getType())) {  conversionTargetType=typeInformation.getType();} @AT@ 44665 @LENGTH@ 60
------------INS ExpressionStatement@@Assignment:conversionTargetType=typeInformation.getType() @TO@ Block@@ThenBody:{  conversionTargetType=typeInformation.getType();} @AT@ 44671 @LENGTH@ 49
---------------INS Assignment@@conversionTargetType=typeInformation.getType() @TO@ ExpressionStatement@@Assignment:conversionTargetType=typeInformation.getType() @AT@ 44671 @LENGTH@ 48
------------------INS SimpleName@@conversionTargetType @TO@ Assignment@@conversionTargetType=typeInformation.getType() @AT@ 44671 @LENGTH@ 20
------------------INS Operator@@= @TO@ Assignment@@conversionTargetType=typeInformation.getType() @AT@ 44691 @LENGTH@ 1
------------------INS MethodInvocation@@typeInformation.getType() @TO@ Assignment@@conversionTargetType=typeInformation.getType() @AT@ 44694 @LENGTH@ 25
---------------------INS SimpleName@@Name:typeInformation @TO@ MethodInvocation@@typeInformation.getType() @AT@ 44694 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@typeInformation.getType() @AT@ 44710 @LENGTH@ 9
------INS ReturnStatement@@MethodInvocation:getPotentiallyConvertedSimpleWrite(obj,conversionTargetType) @TO@ Block@@ThenBody:{  return getPotentiallyConvertedSimpleWrite(obj,typeInformation != null ? typeInformation.getType() : Object.class);} @AT@ 44729 @LENGTH@ 69
---------INS MethodInvocation@@getPotentiallyConvertedSimpleWrite(obj,conversionTargetType) @TO@ ReturnStatement@@MethodInvocation:getPotentiallyConvertedSimpleWrite(obj,conversionTargetType) @AT@ 44736 @LENGTH@ 61
------------INS SimpleName@@MethodName:getPotentiallyConvertedSimpleWrite:[obj, conversionTargetType] @TO@ MethodInvocation@@getPotentiallyConvertedSimpleWrite(obj,conversionTargetType) @AT@ 44736 @LENGTH@ 61
---------------INS SimpleName@@obj @TO@ SimpleName@@MethodName:getPotentiallyConvertedSimpleWrite:[obj, conversionTargetType] @AT@ 44771 @LENGTH@ 3
---------------INS SimpleName@@conversionTargetType @TO@ SimpleName@@MethodName:getPotentiallyConvertedSimpleWrite:[obj, conversionTargetType] @AT@ 44776 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:Mono.justOrEmpty(issuer).switchIfEmpty(Mono.error(new InvalidBearerTokenException("Missing issuer"))) @TO@ MethodInvocation:Mono.justOrEmpty(issuer).switchIfEmpty(Mono.error(() -> new InvalidBearerTokenException("Missing issuer"))) @AT@ 6463 @LENGTH@ 116
---UPD MethodInvocation@@Mono.justOrEmpty(issuer).switchIfEmpty(Mono.error(new InvalidBearerTokenException("Missing issuer"))) @TO@ Mono.justOrEmpty(issuer).switchIfEmpty(Mono.error(() -> new InvalidBearerTokenException("Missing issuer"))) @AT@ 6470 @LENGTH@ 108
------UPD SimpleName@@MethodName:switchIfEmpty:[Mono.error(new InvalidBearerTokenException("Missing issuer"))] @TO@ MethodName:switchIfEmpty:[Mono.error(() -> new InvalidBearerTokenException("Missing issuer"))] @AT@ 6495 @LENGTH@ 83
---------UPD MethodInvocation@@Mono.error(new InvalidBearerTokenException("Missing issuer")) @TO@ Mono.error(() -> new InvalidBearerTokenException("Missing issuer")) @AT@ 6516 @LENGTH@ 61
------------UPD SimpleName@@MethodName:error:[new InvalidBearerTokenException("Missing issuer")] @TO@ MethodName:error:[() -> new InvalidBearerTokenException("Missing issuer")] @AT@ 6521 @LENGTH@ 56
---------------DEL ClassInstanceCreation@@InvalidBearerTokenException["Missing issuer"] @AT@ 6527 @LENGTH@ 49
---------------INS LambdaExpression@@() -> new InvalidBearerTokenException("Missing issuer") @TO@ SimpleName@@MethodName:error:[new InvalidBearerTokenException("Missing issuer")] @AT@ 6533 @LENGTH@ 55
------------------INS ClassInstanceCreation@@InvalidBearerTokenException["Missing issuer"] @TO@ LambdaExpression@@() -> new InvalidBearerTokenException("Missing issuer") @AT@ 6539 @LENGTH@ 49
---------------------MOV New@@new @TO@ ClassInstanceCreation@@InvalidBearerTokenException["Missing issuer"] @AT@ 6527 @LENGTH@ 3
---------------------MOV SimpleType@@InvalidBearerTokenException @TO@ ClassInstanceCreation@@InvalidBearerTokenException["Missing issuer"] @AT@ 6531 @LENGTH@ 27
---------------------MOV StringLiteral@@"Missing issuer" @TO@ ClassInstanceCreation@@InvalidBearerTokenException["Missing issuer"] @AT@ 6559 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:init, CamelContext context,  @TO@ TypeDeclaration@@[public, abstract]XQueryBuilder, [Expression, Predicate, NamespaceAware, Processor, GeneratedPropertyConfigurer] @AT@ 5403 @LENGTH@ 46
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:init, CamelContext context,  @AT@ 5403 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:init, CamelContext context,  @AT@ 5410 @LENGTH@ 4
---INS SimpleName@@MethodName:init @TO@ MethodDeclaration@@public, void, MethodName:init, CamelContext context,  @AT@ 5415 @LENGTH@ 4
---INS SingleVariableDeclaration@@CamelContext context @TO@ MethodDeclaration@@public, void, MethodName:init, CamelContext context,  @AT@ 5420 @LENGTH@ 20
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 5420 @LENGTH@ 12
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@CamelContext context @AT@ 5433 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(null,"header","1") @TO@ MethodInvocation:template.sendBodyAndHeader("direct:header",null,"header","1") @AT@ 2509 @LENGTH@ 48
---UPD MethodInvocation@@template.sendBodyAndHeader(null,"header","1") @TO@ template.sendBodyAndHeader("direct:header",null,"header","1") @AT@ 2509 @LENGTH@ 47
------UPD SimpleName@@MethodName:sendBodyAndHeader:[null, "header", "1"] @TO@ MethodName:sendBodyAndHeader:["direct:header", null, "header", "1"] @AT@ 2518 @LENGTH@ 38
---------INS StringLiteral@@"direct:header" @TO@ SimpleName@@MethodName:sendBodyAndHeader:[null, "header", "1"] @AT@ 2536 @LENGTH@ 15


UPD IfStatement@@if (type.isAssignableFrom(camelContext.getClass())) {  return camelContext;} @TO@ if (getCamelContext() != null && type.isAssignableFrom(getCamelContext().getClass())) {  return getCamelContext();} @AT@ 13855 @LENGTH@ 104
---INS InfixExpression@@getCamelContext() != null && type.isAssignableFrom(getCamelContext().getClass()) @TO@ IfStatement@@if (type.isAssignableFrom(camelContext.getClass())) {  return camelContext;} @AT@ 13859 @LENGTH@ 80
------INS InfixExpression@@getCamelContext() != null @TO@ InfixExpression@@getCamelContext() != null && type.isAssignableFrom(getCamelContext().getClass()) @AT@ 13859 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ InfixExpression@@getCamelContext() != null @AT@ 13859 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@getCamelContext() != null @AT@ 13876 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@getCamelContext() != null @AT@ 13880 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@getCamelContext() != null && type.isAssignableFrom(getCamelContext().getClass()) @AT@ 13884 @LENGTH@ 2
------INS MethodInvocation@@type.isAssignableFrom(getCamelContext().getClass()) @TO@ InfixExpression@@getCamelContext() != null && type.isAssignableFrom(getCamelContext().getClass()) @AT@ 13888 @LENGTH@ 51
---------MOV SimpleName@@Name:type @TO@ MethodInvocation@@type.isAssignableFrom(getCamelContext().getClass()) @AT@ 13859 @LENGTH@ 4
---------MOV SimpleName@@MethodName:isAssignableFrom:[camelContext.getClass()] @TO@ MethodInvocation@@type.isAssignableFrom(getCamelContext().getClass()) @AT@ 13864 @LENGTH@ 41
------------UPD MethodInvocation@@camelContext.getClass() @TO@ getCamelContext().getClass() @AT@ 13881 @LENGTH@ 23
---------------DEL SimpleName@@Name:camelContext @AT@ 13881 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@camelContext.getClass() @AT@ 13910 @LENGTH@ 17
---DEL MethodInvocation@@type.isAssignableFrom(camelContext.getClass()) @AT@ 13859 @LENGTH@ 46
---UPD Block@@ThenBody:{  return camelContext;} @TO@ ThenBody:{  return getCamelContext();} @AT@ 13907 @LENGTH@ 52
------UPD ReturnStatement@@SimpleName:camelContext @TO@ MethodInvocation:getCamelContext() @AT@ 13925 @LENGTH@ 20
---------DEL SimpleName@@camelContext @AT@ 13932 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ ReturnStatement@@SimpleName:camelContext @AT@ 13966 @LENGTH@ 17


DEL FieldDeclaration@@protected, DefaultParameterMappingStrategy, [strategy=new DefaultParameterMappingStrategy()] @AT@ 1563 @LENGTH@ 91
---DEL Modifier@@protected @AT@ 1563 @LENGTH@ 9
---DEL SimpleType@@DefaultParameterMappingStrategy @AT@ 1573 @LENGTH@ 31
---DEL VariableDeclarationFragment@@strategy=new DefaultParameterMappingStrategy() @AT@ 1605 @LENGTH@ 48
------DEL SimpleName@@strategy @AT@ 1605 @LENGTH@ 8
------DEL ClassInstanceCreation@@DefaultParameterMappingStrategy[] @AT@ 1616 @LENGTH@ 37
---------DEL New@@new @AT@ 1616 @LENGTH@ 3
---------DEL SimpleType@@DefaultParameterMappingStrategy @AT@ 1620 @LENGTH@ 31


UPD VariableDeclarationStatement@@String endpoint=String.format("sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500ms",TEST_INOUT_DESTINATION_NAME); @TO@ String endpoint=String.format("sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500",TEST_INOUT_DESTINATION_NAME); @AT@ 2059 @LENGTH@ 131
---UPD VariableDeclarationFragment@@endpoint=String.format("sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500ms",TEST_INOUT_DESTINATION_NAME) @TO@ endpoint=String.format("sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500",TEST_INOUT_DESTINATION_NAME) @AT@ 2066 @LENGTH@ 123
------UPD MethodInvocation@@String.format("sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500ms",TEST_INOUT_DESTINATION_NAME) @TO@ String.format("sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500",TEST_INOUT_DESTINATION_NAME) @AT@ 2077 @LENGTH@ 112
---------UPD SimpleName@@MethodName:format:["sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500ms", TEST_INOUT_DESTINATION_NAME] @TO@ MethodName:format:["sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500", TEST_INOUT_DESTINATION_NAME] @AT@ 2084 @LENGTH@ 105
------------UPD StringLiteral@@"sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500ms" @TO@ "sjms:queue:%s?ttl=1000&exchangePattern=InOut&responseTimeOut=500" @AT@ 2091 @LENGTH@ 68


UPD VariableDeclarationStatement@@Jwt jwt=JwtHelper.decode(token); @TO@ Jwt jwt; @AT@ 5967 @LENGTH@ 34
---UPD VariableDeclarationFragment@@jwt=JwtHelper.decode(token) @TO@ jwt @AT@ 5971 @LENGTH@ 29


DEL MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationResponseRedirectUriNotEqualAuthorizationRequestRedirectUriThenThrowOAuth2AuthorizationException,  @AT@ 4936 @LENGTH@ 689
---DEL Modifier@@public @AT@ 4936 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 4943 @LENGTH@ 4
---DEL SimpleName@@MethodName:authenticateWhenAuthorizationResponseRedirectUriNotEqualAuthorizationRequestRedirectUriThenThrowOAuth2AuthorizationException @AT@ 4948 @LENGTH@ 124
---DEL VariableDeclarationStatement@@OAuth2AuthorizationResponse authorizationResponse=success().redirectUri("https://example2.com").build(); @AT@ 5079 @LENGTH@ 106
------DEL SimpleType@@OAuth2AuthorizationResponse @AT@ 5079 @LENGTH@ 27
------DEL VariableDeclarationFragment@@authorizationResponse=success().redirectUri("https://example2.com").build() @AT@ 5107 @LENGTH@ 77
---------DEL SimpleName@@authorizationResponse @AT@ 5107 @LENGTH@ 21
---------DEL MethodInvocation@@success().redirectUri("https://example2.com").build() @AT@ 5131 @LENGTH@ 53
------------DEL MethodInvocation@@MethodName:redirectUri:["https://example2.com"] @AT@ 5131 @LENGTH@ 45
---------------DEL StringLiteral@@"https://example2.com" @AT@ 5153 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:success:[] @AT@ 5131 @LENGTH@ 9
------------DEL SimpleName@@MethodName:build:[] @AT@ 5177 @LENGTH@ 7
---DEL VariableDeclarationStatement@@OAuth2AuthorizationExchange authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,authorizationResponse); @AT@ 5188 @LENGTH@ 139
------DEL SimpleType@@OAuth2AuthorizationExchange @AT@ 5188 @LENGTH@ 27
------DEL VariableDeclarationFragment@@authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,authorizationResponse) @AT@ 5216 @LENGTH@ 110
---------DEL SimpleName@@authorizationExchange @AT@ 5216 @LENGTH@ 21
---------DEL ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, authorizationResponse] @AT@ 5240 @LENGTH@ 86
------------DEL New@@new @AT@ 5240 @LENGTH@ 3
------------DEL SimpleType@@OAuth2AuthorizationExchange @AT@ 5244 @LENGTH@ 27
------------DEL FieldAccess@@this.authorizationRequest @AT@ 5277 @LENGTH@ 25
---------------DEL ThisExpression@@this @AT@ 5277 @LENGTH@ 4
---------------DEL SimpleName@@authorizationRequest @AT@ 5282 @LENGTH@ 20
------------DEL SimpleName@@authorizationResponse @AT@ 5304 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> {
  this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange));
}
).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("invalid_redirect_uri_parameter") @AT@ 5331 @LENGTH@ 291
------DEL MethodInvocation@@assertThatThrownBy(() -> {
  this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange));
}
).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("invalid_redirect_uri_parameter") @AT@ 5331 @LENGTH@ 290
---------DEL MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @AT@ 5331 @LENGTH@ 235
------------DEL TypeLiteral@@OAuth2AuthorizationException.class @AT@ 5531 @LENGTH@ 34
---------DEL MethodInvocation@@MethodName:assertThatThrownBy:[() -> {
  this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange));
}
] @AT@ 5331 @LENGTH@ 186
------------DEL LambdaExpression@@() -> {
  this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange));
}
 @AT@ 5350 @LENGTH@ 166
---------------DEL ExpressionStatement@@MethodInvocation:this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 5361 @LENGTH@ 151
------------------DEL MethodInvocation@@this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 5361 @LENGTH@ 150
---------------------DEL FieldAccess@@this.authenticationProvider @AT@ 5361 @LENGTH@ 27
------------------------DEL ThisExpression@@this @AT@ 5361 @LENGTH@ 4
------------------------DEL SimpleName@@authenticationProvider @AT@ 5366 @LENGTH@ 22
---------------------DEL SimpleName@@MethodName:authenticate:[new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)] @AT@ 5389 @LENGTH@ 122
------------------------DEL ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[this.clientRegistration, authorizationExchange] @AT@ 5408 @LENGTH@ 102
---------------------------DEL New@@new @AT@ 5408 @LENGTH@ 3
---------------------------DEL SimpleType@@OAuth2AuthorizationCodeAuthenticationToken @AT@ 5412 @LENGTH@ 42
---------------------------DEL FieldAccess@@this.clientRegistration @AT@ 5463 @LENGTH@ 23
------------------------------DEL ThisExpression@@this @AT@ 5463 @LENGTH@ 4
------------------------------DEL SimpleName@@clientRegistration @AT@ 5468 @LENGTH@ 18
---------------------------DEL SimpleName@@authorizationExchange @AT@ 5488 @LENGTH@ 21
---------DEL SimpleName@@MethodName:hasMessageContaining:["invalid_redirect_uri_parameter"] @AT@ 5567 @LENGTH@ 54
------------DEL StringLiteral@@"invalid_redirect_uri_parameter" @AT@ 5588 @LENGTH@ 32


UPD MethodDeclaration@@default, TerminatingRemove<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, TerminatingRemove<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 4169 @LENGTH@ 135
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 4207 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 4226 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 4251 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 4258 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 4258 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 4267 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 4273 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 4279 @LENGTH@ 18


INS MethodDeclaration@@public, int, MethodName:indexOf, final String str,  @TO@ TypeDeclaration@@[public]UnicodeHelper, [Serializable] @AT@ 3291 @LENGTH@ 76
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:indexOf, final String str,  @AT@ 3291 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:indexOf, final String str,  @AT@ 3298 @LENGTH@ 3
---INS SimpleName@@MethodName:indexOf @TO@ MethodDeclaration@@public, int, MethodName:indexOf, final String str,  @AT@ 3302 @LENGTH@ 7
---INS SingleVariableDeclaration@@final String str @TO@ MethodDeclaration@@public, int, MethodName:indexOf, final String str,  @AT@ 3310 @LENGTH@ 16
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String str @AT@ 3310 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String str @AT@ 3316 @LENGTH@ 6
------INS SimpleName@@str @TO@ SingleVariableDeclaration@@final String str @AT@ 3323 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:indexOf(str,0) @TO@ MethodDeclaration@@public, int, MethodName:indexOf, final String str,  @AT@ 3338 @LENGTH@ 23
------INS MethodInvocation@@indexOf(str,0) @TO@ ReturnStatement@@MethodInvocation:indexOf(str,0) @AT@ 3345 @LENGTH@ 15
---------INS SimpleName@@MethodName:indexOf:[str, 0] @TO@ MethodInvocation@@indexOf(str,0) @AT@ 3345 @LENGTH@ 15
------------INS SimpleName@@str @TO@ SimpleName@@MethodName:indexOf:[str, 0] @AT@ 3353 @LENGTH@ 3
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:indexOf:[str, 0] @AT@ 3358 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @TO@ TypeDeclaration@@[public]FormLoginTests,  @AT@ 6809 @LENGTH@ 861
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 6809 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 6816 @LENGTH@ 4
---INS SimpleName@@MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 6821 @LENGTH@ 55
---INS VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build(); @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 6883 @LENGTH@ 308
------INS SimpleType@@SecurityWebFilterChain @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build(); @AT@ 6883 @LENGTH@ 22
------INS VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build(); @AT@ 6906 @LENGTH@ 284
---------INS SimpleName@@securityWebFilter @TO@ VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6906 @LENGTH@ 17
---------INS MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @TO@ VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 264
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 252
------------INS MethodInvocation@@MethodName:authenticationFailureHandler:[new RedirectServerAuthenticationFailureHandler("/failure")] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 241
---------------INS ClassInstanceCreation@@RedirectServerAuthenticationFailureHandler["/failure"] @TO@ MethodInvocation@@MethodName:authenticationFailureHandler:[new RedirectServerAuthenticationFailureHandler("/failure")] @AT@ 7108 @LENGTH@ 58
------------------INS New@@new @TO@ ClassInstanceCreation@@RedirectServerAuthenticationFailureHandler["/failure"] @AT@ 7108 @LENGTH@ 3
------------------INS SimpleType@@RedirectServerAuthenticationFailureHandler @TO@ ClassInstanceCreation@@RedirectServerAuthenticationFailureHandler["/failure"] @AT@ 7112 @LENGTH@ 42
------------------INS StringLiteral@@"/failure" @TO@ ClassInstanceCreation@@RedirectServerAuthenticationFailureHandler["/failure"] @AT@ 7155 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:formLogin:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 147
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 131
------------INS MethodInvocation@@MethodName:authenticated:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 120
------------INS MethodInvocation@@MethodName:anyExchange:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 104
------------INS MethodInvocation@@MethodName:permitAll:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 85
------------INS MethodInvocation@@MethodName:pathMatchers:["/login", "/failure"] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 73
---------------INS StringLiteral@@"/login" @TO@ MethodInvocation@@MethodName:pathMatchers:["/login", "/failure"] @AT@ 6978 @LENGTH@ 8
---------------INS StringLiteral@@"/failure" @TO@ MethodInvocation@@MethodName:pathMatchers:["/login", "/failure"] @AT@ 6988 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:authorizeExchange:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 33
------------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 6926 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 6926 @LENGTH@ 4
---------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 6931 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/failure").permitAll().anyExchange().authenticated().and().formLogin().authenticationFailureHandler(new RedirectServerAuthenticationFailureHandler("/failure")).and().build() @AT@ 7183 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 7195 @LENGTH@ 105
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @AT@ 7195 @LENGTH@ 13
------INS VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @TO@ VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @AT@ 7209 @LENGTH@ 90
---------INS SimpleName@@webTestClient @TO@ VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 7209 @LENGTH@ 13
---------INS MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @TO@ VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 7225 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:bindToWebFilters:[securityWebFilter] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 7225 @LENGTH@ 61
---------------INS SimpleName@@securityWebFilter @TO@ MethodInvocation@@MethodName:bindToWebFilters:[securityWebFilter] @AT@ 7268 @LENGTH@ 17
------------INS SimpleName@@Name:WebTestClientBuilder @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 7225 @LENGTH@ 20
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 7292 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 7304 @LENGTH@ 106
------INS SimpleType@@WebDriver @TO@ VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @AT@ 7304 @LENGTH@ 9
------INS VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @TO@ VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @AT@ 7314 @LENGTH@ 95
---------INS SimpleName@@driver @TO@ VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 7314 @LENGTH@ 6
---------INS MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @TO@ VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 7323 @LENGTH@ 86
------------INS MethodInvocation@@MethodName:webTestClientSetup:[webTestClient] @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 7323 @LENGTH@ 73
---------------INS SimpleName@@webTestClient @TO@ MethodInvocation@@MethodName:webTestClientSetup:[webTestClient] @AT@ 7382 @LENGTH@ 13
------------INS SimpleName@@Name:WebTestClientHtmlUnitDriverBuilder @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 7323 @LENGTH@ 34
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 7402 @LENGTH@ 7
---INS VariableDeclarationStatement@@DefaultLoginPage loginPage=HomePage.to(driver,DefaultLoginPage.class).assertAt(); @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 7414 @LENGTH@ 89
------INS SimpleType@@DefaultLoginPage @TO@ VariableDeclarationStatement@@DefaultLoginPage loginPage=HomePage.to(driver,DefaultLoginPage.class).assertAt(); @AT@ 7414 @LENGTH@ 16
------INS VariableDeclarationFragment@@loginPage=HomePage.to(driver,DefaultLoginPage.class).assertAt() @TO@ VariableDeclarationStatement@@DefaultLoginPage loginPage=HomePage.to(driver,DefaultLoginPage.class).assertAt(); @AT@ 7431 @LENGTH@ 71
---------INS SimpleName@@loginPage @TO@ VariableDeclarationFragment@@loginPage=HomePage.to(driver,DefaultLoginPage.class).assertAt() @AT@ 7431 @LENGTH@ 9
---------INS MethodInvocation@@HomePage.to(driver,DefaultLoginPage.class).assertAt() @TO@ VariableDeclarationFragment@@loginPage=HomePage.to(driver,DefaultLoginPage.class).assertAt() @AT@ 7443 @LENGTH@ 59
------------INS MethodInvocation@@MethodName:to:[driver, DefaultLoginPage.class] @TO@ MethodInvocation@@HomePage.to(driver,DefaultLoginPage.class).assertAt() @AT@ 7443 @LENGTH@ 43
---------------INS SimpleName@@driver @TO@ MethodInvocation@@MethodName:to:[driver, DefaultLoginPage.class] @AT@ 7455 @LENGTH@ 6
---------------INS TypeLiteral@@DefaultLoginPage.class @TO@ MethodInvocation@@MethodName:to:[driver, DefaultLoginPage.class] @AT@ 7463 @LENGTH@ 22
------------INS SimpleName@@Name:HomePage @TO@ MethodInvocation@@HomePage.to(driver,DefaultLoginPage.class).assertAt() @AT@ 7443 @LENGTH@ 8
------------INS SimpleName@@MethodName:assertAt:[] @TO@ MethodInvocation@@HomePage.to(driver,DefaultLoginPage.class).assertAt() @AT@ 7492 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 7507 @LENGTH@ 100
------INS MethodInvocation@@loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @TO@ ExpressionStatement@@MethodInvocation:loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @AT@ 7507 @LENGTH@ 99
---------INS MethodInvocation@@MethodName:password:["invalid"] @TO@ MethodInvocation@@loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @AT@ 7507 @LENGTH@ 71
------------INS StringLiteral@@"invalid" @TO@ MethodInvocation@@MethodName:password:["invalid"] @AT@ 7568 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:username:["invalid"] @TO@ MethodInvocation@@loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @AT@ 7507 @LENGTH@ 46
------------INS StringLiteral@@"invalid" @TO@ MethodInvocation@@MethodName:username:["invalid"] @AT@ 7543 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:loginForm:[] @TO@ MethodInvocation@@loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @AT@ 7507 @LENGTH@ 21
---------INS SimpleName@@Name:loginPage @TO@ MethodInvocation@@loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @AT@ 7507 @LENGTH@ 9
---------INS SimpleName@@MethodName:submit:[HomePage.class] @TO@ MethodInvocation@@loginPage.loginForm().username("invalid").password("invalid").submit(HomePage.class) @AT@ 7584 @LENGTH@ 22
------------INS TypeLiteral@@HomePage.class @TO@ SimpleName@@MethodName:submit:[HomePage.class] @AT@ 7591 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(driver.getCurrentUrl()).endsWith("/failure") @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomAuthenticationFailureHandlerThenUsed,  @AT@ 7611 @LENGTH@ 56
------INS MethodInvocation@@assertThat(driver.getCurrentUrl()).endsWith("/failure") @TO@ ExpressionStatement@@MethodInvocation:assertThat(driver.getCurrentUrl()).endsWith("/failure") @AT@ 7611 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:assertThat:[driver.getCurrentUrl()] @TO@ MethodInvocation@@assertThat(driver.getCurrentUrl()).endsWith("/failure") @AT@ 7611 @LENGTH@ 34
------------INS MethodInvocation@@driver.getCurrentUrl() @TO@ MethodInvocation@@MethodName:assertThat:[driver.getCurrentUrl()] @AT@ 7622 @LENGTH@ 22
---------------INS SimpleName@@Name:driver @TO@ MethodInvocation@@driver.getCurrentUrl() @AT@ 7622 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCurrentUrl:[] @TO@ MethodInvocation@@driver.getCurrentUrl() @AT@ 7629 @LENGTH@ 15
---------INS SimpleName@@MethodName:endsWith:["/failure"] @TO@ MethodInvocation@@assertThat(driver.getCurrentUrl()).endsWith("/failure") @AT@ 7646 @LENGTH@ 20
------------INS StringLiteral@@"/failure" @TO@ SimpleName@@MethodName:endsWith:["/failure"] @AT@ 7655 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:this.builder.node(AbstractClusteringTestCase.TWO_NODES).setup("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:add(port=11622,host=%s)",AbstractClusteringTestCase.TESTSUITE_NODE0).setup("/subsystem=infinispan/remote-cache-container=web:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)").setup("/subsystem=infinispan/remote-cache-container=web/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server-1])").setup("/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove()").teardown("/subsystem=infinispan/remote-cache-container=web:remove").teardown("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:remove") @TO@ MethodInvocation:this.builder.node(AbstractClusteringTestCase.TWO_NODES).setup("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:add(port=11622,host=%s)",AbstractClusteringTestCase.TESTSUITE_NODE0).setup("/subsystem=infinispan/remote-cache-container=sso:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)").setup("/subsystem=infinispan/remote-cache-container=sso/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server])").teardown("/subsystem=infinispan/remote-cache-container=sso:remove").teardown("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:remove") @AT@ 1349 @LENGTH@ 1054
---UPD MethodInvocation@@this.builder.node(AbstractClusteringTestCase.TWO_NODES).setup("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:add(port=11622,host=%s)",AbstractClusteringTestCase.TESTSUITE_NODE0).setup("/subsystem=infinispan/remote-cache-container=web:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)").setup("/subsystem=infinispan/remote-cache-container=web/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server-1])").setup("/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove()").teardown("/subsystem=infinispan/remote-cache-container=web:remove").teardown("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:remove") @TO@ this.builder.node(AbstractClusteringTestCase.TWO_NODES).setup("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:add(port=11622,host=%s)",AbstractClusteringTestCase.TESTSUITE_NODE0).setup("/subsystem=infinispan/remote-cache-container=sso:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)").setup("/subsystem=infinispan/remote-cache-container=sso/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server])").teardown("/subsystem=infinispan/remote-cache-container=sso:remove").teardown("/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:remove") @AT@ 1349 @LENGTH@ 1036
------UPD MethodInvocation@@MethodName:teardown:["/subsystem=infinispan/remote-cache-container=web:remove"] @TO@ MethodName:teardown:["/subsystem=infinispan/remote-cache-container=sso:remove"] @AT@ 1349 @LENGTH@ 898
---------UPD StringLiteral@@"/subsystem=infinispan/remote-cache-container=web:remove" @TO@ "/subsystem=infinispan/remote-cache-container=sso:remove" @AT@ 2189 @LENGTH@ 57
------DEL MethodInvocation@@MethodName:teardown:["/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove()"] @AT@ 1349 @LENGTH@ 813
---------DEL StringLiteral@@"/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove()" @AT@ 2083 @LENGTH@ 78
------DEL MethodInvocation@@MethodName:setup:["/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)"] @AT@ 1349 @LENGTH@ 707
---------DEL StringLiteral@@"/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)" @AT@ 1954 @LENGTH@ 101
------UPD MethodInvocation@@MethodName:setup:["/subsystem=infinispan/remote-cache-container=web/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server-1])"] @TO@ MethodName:setup:["/subsystem=infinispan/remote-cache-container=sso/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server])"] @AT@ 1349 @LENGTH@ 581
---------UPD StringLiteral@@"/subsystem=infinispan/remote-cache-container=web/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server-1])" @TO@ "/subsystem=infinispan/remote-cache-container=sso/remote-cluster=infinispan-server-cluster:add(socket-bindings=[infinispan-server])" @AT@ 1795 @LENGTH@ 134
------UPD MethodInvocation@@MethodName:setup:["/subsystem=infinispan/remote-cache-container=web:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)"] @TO@ MethodName:setup:["/subsystem=infinispan/remote-cache-container=sso:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)"] @AT@ 1349 @LENGTH@ 422
---------UPD StringLiteral@@"/subsystem=infinispan/remote-cache-container=web:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)" @TO@ "/subsystem=infinispan/remote-cache-container=sso:add(default-remote-cluster=infinispan-server-cluster, module=org.wildfly.clustering.web.hotrod)" @AT@ 1624 @LENGTH@ 146
------UPD MethodInvocation@@MethodName:setup:["/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:add(port=11622,host=%s)", AbstractClusteringTestCase.TESTSUITE_NODE0] @TO@ MethodName:setup:["/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:add(port=11622,host=%s)", AbstractClusteringTestCase.TESTSUITE_NODE0] @AT@ 1349 @LENGTH@ 251
---------UPD StringLiteral@@"/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:add(port=11622,host=%s)" @TO@ "/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:add(port=11622,host=%s)" @AT@ 1428 @LENGTH@ 127
------UPD SimpleName@@MethodName:teardown:["/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:remove"] @TO@ MethodName:teardown:["/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:remove"] @AT@ 2265 @LENGTH@ 120
---------UPD StringLiteral@@"/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server-1:remove" @TO@ "/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=infinispan-server:remove" @AT@ 2274 @LENGTH@ 110


UPD IfStatement@@if (expression instanceof ExpressionFactory) {  setExpressionType((ExpressionFactory)expression);} @TO@ if (expression instanceof ExpressionFactory) {  setExpressionType((ExpressionFactory)expression);} else {  setExpressionValue(expression);} @AT@ 2867 @LENGTH@ 118
---INS Block@@ElseBody:{  setExpressionValue(expression);} @TO@ IfStatement@@if (expression instanceof ExpressionFactory) {  setExpressionType((ExpressionFactory)expression);} @AT@ 2952 @LENGTH@ 55
------MOV ExpressionStatement@@MethodInvocation:setExpressionValue(expression) @TO@ Block@@ElseBody:{  setExpressionValue(expression);} @AT@ 2827 @LENGTH@ 31


INS MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @TO@ TypeDeclaration@@[public]BasicAuthenticationFilterTests,  @AT@ 17531 @LENGTH@ 691
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17531 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17538 @LENGTH@ 4
---INS SimpleName@@MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17543 @LENGTH@ 61
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17614 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17628 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 17628 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 17651 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 17651 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 17661 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 17661 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 17665 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","Basic ") @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17693 @LENGTH@ 45
------INS MethodInvocation@@request.addHeader("Authorization","Basic ") @TO@ ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","Basic ") @AT@ 17693 @LENGTH@ 44
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader("Authorization","Basic ") @AT@ 17693 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["Authorization", "Basic "] @TO@ MethodInvocation@@request.addHeader("Authorization","Basic ") @AT@ 17701 @LENGTH@ 36
------------INS StringLiteral@@"Authorization" @TO@ SimpleName@@MethodName:addHeader:["Authorization", "Basic "] @AT@ 17711 @LENGTH@ 15
------------INS StringLiteral@@"Basic " @TO@ SimpleName@@MethodName:addHeader:["Authorization", "Basic "] @AT@ 17728 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:request.setServletPath("/some_file.html") @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17741 @LENGTH@ 42
------INS MethodInvocation@@request.setServletPath("/some_file.html") @TO@ ExpressionStatement@@MethodInvocation:request.setServletPath("/some_file.html") @AT@ 17741 @LENGTH@ 41
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setServletPath("/some_file.html") @AT@ 17741 @LENGTH@ 7
---------INS SimpleName@@MethodName:setServletPath:["/some_file.html"] @TO@ MethodInvocation@@request.setServletPath("/some_file.html") @AT@ 17749 @LENGTH@ 33
------------INS StringLiteral@@"/some_file.html" @TO@ SimpleName@@MethodName:setServletPath:["/some_file.html"] @AT@ 17764 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:request.setSession(new MockHttpSession()) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17786 @LENGTH@ 42
------INS MethodInvocation@@request.setSession(new MockHttpSession()) @TO@ ExpressionStatement@@MethodInvocation:request.setSession(new MockHttpSession()) @AT@ 17786 @LENGTH@ 41
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setSession(new MockHttpSession()) @AT@ 17786 @LENGTH@ 7
---------INS SimpleName@@MethodName:setSession:[new MockHttpSession()] @TO@ MethodInvocation@@request.setSession(new MockHttpSession()) @AT@ 17794 @LENGTH@ 33
------------INS ClassInstanceCreation@@MockHttpSession[] @TO@ SimpleName@@MethodName:setSession:[new MockHttpSession()] @AT@ 17805 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpSession[] @AT@ 17805 @LENGTH@ 3
---------------INS SimpleType@@MockHttpSession @TO@ ClassInstanceCreation@@MockHttpSession[] @AT@ 17809 @LENGTH@ 15
---INS VariableDeclarationStatement@@final MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17831 @LENGTH@ 71
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 17831 @LENGTH@ 5
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@final MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 17837 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@final MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 17861 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 17861 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 17872 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 17872 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 17876 @LENGTH@ 23
---INS VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17906 @LENGTH@ 44
------INS SimpleType@@FilterChain @TO@ VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @AT@ 17906 @LENGTH@ 11
------INS VariableDeclarationFragment@@chain=mock(FilterChain.class) @TO@ VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @AT@ 17918 @LENGTH@ 31
---------INS SimpleName@@chain @TO@ VariableDeclarationFragment@@chain=mock(FilterChain.class) @AT@ 17918 @LENGTH@ 5
---------INS MethodInvocation@@mock(FilterChain.class) @TO@ VariableDeclarationFragment@@chain=mock(FilterChain.class) @AT@ 17926 @LENGTH@ 23
------------INS SimpleName@@MethodName:mock:[FilterChain.class] @TO@ MethodInvocation@@mock(FilterChain.class) @AT@ 17926 @LENGTH@ 23
---------------INS TypeLiteral@@FilterChain.class @TO@ SimpleName@@MethodName:mock:[FilterChain.class] @AT@ 17931 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,response,chain) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17953 @LENGTH@ 42
------INS MethodInvocation@@filter.doFilter(request,response,chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,response,chain) @AT@ 17953 @LENGTH@ 41
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,response,chain) @AT@ 17953 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, response, chain] @TO@ MethodInvocation@@filter.doFilter(request,response,chain) @AT@ 17960 @LENGTH@ 34
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, response, chain] @AT@ 17969 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:doFilter:[request, response, chain] @AT@ 17978 @LENGTH@ 8
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[request, response, chain] @AT@ 17988 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:verify(chain,never()).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 17998 @LENGTH@ 91
------INS MethodInvocation@@verify(chain,never()).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @TO@ ExpressionStatement@@MethodInvocation:verify(chain,never()).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 17998 @LENGTH@ 90
---------INS MethodInvocation@@MethodName:verify:[chain, never()] @TO@ MethodInvocation@@verify(chain,never()).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 17998 @LENGTH@ 22
------------INS SimpleName@@chain @TO@ MethodInvocation@@MethodName:verify:[chain, never()] @AT@ 18005 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:never:[] @TO@ MethodInvocation@@MethodName:verify:[chain, never()] @AT@ 18012 @LENGTH@ 7
---------INS SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @TO@ MethodInvocation@@verify(chain,never()).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 18021 @LENGTH@ 67
------------INS MethodInvocation@@any(ServletRequest.class) @TO@ SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @AT@ 18030 @LENGTH@ 25
---------------INS SimpleName@@MethodName:any:[ServletRequest.class] @TO@ MethodInvocation@@any(ServletRequest.class) @AT@ 18030 @LENGTH@ 25
------------------INS TypeLiteral@@ServletRequest.class @TO@ SimpleName@@MethodName:any:[ServletRequest.class] @AT@ 18034 @LENGTH@ 20
------------INS MethodInvocation@@any(ServletResponse.class) @TO@ SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @AT@ 18061 @LENGTH@ 26
---------------INS SimpleName@@MethodName:any:[ServletResponse.class] @TO@ MethodInvocation@@any(ServletResponse.class) @AT@ 18061 @LENGTH@ 26
------------------INS TypeLiteral@@ServletResponse.class @TO@ SimpleName@@MethodName:any:[ServletResponse.class] @AT@ 18065 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 18092 @LENGTH@ 76
------INS MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 18092 @LENGTH@ 75
---------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 18092 @LENGTH@ 66
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 18103 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 18103 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 18103 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 18138 @LENGTH@ 19
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 18159 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(response.getStatus()).isEqualTo(401) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenUnauthorized, Exception,  @AT@ 18171 @LENGTH@ 48
------INS MethodInvocation@@assertThat(response.getStatus()).isEqualTo(401) @TO@ ExpressionStatement@@MethodInvocation:assertThat(response.getStatus()).isEqualTo(401) @AT@ 18171 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:assertThat:[response.getStatus()] @TO@ MethodInvocation@@assertThat(response.getStatus()).isEqualTo(401) @AT@ 18171 @LENGTH@ 32
------------INS MethodInvocation@@response.getStatus() @TO@ MethodInvocation@@MethodName:assertThat:[response.getStatus()] @AT@ 18182 @LENGTH@ 20
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getStatus() @AT@ 18182 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getStatus:[] @TO@ MethodInvocation@@response.getStatus() @AT@ 18191 @LENGTH@ 11
---------INS SimpleName@@MethodName:isEqualTo:[401] @TO@ MethodInvocation@@assertThat(response.getStatus()).isEqualTo(401) @AT@ 18204 @LENGTH@ 14
------------INS NumberLiteral@@401 @TO@ SimpleName@@MethodName:isEqualTo:[401] @AT@ 18214 @LENGTH@ 3


UPD TypeDeclaration@@[public]OAuth2AuthorizedClientProvider,  @TO@ [@FunctionalInterface, public]OAuth2AuthorizedClientProvider,  @AT@ 1288 @LENGTH@ 749
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]OAuth2AuthorizedClientProvider,  @AT@ 1288 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ MethodInvocation:PeriodicSizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 9879 @LENGTH@ 80
---UPD MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ PeriodicSizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 9879 @LENGTH@ 79
------INS QualifiedName@@Name:PeriodicSizeRotatingHandlerResourceDefinition.FILTER_SPEC @TO@ MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 9814 @LENGTH@ 57
------DEL SimpleName@@Name:FILTER_SPEC @AT@ 9879 @LENGTH@ 11


INS MethodDeclaration@@public, voidMethodName:ProviderManager, AuthenticationProvider... providers,  @TO@ TypeDeclaration@@[public]ProviderManager, [AuthenticationManager, MessageSourceAware, InitializingBean] @AT@ 5243 @LENGTH@ 104
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:ProviderManager, AuthenticationProvider... providers,  @AT@ 5243 @LENGTH@ 6
---INS SimpleName@@MethodName:ProviderManager @TO@ MethodDeclaration@@public, voidMethodName:ProviderManager, AuthenticationProvider... providers,  @AT@ 5250 @LENGTH@ 15
---INS SingleVariableDeclaration@@AuthenticationProvider... providers @TO@ MethodDeclaration@@public, voidMethodName:ProviderManager, AuthenticationProvider... providers,  @AT@ 5266 @LENGTH@ 35
------INS SimpleType@@AuthenticationProvider @TO@ SingleVariableDeclaration@@AuthenticationProvider... providers @AT@ 5266 @LENGTH@ 22
------INS SimpleName@@providers @TO@ SingleVariableDeclaration@@AuthenticationProvider... providers @AT@ 5292 @LENGTH@ 9
---INS ConstructorInvocation@@this(Arrays.asList(providers),null); @TO@ MethodDeclaration@@public, voidMethodName:ProviderManager, AuthenticationProvider... providers,  @AT@ 5307 @LENGTH@ 37
------INS MethodInvocation@@Arrays.asList(providers) @TO@ ConstructorInvocation@@this(Arrays.asList(providers),null); @AT@ 5312 @LENGTH@ 24
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(providers) @AT@ 5312 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:[providers] @TO@ MethodInvocation@@Arrays.asList(providers) @AT@ 5319 @LENGTH@ 17
------------INS SimpleName@@providers @TO@ SimpleName@@MethodName:asList:[providers] @AT@ 5326 @LENGTH@ 9
------INS NullLiteral@@null @TO@ ConstructorInvocation@@this(Arrays.asList(providers),null); @AT@ 5338 @LENGTH@ 4


UPD VariableDeclarationStatement@@ConverterConfiguration config=new ConverterConfiguration(StoreConversions.NONE,Collections.singletonList(LocalDateTimeToDateConverter.INSTANCE),Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class))); @TO@ ConverterConfiguration config=new ConverterConfiguration(StoreConversions.NONE,Collections.singletonList(LocalDateTimeToDateConverter.INSTANCE),Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate()); @AT@ 10097 @LENGTH@ 243
---UPD VariableDeclarationFragment@@config=new ConverterConfiguration(StoreConversions.NONE,Collections.singletonList(LocalDateTimeToDateConverter.INSTANCE),Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class))) @TO@ config=new ConverterConfiguration(StoreConversions.NONE,Collections.singletonList(LocalDateTimeToDateConverter.INSTANCE),Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate()) @AT@ 10120 @LENGTH@ 219
------UPD ClassInstanceCreation@@ConverterConfiguration[StoreConversions.NONE, Collections.singletonList(LocalDateTimeToDateConverter.INSTANCE), Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class))] @TO@ ConverterConfiguration[StoreConversions.NONE, Collections.singletonList(LocalDateTimeToDateConverter.INSTANCE), Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate()] @AT@ 10129 @LENGTH@ 210
---------UPD MethodInvocation@@Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)) @TO@ Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate() @AT@ 10253 @LENGTH@ 85
------------UPD SimpleName@@Name:Collections @TO@ Name:Predicate @AT@ 10253 @LENGTH@ 11
------------DEL SimpleName@@MethodName:singleton:[new ConvertiblePair(java.time.LocalDateTime.class,Date.class)] @AT@ 10265 @LENGTH@ 73
---------------DEL ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 10275 @LENGTH@ 62
------------INS MethodInvocation@@MethodName:isEqual:[new ConvertiblePair(java.time.LocalDateTime.class,Date.class)] @TO@ MethodInvocation@@Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)) @AT@ 10313 @LENGTH@ 99
---------------INS ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @TO@ MethodInvocation@@MethodName:isEqual:[new ConvertiblePair(java.time.LocalDateTime.class,Date.class)] @AT@ 10349 @LENGTH@ 62
------------------MOV New@@new @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 10275 @LENGTH@ 3
------------------MOV SimpleType@@ConvertiblePair @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 10279 @LENGTH@ 15
------------------MOV TypeLiteral@@java.time.LocalDateTime.class @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 10295 @LENGTH@ 29
------------------MOV TypeLiteral@@Date.class @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 10326 @LENGTH@ 10
------------INS SimpleName@@MethodName:negate:[] @TO@ MethodInvocation@@Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)) @AT@ 10413 @LENGTH@ 8


UPD MethodDeclaration@@voidMethodName:RsaJwkDefinition, String keyId, PublicKeyUse publicKeyUse, CryptoAlgorithm algorithm, String modulus, String exponent,  @TO@ voidMethodName:RsaJwkDefinition, String keyId, String x5t, PublicKeyUse publicKeyUse, CryptoAlgorithm algorithm, String modulus, String exponent,  @AT@ 1425 @LENGTH@ 255
---INS SingleVariableDeclaration@@String x5t @TO@ MethodDeclaration@@voidMethodName:RsaJwkDefinition, String keyId, PublicKeyUse publicKeyUse, CryptoAlgorithm algorithm, String modulus, String exponent,  @AT@ 1534 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String x5t @AT@ 1534 @LENGTH@ 6
------INS SimpleName@@x5t @TO@ SingleVariableDeclaration@@String x5t @AT@ 1541 @LENGTH@ 3
---UPD SuperConstructorInvocation@@super(keyId,KeyType.RSA,publicKeyUse,algorithm);
 @TO@ super(keyId,x5t,KeyType.RSA,publicKeyUse,algorithm);
 @AT@ 1572 @LENGTH@ 51
------INS SimpleName@@x5t @TO@ SuperConstructorInvocation@@super(keyId,KeyType.RSA,publicKeyUse,algorithm);
 @AT@ 1674 @LENGTH@ 3


UPD EnhancedForStatement@@for (Map.Entry<String,Set<String>> entry : byPackage.entrySet()) {  String fn=entry.getKey().replace('.','/') + "/jaxb.index";  if (project.getCompileSourceRoots().stream().map(Paths::get).map(p -> p.resolve(fn)).anyMatch(Files::isRegularFile)) {    continue;  }  StringBuilder sb=new StringBuilder();  sb.append("# " + GENERATED_MSG + NL);  for (  String s : entry.getValue()) {    sb.append(s);    sb.append(NL);  }  updateResource(jaxbIndexDir,fn,sb.toString());} @TO@ for (Map.Entry<String,Set<String>> entry : byPackage.entrySet()) {  String fn=entry.getKey().replace('.','/') + "/jaxb.index";  if (project.getCompileSourceRoots().stream().map(Paths::get).map(p -> p.resolve(fn)).anyMatch(Files::isRegularFile)) {    continue;  }  StringBuilder sb=new StringBuilder();  sb.append("# " + GENERATED_MSG + NL);  for (  String s : entry.getValue()) {    sb.append(s);    sb.append(NL);  }  updateResource(jaxbIndexDir,fn,sb.toString());  count++;} @AT@ 4378 @LENGTH@ 608
---INS ExpressionStatement@@PostfixExpression:count++ @TO@ EnhancedForStatement@@for (Map.Entry<String,Set<String>> entry : byPackage.entrySet()) {  String fn=entry.getKey().replace('.','/') + "/jaxb.index";  if (project.getCompileSourceRoots().stream().map(Paths::get).map(p -> p.resolve(fn)).anyMatch(Files::isRegularFile)) {    continue;  }  StringBuilder sb=new StringBuilder();  sb.append("# " + GENERATED_MSG + NL);  for (  String s : entry.getValue()) {    sb.append(s);    sb.append(NL);  }  updateResource(jaxbIndexDir,fn,sb.toString());} @AT@ 4989 @LENGTH@ 8
------INS PostfixExpression@@count++ @TO@ ExpressionStatement@@PostfixExpression:count++ @AT@ 4989 @LENGTH@ 7
---------INS SimpleName@@count @TO@ PostfixExpression@@count++ @AT@ 4989 @LENGTH@ 5
---------INS Operator@@++ @TO@ PostfixExpression@@count++ @AT@ 4995 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:Assert.hasText(authorityPrefix,"authorityPrefix cannot be empty") @TO@ MethodInvocation:Assert.notNull(authorityPrefix,"authorityPrefix cannot be null") @AT@ 2507 @LENGTH@ 67
---UPD MethodInvocation@@Assert.hasText(authorityPrefix,"authorityPrefix cannot be empty") @TO@ Assert.notNull(authorityPrefix,"authorityPrefix cannot be null") @AT@ 2507 @LENGTH@ 66
------UPD SimpleName@@MethodName:hasText:[authorityPrefix, "authorityPrefix cannot be empty"] @TO@ MethodName:notNull:[authorityPrefix, "authorityPrefix cannot be null"] @AT@ 2514 @LENGTH@ 59
---------UPD StringLiteral@@"authorityPrefix cannot be empty" @TO@ "authorityPrefix cannot be null" @AT@ 2539 @LENGTH@ 33


INS MethodDeclaration@@public, void, MethodName:defaultLoginPageWithSingleClientRegistrationAndXhrRequestThenDoesNotRedirectForAuthorization,  @TO@ TypeDeclaration@@[public]OAuth2LoginTests,  @AT@ 9250 @LENGTH@ 420
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:defaultLoginPageWithSingleClientRegistrationAndXhrRequestThenDoesNotRedirectForAuthorization,  @AT@ 9250 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:defaultLoginPageWithSingleClientRegistrationAndXhrRequestThenDoesNotRedirectForAuthorization,  @AT@ 9257 @LENGTH@ 4
---INS SimpleName@@MethodName:defaultLoginPageWithSingleClientRegistrationAndXhrRequestThenDoesNotRedirectForAuthorization @TO@ MethodDeclaration@@public, void, MethodName:defaultLoginPageWithSingleClientRegistrationAndXhrRequestThenDoesNotRedirectForAuthorization,  @AT@ 9262 @LENGTH@ 92
---INS ExpressionStatement@@MethodInvocation:this.spring.register(OAuth2LoginWithSingleClientRegistrations.class,WebFluxConfig.class).autowire() @TO@ MethodDeclaration@@public, void, MethodName:defaultLoginPageWithSingleClientRegistrationAndXhrRequestThenDoesNotRedirectForAuthorization,  @AT@ 9361 @LENGTH@ 101
------INS MethodInvocation@@this.spring.register(OAuth2LoginWithSingleClientRegistrations.class,WebFluxConfig.class).autowire() @TO@ ExpressionStatement@@MethodInvocation:this.spring.register(OAuth2LoginWithSingleClientRegistrations.class,WebFluxConfig.class).autowire() @AT@ 9361 @LENGTH@ 100
---------INS MethodInvocation@@MethodName:register:[OAuth2LoginWithSingleClientRegistrations.class, WebFluxConfig.class] @TO@ MethodInvocation@@this.spring.register(OAuth2LoginWithSingleClientRegistrations.class,WebFluxConfig.class).autowire() @AT@ 9361 @LENGTH@ 89
------------INS TypeLiteral@@OAuth2LoginWithSingleClientRegistrations.class @TO@ MethodInvocation@@MethodName:register:[OAuth2LoginWithSingleClientRegistrations.class, WebFluxConfig.class] @AT@ 9382 @LENGTH@ 46
------------INS TypeLiteral@@WebFluxConfig.class @TO@ MethodInvocation@@MethodName:register:[OAuth2LoginWithSingleClientRegistrations.class, WebFluxConfig.class] @AT@ 9430 @LENGTH@ 19
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.register(OAuth2LoginWithSingleClientRegistrations.class,WebFluxConfig.class).autowire() @AT@ 9361 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 9361 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 9366 @LENGTH@ 6
---------INS SimpleName@@MethodName:autowire:[] @TO@ MethodInvocation@@this.spring.register(OAuth2LoginWithSingleClientRegistrations.class,WebFluxConfig.class).autowire() @AT@ 9451 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @TO@ MethodDeclaration@@public, void, MethodName:defaultLoginPageWithSingleClientRegistrationAndXhrRequestThenDoesNotRedirectForAuthorization,  @AT@ 9466 @LENGTH@ 201
------INS MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @TO@ ExpressionStatement@@MethodInvocation:this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 200
---------INS MethodInvocation@@MethodName:expectHeader:[] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 156
---------INS MethodInvocation@@MethodName:is3xxRedirection:[] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 136
---------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 117
---------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 97
---------INS MethodInvocation@@MethodName:header:["X-Requested-With", "XMLHttpRequest"] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 81
------------INS StringLiteral@@"X-Requested-With" @TO@ MethodInvocation@@MethodName:header:["X-Requested-With", "XMLHttpRequest"] @AT@ 9510 @LENGTH@ 18
------------INS StringLiteral@@"XMLHttpRequest" @TO@ MethodInvocation@@MethodName:header:["X-Requested-With", "XMLHttpRequest"] @AT@ 9530 @LENGTH@ 16
---------INS MethodInvocation@@MethodName:uri:["/"] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 31
------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:uri:["/"] @AT@ 9493 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 17
---------INS FieldAccess@@this.client @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9466 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.client @AT@ 9466 @LENGTH@ 4
------------INS SimpleName@@client @TO@ FieldAccess@@this.client @AT@ 9471 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueEquals:[HttpHeaders.LOCATION, "/login"] @TO@ MethodInvocation@@this.client.get().uri("/").header("X-Requested-With","XMLHttpRequest").exchange().expectStatus().is3xxRedirection().expectHeader().valueEquals(HttpHeaders.LOCATION,"/login") @AT@ 9623 @LENGTH@ 43
------------INS QualifiedName@@HttpHeaders.LOCATION @TO@ SimpleName@@MethodName:valueEquals:[HttpHeaders.LOCATION, "/login"] @AT@ 9635 @LENGTH@ 20
---------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.LOCATION @AT@ 9635 @LENGTH@ 11
---------------INS SimpleName@@LOCATION @TO@ QualifiedName@@HttpHeaders.LOCATION @AT@ 9647 @LENGTH@ 8
------------INS StringLiteral@@"/login" @TO@ SimpleName@@MethodName:valueEquals:[HttpHeaders.LOCATION, "/login"] @AT@ 9657 @LENGTH@ 8


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unsupported byte order setting: " + value + ", expeced one of "+ ByteOrder.LITTLE_ENDIAN+ ", "+ ByteOrder.BIG_ENDIAN) @TO@ ClassInstanceCreation:new IllegalArgumentException("Unsupported byte order setting: " + value + ", expected one of "+ ByteOrder.LITTLE_ENDIAN+ ", "+ ByteOrder.BIG_ENDIAN) @AT@ 2327 @LENGTH@ 174
---UPD ClassInstanceCreation@@IllegalArgumentException["Unsupported byte order setting: " + value + ", expeced one of "+ ByteOrder.LITTLE_ENDIAN+ ", "+ ByteOrder.BIG_ENDIAN] @TO@ IllegalArgumentException["Unsupported byte order setting: " + value + ", expected one of "+ ByteOrder.LITTLE_ENDIAN+ ", "+ ByteOrder.BIG_ENDIAN] @AT@ 2333 @LENGTH@ 167
------UPD InfixExpression@@"Unsupported byte order setting: " + value + ", expeced one of "+ ByteOrder.LITTLE_ENDIAN+ ", "+ ByteOrder.BIG_ENDIAN @TO@ "Unsupported byte order setting: " + value + ", expected one of "+ ByteOrder.LITTLE_ENDIAN+ ", "+ ByteOrder.BIG_ENDIAN @AT@ 2362 @LENGTH@ 137
---------UPD StringLiteral@@", expeced one of " @TO@ ", expected one of " @AT@ 2407 @LENGTH@ 19


UPD FieldDeclaration@@public, static, final, LogHandlerListAttributeDefinition, [SUBHANDLERS=LogHandlerListAttributeDefinition.Builder.of("subhandlers").setAllowDuplicates(false).setAllowExpression(false).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).setRequired(false).build()] @TO@ public, static, final, LogHandlerListAttributeDefinition, [SUBHANDLERS=LogHandlerListAttributeDefinition.Builder.of("subhandlers",HANDLER).setAllowDuplicates(false).setAllowExpression(false).setRequired(false).build()] @AT@ 4716 @LENGTH@ 336
---UPD VariableDeclarationFragment@@SUBHANDLERS=LogHandlerListAttributeDefinition.Builder.of("subhandlers").setAllowDuplicates(false).setAllowExpression(false).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).setRequired(false).build() @TO@ SUBHANDLERS=LogHandlerListAttributeDefinition.Builder.of("subhandlers",HANDLER).setAllowDuplicates(false).setAllowExpression(false).setRequired(false).build() @AT@ 4770 @LENGTH@ 281
------UPD MethodInvocation@@LogHandlerListAttributeDefinition.Builder.of("subhandlers").setAllowDuplicates(false).setAllowExpression(false).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).setRequired(false).build() @TO@ LogHandlerListAttributeDefinition.Builder.of("subhandlers",HANDLER).setAllowDuplicates(false).setAllowExpression(false).setRequired(false).build() @AT@ 4784 @LENGTH@ 267
---------UPD MethodInvocation@@MethodName:of:["subhandlers"] @TO@ MethodName:of:["subhandlers", HANDLER] @AT@ 4784 @LENGTH@ 59
------------INS SimpleName@@HANDLER @TO@ MethodInvocation@@MethodName:of:["subhandlers"] @AT@ 5253 @LENGTH@ 7


UPD FieldDeclaration@@public, static, final, long, [SERIAL_VERSION_UID=530L] @TO@ public, static, final, long, [SERIAL_VERSION_UID=540L] @AT@ 1460 @LENGTH@ 51
---UPD VariableDeclarationFragment@@SERIAL_VERSION_UID=530L @TO@ SERIAL_VERSION_UID=540L @AT@ 1485 @LENGTH@ 25
------UPD NumberLiteral@@530L @TO@ 540L @AT@ 1506 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:relyingPartyRegistration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://destination/sso")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.addAll(relyingPartyCredentials())).build() @TO@ Assignment:relyingPartyRegistration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://destination/sso")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.add(relyingPartySigningCredential())).build() @AT@ 2349 @LENGTH@ 372
---UPD Assignment@@relyingPartyRegistration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://destination/sso")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.addAll(relyingPartyCredentials())).build() @TO@ relyingPartyRegistration=RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://destination/sso")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.add(relyingPartySigningCredential())).build() @AT@ 2349 @LENGTH@ 371
------UPD MethodInvocation@@RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://destination/sso")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.addAll(relyingPartyCredentials())).build() @TO@ RelyingPartyRegistration.withRegistrationId("id").assertionConsumerServiceUrlTemplate("template").providerDetails(c -> c.webSsoUrl("https://destination/sso")).providerDetails(c -> c.entityId("remote-entity-id")).localEntityIdTemplate("local-entity-id").credentials(c -> c.add(relyingPartySigningCredential())).build() @AT@ 2376 @LENGTH@ 344
---------UPD MethodInvocation@@MethodName:credentials:[c -> c.addAll(relyingPartyCredentials())] @TO@ MethodName:credentials:[c -> c.add(relyingPartySigningCredential())] @AT@ 2376 @LENGTH@ 331
------------UPD LambdaExpression@@c -> c.addAll(relyingPartyCredentials()) @TO@ c -> c.add(relyingPartySigningCredential()) @AT@ 2666 @LENGTH@ 40
---------------UPD MethodInvocation@@c.addAll(relyingPartyCredentials()) @TO@ c.add(relyingPartySigningCredential()) @AT@ 2671 @LENGTH@ 35
------------------UPD SimpleName@@MethodName:addAll:[relyingPartyCredentials()] @TO@ MethodName:add:[relyingPartySigningCredential()] @AT@ 2673 @LENGTH@ 33
---------------------UPD MethodInvocation@@MethodName:relyingPartyCredentials:[] @TO@ MethodName:relyingPartySigningCredential:[] @AT@ 2680 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 19813 @LENGTH@ 469
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 19813 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 19820 @LENGTH@ 4
---INS SimpleName@@MethodName:usingGreaterThanWithNamedParameter @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 19825 @LENGTH@ 34
---INS VariableDeclarationStatement@@String queryString="SELECT u FROM User u WHERE :age>u.age"; @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 19867 @LENGTH@ 61
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String queryString="SELECT u FROM User u WHERE :age>u.age"; @AT@ 19867 @LENGTH@ 6
------INS VariableDeclarationFragment@@queryString="SELECT u FROM User u WHERE :age>u.age" @TO@ VariableDeclarationStatement@@String queryString="SELECT u FROM User u WHERE :age>u.age"; @AT@ 19874 @LENGTH@ 53
---------INS SimpleName@@queryString @TO@ VariableDeclarationFragment@@queryString="SELECT u FROM User u WHERE :age>u.age" @AT@ 19874 @LENGTH@ 11
---------INS StringLiteral@@"SELECT u FROM User u WHERE :age>u.age" @TO@ VariableDeclarationFragment@@queryString="SELECT u FROM User u WHERE :age>u.age" @AT@ 19888 @LENGTH@ 39
---INS VariableDeclarationStatement@@StringQuery query=new StringQuery(queryString); @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 19931 @LENGTH@ 49
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery(queryString); @AT@ 19931 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new StringQuery(queryString) @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery(queryString); @AT@ 19943 @LENGTH@ 36
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new StringQuery(queryString) @AT@ 19943 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringQuery[queryString] @TO@ VariableDeclarationFragment@@query=new StringQuery(queryString) @AT@ 19951 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@StringQuery[queryString] @AT@ 19951 @LENGTH@ 3
------------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery[queryString] @AT@ 19955 @LENGTH@ 11
------------INS SimpleName@@queryString @TO@ ClassInstanceCreation@@StringQuery[queryString] @AT@ 19967 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.getQueryString()).isEqualTo(queryString) @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 19984 @LENGTH@ 65
------INS MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 19984 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:assertThat:[query.getQueryString()] @TO@ MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 19984 @LENGTH@ 41
------------INS MethodInvocation@@query.getQueryString() @TO@ MethodInvocation@@MethodName:assertThat:[query.getQueryString()] @AT@ 20002 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryString() @AT@ 20002 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQueryString:[] @TO@ MethodInvocation@@query.getQueryString() @AT@ 20008 @LENGTH@ 16
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 19984 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[queryString] @TO@ MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 20026 @LENGTH@ 22
------------INS SimpleName@@queryString @TO@ SimpleName@@MethodName:isEqualTo:[queryString] @AT@ 20036 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.hasParameterBindings()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 20052 @LENGTH@ 57
------INS MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 20052 @LENGTH@ 56
---------INS MethodInvocation@@MethodName:assertThat:[query.hasParameterBindings()] @TO@ MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 20052 @LENGTH@ 47
------------INS MethodInvocation@@query.hasParameterBindings() @TO@ MethodInvocation@@MethodName:assertThat:[query.hasParameterBindings()] @AT@ 20070 @LENGTH@ 28
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.hasParameterBindings() @AT@ 20070 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasParameterBindings:[] @TO@ MethodInvocation@@query.hasParameterBindings() @AT@ 20076 @LENGTH@ 22
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 20052 @LENGTH@ 6
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 20100 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings()).hasSize(1) @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 20112 @LENGTH@ 59
------INS MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 20112 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:assertThat:[query.getParameterBindings()] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 20112 @LENGTH@ 47
------------INS MethodInvocation@@query.getParameterBindings() @TO@ MethodInvocation@@MethodName:assertThat:[query.getParameterBindings()] @AT@ 20130 @LENGTH@ 28
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 20130 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getParameterBindings:[] @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 20136 @LENGTH@ 22
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 20112 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 20160 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 20168 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("age") @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 20174 @LENGTH@ 82
------INS MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("age") @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("age") @AT@ 20174 @LENGTH@ 81
---------INS MethodInvocation@@MethodName:assertThat:[query.getParameterBindings().get(0).getName()] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("age") @AT@ 20174 @LENGTH@ 64
------------INS MethodInvocation@@query.getParameterBindings().get(0).getName() @TO@ MethodInvocation@@MethodName:assertThat:[query.getParameterBindings().get(0).getName()] @AT@ 20192 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 20192 @LENGTH@ 35
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 20225 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getParameterBindings:[] @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 20192 @LENGTH@ 28
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 20192 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 20228 @LENGTH@ 9
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("age") @AT@ 20174 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:["age"] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("age") @AT@ 20239 @LENGTH@ 16
------------INS StringLiteral@@"age" @TO@ SimpleName@@MethodName:isEqualTo:["age"] @AT@ 20249 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:softly.assertAll() @TO@ MethodDeclaration@@public, void, MethodName:usingGreaterThanWithNamedParameter,  @AT@ 20260 @LENGTH@ 19
------INS MethodInvocation@@softly.assertAll() @TO@ ExpressionStatement@@MethodInvocation:softly.assertAll() @AT@ 20260 @LENGTH@ 18
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertAll() @AT@ 20260 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertAll:[] @TO@ MethodInvocation@@softly.assertAll() @AT@ 20267 @LENGTH@ 11


UPD TypeDeclaration@@[@Generated("org.apache.camel.maven.packaging.EndpointDslMojo"), public]EndpointBuilders,  @TO@ [@javax.annotation.Generated("org.apache.camel.maven.packaging.EndpointDslMojo"), public]EndpointBuilders,  @AT@ 959 @LENGTH@ 246016
---UPD SingleMemberAnnotation@@@Generated("org.apache.camel.maven.packaging.EndpointDslMojo") @TO@ @javax.annotation.Generated("org.apache.camel.maven.packaging.EndpointDslMojo") @AT@ 959 @LENGTH@ 62


INS MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @TO@ TypeDeclaration@@[public]FormLoginTests,  @AT@ 7783 @LENGTH@ 712
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 7783 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 7790 @LENGTH@ 4
---INS SimpleName@@MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 7795 @LENGTH@ 56
---INS VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build(); @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 7858 @LENGTH@ 308
------INS SimpleType@@SecurityWebFilterChain @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build(); @AT@ 7858 @LENGTH@ 22
------INS VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build(); @AT@ 7881 @LENGTH@ 284
---------INS SimpleName@@securityWebFilter @TO@ VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7881 @LENGTH@ 17
---------INS MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @TO@ VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 264
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 252
------------INS MethodInvocation@@MethodName:requiresAuthenticationMatcher:[new PathPatternParserServerWebExchangeMatcher("/sign-in")] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 241
---------------INS ClassInstanceCreation@@PathPatternParserServerWebExchangeMatcher["/sign-in"] @TO@ MethodInvocation@@MethodName:requiresAuthenticationMatcher:[new PathPatternParserServerWebExchangeMatcher("/sign-in")] @AT@ 8084 @LENGTH@ 57
------------------INS New@@new @TO@ ClassInstanceCreation@@PathPatternParserServerWebExchangeMatcher["/sign-in"] @AT@ 8084 @LENGTH@ 3
------------------INS SimpleType@@PathPatternParserServerWebExchangeMatcher @TO@ ClassInstanceCreation@@PathPatternParserServerWebExchangeMatcher["/sign-in"] @AT@ 8088 @LENGTH@ 41
------------------INS StringLiteral@@"/sign-in" @TO@ ClassInstanceCreation@@PathPatternParserServerWebExchangeMatcher["/sign-in"] @AT@ 8130 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:formLogin:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 147
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 131
------------INS MethodInvocation@@MethodName:authenticated:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 120
------------INS MethodInvocation@@MethodName:anyExchange:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 104
------------INS MethodInvocation@@MethodName:permitAll:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 85
------------INS MethodInvocation@@MethodName:pathMatchers:["/login", "/sign-in"] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 73
---------------INS StringLiteral@@"/login" @TO@ MethodInvocation@@MethodName:pathMatchers:["/login", "/sign-in"] @AT@ 7953 @LENGTH@ 8
---------------INS StringLiteral@@"/sign-in" @TO@ MethodInvocation@@MethodName:pathMatchers:["/login", "/sign-in"] @AT@ 7963 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:authorizeExchange:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 33
------------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 7901 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 7901 @LENGTH@ 4
---------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 7906 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.http.authorizeExchange().pathMatchers("/login","/sign-in").permitAll().anyExchange().authenticated().and().formLogin().requiresAuthenticationMatcher(new PathPatternParserServerWebExchangeMatcher("/sign-in")).and().build() @AT@ 8158 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 8170 @LENGTH@ 105
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @AT@ 8170 @LENGTH@ 13
------INS VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @TO@ VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @AT@ 8184 @LENGTH@ 90
---------INS SimpleName@@webTestClient @TO@ VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 8184 @LENGTH@ 13
---------INS MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @TO@ VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 8200 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:bindToWebFilters:[securityWebFilter] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 8200 @LENGTH@ 61
---------------INS SimpleName@@securityWebFilter @TO@ MethodInvocation@@MethodName:bindToWebFilters:[securityWebFilter] @AT@ 8243 @LENGTH@ 17
------------INS SimpleName@@Name:WebTestClientBuilder @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 8200 @LENGTH@ 20
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 8267 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 8279 @LENGTH@ 106
------INS SimpleType@@WebDriver @TO@ VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @AT@ 8279 @LENGTH@ 9
------INS VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @TO@ VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @AT@ 8289 @LENGTH@ 95
---------INS SimpleName@@driver @TO@ VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 8289 @LENGTH@ 6
---------INS MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @TO@ VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 8298 @LENGTH@ 86
------------INS MethodInvocation@@MethodName:webTestClientSetup:[webTestClient] @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 8298 @LENGTH@ 73
---------------INS SimpleName@@webTestClient @TO@ MethodInvocation@@MethodName:webTestClientSetup:[webTestClient] @AT@ 8357 @LENGTH@ 13
------------INS SimpleName@@Name:WebTestClientHtmlUnitDriverBuilder @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 8298 @LENGTH@ 34
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 8377 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:driver.get("http://localhost/sign-in") @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 8389 @LENGTH@ 39
------INS MethodInvocation@@driver.get("http://localhost/sign-in") @TO@ ExpressionStatement@@MethodInvocation:driver.get("http://localhost/sign-in") @AT@ 8389 @LENGTH@ 38
---------INS SimpleName@@Name:driver @TO@ MethodInvocation@@driver.get("http://localhost/sign-in") @AT@ 8389 @LENGTH@ 6
---------INS SimpleName@@MethodName:get:["http://localhost/sign-in"] @TO@ MethodInvocation@@driver.get("http://localhost/sign-in") @AT@ 8396 @LENGTH@ 31
------------INS StringLiteral@@"http://localhost/sign-in" @TO@ SimpleName@@MethodName:get:["http://localhost/sign-in"] @AT@ 8400 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:assertThat(driver.getCurrentUrl()).endsWith("/login?error") @TO@ MethodDeclaration@@public, void, MethodName:formLoginWhenCustomRequiresAuthenticationMatcherThenUsed,  @AT@ 8432 @LENGTH@ 60
------INS MethodInvocation@@assertThat(driver.getCurrentUrl()).endsWith("/login?error") @TO@ ExpressionStatement@@MethodInvocation:assertThat(driver.getCurrentUrl()).endsWith("/login?error") @AT@ 8432 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:assertThat:[driver.getCurrentUrl()] @TO@ MethodInvocation@@assertThat(driver.getCurrentUrl()).endsWith("/login?error") @AT@ 8432 @LENGTH@ 34
------------INS MethodInvocation@@driver.getCurrentUrl() @TO@ MethodInvocation@@MethodName:assertThat:[driver.getCurrentUrl()] @AT@ 8443 @LENGTH@ 22
---------------INS SimpleName@@Name:driver @TO@ MethodInvocation@@driver.getCurrentUrl() @AT@ 8443 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCurrentUrl:[] @TO@ MethodInvocation@@driver.getCurrentUrl() @AT@ 8450 @LENGTH@ 15
---------INS SimpleName@@MethodName:endsWith:["/login?error"] @TO@ MethodInvocation@@assertThat(driver.getCurrentUrl()).endsWith("/login?error") @AT@ 8467 @LENGTH@ 24
------------INS StringLiteral@@"/login?error" @TO@ SimpleName@@MethodName:endsWith:["/login?error"] @AT@ 8476 @LENGTH@ 14


UPD MethodDeclaration@@void, MethodName:leave, RelationshipDetail details,  @TO@ void, MethodName:enter, RelationshipTypes types,  @AT@ 7121 @LENGTH@ 372
---UPD SimpleName@@MethodName:leave @TO@ MethodName:enter @AT@ 7121 @LENGTH@ 5
---UPD SingleVariableDeclaration@@RelationshipDetail details @TO@ RelationshipTypes types @AT@ 7127 @LENGTH@ 26
------UPD SimpleType@@RelationshipDetail @TO@ RelationshipTypes @AT@ 7127 @LENGTH@ 18
------UPD SimpleName@@details @TO@ types @AT@ 7146 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:builder.append(details.isTyped() ? ":" : "").append(details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|"))).append("]") @TO@ MethodInvocation:builder.append(types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":",""))) @AT@ 7221 @LENGTH@ 223
------UPD MethodInvocation@@builder.append(details.isTyped() ? ":" : "").append(details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|"))).append("]") @TO@ builder.append(types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":",""))) @AT@ 7221 @LENGTH@ 222
---------INS SimpleName@@MethodName:append:[types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":",""))] @TO@ MethodInvocation@@builder.append(details.isTyped() ? ":" : "").append(details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|"))).append("]") @AT@ 7169 @LENGTH@ 128
------------INS MethodInvocation@@types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":","")) @TO@ SimpleName@@MethodName:append:[types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":",""))] @AT@ 7176 @LENGTH@ 120
---------------MOV MethodInvocation@@MethodName:map:[Optional::get] @TO@ MethodInvocation@@types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":","")) @AT@ 7281 @LENGTH@ 118
---------------MOV MethodInvocation@@MethodName:map:[RenderingVisitor::escapeName] @TO@ MethodInvocation@@types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":","")) @AT@ 7281 @LENGTH@ 61
---------------MOV MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":","")) @AT@ 7281 @LENGTH@ 27
---------------MOV MethodInvocation@@MethodName:getTypes:[] @TO@ MethodInvocation@@types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":","")) @AT@ 7281 @LENGTH@ 18
---------------MOV SimpleName@@Name:details @TO@ MethodInvocation@@types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":","")) @AT@ 7281 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:collect:[joining("|")] @TO@ MethodInvocation@@types.getValues().stream().map(RenderingVisitor::escapeName).map(Optional::get).collect(joining("|",":","")) @AT@ 7405 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:append:[details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|"))] @AT@ 7221 @LENGTH@ 206
------------DEL MethodInvocation@@details.getTypes().stream().map(RenderingVisitor::escapeName).filter(Optional::isPresent).map(Optional::get).collect(joining("|")) @AT@ 7281 @LENGTH@ 145
---------------DEL MethodInvocation@@MethodName:filter:[Optional::isPresent] @AT@ 7281 @LENGTH@ 94
---------DEL MethodInvocation@@MethodName:append:[details.isTyped() ? ":" : ""] @AT@ 7221 @LENGTH@ 48
------------DEL ConditionalExpression@@details.isTyped() ? ":" : "" @AT@ 7240 @LENGTH@ 28
---------------DEL MethodInvocation@@details.isTyped() @AT@ 7240 @LENGTH@ 17
------------------DEL SimpleName@@Name:details @AT@ 7240 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:isTyped:[] @AT@ 7248 @LENGTH@ 9
---------------DEL StringLiteral@@":" @AT@ 7260 @LENGTH@ 3
---------------DEL StringLiteral@@"" @AT@ 7266 @LENGTH@ 2
---------DEL SimpleName@@MethodName:append:["]"] @AT@ 7432 @LENGTH@ 11
------------DEL StringLiteral@@"]" @AT@ 7439 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:builder.append(direction.getSymbolRight()) @TO@ MethodInvocation:builder.append("]").append(direction.getSymbolRight()) @AT@ 7447 @LENGTH@ 43


INS MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @TO@ TypeDeclaration@@[public]SendDynamicProcessor, AsyncProcessorSupport[IdAware, RouteIdAware, CamelContextAware] @AT@ 3320 @LENGTH@ 87
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 3320 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 3330 @LENGTH@ 4
---INS SimpleName@@MethodName:doInit @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 3335 @LENGTH@ 6
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 3351 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:expression.init(camelContext) @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 3371 @LENGTH@ 30
------INS MethodInvocation@@expression.init(camelContext) @TO@ ExpressionStatement@@MethodInvocation:expression.init(camelContext) @AT@ 3371 @LENGTH@ 29
---------INS SimpleName@@Name:expression @TO@ MethodInvocation@@expression.init(camelContext) @AT@ 3371 @LENGTH@ 10
---------INS SimpleName@@MethodName:init:[camelContext] @TO@ MethodInvocation@@expression.init(camelContext) @AT@ 3382 @LENGTH@ 18
------------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:init:[camelContext] @AT@ 3387 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testCompactHttpPath,  @TO@ TypeDeclaration@@[public]FileUtilTest, Assert @AT@ 12619 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCompactHttpPath,  @AT@ 12619 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCompactHttpPath,  @AT@ 12626 @LENGTH@ 4
---INS SimpleName@@MethodName:testCompactHttpPath @TO@ MethodDeclaration@@public, void, MethodName:testCompactHttpPath,  @AT@ 12631 @LENGTH@ 19
---INS VariableDeclarationStatement@@String in="http://foo.com/apps/func/schemas/part/myap/dummy-schema.xsd"; @TO@ MethodDeclaration@@public, void, MethodName:testCompactHttpPath,  @AT@ 12663 @LENGTH@ 74
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String in="http://foo.com/apps/func/schemas/part/myap/dummy-schema.xsd"; @AT@ 12663 @LENGTH@ 6
------INS VariableDeclarationFragment@@in="http://foo.com/apps/func/schemas/part/myap/dummy-schema.xsd" @TO@ VariableDeclarationStatement@@String in="http://foo.com/apps/func/schemas/part/myap/dummy-schema.xsd"; @AT@ 12670 @LENGTH@ 66
---------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in="http://foo.com/apps/func/schemas/part/myap/dummy-schema.xsd" @AT@ 12670 @LENGTH@ 2
---------INS StringLiteral@@"http://foo.com/apps/func/schemas/part/myap/dummy-schema.xsd" @TO@ VariableDeclarationFragment@@in="http://foo.com/apps/func/schemas/part/myap/dummy-schema.xsd" @AT@ 12675 @LENGTH@ 61
---INS VariableDeclarationStatement@@String out=FileUtil.compactPath(in,"/"); @TO@ MethodDeclaration@@public, void, MethodName:testCompactHttpPath,  @AT@ 12746 @LENGTH@ 43
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String out=FileUtil.compactPath(in,"/"); @AT@ 12746 @LENGTH@ 6
------INS VariableDeclarationFragment@@out=FileUtil.compactPath(in,"/") @TO@ VariableDeclarationStatement@@String out=FileUtil.compactPath(in,"/"); @AT@ 12753 @LENGTH@ 35
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=FileUtil.compactPath(in,"/") @AT@ 12753 @LENGTH@ 3
---------INS MethodInvocation@@FileUtil.compactPath(in,"/") @TO@ VariableDeclarationFragment@@out=FileUtil.compactPath(in,"/") @AT@ 12759 @LENGTH@ 29
------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath(in,"/") @AT@ 12759 @LENGTH@ 8
------------INS SimpleName@@MethodName:compactPath:[in, "/"] @TO@ MethodInvocation@@FileUtil.compactPath(in,"/") @AT@ 12768 @LENGTH@ 20
---------------INS SimpleName@@in @TO@ SimpleName@@MethodName:compactPath:[in, "/"] @AT@ 12780 @LENGTH@ 2
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:compactPath:[in, "/"] @AT@ 12784 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals(in,out) @TO@ MethodDeclaration@@public, void, MethodName:testCompactHttpPath,  @AT@ 12798 @LENGTH@ 22
------INS MethodInvocation@@assertEquals(in,out) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(in,out) @AT@ 12798 @LENGTH@ 21
---------INS SimpleName@@MethodName:assertEquals:[in, out] @TO@ MethodInvocation@@assertEquals(in,out) @AT@ 12798 @LENGTH@ 21
------------INS SimpleName@@in @TO@ SimpleName@@MethodName:assertEquals:[in, out] @AT@ 12811 @LENGTH@ 2
------------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertEquals:[in, out] @AT@ 12815 @LENGTH@ 3


UPD WhileStatement@@while (!futures.isEmpty() && watch.taken() < timeout) {  for (  Future future : futures) {    if (future.isDone() || future.isCancelled()) {      futures.remove(future);    }    if (!futures.isEmpty()) {      long interval=Math.min(1000,timeout);      log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);      try {        Thread.sleep(interval);      } catch (      InterruptedException e) {        handleSleepInterruptedException(e,exchange);      }    }  }} @TO@ while (!futures.isEmpty() && watch.taken() < timeout) {  futures.removeIf(future -> future.isDone() || future.isCancelled());  if (!futures.isEmpty()) {    long interval=Math.min(1000,timeout);    log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);    try {      Thread.sleep(interval);    } catch (    InterruptedException e) {      handleSleepInterruptedException(e,exchange);    }  }} @AT@ 5313 @LENGTH@ 924
---UPD Block@@WhileBody:{  for (  Future future : futures) {    if (future.isDone() || future.isCancelled()) {      futures.remove(future);    }    if (!futures.isEmpty()) {      long interval=Math.min(1000,timeout);      log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);      try {        Thread.sleep(interval);      } catch (      InterruptedException e) {        handleSleepInterruptedException(e,exchange);      }    }  }} @TO@ WhileBody:{  futures.removeIf(future -> future.isDone() || future.isCancelled());  if (!futures.isEmpty()) {    long interval=Math.min(1000,timeout);    log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);    try {      Thread.sleep(interval);    } catch (    InterruptedException e) {      handleSleepInterruptedException(e,exchange);    }  }} @AT@ 5367 @LENGTH@ 870
------DEL EnhancedForStatement@@for (Future future : futures) {  if (future.isDone() || future.isCancelled()) {    futures.remove(future);  }  if (!futures.isEmpty()) {    long interval=Math.min(1000,timeout);    log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);    try {      Thread.sleep(interval);    } catch (    InterruptedException e) {      handleSleepInterruptedException(e,exchange);    }  }} @AT@ 5431 @LENGTH@ 795
---------DEL SingleVariableDeclaration@@Future future @AT@ 5436 @LENGTH@ 13
------------DEL SimpleType@@Future @AT@ 5436 @LENGTH@ 6
------------DEL SimpleName@@future @AT@ 5443 @LENGTH@ 6
---------DEL SimpleName@@futures @AT@ 5452 @LENGTH@ 7
---------DEL IfStatement@@if (future.isDone() || future.isCancelled()) {  futures.remove(future);} @AT@ 5479 @LENGTH@ 108
------------DEL Block@@ThenBody:{  futures.remove(future);} @AT@ 5524 @LENGTH@ 63
------MOV ExpressionStatement@@MethodInvocation:futures.remove(future) @TO@ Block@@WhileBody:{  for (  Future future : futures) {    if (future.isDone() || future.isCancelled()) {      futures.remove(future);    }    if (!futures.isEmpty()) {      long interval=Math.min(1000,timeout);      log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);      try {        Thread.sleep(interval);      } catch (      InterruptedException e) {        handleSleepInterruptedException(e,exchange);      }    }  }} @AT@ 5546 @LENGTH@ 23
---------UPD MethodInvocation@@futures.remove(future) @TO@ futures.removeIf(future -> future.isDone() || future.isCancelled()) @AT@ 5546 @LENGTH@ 22
------------UPD SimpleName@@MethodName:remove:[future] @TO@ MethodName:removeIf:[future -> future.isDone() || future.isCancelled()] @AT@ 5554 @LENGTH@ 14
---------------INS LambdaExpression@@future -> future.isDone() || future.isCancelled() @TO@ SimpleName@@MethodName:remove:[future] @AT@ 5448 @LENGTH@ 49
------------------INS VariableDeclarationFragment@@future @TO@ LambdaExpression@@future -> future.isDone() || future.isCancelled() @AT@ 5448 @LENGTH@ 6
---------------------INS SimpleName@@future @TO@ VariableDeclarationFragment@@future @AT@ 5448 @LENGTH@ 6
---------------------INS SimpleName@@future @TO@ VariableDeclarationFragment@@future @AT@ 5448 @LENGTH@ 6
------------------MOV InfixExpression@@future.isDone() || future.isCancelled() @TO@ LambdaExpression@@future -> future.isDone() || future.isCancelled() @AT@ 5483 @LENGTH@ 39
---------------DEL SimpleName@@future @AT@ 5561 @LENGTH@ 6
------MOV IfStatement@@if (!futures.isEmpty()) {  long interval=Math.min(1000,timeout);  log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);  try {    Thread.sleep(interval);  } catch (  InterruptedException e) {    handleSleepInterruptedException(e,exchange);  }} @TO@ Block@@WhileBody:{  for (  Future future : futures) {    if (future.isDone() || future.isCancelled()) {      futures.remove(future);    }    if (!futures.isEmpty()) {      long interval=Math.min(1000,timeout);      log.debug("Sleeping {} millis waiting for sendToAll to complete sending with timeout {} millis",interval,timeout);      try {        Thread.sleep(interval);      } catch (      InterruptedException e) {        handleSleepInterruptedException(e,exchange);      }    }  }} @AT@ 5750 @LENGTH@ 462


UPD ExpressionStatement@@MethodInvocation:futures.remove(future) @TO@ MethodInvocation:futures.removeIf(future -> future.isDone() || future.isCancelled()) @AT@ 5546 @LENGTH@ 23


UPD MethodDeclaration@@protected, XsltEndpoint, MethodName:createXsltEndpoint, String uri,  @TO@ protected, XJEndpoint, MethodName:createXsltEndpoint, String uri,  @AT@ 1277 @LENGTH@ 103
---UPD SimpleType@@XsltEndpoint @TO@ XJEndpoint @AT@ 1287 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:queryResultsAndEntitiesMappedToTheSameSimpleTypeShouldNotBeMixedUp,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=GalaxyContextConfiguration.class), @RunWith(SpringRunner.class), @Transactional, public]QueryReturnTypesTests,  @AT@ 2635 @LENGTH@ 247
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:queryResultsAndEntitiesMappedToTheSameSimpleTypeShouldNotBeMixedUp,  @AT@ 2635 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:queryResultsAndEntitiesMappedToTheSameSimpleTypeShouldNotBeMixedUp,  @AT@ 2642 @LENGTH@ 4
---INS SimpleName@@MethodName:queryResultsAndEntitiesMappedToTheSameSimpleTypeShouldNotBeMixedUp @TO@ MethodDeclaration@@public, void, MethodName:queryResultsAndEntitiesMappedToTheSameSimpleTypeShouldNotBeMixedUp,  @AT@ 2647 @LENGTH@ 66
---INS VariableDeclarationStatement@@List<Thing> result=this.thingRepository.findAllTheThings(); @TO@ MethodDeclaration@@public, void, MethodName:queryResultsAndEntitiesMappedToTheSameSimpleTypeShouldNotBeMixedUp,  @AT@ 2721 @LENGTH@ 61
------INS ParameterizedType@@List<Thing> @TO@ VariableDeclarationStatement@@List<Thing> result=this.thingRepository.findAllTheThings(); @AT@ 2721 @LENGTH@ 11
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Thing> @AT@ 2721 @LENGTH@ 4
---------INS SimpleType@@Thing @TO@ ParameterizedType@@List<Thing> @AT@ 2726 @LENGTH@ 5
------INS VariableDeclarationFragment@@result=this.thingRepository.findAllTheThings() @TO@ VariableDeclarationStatement@@List<Thing> result=this.thingRepository.findAllTheThings(); @AT@ 2733 @LENGTH@ 48
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=this.thingRepository.findAllTheThings() @AT@ 2733 @LENGTH@ 6
---------INS MethodInvocation@@this.thingRepository.findAllTheThings() @TO@ VariableDeclarationFragment@@result=this.thingRepository.findAllTheThings() @AT@ 2742 @LENGTH@ 39
------------INS FieldAccess@@this.thingRepository @TO@ MethodInvocation@@this.thingRepository.findAllTheThings() @AT@ 2742 @LENGTH@ 20
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.thingRepository @AT@ 2742 @LENGTH@ 4
---------------INS SimpleName@@thingRepository @TO@ FieldAccess@@this.thingRepository @AT@ 2747 @LENGTH@ 15
------------INS SimpleName@@MethodName:findAllTheThings:[] @TO@ MethodInvocation@@this.thingRepository.findAllTheThings() @AT@ 2763 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertThat(result).hasSize(1).extracting(Thing::getNotAName).containsExactly("NOT A NAME!!!") @TO@ MethodDeclaration@@public, void, MethodName:queryResultsAndEntitiesMappedToTheSameSimpleTypeShouldNotBeMixedUp,  @AT@ 2785 @LENGTH@ 94
------INS MethodInvocation@@assertThat(result).hasSize(1).extracting(Thing::getNotAName).containsExactly("NOT A NAME!!!") @TO@ ExpressionStatement@@MethodInvocation:assertThat(result).hasSize(1).extracting(Thing::getNotAName).containsExactly("NOT A NAME!!!") @AT@ 2785 @LENGTH@ 93
---------INS MethodInvocation@@MethodName:extracting:[Thing::getNotAName] @TO@ MethodInvocation@@assertThat(result).hasSize(1).extracting(Thing::getNotAName).containsExactly("NOT A NAME!!!") @AT@ 2785 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(result).hasSize(1).extracting(Thing::getNotAName).containsExactly("NOT A NAME!!!") @AT@ 2785 @LENGTH@ 29
------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:hasSize:[1] @AT@ 2812 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:assertThat:[result] @TO@ MethodInvocation@@assertThat(result).hasSize(1).extracting(Thing::getNotAName).containsExactly("NOT A NAME!!!") @AT@ 2785 @LENGTH@ 18
------------INS SimpleName@@result @TO@ MethodInvocation@@MethodName:assertThat:[result] @AT@ 2796 @LENGTH@ 6
---------INS SimpleName@@MethodName:containsExactly:["NOT A NAME!!!"] @TO@ MethodInvocation@@assertThat(result).hasSize(1).extracting(Thing::getNotAName).containsExactly("NOT A NAME!!!") @AT@ 2846 @LENGTH@ 32
------------INS StringLiteral@@"NOT A NAME!!!" @TO@ SimpleName@@MethodName:containsExactly:["NOT A NAME!!!"] @AT@ 2862 @LENGTH@ 15


INS MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @TO@ TypeDeclaration@@[public, static]Builder,  @AT@ 4967 @LENGTH@ 364
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @AT@ 4967 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @AT@ 4975 @LENGTH@ 6
---INS SimpleType@@Authentication @TO@ MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @AT@ 4982 @LENGTH@ 14
---INS SimpleName@@MethodName:createAuthentication @TO@ MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @AT@ 4997 @LENGTH@ 20
---INS SingleVariableDeclaration@@final String principalName @TO@ MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @AT@ 5018 @LENGTH@ 26
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String principalName @AT@ 5018 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String principalName @AT@ 5024 @LENGTH@ 6
------INS SimpleName@@principalName @TO@ SingleVariableDeclaration@@final String principalName @AT@ 5031 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(principalName,"principalName cannot be empty") @TO@ MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @AT@ 5051 @LENGTH@ 63
------INS MethodInvocation@@Assert.hasText(principalName,"principalName cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(principalName,"principalName cannot be empty") @AT@ 5051 @LENGTH@ 62
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(principalName,"principalName cannot be empty") @AT@ 5051 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[principalName, "principalName cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(principalName,"principalName cannot be empty") @AT@ 5058 @LENGTH@ 55
------------INS SimpleName@@principalName @TO@ SimpleName@@MethodName:hasText:[principalName, "principalName cannot be empty"] @AT@ 5066 @LENGTH@ 13
------------INS StringLiteral@@"principalName cannot be empty" @TO@ SimpleName@@MethodName:hasText:[principalName, "principalName cannot be empty"] @AT@ 5081 @LENGTH@ 31
---INS ReturnStatement@@ClassInstanceCreation:new AbstractAuthenticationToken(null){
  @Override public Object getCredentials(){
    return "";
  }
  @Override public Object getPrincipal(){
    return principalName;
  }
}
 @TO@ MethodDeclaration@@private, static, Authentication, MethodName:createAuthentication, final String principalName,  @AT@ 5119 @LENGTH@ 208
------INS ClassInstanceCreation@@AbstractAuthenticationToken[null] @TO@ ReturnStatement@@ClassInstanceCreation:new AbstractAuthenticationToken(null){
  @Override public Object getCredentials(){
    return "";
  }
  @Override public Object getPrincipal(){
    return principalName;
  }
}
 @AT@ 5126 @LENGTH@ 200
---------INS New@@new @TO@ ClassInstanceCreation@@AbstractAuthenticationToken[null] @AT@ 5126 @LENGTH@ 3
---------INS SimpleType@@AbstractAuthenticationToken @TO@ ClassInstanceCreation@@AbstractAuthenticationToken[null] @AT@ 5130 @LENGTH@ 27
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AbstractAuthenticationToken[null] @AT@ 5158 @LENGTH@ 4
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AbstractAuthenticationToken[null] @AT@ 5164 @LENGTH@ 162
------------INS MethodDeclaration@@public, Object, MethodName:getCredentials,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5184 @LENGTH@ 54
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:getCredentials,  @AT@ 5184 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:getCredentials,  @AT@ 5191 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCredentials @TO@ MethodDeclaration@@public, Object, MethodName:getCredentials,  @AT@ 5198 @LENGTH@ 14
---------------INS ReturnStatement@@StringLiteral:"" @TO@ MethodDeclaration@@public, Object, MethodName:getCredentials,  @AT@ 5222 @LENGTH@ 10
------------------INS StringLiteral@@"" @TO@ ReturnStatement@@StringLiteral:"" @AT@ 5229 @LENGTH@ 2
------------INS MethodDeclaration@@public, Object, MethodName:getPrincipal,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5258 @LENGTH@ 63
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:getPrincipal,  @AT@ 5258 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:getPrincipal,  @AT@ 5265 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPrincipal @TO@ MethodDeclaration@@public, Object, MethodName:getPrincipal,  @AT@ 5272 @LENGTH@ 12
---------------INS ReturnStatement@@SimpleName:principalName @TO@ MethodDeclaration@@public, Object, MethodName:getPrincipal,  @AT@ 5294 @LENGTH@ 21
------------------INS SimpleName@@principalName @TO@ ReturnStatement@@SimpleName:principalName @AT@ 5301 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @TO@ TypeDeclaration@@[public]AdviceWithLambdaTest, ContextTestSupport @AT@ 2058 @LENGTH@ 536
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2058 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2065 @LENGTH@ 4
---INS SimpleName@@MethodName:testAdvisedNoLog @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2070 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2096 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:AdviceWithRouteBuilder.adviceWith(context,null,false,a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
) @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2116 @LENGTH@ 190
------INS MethodInvocation@@AdviceWithRouteBuilder.adviceWith(context,null,false,a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
) @TO@ ExpressionStatement@@MethodInvocation:AdviceWithRouteBuilder.adviceWith(context,null,false,a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
) @AT@ 2116 @LENGTH@ 189
---------INS SimpleName@@Name:AdviceWithRouteBuilder @TO@ MethodInvocation@@AdviceWithRouteBuilder.adviceWith(context,null,false,a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
) @AT@ 2116 @LENGTH@ 22
---------INS SimpleName@@MethodName:adviceWith:[context, null, false, a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
] @TO@ MethodInvocation@@AdviceWithRouteBuilder.adviceWith(context,null,false,a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
) @AT@ 2139 @LENGTH@ 166
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:adviceWith:[context, null, false, a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
] @AT@ 2150 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:adviceWith:[context, null, false, a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
] @AT@ 2159 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:adviceWith:[context, null, false, a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
] @AT@ 2165 @LENGTH@ 5
------------INS LambdaExpression@@a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
 @TO@ SimpleName@@MethodName:adviceWith:[context, null, false, a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
] @AT@ 2172 @LENGTH@ 132
---------------INS VariableDeclarationFragment@@a @TO@ LambdaExpression@@a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
 @AT@ 2172 @LENGTH@ 1
------------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 2172 @LENGTH@ 1
---------------INS ExpressionStatement@@MethodInvocation:a.weaveByToUri("mock:result").remove() @TO@ LambdaExpression@@a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
 @AT@ 2191 @LENGTH@ 39
------------------INS MethodInvocation@@a.weaveByToUri("mock:result").remove() @TO@ ExpressionStatement@@MethodInvocation:a.weaveByToUri("mock:result").remove() @AT@ 2191 @LENGTH@ 38
---------------------INS MethodInvocation@@MethodName:weaveByToUri:["mock:result"] @TO@ MethodInvocation@@a.weaveByToUri("mock:result").remove() @AT@ 2191 @LENGTH@ 29
------------------------INS StringLiteral@@"mock:result" @TO@ MethodInvocation@@MethodName:weaveByToUri:["mock:result"] @AT@ 2206 @LENGTH@ 13
---------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.weaveByToUri("mock:result").remove() @AT@ 2191 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:remove:[] @TO@ MethodInvocation@@a.weaveByToUri("mock:result").remove() @AT@ 2221 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:a.weaveAddLast().transform().constant("Bye World") @TO@ LambdaExpression@@a -> {
  a.weaveByToUri("mock:result").remove();
  a.weaveAddLast().transform().constant("Bye World");
}
 @AT@ 2243 @LENGTH@ 51
------------------INS MethodInvocation@@a.weaveAddLast().transform().constant("Bye World") @TO@ ExpressionStatement@@MethodInvocation:a.weaveAddLast().transform().constant("Bye World") @AT@ 2243 @LENGTH@ 50
---------------------INS MethodInvocation@@MethodName:transform:[] @TO@ MethodInvocation@@a.weaveAddLast().transform().constant("Bye World") @AT@ 2243 @LENGTH@ 28
---------------------INS MethodInvocation@@MethodName:weaveAddLast:[] @TO@ MethodInvocation@@a.weaveAddLast().transform().constant("Bye World") @AT@ 2243 @LENGTH@ 16
---------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.weaveAddLast().transform().constant("Bye World") @AT@ 2243 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:constant:["Bye World"] @TO@ MethodInvocation@@a.weaveAddLast().transform().constant("Bye World") @AT@ 2272 @LENGTH@ 21
------------------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:constant:["Bye World"] @AT@ 2281 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:foo").expectedMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2316 @LENGTH@ 52
------INS MethodInvocation@@getMockEndpoint("mock:foo").expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:foo").expectedMessageCount(1) @AT@ 2316 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:getMockEndpoint:["mock:foo"] @TO@ MethodInvocation@@getMockEndpoint("mock:foo").expectedMessageCount(1) @AT@ 2316 @LENGTH@ 27
------------INS StringLiteral@@"mock:foo" @TO@ MethodInvocation@@MethodName:getMockEndpoint:["mock:foo"] @AT@ 2332 @LENGTH@ 10
---------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@getMockEndpoint("mock:foo").expectedMessageCount(1) @AT@ 2344 @LENGTH@ 23
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 2365 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedMessageCount(0) @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2377 @LENGTH@ 55
------INS MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(0) @TO@ ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedMessageCount(0) @AT@ 2377 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(0) @AT@ 2377 @LENGTH@ 30
------------INS StringLiteral@@"mock:result" @TO@ MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @AT@ 2393 @LENGTH@ 13
---------INS SimpleName@@MethodName:expectedMessageCount:[0] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(0) @AT@ 2408 @LENGTH@ 23
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:expectedMessageCount:[0] @AT@ 2429 @LENGTH@ 1
---INS VariableDeclarationStatement@@Object out=template.requestBody("direct:start","Hello World"); @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2442 @LENGTH@ 65
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object out=template.requestBody("direct:start","Hello World"); @AT@ 2442 @LENGTH@ 6
------INS VariableDeclarationFragment@@out=template.requestBody("direct:start","Hello World") @TO@ VariableDeclarationStatement@@Object out=template.requestBody("direct:start","Hello World"); @AT@ 2449 @LENGTH@ 57
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=template.requestBody("direct:start","Hello World") @AT@ 2449 @LENGTH@ 3
---------INS MethodInvocation@@template.requestBody("direct:start","Hello World") @TO@ VariableDeclarationFragment@@out=template.requestBody("direct:start","Hello World") @AT@ 2455 @LENGTH@ 51
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("direct:start","Hello World") @AT@ 2455 @LENGTH@ 8
------------INS SimpleName@@MethodName:requestBody:["direct:start", "Hello World"] @TO@ MethodInvocation@@template.requestBody("direct:start","Hello World") @AT@ 2464 @LENGTH@ 42
---------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:requestBody:["direct:start", "Hello World"] @AT@ 2476 @LENGTH@ 14
---------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:requestBody:["direct:start", "Hello World"] @AT@ 2492 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out) @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2516 @LENGTH@ 31
------INS MethodInvocation@@assertEquals("Bye World",out) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out) @AT@ 2516 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertEquals:["Bye World", out] @TO@ MethodInvocation@@assertEquals("Bye World",out) @AT@ 2516 @LENGTH@ 30
------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye World", out] @AT@ 2529 @LENGTH@ 11
------------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertEquals:["Bye World", out] @AT@ 2542 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testAdvisedNoLog, Exception,  @AT@ 2557 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 2557 @LENGTH@ 30


UPD ReturnStatement@@MethodInvocation:buildScheduled(null,null) @TO@ MethodInvocation:buildScheduled(null,"ScheduledThreadPool") @AT@ 3768 @LENGTH@ 34
---UPD MethodInvocation@@buildScheduled(null,null) @TO@ buildScheduled(null,"ScheduledThreadPool") @AT@ 3775 @LENGTH@ 26
------UPD SimpleName@@MethodName:buildScheduled:[null, null] @TO@ MethodName:buildScheduled:[null, "ScheduledThreadPool"] @AT@ 3775 @LENGTH@ 26
---------DEL NullLiteral@@null @AT@ 3796 @LENGTH@ 4
---------INS StringLiteral@@"ScheduledThreadPool" @TO@ SimpleName@@MethodName:buildScheduled:[null, null] @AT@ 3836 @LENGTH@ 21


UPD VariableDeclarationStatement@@boolean original=((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() || ((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy(); @TO@ boolean original=((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() || ((RedeliveryErrorHandler)handler).isUseOriginalBodyPolicy(); @AT@ 15888 @LENGTH@ 148
---UPD VariableDeclarationFragment@@original=((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() || ((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() @TO@ original=((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() || ((RedeliveryErrorHandler)handler).isUseOriginalBodyPolicy() @AT@ 15896 @LENGTH@ 139
------UPD InfixExpression@@((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() || ((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() @TO@ ((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() || ((RedeliveryErrorHandler)handler).isUseOriginalBodyPolicy() @AT@ 15907 @LENGTH@ 128
---------UPD MethodInvocation@@((RedeliveryErrorHandler)handler).isUseOriginalMessagePolicy() @TO@ ((RedeliveryErrorHandler)handler).isUseOriginalBodyPolicy() @AT@ 15973 @LENGTH@ 62
------------UPD SimpleName@@MethodName:isUseOriginalMessagePolicy:[] @TO@ MethodName:isUseOriginalBodyPolicy:[] @AT@ 16007 @LENGTH@ 28


INS FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @TO@ TypeDeclaration@@[public]ServerBearerTokenAuthenticationConverterTests,  @AT@ 1625 @LENGTH@ 60
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1625 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1633 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1640 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1646 @LENGTH@ 6
---INS VariableDeclarationFragment@@CUSTOM_HEADER="custom-header" @TO@ FieldDeclaration@@private, static, final, String, [CUSTOM_HEADER="custom-header"] @AT@ 1653 @LENGTH@ 31
------INS SimpleName@@CUSTOM_HEADER @TO@ VariableDeclarationFragment@@CUSTOM_HEADER="custom-header" @AT@ 1653 @LENGTH@ 13
------INS StringLiteral@@"custom-header" @TO@ VariableDeclarationFragment@@CUSTOM_HEADER="custom-header" @AT@ 1669 @LENGTH@ 15


UPD VariableDeclarationStatement@@Long hits=processor.getCounter(); @TO@ long hits=processor.getCounter(); @AT@ 3408 @LENGTH@ 35
---DEL SimpleType@@Long @AT@ 3408 @LENGTH@ 4
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@Long hits=processor.getCounter(); @AT@ 3408 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:constructor_probability_bits_hash__BadNumberOfBitsTest,  @TO@ public, void, MethodName:constructor_probability_bits_hash_BadNumberOfBitsTest,  @AT@ 10066 @LENGTH@ 297
---UPD SimpleName@@MethodName:constructor_probability_bits_hash__BadNumberOfBitsTest @TO@ MethodName:constructor_probability_bits_hash_BadNumberOfBitsTest @AT@ 10078 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ MethodInvocation:SizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 14270 @LENGTH@ 80
---UPD MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ SizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 14270 @LENGTH@ 79
------INS QualifiedName@@Name:SizeRotatingHandlerResourceDefinition.FILTER_SPEC @TO@ MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 14251 @LENGTH@ 49
------DEL SimpleName@@Name:FILTER_SPEC @AT@ 14270 @LENGTH@ 11


INS MethodDeclaration@@public, FunctionInvocation, MethodName:labels,  @TO@ TypeDeclaration@@[@API(status=EXPERIMENTAL,since="1.0"), public, final]Node, [PatternElement, Named, ExposesRelationships<Relationship>] @AT@ 6311 @LENGTH@ 72
---INS Modifier@@public @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:labels,  @AT@ 6311 @LENGTH@ 6
---INS SimpleType@@FunctionInvocation @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:labels,  @AT@ 6318 @LENGTH@ 18
---INS SimpleName@@MethodName:labels @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:labels,  @AT@ 6337 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:Functions.labels(this) @TO@ MethodDeclaration@@public, FunctionInvocation, MethodName:labels,  @AT@ 6350 @LENGTH@ 30
------INS MethodInvocation@@Functions.labels(this) @TO@ ReturnStatement@@MethodInvocation:Functions.labels(this) @AT@ 6357 @LENGTH@ 22
---------INS SimpleName@@Name:Functions @TO@ MethodInvocation@@Functions.labels(this) @AT@ 6357 @LENGTH@ 9
---------INS SimpleName@@MethodName:labels:[this] @TO@ MethodInvocation@@Functions.labels(this) @AT@ 6367 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:labels:[this] @AT@ 6374 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @AT@ 1916 @LENGTH@ 404
---UPD MethodInvocation@@from("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @AT@ 1916 @LENGTH@ 403
------UPD MethodInvocation@@MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder"] @AT@ 1916 @LENGTH@ 87
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 1921 @LENGTH@ 81
------------UPD StringLiteral@@"?decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 1960 @LENGTH@ 42


INS ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> cache.size() == 1000) @TO@ MethodDeclaration@@public, void, MethodName:testCacheConsumers, Exception,  @AT@ 1860 @LENGTH@ 70
---INS MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> cache.size() == 1000) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> cache.size() == 1000) @AT@ 1860 @LENGTH@ 69
------INS MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> cache.size() == 1000) @AT@ 1860 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 1875 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 1878 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1878 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1887 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> cache.size() == 1000) @AT@ 1860 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> cache.size() == 1000] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> cache.size() == 1000) @AT@ 1896 @LENGTH@ 33
---------INS LambdaExpression@@() -> cache.size() == 1000 @TO@ SimpleName@@MethodName:until:[() -> cache.size() == 1000] @AT@ 1902 @LENGTH@ 26
------------INS InfixExpression@@cache.size() == 1000 @TO@ LambdaExpression@@() -> cache.size() == 1000 @AT@ 1908 @LENGTH@ 20
---------------INS MethodInvocation@@cache.size() @TO@ InfixExpression@@cache.size() == 1000 @AT@ 1908 @LENGTH@ 12
------------------INS SimpleName@@Name:cache @TO@ MethodInvocation@@cache.size() @AT@ 1908 @LENGTH@ 5
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@cache.size() @AT@ 1914 @LENGTH@ 6
---------------INS Operator@@== @TO@ InfixExpression@@cache.size() == 1000 @AT@ 1920 @LENGTH@ 2
---------------INS NumberLiteral@@1000 @TO@ InfixExpression@@cache.size() == 1000 @AT@ 1924 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:FileFilterUtils.filterList(filter,Arrays.asList((File)null)) @TO@ MethodInvocation:FileFilterUtils.filterList(filter,Collections.singletonList((File)null)) @AT@ 58734 @LENGTH@ 63
---UPD MethodInvocation@@FileFilterUtils.filterList(filter,Arrays.asList((File)null)) @TO@ FileFilterUtils.filterList(filter,Collections.singletonList((File)null)) @AT@ 58734 @LENGTH@ 62
------UPD SimpleName@@MethodName:filterList:[filter, Arrays.asList((File)null)] @TO@ MethodName:filterList:[filter, Collections.singletonList((File)null)] @AT@ 58750 @LENGTH@ 46
---------UPD MethodInvocation@@Arrays.asList((File)null) @TO@ Collections.singletonList((File)null) @AT@ 58769 @LENGTH@ 26
------------UPD SimpleName@@Name:Arrays @TO@ Name:Collections @AT@ 58769 @LENGTH@ 6
------------UPD SimpleName@@MethodName:asList:[(File)null] @TO@ MethodName:singletonList:[(File)null] @AT@ 58776 @LENGTH@ 19


DEL FieldDeclaration@@private, int, [maxConnections] @AT@ 1912 @LENGTH@ 27
---DEL Modifier@@private @AT@ 1912 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 1920 @LENGTH@ 3
---DEL VariableDeclarationFragment@@maxConnections @AT@ 1924 @LENGTH@ 14
------DEL SimpleName@@maxConnections @AT@ 1924 @LENGTH@ 14


INS MethodDeclaration@@public, boolean, MethodName:isBlocking,  @TO@ TypeDeclaration@@[@EqualsAndHashCode, @ToString, @Getter, public]StreamReadOptions,  @AT@ 3412 @LENGTH@ 80
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isBlocking,  @AT@ 3412 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isBlocking,  @AT@ 3419 @LENGTH@ 7
---INS SimpleName@@MethodName:isBlocking @TO@ MethodDeclaration@@public, boolean, MethodName:isBlocking,  @AT@ 3427 @LENGTH@ 10
---INS ReturnStatement@@InfixExpression:getBlock() != null && getBlock() >= 0 @TO@ MethodDeclaration@@public, boolean, MethodName:isBlocking,  @AT@ 3444 @LENGTH@ 45
------INS InfixExpression@@getBlock() != null && getBlock() >= 0 @TO@ ReturnStatement@@InfixExpression:getBlock() != null && getBlock() >= 0 @AT@ 3451 @LENGTH@ 37
---------INS InfixExpression@@getBlock() != null @TO@ InfixExpression@@getBlock() != null && getBlock() >= 0 @AT@ 3451 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:getBlock:[] @TO@ InfixExpression@@getBlock() != null @AT@ 3451 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getBlock() != null @AT@ 3461 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@getBlock() != null @AT@ 3465 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@getBlock() != null && getBlock() >= 0 @AT@ 3469 @LENGTH@ 2
---------INS InfixExpression@@getBlock() >= 0 @TO@ InfixExpression@@getBlock() != null && getBlock() >= 0 @AT@ 3473 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getBlock:[] @TO@ InfixExpression@@getBlock() >= 0 @AT@ 3473 @LENGTH@ 10
------------INS Operator@@>= @TO@ InfixExpression@@getBlock() >= 0 @AT@ 3483 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@getBlock() >= 0 @AT@ 3487 @LENGTH@ 1


UPD FieldDeclaration@@private, long, [id] @TO@ private, Long, [id] @AT@ 1057 @LENGTH@ 16
---DEL PrimitiveType@@long @AT@ 1065 @LENGTH@ 4
---INS SimpleType@@Long @TO@ FieldDeclaration@@private, long, [id] @AT@ 1065 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(scheduler,"scheduler",this) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 16836 @LENGTH@ 51
---INS MethodInvocation@@ObjectHelper.notNull(scheduler,"scheduler",this) @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(scheduler,"scheduler",this) @AT@ 16836 @LENGTH@ 50
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(scheduler,"scheduler",this) @AT@ 16836 @LENGTH@ 12
------INS SimpleName@@MethodName:notNull:[scheduler, "scheduler", this] @TO@ MethodInvocation@@ObjectHelper.notNull(scheduler,"scheduler",this) @AT@ 16849 @LENGTH@ 37
---------INS SimpleName@@scheduler @TO@ SimpleName@@MethodName:notNull:[scheduler, "scheduler", this] @AT@ 16857 @LENGTH@ 9
---------INS StringLiteral@@"scheduler" @TO@ SimpleName@@MethodName:notNull:[scheduler, "scheduler", this] @AT@ 16868 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ SimpleName@@MethodName:notNull:[scheduler, "scheduler", this] @AT@ 16881 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(key.replaceAll("\\.\\$(\\[.*\\])?",""),entity,mappingContext);
 @TO@ super(key,entity,mappingContext);
 @AT@ 9546 @LENGTH@ 71
---DEL MethodInvocation@@key.replaceAll("\\.\\$(\\[.*\\])?","") @AT@ 9552 @LENGTH@ 39
------DEL SimpleName@@Name:key @AT@ 9552 @LENGTH@ 3
------DEL SimpleName@@MethodName:replaceAll:["\\.\\$(\\[.*\\])?", ""] @AT@ 9556 @LENGTH@ 35
---------DEL StringLiteral@@"\\.\\$(\\[.*\\])?" @AT@ 9567 @LENGTH@ 19
---------DEL StringLiteral@@"" @AT@ 9588 @LENGTH@ 2
---INS SimpleName@@key @TO@ SuperConstructorInvocation@@super(key.replaceAll("\\.\\$(\\[.*\\])?",""),entity,mappingContext);
 @AT@ 9581 @LENGTH@ 3


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 2492 @LENGTH@ 664
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 2507 @LENGTH@ 7
---UPD ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ SuperMethodInvocation:super.doInit() @AT@ 3134 @LENGTH@ 16
------UPD SuperMethodInvocation@@super.doStart() @TO@ super.doInit() @AT@ 3134 @LENGTH@ 15
---------UPD SimpleName@@MethodName:doStart:[] @TO@ MethodName:doInit:[] @AT@ 3140 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertThat(updateModel.getUpdate()).isEqualTo(new Document("$set",new Document("items.$.documents.0.fileId","file-id"))) @TO@ MethodInvocation:assertThat(updateModel.getUpdate()).isEqualTo(new Document("$set",new Document("items.$.documents.0.the_file_id","file-id"))) @AT@ 15115 @LENGTH@ 128
---UPD MethodInvocation@@assertThat(updateModel.getUpdate()).isEqualTo(new Document("$set",new Document("items.$.documents.0.fileId","file-id"))) @TO@ assertThat(updateModel.getUpdate()).isEqualTo(new Document("$set",new Document("items.$.documents.0.the_file_id","file-id"))) @AT@ 15115 @LENGTH@ 127
------UPD SimpleName@@MethodName:isEqualTo:[new Document("$set",new Document("items.$.documents.0.fileId","file-id"))] @TO@ MethodName:isEqualTo:[new Document("$set",new Document("items.$.documents.0.the_file_id","file-id"))] @AT@ 15156 @LENGTH@ 86
---------UPD ClassInstanceCreation@@Document["$set", new Document("items.$.documents.0.fileId","file-id")] @TO@ Document["$set", new Document("items.$.documents.0.the_file_id","file-id")] @AT@ 15166 @LENGTH@ 75
------------UPD ClassInstanceCreation@@Document["items.$.documents.0.fileId", "file-id"] @TO@ Document["items.$.documents.0.the_file_id", "file-id"] @AT@ 15187 @LENGTH@ 53
---------------UPD StringLiteral@@"items.$.documents.0.fileId" @TO@ "items.$.documents.0.the_file_id" @AT@ 15200 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @AT@ 2064 @LENGTH@ 731
---UPD MethodInvocation@@from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @AT@ 2064 @LENGTH@ 730
------UPD MethodInvocation@@MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder"] @AT@ 2064 @LENGTH@ 97
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder" @AT@ 2069 @LENGTH@ 91
------------UPD StringLiteral@@"?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @TO@ "?sync=true&encoders=#hl7encoder&decoders=#hl7decoder" @AT@ 2108 @LENGTH@ 52


UPD IfStatement@@if (beanName.equals(ExceptionTranslationFilter.class.getName())) {  return i + 1;} @TO@ if (ExceptionTranslationFilter.class.getName().equals(beanName)) {  return i + 1;} @AT@ 11357 @LENGTH@ 101
---UPD MethodInvocation@@beanName.equals(ExceptionTranslationFilter.class.getName()) @TO@ ExceptionTranslationFilter.class.getName().equals(beanName) @AT@ 11361 @LENGTH@ 59
------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@beanName.equals(ExceptionTranslationFilter.class.getName()) @AT@ 11361 @LENGTH@ 42
------DEL SimpleName@@Name:beanName @AT@ 11361 @LENGTH@ 8
------DEL SimpleName@@MethodName:equals:[ExceptionTranslationFilter.class.getName()] @AT@ 11370 @LENGTH@ 50
---------DEL MethodInvocation@@ExceptionTranslationFilter.class.getName() @AT@ 11377 @LENGTH@ 42
------MOV TypeLiteral@@ExceptionTranslationFilter.class @TO@ MethodInvocation@@beanName.equals(ExceptionTranslationFilter.class.getName()) @AT@ 11377 @LENGTH@ 32
------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@beanName.equals(ExceptionTranslationFilter.class.getName()) @AT@ 11410 @LENGTH@ 9
---------INS SimpleName@@beanName @TO@ SimpleName@@MethodName:getName:[] @AT@ 11411 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:testStartupFailsIfProvidersNotSet,  @TO@ public, void, MethodName:testStartupFailsIfProvidersNotSetAsVarargs,  @AT@ 3379 @LENGTH@ 81
---UPD SimpleName@@MethodName:testStartupFailsIfProvidersNotSet @TO@ MethodName:testStartupFailsIfProvidersNotSetAsVarargs @AT@ 3391 @LENGTH@ 33
---UPD ExpressionStatement@@ClassInstanceCreation:new ProviderManager(null) @TO@ ClassInstanceCreation:new ProviderManager((AuthenticationProvider)null) @AT@ 3431 @LENGTH@ 26
------UPD ClassInstanceCreation@@ProviderManager[null] @TO@ ProviderManager[(AuthenticationProvider)null] @AT@ 3431 @LENGTH@ 25
---------DEL NullLiteral@@null @AT@ 3451 @LENGTH@ 4
---------INS CastExpression@@(AuthenticationProvider)null @TO@ ClassInstanceCreation@@ProviderManager[null] @AT@ 3631 @LENGTH@ 29
------------INS SimpleType@@AuthenticationProvider @TO@ CastExpression@@(AuthenticationProvider)null @AT@ 3632 @LENGTH@ 22
------------INS NullLiteral@@null @TO@ CastExpression@@(AuthenticationProvider)null @AT@ 3656 @LENGTH@ 4


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="2.10.0",scheme="scp",extendsScheme="ftp",title="SCP",syntax="scp:host:port/directoryName",producerOnly=true,label="file",excludeProperties="appendChars,binary,charset,doneFileName,download,fastExistsCheck,fileExist,moveExisting,passiveMode" + ",separator,tempFileName,tempPrefix,eagerDeleteTargetFile,keepLastModified,sendNoop" + ",maximumReconnectAttempts,reconnectDelay,autoCreate,bufferSize,siteCommand,stepwise,throwExceptionOnConnectFailed"), public]ScpEndpoint, RemoteFileEndpoint<ScpFile> @TO@ [@UriEndpoint(firstVersion="2.10.0",scheme="scp",extendsScheme="ftp",title="SCP",syntax="scp:host:port/directoryName",producerOnly=true,label="file",excludeProperties="appendChars,binary,charset,doneFileName,download,fastExistsCheck,fileExist,moveExisting,passiveMode" + ",separator,tempFileName,tempPrefix,eagerDeleteTargetFile,keepLastModified,sendNoop" + ",maximumReconnectAttempts,reconnectDelay,autoCreate,bufferSize,siteCommand,stepwise,throwExceptionOnConnectFailed"+ ",transferLoggingIntervalSeconds,transferLoggingLevel,transferLoggingVerbose,resumeDownload"+ ",handleDirectoryParserAbsoluteResult,activePortRange,ftpClient,ftpClientConfig"+ ",ftpClientConfigParameters,ftpClientParameters,account"), public]ScpEndpoint, RemoteFileEndpoint<ScpFile> @AT@ 1318 @LENGTH@ 1806
---UPD NormalAnnotation@@@UriEndpoint(firstVersion="2.10.0",scheme="scp",extendsScheme="ftp",title="SCP",syntax="scp:host:port/directoryName",producerOnly=true,label="file",excludeProperties="appendChars,binary,charset,doneFileName,download,fastExistsCheck,fileExist,moveExisting,passiveMode" + ",separator,tempFileName,tempPrefix,eagerDeleteTargetFile,keepLastModified,sendNoop" + ",maximumReconnectAttempts,reconnectDelay,autoCreate,bufferSize,siteCommand,stepwise,throwExceptionOnConnectFailed") @TO@ @UriEndpoint(firstVersion="2.10.0",scheme="scp",extendsScheme="ftp",title="SCP",syntax="scp:host:port/directoryName",producerOnly=true,label="file",excludeProperties="appendChars,binary,charset,doneFileName,download,fastExistsCheck,fileExist,moveExisting,passiveMode" + ",separator,tempFileName,tempPrefix,eagerDeleteTargetFile,keepLastModified,sendNoop" + ",maximumReconnectAttempts,reconnectDelay,autoCreate,bufferSize,siteCommand,stepwise,throwExceptionOnConnectFailed"+ ",transferLoggingIntervalSeconds,transferLoggingLevel,transferLoggingVerbose,resumeDownload"+ ",handleDirectoryParserAbsoluteResult,activePortRange,ftpClient,ftpClientConfig"+ ",ftpClientConfigParameters,ftpClientParameters,account") @AT@ 1318 @LENGTH@ 544


UPD MethodDeclaration@@public, void, MethodName:buildWhenAdditionalParametersIsNullThenDoesNotThrowAnyException,  @TO@ public, void, MethodName:buildWhenAdditionalParametersEmptyThenDoesNotThrowAnyException,  @AT@ 3757 @LENGTH@ 383
---UPD SimpleName@@MethodName:buildWhenAdditionalParametersIsNullThenDoesNotThrowAnyException @TO@ MethodName:buildWhenAdditionalParametersEmptyThenDoesNotThrowAnyException @AT@ 3769 @LENGTH@ 63
---UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build()).doesNotThrowAnyException() @TO@ MethodInvocation:assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(Map::clear).build()).doesNotThrowAnyException() @AT@ 3839 @LENGTH@ 298
------UPD MethodInvocation@@assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build()).doesNotThrowAnyException() @TO@ assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(Map::clear).build()).doesNotThrowAnyException() @AT@ 3839 @LENGTH@ 297
---------UPD MethodInvocation@@MethodName:assertThatCode:[() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build()] @TO@ MethodName:assertThatCode:[() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(Map::clear).build()] @AT@ 3839 @LENGTH@ 265
------------UPD LambdaExpression@@() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build() @TO@ () -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(Map::clear).build() @AT@ 3854 @LENGTH@ 249
---------------UPD MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build() @TO@ OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(Map::clear).build() @AT@ 3864 @LENGTH@ 239
------------------UPD MethodInvocation@@MethodName:additionalParameters:[(Map)null] @TO@ MethodName:additionalParameters:[Map::clear] @AT@ 3864 @LENGTH@ 225
---------------------DEL CastExpression@@(Map)null @AT@ 4078 @LENGTH@ 10
------------------------DEL SimpleType@@Map @AT@ 4079 @LENGTH@ 3
------------------------DEL NullLiteral@@null @AT@ 4084 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:when(mockConf.getPrefix()).thenReturn(null) @AT@ 2834 @LENGTH@ 44
---DEL MethodInvocation@@when(mockConf.getPrefix()).thenReturn(null) @AT@ 2834 @LENGTH@ 43
------DEL MethodInvocation@@MethodName:when:[mockConf.getPrefix()] @AT@ 2834 @LENGTH@ 26
---------DEL MethodInvocation@@mockConf.getPrefix() @AT@ 2839 @LENGTH@ 20
------------DEL SimpleName@@Name:mockConf @AT@ 2839 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getPrefix:[] @AT@ 2848 @LENGTH@ 11
------DEL SimpleName@@MethodName:thenReturn:[null] @AT@ 2861 @LENGTH@ 16
---------DEL NullLiteral@@null @AT@ 2872 @LENGTH@ 4


INS MethodDeclaration@@private, AuthenticationEventPublisher, MethodName:getAuthenticationEventPublisher,  @TO@ TypeDeclaration@@[@Order(100), public, abstract]WebSecurityConfigurerAdapter, [WebSecurityConfigurer<WebSecurity>] @AT@ 16433 @LENGTH@ 326
---INS Modifier@@private @TO@ MethodDeclaration@@private, AuthenticationEventPublisher, MethodName:getAuthenticationEventPublisher,  @AT@ 16433 @LENGTH@ 7
---INS SimpleType@@AuthenticationEventPublisher @TO@ MethodDeclaration@@private, AuthenticationEventPublisher, MethodName:getAuthenticationEventPublisher,  @AT@ 16441 @LENGTH@ 28
---INS SimpleName@@MethodName:getAuthenticationEventPublisher @TO@ MethodDeclaration@@private, AuthenticationEventPublisher, MethodName:getAuthenticationEventPublisher,  @AT@ 16470 @LENGTH@ 31
---INS IfStatement@@if (this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0) {  return this.context.getBean(AuthenticationEventPublisher.class);} @TO@ MethodDeclaration@@private, AuthenticationEventPublisher, MethodName:getAuthenticationEventPublisher,  @AT@ 16508 @LENGTH@ 158
------INS InfixExpression@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0 @TO@ IfStatement@@if (this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0) {  return this.context.getBean(AuthenticationEventPublisher.class);} @AT@ 16512 @LENGTH@ 79
---------INS FieldAccess@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length @TO@ InfixExpression@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0 @AT@ 16512 @LENGTH@ 75
------------INS MethodInvocation@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class) @TO@ FieldAccess@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length @AT@ 16512 @LENGTH@ 68
---------------INS FieldAccess@@this.context @TO@ MethodInvocation@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class) @AT@ 16512 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 16512 @LENGTH@ 4
------------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 16517 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getBeanNamesForType:[AuthenticationEventPublisher.class] @TO@ MethodInvocation@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class) @AT@ 16525 @LENGTH@ 55
------------------INS TypeLiteral@@AuthenticationEventPublisher.class @TO@ SimpleName@@MethodName:getBeanNamesForType:[AuthenticationEventPublisher.class] @AT@ 16545 @LENGTH@ 34
------------INS SimpleName@@length @TO@ FieldAccess@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length @AT@ 16581 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0 @AT@ 16587 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0 @AT@ 16590 @LENGTH@ 1
------INS Block@@ThenBody:{  return this.context.getBean(AuthenticationEventPublisher.class);} @TO@ IfStatement@@if (this.context.getBeanNamesForType(AuthenticationEventPublisher.class).length > 0) {  return this.context.getBean(AuthenticationEventPublisher.class);} @AT@ 16593 @LENGTH@ 73
---------INS ReturnStatement@@MethodInvocation:this.context.getBean(AuthenticationEventPublisher.class) @TO@ Block@@ThenBody:{  return this.context.getBean(AuthenticationEventPublisher.class);} @AT@ 16598 @LENGTH@ 64
------------INS MethodInvocation@@this.context.getBean(AuthenticationEventPublisher.class) @TO@ ReturnStatement@@MethodInvocation:this.context.getBean(AuthenticationEventPublisher.class) @AT@ 16605 @LENGTH@ 56
---------------INS FieldAccess@@this.context @TO@ MethodInvocation@@this.context.getBean(AuthenticationEventPublisher.class) @AT@ 16605 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 16605 @LENGTH@ 4
------------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 16610 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getBean:[AuthenticationEventPublisher.class] @TO@ MethodInvocation@@this.context.getBean(AuthenticationEventPublisher.class) @AT@ 16618 @LENGTH@ 43
------------------INS TypeLiteral@@AuthenticationEventPublisher.class @TO@ SimpleName@@MethodName:getBean:[AuthenticationEventPublisher.class] @AT@ 16626 @LENGTH@ 34
---INS ReturnStatement@@MethodInvocation:this.objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @TO@ MethodDeclaration@@private, AuthenticationEventPublisher, MethodName:getAuthenticationEventPublisher,  @AT@ 16669 @LENGTH@ 87
------MOV MethodInvocation@@objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @TO@ ReturnStatement@@MethodInvocation:this.objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @AT@ 9079 @LENGTH@ 79
---------DEL SimpleName@@Name:objectPostProcessor @AT@ 9079 @LENGTH@ 19
---------INS FieldAccess@@this.objectPostProcessor @TO@ MethodInvocation@@objectPostProcessor.postProcess(new DefaultAuthenticationEventPublisher()) @AT@ 16676 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.objectPostProcessor @AT@ 16676 @LENGTH@ 4
------------INS SimpleName@@objectPostProcessor @TO@ FieldAccess@@this.objectPostProcessor @AT@ 16681 @LENGTH@ 19


INS MethodDeclaration@@public, Map<String,Object>, MethodName:getOptions,  @TO@ TypeDeclaration@@[public]RequestBeanHolder, [BeanHolder] @AT@ 1354 @LENGTH@ 83
---INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,Object>, MethodName:getOptions,  @AT@ 1354 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Object> @TO@ MethodDeclaration@@public, Map<String,Object>, MethodName:getOptions,  @AT@ 1361 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1361 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1365 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1373 @LENGTH@ 6
---INS SimpleName@@MethodName:getOptions @TO@ MethodDeclaration@@public, Map<String,Object>, MethodName:getOptions,  @AT@ 1381 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:holder.getOptions() @TO@ MethodDeclaration@@public, Map<String,Object>, MethodName:getOptions,  @AT@ 1404 @LENGTH@ 27
------INS MethodInvocation@@holder.getOptions() @TO@ ReturnStatement@@MethodInvocation:holder.getOptions() @AT@ 1411 @LENGTH@ 19
---------INS SimpleName@@Name:holder @TO@ MethodInvocation@@holder.getOptions() @AT@ 1411 @LENGTH@ 6
---------INS SimpleName@@MethodName:getOptions:[] @TO@ MethodInvocation@@holder.getOptions() @AT@ 1418 @LENGTH@ 12


INS MethodDeclaration@@void, MethodName:leave, RelationshipDetail details,  @TO@ TypeDeclaration@@RenderingVisitor, ReflectiveVisitor @AT@ 7309 @LENGTH@ 166
---MOV VariableDeclarationStatement@@Relationship.Direction direction=details.getDirection(); @TO@ MethodDeclaration@@void, MethodName:leave, RelationshipDetail details,  @AT@ 7160 @LENGTH@ 58
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:leave, RelationshipDetail details,  @AT@ 7304 @LENGTH@ 4
---INS SimpleName@@MethodName:leave @TO@ MethodDeclaration@@void, MethodName:leave, RelationshipDetail details,  @AT@ 7309 @LENGTH@ 5
---INS SingleVariableDeclaration@@RelationshipDetail details @TO@ MethodDeclaration@@void, MethodName:leave, RelationshipDetail details,  @AT@ 7315 @LENGTH@ 26
------INS SimpleType@@RelationshipDetail @TO@ SingleVariableDeclaration@@RelationshipDetail details @AT@ 7315 @LENGTH@ 18
------INS SimpleName@@details @TO@ SingleVariableDeclaration@@RelationshipDetail details @AT@ 7334 @LENGTH@ 7
---MOV ExpressionStatement@@MethodInvocation:builder.append(direction.getSymbolRight()) @TO@ MethodDeclaration@@void, MethodName:leave, RelationshipDetail details,  @AT@ 7447 @LENGTH@ 43


DEL FieldDeclaration@@ClientRegistrationRepository, [clientRegistrationRepository] @AT@ 1817 @LENGTH@ 58
---DEL SimpleType@@ClientRegistrationRepository @AT@ 1817 @LENGTH@ 28
---DEL VariableDeclarationFragment@@clientRegistrationRepository @AT@ 1846 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 1846 @LENGTH@ 28


DEL MethodDeclaration@@public, void, MethodName:testSetSecurityPolicies4,  @AT@ 1769 @LENGTH@ 185
---DEL Modifier@@public @AT@ 1769 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1776 @LENGTH@ 4
---DEL SimpleName@@MethodName:testSetSecurityPolicies4 @AT@ 1781 @LENGTH@ 24
---DEL VariableDeclarationStatement@@final MiloServerComponent component=new MiloServerComponent(); @AT@ 1818 @LENGTH@ 64
------DEL Modifier@@final @AT@ 1818 @LENGTH@ 5
------DEL SimpleType@@MiloServerComponent @AT@ 1824 @LENGTH@ 19
------DEL VariableDeclarationFragment@@component=new MiloServerComponent() @AT@ 1844 @LENGTH@ 37
---------DEL SimpleName@@component @AT@ 1844 @LENGTH@ 9
---------DEL ClassInstanceCreation@@MiloServerComponent[] @AT@ 1856 @LENGTH@ 25
------------DEL New@@new @AT@ 1856 @LENGTH@ 3
------------DEL SimpleType@@MiloServerComponent @AT@ 1860 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:component.setSecurityPoliciesById("I just made that up") @AT@ 1891 @LENGTH@ 57
------DEL MethodInvocation@@component.setSecurityPoliciesById("I just made that up") @AT@ 1891 @LENGTH@ 56
---------DEL SimpleName@@Name:component @AT@ 1891 @LENGTH@ 9
---------DEL SimpleName@@MethodName:setSecurityPoliciesById:["I just made that up"] @AT@ 1901 @LENGTH@ 46
------------DEL StringLiteral@@"I just made that up" @AT@ 1925 @LENGTH@ 21


UPD IfStatement@@if (parent != null) recursiveNodes.add(parent); @TO@ if (parent != null) {  recursiveNodes.add(parent);} @AT@ 5197 @LENGTH@ 47
---UPD Block@@ThenBody:recursiveNodes.add(parent); @TO@ ThenBody:{  recursiveNodes.add(parent);} @AT@ 5217 @LENGTH@ 27


UPD FieldDeclaration@@private, final, RequestCache, [requestCache=new HttpSessionRequestCache()] @TO@ private, RequestCache, [requestCache=new HttpSessionRequestCache()] @AT@ 5653 @LENGTH@ 72
---DEL Modifier@@final @AT@ 5661 @LENGTH@ 5


UPD MethodDeclaration@@KubernetesServiceAccountsEndpointBuilder, MethodName:kubernetesServiceAccounts, String path,  @TO@ static, KubernetesServiceAccountsEndpointBuilder, MethodName:kubernetesServiceAccounts, String path,  @AT@ 15750 @LENGTH@ 488
---INS Modifier@@static @TO@ MethodDeclaration@@KubernetesServiceAccountsEndpointBuilder, MethodName:kubernetesServiceAccounts, String path,  @AT@ 15709 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducersFromContext, Exception,  @AT@ 11558 @LENGTH@ 87
---INS MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11558 @LENGTH@ 86
------INS MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11558 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 11573 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 11576 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 11576 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 11585 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11558 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11594 @LENGTH@ 50
---------INS LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @TO@ SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @AT@ 11600 @LENGTH@ 43
------------INS InfixExpression@@template.getCurrentCacheSize() == 500 @TO@ LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @AT@ 11606 @LENGTH@ 37
---------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 11606 @LENGTH@ 30
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 11606 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 11615 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 11636 @LENGTH@ 2
---------------INS NumberLiteral@@500 @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 11640 @LENGTH@ 3


UPD TypeDeclaration@@[public]ReactiveOpaqueTokenIntrospector,  @TO@ [@FunctionalInterface, public]ReactiveOpaqueTokenIntrospector,  @AT@ 1356 @LENGTH@ 345
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveOpaqueTokenIntrospector,  @AT@ 1356 @LENGTH@ 20


UPD IfStatement@@if (objectMetadata.get("Content-Length") == "0" && ObjectHelper.isEmpty(exchange.getProperty(Exchange.CONTENT_LENGTH))) {  LOG.debug("The content length is not defined. It needs to be determined by reading the data into memory");  baos=determineLengthInputStream(is);  objectMetadata.put("Content-Length",String.valueOf(baos.size()));  is=new ByteArrayInputStream(baos.toByteArray());} else {  if (ObjectHelper.isNotEmpty(exchange.getProperty(Exchange.CONTENT_LENGTH))) {    objectMetadata.put("Content-Length",exchange.getProperty(Exchange.CONTENT_LENGTH,String.class));  }} @TO@ if (objectMetadata.get("Content-Length").equals("0") && ObjectHelper.isEmpty(exchange.getProperty(Exchange.CONTENT_LENGTH))) {  LOG.debug("The content length is not defined. It needs to be determined by reading the data into memory");  baos=determineLengthInputStream(is);  objectMetadata.put("Content-Length",String.valueOf(baos.size()));  is=new ByteArrayInputStream(baos.toByteArray());} else {  if (ObjectHelper.isNotEmpty(exchange.getProperty(Exchange.CONTENT_LENGTH))) {    objectMetadata.put("Content-Length",exchange.getProperty(Exchange.CONTENT_LENGTH,String.class));  }} @AT@ 5871 @LENGTH@ 715
---UPD InfixExpression@@objectMetadata.get("Content-Length") == "0" && ObjectHelper.isEmpty(exchange.getProperty(Exchange.CONTENT_LENGTH)) @TO@ objectMetadata.get("Content-Length").equals("0") && ObjectHelper.isEmpty(exchange.getProperty(Exchange.CONTENT_LENGTH)) @AT@ 5875 @LENGTH@ 114
------DEL InfixExpression@@objectMetadata.get("Content-Length") == "0" @AT@ 5875 @LENGTH@ 43
---------DEL Operator@@== @AT@ 5911 @LENGTH@ 2
---------DEL StringLiteral@@"0" @AT@ 5915 @LENGTH@ 3
------MOV MethodInvocation@@objectMetadata.get("Content-Length") @TO@ InfixExpression@@objectMetadata.get("Content-Length") == "0" && ObjectHelper.isEmpty(exchange.getProperty(Exchange.CONTENT_LENGTH)) @AT@ 5875 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:get:["Content-Length"] @TO@ MethodInvocation@@objectMetadata.get("Content-Length") @AT@ 5191 @LENGTH@ 36
------------INS StringLiteral@@"Content-Length" @TO@ MethodInvocation@@MethodName:get:["Content-Length"] @AT@ 5210 @LENGTH@ 16
---------UPD SimpleName@@MethodName:get:["Content-Length"] @TO@ MethodName:equals:["0"] @AT@ 5890 @LENGTH@ 21
------------UPD StringLiteral@@"Content-Length" @TO@ "0" @AT@ 5894 @LENGTH@ 16


UPD MethodDeclaration@@voidMethodName:EllipticCurveJwkDefinition, String keyId, PublicKeyUse publicKeyUse, CryptoAlgorithm algorithm, String x, String y, String curve,  @TO@ voidMethodName:EllipticCurveJwkDefinition, String keyId, String x5t, PublicKeyUse publicKeyUse, CryptoAlgorithm algorithm, String x, String y, String curve,  @AT@ 1550 @LENGTH@ 286
---INS SingleVariableDeclaration@@String x5t @TO@ MethodDeclaration@@voidMethodName:EllipticCurveJwkDefinition, String keyId, PublicKeyUse publicKeyUse, CryptoAlgorithm algorithm, String x, String y, String curve,  @AT@ 1682 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String x5t @AT@ 1682 @LENGTH@ 6
------INS SimpleName@@x5t @TO@ SingleVariableDeclaration@@String x5t @AT@ 1689 @LENGTH@ 3
---UPD SuperConstructorInvocation@@super(keyId,KeyType.EC,publicKeyUse,algorithm);
 @TO@ super(keyId,x5t,KeyType.EC,publicKeyUse,algorithm);
 @AT@ 1733 @LENGTH@ 50
------INS SimpleName@@x5t @TO@ SuperConstructorInvocation@@super(keyId,KeyType.EC,publicKeyUse,algorithm);
 @AT@ 1849 @LENGTH@ 3


UPD MethodDeclaration@@KubernetesPersistentVolumesClaimsEndpointBuilder, MethodName:kubernetesPersistentVolumesClaims, String path,  @TO@ static, KubernetesPersistentVolumesClaimsEndpointBuilder, MethodName:kubernetesPersistentVolumesClaims, String path,  @AT@ 16134 @LENGTH@ 545
---INS Modifier@@static @TO@ MethodDeclaration@@KubernetesPersistentVolumesClaimsEndpointBuilder, MethodName:kubernetesPersistentVolumesClaims, String path,  @AT@ 16085 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @TO@ TypeDeclaration@@[public]Saml2WebSsoAuthenticationFilterTests,  @AT@ 3150 @LENGTH@ 713
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3150 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3157 @LENGTH@ 4
---INS SimpleName@@MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3162 @LENGTH@ 70
---INS ExpressionStatement@@MethodInvocation:when(repository.findByRegistrationId("non-existent-id")).thenReturn(null) @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3239 @LENGTH@ 74
------INS MethodInvocation@@when(repository.findByRegistrationId("non-existent-id")).thenReturn(null) @TO@ ExpressionStatement@@MethodInvocation:when(repository.findByRegistrationId("non-existent-id")).thenReturn(null) @AT@ 3239 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:when:[repository.findByRegistrationId("non-existent-id")] @TO@ MethodInvocation@@when(repository.findByRegistrationId("non-existent-id")).thenReturn(null) @AT@ 3239 @LENGTH@ 56
------------INS MethodInvocation@@repository.findByRegistrationId("non-existent-id") @TO@ MethodInvocation@@MethodName:when:[repository.findByRegistrationId("non-existent-id")] @AT@ 3244 @LENGTH@ 50
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByRegistrationId("non-existent-id") @AT@ 3244 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findByRegistrationId:["non-existent-id"] @TO@ MethodInvocation@@repository.findByRegistrationId("non-existent-id") @AT@ 3255 @LENGTH@ 39
------------------INS StringLiteral@@"non-existent-id" @TO@ SimpleName@@MethodName:findByRegistrationId:["non-existent-id"] @AT@ 3276 @LENGTH@ 17
---------INS SimpleName@@MethodName:thenReturn:[null] @TO@ MethodInvocation@@when(repository.findByRegistrationId("non-existent-id")).thenReturn(null) @AT@ 3296 @LENGTH@ 16
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:thenReturn:[null] @AT@ 3307 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:filter=new Saml2WebSsoAuthenticationFilter(repository,"/some/other/path/{registrationId}") @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3317 @LENGTH@ 94
------INS Assignment@@filter=new Saml2WebSsoAuthenticationFilter(repository,"/some/other/path/{registrationId}") @TO@ ExpressionStatement@@Assignment:filter=new Saml2WebSsoAuthenticationFilter(repository,"/some/other/path/{registrationId}") @AT@ 3317 @LENGTH@ 93
---------INS SimpleName@@filter @TO@ Assignment@@filter=new Saml2WebSsoAuthenticationFilter(repository,"/some/other/path/{registrationId}") @AT@ 3317 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@filter=new Saml2WebSsoAuthenticationFilter(repository,"/some/other/path/{registrationId}") @AT@ 3323 @LENGTH@ 1
---------INS ClassInstanceCreation@@Saml2WebSsoAuthenticationFilter[repository, "/some/other/path/{registrationId}"] @TO@ Assignment@@filter=new Saml2WebSsoAuthenticationFilter(repository,"/some/other/path/{registrationId}") @AT@ 3326 @LENGTH@ 84
------------INS New@@new @TO@ ClassInstanceCreation@@Saml2WebSsoAuthenticationFilter[repository, "/some/other/path/{registrationId}"] @AT@ 3326 @LENGTH@ 3
------------INS SimpleType@@Saml2WebSsoAuthenticationFilter @TO@ ClassInstanceCreation@@Saml2WebSsoAuthenticationFilter[repository, "/some/other/path/{registrationId}"] @AT@ 3330 @LENGTH@ 31
------------INS SimpleName@@repository @TO@ ClassInstanceCreation@@Saml2WebSsoAuthenticationFilter[repository, "/some/other/path/{registrationId}"] @AT@ 3362 @LENGTH@ 10
------------INS StringLiteral@@"/some/other/path/{registrationId}" @TO@ ClassInstanceCreation@@Saml2WebSsoAuthenticationFilter[repository, "/some/other/path/{registrationId}"] @AT@ 3374 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:request.setPathInfo("/some/other/path/non-existent-id") @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3415 @LENGTH@ 56
------INS MethodInvocation@@request.setPathInfo("/some/other/path/non-existent-id") @TO@ ExpressionStatement@@MethodInvocation:request.setPathInfo("/some/other/path/non-existent-id") @AT@ 3415 @LENGTH@ 55
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setPathInfo("/some/other/path/non-existent-id") @AT@ 3415 @LENGTH@ 7
---------INS SimpleName@@MethodName:setPathInfo:["/some/other/path/non-existent-id"] @TO@ MethodInvocation@@request.setPathInfo("/some/other/path/non-existent-id") @AT@ 3423 @LENGTH@ 47
------------INS StringLiteral@@"/some/other/path/non-existent-id" @TO@ SimpleName@@MethodName:setPathInfo:["/some/other/path/non-existent-id"] @AT@ 3435 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:request.setParameter("SAMLResponse","response") @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3474 @LENGTH@ 49
------INS MethodInvocation@@request.setParameter("SAMLResponse","response") @TO@ ExpressionStatement@@MethodInvocation:request.setParameter("SAMLResponse","response") @AT@ 3474 @LENGTH@ 48
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setParameter("SAMLResponse","response") @AT@ 3474 @LENGTH@ 7
---------INS SimpleName@@MethodName:setParameter:["SAMLResponse", "response"] @TO@ MethodInvocation@@request.setParameter("SAMLResponse","response") @AT@ 3482 @LENGTH@ 40
------------INS StringLiteral@@"SAMLResponse" @TO@ SimpleName@@MethodName:setParameter:["SAMLResponse", "response"] @AT@ 3495 @LENGTH@ 14
------------INS StringLiteral@@"response" @TO@ SimpleName@@MethodName:setParameter:["SAMLResponse", "response"] @AT@ 3511 @LENGTH@ 10
---INS TryStatement@@try {  filter.attemptAuthentication(request,response);  failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class);} catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @TO@ MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenRegistrationIdDoesNotExistThenThrowsException,  @AT@ 3527 @LENGTH@ 333
------INS ExpressionStatement@@MethodInvocation:filter.attemptAuthentication(request,response) @TO@ TryStatement@@try {  filter.attemptAuthentication(request,response);  failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class);} catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @AT@ 3536 @LENGTH@ 48
---------INS MethodInvocation@@filter.attemptAuthentication(request,response) @TO@ ExpressionStatement@@MethodInvocation:filter.attemptAuthentication(request,response) @AT@ 3536 @LENGTH@ 47
------------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.attemptAuthentication(request,response) @AT@ 3536 @LENGTH@ 6
------------INS SimpleName@@MethodName:attemptAuthentication:[request, response] @TO@ MethodInvocation@@filter.attemptAuthentication(request,response) @AT@ 3543 @LENGTH@ 40
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:attemptAuthentication:[request, response] @AT@ 3565 @LENGTH@ 7
---------------INS SimpleName@@response @TO@ SimpleName@@MethodName:attemptAuthentication:[request, response] @AT@ 3574 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class) @TO@ TryStatement@@try {  filter.attemptAuthentication(request,response);  failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class);} catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @AT@ 3588 @LENGTH@ 69
---------INS MethodInvocation@@failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class) @TO@ ExpressionStatement@@MethodInvocation:failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class) @AT@ 3588 @LENGTH@ 68
------------INS SimpleName@@MethodName:failBecauseExceptionWasNotThrown:[Saml2AuthenticationException.class] @TO@ MethodInvocation@@failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class) @AT@ 3588 @LENGTH@ 68
---------------INS TypeLiteral@@Saml2AuthenticationException.class @TO@ SimpleName@@MethodName:failBecauseExceptionWasNotThrown:[Saml2AuthenticationException.class] @AT@ 3621 @LENGTH@ 34
------INS CatchClause@@catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @TO@ TryStatement@@try {  filter.attemptAuthentication(request,response);  failBecauseExceptionWasNotThrown(Saml2AuthenticationException.class);} catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @AT@ 3662 @LENGTH@ 198
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @AT@ 3669 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3669 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3679 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:assertThat(e).isInstanceOf(Saml2AuthenticationException.class) @TO@ CatchClause@@catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @AT@ 3687 @LENGTH@ 63
------------INS MethodInvocation@@assertThat(e).isInstanceOf(Saml2AuthenticationException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThat(e).isInstanceOf(Saml2AuthenticationException.class) @AT@ 3687 @LENGTH@ 62
---------------INS MethodInvocation@@MethodName:assertThat:[e] @TO@ MethodInvocation@@assertThat(e).isInstanceOf(Saml2AuthenticationException.class) @AT@ 3687 @LENGTH@ 13
------------------INS SimpleName@@e @TO@ MethodInvocation@@MethodName:assertThat:[e] @AT@ 3698 @LENGTH@ 1
---------------INS SimpleName@@MethodName:isInstanceOf:[Saml2AuthenticationException.class] @TO@ MethodInvocation@@assertThat(e).isInstanceOf(Saml2AuthenticationException.class) @AT@ 3701 @LENGTH@ 48
------------------INS TypeLiteral@@Saml2AuthenticationException.class @TO@ SimpleName@@MethodName:isInstanceOf:[Saml2AuthenticationException.class] @AT@ 3714 @LENGTH@ 34
---------INS ExpressionStatement@@MethodInvocation:assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id") @TO@ CatchClause@@catch (Exception e) {  assertThat(e).isInstanceOf(Saml2AuthenticationException.class);  assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id");} @AT@ 3754 @LENGTH@ 102
------------INS MethodInvocation@@assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id") @TO@ ExpressionStatement@@MethodInvocation:assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id") @AT@ 3754 @LENGTH@ 101
---------------INS MethodInvocation@@MethodName:assertThat:[e.getMessage()] @TO@ MethodInvocation@@assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id") @AT@ 3754 @LENGTH@ 26
------------------INS MethodInvocation@@e.getMessage() @TO@ MethodInvocation@@MethodName:assertThat:[e.getMessage()] @AT@ 3765 @LENGTH@ 14
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 3765 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 3767 @LENGTH@ 12
---------------INS SimpleName@@MethodName:isEqualTo:["Relying Party Registration not found with ID: non-existent-id"] @TO@ MethodInvocation@@assertThat(e.getMessage()).isEqualTo("Relying Party Registration not found with ID: non-existent-id") @AT@ 3781 @LENGTH@ 74
------------------INS StringLiteral@@"Relying Party Registration not found with ID: non-existent-id" @TO@ SimpleName@@MethodName:isEqualTo:["Relying Party Registration not found with ID: non-existent-id"] @AT@ 3791 @LENGTH@ 63


UPD ExpressionStatement@@MethodInvocation:assertEquals("chmod option [abc] is not valid",iae.getMessage()) @TO@ MethodInvocation:assertEquals("Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid",iae.getMessage()) @AT@ 4167 @LENGTH@ 66
---UPD MethodInvocation@@assertEquals("chmod option [abc] is not valid",iae.getMessage()) @TO@ assertEquals("Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid",iae.getMessage()) @AT@ 4167 @LENGTH@ 65
------UPD SimpleName@@MethodName:assertEquals:["chmod option [abc] is not valid", iae.getMessage()] @TO@ MethodName:assertEquals:["Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid", iae.getMessage()] @AT@ 4167 @LENGTH@ 65
---------UPD StringLiteral@@"chmod option [abc] is not valid" @TO@ "Could not find a suitable setter for property: chmod as there isn't a setter method with same type: java.lang.String nor type conversion possible: chmod option [abc] is not valid" @AT@ 4180 @LENGTH@ 33


UPD FieldDeclaration@@private, static, final, String, [IDENTIFIER="[._[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{P}]]+"] @TO@ private, static, final, String, [IDENTIFIER="[._$[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{Punct}]]+"] @AT@ 3263 @LENGTH@ 83
---UPD VariableDeclarationFragment@@IDENTIFIER="[._[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{P}]]+" @TO@ IDENTIFIER="[._$[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{Punct}]]+" @AT@ 3291 @LENGTH@ 54
------UPD StringLiteral@@"[._[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{P}]]+" @TO@ "[._$[\\P{Z}&&\\P{Cc}&&\\P{Cf}&&\\P{Punct}]]+" @AT@ 3304 @LENGTH@ 41


DEL FieldDeclaration@@private, static, final, String, [CLIENT_SECRET="secret"] @AT@ 1867 @LENGTH@ 53
---DEL Modifier@@private @AT@ 1867 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1875 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1882 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1888 @LENGTH@ 6
---DEL VariableDeclarationFragment@@CLIENT_SECRET="secret" @AT@ 1895 @LENGTH@ 24
------DEL SimpleName@@CLIENT_SECRET @AT@ 1895 @LENGTH@ 13
------DEL StringLiteral@@"secret" @AT@ 1911 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:Mono.fromCallable(() -> createCsrfToken()) @TO@ MethodInvocation:Mono.just(exchange).publishOn(Schedulers.boundedElastic()).fromCallable(() -> createCsrfToken()) @AT@ 1732 @LENGTH@ 50
---UPD MethodInvocation@@Mono.fromCallable(() -> createCsrfToken()) @TO@ Mono.just(exchange).publishOn(Schedulers.boundedElastic()).fromCallable(() -> createCsrfToken()) @AT@ 1739 @LENGTH@ 42
------INS MethodInvocation@@MethodName:publishOn:[Schedulers.boundedElastic()] @TO@ MethodInvocation@@Mono.fromCallable(() -> createCsrfToken()) @AT@ 1781 @LENGTH@ 62
---------INS MethodInvocation@@Schedulers.boundedElastic() @TO@ MethodInvocation@@MethodName:publishOn:[Schedulers.boundedElastic()] @AT@ 1815 @LENGTH@ 27
------------INS SimpleName@@Name:Schedulers @TO@ MethodInvocation@@Schedulers.boundedElastic() @AT@ 1815 @LENGTH@ 10
------------INS SimpleName@@MethodName:boundedElastic:[] @TO@ MethodInvocation@@Schedulers.boundedElastic() @AT@ 1826 @LENGTH@ 16
------INS MethodInvocation@@MethodName:just:[exchange] @TO@ MethodInvocation@@Mono.fromCallable(() -> createCsrfToken()) @AT@ 1781 @LENGTH@ 19
---------INS SimpleName@@exchange @TO@ MethodInvocation@@MethodName:just:[exchange] @AT@ 1791 @LENGTH@ 8


UPD TryStatement@@try (final ByteArrayOutputStream actual=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(actual)){    PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);  }   try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){    try (final PrintStream out=new PrintStream(expected)){      PropertiesFactory.INSTANCE.createProperties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());    expected.reset();    try (final PrintStream out=new PrintStream(expected)){      new Properties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  } }  @TO@ try (ByteArrayOutputStream actual=new ByteArrayOutputStream()){  try (PrintStream out=new PrintStream(actual)){    PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);  }   try (ByteArrayOutputStream expected=new ByteArrayOutputStream()){    try (PrintStream out=new PrintStream(expected)){      PropertiesFactory.INSTANCE.createProperties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());    expected.reset();    try (PrintStream out=new PrintStream(expected)){      new Properties().save(out,comments);    }     Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  } }  @AT@ 8921 @LENGTH@ 900
---UPD VariableDeclarationExpression@@final ByteArrayOutputStream actual=new ByteArrayOutputStream() @TO@ ByteArrayOutputStream actual=new ByteArrayOutputStream() @AT@ 8926 @LENGTH@ 64
------DEL Modifier@@final @AT@ 8926 @LENGTH@ 5
---UPD TryStatement@@try (final PrintStream out=new PrintStream(actual)){  PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);}  @TO@ try (PrintStream out=new PrintStream(actual)){  PropertiesFactory.EMPTY_PROPERTIES.save(out,comments);}  @AT@ 9006 @LENGTH@ 141
------UPD VariableDeclarationExpression@@final PrintStream out=new PrintStream(actual) @TO@ PrintStream out=new PrintStream(actual) @AT@ 9011 @LENGTH@ 47
---------DEL Modifier@@final @AT@ 9011 @LENGTH@ 5
---UPD TryStatement@@try (final ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (final PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (final PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @TO@ try (ByteArrayOutputStream expected=new ByteArrayOutputStream()){  try (PrintStream out=new PrintStream(expected)){    PropertiesFactory.INSTANCE.createProperties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());  expected.reset();  try (PrintStream out=new PrintStream(expected)){    new Properties().save(out,comments);  }   Assert.assertArrayEquals(expected.toByteArray(),actual.toByteArray());}  @AT@ 9184 @LENGTH@ 627
------UPD VariableDeclarationExpression@@final ByteArrayOutputStream expected=new ByteArrayOutputStream() @TO@ ByteArrayOutputStream expected=new ByteArrayOutputStream() @AT@ 9189 @LENGTH@ 66
---------DEL Modifier@@final @AT@ 9189 @LENGTH@ 5
------UPD TryStatement@@try (final PrintStream out=new PrintStream(expected)){  PropertiesFactory.INSTANCE.createProperties().save(out,comments);}  @TO@ try (PrintStream out=new PrintStream(expected)){  PropertiesFactory.INSTANCE.createProperties().save(out,comments);}  @AT@ 9275 @LENGTH@ 162
---------UPD VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @TO@ PrintStream out=new PrintStream(expected) @AT@ 9280 @LENGTH@ 49
------------DEL Modifier@@final @AT@ 9280 @LENGTH@ 5
------UPD TryStatement@@try (final PrintStream out=new PrintStream(expected)){  new Properties().save(out,comments);}  @TO@ try (PrintStream out=new PrintStream(expected)){  new Properties().save(out,comments);}  @AT@ 9576 @LENGTH@ 133
---------UPD VariableDeclarationExpression@@final PrintStream out=new PrintStream(expected) @TO@ PrintStream out=new PrintStream(expected) @AT@ 9581 @LENGTH@ 49
------------DEL Modifier@@final @AT@ 9581 @LENGTH@ 5


UPD FieldDeclaration@@private, int, [nonScalarAliasesCount=0] @TO@ private, int, [nonScalarAliasesCount] @AT@ 2544 @LENGTH@ 38
---UPD VariableDeclarationFragment@@nonScalarAliasesCount=0 @TO@ nonScalarAliasesCount @AT@ 2556 @LENGTH@ 25
------DEL NumberLiteral@@0 @AT@ 2580 @LENGTH@ 1


DEL IfStatement@@if (!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri())) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 7308 @LENGTH@ 266
---DEL PrefixExpression@@!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri()) @AT@ 7312 @LENGTH@ 85
------DEL Operator@@! @AT@ 7312 @LENGTH@ 1
------DEL MethodInvocation@@authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri()) @AT@ 7313 @LENGTH@ 84
---------DEL MethodInvocation@@MethodName:getRedirectUri:[] @AT@ 7313 @LENGTH@ 38
---------DEL SimpleName@@Name:authorizationResponse @AT@ 7313 @LENGTH@ 21
---------DEL SimpleName@@MethodName:equals:[authorizationRequest.getRedirectUri()] @AT@ 7352 @LENGTH@ 45
------------DEL MethodInvocation@@authorizationRequest.getRedirectUri() @AT@ 7359 @LENGTH@ 37
---------------DEL SimpleName@@Name:authorizationRequest @AT@ 7359 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:getRedirectUri:[] @AT@ 7380 @LENGTH@ 16
---DEL Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 7399 @LENGTH@ 175
------DEL VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE); @AT@ 7404 @LENGTH@ 85
---------DEL SimpleType@@OAuth2Error @AT@ 7404 @LENGTH@ 11
---------DEL VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE) @AT@ 7416 @LENGTH@ 72
------------DEL SimpleName@@oauth2Error @AT@ 7416 @LENGTH@ 11
------------DEL ClassInstanceCreation@@OAuth2Error[INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE] @AT@ 7430 @LENGTH@ 58
---------------DEL New@@new @AT@ 7430 @LENGTH@ 3
---------------DEL SimpleType@@OAuth2Error @AT@ 7434 @LENGTH@ 11
---------------DEL SimpleName@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE @AT@ 7446 @LENGTH@ 41
------DEL ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @AT@ 7493 @LENGTH@ 77
---------DEL ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 7499 @LENGTH@ 70
------------DEL New@@new @AT@ 7499 @LENGTH@ 3
------------DEL SimpleType@@OAuth2AuthenticationException @AT@ 7503 @LENGTH@ 29
------------DEL SimpleName@@oauth2Error @AT@ 7533 @LENGTH@ 11
------------DEL MethodInvocation@@oauth2Error.toString() @AT@ 7546 @LENGTH@ 22
---------------DEL SimpleName@@Name:oauth2Error @AT@ 7546 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 7558 @LENGTH@ 10


INS VariableDeclarationStatement@@RabbitListener rabbitListener=synthesizeIfPossible(endpoint,rabbitListenerArg,target); @TO@ MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object bean, Object target, String beanName,  @AT@ 17764 @LENGTH@ 90
---INS SimpleType@@RabbitListener @TO@ VariableDeclarationStatement@@RabbitListener rabbitListener=synthesizeIfPossible(endpoint,rabbitListenerArg,target); @AT@ 17764 @LENGTH@ 14
---INS VariableDeclarationFragment@@rabbitListener=synthesizeIfPossible(endpoint,rabbitListenerArg,target) @TO@ VariableDeclarationStatement@@RabbitListener rabbitListener=synthesizeIfPossible(endpoint,rabbitListenerArg,target); @AT@ 17779 @LENGTH@ 74
------INS SimpleName@@rabbitListener @TO@ VariableDeclarationFragment@@rabbitListener=synthesizeIfPossible(endpoint,rabbitListenerArg,target) @AT@ 17779 @LENGTH@ 14
------INS MethodInvocation@@synthesizeIfPossible(endpoint,rabbitListenerArg,target) @TO@ VariableDeclarationFragment@@rabbitListener=synthesizeIfPossible(endpoint,rabbitListenerArg,target) @AT@ 17796 @LENGTH@ 57
---------INS SimpleName@@MethodName:synthesizeIfPossible:[endpoint, rabbitListenerArg, target] @TO@ MethodInvocation@@synthesizeIfPossible(endpoint,rabbitListenerArg,target) @AT@ 17796 @LENGTH@ 57
------------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:synthesizeIfPossible:[endpoint, rabbitListenerArg, target] @AT@ 17817 @LENGTH@ 8
------------INS SimpleName@@rabbitListenerArg @TO@ SimpleName@@MethodName:synthesizeIfPossible:[endpoint, rabbitListenerArg, target] @AT@ 17827 @LENGTH@ 17
------------INS SimpleName@@target @TO@ SimpleName@@MethodName:synthesizeIfPossible:[endpoint, rabbitListenerArg, target] @AT@ 17846 @LENGTH@ 6


UPD TypeDeclaration@@[public]UnAuthenticatedServerOAuth2AuthorizedClientRepository, [ServerOAuth2AuthorizedClientRepository] @TO@ [@Deprecated, public]UnAuthenticatedServerOAuth2AuthorizedClientRepository, [ServerOAuth2AuthorizedClientRepository] @AT@ 1522 @LENGTH@ 2269
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]UnAuthenticatedServerOAuth2AuthorizedClientRepository, [ServerOAuth2AuthorizedClientRepository] @AT@ 1733 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ MethodInvocation:template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",message) @AT@ 3152 @LENGTH@ 123
---UPD MethodInvocation@@template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",message) @AT@ 3152 @LENGTH@ 122
------UPD SimpleName@@MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", message] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder", message] @AT@ 3161 @LENGTH@ 113
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 3173 @LENGTH@ 91
------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 3212 @LENGTH@ 52


UPD TypeDeclaration@@[public]JwtValidationException, JwtException @TO@ [public]JwtValidationException, BadJwtException @AT@ 1046 @LENGTH@ 1297
---UPD SimpleType@@JwtException @TO@ BadJwtException @AT@ 1090 @LENGTH@ 12


UPD MethodDeclaration@@public, Object, MethodName:getRootObject,  @TO@ public, SecurityExpressionRoot, MethodName:getRootObject,  @AT@ 3036 @LENGTH@ 148
---UPD SimpleType@@Object @TO@ SecurityExpressionRoot @AT@ 3043 @LENGTH@ 6


UPD Block@@ThenBody:{  ServletRequestAttributes context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes();  if (context != null) {    servletResponse=context.getResponse();  }} @TO@ ThenBody:{  RequestAttributes context=RequestContextHolder.getRequestAttributes();  if (context instanceof ServletRequestAttributes) {    servletResponse=((ServletRequestAttributes)context).getResponse();  }} @AT@ 6540 @LENGTH@ 191
---UPD VariableDeclarationStatement@@ServletRequestAttributes context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes(); @TO@ RequestAttributes context=RequestContextHolder.getRequestAttributes(); @AT@ 6545 @LENGTH@ 106
------UPD SimpleType@@ServletRequestAttributes @TO@ RequestAttributes @AT@ 6545 @LENGTH@ 24
------UPD VariableDeclarationFragment@@context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes() @TO@ context=RequestContextHolder.getRequestAttributes() @AT@ 6570 @LENGTH@ 80
---------DEL CastExpression@@(ServletRequestAttributes)RequestContextHolder.getRequestAttributes() @AT@ 6580 @LENGTH@ 70
------------DEL SimpleType@@ServletRequestAttributes @AT@ 6581 @LENGTH@ 24
------------DEL MethodInvocation@@RequestContextHolder.getRequestAttributes() @AT@ 6607 @LENGTH@ 43
---------INS MethodInvocation@@RequestContextHolder.getRequestAttributes() @TO@ VariableDeclarationFragment@@context=(ServletRequestAttributes)RequestContextHolder.getRequestAttributes() @AT@ 6662 @LENGTH@ 43
------------MOV SimpleName@@Name:RequestContextHolder @TO@ MethodInvocation@@RequestContextHolder.getRequestAttributes() @AT@ 6607 @LENGTH@ 20
------------MOV SimpleName@@MethodName:getRequestAttributes:[] @TO@ MethodInvocation@@RequestContextHolder.getRequestAttributes() @AT@ 6628 @LENGTH@ 22
---UPD IfStatement@@if (context != null) {  servletResponse=context.getResponse();} @TO@ if (context instanceof ServletRequestAttributes) {  servletResponse=((ServletRequestAttributes)context).getResponse();} @AT@ 6655 @LENGTH@ 72
------DEL InfixExpression@@context != null @AT@ 6659 @LENGTH@ 15
---------DEL SimpleName@@context @AT@ 6659 @LENGTH@ 7
---------DEL Operator@@!= @AT@ 6666 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 6670 @LENGTH@ 4
------UPD Block@@ThenBody:{  servletResponse=context.getResponse();} @TO@ ThenBody:{  servletResponse=((ServletRequestAttributes)context).getResponse();} @AT@ 6676 @LENGTH@ 51
---------UPD ExpressionStatement@@Assignment:servletResponse=context.getResponse() @TO@ Assignment:servletResponse=((ServletRequestAttributes)context).getResponse() @AT@ 6682 @LENGTH@ 40
------------UPD Assignment@@servletResponse=context.getResponse() @TO@ servletResponse=((ServletRequestAttributes)context).getResponse() @AT@ 6682 @LENGTH@ 39
---------------UPD MethodInvocation@@context.getResponse() @TO@ ((ServletRequestAttributes)context).getResponse() @AT@ 6700 @LENGTH@ 21
------------------DEL SimpleName@@Name:context @AT@ 6700 @LENGTH@ 7
------------------INS ParenthesizedExpression@@((ServletRequestAttributes)context) @TO@ MethodInvocation@@context.getResponse() @AT@ 6784 @LENGTH@ 36
---------------------INS CastExpression@@(ServletRequestAttributes)context @TO@ ParenthesizedExpression@@((ServletRequestAttributes)context) @AT@ 6785 @LENGTH@ 34
------------------------INS SimpleType@@ServletRequestAttributes @TO@ CastExpression@@(ServletRequestAttributes)context @AT@ 6786 @LENGTH@ 24
------------------------INS SimpleName@@context @TO@ CastExpression@@(ServletRequestAttributes)context @AT@ 6812 @LENGTH@ 7
------INS InstanceofExpression@@context instanceof ServletRequestAttributes @TO@ IfStatement@@if (context != null) {  servletResponse=context.getResponse();} @AT@ 6714 @LENGTH@ 43
---------INS SimpleName@@context @TO@ InstanceofExpression@@context instanceof ServletRequestAttributes @AT@ 6714 @LENGTH@ 7
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@context instanceof ServletRequestAttributes @AT@ 6722 @LENGTH@ 10
---------INS SimpleType@@ServletRequestAttributes @TO@ InstanceofExpression@@context instanceof ServletRequestAttributes @AT@ 6733 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:producer.sendBody("jms:queue:inbox","Message " + idx.intValue() * j + j) @TO@ MethodInvocation:producer.sendBody("jms:queue:inbox","Message " + idx * j + j) @AT@ 2555 @LENGTH@ 74
---UPD MethodInvocation@@producer.sendBody("jms:queue:inbox","Message " + idx.intValue() * j + j) @TO@ producer.sendBody("jms:queue:inbox","Message " + idx * j + j) @AT@ 2555 @LENGTH@ 73
------UPD SimpleName@@MethodName:sendBody:["jms:queue:inbox", "Message " + idx.intValue() * j + j] @TO@ MethodName:sendBody:["jms:queue:inbox", "Message " + idx * j + j] @AT@ 2564 @LENGTH@ 64
---------UPD InfixExpression@@"Message " + idx.intValue() * j + j @TO@ "Message " + idx * j + j @AT@ 2592 @LENGTH@ 35
------------UPD InfixExpression@@"Message " + idx.intValue() * j @TO@ "Message " + idx * j @AT@ 2592 @LENGTH@ 31
---------------UPD InfixExpression@@idx.intValue() * j @TO@ idx * j @AT@ 2605 @LENGTH@ 18
------------------INS SimpleName@@idx @TO@ InfixExpression@@idx.intValue() * j @AT@ 2601 @LENGTH@ 3
------------------DEL MethodInvocation@@idx.intValue() @AT@ 2605 @LENGTH@ 14
---------------------DEL SimpleName@@Name:idx @AT@ 2605 @LENGTH@ 3
---------------------DEL SimpleName@@MethodName:intValue:[] @AT@ 2609 @LENGTH@ 10


INS MethodDeclaration@@public, static, Condition, MethodName:isTrue,  @TO@ TypeDeclaration@@[@API(status=EXPERIMENTAL,since="1.0"), public, final]Conditions,  @AT@ 7081 @LENGTH@ 71
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Condition, MethodName:isTrue,  @AT@ 7081 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Condition, MethodName:isTrue,  @AT@ 7088 @LENGTH@ 6
---INS SimpleType@@Condition @TO@ MethodDeclaration@@public, static, Condition, MethodName:isTrue,  @AT@ 7095 @LENGTH@ 9
---INS SimpleName@@MethodName:isTrue @TO@ MethodDeclaration@@public, static, Condition, MethodName:isTrue,  @AT@ 7105 @LENGTH@ 6
---INS ReturnStatement@@QualifiedName:ConstantCondition.TRUE @TO@ MethodDeclaration@@public, static, Condition, MethodName:isTrue,  @AT@ 7119 @LENGTH@ 30
------INS QualifiedName@@ConstantCondition.TRUE @TO@ ReturnStatement@@QualifiedName:ConstantCondition.TRUE @AT@ 7126 @LENGTH@ 22
---------INS SimpleName@@ConstantCondition @TO@ QualifiedName@@ConstantCondition.TRUE @AT@ 7126 @LENGTH@ 17
---------INS SimpleName@@TRUE @TO@ QualifiedName@@ConstantCondition.TRUE @AT@ 7144 @LENGTH@ 4


INS VariableDeclarationStatement@@String metadataIssuer=(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer"); @TO@ MethodDeclaration@@public, OAuth2TokenValidatorResult, MethodName:validate, Jwt idToken,  @AT@ 2907 @LENGTH@ 124
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String metadataIssuer=(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer"); @AT@ 2907 @LENGTH@ 6
---INS VariableDeclarationFragment@@metadataIssuer=(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @TO@ VariableDeclarationStatement@@String metadataIssuer=(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer"); @AT@ 2914 @LENGTH@ 116
------INS SimpleName@@metadataIssuer @TO@ VariableDeclarationFragment@@metadataIssuer=(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 2914 @LENGTH@ 14
------INS CastExpression@@(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @TO@ VariableDeclarationFragment@@metadataIssuer=(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 2931 @LENGTH@ 99
---------INS SimpleType@@String @TO@ CastExpression@@(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 2932 @LENGTH@ 6
---------INS MethodInvocation@@this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @TO@ CastExpression@@(String)this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 2940 @LENGTH@ 90
------------INS MethodInvocation@@MethodName:getConfigurationMetadata:[] @TO@ MethodInvocation@@this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 2940 @LENGTH@ 71
------------INS MethodInvocation@@MethodName:getProviderDetails:[] @TO@ MethodInvocation@@this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 2940 @LENGTH@ 44
------------INS FieldAccess@@this.clientRegistration @TO@ MethodInvocation@@this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 2940 @LENGTH@ 23
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 2940 @LENGTH@ 4
---------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 2945 @LENGTH@ 18
------------INS SimpleName@@MethodName:get:["issuer"] @TO@ MethodInvocation@@this.clientRegistration.getProviderDetails().getConfigurationMetadata().get("issuer") @AT@ 3017 @LENGTH@ 13
---------------INS StringLiteral@@"issuer" @TO@ SimpleName@@MethodName:get:["issuer"] @AT@ 3021 @LENGTH@ 8


UPD VariableDeclarationStatement@@String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class); @TO@ String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",in.toString(),String.class); @AT@ 3608 @LENGTH@ 156
---UPD VariableDeclarationFragment@@out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",in.toString(),String.class) @AT@ 3615 @LENGTH@ 148
------UPD MethodInvocation@@template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",in.toString(),String.class) @AT@ 3621 @LENGTH@ 142
---------UPD SimpleName@@MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", in.toString(), String.class] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder", in.toString(), String.class] @AT@ 3630 @LENGTH@ 133
------------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 3642 @LENGTH@ 91
---------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 3681 @LENGTH@ 52


INS IfStatement@@if (this.requiresAuthenticationMatcher == null) {  this.requiresAuthenticationMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.POST,loginPage);} @TO@ MethodDeclaration@@public, FormLoginSpec, MethodName:loginPage, String loginPage,  @AT@ 118346 @LENGTH@ 163
---INS InfixExpression@@this.requiresAuthenticationMatcher == null @TO@ IfStatement@@if (this.requiresAuthenticationMatcher == null) {  this.requiresAuthenticationMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.POST,loginPage);} @AT@ 118350 @LENGTH@ 42
------INS FieldAccess@@this.requiresAuthenticationMatcher @TO@ InfixExpression@@this.requiresAuthenticationMatcher == null @AT@ 118350 @LENGTH@ 34
---------INS ThisExpression@@this @TO@ FieldAccess@@this.requiresAuthenticationMatcher @AT@ 118350 @LENGTH@ 4
---------INS SimpleName@@requiresAuthenticationMatcher @TO@ FieldAccess@@this.requiresAuthenticationMatcher @AT@ 118355 @LENGTH@ 29
------INS Operator@@== @TO@ InfixExpression@@this.requiresAuthenticationMatcher == null @AT@ 118384 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@this.requiresAuthenticationMatcher == null @AT@ 118388 @LENGTH@ 4
---INS Block@@ThenBody:{  this.requiresAuthenticationMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.POST,loginPage);} @TO@ IfStatement@@if (this.requiresAuthenticationMatcher == null) {  this.requiresAuthenticationMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.POST,loginPage);} @AT@ 118394 @LENGTH@ 115
------MOV ExpressionStatement@@Assignment:this.requiresAuthenticationMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.POST,loginPage) @TO@ Block@@ThenBody:{  this.requiresAuthenticationMatcher=ServerWebExchangeMatchers.pathMatchers(HttpMethod.POST,loginPage);} @AT@ 118346 @LENGTH@ 104


UPD ExpressionStatement@@Assignment:uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ Assignment:uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 3550 @LENGTH@ 119
---UPD Assignment@@uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ uri="netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 3550 @LENGTH@ 118
------UPD InfixExpression@@"netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ "netty:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 3556 @LENGTH@ 112
---------UPD StringLiteral@@"?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder" @TO@ "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoders=#encoder" @AT@ 3596 @LENGTH@ 72


UPD IfStatement@@if (fieldType == FieldType.IMPLICIT) {  return getType();} @TO@ if (fieldType == FieldType.IMPLICIT) {  if (isEntity()) {    return org.bson.Document.class;  }  return getType();} @AT@ 5192 @LENGTH@ 63
---UPD Block@@ThenBody:{  return getType();} @TO@ ThenBody:{  if (isEntity()) {    return org.bson.Document.class;  }  return getType();} @AT@ 5229 @LENGTH@ 26
------INS IfStatement@@if (isEntity()) {  return org.bson.Document.class;} @TO@ Block@@ThenBody:{  return getType();} @AT@ 5405 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:isEntity:[] @TO@ IfStatement@@if (isEntity()) {  return org.bson.Document.class;} @AT@ 5409 @LENGTH@ 10
---------INS Block@@ThenBody:{  return org.bson.Document.class;} @TO@ IfStatement@@if (isEntity()) {  return org.bson.Document.class;} @AT@ 5421 @LENGTH@ 42
------------INS ReturnStatement@@TypeLiteral:org.bson.Document.class @TO@ Block@@ThenBody:{  return org.bson.Document.class;} @AT@ 5427 @LENGTH@ 31
---------------INS TypeLiteral@@org.bson.Document.class @TO@ ReturnStatement@@TypeLiteral:org.bson.Document.class @AT@ 5434 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]CsrfWebFilterTests,  @AT@ 6634 @LENGTH@ 608
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 6634 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 6641 @LENGTH@ 4
---INS SimpleName@@MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 6646 @LENGTH@ 59
---INS VariableDeclarationStatement@@final String NON_STANDARD_HTTP_METHOD="non-standard-http-method"; @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 6712 @LENGTH@ 67
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String NON_STANDARD_HTTP_METHOD="non-standard-http-method"; @AT@ 6712 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String NON_STANDARD_HTTP_METHOD="non-standard-http-method"; @AT@ 6718 @LENGTH@ 6
------INS VariableDeclarationFragment@@NON_STANDARD_HTTP_METHOD="non-standard-http-method" @TO@ VariableDeclarationStatement@@final String NON_STANDARD_HTTP_METHOD="non-standard-http-method"; @AT@ 6725 @LENGTH@ 53
---------INS SimpleName@@NON_STANDARD_HTTP_METHOD @TO@ VariableDeclarationFragment@@NON_STANDARD_HTTP_METHOD="non-standard-http-method" @AT@ 6725 @LENGTH@ 24
---------INS StringLiteral@@"non-standard-http-method" @TO@ VariableDeclarationFragment@@NON_STANDARD_HTTP_METHOD="non-standard-http-method" @AT@ 6752 @LENGTH@ 26
---INS VariableDeclarationStatement@@MockServerWebExchange nonStandardHttpRequest=from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")); @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 6782 @LENGTH@ 133
------INS SimpleType@@MockServerWebExchange @TO@ VariableDeclarationStatement@@MockServerWebExchange nonStandardHttpRequest=from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")); @AT@ 6782 @LENGTH@ 21
------INS VariableDeclarationFragment@@nonStandardHttpRequest=from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")) @TO@ VariableDeclarationStatement@@MockServerWebExchange nonStandardHttpRequest=from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")); @AT@ 6804 @LENGTH@ 110
---------INS SimpleName@@nonStandardHttpRequest @TO@ VariableDeclarationFragment@@nonStandardHttpRequest=from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")) @AT@ 6804 @LENGTH@ 22
---------INS MethodInvocation@@from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")) @TO@ VariableDeclarationFragment@@nonStandardHttpRequest=from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")) @AT@ 6829 @LENGTH@ 85
------------INS SimpleName@@MethodName:from:[MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")] @TO@ MethodInvocation@@from(MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")) @AT@ 6829 @LENGTH@ 85
---------------INS MethodInvocation@@MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/") @TO@ SimpleName@@MethodName:from:[MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/")] @AT@ 6834 @LENGTH@ 79
------------------INS SimpleName@@Name:MockServerHttpRequest @TO@ MethodInvocation@@MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/") @AT@ 6834 @LENGTH@ 21
------------------INS SimpleName@@MethodName:method:[HttpMethod.resolve(NON_STANDARD_HTTP_METHOD), "/"] @TO@ MethodInvocation@@MockServerHttpRequest.method(HttpMethod.resolve(NON_STANDARD_HTTP_METHOD),"/") @AT@ 6856 @LENGTH@ 57
---------------------INS MethodInvocation@@HttpMethod.resolve(NON_STANDARD_HTTP_METHOD) @TO@ SimpleName@@MethodName:method:[HttpMethod.resolve(NON_STANDARD_HTTP_METHOD), "/"] @AT@ 6863 @LENGTH@ 44
------------------------INS SimpleName@@Name:HttpMethod @TO@ MethodInvocation@@HttpMethod.resolve(NON_STANDARD_HTTP_METHOD) @AT@ 6863 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:resolve:[NON_STANDARD_HTTP_METHOD] @TO@ MethodInvocation@@HttpMethod.resolve(NON_STANDARD_HTTP_METHOD) @AT@ 6874 @LENGTH@ 33
---------------------------INS SimpleName@@NON_STANDARD_HTTP_METHOD @TO@ SimpleName@@MethodName:resolve:[NON_STANDARD_HTTP_METHOD] @AT@ 6882 @LENGTH@ 24
---------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:method:[HttpMethod.resolve(NON_STANDARD_HTTP_METHOD), "/"] @AT@ 6909 @LENGTH@ 3
---INS VariableDeclarationStatement@@ServerWebExchangeMatcher serverWebExchangeMatcher=spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER); @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 6919 @LENGTH@ 92
------INS SimpleType@@ServerWebExchangeMatcher @TO@ VariableDeclarationStatement@@ServerWebExchangeMatcher serverWebExchangeMatcher=spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER); @AT@ 6919 @LENGTH@ 24
------INS VariableDeclarationFragment@@serverWebExchangeMatcher=spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER) @TO@ VariableDeclarationStatement@@ServerWebExchangeMatcher serverWebExchangeMatcher=spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER); @AT@ 6944 @LENGTH@ 66
---------INS SimpleName@@serverWebExchangeMatcher @TO@ VariableDeclarationFragment@@serverWebExchangeMatcher=spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER) @AT@ 6944 @LENGTH@ 24
---------INS MethodInvocation@@spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER) @TO@ VariableDeclarationFragment@@serverWebExchangeMatcher=spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER) @AT@ 6971 @LENGTH@ 39
------------INS SimpleName@@MethodName:spy:[CsrfWebFilter.DEFAULT_CSRF_MATCHER] @TO@ MethodInvocation@@spy(CsrfWebFilter.DEFAULT_CSRF_MATCHER) @AT@ 6971 @LENGTH@ 39
---------------INS QualifiedName@@CsrfWebFilter.DEFAULT_CSRF_MATCHER @TO@ SimpleName@@MethodName:spy:[CsrfWebFilter.DEFAULT_CSRF_MATCHER] @AT@ 6975 @LENGTH@ 34
------------------INS SimpleName@@CsrfWebFilter @TO@ QualifiedName@@CsrfWebFilter.DEFAULT_CSRF_MATCHER @AT@ 6975 @LENGTH@ 13
------------------INS SimpleName@@DEFAULT_CSRF_MATCHER @TO@ QualifiedName@@CsrfWebFilter.DEFAULT_CSRF_MATCHER @AT@ 6989 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:serverWebExchangeMatcher.matches(nonStandardHttpRequest) @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 7014 @LENGTH@ 57
------INS MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest) @TO@ ExpressionStatement@@MethodInvocation:serverWebExchangeMatcher.matches(nonStandardHttpRequest) @AT@ 7014 @LENGTH@ 56
---------INS SimpleName@@Name:serverWebExchangeMatcher @TO@ MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest) @AT@ 7014 @LENGTH@ 24
---------INS SimpleName@@MethodName:matches:[nonStandardHttpRequest] @TO@ MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest) @AT@ 7039 @LENGTH@ 31
------------INS SimpleName@@nonStandardHttpRequest @TO@ SimpleName@@MethodName:matches:[nonStandardHttpRequest] @AT@ 7047 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:verify(serverWebExchangeMatcher).matches(nonStandardHttpRequest) @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 7075 @LENGTH@ 65
------INS MethodInvocation@@verify(serverWebExchangeMatcher).matches(nonStandardHttpRequest) @TO@ ExpressionStatement@@MethodInvocation:verify(serverWebExchangeMatcher).matches(nonStandardHttpRequest) @AT@ 7075 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:verify:[serverWebExchangeMatcher] @TO@ MethodInvocation@@verify(serverWebExchangeMatcher).matches(nonStandardHttpRequest) @AT@ 7075 @LENGTH@ 32
------------INS SimpleName@@serverWebExchangeMatcher @TO@ MethodInvocation@@MethodName:verify:[serverWebExchangeMatcher] @AT@ 7082 @LENGTH@ 24
---------INS SimpleName@@MethodName:matches:[nonStandardHttpRequest] @TO@ MethodInvocation@@verify(serverWebExchangeMatcher).matches(nonStandardHttpRequest) @AT@ 7108 @LENGTH@ 31
------------INS SimpleName@@nonStandardHttpRequest @TO@ SimpleName@@MethodName:matches:[nonStandardHttpRequest] @AT@ 7116 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertThat(serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:matchesRequireCSRFProtectionWhenNonStandardHTTPMethodIsUsed,  @AT@ 7143 @LENGTH@ 96
------INS MethodInvocation@@assertThat(serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch()).isTrue() @AT@ 7143 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:assertThat:[serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch()] @TO@ MethodInvocation@@assertThat(serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch()).isTrue() @AT@ 7143 @LENGTH@ 86
------------INS MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch() @TO@ MethodInvocation@@MethodName:assertThat:[serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch()] @AT@ 7154 @LENGTH@ 74
---------------INS MethodInvocation@@MethodName:block:[] @TO@ MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch() @AT@ 7154 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:matches:[nonStandardHttpRequest] @TO@ MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch() @AT@ 7154 @LENGTH@ 56
------------------INS SimpleName@@nonStandardHttpRequest @TO@ MethodInvocation@@MethodName:matches:[nonStandardHttpRequest] @AT@ 7187 @LENGTH@ 22
---------------INS SimpleName@@Name:serverWebExchangeMatcher @TO@ MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch() @AT@ 7154 @LENGTH@ 24
---------------INS SimpleName@@MethodName:isMatch:[] @TO@ MethodInvocation@@serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch() @AT@ 7219 @LENGTH@ 9
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(serverWebExchangeMatcher.matches(nonStandardHttpRequest).block().isMatch()).isTrue() @AT@ 7230 @LENGTH@ 8


INS TryStatement@@try {  while (reader.readBsonType() != BsonType.END_OF_DOCUMENT) {    String fieldName=reader.readName();    Object value=readValue(reader,decoderContext);    document.put(fieldName,value);  }} catch (JsonParseException e) {  try {    Object value=readValue(reader,decoderContext);    if (value instanceof Map) {      if (!((Map)value).isEmpty()) {        return new Document((Map)value);      }    }  } catch (  Exception ex) {    throw e;  }} @TO@ MethodDeclaration@@public, Document, MethodName:decode, final BsonReader reader, final DecoderContext decoderContext,  @AT@ 6941 @LENGTH@ 477
---MOV WhileStatement@@while (reader.readBsonType() != BsonType.END_OF_DOCUMENT) {  String fieldName=reader.readName();  document.put(fieldName,readValue(reader,decoderContext));} @TO@ TryStatement@@try {  while (reader.readBsonType() != BsonType.END_OF_DOCUMENT) {    String fieldName=reader.readName();    Object value=readValue(reader,decoderContext);    document.put(fieldName,value);  }} catch (JsonParseException e) {  try {    Object value=readValue(reader,decoderContext);    if (value instanceof Map) {      if (!((Map)value).isEmpty()) {        return new Document((Map)value);      }    }  } catch (  Exception ex) {    throw e;  }} @AT@ 6899 @LENGTH@ 167
------UPD Block@@WhileBody:{  String fieldName=reader.readName();  document.put(fieldName,readValue(reader,decoderContext));} @TO@ WhileBody:{  String fieldName=reader.readName();  Object value=readValue(reader,decoderContext);  document.put(fieldName,value);} @AT@ 6957 @LENGTH@ 109
---------UPD ExpressionStatement@@MethodInvocation:document.put(fieldName,readValue(reader,decoderContext)) @TO@ MethodInvocation:document.put(fieldName,value) @AT@ 7003 @LENGTH@ 59
------------UPD MethodInvocation@@document.put(fieldName,readValue(reader,decoderContext)) @TO@ document.put(fieldName,value) @AT@ 7003 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:put:[fieldName, readValue(reader,decoderContext)] @TO@ MethodName:put:[fieldName, value] @AT@ 7012 @LENGTH@ 49
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:put:[fieldName, readValue(reader,decoderContext)] @AT@ 7135 @LENGTH@ 5
---------INS VariableDeclarationStatement@@Object value=readValue(reader,decoderContext); @TO@ Block@@WhileBody:{  String fieldName=reader.readName();  document.put(fieldName,readValue(reader,decoderContext));} @AT@ 7057 @LENGTH@ 49
------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=readValue(reader,decoderContext); @AT@ 7057 @LENGTH@ 6
------------INS VariableDeclarationFragment@@value=readValue(reader,decoderContext) @TO@ VariableDeclarationStatement@@Object value=readValue(reader,decoderContext); @AT@ 7064 @LENGTH@ 41
---------------MOV MethodInvocation@@readValue(reader,decoderContext) @TO@ VariableDeclarationFragment@@value=readValue(reader,decoderContext) @AT@ 7027 @LENGTH@ 33
---------------MOV MethodInvocation@@readValue(reader,decoderContext) @TO@ VariableDeclarationFragment@@value=readValue(reader,decoderContext) @AT@ 7027 @LENGTH@ 33
---------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=readValue(reader,decoderContext) @AT@ 7064 @LENGTH@ 5
---INS CatchClause@@catch (JsonParseException e) {  try {    Object value=readValue(reader,decoderContext);    if (value instanceof Map) {      if (!((Map)value).isEmpty()) {        return new Document((Map)value);      }    }  } catch (  Exception ex) {    throw e;  }} @TO@ TryStatement@@try {  while (reader.readBsonType() != BsonType.END_OF_DOCUMENT) {    String fieldName=reader.readName();    Object value=readValue(reader,decoderContext);    document.put(fieldName,value);  }} catch (JsonParseException e) {  try {    Object value=readValue(reader,decoderContext);    if (value instanceof Map) {      if (!((Map)value).isEmpty()) {        return new Document((Map)value);      }    }  } catch (  Exception ex) {    throw e;  }} @AT@ 7152 @LENGTH@ 266
------INS SingleVariableDeclaration@@JsonParseException e @TO@ CatchClause@@catch (JsonParseException e) {  try {    Object value=readValue(reader,decoderContext);    if (value instanceof Map) {      if (!((Map)value).isEmpty()) {        return new Document((Map)value);      }    }  } catch (  Exception ex) {    throw e;  }} @AT@ 7159 @LENGTH@ 20
---------INS SimpleType@@JsonParseException @TO@ SingleVariableDeclaration@@JsonParseException e @AT@ 7159 @LENGTH@ 18
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@JsonParseException e @AT@ 7178 @LENGTH@ 1
------INS TryStatement@@try {  Object value=readValue(reader,decoderContext);  if (value instanceof Map) {    if (!((Map)value).isEmpty()) {      return new Document((Map)value);    }  }} catch (Exception ex) {  throw e;} @TO@ CatchClause@@catch (JsonParseException e) {  try {    Object value=readValue(reader,decoderContext);    if (value instanceof Map) {      if (!((Map)value).isEmpty()) {        return new Document((Map)value);      }    }  } catch (  Exception ex) {    throw e;  }} @AT@ 7186 @LENGTH@ 228
---------INS VariableDeclarationStatement@@Object value=readValue(reader,decoderContext); @TO@ TryStatement@@try {  Object value=readValue(reader,decoderContext);  if (value instanceof Map) {    if (!((Map)value).isEmpty()) {      return new Document((Map)value);    }  }} catch (Exception ex) {  throw e;} @AT@ 7197 @LENGTH@ 49
------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=readValue(reader,decoderContext); @AT@ 7197 @LENGTH@ 6
------------INS VariableDeclarationFragment@@value=readValue(reader,decoderContext) @TO@ VariableDeclarationStatement@@Object value=readValue(reader,decoderContext); @AT@ 7204 @LENGTH@ 41
---------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=readValue(reader,decoderContext) @AT@ 7204 @LENGTH@ 5
---------------INS MethodInvocation@@readValue(reader,decoderContext) @TO@ VariableDeclarationFragment@@value=readValue(reader,decoderContext) @AT@ 7212 @LENGTH@ 33
------------------INS SimpleName@@MethodName:readValue:[reader, decoderContext] @TO@ MethodInvocation@@readValue(reader,decoderContext) @AT@ 7212 @LENGTH@ 33
---------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:readValue:[reader, decoderContext] @AT@ 7222 @LENGTH@ 6
---------------------INS SimpleName@@decoderContext @TO@ SimpleName@@MethodName:readValue:[reader, decoderContext] @AT@ 7230 @LENGTH@ 14
---------INS IfStatement@@if (value instanceof Map) {  if (!((Map)value).isEmpty()) {    return new Document((Map)value);  }} @TO@ TryStatement@@try {  Object value=readValue(reader,decoderContext);  if (value instanceof Map) {    if (!((Map)value).isEmpty()) {      return new Document((Map)value);    }  }} catch (Exception ex) {  throw e;} @AT@ 7251 @LENGTH@ 117
------------INS InstanceofExpression@@value instanceof Map @TO@ IfStatement@@if (value instanceof Map) {  if (!((Map)value).isEmpty()) {    return new Document((Map)value);  }} @AT@ 7255 @LENGTH@ 20
---------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Map @AT@ 7255 @LENGTH@ 5
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Map @AT@ 7261 @LENGTH@ 10
---------------INS SimpleType@@Map @TO@ InstanceofExpression@@value instanceof Map @AT@ 7272 @LENGTH@ 3
------------INS Block@@ThenBody:{  if (!((Map)value).isEmpty()) {    return new Document((Map)value);  }} @TO@ IfStatement@@if (value instanceof Map) {  if (!((Map)value).isEmpty()) {    return new Document((Map)value);  }} @AT@ 7277 @LENGTH@ 91
---------------INS IfStatement@@if (!((Map)value).isEmpty()) {  return new Document((Map)value);} @TO@ Block@@ThenBody:{  if (!((Map)value).isEmpty()) {    return new Document((Map)value);  }} @AT@ 7284 @LENGTH@ 78
------------------INS PrefixExpression@@!((Map)value).isEmpty() @TO@ IfStatement@@if (!((Map)value).isEmpty()) {  return new Document((Map)value);} @AT@ 7288 @LENGTH@ 24
---------------------INS Operator@@! @TO@ PrefixExpression@@!((Map)value).isEmpty() @AT@ 7288 @LENGTH@ 1
---------------------INS MethodInvocation@@((Map)value).isEmpty() @TO@ PrefixExpression@@!((Map)value).isEmpty() @AT@ 7289 @LENGTH@ 23
------------------------INS ParenthesizedExpression@@((Map)value) @TO@ MethodInvocation@@((Map)value).isEmpty() @AT@ 7289 @LENGTH@ 13
---------------------------INS CastExpression@@(Map)value @TO@ ParenthesizedExpression@@((Map)value) @AT@ 7290 @LENGTH@ 11
------------------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)value @AT@ 7291 @LENGTH@ 3
------------------------------INS SimpleName@@value @TO@ CastExpression@@(Map)value @AT@ 7296 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@((Map)value).isEmpty() @AT@ 7303 @LENGTH@ 9
------------------INS Block@@ThenBody:{  return new Document((Map)value);} @TO@ IfStatement@@if (!((Map)value).isEmpty()) {  return new Document((Map)value);} @AT@ 7314 @LENGTH@ 48
---------------------INS ReturnStatement@@ClassInstanceCreation:new Document((Map)value) @TO@ Block@@ThenBody:{  return new Document((Map)value);} @AT@ 7322 @LENGTH@ 33
------------------------INS ClassInstanceCreation@@Document[(Map)value] @TO@ ReturnStatement@@ClassInstanceCreation:new Document((Map)value) @AT@ 7329 @LENGTH@ 25
---------------------------INS New@@new @TO@ ClassInstanceCreation@@Document[(Map)value] @AT@ 7329 @LENGTH@ 3
---------------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document[(Map)value] @AT@ 7333 @LENGTH@ 8
---------------------------INS CastExpression@@(Map)value @TO@ ClassInstanceCreation@@Document[(Map)value] @AT@ 7342 @LENGTH@ 11
------------------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)value @AT@ 7343 @LENGTH@ 3
------------------------------INS SimpleName@@value @TO@ CastExpression@@(Map)value @AT@ 7348 @LENGTH@ 5
---------INS CatchClause@@catch (Exception ex) {  throw e;} @TO@ TryStatement@@try {  Object value=readValue(reader,decoderContext);  if (value instanceof Map) {    if (!((Map)value).isEmpty()) {      return new Document((Map)value);    }  }} catch (Exception ex) {  throw e;} @AT@ 7374 @LENGTH@ 40
------------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  throw e;} @AT@ 7381 @LENGTH@ 12
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 7381 @LENGTH@ 9
---------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 7391 @LENGTH@ 2
------------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (Exception ex) {  throw e;} @AT@ 7401 @LENGTH@ 8
---------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 7407 @LENGTH@ 1


INS MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @TO@ TypeDeclaration@@[public, abstract]ErrorHandlerBuilderSupport, [ErrorHandlerBuilder] @AT@ 2207 @LENGTH@ 171
---INS Modifier@@public @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 2207 @LENGTH@ 6
---INS SimpleType@@ErrorHandlerFactory @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 2214 @LENGTH@ 19
---INS SimpleName@@MethodName:getOrLookupErrorHandlerFactory @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 2234 @LENGTH@ 30
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 2265 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 2265 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 2278 @LENGTH@ 12
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 2360 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 2367 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:Arrays.<Class<?>>asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class).contains(type) @TO@ MethodInvocation:CLASSES.contains(type) @AT@ 3276 @LENGTH@ 122
---UPD MethodInvocation@@Arrays.<Class<?>>asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class).contains(type) @TO@ CLASSES.contains(type) @AT@ 3283 @LENGTH@ 114
------DEL MethodInvocation@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class] @AT@ 3283 @LENGTH@ 94
---------DEL TypeLiteral@@LocalDateTime.class @AT@ 3308 @LENGTH@ 19
---------DEL TypeLiteral@@LocalDate.class @AT@ 3329 @LENGTH@ 15
---------DEL TypeLiteral@@LocalTime.class @AT@ 3346 @LENGTH@ 15
---------DEL TypeLiteral@@Instant.class @AT@ 3363 @LENGTH@ 13
------UPD SimpleName@@Name:Arrays @TO@ Name:CLASSES @AT@ 3283 @LENGTH@ 6


UPD IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ if (cacheSize < 0) {  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RoutingSlip {} is not using ProducerCache",this);} else {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 18694 @LENGTH@ 237


UPD VariableDeclarationStatement@@Exchange exchange=template.request("direct:listBrokers",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
); @TO@ Exchange exchange=template.request("direct:listBrokersPojo",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
); @AT@ 3166 @LENGTH@ 384
---UPD VariableDeclarationFragment@@exchange=template.request("direct:listBrokers",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
) @TO@ exchange=template.request("direct:listBrokersPojo",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
) @AT@ 3175 @LENGTH@ 374
------UPD MethodInvocation@@template.request("direct:listBrokers",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
) @TO@ template.request("direct:listBrokersPojo",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
) @AT@ 3186 @LENGTH@ 363
---------UPD SimpleName@@MethodName:request:["direct:listBrokers", new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
] @TO@ MethodName:request:["direct:listBrokersPojo", new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(MQ2Constants.OPERATION,MQ2Operations.listBrokers);
    exchange.getIn().setBody(ListBrokersRequest.builder().maxResults(10).build());
  }
}
] @AT@ 3195 @LENGTH@ 354
------------UPD StringLiteral@@"direct:listBrokers" @TO@ "direct:listBrokersPojo" @AT@ 3203 @LENGTH@ 20


UPD VariableDeclarationStatement@@Long processorAccumulatedTime=0L; @TO@ long processorAccumulatedTime=0L; @AT@ 13739 @LENGTH@ 35
---DEL SimpleType@@Long @AT@ 13739 @LENGTH@ 4
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@Long processorAccumulatedTime=0L; @AT@ 13739 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestCustomizerRemovesNonceThenQueryExcludesNonce,  @AT@ 7182 @LENGTH@ 99
---INS MethodInvocation@@assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 7182 @LENGTH@ 98
------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAttributes()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 7182 @LENGTH@ 48
---------INS MethodInvocation@@authorizationRequest.getAttributes() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAttributes()] @AT@ 7193 @LENGTH@ 36
------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAttributes() @AT@ 7193 @LENGTH@ 20
------------INS SimpleName@@MethodName:getAttributes:[] @TO@ MethodInvocation@@authorizationRequest.getAttributes() @AT@ 7214 @LENGTH@ 15
------INS SimpleName@@MethodName:containsKey:[OAuth2ParameterNames.REGISTRATION_ID] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 7231 @LENGTH@ 49
---------INS QualifiedName@@OAuth2ParameterNames.REGISTRATION_ID @TO@ SimpleName@@MethodName:containsKey:[OAuth2ParameterNames.REGISTRATION_ID] @AT@ 7243 @LENGTH@ 36
------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.REGISTRATION_ID @AT@ 7243 @LENGTH@ 20
------------INS SimpleName@@REGISTRATION_ID @TO@ QualifiedName@@OAuth2ParameterNames.REGISTRATION_ID @AT@ 7264 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ MethodInvocation:SizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 5430 @LENGTH@ 80
---UPD MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ SizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 5430 @LENGTH@ 79
------INS QualifiedName@@Name:SizeRotatingHandlerResourceDefinition.FILTER_SPEC @TO@ MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 5365 @LENGTH@ 49
------DEL SimpleName@@Name:FILTER_SPEC @AT@ 5430 @LENGTH@ 11


DEL FieldDeclaration@@private, int, [maxConnections] @AT@ 2066 @LENGTH@ 27
---DEL Modifier@@private @AT@ 2066 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 2074 @LENGTH@ 3
---DEL VariableDeclarationFragment@@maxConnections @AT@ 2078 @LENGTH@ 14
------DEL SimpleName@@maxConnections @AT@ 2078 @LENGTH@ 14


UPD Block@@FinallyBody:{  final HttpClient httpClient=getConfiguration().getHttpClient();  if (httpClient != null && getComponent().getConfig().getHttpClient() != httpClient) {    final String endpointUri=getEndpointUri();    LOG.debug("Starting http client for {} ...",endpointUri);    httpClient.start();    LOG.debug("Started http client for {}",endpointUri);  }} @TO@ FinallyBody:{  HttpClient httpClient=getConfiguration().getHttpClient();  if (httpClient == null) {    httpClient=getComponent().getHttpClient();  }  if (httpClient != null && getComponent().getHttpClient() != httpClient) {    final String endpointUri=getEndpointUri();    LOG.debug("Starting http client for {} ...",endpointUri);    httpClient.start();    LOG.debug("Started http client for {}",endpointUri);  }} @AT@ 5482 @LENGTH@ 545
---UPD VariableDeclarationStatement@@final HttpClient httpClient=getConfiguration().getHttpClient(); @TO@ HttpClient httpClient=getConfiguration().getHttpClient(); @AT@ 5598 @LENGTH@ 65
------DEL Modifier@@final @AT@ 5598 @LENGTH@ 5
---INS IfStatement@@if (httpClient == null) {  httpClient=getComponent().getHttpClient();} @TO@ Block@@FinallyBody:{  final HttpClient httpClient=getConfiguration().getHttpClient();  if (httpClient != null && getComponent().getConfig().getHttpClient() != httpClient) {    final String endpointUri=getEndpointUri();    LOG.debug("Starting http client for {} ...",endpointUri);    httpClient.start();    LOG.debug("Started http client for {}",endpointUri);  }} @AT@ 5655 @LENGTH@ 100
------INS InfixExpression@@httpClient == null @TO@ IfStatement@@if (httpClient == null) {  httpClient=getComponent().getHttpClient();} @AT@ 5659 @LENGTH@ 18
---------INS SimpleName@@httpClient @TO@ InfixExpression@@httpClient == null @AT@ 5659 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@httpClient == null @AT@ 5669 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@httpClient == null @AT@ 5673 @LENGTH@ 4
------INS Block@@ThenBody:{  httpClient=getComponent().getHttpClient();} @TO@ IfStatement@@if (httpClient == null) {  httpClient=getComponent().getHttpClient();} @AT@ 5679 @LENGTH@ 76
---------INS ExpressionStatement@@Assignment:httpClient=getComponent().getHttpClient() @TO@ Block@@ThenBody:{  httpClient=getComponent().getHttpClient();} @AT@ 5697 @LENGTH@ 44
------------INS Assignment@@httpClient=getComponent().getHttpClient() @TO@ ExpressionStatement@@Assignment:httpClient=getComponent().getHttpClient() @AT@ 5697 @LENGTH@ 43
---------------INS SimpleName@@httpClient @TO@ Assignment@@httpClient=getComponent().getHttpClient() @AT@ 5697 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@httpClient=getComponent().getHttpClient() @AT@ 5707 @LENGTH@ 1
---------------INS MethodInvocation@@getComponent().getHttpClient() @TO@ Assignment@@httpClient=getComponent().getHttpClient() @AT@ 5710 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@getComponent().getHttpClient() @AT@ 5710 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getHttpClient:[] @TO@ MethodInvocation@@getComponent().getHttpClient() @AT@ 5725 @LENGTH@ 15
---UPD IfStatement@@if (httpClient != null && getComponent().getConfig().getHttpClient() != httpClient) {  final String endpointUri=getEndpointUri();  LOG.debug("Starting http client for {} ...",endpointUri);  httpClient.start();  LOG.debug("Started http client for {}",endpointUri);} @TO@ if (httpClient != null && getComponent().getHttpClient() != httpClient) {  final String endpointUri=getEndpointUri();  LOG.debug("Starting http client for {} ...",endpointUri);  httpClient.start();  LOG.debug("Started http client for {}",endpointUri);} @AT@ 5676 @LENGTH@ 341
------UPD InfixExpression@@httpClient != null && getComponent().getConfig().getHttpClient() != httpClient @TO@ httpClient != null && getComponent().getHttpClient() != httpClient @AT@ 5680 @LENGTH@ 78
---------UPD InfixExpression@@getComponent().getConfig().getHttpClient() != httpClient @TO@ getComponent().getHttpClient() != httpClient @AT@ 5702 @LENGTH@ 56
------------UPD MethodInvocation@@getComponent().getConfig().getHttpClient() @TO@ getComponent().getHttpClient() @AT@ 5702 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getConfig:[] @AT@ 5702 @LENGTH@ 26


UPD TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillaplocal.query.files");  includesFrom(testConfigProps,"minillaplocal.shared.query.files");  excludeQuery("results_cache_invalidation.q");  excludeQuery("results_cache_lifetime.q");  excludeQuery("bucket_map_join_tez1.q");  excludeQuery("special_character_in_tabnames_1.q");  excludeQuery("tez_smb_1.q");  excludeQuery("union_fast_stats.q");  excludeQuery("schema_evol_orc_acidvec_part.q");  excludeQuery("schema_evol_orc_vec_part_llap_io.q");  excludeQuery("load_dyn_part3.q");  excludeQuery("cbo_limit.q");  excludeQuery("rfc5424_parser_file_pruning.q");  excludeQuery("cbo_rp_limit.q");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.LLAP_LOCAL);  setFsType(QTestMiniClusters.FsType.LOCAL);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @TO@ try {  setQueryDir("ql/src/test/queries/clientpositive");  includesFrom(testConfigProps,"minillaplocal.query.files");  includesFrom(testConfigProps,"minillaplocal.shared.query.files");  excludeQuery("bucket_map_join_tez1.q");  excludeQuery("special_character_in_tabnames_1.q");  excludeQuery("tez_smb_1.q");  excludeQuery("union_fast_stats.q");  excludeQuery("schema_evol_orc_acidvec_part.q");  excludeQuery("schema_evol_orc_vec_part_llap_io.q");  excludeQuery("load_dyn_part3.q");  excludeQuery("cbo_limit.q");  excludeQuery("rfc5424_parser_file_pruning.q");  excludeQuery("cbo_rp_limit.q");  setResultsDir("ql/src/test/results/clientpositive/llap");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("data/conf/llap");  setClusterType(MiniClusterType.LLAP_LOCAL);  setFsType(QTestMiniClusters.FsType.LOCAL);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 9049 @LENGTH@ 1660
---DEL ExpressionStatement@@MethodInvocation:excludeQuery("results_cache_invalidation.q") @AT@ 9266 @LENGTH@ 45
------DEL MethodInvocation@@excludeQuery("results_cache_invalidation.q") @AT@ 9266 @LENGTH@ 44
---------DEL SimpleName@@MethodName:excludeQuery:["results_cache_invalidation.q"] @AT@ 9266 @LENGTH@ 44
------------DEL StringLiteral@@"results_cache_invalidation.q" @AT@ 9279 @LENGTH@ 30
---DEL ExpressionStatement@@MethodInvocation:excludeQuery("results_cache_lifetime.q") @AT@ 9362 @LENGTH@ 41
------DEL MethodInvocation@@excludeQuery("results_cache_lifetime.q") @AT@ 9362 @LENGTH@ 40
---------DEL SimpleName@@MethodName:excludeQuery:["results_cache_lifetime.q"] @AT@ 9362 @LENGTH@ 40
------------DEL StringLiteral@@"results_cache_lifetime.q" @AT@ 9375 @LENGTH@ 26


INS ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducers, Exception,  @AT@ 10685 @LENGTH@ 87
---INS MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 10685 @LENGTH@ 86
------INS MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 10685 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 10700 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 10703 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 10703 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 10712 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 10685 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 10721 @LENGTH@ 50
---------INS LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @TO@ SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @AT@ 10727 @LENGTH@ 43
------------INS InfixExpression@@template.getCurrentCacheSize() == 500 @TO@ LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @AT@ 10733 @LENGTH@ 37
---------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 10733 @LENGTH@ 30
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 10733 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 10742 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 10763 @LENGTH@ 2
---------------INS NumberLiteral@@500 @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 10767 @LENGTH@ 3


UPD IfStatement@@if (state == State.CONNECTED) latch.countDown(); @TO@ if (state == State.CONNECTED) {  latch.countDown();} @AT@ 4262 @LENGTH@ 68
---UPD Block@@ThenBody:latch.countDown(); @TO@ ThenBody:{  latch.countDown();} @AT@ 4312 @LENGTH@ 18


INS MethodDeclaration@@static, Operation, MethodName:remove, Node target, String... label,  @TO@ TypeDeclaration@@[@API(status=EXPERIMENTAL,since="1.0"), final]Operations,  @AT@ 2410 @LENGTH@ 124
---INS Modifier@@static @TO@ MethodDeclaration@@static, Operation, MethodName:remove, Node target, String... label,  @AT@ 2410 @LENGTH@ 6
---INS SimpleType@@Operation @TO@ MethodDeclaration@@static, Operation, MethodName:remove, Node target, String... label,  @AT@ 2417 @LENGTH@ 9
---INS SimpleName@@MethodName:remove @TO@ MethodDeclaration@@static, Operation, MethodName:remove, Node target, String... label,  @AT@ 2427 @LENGTH@ 6
---INS SingleVariableDeclaration@@Node target @TO@ MethodDeclaration@@static, Operation, MethodName:remove, Node target, String... label,  @AT@ 2434 @LENGTH@ 11
------INS SimpleType@@Node @TO@ SingleVariableDeclaration@@Node target @AT@ 2434 @LENGTH@ 4
------INS SimpleName@@target @TO@ SingleVariableDeclaration@@Node target @AT@ 2439 @LENGTH@ 6
---INS SingleVariableDeclaration@@String... label @TO@ MethodDeclaration@@static, Operation, MethodName:remove, Node target, String... label,  @AT@ 2447 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... label @AT@ 2447 @LENGTH@ 6
------INS SimpleName@@label @TO@ SingleVariableDeclaration@@String... label @AT@ 2457 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:Operation.create(target,Operator.REMOVE_LABEL,label) @TO@ MethodDeclaration@@static, Operation, MethodName:remove, Node target, String... label,  @AT@ 2469 @LENGTH@ 62
------INS MethodInvocation@@Operation.create(target,Operator.REMOVE_LABEL,label) @TO@ ReturnStatement@@MethodInvocation:Operation.create(target,Operator.REMOVE_LABEL,label) @AT@ 2476 @LENGTH@ 54
---------INS SimpleName@@Name:Operation @TO@ MethodInvocation@@Operation.create(target,Operator.REMOVE_LABEL,label) @AT@ 2476 @LENGTH@ 9
---------INS SimpleName@@MethodName:create:[target, Operator.REMOVE_LABEL, label] @TO@ MethodInvocation@@Operation.create(target,Operator.REMOVE_LABEL,label) @AT@ 2486 @LENGTH@ 44
------------INS SimpleName@@target @TO@ SimpleName@@MethodName:create:[target, Operator.REMOVE_LABEL, label] @AT@ 2493 @LENGTH@ 6
------------INS QualifiedName@@Operator.REMOVE_LABEL @TO@ SimpleName@@MethodName:create:[target, Operator.REMOVE_LABEL, label] @AT@ 2501 @LENGTH@ 21
---------------INS SimpleName@@Operator @TO@ QualifiedName@@Operator.REMOVE_LABEL @AT@ 2501 @LENGTH@ 8
---------------INS SimpleName@@REMOVE_LABEL @TO@ QualifiedName@@Operator.REMOVE_LABEL @AT@ 2510 @LENGTH@ 12
------------INS SimpleName@@label @TO@ SimpleName@@MethodName:create:[target, Operator.REMOVE_LABEL, label] @AT@ 2524 @LENGTH@ 5


UPD FieldDeclaration@@static, BooleanLiteral, [FALSE=new BooleanLiteral(false)] @TO@ static, final, BooleanLiteral, [FALSE=new BooleanLiteral(false)] @AT@ 1096 @LENGTH@ 56
---INS Modifier@@final @TO@ FieldDeclaration@@static, BooleanLiteral, [FALSE=new BooleanLiteral(false)] @AT@ 1109 @LENGTH@ 5


INS MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @TO@ TypeDeclaration@@[@RunWith(WildflyTestRunner.class), @ServerControl(manual=true), public]CliBootOperationsTestCase,  @AT@ 7720 @LENGTH@ 650
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7715 @LENGTH@ 4
---INS SimpleName@@MethodName:waitForMarkerFile @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7720 @LENGTH@ 17
---INS SingleVariableDeclaration@@String expected @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7738 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String expected @AT@ 7738 @LENGTH@ 6
------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@String expected @AT@ 7745 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7762 @LENGTH@ 9
---MOV VariableDeclarationStatement@@File file=getMarkerFile(); @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7782 @LENGTH@ 28
---MOV VariableDeclarationStatement@@long end=System.currentTimeMillis() + TimeoutUtil.adjust(5000); @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7819 @LENGTH@ 65
---MOV WhileStatement@@while (!Files.exists(file.toPath()) && System.currentTimeMillis() < end) {  Thread.sleep(100);} @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7893 @LENGTH@ 115
------MOV InfixExpression@@System.currentTimeMillis() < end @TO@ WhileStatement@@while (!Files.exists(file.toPath()) && System.currentTimeMillis() < end) {  Thread.sleep(100);} @AT@ 7932 @LENGTH@ 32
------INS Block@@WhileBody:{  Thread.sleep(100);  if (Files.exists(file.toPath())) {    contents=readFileContents(file);  }  if (contents != null) {    break;  }} @TO@ WhileStatement@@while (!Files.exists(file.toPath()) && System.currentTimeMillis() < end) {  Thread.sleep(100);} @AT@ 7966 @LENGTH@ 227
---------MOV ExpressionStatement@@MethodInvocation:Thread.sleep(100) @TO@ Block@@WhileBody:{  Thread.sleep(100);  if (Files.exists(file.toPath())) {    contents=readFileContents(file);  }  if (contents != null) {    break;  }} @AT@ 7980 @LENGTH@ 18
---------INS IfStatement@@if (Files.exists(file.toPath())) {  contents=readFileContents(file);} @TO@ Block@@WhileBody:{  Thread.sleep(100);  if (Files.exists(file.toPath())) {    contents=readFileContents(file);  }  if (contents != null) {    break;  }} @AT@ 8011 @LENGTH@ 99
------------MOV MethodInvocation@@Files.exists(file.toPath()) @TO@ IfStatement@@if (Files.exists(file.toPath())) {  contents=readFileContents(file);} @AT@ 7901 @LENGTH@ 27
------------INS Block@@ThenBody:{  contents=readFileContents(file);} @TO@ IfStatement@@if (Files.exists(file.toPath())) {  contents=readFileContents(file);} @AT@ 8044 @LENGTH@ 66
---------------INS ExpressionStatement@@Assignment:contents=readFileContents(file) @TO@ Block@@ThenBody:{  contents=readFileContents(file);} @AT@ 8062 @LENGTH@ 34
------------------INS Assignment@@contents=readFileContents(file) @TO@ ExpressionStatement@@Assignment:contents=readFileContents(file) @AT@ 8062 @LENGTH@ 33
---------------------INS SimpleName@@contents @TO@ Assignment@@contents=readFileContents(file) @AT@ 8062 @LENGTH@ 8
---------------------INS Operator@@= @TO@ Assignment@@contents=readFileContents(file) @AT@ 8070 @LENGTH@ 1
---------------------INS MethodInvocation@@readFileContents(file) @TO@ Assignment@@contents=readFileContents(file) @AT@ 8073 @LENGTH@ 22
------------------------INS SimpleName@@MethodName:readFileContents:[file] @TO@ MethodInvocation@@readFileContents(file) @AT@ 8073 @LENGTH@ 22
---------------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:readFileContents:[file] @AT@ 8090 @LENGTH@ 4
---------INS IfStatement@@if (contents != null) {  break;} @TO@ Block@@WhileBody:{  Thread.sleep(100);  if (Files.exists(file.toPath())) {    contents=readFileContents(file);  }  if (contents != null) {    break;  }} @AT@ 8123 @LENGTH@ 60
------------INS InfixExpression@@contents != null @TO@ IfStatement@@if (contents != null) {  break;} @AT@ 8127 @LENGTH@ 16
---------------INS SimpleName@@contents @TO@ InfixExpression@@contents != null @AT@ 8127 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@contents != null @AT@ 8135 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@contents != null @AT@ 8139 @LENGTH@ 4
------------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (contents != null) {  break;} @AT@ 8145 @LENGTH@ 38
---------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 8163 @LENGTH@ 6
---INS VariableDeclarationStatement@@String contents=null; @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 7893 @LENGTH@ 23
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String contents=null; @AT@ 7893 @LENGTH@ 6
------INS VariableDeclarationFragment@@contents=null @TO@ VariableDeclarationStatement@@String contents=null; @AT@ 7900 @LENGTH@ 15
---------INS SimpleName@@contents @TO@ VariableDeclarationFragment@@contents=null @AT@ 7900 @LENGTH@ 8
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@contents=null @AT@ 7911 @LENGTH@ 4
---MOV IfStatement@@if (!Files.exists(file.toPath())) {  Assert.fail("Did not see marker file before timeout");} @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 8017 @LENGTH@ 112
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(expected,contents) @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 8324 @LENGTH@ 40
------INS MethodInvocation@@Assert.assertEquals(expected,contents) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(expected,contents) @AT@ 8324 @LENGTH@ 39
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(expected,contents) @AT@ 8324 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[expected, contents] @TO@ MethodInvocation@@Assert.assertEquals(expected,contents) @AT@ 8331 @LENGTH@ 32
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertEquals:[expected, contents] @AT@ 8344 @LENGTH@ 8
------------INS SimpleName@@contents @TO@ SimpleName@@MethodName:assertEquals:[expected, contents] @AT@ 8354 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:defaultHeaderFilterStrategy.setOutFilterPattern(null) @TO@ MethodInvocation:defaultHeaderFilterStrategy.setOutFilterPattern("") @AT@ 3017 @LENGTH@ 54
---UPD MethodInvocation@@defaultHeaderFilterStrategy.setOutFilterPattern(null) @TO@ defaultHeaderFilterStrategy.setOutFilterPattern("") @AT@ 3017 @LENGTH@ 53
------UPD SimpleName@@MethodName:setOutFilterPattern:[null] @TO@ MethodName:setOutFilterPattern:[""] @AT@ 3045 @LENGTH@ 25
---------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:setOutFilterPattern:[null] @AT@ 3063 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3065 @LENGTH@ 4


INS IfStatement@@if (this.currentOngoingMatch != null) {  this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch());  this.currentOngoingMatch=null;} @TO@ MethodDeclaration@@public, OngoingUnwind, MethodName:unwind, Expression expression,  @AT@ 3330 @LENGTH@ 157
---INS InfixExpression@@this.currentOngoingMatch != null @TO@ IfStatement@@if (this.currentOngoingMatch != null) {  this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch());  this.currentOngoingMatch=null;} @AT@ 3334 @LENGTH@ 32
------INS FieldAccess@@this.currentOngoingMatch @TO@ InfixExpression@@this.currentOngoingMatch != null @AT@ 3334 @LENGTH@ 24
---------INS ThisExpression@@this @TO@ FieldAccess@@this.currentOngoingMatch @AT@ 3334 @LENGTH@ 4
---------INS SimpleName@@currentOngoingMatch @TO@ FieldAccess@@this.currentOngoingMatch @AT@ 3339 @LENGTH@ 19
------INS Operator@@!= @TO@ InfixExpression@@this.currentOngoingMatch != null @AT@ 3358 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@this.currentOngoingMatch != null @AT@ 3362 @LENGTH@ 4
---INS Block@@ThenBody:{  this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch());  this.currentOngoingMatch=null;} @TO@ IfStatement@@if (this.currentOngoingMatch != null) {  this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch());  this.currentOngoingMatch=null;} @AT@ 3368 @LENGTH@ 119
------INS ExpressionStatement@@MethodInvocation:this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch()) @TO@ Block@@ThenBody:{  this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch());  this.currentOngoingMatch=null;} @AT@ 3373 @LENGTH@ 74
---------INS MethodInvocation@@this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch()) @TO@ ExpressionStatement@@MethodInvocation:this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch()) @AT@ 3373 @LENGTH@ 73
------------INS FieldAccess@@this.currentSinglePartElements @TO@ MethodInvocation@@this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch()) @AT@ 3373 @LENGTH@ 30
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.currentSinglePartElements @AT@ 3373 @LENGTH@ 4
---------------INS SimpleName@@currentSinglePartElements @TO@ FieldAccess@@this.currentSinglePartElements @AT@ 3378 @LENGTH@ 25
------------INS SimpleName@@MethodName:add:[this.currentOngoingMatch.buildMatch()] @TO@ MethodInvocation@@this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch()) @AT@ 3404 @LENGTH@ 42
---------------INS MethodInvocation@@this.currentOngoingMatch.buildMatch() @TO@ SimpleName@@MethodName:add:[this.currentOngoingMatch.buildMatch()] @AT@ 3408 @LENGTH@ 37
------------------INS FieldAccess@@this.currentOngoingMatch @TO@ MethodInvocation@@this.currentOngoingMatch.buildMatch() @AT@ 3408 @LENGTH@ 24
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.currentOngoingMatch @AT@ 3408 @LENGTH@ 4
---------------------INS SimpleName@@currentOngoingMatch @TO@ FieldAccess@@this.currentOngoingMatch @AT@ 3413 @LENGTH@ 19
------------------INS SimpleName@@MethodName:buildMatch:[] @TO@ MethodInvocation@@this.currentOngoingMatch.buildMatch() @AT@ 3433 @LENGTH@ 12
------INS ExpressionStatement@@Assignment:this.currentOngoingMatch=null @TO@ Block@@ThenBody:{  this.currentSinglePartElements.add(this.currentOngoingMatch.buildMatch());  this.currentOngoingMatch=null;} @AT@ 3451 @LENGTH@ 32
---------INS Assignment@@this.currentOngoingMatch=null @TO@ ExpressionStatement@@Assignment:this.currentOngoingMatch=null @AT@ 3451 @LENGTH@ 31
------------INS FieldAccess@@this.currentOngoingMatch @TO@ Assignment@@this.currentOngoingMatch=null @AT@ 3451 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.currentOngoingMatch @AT@ 3451 @LENGTH@ 4
---------------INS SimpleName@@currentOngoingMatch @TO@ FieldAccess@@this.currentOngoingMatch @AT@ 3456 @LENGTH@ 19
------------INS Operator@@= @TO@ Assignment@@this.currentOngoingMatch=null @AT@ 3475 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@this.currentOngoingMatch=null @AT@ 3478 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:isSingletonShoudlReturnTrue,  @TO@ public, void, MethodName:isSingletonShouldReturnTrue,  @AT@ 2693 @LENGTH@ 93
---UPD SimpleName@@MethodName:isSingletonShoudlReturnTrue @TO@ MethodName:isSingletonShouldReturnTrue @AT@ 2705 @LENGTH@ 27


UPD ReturnStatement@@MethodInvocation:ops.partialFilterExpression(mapper.getMappedObject((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity)) @TO@ MethodInvocation:ops.partialFilterExpression(mapper.getMappedSort((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity)) @AT@ 7360 @LENGTH@ 133
---UPD MethodInvocation@@ops.partialFilterExpression(mapper.getMappedObject((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity)) @TO@ ops.partialFilterExpression(mapper.getMappedSort((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity)) @AT@ 7367 @LENGTH@ 125
------UPD SimpleName@@MethodName:partialFilterExpression:[mapper.getMappedObject((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity)] @TO@ MethodName:partialFilterExpression:[mapper.getMappedSort((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity)] @AT@ 7371 @LENGTH@ 121
---------UPD MethodInvocation@@mapper.getMappedObject((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity) @TO@ mapper.getMappedSort((Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY),entity) @AT@ 7400 @LENGTH@ 91
------------UPD SimpleName@@MethodName:getMappedObject:[(Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY), entity] @TO@ MethodName:getMappedSort:[(Document)sourceOptions.get(PARTIAL_FILTER_EXPRESSION_KEY), entity] @AT@ 7407 @LENGTH@ 84


DEL MethodDeclaration@@public, void, MethodName:init,  @AT@ 8331 @LENGTH@ 51
---DEL Modifier@@public @AT@ 8331 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 8338 @LENGTH@ 4
---DEL SimpleName@@MethodName:init @AT@ 8343 @LENGTH@ 4


UPD IfStatement@@if (payload instanceof GetFunctionRequest) {  ListFunctionsResponse result;  try {    result=lambdaClient.listFunctions((ListFunctionsRequest)payload);  } catch (  AwsServiceException ase) {    LOG.trace("listFunctions command returned the error code {}",ase.awsErrorDetails().errorCode());    throw ase;  }  Message message=getMessageForResponse(exchange);  message.setBody(result);} @TO@ if (payload instanceof ListFunctionsRequest) {  ListFunctionsResponse result;  try {    result=lambdaClient.listFunctions((ListFunctionsRequest)payload);  } catch (  AwsServiceException ase) {    LOG.trace("listFunctions command returned the error code {}",ase.awsErrorDetails().errorCode());    throw ase;  }  Message message=getMessageForResponse(exchange);  message.setBody(result);} @AT@ 10381 @LENGTH@ 542
---UPD InstanceofExpression@@payload instanceof GetFunctionRequest @TO@ payload instanceof ListFunctionsRequest @AT@ 10385 @LENGTH@ 37
------UPD SimpleType@@GetFunctionRequest @TO@ ListFunctionsRequest @AT@ 10404 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertThat(strategy.isNew(b)).isTrue() @TO@ MethodInvocation:assertThat(strategy.isNew(b)).isFalse() @AT@ 3146 @LENGTH@ 39
---UPD MethodInvocation@@assertThat(strategy.isNew(b)).isTrue() @TO@ assertThat(strategy.isNew(b)).isFalse() @AT@ 3146 @LENGTH@ 38
------UPD SimpleName@@MethodName:isTrue:[] @TO@ MethodName:isFalse:[] @AT@ 3176 @LENGTH@ 8


INS MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @TO@ TypeDeclaration@@[public]HeaderSpec,  @AT@ 127068 @LENGTH@ 233
---INS Modifier@@public @TO@ MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @AT@ 127068 @LENGTH@ 6
---INS SimpleType@@HeaderSpec @TO@ MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @AT@ 127075 @LENGTH@ 10
---INS SimpleName@@MethodName:writer @TO@ MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @AT@ 127086 @LENGTH@ 6
---INS SingleVariableDeclaration@@ServerHttpHeadersWriter serverHttpHeadersWriter @TO@ MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @AT@ 127093 @LENGTH@ 47
------INS SimpleType@@ServerHttpHeadersWriter @TO@ SingleVariableDeclaration@@ServerHttpHeadersWriter serverHttpHeadersWriter @AT@ 127093 @LENGTH@ 23
------INS SimpleName@@serverHttpHeadersWriter @TO@ SingleVariableDeclaration@@ServerHttpHeadersWriter serverHttpHeadersWriter @AT@ 127117 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(serverHttpHeadersWriter,() -> "serverHttpHeadersWriter cannot be null") @TO@ MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @AT@ 127147 @LENGTH@ 88
------INS MethodInvocation@@Assert.notNull(serverHttpHeadersWriter,() -> "serverHttpHeadersWriter cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(serverHttpHeadersWriter,() -> "serverHttpHeadersWriter cannot be null") @AT@ 127147 @LENGTH@ 87
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(serverHttpHeadersWriter,() -> "serverHttpHeadersWriter cannot be null") @AT@ 127147 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[serverHttpHeadersWriter, () -> "serverHttpHeadersWriter cannot be null"] @TO@ MethodInvocation@@Assert.notNull(serverHttpHeadersWriter,() -> "serverHttpHeadersWriter cannot be null") @AT@ 127154 @LENGTH@ 80
------------INS SimpleName@@serverHttpHeadersWriter @TO@ SimpleName@@MethodName:notNull:[serverHttpHeadersWriter, () -> "serverHttpHeadersWriter cannot be null"] @AT@ 127162 @LENGTH@ 23
------------INS LambdaExpression@@() -> "serverHttpHeadersWriter cannot be null" @TO@ SimpleName@@MethodName:notNull:[serverHttpHeadersWriter, () -> "serverHttpHeadersWriter cannot be null"] @AT@ 127187 @LENGTH@ 46
---------------INS StringLiteral@@"serverHttpHeadersWriter cannot be null" @TO@ LambdaExpression@@() -> "serverHttpHeadersWriter cannot be null" @AT@ 127193 @LENGTH@ 40
---INS ExpressionStatement@@MethodInvocation:this.writers.add(serverHttpHeadersWriter) @TO@ MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @AT@ 127239 @LENGTH@ 42
------INS MethodInvocation@@this.writers.add(serverHttpHeadersWriter) @TO@ ExpressionStatement@@MethodInvocation:this.writers.add(serverHttpHeadersWriter) @AT@ 127239 @LENGTH@ 41
---------INS FieldAccess@@this.writers @TO@ MethodInvocation@@this.writers.add(serverHttpHeadersWriter) @AT@ 127239 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.writers @AT@ 127239 @LENGTH@ 4
------------INS SimpleName@@writers @TO@ FieldAccess@@this.writers @AT@ 127244 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[serverHttpHeadersWriter] @TO@ MethodInvocation@@this.writers.add(serverHttpHeadersWriter) @AT@ 127252 @LENGTH@ 28
------------INS SimpleName@@serverHttpHeadersWriter @TO@ SimpleName@@MethodName:add:[serverHttpHeadersWriter] @AT@ 127256 @LENGTH@ 23
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, HeaderSpec, MethodName:writer, ServerHttpHeadersWriter serverHttpHeadersWriter,  @AT@ 127285 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 127292 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @TO@ MethodDeclaration@@public, void, MethodName:testCacheConsumers, Exception,  @AT@ 2038 @LENGTH@ 87
---INS MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2038 @LENGTH@ 86
------INS MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2038 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 2053 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 2056 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2056 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2065 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2038 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 200] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2074 @LENGTH@ 50
---------INS LambdaExpression@@() -> template.getCurrentCacheSize() == 200 @TO@ SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 200] @AT@ 2080 @LENGTH@ 43
------------INS InfixExpression@@template.getCurrentCacheSize() == 200 @TO@ LambdaExpression@@() -> template.getCurrentCacheSize() == 200 @AT@ 2086 @LENGTH@ 37
---------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 200 @AT@ 2086 @LENGTH@ 30
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2086 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2095 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@template.getCurrentCacheSize() == 200 @AT@ 2116 @LENGTH@ 2
---------------INS NumberLiteral@@200 @TO@ InfixExpression@@template.getCurrentCacheSize() == 200 @AT@ 2120 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:build(null,null) @TO@ MethodInvocation:build(null,"ThreadPool") @AT@ 2610 @LENGTH@ 25
---UPD MethodInvocation@@build(null,null) @TO@ build(null,"ThreadPool") @AT@ 2617 @LENGTH@ 17
------UPD SimpleName@@MethodName:build:[null, null] @TO@ MethodName:build:[null, "ThreadPool"] @AT@ 2617 @LENGTH@ 17
---------DEL NullLiteral@@null @AT@ 2629 @LENGTH@ 4
---------INS StringLiteral@@"ThreadPool" @TO@ SimpleName@@MethodName:build:[null, null] @AT@ 2661 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]TokenEndpointTests,  @AT@ 9495 @LENGTH@ 577
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9495 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9502 @LENGTH@ 4
---INS SimpleName@@MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9507 @LENGTH@ 53
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9570 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:when(clientDetailsService.loadClientByClientId(clientId)).thenReturn(clientDetails) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9584 @LENGTH@ 84
------INS MethodInvocation@@when(clientDetailsService.loadClientByClientId(clientId)).thenReturn(clientDetails) @TO@ ExpressionStatement@@MethodInvocation:when(clientDetailsService.loadClientByClientId(clientId)).thenReturn(clientDetails) @AT@ 9584 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:when:[clientDetailsService.loadClientByClientId(clientId)] @TO@ MethodInvocation@@when(clientDetailsService.loadClientByClientId(clientId)).thenReturn(clientDetails) @AT@ 9584 @LENGTH@ 57
------------INS MethodInvocation@@clientDetailsService.loadClientByClientId(clientId) @TO@ MethodInvocation@@MethodName:when:[clientDetailsService.loadClientByClientId(clientId)] @AT@ 9589 @LENGTH@ 51
---------------INS SimpleName@@Name:clientDetailsService @TO@ MethodInvocation@@clientDetailsService.loadClientByClientId(clientId) @AT@ 9589 @LENGTH@ 20
---------------INS SimpleName@@MethodName:loadClientByClientId:[clientId] @TO@ MethodInvocation@@clientDetailsService.loadClientByClientId(clientId) @AT@ 9610 @LENGTH@ 30
------------------INS SimpleName@@clientId @TO@ SimpleName@@MethodName:loadClientByClientId:[clientId] @AT@ 9631 @LENGTH@ 8
---------INS SimpleName@@MethodName:thenReturn:[clientDetails] @TO@ MethodInvocation@@when(clientDetailsService.loadClientByClientId(clientId)).thenReturn(clientDetails) @AT@ 9642 @LENGTH@ 25
------------INS SimpleName@@clientDetails @TO@ SimpleName@@MethodName:thenReturn:[clientDetails] @AT@ 9653 @LENGTH@ 13
---INS VariableDeclarationStatement@@HashMap<String,String> parameters=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9672 @LENGTH@ 67
------INS ParameterizedType@@HashMap<String,String> @TO@ VariableDeclarationStatement@@HashMap<String,String> parameters=new HashMap<String,String>(); @AT@ 9672 @LENGTH@ 23
---------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 9672 @LENGTH@ 7
---------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 9680 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 9688 @LENGTH@ 6
------INS VariableDeclarationFragment@@parameters=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@HashMap<String,String> parameters=new HashMap<String,String>(); @AT@ 9696 @LENGTH@ 42
---------INS SimpleName@@parameters @TO@ VariableDeclarationFragment@@parameters=new HashMap<String,String>() @AT@ 9696 @LENGTH@ 10
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@parameters=new HashMap<String,String>() @AT@ 9709 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 9709 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 9713 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 9713 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 9721 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 9729 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:parameters.put("client_id",clientId) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9742 @LENGTH@ 38
------INS MethodInvocation@@parameters.put("client_id",clientId) @TO@ ExpressionStatement@@MethodInvocation:parameters.put("client_id",clientId) @AT@ 9742 @LENGTH@ 37
---------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.put("client_id",clientId) @AT@ 9742 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["client_id", clientId] @TO@ MethodInvocation@@parameters.put("client_id",clientId) @AT@ 9753 @LENGTH@ 26
------------INS StringLiteral@@"client_id" @TO@ SimpleName@@MethodName:put:["client_id", clientId] @AT@ 9757 @LENGTH@ 11
------------INS SimpleName@@clientId @TO@ SimpleName@@MethodName:put:["client_id", clientId] @AT@ 9770 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:parameters.put("scope","read") @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9783 @LENGTH@ 32
------INS MethodInvocation@@parameters.put("scope","read") @TO@ ExpressionStatement@@MethodInvocation:parameters.put("scope","read") @AT@ 9783 @LENGTH@ 31
---------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.put("scope","read") @AT@ 9783 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["scope", "read"] @TO@ MethodInvocation@@parameters.put("scope","read") @AT@ 9794 @LENGTH@ 20
------------INS StringLiteral@@"scope" @TO@ SimpleName@@MethodName:put:["scope", "read"] @AT@ 9798 @LENGTH@ 7
------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:put:["scope", "read"] @AT@ 9807 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:parameters.put("grant_type","refresh_token") @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9818 @LENGTH@ 46
------INS MethodInvocation@@parameters.put("grant_type","refresh_token") @TO@ ExpressionStatement@@MethodInvocation:parameters.put("grant_type","refresh_token") @AT@ 9818 @LENGTH@ 45
---------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.put("grant_type","refresh_token") @AT@ 9818 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["grant_type", "refresh_token"] @TO@ MethodInvocation@@parameters.put("grant_type","refresh_token") @AT@ 9829 @LENGTH@ 34
------------INS StringLiteral@@"grant_type" @TO@ SimpleName@@MethodName:put:["grant_type", "refresh_token"] @AT@ 9833 @LENGTH@ 12
------------INS StringLiteral@@"refresh_token" @TO@ SimpleName@@MethodName:put:["grant_type", "refresh_token"] @AT@ 9847 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:when(authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails))).thenReturn(createFromParameters(parameters)) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 9868 @LENGTH@ 138
------INS MethodInvocation@@when(authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails))).thenReturn(createFromParameters(parameters)) @TO@ ExpressionStatement@@MethodInvocation:when(authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails))).thenReturn(createFromParameters(parameters)) @AT@ 9868 @LENGTH@ 137
---------INS MethodInvocation@@MethodName:when:[authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails))] @TO@ MethodInvocation@@when(authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails))).thenReturn(createFromParameters(parameters)) @AT@ 9868 @LENGTH@ 87
------------INS MethodInvocation@@authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails)) @TO@ MethodInvocation@@MethodName:when:[authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails))] @AT@ 9873 @LENGTH@ 81
---------------INS SimpleName@@Name:authorizationRequestFactory @TO@ MethodInvocation@@authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails)) @AT@ 9873 @LENGTH@ 27
---------------INS SimpleName@@MethodName:createTokenRequest:[any(Map.class), eq(clientDetails)] @TO@ MethodInvocation@@authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails)) @AT@ 9901 @LENGTH@ 53
------------------INS MethodInvocation@@any(Map.class) @TO@ SimpleName@@MethodName:createTokenRequest:[any(Map.class), eq(clientDetails)] @AT@ 9920 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:any:[Map.class] @TO@ MethodInvocation@@any(Map.class) @AT@ 9920 @LENGTH@ 14
------------------------INS TypeLiteral@@Map.class @TO@ SimpleName@@MethodName:any:[Map.class] @AT@ 9924 @LENGTH@ 9
------------------INS MethodInvocation@@eq(clientDetails) @TO@ SimpleName@@MethodName:createTokenRequest:[any(Map.class), eq(clientDetails)] @AT@ 9936 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:eq:[clientDetails] @TO@ MethodInvocation@@eq(clientDetails) @AT@ 9936 @LENGTH@ 17
------------------------INS SimpleName@@clientDetails @TO@ SimpleName@@MethodName:eq:[clientDetails] @AT@ 9939 @LENGTH@ 13
---------INS SimpleName@@MethodName:thenReturn:[createFromParameters(parameters)] @TO@ MethodInvocation@@when(authorizationRequestFactory.createTokenRequest(any(Map.class),eq(clientDetails))).thenReturn(createFromParameters(parameters)) @AT@ 9956 @LENGTH@ 49
------------INS MethodInvocation@@createFromParameters(parameters) @TO@ SimpleName@@MethodName:thenReturn:[createFromParameters(parameters)] @AT@ 9972 @LENGTH@ 32
---------------INS SimpleName@@MethodName:createFromParameters:[parameters] @TO@ MethodInvocation@@createFromParameters(parameters) @AT@ 9972 @LENGTH@ 32
------------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:createFromParameters:[parameters] @AT@ 9993 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:endpoint.postAccessToken(clientAuthentication,parameters) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenGrantTypeWithoutRefreshTokenParameter, Exception,  @AT@ 10010 @LENGTH@ 59
------INS MethodInvocation@@endpoint.postAccessToken(clientAuthentication,parameters) @TO@ ExpressionStatement@@MethodInvocation:endpoint.postAccessToken(clientAuthentication,parameters) @AT@ 10010 @LENGTH@ 58
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.postAccessToken(clientAuthentication,parameters) @AT@ 10010 @LENGTH@ 8
---------INS SimpleName@@MethodName:postAccessToken:[clientAuthentication, parameters] @TO@ MethodInvocation@@endpoint.postAccessToken(clientAuthentication,parameters) @AT@ 10019 @LENGTH@ 49
------------INS SimpleName@@clientAuthentication @TO@ SimpleName@@MethodName:postAccessToken:[clientAuthentication, parameters] @AT@ 10035 @LENGTH@ 20
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:postAccessToken:[clientAuthentication, parameters] @AT@ 10057 @LENGTH@ 10


UPD FieldDeclaration@@protected, String, [prettyFlow=Boolean.toString(false)] @TO@ private, String, [prettyFlow=Boolean.toString(false)] @AT@ 2297 @LENGTH@ 54
---UPD Modifier@@protected @TO@ private @AT@ 2297 @LENGTH@ 9


UPD VariableDeclarationStatement@@DistinctQueryContext distinctQueryContext=queryOperations.distincQueryContext(query,field); @TO@ DistinctQueryContext distinctQueryContext=queryOperations.distinctQueryContext(query,field); @AT@ 36171 @LENGTH@ 94
---UPD VariableDeclarationFragment@@distinctQueryContext=queryOperations.distincQueryContext(query,field) @TO@ distinctQueryContext=queryOperations.distinctQueryContext(query,field) @AT@ 36192 @LENGTH@ 72
------UPD MethodInvocation@@queryOperations.distincQueryContext(query,field) @TO@ queryOperations.distinctQueryContext(query,field) @AT@ 36215 @LENGTH@ 49
---------UPD SimpleName@@MethodName:distincQueryContext:[query, field] @TO@ MethodName:distinctQueryContext:[query, field] @AT@ 36231 @LENGTH@ 33


UPD EnhancedForStatement@@for (Map.Entry<String,Supplier<String>> entry : readProperties.entrySet()) {  String name=entry.getKey();  String value=entry.getValue().get();  String text=camelContext.resolvePropertyPlaceholders(value);  if (text != null && text.startsWith("Exchange.")) {    String field=StringHelper.after(text,"Exchange.");    String constant=ExchangeConstantProvider.lookup(field);    if (constant != null) {      text=constant;    } else {      throw new IllegalArgumentException("Constant field with name: " + field + " not found on Exchange.class");    }  }  if (!Objects.equals(text,value)) {    writeProperties.get(name).accept(text);    changedProperties.put(name,value);    if (LOG.isDebugEnabled()) {      LOG.debug("Changed property [{}] from: {} to: {}",name,value,text);    }  }} @TO@ for (Map.Entry<String,Supplier<String>> entry : readProperties.entrySet()) {  String name=entry.getKey();  Supplier<String> supplier=entry.getValue();  String value=supplier != null ? supplier.get() : null;  String text=value != null ? camelContext.resolvePropertyPlaceholders(value) : null;  if (text != null && text.startsWith("Exchange.")) {    String field=StringHelper.after(text,"Exchange.");    String constant=ExchangeConstantProvider.lookup(field);    if (constant != null) {      text=constant;    } else {      throw new IllegalArgumentException("Constant field with name: " + field + " not found on Exchange.class");    }  }  if (!Objects.equals(text,value)) {    writeProperties.get(name).accept(text);    changedProperties.put(name,value);    if (LOG.isDebugEnabled()) {      LOG.debug("Changed property [{}] from: {} to: {}",name,value,text);    }  }} @AT@ 34233 @LENGTH@ 1252
---UPD VariableDeclarationStatement@@String value=entry.getValue().get(); @TO@ Supplier<String> supplier=entry.getValue(); @AT@ 34373 @LENGTH@ 38
------INS ParameterizedType@@Supplier<String> @TO@ VariableDeclarationStatement@@String value=entry.getValue().get(); @AT@ 34373 @LENGTH@ 16
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<String> @AT@ 34373 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ParameterizedType@@Supplier<String> @AT@ 34382 @LENGTH@ 6
------DEL SimpleType@@String @AT@ 34373 @LENGTH@ 6
------UPD VariableDeclarationFragment@@value=entry.getValue().get() @TO@ supplier=entry.getValue() @AT@ 34380 @LENGTH@ 30
---------UPD SimpleName@@value @TO@ supplier @AT@ 34380 @LENGTH@ 5
---------UPD MethodInvocation@@entry.getValue().get() @TO@ entry.getValue() @AT@ 34388 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 34388 @LENGTH@ 16
------------UPD SimpleName@@MethodName:get:[] @TO@ MethodName:getValue:[] @AT@ 34405 @LENGTH@ 5
---UPD VariableDeclarationStatement@@String text=camelContext.resolvePropertyPlaceholders(value); @TO@ String text=value != null ? camelContext.resolvePropertyPlaceholders(value) : null; @AT@ 34428 @LENGTH@ 62
------UPD VariableDeclarationFragment@@text=camelContext.resolvePropertyPlaceholders(value) @TO@ text=value != null ? camelContext.resolvePropertyPlaceholders(value) : null @AT@ 34435 @LENGTH@ 54
---------INS ConditionalExpression@@value != null ? camelContext.resolvePropertyPlaceholders(value) : null @TO@ VariableDeclarationFragment@@text=camelContext.resolvePropertyPlaceholders(value) @AT@ 34522 @LENGTH@ 70
------------MOV MethodInvocation@@camelContext.resolvePropertyPlaceholders(value) @TO@ ConditionalExpression@@value != null ? camelContext.resolvePropertyPlaceholders(value) : null @AT@ 34442 @LENGTH@ 47
------------INS InfixExpression@@value != null @TO@ ConditionalExpression@@value != null ? camelContext.resolvePropertyPlaceholders(value) : null @AT@ 34522 @LENGTH@ 13
---------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 34522 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 34527 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 34531 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ConditionalExpression@@value != null ? camelContext.resolvePropertyPlaceholders(value) : null @AT@ 34588 @LENGTH@ 4
---INS VariableDeclarationStatement@@String value=supplier != null ? supplier.get() : null; @TO@ EnhancedForStatement@@for (Map.Entry<String,Supplier<String>> entry : readProperties.entrySet()) {  String name=entry.getKey();  String value=entry.getValue().get();  String text=camelContext.resolvePropertyPlaceholders(value);  if (text != null && text.startsWith("Exchange.")) {    String field=StringHelper.after(text,"Exchange.");    String constant=ExchangeConstantProvider.lookup(field);    if (constant != null) {      text=constant;    } else {      throw new IllegalArgumentException("Constant field with name: " + field + " not found on Exchange.class");    }  }  if (!Objects.equals(text,value)) {    writeProperties.get(name).accept(text);    changedProperties.put(name,value);    if (LOG.isDebugEnabled()) {      LOG.debug("Changed property [{}] from: {} to: {}",name,value,text);    }  }} @AT@ 34435 @LENGTH@ 56
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=supplier != null ? supplier.get() : null; @AT@ 34435 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=supplier != null ? supplier.get() : null @TO@ VariableDeclarationStatement@@String value=supplier != null ? supplier.get() : null; @AT@ 34442 @LENGTH@ 48
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=supplier != null ? supplier.get() : null @AT@ 34442 @LENGTH@ 5
---------INS ConditionalExpression@@supplier != null ? supplier.get() : null @TO@ VariableDeclarationFragment@@value=supplier != null ? supplier.get() : null @AT@ 34450 @LENGTH@ 40
------------INS InfixExpression@@supplier != null @TO@ ConditionalExpression@@supplier != null ? supplier.get() : null @AT@ 34450 @LENGTH@ 16
---------------INS SimpleName@@supplier @TO@ InfixExpression@@supplier != null @AT@ 34450 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@supplier != null @AT@ 34458 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@supplier != null @AT@ 34462 @LENGTH@ 4
------------INS MethodInvocation@@supplier.get() @TO@ ConditionalExpression@@supplier != null ? supplier.get() : null @AT@ 34469 @LENGTH@ 14
---------------INS SimpleName@@Name:supplier @TO@ MethodInvocation@@supplier.get() @AT@ 34469 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@supplier.get() @AT@ 34478 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ ConditionalExpression@@supplier != null ? supplier.get() : null @AT@ 34486 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @TO@ TypeDeclaration@@[public]ServerBearerTokenAuthenticationConverterTests,  @AT@ 2217 @LENGTH@ 353
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 2217 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 2224 @LENGTH@ 4
---INS SimpleName@@MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 2229 @LENGTH@ 66
---INS ExpressionStatement@@MethodInvocation:this.converter.setBearerTokenHeaderName(CUSTOM_HEADER) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 2302 @LENGTH@ 55
------INS MethodInvocation@@this.converter.setBearerTokenHeaderName(CUSTOM_HEADER) @TO@ ExpressionStatement@@MethodInvocation:this.converter.setBearerTokenHeaderName(CUSTOM_HEADER) @AT@ 2302 @LENGTH@ 54
---------INS FieldAccess@@this.converter @TO@ MethodInvocation@@this.converter.setBearerTokenHeaderName(CUSTOM_HEADER) @AT@ 2302 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.converter @AT@ 2302 @LENGTH@ 4
------------INS SimpleName@@converter @TO@ FieldAccess@@this.converter @AT@ 2307 @LENGTH@ 9
---------INS SimpleName@@MethodName:setBearerTokenHeaderName:[CUSTOM_HEADER] @TO@ MethodInvocation@@this.converter.setBearerTokenHeaderName(CUSTOM_HEADER) @AT@ 2317 @LENGTH@ 39
------------INS SimpleName@@CUSTOM_HEADER @TO@ SimpleName@@MethodName:setBearerTokenHeaderName:[CUSTOM_HEADER] @AT@ 2342 @LENGTH@ 13
---INS VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 2360 @LENGTH@ 134
------INS ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @TO@ VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN); @AT@ 2360 @LENGTH@ 36
---------INS SimpleType@@MockServerHttpRequest.BaseBuilder @TO@ ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @AT@ 2360 @LENGTH@ 33
---------INS WildcardType@@? @TO@ ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @AT@ 2394 @LENGTH@ 1
------INS VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @TO@ VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN); @AT@ 2397 @LENGTH@ 96
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 2397 @LENGTH@ 7
---------INS MethodInvocation@@MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @TO@ VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 2407 @LENGTH@ 86
------------INS MethodInvocation@@MethodName:get:["/"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 2407 @LENGTH@ 35
---------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:get:["/"] @AT@ 2438 @LENGTH@ 3
------------INS SimpleName@@Name:MockServerHttpRequest @TO@ MethodInvocation@@MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 2407 @LENGTH@ 21
------------INS SimpleName@@MethodName:header:[CUSTOM_HEADER, "Bearer " + TEST_TOKEN] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").header(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 2448 @LENGTH@ 45
---------------INS SimpleName@@CUSTOM_HEADER @TO@ SimpleName@@MethodName:header:[CUSTOM_HEADER, "Bearer " + TEST_TOKEN] @AT@ 2455 @LENGTH@ 13
---------------INS InfixExpression@@"Bearer " + TEST_TOKEN @TO@ SimpleName@@MethodName:header:[CUSTOM_HEADER, "Bearer " + TEST_TOKEN] @AT@ 2470 @LENGTH@ 22
------------------INS StringLiteral@@"Bearer " @TO@ InfixExpression@@"Bearer " + TEST_TOKEN @AT@ 2470 @LENGTH@ 9
------------------INS Operator@@+ @TO@ InfixExpression@@"Bearer " + TEST_TOKEN @AT@ 2479 @LENGTH@ 1
------------------INS SimpleName@@TEST_TOKEN @TO@ InfixExpression@@"Bearer " + TEST_TOKEN @AT@ 2482 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(convertToToken(request).getToken()).isEqualTo(TEST_TOKEN) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 2498 @LENGTH@ 69
------INS MethodInvocation@@assertThat(convertToToken(request).getToken()).isEqualTo(TEST_TOKEN) @TO@ ExpressionStatement@@MethodInvocation:assertThat(convertToToken(request).getToken()).isEqualTo(TEST_TOKEN) @AT@ 2498 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:assertThat:[convertToToken(request).getToken()] @TO@ MethodInvocation@@assertThat(convertToToken(request).getToken()).isEqualTo(TEST_TOKEN) @AT@ 2498 @LENGTH@ 46
------------INS MethodInvocation@@convertToToken(request).getToken() @TO@ MethodInvocation@@MethodName:assertThat:[convertToToken(request).getToken()] @AT@ 2509 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:convertToToken:[request] @TO@ MethodInvocation@@convertToToken(request).getToken() @AT@ 2509 @LENGTH@ 23
------------------INS SimpleName@@request @TO@ MethodInvocation@@MethodName:convertToToken:[request] @AT@ 2524 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getToken:[] @TO@ MethodInvocation@@convertToToken(request).getToken() @AT@ 2533 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:[TEST_TOKEN] @TO@ MethodInvocation@@assertThat(convertToToken(request).getToken()).isEqualTo(TEST_TOKEN) @AT@ 2545 @LENGTH@ 21
------------INS SimpleName@@TEST_TOKEN @TO@ SimpleName@@MethodName:isEqualTo:[TEST_TOKEN] @AT@ 2555 @LENGTH@ 10


UPD MethodDeclaration@@HazelcastReplicatedmapEndpointBuilder, MethodName:hazelcastReplicatedmap, String path,  @TO@ static, HazelcastReplicatedmapEndpointBuilder, MethodName:hazelcastReplicatedmap, String path,  @AT@ 26072 @LENGTH@ 466
---INS Modifier@@static @TO@ MethodDeclaration@@HazelcastReplicatedmapEndpointBuilder, MethodName:hazelcastReplicatedmap, String path,  @AT@ 26034 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, String, [TYPE_SEPARATOR=":"] @AT@ 1976 @LENGTH@ 49
---DEL Modifier@@private @AT@ 1976 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1984 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1991 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1997 @LENGTH@ 6
---DEL VariableDeclarationFragment@@TYPE_SEPARATOR=":" @AT@ 2004 @LENGTH@ 20
------DEL SimpleName@@TYPE_SEPARATOR @AT@ 2004 @LENGTH@ 14
------DEL StringLiteral@@":" @AT@ 2021 @LENGTH@ 3


UPD TypeDeclaration@@[public]JavadocHelper,  @TO@ [public, final]JavadocHelper,  @AT@ 911 @LENGTH@ 3059
---INS Modifier@@final @TO@ TypeDeclaration@@[public]JavadocHelper,  @AT@ 918 @LENGTH@ 5


UPD CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @TO@ catch (RestClientException ex) {  int statusCode=500;  if (ex instanceof RestClientResponseException) {    statusCode=((RestClientResponseException)ex).getRawStatusCode();  }  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error);  throw new ClientAuthorizationException(oauth2Error,authorizationCodeGrantRequest.getClientRegistration().getRegistrationId(),message,ex);} @AT@ 3821 @LENGTH@ 294
---INS VariableDeclarationStatement@@int statusCode=500; @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3926 @LENGTH@ 21
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3926 @LENGTH@ 3
------INS VariableDeclarationFragment@@statusCode=500 @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3930 @LENGTH@ 16
---------INS SimpleName@@statusCode @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3930 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3943 @LENGTH@ 3
---INS IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3951 @LENGTH@ 125
------INS InstanceofExpression@@ex instanceof RestClientResponseException @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3955 @LENGTH@ 41
---------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3955 @LENGTH@ 2
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3958 @LENGTH@ 10
---------INS SimpleType@@RestClientResponseException @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3969 @LENGTH@ 27
------INS Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3998 @LENGTH@ 78
---------INS ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 4004 @LENGTH@ 67
------------INS Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4004 @LENGTH@ 66
---------------INS SimpleName@@statusCode @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4004 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4014 @LENGTH@ 1
---------------INS MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 4017 @LENGTH@ 53
------------------INS ParenthesizedExpression@@((RestClientResponseException)ex) @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 4017 @LENGTH@ 34
---------------------INS CastExpression@@(RestClientResponseException)ex @TO@ ParenthesizedExpression@@((RestClientResponseException)ex) @AT@ 4018 @LENGTH@ 32
------------------------INS SimpleType@@RestClientResponseException @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 4019 @LENGTH@ 27
------------------------INS SimpleName@@ex @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 4048 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getRawStatusCode:[] @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 4052 @LENGTH@ 18
---UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error,ex) @TO@ ClassInstanceCreation:new ClientAuthorizationException(oauth2Error,authorizationCodeGrantRequest.getClientRegistration().getRegistrationId(),message,ex) @AT@ 4055 @LENGTH@ 56
------UPD ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @TO@ ClientAuthorizationException[oauth2Error, authorizationCodeGrantRequest.getClientRegistration().getRegistrationId(), message, ex] @AT@ 4061 @LENGTH@ 49
---------UPD SimpleType@@OAuth2AuthorizationException @TO@ ClientAuthorizationException @AT@ 4065 @LENGTH@ 28
---------INS MethodInvocation@@authorizationCodeGrantRequest.getClientRegistration().getRegistrationId() @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4491 @LENGTH@ 73
------------INS MethodInvocation@@MethodName:getClientRegistration:[] @TO@ MethodInvocation@@authorizationCodeGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4491 @LENGTH@ 53
------------INS SimpleName@@Name:authorizationCodeGrantRequest @TO@ MethodInvocation@@authorizationCodeGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4491 @LENGTH@ 29
------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@authorizationCodeGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4545 @LENGTH@ 19
---------INS SimpleName@@message @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4571 @LENGTH@ 7
---INS VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 4289 @LENGTH@ 135
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4289 @LENGTH@ 6
------INS VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4296 @LENGTH@ 127
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4296 @LENGTH@ 7
---------INS MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4306 @LENGTH@ 117
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4306 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4313 @LENGTH@ 110
---------------INS StringLiteral@@"Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s" @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4320 @LENGTH@ 67
---------------INS SimpleName@@statusCode @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4394 @LENGTH@ 10
---------------INS SimpleName@@oauth2Error @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4411 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:"groovy.lang.MetaClass".equals(returnType.asElement().getSimpleName()) @TO@ MethodInvocation:"groovy.lang.MetaClass".equals(returnType.asElement().getSimpleName().toString()) @AT@ 50000 @LENGTH@ 78
---UPD MethodInvocation@@"groovy.lang.MetaClass".equals(returnType.asElement().getSimpleName()) @TO@ "groovy.lang.MetaClass".equals(returnType.asElement().getSimpleName().toString()) @AT@ 50007 @LENGTH@ 70
------UPD SimpleName@@MethodName:equals:[returnType.asElement().getSimpleName()] @TO@ MethodName:equals:[returnType.asElement().getSimpleName().toString()] @AT@ 50031 @LENGTH@ 46
---------UPD MethodInvocation@@returnType.asElement().getSimpleName() @TO@ returnType.asElement().getSimpleName().toString() @AT@ 50038 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@returnType.asElement().getSimpleName() @AT@ 50038 @LENGTH@ 38
------------UPD SimpleName@@MethodName:getSimpleName:[] @TO@ MethodName:toString:[] @AT@ 50061 @LENGTH@ 15


UPD IfStatement@@if (CachingConnectionFactory.this.active) {  if (!this.channelList.contains(proxy)) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} else {  if (proxy.isOpen()) {    try {      physicalClose(proxy);    } catch (    @SuppressWarnings(UNUSED) Exception e) {    }  }} @TO@ if (CachingConnectionFactory.this.active) {  boolean alreadyCached=this.channelList.contains(proxy);  if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Cache limit reached: " + this.target);    }    try {      physicalClose(proxy);    } catch (    @SuppressWarnings(UNUSED) Exception e) {    }  } else   if (!alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} else {  if (proxy.isOpen()) {    try {      physicalClose(proxy);    } catch (    @SuppressWarnings(UNUSED) Exception e) {    }  }} @AT@ 46524 @LENGTH@ 511
---INS Block@@ThenBody:{  boolean alreadyCached=this.channelList.contains(proxy);  if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Cache limit reached: " + this.target);    }    try {      physicalClose(proxy);    } catch (    @SuppressWarnings(UNUSED) Exception e) {    }  } else   if (!alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} @TO@ IfStatement@@if (CachingConnectionFactory.this.active) {  if (!this.channelList.contains(proxy)) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} else {  if (proxy.isOpen()) {    try {      physicalClose(proxy);    } catch (    @SuppressWarnings(UNUSED) Exception e) {    }  }} @AT@ 46369 @LENGTH@ 660
------INS VariableDeclarationStatement@@boolean alreadyCached=this.channelList.contains(proxy); @TO@ Block@@ThenBody:{  boolean alreadyCached=this.channelList.contains(proxy);  if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Cache limit reached: " + this.target);    }    try {      physicalClose(proxy);    } catch (    @SuppressWarnings(UNUSED) Exception e) {    }  } else   if (!alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} @AT@ 46377 @LENGTH@ 57
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean alreadyCached=this.channelList.contains(proxy); @AT@ 46377 @LENGTH@ 7
---------INS VariableDeclarationFragment@@alreadyCached=this.channelList.contains(proxy) @TO@ VariableDeclarationStatement@@boolean alreadyCached=this.channelList.contains(proxy); @AT@ 46385 @LENGTH@ 48
------------INS SimpleName@@alreadyCached @TO@ VariableDeclarationFragment@@alreadyCached=this.channelList.contains(proxy) @AT@ 46385 @LENGTH@ 13
------------MOV MethodInvocation@@this.channelList.contains(proxy) @TO@ VariableDeclarationFragment@@alreadyCached=this.channelList.contains(proxy) @AT@ 46579 @LENGTH@ 32
------INS IfStatement@@if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Cache limit reached: " + this.target);  }  try {    physicalClose(proxy);  } catch (  @SuppressWarnings(UNUSED) Exception e) {  }} else if (!alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Returning cached Channel: " + this.target);  }  releasePermitIfNecessary(proxy);  this.channelList.addLast((ChannelProxy)proxy);  setHighWaterMark();} @TO@ Block@@ThenBody:{  boolean alreadyCached=this.channelList.contains(proxy);  if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Cache limit reached: " + this.target);    }    try {      physicalClose(proxy);    } catch (    @SuppressWarnings(UNUSED) Exception e) {    }  } else   if (!alreadyCached) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} @AT@ 46441 @LENGTH@ 581
---------MOV InfixExpression@@this.channelList.size() < getChannelCacheSize() || this.channelList.contains(proxy) @TO@ IfStatement@@if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Cache limit reached: " + this.target);  }  try {    physicalClose(proxy);  } catch (  @SuppressWarnings(UNUSED) Exception e) {  }} else if (!alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Returning cached Channel: " + this.target);  }  releasePermitIfNecessary(proxy);  this.channelList.addLast((ChannelProxy)proxy);  setHighWaterMark();} @AT@ 41831 @LENGTH@ 93
------------UPD InfixExpression@@this.channelList.size() < getChannelCacheSize() @TO@ this.channelList.size() >= getChannelCacheSize() @AT@ 41831 @LENGTH@ 47
---------------UPD Operator@@< @TO@ >= @AT@ 41854 @LENGTH@ 1
------------UPD Operator@@|| @TO@ && @AT@ 41878 @LENGTH@ 2
------------DEL MethodInvocation@@this.channelList.contains(proxy) @AT@ 41892 @LENGTH@ 32
---------------DEL FieldAccess@@this.channelList @AT@ 41892 @LENGTH@ 16
------------------DEL ThisExpression@@this @AT@ 41892 @LENGTH@ 4
------------------DEL SimpleName@@channelList @AT@ 41897 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:contains:[proxy] @AT@ 41909 @LENGTH@ 15
------------------DEL SimpleName@@proxy @AT@ 41918 @LENGTH@ 5
------------INS PrefixExpression@@!alreadyCached @TO@ InfixExpression@@this.channelList.size() < getChannelCacheSize() || this.channelList.contains(proxy) @AT@ 46497 @LENGTH@ 14
---------------INS Operator@@! @TO@ PrefixExpression@@!alreadyCached @AT@ 46497 @LENGTH@ 1
---------------INS SimpleName@@alreadyCached @TO@ PrefixExpression@@!alreadyCached @AT@ 46498 @LENGTH@ 13
---------INS Block@@ThenBody:{  if (logger.isTraceEnabled()) {    logger.trace("Cache limit reached: " + this.target);  }  try {    physicalClose(proxy);  } catch (  @SuppressWarnings(UNUSED) Exception e) {  }} @TO@ IfStatement@@if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Cache limit reached: " + this.target);  }  try {    physicalClose(proxy);  } catch (  @SuppressWarnings(UNUSED) Exception e) {  }} else if (!alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Returning cached Channel: " + this.target);  }  releasePermitIfNecessary(proxy);  this.channelList.addLast((ChannelProxy)proxy);  setHighWaterMark();} @AT@ 46513 @LENGTH@ 233
------------INS IfStatement@@if (logger.isTraceEnabled()) {  logger.trace("Cache limit reached: " + this.target);} @TO@ Block@@ThenBody:{  if (logger.isTraceEnabled()) {    logger.trace("Cache limit reached: " + this.target);  }  try {    physicalClose(proxy);  } catch (  @SuppressWarnings(UNUSED) Exception e) {  }} @AT@ 46522 @LENGTH@ 100
---------------INS MethodInvocation@@logger.isTraceEnabled() @TO@ IfStatement@@if (logger.isTraceEnabled()) {  logger.trace("Cache limit reached: " + this.target);} @AT@ 46526 @LENGTH@ 23
------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isTraceEnabled() @AT@ 46526 @LENGTH@ 6
------------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@logger.isTraceEnabled() @AT@ 46533 @LENGTH@ 16
---------------INS Block@@ThenBody:{  logger.trace("Cache limit reached: " + this.target);} @TO@ IfStatement@@if (logger.isTraceEnabled()) {  logger.trace("Cache limit reached: " + this.target);} @AT@ 46551 @LENGTH@ 71
------------------INS ExpressionStatement@@MethodInvocation:logger.trace("Cache limit reached: " + this.target) @TO@ Block@@ThenBody:{  logger.trace("Cache limit reached: " + this.target);} @AT@ 46561 @LENGTH@ 52
---------------------INS MethodInvocation@@logger.trace("Cache limit reached: " + this.target) @TO@ ExpressionStatement@@MethodInvocation:logger.trace("Cache limit reached: " + this.target) @AT@ 46561 @LENGTH@ 51
------------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.trace("Cache limit reached: " + this.target) @AT@ 46561 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:trace:["Cache limit reached: " + this.target] @TO@ MethodInvocation@@logger.trace("Cache limit reached: " + this.target) @AT@ 46568 @LENGTH@ 44
---------------------------INS InfixExpression@@"Cache limit reached: " + this.target @TO@ SimpleName@@MethodName:trace:["Cache limit reached: " + this.target] @AT@ 46574 @LENGTH@ 37
------------------------------INS StringLiteral@@"Cache limit reached: " @TO@ InfixExpression@@"Cache limit reached: " + this.target @AT@ 46574 @LENGTH@ 23
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Cache limit reached: " + this.target @AT@ 46597 @LENGTH@ 1
------------------------------INS FieldAccess@@this.target @TO@ InfixExpression@@"Cache limit reached: " + this.target @AT@ 46600 @LENGTH@ 11
---------------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.target @AT@ 46600 @LENGTH@ 4
---------------------------------INS SimpleName@@target @TO@ FieldAccess@@this.target @AT@ 46605 @LENGTH@ 6
------------INS TryStatement@@try {  physicalClose(proxy);} catch (@SuppressWarnings(UNUSED) Exception e) {} @TO@ Block@@ThenBody:{  if (logger.isTraceEnabled()) {    logger.trace("Cache limit reached: " + this.target);  }  try {    physicalClose(proxy);  } catch (  @SuppressWarnings(UNUSED) Exception e) {  }} @AT@ 46630 @LENGTH@ 108
---------------INS ExpressionStatement@@MethodInvocation:physicalClose(proxy) @TO@ TryStatement@@try {  physicalClose(proxy);} catch (@SuppressWarnings(UNUSED) Exception e) {} @AT@ 46644 @LENGTH@ 21
------------------INS MethodInvocation@@physicalClose(proxy) @TO@ ExpressionStatement@@MethodInvocation:physicalClose(proxy) @AT@ 46644 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:physicalClose:[proxy] @TO@ MethodInvocation@@physicalClose(proxy) @AT@ 46644 @LENGTH@ 20
------------------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:physicalClose:[proxy] @AT@ 46658 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:physicalClose:[proxy] @TO@ MethodInvocation@@physicalClose(proxy) @AT@ 46644 @LENGTH@ 20
------------------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:physicalClose:[proxy] @AT@ 46658 @LENGTH@ 5
---------------INS CatchClause@@catch (@SuppressWarnings(UNUSED) Exception e) {} @TO@ TryStatement@@try {  physicalClose(proxy);} catch (@SuppressWarnings(UNUSED) Exception e) {} @AT@ 46682 @LENGTH@ 56
------------------INS SingleVariableDeclaration@@@SuppressWarnings(UNUSED) Exception e @TO@ CatchClause@@catch (@SuppressWarnings(UNUSED) Exception e) {} @AT@ 46689 @LENGTH@ 37
---------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@@SuppressWarnings(UNUSED) Exception e @AT@ 46715 @LENGTH@ 9
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@@SuppressWarnings(UNUSED) Exception e @AT@ 46725 @LENGTH@ 1
---------MOV Block@@ThenBody:{  if (!this.channelList.contains(proxy)) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} @TO@ IfStatement@@if (this.channelList.size() >= getChannelCacheSize() && !alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Cache limit reached: " + this.target);  }  try {    physicalClose(proxy);  } catch (  @SuppressWarnings(UNUSED) Exception e) {  }} else if (!alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Returning cached Channel: " + this.target);  }  releasePermitIfNecessary(proxy);  this.channelList.addLast((ChannelProxy)proxy);  setHighWaterMark();} @AT@ 46566 @LENGTH@ 298
---UPD Block@@ThenBody:{  if (!this.channelList.contains(proxy)) {    if (logger.isTraceEnabled()) {      logger.trace("Returning cached Channel: " + this.target);    }    releasePermitIfNecessary(proxy);    this.channelList.addLast((ChannelProxy)proxy);    setHighWaterMark();  }} @TO@ ElseBody:if (!alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Returning cached Channel: " + this.target);  }  releasePermitIfNecessary(proxy);  this.channelList.addLast((ChannelProxy)proxy);  setHighWaterMark();} @AT@ 46566 @LENGTH@ 298
------UPD IfStatement@@if (!this.channelList.contains(proxy)) {  if (logger.isTraceEnabled()) {    logger.trace("Returning cached Channel: " + this.target);  }  releasePermitIfNecessary(proxy);  this.channelList.addLast((ChannelProxy)proxy);  setHighWaterMark();} @TO@ if (!alreadyCached) {  if (logger.isTraceEnabled()) {    logger.trace("Returning cached Channel: " + this.target);  }  releasePermitIfNecessary(proxy);  this.channelList.addLast((ChannelProxy)proxy);  setHighWaterMark();} @AT@ 46574 @LENGTH@ 283
---------UPD PrefixExpression@@!this.channelList.contains(proxy) @TO@ !alreadyCached @AT@ 46578 @LENGTH@ 33
------------INS SimpleName@@alreadyCached @TO@ PrefixExpression@@!this.channelList.contains(proxy) @AT@ 46763 @LENGTH@ 13


UPD IfStatement@@if (expiresIn != null) {  accessToken.setExpiration(new Date(System.currentTimeMillis() + (expiresIn * 1000)));} @TO@ if (expiresIn != null && expiresIn != 0) {  accessToken.setExpiration(new Date(System.currentTimeMillis() + (expiresIn * 1000)));} @AT@ 3566 @LENGTH@ 117
---INS InfixExpression@@expiresIn != null && expiresIn != 0 @TO@ IfStatement@@if (expiresIn != null) {  accessToken.setExpiration(new Date(System.currentTimeMillis() + (expiresIn * 1000)));} @AT@ 3570 @LENGTH@ 35
------INS InfixExpression@@expiresIn != null @TO@ InfixExpression@@expiresIn != null && expiresIn != 0 @AT@ 3570 @LENGTH@ 17
---------MOV SimpleName@@expiresIn @TO@ InfixExpression@@expiresIn != null @AT@ 3570 @LENGTH@ 9
---------MOV Operator@@!= @TO@ InfixExpression@@expiresIn != null @AT@ 3579 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@expiresIn != null @AT@ 3583 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@expiresIn != null && expiresIn != 0 @AT@ 3587 @LENGTH@ 2
------INS InfixExpression@@expiresIn != 0 @TO@ InfixExpression@@expiresIn != null && expiresIn != 0 @AT@ 3591 @LENGTH@ 14
---------INS SimpleName@@expiresIn @TO@ InfixExpression@@expiresIn != 0 @AT@ 3591 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@expiresIn != 0 @AT@ 3600 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@expiresIn != 0 @AT@ 3604 @LENGTH@ 1
---DEL InfixExpression@@expiresIn != null @AT@ 3570 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2126 @LENGTH@ 697
---UPD MethodInvocation@@from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2126 @LENGTH@ 696
------UPD MethodInvocation@@MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder"] @AT@ 2126 @LENGTH@ 97
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2131 @LENGTH@ 91
------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2170 @LENGTH@ 52


UPD ThrowStatement@@ClassInstanceCreation:new HiveException(e,ErrorMsg.GENERIC_ERROR,"in database" + desc.getDbName()) @TO@ ClassInstanceCreation:new HiveException(e,ErrorMsg.GENERIC_ERROR,"in database " + desc.getDbName()) @AT@ 3809 @LENGTH@ 85
---UPD ClassInstanceCreation@@HiveException[e, ErrorMsg.GENERIC_ERROR, "in database" + desc.getDbName()] @TO@ HiveException[e, ErrorMsg.GENERIC_ERROR, "in database " + desc.getDbName()] @AT@ 3815 @LENGTH@ 78
------UPD InfixExpression@@"in database" + desc.getDbName() @TO@ "in database " + desc.getDbName() @AT@ 3860 @LENGTH@ 32
---------UPD StringLiteral@@"in database" @TO@ "in database " @AT@ 3860 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]SecurityMockServerConfigurersOAuth2ClientTests, AbstractMockServerConfigurersTests @AT@ 5938 @LENGTH@ 296
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5938 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5945 @LENGTH@ 4
---INS SimpleName@@MethodName:oauth2ClientWhenPrincipalNameThenUses @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5950 @LENGTH@ 37
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5997 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 6011 @LENGTH@ 220
------INS MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @TO@ ExpressionStatement@@MethodInvocation:this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 219
---------INS MethodInvocation@@MethodName:expectBody:[String.class] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 193
------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:expectBody:[String.class] @AT@ 6191 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:isOk:[] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 163
---------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 156
---------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 136
---------INS MethodInvocation@@MethodName:uri:["/client"] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 120
------------INS StringLiteral@@"/client" @TO@ MethodInvocation@@MethodName:uri:["/client"] @AT@ 6121 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 105
---------INS MethodInvocation@@MethodName:mutateWith:[mockOAuth2Client("registration-id").principalName("test-subject")] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 94
------------INS MethodInvocation@@mockOAuth2Client("registration-id").principalName("test-subject") @TO@ MethodInvocation@@MethodName:mutateWith:[mockOAuth2Client("registration-id").principalName("test-subject")] @AT@ 6034 @LENGTH@ 70
---------------INS MethodInvocation@@MethodName:mockOAuth2Client:["registration-id"] @TO@ MethodInvocation@@mockOAuth2Client("registration-id").principalName("test-subject") @AT@ 6034 @LENGTH@ 35
------------------INS StringLiteral@@"registration-id" @TO@ MethodInvocation@@MethodName:mockOAuth2Client:["registration-id"] @AT@ 6051 @LENGTH@ 17
---------------INS SimpleName@@MethodName:principalName:["test-subject"] @TO@ MethodInvocation@@mockOAuth2Client("registration-id").principalName("test-subject") @AT@ 6075 @LENGTH@ 29
------------------INS StringLiteral@@"test-subject" @TO@ SimpleName@@MethodName:principalName:["test-subject"] @AT@ 6089 @LENGTH@ 14
---------INS FieldAccess@@this.client @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6011 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.client @AT@ 6011 @LENGTH@ 4
------------INS SimpleName@@client @TO@ FieldAccess@@this.client @AT@ 6016 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:["test-subject"] @TO@ MethodInvocation@@this.client.mutateWith(mockOAuth2Client("registration-id").principalName("test-subject")).get().uri("/client").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("test-subject") @AT@ 6205 @LENGTH@ 25
------------INS StringLiteral@@"test-subject" @TO@ SimpleName@@MethodName:isEqualTo:["test-subject"] @AT@ 6215 @LENGTH@ 14


UPD VariableDeclarationStatement@@Boolean afterUnderscore=false; @TO@ boolean afterUnderscore=false; @AT@ 8604 @LENGTH@ 32
---DEL SimpleType@@Boolean @AT@ 8604 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@Boolean afterUnderscore=false; @AT@ 8604 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:template.findAll(IndexedSample.class).delayElements(Duration.ofMillis(200)).as(StepVerifier::create).verifyComplete() @TO@ MethodInvocation:template.findAll(IndexedSample.class).defaultIfEmpty(new IndexedSample()).delayElements(Duration.ofMillis(500)).then().as(StepVerifier::create).verifyComplete() @AT@ 7116 @LENGTH@ 201
---UPD MethodInvocation@@template.findAll(IndexedSample.class).delayElements(Duration.ofMillis(200)).as(StepVerifier::create).verifyComplete() @TO@ template.findAll(IndexedSample.class).defaultIfEmpty(new IndexedSample()).delayElements(Duration.ofMillis(500)).then().as(StepVerifier::create).verifyComplete() @AT@ 7116 @LENGTH@ 200
------INS MethodInvocation@@MethodName:then:[] @TO@ MethodInvocation@@template.findAll(IndexedSample.class).delayElements(Duration.ofMillis(200)).as(StepVerifier::create).verifyComplete() @AT@ 7116 @LENGTH@ 193
------UPD MethodInvocation@@MethodName:delayElements:[Duration.ofMillis(200)] @TO@ MethodName:delayElements:[Duration.ofMillis(500)] @AT@ 7116 @LENGTH@ 83
---------UPD MethodInvocation@@Duration.ofMillis(200) @TO@ Duration.ofMillis(500) @AT@ 7176 @LENGTH@ 22
------------UPD SimpleName@@MethodName:ofMillis:[200] @TO@ MethodName:ofMillis:[500] @AT@ 7185 @LENGTH@ 13
---------------UPD NumberLiteral@@200 @TO@ 500 @AT@ 7194 @LENGTH@ 3
------INS MethodInvocation@@MethodName:defaultIfEmpty:[new IndexedSample()] @TO@ MethodInvocation@@template.findAll(IndexedSample.class).delayElements(Duration.ofMillis(200)).as(StepVerifier::create).verifyComplete() @AT@ 7116 @LENGTH@ 73
---------INS ClassInstanceCreation@@IndexedSample[] @TO@ MethodInvocation@@MethodName:defaultIfEmpty:[new IndexedSample()] @AT@ 7169 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@IndexedSample[] @AT@ 7169 @LENGTH@ 3
------------INS SimpleType@@IndexedSample @TO@ ClassInstanceCreation@@IndexedSample[] @AT@ 7173 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizeRequestTests,  @AT@ 4658 @LENGTH@ 532
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @AT@ 4658 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @AT@ 4665 @LENGTH@ 4
---INS SimpleName@@MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @AT@ 4670 @LENGTH@ 69
---INS VariableDeclarationStatement@@OAuth2AuthorizeRequest authorizeRequest=OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build(); @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @AT@ 4746 @LENGTH@ 180
------INS SimpleType@@OAuth2AuthorizeRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizeRequest authorizeRequest=OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build(); @AT@ 4746 @LENGTH@ 22
------INS VariableDeclarationFragment@@authorizeRequest=OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizeRequest authorizeRequest=OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build(); @AT@ 4769 @LENGTH@ 156
---------INS SimpleName@@authorizeRequest @TO@ VariableDeclarationFragment@@authorizeRequest=OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @AT@ 4769 @LENGTH@ 16
---------INS MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @TO@ VariableDeclarationFragment@@authorizeRequest=OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @AT@ 4788 @LENGTH@ 137
------------INS MethodInvocation@@MethodName:principal:["principalName"] @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @AT@ 4788 @LENGTH@ 124
---------------INS StringLiteral@@"principalName" @TO@ MethodInvocation@@MethodName:principal:["principalName"] @AT@ 4896 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:withClientRegistrationId:[this.clientRegistration.getRegistrationId()] @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @AT@ 4788 @LENGTH@ 92
---------------INS MethodInvocation@@this.clientRegistration.getRegistrationId() @TO@ MethodInvocation@@MethodName:withClientRegistrationId:[this.clientRegistration.getRegistrationId()] @AT@ 4836 @LENGTH@ 43
------------------INS FieldAccess@@this.clientRegistration @TO@ MethodInvocation@@this.clientRegistration.getRegistrationId() @AT@ 4836 @LENGTH@ 23
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 4836 @LENGTH@ 4
---------------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 4841 @LENGTH@ 18
------------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@this.clientRegistration.getRegistrationId() @AT@ 4860 @LENGTH@ 19
------------INS SimpleName@@Name:OAuth2AuthorizeRequest @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @AT@ 4788 @LENGTH@ 22
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal("principalName").build() @AT@ 4918 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizeRequest.getClientRegistrationId()).isEqualTo(this.clientRegistration.getRegistrationId()) @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @AT@ 4930 @LENGTH@ 110
------INS MethodInvocation@@assertThat(authorizeRequest.getClientRegistrationId()).isEqualTo(this.clientRegistration.getRegistrationId()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizeRequest.getClientRegistrationId()).isEqualTo(this.clientRegistration.getRegistrationId()) @AT@ 4930 @LENGTH@ 109
---------INS MethodInvocation@@MethodName:assertThat:[authorizeRequest.getClientRegistrationId()] @TO@ MethodInvocation@@assertThat(authorizeRequest.getClientRegistrationId()).isEqualTo(this.clientRegistration.getRegistrationId()) @AT@ 4930 @LENGTH@ 54
------------INS MethodInvocation@@authorizeRequest.getClientRegistrationId() @TO@ MethodInvocation@@MethodName:assertThat:[authorizeRequest.getClientRegistrationId()] @AT@ 4941 @LENGTH@ 42
---------------INS SimpleName@@Name:authorizeRequest @TO@ MethodInvocation@@authorizeRequest.getClientRegistrationId() @AT@ 4941 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getClientRegistrationId:[] @TO@ MethodInvocation@@authorizeRequest.getClientRegistrationId() @AT@ 4958 @LENGTH@ 25
---------INS SimpleName@@MethodName:isEqualTo:[this.clientRegistration.getRegistrationId()] @TO@ MethodInvocation@@assertThat(authorizeRequest.getClientRegistrationId()).isEqualTo(this.clientRegistration.getRegistrationId()) @AT@ 4985 @LENGTH@ 54
------------INS MethodInvocation@@this.clientRegistration.getRegistrationId() @TO@ SimpleName@@MethodName:isEqualTo:[this.clientRegistration.getRegistrationId()] @AT@ 4995 @LENGTH@ 43
---------------INS FieldAccess@@this.clientRegistration @TO@ MethodInvocation@@this.clientRegistration.getRegistrationId() @AT@ 4995 @LENGTH@ 23
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 4995 @LENGTH@ 4
------------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 5000 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@this.clientRegistration.getRegistrationId() @AT@ 5019 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizeRequest.getAuthorizedClient()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @AT@ 5043 @LENGTH@ 60
------INS MethodInvocation@@assertThat(authorizeRequest.getAuthorizedClient()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizeRequest.getAuthorizedClient()).isNull() @AT@ 5043 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:assertThat:[authorizeRequest.getAuthorizedClient()] @TO@ MethodInvocation@@assertThat(authorizeRequest.getAuthorizedClient()).isNull() @AT@ 5043 @LENGTH@ 50
------------INS MethodInvocation@@authorizeRequest.getAuthorizedClient() @TO@ MethodInvocation@@MethodName:assertThat:[authorizeRequest.getAuthorizedClient()] @AT@ 5054 @LENGTH@ 38
---------------INS SimpleName@@Name:authorizeRequest @TO@ MethodInvocation@@authorizeRequest.getAuthorizedClient() @AT@ 5054 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getAuthorizedClient:[] @TO@ MethodInvocation@@authorizeRequest.getAuthorizedClient() @AT@ 5071 @LENGTH@ 21
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(authorizeRequest.getAuthorizedClient()).isNull() @AT@ 5094 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizeRequest.getPrincipal().getName()).isEqualTo("principalName") @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameProvidedThenPrincipalCreated,  @AT@ 5106 @LENGTH@ 81
------INS MethodInvocation@@assertThat(authorizeRequest.getPrincipal().getName()).isEqualTo("principalName") @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizeRequest.getPrincipal().getName()).isEqualTo("principalName") @AT@ 5106 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:assertThat:[authorizeRequest.getPrincipal().getName()] @TO@ MethodInvocation@@assertThat(authorizeRequest.getPrincipal().getName()).isEqualTo("principalName") @AT@ 5106 @LENGTH@ 53
------------INS MethodInvocation@@authorizeRequest.getPrincipal().getName() @TO@ MethodInvocation@@MethodName:assertThat:[authorizeRequest.getPrincipal().getName()] @AT@ 5117 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:getPrincipal:[] @TO@ MethodInvocation@@authorizeRequest.getPrincipal().getName() @AT@ 5117 @LENGTH@ 31
---------------INS SimpleName@@Name:authorizeRequest @TO@ MethodInvocation@@authorizeRequest.getPrincipal().getName() @AT@ 5117 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authorizeRequest.getPrincipal().getName() @AT@ 5149 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["principalName"] @TO@ MethodInvocation@@assertThat(authorizeRequest.getPrincipal().getName()).isEqualTo("principalName") @AT@ 5160 @LENGTH@ 26
------------INS StringLiteral@@"principalName" @TO@ SimpleName@@MethodName:isEqualTo:["principalName"] @AT@ 5170 @LENGTH@ 15


INS IfStatement@@if (path.startsWith("http:")) {  return path;} @TO@ MethodDeclaration@@public, static, String, MethodName:compactPath, String path, String separator,  @AT@ 8317 @LENGTH@ 66
---INS MethodInvocation@@path.startsWith("http:") @TO@ IfStatement@@if (path.startsWith("http:")) {  return path;} @AT@ 8321 @LENGTH@ 24
------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.startsWith("http:") @AT@ 8321 @LENGTH@ 4
------INS SimpleName@@MethodName:startsWith:["http:"] @TO@ MethodInvocation@@path.startsWith("http:") @AT@ 8326 @LENGTH@ 19
---------INS StringLiteral@@"http:" @TO@ SimpleName@@MethodName:startsWith:["http:"] @AT@ 8337 @LENGTH@ 7
---INS Block@@ThenBody:{  return path;} @TO@ IfStatement@@if (path.startsWith("http:")) {  return path;} @AT@ 8347 @LENGTH@ 36
------INS ReturnStatement@@SimpleName:path @TO@ Block@@ThenBody:{  return path;} @AT@ 8361 @LENGTH@ 12
---------INS SimpleName@@path @TO@ ReturnStatement@@SimpleName:path @AT@ 8368 @LENGTH@ 4


UPD TypeDeclaration@@[public, abstract]SessionCreationEvent, ApplicationEvent @TO@ [public, abstract]SessionCreationEvent, AbstractSessionEvent @AT@ 903 @LENGTH@ 138
---UPD SimpleType@@ApplicationEvent @TO@ AbstractSessionEvent @AT@ 954 @LENGTH@ 16


UPD Block@@ThenBody:{  pred=lan.createPredicate(expression);  pred.init(context);  expr=lan.createExpression(expression);  expr.init(context);} @TO@ ThenBody:{  pred=lan.createPredicate(expression);  pred.init(context);  Expression newExpression=lan.createExpression(expression);  newExpression.init(context);  expr=newExpression;} @AT@ 25531 @LENGTH@ 280
---INS VariableDeclarationStatement@@Expression newExpression=lan.createExpression(expression); @TO@ Block@@ThenBody:{  pred=lan.createPredicate(expression);  pred.init(context);  expr=lan.createExpression(expression);  expr.init(context);} @AT@ 25689 @LENGTH@ 60
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression newExpression=lan.createExpression(expression); @AT@ 25689 @LENGTH@ 10
------INS VariableDeclarationFragment@@newExpression=lan.createExpression(expression) @TO@ VariableDeclarationStatement@@Expression newExpression=lan.createExpression(expression); @AT@ 25700 @LENGTH@ 48
---------MOV MethodInvocation@@lan.createExpression(expression) @TO@ VariableDeclarationFragment@@newExpression=lan.createExpression(expression) @AT@ 25696 @LENGTH@ 32
---------INS SimpleName@@newExpression @TO@ VariableDeclarationFragment@@newExpression=lan.createExpression(expression) @AT@ 25700 @LENGTH@ 13
---DEL ExpressionStatement@@Assignment:expr=lan.createExpression(expression) @AT@ 25689 @LENGTH@ 40
------DEL Assignment@@expr=lan.createExpression(expression) @AT@ 25689 @LENGTH@ 39
---------DEL SimpleName@@expr @AT@ 25689 @LENGTH@ 4
---------DEL Operator@@= @AT@ 25693 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:expr.init(context) @TO@ MethodInvocation:newExpression.init(context) @AT@ 25762 @LENGTH@ 19
------UPD MethodInvocation@@expr.init(context) @TO@ newExpression.init(context) @AT@ 25762 @LENGTH@ 18
---------UPD SimpleName@@Name:expr @TO@ Name:newExpression @AT@ 25762 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:expr=newExpression @TO@ Block@@ThenBody:{  pred=lan.createPredicate(expression);  pred.init(context);  expr=lan.createExpression(expression);  expr.init(context);} @AT@ 25843 @LENGTH@ 21
------INS Assignment@@expr=newExpression @TO@ ExpressionStatement@@Assignment:expr=newExpression @AT@ 25843 @LENGTH@ 20
---------INS SimpleName@@expr @TO@ Assignment@@expr=newExpression @AT@ 25843 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@expr=newExpression @AT@ 25847 @LENGTH@ 1
---------INS SimpleName@@newExpression @TO@ Assignment@@expr=newExpression @AT@ 25850 @LENGTH@ 13


INS ExpressionStatement@@Assignment:uri=camelContext.resolvePropertyPlaceholders(uri) @TO@ MethodDeclaration@@protected, Expression, MethodName:createExpression, String uri,  @AT@ 3268 @LENGTH@ 52
---INS Assignment@@uri=camelContext.resolvePropertyPlaceholders(uri) @TO@ ExpressionStatement@@Assignment:uri=camelContext.resolvePropertyPlaceholders(uri) @AT@ 3268 @LENGTH@ 51
------INS SimpleName@@uri @TO@ Assignment@@uri=camelContext.resolvePropertyPlaceholders(uri) @AT@ 3268 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@uri=camelContext.resolvePropertyPlaceholders(uri) @AT@ 3271 @LENGTH@ 1
------INS MethodInvocation@@camelContext.resolvePropertyPlaceholders(uri) @TO@ Assignment@@uri=camelContext.resolvePropertyPlaceholders(uri) @AT@ 3274 @LENGTH@ 45
---------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(uri) @AT@ 3274 @LENGTH@ 12
---------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[uri] @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(uri) @AT@ 3287 @LENGTH@ 32
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[uri] @AT@ 3315 @LENGTH@ 3


INS ExpressionStatement@@Assignment:loginConfig=component.getLoginConfig() @TO@ MethodDeclaration@@public, voidMethodName:AbstractSalesforceProcessor, final SalesforceEndpoint endpoint,  @AT@ 2685 @LENGTH@ 41
---INS Assignment@@loginConfig=component.getLoginConfig() @TO@ ExpressionStatement@@Assignment:loginConfig=component.getLoginConfig() @AT@ 2685 @LENGTH@ 40
------INS SimpleName@@loginConfig @TO@ Assignment@@loginConfig=component.getLoginConfig() @AT@ 2685 @LENGTH@ 11
------INS Operator@@= @TO@ Assignment@@loginConfig=component.getLoginConfig() @AT@ 2696 @LENGTH@ 1
------INS MethodInvocation@@component.getLoginConfig() @TO@ Assignment@@loginConfig=component.getLoginConfig() @AT@ 2699 @LENGTH@ 26
---------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getLoginConfig() @AT@ 2699 @LENGTH@ 9
---------INS SimpleName@@MethodName:getLoginConfig:[] @TO@ MethodInvocation@@component.getLoginConfig() @AT@ 2709 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:Thread.sleep(200) @TO@ MethodDeclaration@@public, void, MethodName:testAggregateClosedCorrelationKeyCache, Exception,  @AT@ 3399 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(200) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(200) @AT@ 3399 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(200) @AT@ 3399 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[200] @TO@ MethodInvocation@@Thread.sleep(200) @AT@ 3406 @LENGTH@ 10
---------INS NumberLiteral@@200 @TO@ SimpleName@@MethodName:sleep:[200] @AT@ 3412 @LENGTH@ 3


DEL FieldDeclaration@@private, static, final, String, [INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE="invalid_redirect_uri_parameter"] @AT@ 1411 @LENGTH@ 105
---DEL Modifier@@private @AT@ 1411 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1419 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1426 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1432 @LENGTH@ 6
---DEL VariableDeclarationFragment@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE="invalid_redirect_uri_parameter" @AT@ 1439 @LENGTH@ 76
------DEL SimpleName@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE @AT@ 1439 @LENGTH@ 41
------DEL StringLiteral@@"invalid_redirect_uri_parameter" @AT@ 1483 @LENGTH@ 32


UPD MethodDeclaration@@JwkDefinitionHolder, MethodName:getDefinitionLoadIfNecessary, String keyId,  @TO@ JwkDefinitionHolder, MethodName:getDefinitionLoadIfNecessary, String keyId, String x5t,  @AT@ 3209 @LENGTH@ 611
---UPD VariableDeclarationStatement@@JwkDefinitionHolder result=this.getDefinition(keyId); @TO@ JwkDefinitionHolder result=this.getDefinition(keyId,x5t); @AT@ 3256 @LENGTH@ 55
------UPD VariableDeclarationFragment@@result=this.getDefinition(keyId) @TO@ result=this.getDefinition(keyId,x5t) @AT@ 3276 @LENGTH@ 34
---------UPD MethodInvocation@@this.getDefinition(keyId) @TO@ this.getDefinition(keyId,x5t) @AT@ 3285 @LENGTH@ 25
------------UPD SimpleName@@MethodName:getDefinition:[keyId] @TO@ MethodName:getDefinition:[keyId, x5t] @AT@ 3290 @LENGTH@ 20
---------------INS SimpleName@@x5t @TO@ SimpleName@@MethodName:getDefinition:[keyId] @AT@ 3570 @LENGTH@ 3
---UPD SynchronizedStatement@@synchronized (this.jwkDefinitions) {  result=this.getDefinition(keyId);  if (result != null) {    return result;  }  Map<String,JwkDefinitionHolder> newJwkDefinitions=new LinkedHashMap<String,JwkDefinitionHolder>();  for (  URL jwkSetUrl : jwkSetUrls) {    newJwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  this.jwkDefinitions.clear();  this.jwkDefinitions.putAll(newJwkDefinitions);  return this.getDefinition(keyId);} @TO@ synchronized (this.jwkDefinitions) {  result=this.getDefinition(keyId,x5t);  if (result != null) {    return result;  }  Map<String,JwkDefinitionHolder> newJwkDefinitions=new LinkedHashMap<String,JwkDefinitionHolder>();  for (  URL jwkSetUrl : jwkSetUrls) {    newJwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  this.jwkDefinitions.clear();  this.jwkDefinitions.putAll(newJwkDefinitions);  return this.getDefinition(keyId,x5t);} @AT@ 3360 @LENGTH@ 457
------UPD Block@@SyncBody:{  result=this.getDefinition(keyId);  if (result != null) {    return result;  }  Map<String,JwkDefinitionHolder> newJwkDefinitions=new LinkedHashMap<String,JwkDefinitionHolder>();  for (  URL jwkSetUrl : jwkSetUrls) {    newJwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  this.jwkDefinitions.clear();  this.jwkDefinitions.putAll(newJwkDefinitions);  return this.getDefinition(keyId);} @TO@ SyncBody:{  result=this.getDefinition(keyId,x5t);  if (result != null) {    return result;  }  Map<String,JwkDefinitionHolder> newJwkDefinitions=new LinkedHashMap<String,JwkDefinitionHolder>();  for (  URL jwkSetUrl : jwkSetUrls) {    newJwkDefinitions.putAll(loadJwkDefinitions(jwkSetUrl));  }  this.jwkDefinitions.clear();  this.jwkDefinitions.putAll(newJwkDefinitions);  return this.getDefinition(keyId,x5t);} @AT@ 3395 @LENGTH@ 422
---------UPD ExpressionStatement@@Assignment:result=this.getDefinition(keyId) @TO@ Assignment:result=this.getDefinition(keyId,x5t) @AT@ 3400 @LENGTH@ 35
------------UPD Assignment@@result=this.getDefinition(keyId) @TO@ result=this.getDefinition(keyId,x5t) @AT@ 3400 @LENGTH@ 34
---------------UPD MethodInvocation@@this.getDefinition(keyId) @TO@ this.getDefinition(keyId,x5t) @AT@ 3409 @LENGTH@ 25
------------------UPD SimpleName@@MethodName:getDefinition:[keyId] @TO@ MethodName:getDefinition:[keyId, x5t] @AT@ 3414 @LENGTH@ 20
---------------------INS SimpleName@@x5t @TO@ SimpleName@@MethodName:getDefinition:[keyId] @AT@ 3699 @LENGTH@ 3
---------UPD ReturnStatement@@MethodInvocation:this.getDefinition(keyId) @TO@ MethodInvocation:this.getDefinition(keyId,x5t) @AT@ 3780 @LENGTH@ 33
------------UPD MethodInvocation@@this.getDefinition(keyId) @TO@ this.getDefinition(keyId,x5t) @AT@ 3787 @LENGTH@ 25
---------------UPD SimpleName@@MethodName:getDefinition:[keyId] @TO@ MethodName:getDefinition:[keyId, x5t] @AT@ 3792 @LENGTH@ 20
------------------INS SimpleName@@x5t @TO@ SimpleName@@MethodName:getDefinition:[keyId] @AT@ 4082 @LENGTH@ 3
---INS SingleVariableDeclaration@@String x5t @TO@ MethodDeclaration@@JwkDefinitionHolder, MethodName:getDefinitionLoadIfNecessary, String keyId,  @AT@ 3499 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String x5t @AT@ 3499 @LENGTH@ 6
------INS SimpleName@@x5t @TO@ SingleVariableDeclaration@@String x5t @AT@ 3506 @LENGTH@ 3


DEL MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 9983 @LENGTH@ 754
---DEL Modifier@@public @AT@ 9983 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 9990 @LENGTH@ 4
---DEL SimpleName@@MethodName:execute @AT@ 9995 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final OperationContext context @AT@ 10003 @LENGTH@ 30
------DEL Modifier@@final @AT@ 10003 @LENGTH@ 5
------DEL SimpleType@@OperationContext @AT@ 10009 @LENGTH@ 16
------DEL SimpleName@@context @AT@ 10026 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final ModelNode operation @AT@ 10035 @LENGTH@ 25
------DEL Modifier@@final @AT@ 10035 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 10041 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 10051 @LENGTH@ 9
---DEL SimpleType@@OperationFailedException @AT@ 10069 @LENGTH@ 24
---DEL ExpressionStatement@@SuperMethodInvocation:super.execute(context,operation) @AT@ 10108 @LENGTH@ 34
------DEL SuperMethodInvocation@@super.execute(context,operation) @AT@ 10108 @LENGTH@ 33
---------DEL SimpleName@@MethodName:execute:[context, operation] @AT@ 10114 @LENGTH@ 7
---------DEL SimpleName@@context @AT@ 10122 @LENGTH@ 7
---------DEL SimpleName@@operation @AT@ 10131 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:context.addStep(new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    final Collection<String> references=Filters.getFilterReferences(context.getCurrentAddress());
    if (!references.isEmpty()) {
      throw LoggingLogger.ROOT_LOGGER.cannotRemoveFilter(context.getCurrentAddressValue(),references);
    }
  }
}
,OperationContext.Stage.MODEL) @AT@ 10155 @LENGTH@ 572
------DEL MethodInvocation@@context.addStep(new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    final Collection<String> references=Filters.getFilterReferences(context.getCurrentAddress());
    if (!references.isEmpty()) {
      throw LoggingLogger.ROOT_LOGGER.cannotRemoveFilter(context.getCurrentAddressValue(),references);
    }
  }
}
,OperationContext.Stage.MODEL) @AT@ 10155 @LENGTH@ 571
---------DEL SimpleName@@Name:context @AT@ 10155 @LENGTH@ 7
---------DEL SimpleName@@MethodName:addStep:[new OperationStepHandler(){
  @Override public void execute(  final OperationContext context,  final ModelNode operation) throws OperationFailedException {
    final Collection<String> references=Filters.getFilterReferences(context.getCurrentAddress());
    if (!references.isEmpty()) {
      throw LoggingLogger.ROOT_LOGGER.cannotRemoveFilter(context.getCurrentAddressValue(),references);
    }
  }
}
, OperationContext.Stage.MODEL] @AT@ 10163 @LENGTH@ 563
------------DEL ClassInstanceCreation@@OperationStepHandler[] @AT@ 10171 @LENGTH@ 524
---------------DEL New@@new @AT@ 10171 @LENGTH@ 3
---------------DEL SimpleType@@OperationStepHandler @AT@ 10175 @LENGTH@ 20
---------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 10198 @LENGTH@ 497
------------------DEL MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 10242 @LENGTH@ 439
---------------------DEL Modifier@@public @AT@ 10242 @LENGTH@ 6
---------------------DEL PrimitiveType@@void @AT@ 10249 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:execute @AT@ 10254 @LENGTH@ 7
---------------------DEL SingleVariableDeclaration@@final OperationContext context @AT@ 10262 @LENGTH@ 30
------------------------DEL Modifier@@final @AT@ 10262 @LENGTH@ 5
------------------------DEL SimpleType@@OperationContext @AT@ 10268 @LENGTH@ 16
------------------------DEL SimpleName@@context @AT@ 10285 @LENGTH@ 7
---------------------DEL SingleVariableDeclaration@@final ModelNode operation @AT@ 10294 @LENGTH@ 25
------------------------DEL Modifier@@final @AT@ 10294 @LENGTH@ 5
------------------------DEL SimpleType@@ModelNode @AT@ 10300 @LENGTH@ 9
------------------------DEL SimpleName@@operation @AT@ 10310 @LENGTH@ 9
---------------------DEL SimpleType@@OperationFailedException @AT@ 10328 @LENGTH@ 24
---------------------DEL VariableDeclarationStatement@@final Collection<String> references=Filters.getFilterReferences(context.getCurrentAddress()); @AT@ 10375 @LENGTH@ 95
------------------------DEL Modifier@@final @AT@ 10375 @LENGTH@ 5
------------------------DEL ParameterizedType@@Collection<String> @AT@ 10381 @LENGTH@ 18
---------------------------DEL SimpleType@@Collection @AT@ 10381 @LENGTH@ 10
---------------------------DEL SimpleType@@String @AT@ 10392 @LENGTH@ 6
------------------------DEL VariableDeclarationFragment@@references=Filters.getFilterReferences(context.getCurrentAddress()) @AT@ 10400 @LENGTH@ 69
---------------------------DEL SimpleName@@references @AT@ 10400 @LENGTH@ 10
---------------------------DEL MethodInvocation@@Filters.getFilterReferences(context.getCurrentAddress()) @AT@ 10413 @LENGTH@ 56
------------------------------DEL SimpleName@@Name:Filters @AT@ 10413 @LENGTH@ 7
------------------------------DEL SimpleName@@MethodName:getFilterReferences:[context.getCurrentAddress()] @AT@ 10421 @LENGTH@ 48
---------------------------------DEL MethodInvocation@@context.getCurrentAddress() @AT@ 10441 @LENGTH@ 27
------------------------------------DEL SimpleName@@Name:context @AT@ 10441 @LENGTH@ 7
------------------------------------DEL SimpleName@@MethodName:getCurrentAddress:[] @AT@ 10449 @LENGTH@ 19
---------------------DEL IfStatement@@if (!references.isEmpty()) {  throw LoggingLogger.ROOT_LOGGER.cannotRemoveFilter(context.getCurrentAddressValue(),references);} @AT@ 10491 @LENGTH@ 172
------------------------DEL PrefixExpression@@!references.isEmpty() @AT@ 10495 @LENGTH@ 21
---------------------------DEL Operator@@! @AT@ 10495 @LENGTH@ 1
---------------------------DEL MethodInvocation@@references.isEmpty() @AT@ 10496 @LENGTH@ 20
------------------------------DEL SimpleName@@Name:references @AT@ 10496 @LENGTH@ 10
------------------------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 10507 @LENGTH@ 9
------------------------DEL Block@@ThenBody:{  throw LoggingLogger.ROOT_LOGGER.cannotRemoveFilter(context.getCurrentAddressValue(),references);} @AT@ 10518 @LENGTH@ 145
---------------------------DEL ThrowStatement@@MethodInvocation:LoggingLogger.ROOT_LOGGER.cannotRemoveFilter(context.getCurrentAddressValue(),references) @AT@ 10544 @LENGTH@ 97
------------------------------DEL MethodInvocation@@LoggingLogger.ROOT_LOGGER.cannotRemoveFilter(context.getCurrentAddressValue(),references) @AT@ 10550 @LENGTH@ 90
---------------------------------DEL QualifiedName@@Name:LoggingLogger.ROOT_LOGGER @AT@ 10550 @LENGTH@ 25
---------------------------------DEL SimpleName@@MethodName:cannotRemoveFilter:[context.getCurrentAddressValue(), references] @AT@ 10576 @LENGTH@ 64
------------------------------------DEL MethodInvocation@@context.getCurrentAddressValue() @AT@ 10595 @LENGTH@ 32
---------------------------------------DEL SimpleName@@Name:context @AT@ 10595 @LENGTH@ 7
---------------------------------------DEL SimpleName@@MethodName:getCurrentAddressValue:[] @AT@ 10603 @LENGTH@ 24
------------------------------------DEL SimpleName@@references @AT@ 10629 @LENGTH@ 10
------------DEL QualifiedName@@OperationContext.Stage.MODEL @AT@ 10697 @LENGTH@ 28
---------------DEL QualifiedName@@OperationContext.Stage @AT@ 10697 @LENGTH@ 22
------------------DEL SimpleName@@OperationContext @AT@ 10697 @LENGTH@ 16
------------------DEL SimpleName@@Stage @AT@ 10714 @LENGTH@ 5
---------------DEL SimpleName@@MODEL @AT@ 10720 @LENGTH@ 5


INS TryStatement@@try {  return getTokenServices().refreshAccessToken(refreshToken,tokenRequest);} catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());}catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @TO@ MethodDeclaration@@protected, OAuth2AccessToken, MethodName:getAccessToken, ClientDetails client, TokenRequest tokenRequest,  @AT@ 2481 @LENGTH@ 421
---MOV ReturnStatement@@MethodInvocation:getTokenServices().refreshAccessToken(refreshToken,tokenRequest) @TO@ TryStatement@@try {  return getTokenServices().refreshAccessToken(refreshToken,tokenRequest);} catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());}catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 2242 @LENGTH@ 73
---INS CatchClause@@catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());} @TO@ TryStatement@@try {  return getTokenServices().refreshAccessToken(refreshToken,tokenRequest);} catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());}catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 2570 @LENGTH@ 175
------INS SingleVariableDeclaration@@AccountStatusException ase @TO@ CatchClause@@catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());} @AT@ 2577 @LENGTH@ 26
---------INS SimpleType@@AccountStatusException @TO@ SingleVariableDeclaration@@AccountStatusException ase @AT@ 2577 @LENGTH@ 22
---------INS SimpleName@@ase @TO@ SingleVariableDeclaration@@AccountStatusException ase @AT@ 2600 @LENGTH@ 3
------INS ThrowStatement@@ClassInstanceCreation:new InvalidGrantException(ase.getMessage()) @TO@ CatchClause@@catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());} @AT@ 2691 @LENGTH@ 50
---------INS ClassInstanceCreation@@InvalidGrantException[ase.getMessage()] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidGrantException(ase.getMessage()) @AT@ 2697 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidGrantException[ase.getMessage()] @AT@ 2697 @LENGTH@ 3
------------INS SimpleType@@InvalidGrantException @TO@ ClassInstanceCreation@@InvalidGrantException[ase.getMessage()] @AT@ 2701 @LENGTH@ 21
------------INS MethodInvocation@@ase.getMessage() @TO@ ClassInstanceCreation@@InvalidGrantException[ase.getMessage()] @AT@ 2723 @LENGTH@ 16
---------------INS SimpleName@@Name:ase @TO@ MethodInvocation@@ase.getMessage() @AT@ 2723 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ase.getMessage() @AT@ 2727 @LENGTH@ 12
---INS CatchClause@@catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @TO@ TryStatement@@try {  return getTokenServices().refreshAccessToken(refreshToken,tokenRequest);} catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());}catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 2746 @LENGTH@ 156
------INS SingleVariableDeclaration@@UsernameNotFoundException e @TO@ CatchClause@@catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 2753 @LENGTH@ 27
---------INS SimpleType@@UsernameNotFoundException @TO@ SingleVariableDeclaration@@UsernameNotFoundException e @AT@ 2753 @LENGTH@ 25
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@UsernameNotFoundException e @AT@ 2779 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new InvalidGrantException(e.getMessage()) @TO@ CatchClause@@catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 2850 @LENGTH@ 48
---------INS ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidGrantException(e.getMessage()) @AT@ 2856 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @AT@ 2856 @LENGTH@ 3
------------INS SimpleType@@InvalidGrantException @TO@ ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @AT@ 2860 @LENGTH@ 21
------------INS MethodInvocation@@e.getMessage() @TO@ ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @AT@ 2882 @LENGTH@ 14
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 2882 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 2884 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:processor.process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
) @TO@ MethodInvocation:processor.process(exchange,doneSync -> {
}
) @AT@ 2959 @LENGTH@ 190
---UPD MethodInvocation@@processor.process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
) @TO@ processor.process(exchange,doneSync -> {
}
) @AT@ 2959 @LENGTH@ 189
------UPD SimpleName@@MethodName:process:[exchange, new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @TO@ MethodName:process:[exchange, doneSync -> {
}
] @AT@ 2969 @LENGTH@ 179
---------DEL ClassInstanceCreation@@AsyncCallback[] @AT@ 2987 @LENGTH@ 160
------------DEL New@@new @AT@ 2987 @LENGTH@ 3
------------DEL SimpleType@@AsyncCallback @AT@ 2991 @LENGTH@ 13
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 3007 @LENGTH@ 140
---------------DEL MethodDeclaration@@public, void, MethodName:done, boolean doneSync,  @AT@ 3051 @LENGTH@ 82
------------------DEL Modifier@@public @AT@ 3051 @LENGTH@ 6
------------------DEL PrimitiveType@@void @AT@ 3058 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:done @AT@ 3063 @LENGTH@ 4
------------------DEL SingleVariableDeclaration@@boolean doneSync @AT@ 3068 @LENGTH@ 16
---------------------DEL PrimitiveType@@boolean @AT@ 3068 @LENGTH@ 7
---------------------DEL SimpleName@@doneSync @AT@ 3076 @LENGTH@ 8
---------INS LambdaExpression@@doneSync -> {
}
 @TO@ SimpleName@@MethodName:process:[exchange, new AsyncCallback(){
  @Override public void done(  boolean doneSync){
  }
}
] @AT@ 2987 @LENGTH@ 51
------------INS VariableDeclarationFragment@@doneSync @TO@ LambdaExpression@@doneSync -> {
}
 @AT@ 2987 @LENGTH@ 8
---------------INS SimpleName@@doneSync @TO@ VariableDeclarationFragment@@doneSync @AT@ 2987 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:key=optionPrefix + "." + optionKey @TO@ Assignment:key=optionPrefix.endsWith(".") ? optionPrefix + optionKey : optionPrefix + "." + optionKey @AT@ 2498 @LENGTH@ 37
---UPD Assignment@@key=optionPrefix + "." + optionKey @TO@ key=optionPrefix.endsWith(".") ? optionPrefix + optionKey : optionPrefix + "." + optionKey @AT@ 2498 @LENGTH@ 36
------INS ConditionalExpression@@optionPrefix.endsWith(".") ? optionPrefix + optionKey : optionPrefix + "." + optionKey @TO@ Assignment@@key=optionPrefix + "." + optionKey @AT@ 2504 @LENGTH@ 86
---------INS MethodInvocation@@optionPrefix.endsWith(".") @TO@ ConditionalExpression@@optionPrefix.endsWith(".") ? optionPrefix + optionKey : optionPrefix + "." + optionKey @AT@ 2504 @LENGTH@ 26
------------INS SimpleName@@Name:optionPrefix @TO@ MethodInvocation@@optionPrefix.endsWith(".") @AT@ 2504 @LENGTH@ 12
------------INS SimpleName@@MethodName:endsWith:["."] @TO@ MethodInvocation@@optionPrefix.endsWith(".") @AT@ 2517 @LENGTH@ 13
---------------INS StringLiteral@@"." @TO@ SimpleName@@MethodName:endsWith:["."] @AT@ 2526 @LENGTH@ 3
---------INS InfixExpression@@optionPrefix + optionKey @TO@ ConditionalExpression@@optionPrefix.endsWith(".") ? optionPrefix + optionKey : optionPrefix + "." + optionKey @AT@ 2533 @LENGTH@ 24
------------INS SimpleName@@optionPrefix @TO@ InfixExpression@@optionPrefix + optionKey @AT@ 2533 @LENGTH@ 12
------------INS Operator@@+ @TO@ InfixExpression@@optionPrefix + optionKey @AT@ 2545 @LENGTH@ 1
------------INS SimpleName@@optionKey @TO@ InfixExpression@@optionPrefix + optionKey @AT@ 2548 @LENGTH@ 9
---------INS InfixExpression@@optionPrefix + "." + optionKey @TO@ ConditionalExpression@@optionPrefix.endsWith(".") ? optionPrefix + optionKey : optionPrefix + "." + optionKey @AT@ 2560 @LENGTH@ 30
------------MOV SimpleName@@optionPrefix @TO@ InfixExpression@@optionPrefix + "." + optionKey @AT@ 2504 @LENGTH@ 12
------------MOV Operator@@+ @TO@ InfixExpression@@optionPrefix + "." + optionKey @AT@ 2516 @LENGTH@ 1
------------MOV StringLiteral@@"." @TO@ InfixExpression@@optionPrefix + "." + optionKey @AT@ 2519 @LENGTH@ 3
------------MOV SimpleName@@optionKey @TO@ InfixExpression@@optionPrefix + "." + optionKey @AT@ 2525 @LENGTH@ 9
------DEL InfixExpression@@optionPrefix + "." + optionKey @AT@ 2504 @LENGTH@ 30


UPD ReturnStatement@@ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/activemq/camel/jmsBridge.xml") @TO@ ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/camel/component/activemq/jmsBridge.xml") @AT@ 5992 @LENGTH@ 85
---UPD ClassInstanceCreation@@ClassPathXmlApplicationContext["org/apache/activemq/camel/jmsBridge.xml"] @TO@ ClassPathXmlApplicationContext["org/apache/camel/component/activemq/jmsBridge.xml"] @AT@ 5999 @LENGTH@ 77
------UPD StringLiteral@@"org/apache/activemq/camel/jmsBridge.xml" @TO@ "org/apache/camel/component/activemq/jmsBridge.xml" @AT@ 6034 @LENGTH@ 41


UPD MethodDeclaration@@static, ServiceSupport, MethodName:camel, final ApplicationContext context,  @TO@ static, CamelContext, MethodName:camel, final ApplicationContext context,  @AT@ 6900 @LENGTH@ 138
---UPD SimpleType@@ServiceSupport @TO@ CamelContext @AT@ 6907 @LENGTH@ 14
---UPD ReturnStatement@@CastExpression:(ServiceSupport)context.getBean(CamelContext.class) @TO@ MethodInvocation:context.getBean(CamelContext.class) @AT@ 6972 @LENGTH@ 60
------DEL CastExpression@@(ServiceSupport)context.getBean(CamelContext.class) @AT@ 6979 @LENGTH@ 52
---------DEL SimpleType@@ServiceSupport @AT@ 6980 @LENGTH@ 14
------MOV MethodInvocation@@context.getBean(CamelContext.class) @TO@ ReturnStatement@@CastExpression:(ServiceSupport)context.getBean(CamelContext.class) @AT@ 6996 @LENGTH@ 35


UPD VariableDeclarationStatement@@ScanResult result=ddbClient.scan(new ScanRequest().withTableName(determineTableName()).withScanFilter(determineScanFilter())); @TO@ ScanResult result=ddbClient.scan(new ScanRequest().withTableName(determineTableName()).withLimit(determineLimit()).withExclusiveStartKey(determineExclusiveStartKey()).withScanFilter(determineScanFilter())); @AT@ 1431 @LENGTH@ 162
---UPD VariableDeclarationFragment@@result=ddbClient.scan(new ScanRequest().withTableName(determineTableName()).withScanFilter(determineScanFilter())) @TO@ result=ddbClient.scan(new ScanRequest().withTableName(determineTableName()).withLimit(determineLimit()).withExclusiveStartKey(determineExclusiveStartKey()).withScanFilter(determineScanFilter())) @AT@ 1442 @LENGTH@ 150
------UPD MethodInvocation@@ddbClient.scan(new ScanRequest().withTableName(determineTableName()).withScanFilter(determineScanFilter())) @TO@ ddbClient.scan(new ScanRequest().withTableName(determineTableName()).withLimit(determineLimit()).withExclusiveStartKey(determineExclusiveStartKey()).withScanFilter(determineScanFilter())) @AT@ 1451 @LENGTH@ 141
---------UPD SimpleName@@MethodName:scan:[new ScanRequest().withTableName(determineTableName()).withScanFilter(determineScanFilter())] @TO@ MethodName:scan:[new ScanRequest().withTableName(determineTableName()).withLimit(determineLimit()).withExclusiveStartKey(determineExclusiveStartKey()).withScanFilter(determineScanFilter())] @AT@ 1461 @LENGTH@ 131
------------UPD MethodInvocation@@new ScanRequest().withTableName(determineTableName()).withScanFilter(determineScanFilter()) @TO@ new ScanRequest().withTableName(determineTableName()).withLimit(determineLimit()).withExclusiveStartKey(determineExclusiveStartKey()).withScanFilter(determineScanFilter()) @AT@ 1466 @LENGTH@ 125
---------------INS MethodInvocation@@MethodName:withLimit:[determineLimit()] @TO@ MethodInvocation@@new ScanRequest().withTableName(determineTableName()).withScanFilter(determineScanFilter()) @AT@ 1466 @LENGTH@ 115
------------------INS MethodInvocation@@MethodName:determineLimit:[] @TO@ MethodInvocation@@MethodName:withLimit:[determineLimit()] @AT@ 1564 @LENGTH@ 16
---------------INS MethodInvocation@@MethodName:withExclusiveStartKey:[determineExclusiveStartKey()] @TO@ MethodInvocation@@new ScanRequest().withTableName(determineTableName()).withScanFilter(determineScanFilter()) @AT@ 1466 @LENGTH@ 184
------------------INS MethodInvocation@@MethodName:determineExclusiveStartKey:[] @TO@ MethodInvocation@@MethodName:withExclusiveStartKey:[determineExclusiveStartKey()] @AT@ 1621 @LENGTH@ 28


UPD TypeDeclaration@@[public, final]Saml2AuthenticationRequestContext,  @TO@ [public]Saml2AuthenticationRequestContext,  @AT@ 1392 @LENGTH@ 4660
---DEL Modifier@@final @AT@ 1399 @LENGTH@ 5


UPD EnumDeclaration@@[static]ReactiveLibrary,  @TO@ [public]ReactiveLibrary,  @AT@ 3013 @LENGTH@ 88
---UPD Modifier@@static @TO@ public @AT@ 3013 @LENGTH@ 6


INS IfStatement@@if (length <= 0) {  throw new IllegalArgumentException("length must be greater than 0");} @TO@ MethodDeclaration@@public, void, MethodName:setLength, int length,  @AT@ 2792 @LENGTH@ 94
---INS InfixExpression@@length <= 0 @TO@ IfStatement@@if (length <= 0) {  throw new IllegalArgumentException("length must be greater than 0");} @AT@ 2796 @LENGTH@ 11
------INS SimpleName@@length @TO@ InfixExpression@@length <= 0 @AT@ 2796 @LENGTH@ 6
------INS Operator@@<= @TO@ InfixExpression@@length <= 0 @AT@ 2802 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@length <= 0 @AT@ 2806 @LENGTH@ 1
---INS Block@@ThenBody:{  throw new IllegalArgumentException("length must be greater than 0");} @TO@ IfStatement@@if (length <= 0) {  throw new IllegalArgumentException("length must be greater than 0");} @AT@ 2809 @LENGTH@ 77
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("length must be greater than 0") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("length must be greater than 0");} @AT@ 2814 @LENGTH@ 68
---------INS ClassInstanceCreation@@IllegalArgumentException["length must be greater than 0"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("length must be greater than 0") @AT@ 2820 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["length must be greater than 0"] @AT@ 2820 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["length must be greater than 0"] @AT@ 2824 @LENGTH@ 24
------------INS StringLiteral@@"length must be greater than 0" @TO@ ClassInstanceCreation@@IllegalArgumentException["length must be greater than 0"] @AT@ 2849 @LENGTH@ 31


INS MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @TO@ TypeDeclaration@@[public, abstract]AbstractMessageListenerContainer, RabbitAccessor[MessageListenerContainer, ApplicationContextAware, BeanNameAware, DisposableBean, ApplicationEventPublisherAware] @AT@ 45006 @LENGTH@ 98
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 45006 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 45013 @LENGTH@ 4
---INS SimpleName@@MethodName:stop @TO@ MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 45018 @LENGTH@ 4
---INS SingleVariableDeclaration@@Runnable callback @TO@ MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 45023 @LENGTH@ 17
------INS SimpleType@@Runnable @TO@ SingleVariableDeclaration@@Runnable callback @AT@ 45023 @LENGTH@ 8
------INS SimpleName@@callback @TO@ SingleVariableDeclaration@@Runnable callback @AT@ 45032 @LENGTH@ 8
---INS TryStatement@@try {  stop();}  finally {  callback.run();} @TO@ MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 45046 @LENGTH@ 55
------INS ExpressionStatement@@MethodInvocation:stop() @TO@ TryStatement@@try {  stop();}  finally {  callback.run();} @AT@ 45055 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:stop:[] @TO@ ExpressionStatement@@MethodInvocation:stop() @AT@ 45055 @LENGTH@ 6
------INS Block@@FinallyBody:{  callback.run();} @TO@ TryStatement@@try {  stop();}  finally {  callback.run();} @AT@ 45077 @LENGTH@ 24
---------INS ExpressionStatement@@MethodInvocation:callback.run() @TO@ Block@@FinallyBody:{  callback.run();} @AT@ 45082 @LENGTH@ 15
------------INS MethodInvocation@@callback.run() @TO@ ExpressionStatement@@MethodInvocation:callback.run() @AT@ 45082 @LENGTH@ 14
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.run() @AT@ 45082 @LENGTH@ 8
---------------INS SimpleName@@MethodName:run:[] @TO@ MethodInvocation@@callback.run() @AT@ 45091 @LENGTH@ 5


UPD TypeDeclaration@@[public]JwtDecoder,  @TO@ [@FunctionalInterface, public]JwtDecoder,  @AT@ 1713 @LENGTH@ 323
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]JwtDecoder,  @AT@ 1713 @LENGTH@ 20


UPD Block@@ElseBody:{  token.setDetails(detailsNode);} @TO@ ElseBody:{  Object details=mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){  });  token.setDetails(details);} @AT@ 3748 @LENGTH@ 39
---INS VariableDeclarationStatement@@Object details=mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
); @TO@ Block@@ElseBody:{  token.setDetails(detailsNode);} @AT@ 3753 @LENGTH@ 90
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object details=mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
); @AT@ 3753 @LENGTH@ 6
------INS VariableDeclarationFragment@@details=mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
) @TO@ VariableDeclarationStatement@@Object details=mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
); @AT@ 3760 @LENGTH@ 82
---------INS SimpleName@@details @TO@ VariableDeclarationFragment@@details=mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
) @AT@ 3760 @LENGTH@ 7
---------INS MethodInvocation@@mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
) @TO@ VariableDeclarationFragment@@details=mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
) @AT@ 3770 @LENGTH@ 72
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
) @AT@ 3770 @LENGTH@ 6
------------INS SimpleName@@MethodName:readValue:[detailsNode.toString(), new TypeReference<Object>(){
}
] @TO@ MethodInvocation@@mapper.readValue(detailsNode.toString(),new TypeReference<Object>(){
}
) @AT@ 3777 @LENGTH@ 65
---------------INS MethodInvocation@@detailsNode.toString() @TO@ SimpleName@@MethodName:readValue:[detailsNode.toString(), new TypeReference<Object>(){
}
] @AT@ 3787 @LENGTH@ 22
------------------INS SimpleName@@Name:detailsNode @TO@ MethodInvocation@@detailsNode.toString() @AT@ 3787 @LENGTH@ 11
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@detailsNode.toString() @AT@ 3799 @LENGTH@ 10
---------------INS ClassInstanceCreation@@TypeReference<Object>[] @TO@ SimpleName@@MethodName:readValue:[detailsNode.toString(), new TypeReference<Object>(){
}
] @AT@ 3811 @LENGTH@ 30
------------------INS New@@new @TO@ ClassInstanceCreation@@TypeReference<Object>[] @AT@ 3811 @LENGTH@ 3
------------------INS ParameterizedType@@TypeReference<Object> @TO@ ClassInstanceCreation@@TypeReference<Object>[] @AT@ 3815 @LENGTH@ 21
---------------------INS SimpleType@@TypeReference @TO@ ParameterizedType@@TypeReference<Object> @AT@ 3815 @LENGTH@ 13
---------------------INS SimpleType@@Object @TO@ ParameterizedType@@TypeReference<Object> @AT@ 3829 @LENGTH@ 6
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@TypeReference<Object>[] @AT@ 3839 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:token.setDetails(detailsNode) @TO@ MethodInvocation:token.setDetails(details) @AT@ 3753 @LENGTH@ 30
------UPD MethodInvocation@@token.setDetails(detailsNode) @TO@ token.setDetails(details) @AT@ 3753 @LENGTH@ 29
---------UPD SimpleName@@MethodName:setDetails:[detailsNode] @TO@ MethodName:setDetails:[details] @AT@ 3759 @LENGTH@ 23
------------UPD SimpleName@@detailsNode @TO@ details @AT@ 3770 @LENGTH@ 11


INS FieldDeclaration@@protected, final, Transformer<K,V>, [nullTransformer=TransformerUtils.<K,V>nullTransformer()] @TO@ TypeDeclaration@@[public]DefaultedMapTest, AbstractIterableMapTest<K,V> @AT@ 1507 @LENGTH@ 93
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, final, Transformer<K,V>, [nullTransformer=TransformerUtils.<K,V>nullTransformer()] @AT@ 1507 @LENGTH@ 9
---INS Modifier@@final @TO@ FieldDeclaration@@protected, final, Transformer<K,V>, [nullTransformer=TransformerUtils.<K,V>nullTransformer()] @AT@ 1517 @LENGTH@ 5
---INS ParameterizedType@@Transformer<K,V> @TO@ FieldDeclaration@@protected, final, Transformer<K,V>, [nullTransformer=TransformerUtils.<K,V>nullTransformer()] @AT@ 1523 @LENGTH@ 17
------INS SimpleType@@Transformer @TO@ ParameterizedType@@Transformer<K,V> @AT@ 1523 @LENGTH@ 11
------INS SimpleType@@K @TO@ ParameterizedType@@Transformer<K,V> @AT@ 1535 @LENGTH@ 1
------INS SimpleType@@V @TO@ ParameterizedType@@Transformer<K,V> @AT@ 1538 @LENGTH@ 1
---INS VariableDeclarationFragment@@nullTransformer=TransformerUtils.<K,V>nullTransformer() @TO@ FieldDeclaration@@protected, final, Transformer<K,V>, [nullTransformer=TransformerUtils.<K,V>nullTransformer()] @AT@ 1541 @LENGTH@ 58
------INS SimpleName@@nullTransformer @TO@ VariableDeclarationFragment@@nullTransformer=TransformerUtils.<K,V>nullTransformer() @AT@ 1541 @LENGTH@ 15
------INS MethodInvocation@@TransformerUtils.<K,V>nullTransformer() @TO@ VariableDeclarationFragment@@nullTransformer=TransformerUtils.<K,V>nullTransformer() @AT@ 1559 @LENGTH@ 40
---------INS SimpleName@@Name:TransformerUtils @TO@ MethodInvocation@@TransformerUtils.<K,V>nullTransformer() @AT@ 1559 @LENGTH@ 16
---------INS SimpleName@@MethodName:nullTransformer:[] @TO@ MethodInvocation@@TransformerUtils.<K,V>nullTransformer() @AT@ 1582 @LENGTH@ 17


UPD TryStatement@@try {  boolean nullProps=this.messageProperties == null;  String contentType=nullProps ? null : this.messageProperties.getContentType();  if (MessageProperties.CONTENT_TYPE_SERIALIZED_OBJECT.equals(contentType)) {    return SerializationUtils.deserialize(new ByteArrayInputStream(this.body),whiteListPatterns,ClassUtils.getDefaultClassLoader()).toString();  }  String encoding=nullProps ? null : this.messageProperties.getContentEncoding();  if (encoding == null) {    encoding=bodyEncoding;  }  if (MessageProperties.CONTENT_TYPE_TEXT_PLAIN.equals(contentType) || MessageProperties.CONTENT_TYPE_JSON.equals(contentType) || MessageProperties.CONTENT_TYPE_JSON_ALT.equals(contentType)|| MessageProperties.CONTENT_TYPE_XML.equals(contentType)) {    return new String(this.body,encoding);  }} catch (Exception e) {} @TO@ try {  boolean nullProps=this.messageProperties == null;  String contentType=nullProps ? null : this.messageProperties.getContentType();  if (MessageProperties.CONTENT_TYPE_SERIALIZED_OBJECT.equals(contentType)) {    return SerializationUtils.deserialize(new ByteArrayInputStream(this.body),whiteListPatterns,ClassUtils.getDefaultClassLoader()).toString();  }  String encoding=encoding(nullProps);  if (MessageProperties.CONTENT_TYPE_TEXT_PLAIN.equals(contentType) || MessageProperties.CONTENT_TYPE_JSON.equals(contentType) || MessageProperties.CONTENT_TYPE_JSON_ALT.equals(contentType)|| MessageProperties.CONTENT_TYPE_XML.equals(contentType)) {    return new String(this.body,encoding);  }} catch (Exception e) {} @AT@ 4016 @LENGTH@ 887
---INS VariableDeclarationStatement@@String encoding=encoding(nullProps); @TO@ TryStatement@@try {  boolean nullProps=this.messageProperties == null;  String contentType=nullProps ? null : this.messageProperties.getContentType();  if (MessageProperties.CONTENT_TYPE_SERIALIZED_OBJECT.equals(contentType)) {    return SerializationUtils.deserialize(new ByteArrayInputStream(this.body),whiteListPatterns,ClassUtils.getDefaultClassLoader()).toString();  }  String encoding=nullProps ? null : this.messageProperties.getContentEncoding();  if (encoding == null) {    encoding=bodyEncoding;  }  if (MessageProperties.CONTENT_TYPE_TEXT_PLAIN.equals(contentType) || MessageProperties.CONTENT_TYPE_JSON.equals(contentType) || MessageProperties.CONTENT_TYPE_JSON_ALT.equals(contentType)|| MessageProperties.CONTENT_TYPE_XML.equals(contentType)) {    return new String(this.body,encoding);  }} catch (Exception e) {} @AT@ 4400 @LENGTH@ 38
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String encoding=encoding(nullProps); @AT@ 4400 @LENGTH@ 6
------INS VariableDeclarationFragment@@encoding=encoding(nullProps) @TO@ VariableDeclarationStatement@@String encoding=encoding(nullProps); @AT@ 4407 @LENGTH@ 30
---------INS SimpleName@@encoding @TO@ VariableDeclarationFragment@@encoding=encoding(nullProps) @AT@ 4407 @LENGTH@ 8
---------INS MethodInvocation@@encoding(nullProps) @TO@ VariableDeclarationFragment@@encoding=encoding(nullProps) @AT@ 4418 @LENGTH@ 19
------------INS SimpleName@@MethodName:encoding:[nullProps] @TO@ MethodInvocation@@encoding(nullProps) @AT@ 4418 @LENGTH@ 19
---------------INS SimpleName@@nullProps @TO@ SimpleName@@MethodName:encoding:[nullProps] @AT@ 4427 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:this.rest.mutateWith(mockOidcLogin()).get().uri("/").exchange().expectBody(String.class).value(containsString("test-subject")) @TO@ MethodInvocation:this.rest.mutateWith(mockOAuth2Login()).get().uri("/").exchange().expectBody(String.class).value(containsString("test-subject")) @AT@ 3209 @LENGTH@ 139
---UPD MethodInvocation@@this.rest.mutateWith(mockOidcLogin()).get().uri("/").exchange().expectBody(String.class).value(containsString("test-subject")) @TO@ this.rest.mutateWith(mockOAuth2Login()).get().uri("/").exchange().expectBody(String.class).value(containsString("test-subject")) @AT@ 3209 @LENGTH@ 138
------UPD MethodInvocation@@MethodName:mutateWith:[mockOidcLogin()] @TO@ MethodName:mutateWith:[mockOAuth2Login()] @AT@ 3209 @LENGTH@ 37
---------UPD MethodInvocation@@MethodName:mockOidcLogin:[] @TO@ MethodName:mockOAuth2Login:[] @AT@ 3230 @LENGTH@ 15


UPD CatchClause@@catch (Exception e) {} @TO@ catch (Exception e) {  LOG.debug("Error evaluating expression: " + expression + ". This exception is ignored.",e);} @AT@ 12742 @LENGTH@ 53
---INS ExpressionStatement@@MethodInvocation:LOG.debug("Error evaluating expression: " + expression + ". This exception is ignored.",e) @TO@ CatchClause@@catch (Exception e) {} @AT@ 12780 @LENGTH@ 92
------INS MethodInvocation@@LOG.debug("Error evaluating expression: " + expression + ". This exception is ignored.",e) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Error evaluating expression: " + expression + ". This exception is ignored.",e) @AT@ 12780 @LENGTH@ 91
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Error evaluating expression: " + expression + ". This exception is ignored.",e) @AT@ 12780 @LENGTH@ 3
---------INS SimpleName@@MethodName:debug:["Error evaluating expression: " + expression + ". This exception is ignored.", e] @TO@ MethodInvocation@@LOG.debug("Error evaluating expression: " + expression + ". This exception is ignored.",e) @AT@ 12784 @LENGTH@ 87
------------INS InfixExpression@@"Error evaluating expression: " + expression + ". This exception is ignored." @TO@ SimpleName@@MethodName:debug:["Error evaluating expression: " + expression + ". This exception is ignored.", e] @AT@ 12790 @LENGTH@ 77
---------------INS StringLiteral@@"Error evaluating expression: " @TO@ InfixExpression@@"Error evaluating expression: " + expression + ". This exception is ignored." @AT@ 12790 @LENGTH@ 31
---------------INS Operator@@+ @TO@ InfixExpression@@"Error evaluating expression: " + expression + ". This exception is ignored." @AT@ 12821 @LENGTH@ 1
---------------INS SimpleName@@expression @TO@ InfixExpression@@"Error evaluating expression: " + expression + ". This exception is ignored." @AT@ 12824 @LENGTH@ 10
---------------INS StringLiteral@@". This exception is ignored." @TO@ InfixExpression@@"Error evaluating expression: " + expression + ". This exception is ignored." @AT@ 12837 @LENGTH@ 30
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:debug:["Error evaluating expression: " + expression + ". This exception is ignored.", e] @AT@ 12869 @LENGTH@ 1


UPD Block@@ThenBody:{  if (!prev.get().getJavaType().equals("java.lang.String")) {    accept=false;  } else {    componentModel.getComponentOptions().remove(prev.get());  }} @TO@ ThenBody:{  String prv=prev.get().getJavaType();  String cur=fieldTypeName;  if (prv.equals("java.lang.String") || prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>")) {    componentModel.getComponentOptions().remove(prev.get());  } else {    accept=false;  }} @AT@ 30593 @LENGTH@ 295
---UPD IfStatement@@if (!prev.get().getJavaType().equals("java.lang.String")) {  accept=false;} else {  componentModel.getComponentOptions().remove(prev.get());} @TO@ if (prv.equals("java.lang.String") || prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>")) {  componentModel.getComponentOptions().remove(prev.get());} else {  accept=false;} @AT@ 30619 @LENGTH@ 247
------DEL PrefixExpression@@!prev.get().getJavaType().equals("java.lang.String") @AT@ 30623 @LENGTH@ 52
---------DEL Operator@@! @AT@ 30623 @LENGTH@ 1
---------DEL MethodInvocation@@prev.get().getJavaType().equals("java.lang.String") @AT@ 30624 @LENGTH@ 51
------------DEL MethodInvocation@@MethodName:getJavaType:[] @AT@ 30624 @LENGTH@ 24
------------DEL MethodInvocation@@MethodName:get:[] @AT@ 30624 @LENGTH@ 10
------UPD Block@@ThenBody:{  accept=false;} @TO@ ElseBody:{  accept=false;} @AT@ 30677 @LENGTH@ 71
------MOV Block@@ThenBody:{  accept=false;} @TO@ IfStatement@@if (!prev.get().getJavaType().equals("java.lang.String")) {  accept=false;} else {  componentModel.getComponentOptions().remove(prev.get());} @AT@ 30677 @LENGTH@ 71
------INS InfixExpression@@prv.equals("java.lang.String") || prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @TO@ IfStatement@@if (!prev.get().getJavaType().equals("java.lang.String")) {  accept=false;} else {  componentModel.getComponentOptions().remove(prev.get());} @AT@ 30738 @LENGTH@ 154
---------INS MethodInvocation@@prv.equals("java.lang.String") @TO@ InfixExpression@@prv.equals("java.lang.String") || prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @AT@ 30738 @LENGTH@ 30
------------INS SimpleName@@Name:prv @TO@ MethodInvocation@@prv.equals("java.lang.String") @AT@ 30738 @LENGTH@ 3
------------INS SimpleName@@MethodName:equals:["java.lang.String"] @TO@ MethodInvocation@@prv.equals("java.lang.String") @AT@ 30742 @LENGTH@ 26
---------------INS StringLiteral@@"java.lang.String" @TO@ SimpleName@@MethodName:equals:["java.lang.String"] @AT@ 30749 @LENGTH@ 18
---------INS Operator@@|| @TO@ InfixExpression@@prv.equals("java.lang.String") || prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @AT@ 30768 @LENGTH@ 2
---------INS InfixExpression@@prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @TO@ InfixExpression@@prv.equals("java.lang.String") || prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @AT@ 30804 @LENGTH@ 88
------------INS MethodInvocation@@prv.equals("java.lang.String[]") @TO@ InfixExpression@@prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @AT@ 30804 @LENGTH@ 32
---------------MOV SimpleName@@Name:prev @TO@ MethodInvocation@@prv.equals("java.lang.String[]") @AT@ 30624 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:equals:["java.lang.String"] @TO@ MethodInvocation@@prv.equals("java.lang.String[]") @AT@ 30649 @LENGTH@ 26
------------------UPD StringLiteral@@"java.lang.String" @TO@ "java.lang.String[]" @AT@ 30656 @LENGTH@ 18
------------INS Operator@@&& @TO@ InfixExpression@@prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @AT@ 30836 @LENGTH@ 2
------------INS MethodInvocation@@cur.equals("java.util.Collection<java.lang.String>") @TO@ InfixExpression@@prv.equals("java.lang.String[]") && cur.equals("java.util.Collection<java.lang.String>") @AT@ 30840 @LENGTH@ 52
---------------INS SimpleName@@Name:cur @TO@ MethodInvocation@@cur.equals("java.util.Collection<java.lang.String>") @AT@ 30840 @LENGTH@ 3
---------------INS SimpleName@@MethodName:equals:["java.util.Collection<java.lang.String>"] @TO@ MethodInvocation@@cur.equals("java.util.Collection<java.lang.String>") @AT@ 30844 @LENGTH@ 48
------------------INS StringLiteral@@"java.util.Collection<java.lang.String>" @TO@ SimpleName@@MethodName:equals:["java.util.Collection<java.lang.String>"] @AT@ 30851 @LENGTH@ 40
------UPD Block@@ElseBody:{  componentModel.getComponentOptions().remove(prev.get());} @TO@ ThenBody:{  componentModel.getComponentOptions().remove(prev.get());} @AT@ 30754 @LENGTH@ 112
---INS VariableDeclarationStatement@@String prv=prev.get().getJavaType(); @TO@ Block@@ThenBody:{  if (!prev.get().getJavaType().equals("java.lang.String")) {    accept=false;  } else {    componentModel.getComponentOptions().remove(prev.get());  }} @AT@ 30619 @LENGTH@ 38
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String prv=prev.get().getJavaType(); @AT@ 30619 @LENGTH@ 6
------INS VariableDeclarationFragment@@prv=prev.get().getJavaType() @TO@ VariableDeclarationStatement@@String prv=prev.get().getJavaType(); @AT@ 30626 @LENGTH@ 30
---------INS SimpleName@@prv @TO@ VariableDeclarationFragment@@prv=prev.get().getJavaType() @AT@ 30626 @LENGTH@ 3
---------INS MethodInvocation@@prev.get().getJavaType() @TO@ VariableDeclarationFragment@@prv=prev.get().getJavaType() @AT@ 30632 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@prev.get().getJavaType() @AT@ 30632 @LENGTH@ 10
------------INS SimpleName@@Name:prev @TO@ MethodInvocation@@prev.get().getJavaType() @AT@ 30632 @LENGTH@ 4
------------INS SimpleName@@MethodName:getJavaType:[] @TO@ MethodInvocation@@prev.get().getJavaType() @AT@ 30643 @LENGTH@ 13
---INS VariableDeclarationStatement@@String cur=fieldTypeName; @TO@ Block@@ThenBody:{  if (!prev.get().getJavaType().equals("java.lang.String")) {    accept=false;  } else {    componentModel.getComponentOptions().remove(prev.get());  }} @AT@ 30682 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String cur=fieldTypeName; @AT@ 30682 @LENGTH@ 6
------INS VariableDeclarationFragment@@cur=fieldTypeName @TO@ VariableDeclarationStatement@@String cur=fieldTypeName; @AT@ 30689 @LENGTH@ 19
---------INS SimpleName@@cur @TO@ VariableDeclarationFragment@@cur=fieldTypeName @AT@ 30689 @LENGTH@ 3
---------INS SimpleName@@fieldTypeName @TO@ VariableDeclarationFragment@@cur=fieldTypeName @AT@ 30695 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:this.add(lastElement.min(maximum)) @TO@ MethodInvocation:this.add(lastElement.max(maximum)) @AT@ 3277 @LENGTH@ 42
---UPD MethodInvocation@@this.add(lastElement.min(maximum)) @TO@ this.add(lastElement.max(maximum)) @AT@ 3284 @LENGTH@ 34
------UPD SimpleName@@MethodName:add:[lastElement.min(maximum)] @TO@ MethodName:add:[lastElement.max(maximum)] @AT@ 3289 @LENGTH@ 29
---------UPD MethodInvocation@@lastElement.min(maximum) @TO@ lastElement.max(maximum) @AT@ 3293 @LENGTH@ 24
------------UPD SimpleName@@MethodName:min:[maximum] @TO@ MethodName:max:[maximum] @AT@ 3305 @LENGTH@ 12


INS IfStatement@@if (header.equalsIgnoreCase(AUTHENTICATION_SCHEME_BASIC)) {  throw new BadCredentialsException("Empty basic authentication token");} @TO@ MethodDeclaration@@public, UsernamePasswordAuthenticationToken, MethodName:convert, HttpServletRequest request,  @AT@ 3200 @LENGTH@ 137
---INS MethodInvocation@@header.equalsIgnoreCase(AUTHENTICATION_SCHEME_BASIC) @TO@ IfStatement@@if (header.equalsIgnoreCase(AUTHENTICATION_SCHEME_BASIC)) {  throw new BadCredentialsException("Empty basic authentication token");} @AT@ 3204 @LENGTH@ 52
------INS SimpleName@@Name:header @TO@ MethodInvocation@@header.equalsIgnoreCase(AUTHENTICATION_SCHEME_BASIC) @AT@ 3204 @LENGTH@ 6
------INS SimpleName@@MethodName:equalsIgnoreCase:[AUTHENTICATION_SCHEME_BASIC] @TO@ MethodInvocation@@header.equalsIgnoreCase(AUTHENTICATION_SCHEME_BASIC) @AT@ 3211 @LENGTH@ 45
---------INS SimpleName@@AUTHENTICATION_SCHEME_BASIC @TO@ SimpleName@@MethodName:equalsIgnoreCase:[AUTHENTICATION_SCHEME_BASIC] @AT@ 3228 @LENGTH@ 27
---INS Block@@ThenBody:{  throw new BadCredentialsException("Empty basic authentication token");} @TO@ IfStatement@@if (header.equalsIgnoreCase(AUTHENTICATION_SCHEME_BASIC)) {  throw new BadCredentialsException("Empty basic authentication token");} @AT@ 3258 @LENGTH@ 79
------INS ThrowStatement@@ClassInstanceCreation:new BadCredentialsException("Empty basic authentication token") @TO@ Block@@ThenBody:{  throw new BadCredentialsException("Empty basic authentication token");} @AT@ 3263 @LENGTH@ 70
---------INS ClassInstanceCreation@@BadCredentialsException["Empty basic authentication token"] @TO@ ThrowStatement@@ClassInstanceCreation:new BadCredentialsException("Empty basic authentication token") @AT@ 3269 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@BadCredentialsException["Empty basic authentication token"] @AT@ 3269 @LENGTH@ 3
------------INS SimpleType@@BadCredentialsException @TO@ ClassInstanceCreation@@BadCredentialsException["Empty basic authentication token"] @AT@ 3273 @LENGTH@ 23
------------INS StringLiteral@@"Empty basic authentication token" @TO@ ClassInstanceCreation@@BadCredentialsException["Empty basic authentication token"] @AT@ 3297 @LENGTH@ 34


MOV MethodDeclaration@@public, CamelContext, MethodName:getCamelContextReference,  @TO@ TypeDeclaration@@[@Experimental, public]ImmutableCamelContext, [ExtendedCamelContext, CatalogCamelContext, ModelCamelContext] @AT@ 6290 @LENGTH@ 75


INS MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @TO@ TypeDeclaration@@[public]RecipientListProcessor, MulticastProcessor @AT@ 10505 @LENGTH@ 946
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10505 @LENGTH@ 9
---INS SimpleType@@Processor @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10515 @LENGTH@ 9
---INS SimpleName@@MethodName:createErrorHandler @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10525 @LENGTH@ 18
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10544 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 10544 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 10557 @LENGTH@ 12
---INS SingleVariableDeclaration@@ErrorHandlerFactory builder @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10571 @LENGTH@ 27
------INS SimpleType@@ErrorHandlerFactory @TO@ SingleVariableDeclaration@@ErrorHandlerFactory builder @AT@ 10571 @LENGTH@ 19
------INS SimpleName@@builder @TO@ SingleVariableDeclaration@@ErrorHandlerFactory builder @AT@ 10591 @LENGTH@ 7
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10600 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10600 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10609 @LENGTH@ 8
---INS SingleVariableDeclaration@@Processor processor @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10619 @LENGTH@ 19
------INS SimpleType@@Processor @TO@ SingleVariableDeclaration@@Processor processor @AT@ 10619 @LENGTH@ 9
------INS SimpleName@@processor @TO@ SingleVariableDeclaration@@Processor processor @AT@ 10629 @LENGTH@ 9
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10647 @LENGTH@ 9
---INS VariableDeclarationStatement@@final ErrorHandlerFactory ehBuilder=builder.getOrLookupErrorHandlerFactory(routeContext); @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10751 @LENGTH@ 91
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ErrorHandlerFactory ehBuilder=builder.getOrLookupErrorHandlerFactory(routeContext); @AT@ 10751 @LENGTH@ 5
------INS SimpleType@@ErrorHandlerFactory @TO@ VariableDeclarationStatement@@final ErrorHandlerFactory ehBuilder=builder.getOrLookupErrorHandlerFactory(routeContext); @AT@ 10757 @LENGTH@ 19
------INS VariableDeclarationFragment@@ehBuilder=builder.getOrLookupErrorHandlerFactory(routeContext) @TO@ VariableDeclarationStatement@@final ErrorHandlerFactory ehBuilder=builder.getOrLookupErrorHandlerFactory(routeContext); @AT@ 10777 @LENGTH@ 64
---------INS SimpleName@@ehBuilder @TO@ VariableDeclarationFragment@@ehBuilder=builder.getOrLookupErrorHandlerFactory(routeContext) @AT@ 10777 @LENGTH@ 9
---------INS MethodInvocation@@builder.getOrLookupErrorHandlerFactory(routeContext) @TO@ VariableDeclarationFragment@@ehBuilder=builder.getOrLookupErrorHandlerFactory(routeContext) @AT@ 10789 @LENGTH@ 52
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getOrLookupErrorHandlerFactory(routeContext) @AT@ 10789 @LENGTH@ 7
------------INS SimpleName@@MethodName:getOrLookupErrorHandlerFactory:[routeContext] @TO@ MethodInvocation@@builder.getOrLookupErrorHandlerFactory(routeContext) @AT@ 10797 @LENGTH@ 44
---------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:getOrLookupErrorHandlerFactory:[routeContext] @AT@ 10828 @LENGTH@ 12
---INS VariableDeclarationStatement@@Processor answer=super.createErrorHandler(routeContext,ehBuilder,exchange,processor); @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10852 @LENGTH@ 90
------INS SimpleType@@Processor @TO@ VariableDeclarationStatement@@Processor answer=super.createErrorHandler(routeContext,ehBuilder,exchange,processor); @AT@ 10852 @LENGTH@ 9
------INS VariableDeclarationFragment@@answer=super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @TO@ VariableDeclarationStatement@@Processor answer=super.createErrorHandler(routeContext,ehBuilder,exchange,processor); @AT@ 10862 @LENGTH@ 79
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @AT@ 10862 @LENGTH@ 6
---------INS SuperMethodInvocation@@super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @TO@ VariableDeclarationFragment@@answer=super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @AT@ 10871 @LENGTH@ 70
------------INS SimpleName@@MethodName:createErrorHandler:[routeContext, ehBuilder, exchange, processor] @TO@ SuperMethodInvocation@@super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @AT@ 10877 @LENGTH@ 18
------------INS SimpleName@@routeContext @TO@ SuperMethodInvocation@@super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @AT@ 10896 @LENGTH@ 12
------------INS SimpleName@@ehBuilder @TO@ SuperMethodInvocation@@super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @AT@ 10910 @LENGTH@ 9
------------INS SimpleName@@exchange @TO@ SuperMethodInvocation@@super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @AT@ 10921 @LENGTH@ 8
------------INS SimpleName@@processor @TO@ SuperMethodInvocation@@super.createErrorHandler(routeContext,ehBuilder,exchange,processor) @AT@ 10931 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:exchange.adapt(ExtendedExchange.class).addOnCompletion(new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
) @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 10951 @LENGTH@ 471
------INS MethodInvocation@@exchange.adapt(ExtendedExchange.class).addOnCompletion(new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:exchange.adapt(ExtendedExchange.class).addOnCompletion(new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
) @AT@ 10951 @LENGTH@ 470
---------INS MethodInvocation@@MethodName:adapt:[ExtendedExchange.class] @TO@ MethodInvocation@@exchange.adapt(ExtendedExchange.class).addOnCompletion(new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
) @AT@ 10951 @LENGTH@ 38
------------INS TypeLiteral@@ExtendedExchange.class @TO@ MethodInvocation@@MethodName:adapt:[ExtendedExchange.class] @AT@ 10966 @LENGTH@ 22
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.adapt(ExtendedExchange.class).addOnCompletion(new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
) @AT@ 10951 @LENGTH@ 8
---------INS SimpleName@@MethodName:addOnCompletion:[new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
] @TO@ MethodInvocation@@exchange.adapt(ExtendedExchange.class).addOnCompletion(new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
) @AT@ 10990 @LENGTH@ 431
------------INS ClassInstanceCreation@@SynchronizationAdapter[] @TO@ SimpleName@@MethodName:addOnCompletion:[new SynchronizationAdapter(){
  @Override public void onDone(  Exchange exchange){
    routeContext.removeErrorHandlers(ehBuilder);
  }
}
] @AT@ 11006 @LENGTH@ 414
---------------INS New@@new @TO@ ClassInstanceCreation@@SynchronizationAdapter[] @AT@ 11006 @LENGTH@ 3
---------------INS SimpleType@@SynchronizationAdapter @TO@ ClassInstanceCreation@@SynchronizationAdapter[] @AT@ 11010 @LENGTH@ 22
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@SynchronizationAdapter[] @AT@ 11035 @LENGTH@ 385
------------------INS MethodDeclaration@@public, void, MethodName:onDone, Exchange exchange,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 11071 @LENGTH@ 339
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:onDone, Exchange exchange,  @AT@ 11071 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:onDone, Exchange exchange,  @AT@ 11078 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:onDone @TO@ MethodDeclaration@@public, void, MethodName:onDone, Exchange exchange,  @AT@ 11083 @LENGTH@ 6
---------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:onDone, Exchange exchange,  @AT@ 11090 @LENGTH@ 17
------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 11090 @LENGTH@ 8
------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 11099 @LENGTH@ 8
---------------------INS ExpressionStatement@@MethodInvocation:routeContext.removeErrorHandlers(ehBuilder) @TO@ MethodDeclaration@@public, void, MethodName:onDone, Exchange exchange,  @AT@ 11352 @LENGTH@ 44
------------------------INS MethodInvocation@@routeContext.removeErrorHandlers(ehBuilder) @TO@ ExpressionStatement@@MethodInvocation:routeContext.removeErrorHandlers(ehBuilder) @AT@ 11352 @LENGTH@ 43
---------------------------INS SimpleName@@Name:routeContext @TO@ MethodInvocation@@routeContext.removeErrorHandlers(ehBuilder) @AT@ 11352 @LENGTH@ 12
---------------------------INS SimpleName@@MethodName:removeErrorHandlers:[ehBuilder] @TO@ MethodInvocation@@routeContext.removeErrorHandlers(ehBuilder) @AT@ 11365 @LENGTH@ 30
------------------------------INS SimpleName@@ehBuilder @TO@ SimpleName@@MethodName:removeErrorHandlers:[ehBuilder] @AT@ 11385 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, ErrorHandlerFactory builder, Exchange exchange, Processor processor, Exception,  @AT@ 11431 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 11438 @LENGTH@ 6


MOV MethodDeclaration@@default, RestEndpointProducerBuilder, MethodName:queryParameters, String queryParameters,  @TO@ TypeDeclaration@@[public]RestEndpointProducerBuilder, [EndpointProducerBuilder] @AT@ 18806 @LENGTH@ 192


UPD MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @TO@ private, String[], MethodName:truncateIfNecessary, Throwable cause, String exception, String stackTrace,  @AT@ 7074 @LENGTH@ 2228
---UPD SimpleName@@MethodName:processStackTrace @TO@ MethodName:truncateIfNecessary @AT@ 7091 @LENGTH@ 17
---UPD SingleVariableDeclaration@@String exceptionMessage @TO@ String exception @AT@ 7126 @LENGTH@ 23
------UPD SimpleName@@exceptionMessage @TO@ exception @AT@ 7133 @LENGTH@ 16
---INS SingleVariableDeclaration@@String stackTrace @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7658 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String stackTrace @AT@ 7658 @LENGTH@ 6
------INS SimpleName@@stackTrace @TO@ SingleVariableDeclaration@@String stackTrace @AT@ 7665 @LENGTH@ 10
---INS VariableDeclarationStatement@@String stackTraceAsString=stackTrace; @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7710 @LENGTH@ 39
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String stackTraceAsString=stackTrace; @AT@ 7710 @LENGTH@ 6
------INS VariableDeclarationFragment@@stackTraceAsString=stackTrace @TO@ VariableDeclarationStatement@@String stackTraceAsString=stackTrace; @AT@ 7717 @LENGTH@ 31
---------INS SimpleName@@stackTraceAsString @TO@ VariableDeclarationFragment@@stackTraceAsString=stackTrace @AT@ 7717 @LENGTH@ 18
---------INS SimpleName@@stackTrace @TO@ VariableDeclarationFragment@@stackTraceAsString=stackTrace @AT@ 7738 @LENGTH@ 10
---INS VariableDeclarationStatement@@String exceptionMessage=exception; @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7752 @LENGTH@ 36
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String exceptionMessage=exception; @AT@ 7752 @LENGTH@ 6
------INS VariableDeclarationFragment@@exceptionMessage=exception @TO@ VariableDeclarationStatement@@String exceptionMessage=exception; @AT@ 7759 @LENGTH@ 28
---------INS SimpleName@@exceptionMessage @TO@ VariableDeclarationFragment@@exceptionMessage=exception @AT@ 7759 @LENGTH@ 16
---------INS SimpleName@@exception @TO@ VariableDeclarationFragment@@exceptionMessage=exception @AT@ 7778 @LENGTH@ 9


UPD TryStatement@@try {  @SuppressWarnings("unchecked") Map<String,String> tokenResponseParameters=(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage);  return this.tokenResponseConverter.convert(tokenResponseParameters);} catch (Exception ex) {  throw new HttpMessageNotReadableException("An error occurred reading the OAuth 2.0 Access Token Response: " + ex.getMessage(),ex,inputMessage);} @TO@ try {  @SuppressWarnings("unchecked") Map<String,Object> tokenResponseParameters=(Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage);  return this.tokenResponseConverter.convert(tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())));} catch (Exception ex) {  throw new HttpMessageNotReadableException("An error occurred reading the OAuth 2.0 Access Token Response: " + ex.getMessage(),ex,inputMessage);} @AT@ 3198 @LENGTH@ 464
---UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Map<String,String> tokenResponseParameters=(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage); @TO@ @SuppressWarnings("unchecked") Map<String,Object> tokenResponseParameters=(Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage); @AT@ 3207 @LENGTH@ 198
------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 3241 @LENGTH@ 19
---------UPD SimpleType@@String @TO@ Object @AT@ 3253 @LENGTH@ 6
------UPD VariableDeclarationFragment@@tokenResponseParameters=(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @TO@ tokenResponseParameters=(Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @AT@ 3261 @LENGTH@ 143
---------UPD CastExpression@@(Map<String,String>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @TO@ (Map<String,Object>)this.jsonMessageConverter.read(PARAMETERIZED_RESPONSE_TYPE.getType(),null,inputMessage) @AT@ 3287 @LENGTH@ 117
------------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 3288 @LENGTH@ 19
---------------UPD SimpleType@@String @TO@ Object @AT@ 3300 @LENGTH@ 6
---UPD ReturnStatement@@MethodInvocation:this.tokenResponseConverter.convert(tokenResponseParameters) @TO@ MethodInvocation:this.tokenResponseConverter.convert(tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()))) @AT@ 3409 @LENGTH@ 68
------UPD MethodInvocation@@this.tokenResponseConverter.convert(tokenResponseParameters) @TO@ this.tokenResponseConverter.convert(tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()))) @AT@ 3416 @LENGTH@ 60
---------UPD SimpleName@@MethodName:convert:[tokenResponseParameters] @TO@ MethodName:convert:[tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()))] @AT@ 3444 @LENGTH@ 32
------------DEL SimpleName@@tokenResponseParameters @AT@ 3452 @LENGTH@ 23
------------INS MethodInvocation@@tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @TO@ SimpleName@@MethodName:convert:[tokenResponseParameters] @AT@ 3622 @LENGTH@ 153
---------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @AT@ 3622 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:entrySet:[] @TO@ MethodInvocation@@tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @AT@ 3622 @LENGTH@ 34
---------------INS SimpleName@@Name:tokenResponseParameters @TO@ MethodInvocation@@tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @AT@ 3622 @LENGTH@ 23
---------------INS SimpleName@@MethodName:collect:[Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())] @TO@ MethodInvocation@@tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @AT@ 3674 @LENGTH@ 101
------------------INS MethodInvocation@@Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()) @TO@ SimpleName@@MethodName:collect:[Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())] @AT@ 3682 @LENGTH@ 92
---------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()) @AT@ 3682 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:toMap:[Map.Entry::getKey, entry -> entry.getValue().toString()] @TO@ MethodInvocation@@Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()) @AT@ 3693 @LENGTH@ 81
------------------------INS LambdaExpression@@entry -> entry.getValue().toString() @TO@ SimpleName@@MethodName:toMap:[Map.Entry::getKey, entry -> entry.getValue().toString()] @AT@ 3737 @LENGTH@ 36
---------------------------INS VariableDeclarationFragment@@entry @TO@ LambdaExpression@@entry -> entry.getValue().toString() @AT@ 3737 @LENGTH@ 5
------------------------------INS SimpleName@@entry @TO@ VariableDeclarationFragment@@entry @AT@ 3737 @LENGTH@ 5
---------------------------INS MethodInvocation@@entry.getValue().toString() @TO@ LambdaExpression@@entry -> entry.getValue().toString() @AT@ 3746 @LENGTH@ 27
------------------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().toString() @AT@ 3746 @LENGTH@ 16
------------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue().toString() @AT@ 3746 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@entry.getValue().toString() @AT@ 3763 @LENGTH@ 10


UPD IfStatement@@if (definition instanceof OtherAttributesAware) {  Map<Object,Object> others=((OtherAttributesAware)definition).getOtherAttributes();  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @TO@ if (definition instanceof OtherAttributesAware) {  Map<Object,Object> others=((OtherAttributesAware)definition).getOtherAttributes();  if (others != null) {    others.forEach((k,v) -> {      String ks=k.toString();      if (ks.startsWith(PREFIX) && v instanceof String) {        String s=(String)v;        if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {          s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;        }        String kk=ks.substring(PREFIX.length());        properties.put(kk,s);      }    });  }} @AT@ 3395 @LENGTH@ 807
---UPD Block@@ThenBody:{  Map<Object,Object> others=((OtherAttributesAware)definition).getOtherAttributes();  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @TO@ ThenBody:{  Map<Object,Object> others=((OtherAttributesAware)definition).getOtherAttributes();  if (others != null) {    others.forEach((k,v) -> {      String ks=k.toString();      if (ks.startsWith(PREFIX) && v instanceof String) {        String s=(String)v;        if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {          s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;        }        String kk=ks.substring(PREFIX.length());        properties.put(kk,s);      }    });  }} @AT@ 3443 @LENGTH@ 759
------INS IfStatement@@if (others != null) {  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @TO@ Block@@ThenBody:{  Map<Object,Object> others=((OtherAttributesAware)definition).getOtherAttributes();  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @AT@ 3556 @LENGTH@ 732
---------INS InfixExpression@@others != null @TO@ IfStatement@@if (others != null) {  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @AT@ 3560 @LENGTH@ 14
------------INS SimpleName@@others @TO@ InfixExpression@@others != null @AT@ 3560 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@others != null @AT@ 3566 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@others != null @AT@ 3570 @LENGTH@ 4
---------INS Block@@ThenBody:{  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @TO@ IfStatement@@if (others != null) {  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @AT@ 3576 @LENGTH@ 712
------------MOV ExpressionStatement@@MethodInvocation:others.forEach((k,v) -> {
  String ks=k.toString();
  if (ks.startsWith(PREFIX) && v instanceof String) {
    String s=(String)v;
    if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {
      s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;
    }
    String kk=ks.substring(PREFIX.length());
    properties.put(kk,s);
  }
}
) @TO@ Block@@ThenBody:{  others.forEach((k,v) -> {    String ks=k.toString();    if (ks.startsWith(PREFIX) && v instanceof String) {      String s=(String)v;      if (!s.startsWith(PropertiesComponent.PREFIX_TOKEN) && !s.endsWith(PropertiesComponent.SUFFIX_TOKEN)) {        s=PropertiesComponent.PREFIX_TOKEN + s + PropertiesComponent.SUFFIX_TOKEN;      }      String kk=ks.substring(PREFIX.length());      properties.put(kk,s);    }  });} @AT@ 3556 @LENGTH@ 636


INS ExpressionStatement@@MethodInvocation:context.getComponent("stomp").init() @TO@ MethodDeclaration@@public, void, MethodName:testConsume, Exception,  @AT@ 1462 @LENGTH@ 37
---INS MethodInvocation@@context.getComponent("stomp").init() @TO@ ExpressionStatement@@MethodInvocation:context.getComponent("stomp").init() @AT@ 1462 @LENGTH@ 36
------INS MethodInvocation@@MethodName:getComponent:["stomp"] @TO@ MethodInvocation@@context.getComponent("stomp").init() @AT@ 1462 @LENGTH@ 29
---------INS StringLiteral@@"stomp" @TO@ MethodInvocation@@MethodName:getComponent:["stomp"] @AT@ 1483 @LENGTH@ 7
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getComponent("stomp").init() @AT@ 1462 @LENGTH@ 7
------INS SimpleName@@MethodName:init:[] @TO@ MethodInvocation@@context.getComponent("stomp").init() @AT@ 1492 @LENGTH@ 6


UPD IfStatement@@if (fatal()) {  fail("RabbitMQ Broker is required, but not available");} @TO@ if (fatal()) {  fail("RabbitMQ Broker is required, but not available");} else {  assumeNoException(e);} @AT@ 7570 @LENGTH@ 79
---INS Block@@ElseBody:{  assumeNoException(e);} @TO@ IfStatement@@if (fatal()) {  fail("RabbitMQ Broker is required, but not available");} @AT@ 7680 @LENGTH@ 32
------INS ExpressionStatement@@MethodInvocation:assumeNoException(e) @TO@ Block@@ElseBody:{  assumeNoException(e);} @AT@ 7686 @LENGTH@ 21
---------INS MethodInvocation@@assumeNoException(e) @TO@ ExpressionStatement@@MethodInvocation:assumeNoException(e) @AT@ 7686 @LENGTH@ 20
------------INS SimpleName@@MethodName:assumeNoException:[e] @TO@ MethodInvocation@@assumeNoException(e) @AT@ 7686 @LENGTH@ 20
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:assumeNoException:[e] @AT@ 7704 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:verifyZeroInteractions(openApi) @TO@ MethodInvocation:verifyNoInteractions(openApi) @AT@ 6378 @LENGTH@ 32
---UPD MethodInvocation@@verifyZeroInteractions(openApi) @TO@ verifyNoInteractions(openApi) @AT@ 6378 @LENGTH@ 31
------UPD SimpleName@@MethodName:verifyZeroInteractions:[openApi] @TO@ MethodName:verifyNoInteractions:[openApi] @AT@ 6378 @LENGTH@ 31


INS MethodDeclaration@@default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteria,  @TO@ TypeDeclaration@@DistinctWithQuery, [DistinctWithProjection] @AT@ 10073 @LENGTH@ 117
---INS Modifier@@default @TO@ MethodDeclaration@@default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 10073 @LENGTH@ 7
---INS ParameterizedType@@TerminatingDistinct<T> @TO@ MethodDeclaration@@default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 10081 @LENGTH@ 22
------INS SimpleType@@TerminatingDistinct @TO@ ParameterizedType@@TerminatingDistinct<T> @AT@ 10081 @LENGTH@ 19
------INS SimpleType@@T @TO@ ParameterizedType@@TerminatingDistinct<T> @AT@ 10101 @LENGTH@ 1
---INS SimpleName@@MethodName:matching @TO@ MethodDeclaration@@default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 10104 @LENGTH@ 8
---INS SingleVariableDeclaration@@CriteriaDefinition criteria @TO@ MethodDeclaration@@default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 10113 @LENGTH@ 27
------INS SimpleType@@CriteriaDefinition @TO@ SingleVariableDeclaration@@CriteriaDefinition criteria @AT@ 10113 @LENGTH@ 18
------INS SimpleName@@criteria @TO@ SingleVariableDeclaration@@CriteriaDefinition criteria @AT@ 10132 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:matching(Query.query(criteria)) @TO@ MethodDeclaration@@default, TerminatingDistinct<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 10147 @LENGTH@ 39
------INS MethodInvocation@@matching(Query.query(criteria)) @TO@ ReturnStatement@@MethodInvocation:matching(Query.query(criteria)) @AT@ 10154 @LENGTH@ 31
---------INS SimpleName@@MethodName:matching:[Query.query(criteria)] @TO@ MethodInvocation@@matching(Query.query(criteria)) @AT@ 10154 @LENGTH@ 31
------------INS MethodInvocation@@Query.query(criteria) @TO@ SimpleName@@MethodName:matching:[Query.query(criteria)] @AT@ 10163 @LENGTH@ 21
---------------INS SimpleName@@Name:Query @TO@ MethodInvocation@@Query.query(criteria) @AT@ 10163 @LENGTH@ 5
---------------INS SimpleName@@MethodName:query:[criteria] @TO@ MethodInvocation@@Query.query(criteria) @AT@ 10169 @LENGTH@ 15
------------------INS SimpleName@@criteria @TO@ SimpleName@@MethodName:query:[criteria] @AT@ 10175 @LENGTH@ 8


INS MethodDeclaration@@String, MethodName:principalName, @RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient,  @TO@ TypeDeclaration@@[@RestController, static]PrincipalController,  @AT@ 6506 @LENGTH@ 162
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:principalName, @RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient,  @AT@ 6499 @LENGTH@ 6
---INS SimpleName@@MethodName:principalName @TO@ MethodDeclaration@@String, MethodName:principalName, @RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient,  @AT@ 6506 @LENGTH@ 13
---INS SingleVariableDeclaration@@@RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient @TO@ MethodDeclaration@@String, MethodName:principalName, @RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient,  @AT@ 6520 @LENGTH@ 92
------INS SimpleType@@OAuth2AuthorizedClient @TO@ SingleVariableDeclaration@@@RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient @AT@ 6573 @LENGTH@ 22
------INS SimpleName@@authorizedClient @TO@ SingleVariableDeclaration@@@RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient @AT@ 6596 @LENGTH@ 16
---INS ReturnStatement@@MethodInvocation:authorizedClient.getPrincipalName() @TO@ MethodDeclaration@@String, MethodName:principalName, @RegisteredOAuth2AuthorizedClient("registration-id") OAuth2AuthorizedClient authorizedClient,  @AT@ 6620 @LENGTH@ 43
------INS MethodInvocation@@authorizedClient.getPrincipalName() @TO@ ReturnStatement@@MethodInvocation:authorizedClient.getPrincipalName() @AT@ 6627 @LENGTH@ 35
---------INS SimpleName@@Name:authorizedClient @TO@ MethodInvocation@@authorizedClient.getPrincipalName() @AT@ 6627 @LENGTH@ 16
---------INS SimpleName@@MethodName:getPrincipalName:[] @TO@ MethodInvocation@@authorizedClient.getPrincipalName() @AT@ 6644 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:readValueWithZeroExpiresAsNotExpired, Exception,  @TO@ TypeDeclaration@@[@PrepareForTest(OAuth2AccessTokenJackson2Deserializer.class), public]OAuth2AccessTokenJackson2DeserializerTests, BaseOAuth2AccessTokenJacksonTest @AT@ 4283 @LENGTH@ 280
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readValueWithZeroExpiresAsNotExpired, Exception,  @AT@ 4283 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readValueWithZeroExpiresAsNotExpired, Exception,  @AT@ 4290 @LENGTH@ 4
---INS SimpleName@@MethodName:readValueWithZeroExpiresAsNotExpired @TO@ MethodDeclaration@@public, void, MethodName:readValueWithZeroExpiresAsNotExpired, Exception,  @AT@ 4295 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:readValueWithZeroExpiresAsNotExpired, Exception,  @AT@ 4341 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2AccessToken actual=mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class); @TO@ MethodDeclaration@@public, void, MethodName:readValueWithZeroExpiresAsNotExpired, Exception,  @AT@ 4361 @LENGTH@ 96
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken actual=mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class); @AT@ 4361 @LENGTH@ 17
------INS VariableDeclarationFragment@@actual=mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class) @TO@ VariableDeclarationStatement@@OAuth2AccessToken actual=mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class); @AT@ 4379 @LENGTH@ 77
---------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual=mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class) @AT@ 4379 @LENGTH@ 6
---------INS MethodInvocation@@mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class) @TO@ VariableDeclarationFragment@@actual=mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class) @AT@ 4388 @LENGTH@ 68
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class) @AT@ 4388 @LENGTH@ 6
------------INS SimpleName@@MethodName:readValue:[ACCESS_TOKEN_ZERO_EXPIRES, OAuth2AccessToken.class] @TO@ MethodInvocation@@mapper.readValue(ACCESS_TOKEN_ZERO_EXPIRES,OAuth2AccessToken.class) @AT@ 4395 @LENGTH@ 61
---------------INS SimpleName@@ACCESS_TOKEN_ZERO_EXPIRES @TO@ SimpleName@@MethodName:readValue:[ACCESS_TOKEN_ZERO_EXPIRES, OAuth2AccessToken.class] @AT@ 4405 @LENGTH@ 25
---------------INS TypeLiteral@@OAuth2AccessToken.class @TO@ SimpleName@@MethodName:readValue:[ACCESS_TOKEN_ZERO_EXPIRES, OAuth2AccessToken.class] @AT@ 4432 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertFalse("Token with expires_in:0 must be treated as not expired.",actual.isExpired()) @TO@ MethodDeclaration@@public, void, MethodName:readValueWithZeroExpiresAsNotExpired, Exception,  @AT@ 4466 @LENGTH@ 91
------INS MethodInvocation@@assertFalse("Token with expires_in:0 must be treated as not expired.",actual.isExpired()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse("Token with expires_in:0 must be treated as not expired.",actual.isExpired()) @AT@ 4466 @LENGTH@ 90
---------INS SimpleName@@MethodName:assertFalse:["Token with expires_in:0 must be treated as not expired.", actual.isExpired()] @TO@ MethodInvocation@@assertFalse("Token with expires_in:0 must be treated as not expired.",actual.isExpired()) @AT@ 4466 @LENGTH@ 90
------------INS StringLiteral@@"Token with expires_in:0 must be treated as not expired." @TO@ SimpleName@@MethodName:assertFalse:["Token with expires_in:0 must be treated as not expired.", actual.isExpired()] @AT@ 4478 @LENGTH@ 57
------------INS MethodInvocation@@actual.isExpired() @TO@ SimpleName@@MethodName:assertFalse:["Token with expires_in:0 must be treated as not expired.", actual.isExpired()] @AT@ 4537 @LENGTH@ 18
---------------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.isExpired() @AT@ 4537 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isExpired:[] @TO@ MethodInvocation@@actual.isExpired() @AT@ 4544 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:DefaultRestClient, final SalesforceHttpClient httpClient, final String version, final PayloadFormat format, final SalesforceSession session, SalesforceException,  @TO@ public, voidMethodName:DefaultRestClient, final SalesforceHttpClient httpClient, final String version, final PayloadFormat format, final SalesforceSession session, final SalesforceLoginConfig loginConfig, SalesforceException,  @AT@ 2866 @LENGTH@ 424
---UPD SuperConstructorInvocation@@super(version,session,httpClient);
 @TO@ super(version,session,httpClient,loginConfig);
 @AT@ 3050 @LENGTH@ 36
------INS SimpleName@@loginConfig @TO@ SuperConstructorInvocation@@super(version,session,httpClient);
 @AT@ 3195 @LENGTH@ 11
---INS SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @TO@ MethodDeclaration@@public, voidMethodName:DefaultRestClient, final SalesforceHttpClient httpClient, final String version, final PayloadFormat format, final SalesforceSession session, SalesforceException,  @AT@ 3081 @LENGTH@ 39
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @AT@ 3081 @LENGTH@ 5
------INS SimpleType@@SalesforceLoginConfig @TO@ SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @AT@ 3087 @LENGTH@ 21
------INS SimpleName@@loginConfig @TO@ SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @AT@ 3109 @LENGTH@ 11


UPD FieldDeclaration@@private, StepContribution, [contribution=new StepExecution("foo",new JobExecution(0L)).createStepContribution()] @TO@ private, StepContribution, [contribution=new StepExecution("foo",new JobExecution(new JobInstance(0L,"job"),new JobParameters())).createStepContribution()] @AT@ 2164 @LENGTH@ 115
---UPD VariableDeclarationFragment@@contribution=new StepExecution("foo",new JobExecution(0L)).createStepContribution() @TO@ contribution=new StepExecution("foo",new JobExecution(new JobInstance(0L,"job"),new JobParameters())).createStepContribution() @AT@ 2189 @LENGTH@ 89
------UPD MethodInvocation@@new StepExecution("foo",new JobExecution(0L)).createStepContribution() @TO@ new StepExecution("foo",new JobExecution(new JobInstance(0L,"job"),new JobParameters())).createStepContribution() @AT@ 2204 @LENGTH@ 74
---------UPD ClassInstanceCreation@@StepExecution["foo", new JobExecution(0L)] @TO@ StepExecution["foo", new JobExecution(new JobInstance(0L,"job"),new JobParameters())] @AT@ 2204 @LENGTH@ 49
------------UPD ClassInstanceCreation@@JobExecution[0L] @TO@ JobExecution[new JobInstance(0L,"job"), new JobParameters()] @AT@ 2232 @LENGTH@ 20
---------------INS ClassInstanceCreation@@JobInstance[0L, "job"] @TO@ ClassInstanceCreation@@JobExecution[0L] @AT@ 2353 @LENGTH@ 26
------------------MOV NumberLiteral@@0L @TO@ ClassInstanceCreation@@JobInstance[0L, "job"] @AT@ 2249 @LENGTH@ 2
------------------INS New@@new @TO@ ClassInstanceCreation@@JobInstance[0L, "job"] @AT@ 2353 @LENGTH@ 3
------------------INS SimpleType@@JobInstance @TO@ ClassInstanceCreation@@JobInstance[0L, "job"] @AT@ 2357 @LENGTH@ 11
------------------INS StringLiteral@@"job" @TO@ ClassInstanceCreation@@JobInstance[0L, "job"] @AT@ 2373 @LENGTH@ 5
---------------INS ClassInstanceCreation@@JobParameters[] @TO@ ClassInstanceCreation@@JobExecution[0L] @AT@ 2381 @LENGTH@ 19
------------------INS New@@new @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 2381 @LENGTH@ 3
------------------INS SimpleType@@JobParameters @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 2385 @LENGTH@ 13


UPD MethodDeclaration@@public, voidMethodName:BaseNCodecOutputStream, final OutputStream out, final BaseNCodec basedCodec, final boolean doEncode,  @TO@ public, voidMethodName:BaseNCodecOutputStream, final OutputStream output, final BaseNCodec basedCodec, final boolean doEncode,  @AT@ 1984 @LENGTH@ 206
---UPD SingleVariableDeclaration@@final OutputStream out @TO@ final OutputStream output @AT@ 2014 @LENGTH@ 22
------UPD SimpleName@@out @TO@ output @AT@ 2033 @LENGTH@ 3
---UPD SuperConstructorInvocation@@super(out);
 @TO@ super(output);
 @AT@ 2101 @LENGTH@ 11
------UPD SimpleName@@out @TO@ output @AT@ 2107 @LENGTH@ 3


UPD VariableDeclarationStatement@@final byte newbuf[]=new byte[remaining]; @TO@ final byte[] newbuf=new byte[remaining]; @AT@ 12852 @LENGTH@ 42
---INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte newbuf[]=new byte[remaining]; @AT@ 12858 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 12858 @LENGTH@ 4
---DEL PrimitiveType@@byte @AT@ 12858 @LENGTH@ 4
---UPD VariableDeclarationFragment@@newbuf[]=new byte[remaining] @TO@ newbuf=new byte[remaining] @AT@ 12863 @LENGTH@ 30


INS MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @TO@ TypeDeclaration@@[public, abstract]CommandLineArgumentUsage,  @AT@ 5994 @LENGTH@ 461
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @AT@ 5994 @LENGTH@ 9
---INS Modifier@@static @TO@ MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @AT@ 6004 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @AT@ 6011 @LENGTH@ 6
---INS SimpleName@@MethodName:customUsage @TO@ MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @AT@ 6018 @LENGTH@ 11
---INS SingleVariableDeclaration@@String executableName @TO@ MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @AT@ 6030 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String executableName @AT@ 6030 @LENGTH@ 6
------INS SimpleName@@executableName @TO@ SingleVariableDeclaration@@String executableName @AT@ 6037 @LENGTH@ 14
---INS IfStatement@@if (USAGE == null) {  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @TO@ MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @AT@ 6063 @LENGTH@ 363
------INS InfixExpression@@USAGE == null @TO@ IfStatement@@if (USAGE == null) {  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @AT@ 6067 @LENGTH@ 13
---------INS SimpleName@@USAGE @TO@ InfixExpression@@USAGE == null @AT@ 6067 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@USAGE == null @AT@ 6072 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@USAGE == null @AT@ 6076 @LENGTH@ 4
------INS Block@@ThenBody:{  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @TO@ IfStatement@@if (USAGE == null) {  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @AT@ 6082 @LENGTH@ 344
---------INS VariableDeclarationStatement@@final StringBuilder sb=new StringBuilder(); @TO@ Block@@ThenBody:{  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @AT@ 6096 @LENGTH@ 45
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final StringBuilder sb=new StringBuilder(); @AT@ 6096 @LENGTH@ 5
------------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@final StringBuilder sb=new StringBuilder(); @AT@ 6102 @LENGTH@ 13
------------INS VariableDeclarationFragment@@sb=new StringBuilder() @TO@ VariableDeclarationStatement@@final StringBuilder sb=new StringBuilder(); @AT@ 6116 @LENGTH@ 24
---------------INS SimpleName@@sb @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 6116 @LENGTH@ 2
---------------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 6121 @LENGTH@ 19
------------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 6121 @LENGTH@ 3
------------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 6125 @LENGTH@ 13
---------INS ExpressionStatement@@MethodInvocation:sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE) @TO@ Block@@ThenBody:{  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @AT@ 6154 @LENGTH@ 96
------------INS MethodInvocation@@sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE) @TO@ ExpressionStatement@@MethodInvocation:sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE) @AT@ 6154 @LENGTH@ 95
---------------INS MethodInvocation@@MethodName:append:[ProcessLogger.ROOT_LOGGER.argUsage(executableName)] @TO@ MethodInvocation@@sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE) @AT@ 6154 @LENGTH@ 78
------------------INS MethodInvocation@@ProcessLogger.ROOT_LOGGER.argUsage(executableName) @TO@ MethodInvocation@@MethodName:append:[ProcessLogger.ROOT_LOGGER.argUsage(executableName)] @AT@ 6181 @LENGTH@ 50
---------------------INS QualifiedName@@Name:ProcessLogger.ROOT_LOGGER @TO@ MethodInvocation@@ProcessLogger.ROOT_LOGGER.argUsage(executableName) @AT@ 6181 @LENGTH@ 25
---------------------INS SimpleName@@MethodName:argUsage:[executableName] @TO@ MethodInvocation@@ProcessLogger.ROOT_LOGGER.argUsage(executableName) @AT@ 6207 @LENGTH@ 24
------------------------INS SimpleName@@executableName @TO@ SimpleName@@MethodName:argUsage:[executableName] @AT@ 6216 @LENGTH@ 14
---------------INS MethodInvocation@@MethodName:append:[NEW_LINE] @TO@ MethodInvocation@@sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE) @AT@ 6154 @LENGTH@ 19
------------------INS SimpleName@@NEW_LINE @TO@ MethodInvocation@@MethodName:append:[NEW_LINE] @AT@ 6164 @LENGTH@ 8
---------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE) @AT@ 6154 @LENGTH@ 2
---------------INS SimpleName@@MethodName:append:[NEW_LINE] @TO@ MethodInvocation@@sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE) @AT@ 6233 @LENGTH@ 16
------------------INS SimpleName@@NEW_LINE @TO@ SimpleName@@MethodName:append:[NEW_LINE] @AT@ 6240 @LENGTH@ 8
---------INS ForStatement@@for (int i=0; i < arguments.size(); i++) {  sb.append(getCommand(i)).append(NEW_LINE);} @TO@ Block@@ThenBody:{  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @AT@ 6264 @LENGTH@ 117
------------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < arguments.size(); i++) {  sb.append(getCommand(i)).append(NEW_LINE);} @AT@ 6269 @LENGTH@ 9
---------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 6269 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 6273 @LENGTH@ 5
------------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 6273 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 6277 @LENGTH@ 1
------------INS InfixExpression@@i < arguments.size() @TO@ ForStatement@@for (int i=0; i < arguments.size(); i++) {  sb.append(getCommand(i)).append(NEW_LINE);} @AT@ 6280 @LENGTH@ 20
---------------INS SimpleName@@i @TO@ InfixExpression@@i < arguments.size() @AT@ 6280 @LENGTH@ 1
---------------INS Operator@@< @TO@ InfixExpression@@i < arguments.size() @AT@ 6281 @LENGTH@ 1
---------------INS MethodInvocation@@arguments.size() @TO@ InfixExpression@@i < arguments.size() @AT@ 6284 @LENGTH@ 16
------------------INS SimpleName@@Name:arguments @TO@ MethodInvocation@@arguments.size() @AT@ 6284 @LENGTH@ 9
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@arguments.size() @AT@ 6294 @LENGTH@ 6
------------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < arguments.size(); i++) {  sb.append(getCommand(i)).append(NEW_LINE);} @AT@ 6302 @LENGTH@ 3
---------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 6302 @LENGTH@ 1
---------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 6304 @LENGTH@ 2
------------INS ExpressionStatement@@MethodInvocation:sb.append(getCommand(i)).append(NEW_LINE) @TO@ ForStatement@@for (int i=0; i < arguments.size(); i++) {  sb.append(getCommand(i)).append(NEW_LINE);} @AT@ 6325 @LENGTH@ 42
---------------INS MethodInvocation@@sb.append(getCommand(i)).append(NEW_LINE) @TO@ ExpressionStatement@@MethodInvocation:sb.append(getCommand(i)).append(NEW_LINE) @AT@ 6325 @LENGTH@ 41
------------------INS MethodInvocation@@MethodName:append:[getCommand(i)] @TO@ MethodInvocation@@sb.append(getCommand(i)).append(NEW_LINE) @AT@ 6325 @LENGTH@ 24
---------------------INS MethodInvocation@@getCommand(i) @TO@ MethodInvocation@@MethodName:append:[getCommand(i)] @AT@ 6335 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:getCommand:[i] @TO@ MethodInvocation@@getCommand(i) @AT@ 6335 @LENGTH@ 13
---------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getCommand:[i] @AT@ 6346 @LENGTH@ 1
------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(getCommand(i)).append(NEW_LINE) @AT@ 6325 @LENGTH@ 2
------------------INS SimpleName@@MethodName:append:[NEW_LINE] @TO@ MethodInvocation@@sb.append(getCommand(i)).append(NEW_LINE) @AT@ 6350 @LENGTH@ 16
---------------------INS SimpleName@@NEW_LINE @TO@ SimpleName@@MethodName:append:[NEW_LINE] @AT@ 6357 @LENGTH@ 8
---------INS ExpressionStatement@@Assignment:USAGE=sb.toString() @TO@ Block@@ThenBody:{  final StringBuilder sb=new StringBuilder();  sb.append(NEW_LINE).append(ProcessLogger.ROOT_LOGGER.argUsage(executableName)).append(NEW_LINE);  for (int i=0; i < arguments.size(); i++) {    sb.append(getCommand(i)).append(NEW_LINE);  }  USAGE=sb.toString();} @AT@ 6394 @LENGTH@ 22
------------INS Assignment@@USAGE=sb.toString() @TO@ ExpressionStatement@@Assignment:USAGE=sb.toString() @AT@ 6394 @LENGTH@ 21
---------------INS SimpleName@@USAGE @TO@ Assignment@@USAGE=sb.toString() @AT@ 6394 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@USAGE=sb.toString() @AT@ 6399 @LENGTH@ 1
---------------INS MethodInvocation@@sb.toString() @TO@ Assignment@@USAGE=sb.toString() @AT@ 6402 @LENGTH@ 13
------------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 6402 @LENGTH@ 2
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 6405 @LENGTH@ 10
---INS ReturnStatement@@SimpleName:USAGE @TO@ MethodDeclaration@@protected, static, String, MethodName:customUsage, String executableName,  @AT@ 6435 @LENGTH@ 13
------INS SimpleName@@USAGE @TO@ ReturnStatement@@SimpleName:USAGE @AT@ 6442 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:DefaultBulkApiClient, String version, SalesforceSession session, SalesforceHttpClient httpClient, SalesforceException,  @TO@ public, voidMethodName:DefaultBulkApiClient, String version, SalesforceSession session, SalesforceHttpClient httpClient, SalesforceLoginConfig loginConfig, SalesforceException,  @AT@ 2989 @LENGTH@ 540
---UPD SuperConstructorInvocation@@super(version,session,httpClient);
 @TO@ super(version,session,httpClient,loginConfig);
 @AT@ 3130 @LENGTH@ 36
------INS SimpleName@@loginConfig @TO@ SuperConstructorInvocation@@super(version,session,httpClient);
 @AT@ 3269 @LENGTH@ 11
---INS SingleVariableDeclaration@@SalesforceLoginConfig loginConfig @TO@ MethodDeclaration@@public, voidMethodName:DefaultBulkApiClient, String version, SalesforceSession session, SalesforceHttpClient httpClient, SalesforceException,  @AT@ 3161 @LENGTH@ 33
------INS SimpleType@@SalesforceLoginConfig @TO@ SingleVariableDeclaration@@SalesforceLoginConfig loginConfig @AT@ 3161 @LENGTH@ 21
------INS SimpleName@@loginConfig @TO@ SingleVariableDeclaration@@SalesforceLoginConfig loginConfig @AT@ 3183 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:Thread.sleep(10) @TO@ MethodDeclaration@@public, void, MethodName:testDiscardWhenFull, Exception,  @AT@ 1419 @LENGTH@ 17
---INS MethodInvocation@@Thread.sleep(10) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(10) @AT@ 1419 @LENGTH@ 16
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(10) @AT@ 1419 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[10] @TO@ MethodInvocation@@Thread.sleep(10) @AT@ 1426 @LENGTH@ 9
---------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:sleep:[10] @AT@ 1432 @LENGTH@ 2


INS IfStatement@@if (metadataIssuer != null && !Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm())) {  invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer());} @TO@ MethodDeclaration@@public, OAuth2TokenValidatorResult, MethodName:validate, Jwt idToken,  @AT@ 3035 @LENGTH@ 172
---INS InfixExpression@@metadataIssuer != null && !Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @TO@ IfStatement@@if (metadataIssuer != null && !Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm())) {  invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer());} @AT@ 3039 @LENGTH@ 95
------INS InfixExpression@@metadataIssuer != null @TO@ InfixExpression@@metadataIssuer != null && !Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @AT@ 3039 @LENGTH@ 22
---------INS SimpleName@@metadataIssuer @TO@ InfixExpression@@metadataIssuer != null @AT@ 3039 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@metadataIssuer != null @AT@ 3053 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@metadataIssuer != null @AT@ 3057 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@metadataIssuer != null && !Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @AT@ 3061 @LENGTH@ 2
------INS PrefixExpression@@!Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @TO@ InfixExpression@@metadataIssuer != null && !Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @AT@ 3065 @LENGTH@ 69
---------INS Operator@@! @TO@ PrefixExpression@@!Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @AT@ 3065 @LENGTH@ 1
---------INS MethodInvocation@@Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @TO@ PrefixExpression@@!Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @AT@ 3066 @LENGTH@ 68
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @AT@ 3066 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[metadataIssuer, idToken.getIssuer().toExternalForm()] @TO@ MethodInvocation@@Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm()) @AT@ 3074 @LENGTH@ 60
---------------INS SimpleName@@metadataIssuer @TO@ SimpleName@@MethodName:equals:[metadataIssuer, idToken.getIssuer().toExternalForm()] @AT@ 3081 @LENGTH@ 14
---------------INS MethodInvocation@@idToken.getIssuer().toExternalForm() @TO@ SimpleName@@MethodName:equals:[metadataIssuer, idToken.getIssuer().toExternalForm()] @AT@ 3097 @LENGTH@ 36
------------------INS MethodInvocation@@MethodName:getIssuer:[] @TO@ MethodInvocation@@idToken.getIssuer().toExternalForm() @AT@ 3097 @LENGTH@ 19
------------------INS SimpleName@@Name:idToken @TO@ MethodInvocation@@idToken.getIssuer().toExternalForm() @AT@ 3097 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toExternalForm:[] @TO@ MethodInvocation@@idToken.getIssuer().toExternalForm() @AT@ 3117 @LENGTH@ 16
---INS Block@@ThenBody:{  invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer());} @TO@ IfStatement@@if (metadataIssuer != null && !Objects.equals(metadataIssuer,idToken.getIssuer().toExternalForm())) {  invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer());} @AT@ 3136 @LENGTH@ 71
------INS ExpressionStatement@@MethodInvocation:invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer()) @TO@ Block@@ThenBody:{  invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer());} @AT@ 3141 @LENGTH@ 62
---------INS MethodInvocation@@invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer()) @TO@ ExpressionStatement@@MethodInvocation:invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer()) @AT@ 3141 @LENGTH@ 61
------------INS SimpleName@@Name:invalidClaims @TO@ MethodInvocation@@invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer()) @AT@ 3141 @LENGTH@ 13
------------INS SimpleName@@MethodName:put:[IdTokenClaimNames.ISS, idToken.getIssuer()] @TO@ MethodInvocation@@invalidClaims.put(IdTokenClaimNames.ISS,idToken.getIssuer()) @AT@ 3155 @LENGTH@ 47
---------------INS QualifiedName@@IdTokenClaimNames.ISS @TO@ SimpleName@@MethodName:put:[IdTokenClaimNames.ISS, idToken.getIssuer()] @AT@ 3159 @LENGTH@ 21
------------------INS SimpleName@@IdTokenClaimNames @TO@ QualifiedName@@IdTokenClaimNames.ISS @AT@ 3159 @LENGTH@ 17
------------------INS SimpleName@@ISS @TO@ QualifiedName@@IdTokenClaimNames.ISS @AT@ 3177 @LENGTH@ 3
---------------INS MethodInvocation@@idToken.getIssuer() @TO@ SimpleName@@MethodName:put:[IdTokenClaimNames.ISS, idToken.getIssuer()] @AT@ 3182 @LENGTH@ 19
------------------INS SimpleName@@Name:idToken @TO@ MethodInvocation@@idToken.getIssuer() @AT@ 3182 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getIssuer:[] @TO@ MethodInvocation@@idToken.getIssuer() @AT@ 3190 @LENGTH@ 11


MOV VariableDeclarationStatement@@Lambda2Component component=context.getComponent("aws2-lambda",Lambda2Component.class); @TO@ MethodDeclaration@@public, void, MethodName:createEndpointWithoutOperation, Exception,  @AT@ 2254 @LENGTH@ 89


UPD ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*2.. {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u") @TO@ MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*..2 {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u") @AT@ 7685 @LENGTH@ 291
---UPD MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*2.. {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u") @TO@ assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*..2 {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u") @AT@ 7685 @LENGTH@ 290
------UPD SimpleName@@MethodName:isEqualTo:["MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*2.. {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u"] @TO@ MethodName:isEqualTo:["MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*..2 {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u"] @AT@ 7736 @LENGTH@ 239
---------UPD StringLiteral@@"MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*2.. {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u" @TO@ "MATCH (u:`User`)-[:`OWNS`]->(b:`Bike`)-[r2:`USED_ON`*1.. {when: '2019-04-16'}]->(t:`Trip`)<-[x:`WAS_ON`*..2 {whatever: '2020-04-16'}]-(u)-[y*2..3 {idk: '2021-04-16'}]-(:`SOMETHING`) WHERE u.name =~ '.*aName' RETURN b, u" @AT@ 7753 @LENGTH@ 221


INS MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @TO@ TypeDeclaration@@[@RestController, public]OAuth2ResourceServerController,  @AT@ 1431 @LENGTH@ 130
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1431 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1438 @LENGTH@ 6
---INS SimpleName@@MethodName:createMessage @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1445 @LENGTH@ 13
---INS SingleVariableDeclaration@@@RequestBody String message @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1459 @LENGTH@ 27
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@@RequestBody String message @AT@ 1472 @LENGTH@ 6
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@@RequestBody String message @AT@ 1479 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:String.format("Message was created. Content: %s",message) @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1492 @LENGTH@ 66
------INS MethodInvocation@@String.format("Message was created. Content: %s",message) @TO@ ReturnStatement@@MethodInvocation:String.format("Message was created. Content: %s",message) @AT@ 1499 @LENGTH@ 58
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Message was created. Content: %s",message) @AT@ 1499 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["Message was created. Content: %s", message] @TO@ MethodInvocation@@String.format("Message was created. Content: %s",message) @AT@ 1506 @LENGTH@ 51
------------INS StringLiteral@@"Message was created. Content: %s" @TO@ SimpleName@@MethodName:format:["Message was created. Content: %s", message] @AT@ 1513 @LENGTH@ 34
------------INS SimpleName@@message @TO@ SimpleName@@MethodName:format:["Message was created. Content: %s", message] @AT@ 1549 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:Base32InputStream, final InputStream in, final boolean doEncode, final int lineLength, final byte[] lineSeparator,  @TO@ public, voidMethodName:Base32InputStream, final InputStream input, final boolean doEncode, final int lineLength, final byte[] lineSeparator,  @AT@ 3436 @LENGTH@ 225
---UPD SingleVariableDeclaration@@final InputStream in @TO@ final InputStream input @AT@ 3461 @LENGTH@ 20
------UPD SimpleName@@in @TO@ input @AT@ 3479 @LENGTH@ 2
---UPD SuperConstructorInvocation@@super(in,new Base32(lineLength,lineSeparator),doEncode);
 @TO@ super(input,new Base32(lineLength,lineSeparator),doEncode);
 @AT@ 3596 @LENGTH@ 59
------UPD SimpleName@@in @TO@ input @AT@ 3602 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:rsaVerifierValidKeyWithoutComment, Exception,  @TO@ TypeDeclaration@@[public]RsaSigningTests,  @AT@ 1336 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:rsaVerifierValidKeyWithoutComment, Exception,  @AT@ 1336 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:rsaVerifierValidKeyWithoutComment, Exception,  @AT@ 1343 @LENGTH@ 4
---INS SimpleName@@MethodName:rsaVerifierValidKeyWithoutComment @TO@ MethodDeclaration@@public, void, MethodName:rsaVerifierValidKeyWithoutComment, Exception,  @AT@ 1348 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:rsaVerifierValidKeyWithoutComment, Exception,  @AT@ 1391 @LENGTH@ 9
---INS VariableDeclarationStatement@@RsaVerifier verifier=new RsaVerifier(RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT); @TO@ MethodDeclaration@@public, void, MethodName:rsaVerifierValidKeyWithoutComment, Exception,  @AT@ 1405 @LENGTH@ 93
------INS SimpleType@@RsaVerifier @TO@ VariableDeclarationStatement@@RsaVerifier verifier=new RsaVerifier(RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT); @AT@ 1405 @LENGTH@ 11
------INS VariableDeclarationFragment@@verifier=new RsaVerifier(RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT) @TO@ VariableDeclarationStatement@@RsaVerifier verifier=new RsaVerifier(RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT); @AT@ 1417 @LENGTH@ 80
---------INS SimpleName@@verifier @TO@ VariableDeclarationFragment@@verifier=new RsaVerifier(RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT) @AT@ 1417 @LENGTH@ 8
---------INS ClassInstanceCreation@@RsaVerifier[RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT] @TO@ VariableDeclarationFragment@@verifier=new RsaVerifier(RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT) @AT@ 1428 @LENGTH@ 69
------------INS New@@new @TO@ ClassInstanceCreation@@RsaVerifier[RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT] @AT@ 1428 @LENGTH@ 3
------------INS SimpleType@@RsaVerifier @TO@ ClassInstanceCreation@@RsaVerifier[RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT] @AT@ 1432 @LENGTH@ 11
------------INS QualifiedName@@RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT @TO@ ClassInstanceCreation@@RsaVerifier[RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT] @AT@ 1444 @LENGTH@ 52
---------------INS SimpleName@@RsaTestKeyData @TO@ QualifiedName@@RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT @AT@ 1444 @LENGTH@ 14
---------------INS SimpleName@@SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT @TO@ QualifiedName@@RsaTestKeyData.SSH_PUBLIC_KEY_STRING_WITHOUT_COMMENT @AT@ 1459 @LENGTH@ 37
---INS ExpressionStatement@@MethodInvocation:assertNotNull(verifier) @TO@ MethodDeclaration@@public, void, MethodName:rsaVerifierValidKeyWithoutComment, Exception,  @AT@ 1501 @LENGTH@ 24
------INS MethodInvocation@@assertNotNull(verifier) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(verifier) @AT@ 1501 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertNotNull:[verifier] @TO@ MethodInvocation@@assertNotNull(verifier) @AT@ 1501 @LENGTH@ 23
------------INS SimpleName@@verifier @TO@ SimpleName@@MethodName:assertNotNull:[verifier] @AT@ 1515 @LENGTH@ 8


MOV IfStatement@@if (schedulerProperties != null && !schedulerProperties.isEmpty()) {  Map<String,Object> copy=new LinkedHashMap<>(schedulerProperties);  PropertyBindingSupport.build().bind(getEndpoint().getCamelContext(),scheduler,copy);  if (copy.size() > 0) {    throw new FailedToCreateConsumerException(getEndpoint(),"There are " + copy.size() + " scheduler parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ copy+ "]");  }} @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 16332 @LENGTH@ 781


INS MethodDeclaration@@public, void, MethodName:getWhenEmptyBearerTokenThenReturnsInvalidToken,  @TO@ TypeDeclaration@@[@RunWith(SpringRunner.class), public]OAuth2ResourceServerSpecTests,  @AT@ 8760 @LENGTH@ 365
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getWhenEmptyBearerTokenThenReturnsInvalidToken,  @AT@ 8760 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getWhenEmptyBearerTokenThenReturnsInvalidToken,  @AT@ 8767 @LENGTH@ 4
---INS SimpleName@@MethodName:getWhenEmptyBearerTokenThenReturnsInvalidToken @TO@ MethodDeclaration@@public, void, MethodName:getWhenEmptyBearerTokenThenReturnsInvalidToken,  @AT@ 8772 @LENGTH@ 46
---INS ExpressionStatement@@MethodInvocation:this.spring.register(PublicKeyConfig.class).autowire() @TO@ MethodDeclaration@@public, void, MethodName:getWhenEmptyBearerTokenThenReturnsInvalidToken,  @AT@ 8825 @LENGTH@ 55
------INS MethodInvocation@@this.spring.register(PublicKeyConfig.class).autowire() @TO@ ExpressionStatement@@MethodInvocation:this.spring.register(PublicKeyConfig.class).autowire() @AT@ 8825 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:register:[PublicKeyConfig.class] @TO@ MethodInvocation@@this.spring.register(PublicKeyConfig.class).autowire() @AT@ 8825 @LENGTH@ 43
------------INS TypeLiteral@@PublicKeyConfig.class @TO@ MethodInvocation@@MethodName:register:[PublicKeyConfig.class] @AT@ 8846 @LENGTH@ 21
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.register(PublicKeyConfig.class).autowire() @AT@ 8825 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 8825 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 8830 @LENGTH@ 6
---------INS SimpleName@@MethodName:autowire:[] @TO@ MethodInvocation@@this.spring.register(PublicKeyConfig.class).autowire() @AT@ 8869 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @TO@ MethodDeclaration@@public, void, MethodName:getWhenEmptyBearerTokenThenReturnsInvalidToken,  @AT@ 8884 @LENGTH@ 238
------INS MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @TO@ ExpressionStatement@@MethodInvocation:this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 237
---------INS MethodInvocation@@MethodName:expectHeader:[] @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 155
---------INS MethodInvocation@@MethodName:isUnauthorized:[] @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 135
---------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 118
---------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:headers:[headers -> headers.add("Authorization","Bearer ")] @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 82
------------INS LambdaExpression@@headers -> headers.add("Authorization","Bearer ") @TO@ MethodInvocation@@MethodName:headers:[headers -> headers.add("Authorization","Bearer ")] @AT@ 8915 @LENGTH@ 50
---------------INS VariableDeclarationFragment@@headers @TO@ LambdaExpression@@headers -> headers.add("Authorization","Bearer ") @AT@ 8915 @LENGTH@ 7
------------------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers @AT@ 8915 @LENGTH@ 7
---------------INS MethodInvocation@@headers.add("Authorization","Bearer ") @TO@ LambdaExpression@@headers -> headers.add("Authorization","Bearer ") @AT@ 8926 @LENGTH@ 39
------------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.add("Authorization","Bearer ") @AT@ 8926 @LENGTH@ 7
------------------INS SimpleName@@MethodName:add:["Authorization", "Bearer "] @TO@ MethodInvocation@@headers.add("Authorization","Bearer ") @AT@ 8934 @LENGTH@ 31
---------------------INS StringLiteral@@"Authorization" @TO@ SimpleName@@MethodName:add:["Authorization", "Bearer "] @AT@ 8938 @LENGTH@ 15
---------------------INS StringLiteral@@"Bearer " @TO@ SimpleName@@MethodName:add:["Authorization", "Bearer "] @AT@ 8955 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 17
---------INS FieldAccess@@this.client @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 8884 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.client @AT@ 8884 @LENGTH@ 4
------------INS SimpleName@@client @TO@ FieldAccess@@this.client @AT@ 8889 @LENGTH@ 6
---------INS SimpleName@@MethodName:value:[HttpHeaders.WWW_AUTHENTICATE, startsWith("Bearer error=\"invalid_token\"")] @TO@ MethodInvocation@@this.client.get().headers(headers -> headers.add("Authorization","Bearer ")).exchange().expectStatus().isUnauthorized().expectHeader().value(HttpHeaders.WWW_AUTHENTICATE,startsWith("Bearer error=\"invalid_token\"")) @AT@ 9040 @LENGTH@ 81
------------INS QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @TO@ SimpleName@@MethodName:value:[HttpHeaders.WWW_AUTHENTICATE, startsWith("Bearer error=\"invalid_token\"")] @AT@ 9046 @LENGTH@ 28
---------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @AT@ 9046 @LENGTH@ 11
---------------INS SimpleName@@WWW_AUTHENTICATE @TO@ QualifiedName@@HttpHeaders.WWW_AUTHENTICATE @AT@ 9058 @LENGTH@ 16
------------INS MethodInvocation@@startsWith("Bearer error=\"invalid_token\"") @TO@ SimpleName@@MethodName:value:[HttpHeaders.WWW_AUTHENTICATE, startsWith("Bearer error=\"invalid_token\"")] @AT@ 9076 @LENGTH@ 44
---------------INS SimpleName@@MethodName:startsWith:["Bearer error=\"invalid_token\""] @TO@ MethodInvocation@@startsWith("Bearer error=\"invalid_token\"") @AT@ 9076 @LENGTH@ 44
------------------INS StringLiteral@@"Bearer error=\"invalid_token\"" @TO@ SimpleName@@MethodName:startsWith:["Bearer error=\"invalid_token\""] @AT@ 9087 @LENGTH@ 32


DEL FieldDeclaration@@private, static, final, String, [INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE="invalid_redirect_uri_parameter"] @AT@ 4626 @LENGTH@ 105
---DEL Modifier@@private @AT@ 4626 @LENGTH@ 7
---DEL Modifier@@static @AT@ 4634 @LENGTH@ 6
---DEL Modifier@@final @AT@ 4641 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 4647 @LENGTH@ 6
---DEL VariableDeclarationFragment@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE="invalid_redirect_uri_parameter" @AT@ 4654 @LENGTH@ 76
------DEL SimpleName@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE @AT@ 4654 @LENGTH@ 41
------DEL StringLiteral@@"invalid_redirect_uri_parameter" @AT@ 4698 @LENGTH@ 32


UPD TryStatement@@try (final BufferedReader in=this.createBufferedReader()){  startMillis=System.currentTimeMillis();  count=0;  count=this.readAll(in);}  @TO@ try (final BufferedReader in=this.createBufferedReader()){  startMillis=System.currentTimeMillis();  count=this.readAll(in);}  @AT@ 4397 @LENGTH@ 202
---DEL ExpressionStatement@@Assignment:count=0 @AT@ 4533 @LENGTH@ 10
------DEL Assignment@@count=0 @AT@ 4533 @LENGTH@ 9
---------DEL SimpleName@@count @AT@ 4533 @LENGTH@ 5
---------DEL Operator@@= @AT@ 4538 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 4541 @LENGTH@ 1


INS IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RoutingSlip {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 18750 @LENGTH@ 449
---INS InfixExpression@@producerCache == null @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RoutingSlip {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 18754 @LENGTH@ 21
------INS SimpleName@@producerCache @TO@ InfixExpression@@producerCache == null @AT@ 18754 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@producerCache == null @AT@ 18767 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@producerCache == null @AT@ 18771 @LENGTH@ 4
---INS Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RoutingSlip {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RoutingSlip {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 18777 @LENGTH@ 422
------MOV IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("RoutingSlip {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 18694 @LENGTH@ 237
---------DEL InfixExpression@@producerCache == null @AT@ 18698 @LENGTH@ 21
------------DEL SimpleName@@producerCache @AT@ 18698 @LENGTH@ 13
------------DEL Operator@@== @AT@ 18711 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 18715 @LENGTH@ 4
---------UPD Block@@ThenBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ ElseBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 18721 @LENGTH@ 210
------------UPD ExpressionStatement@@MethodInvocation:LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ MethodInvocation:LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 18820 @LENGTH@ 101
---------------UPD MethodInvocation@@LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 18820 @LENGTH@ 100
------------------UPD SimpleName@@MethodName:debug:["RoutingSlip {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @TO@ MethodName:debug:["RoutingSlip {} using ProducerCache with cacheSize={}", this, cacheSize] @AT@ 18824 @LENGTH@ 96
---------------------DEL MethodInvocation@@producerCache.getCapacity() @AT@ 18892 @LENGTH@ 27
------------------------DEL SimpleName@@Name:producerCache @AT@ 18892 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:getCapacity:[] @AT@ 18906 @LENGTH@ 13
---------------------INS SimpleName@@cacheSize @TO@ SimpleName@@MethodName:debug:["RoutingSlip {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @AT@ 19164 @LENGTH@ 9
---------INS InfixExpression@@cacheSize < 0 @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 18795 @LENGTH@ 13
------------INS SimpleName@@cacheSize @TO@ InfixExpression@@cacheSize < 0 @AT@ 18795 @LENGTH@ 9
------------INS Operator@@< @TO@ InfixExpression@@cacheSize < 0 @AT@ 18804 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@cacheSize < 0 @AT@ 18807 @LENGTH@ 1
---------INS Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RoutingSlip {} is not using ProducerCache",this);} @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RoutingSlip {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 18810 @LENGTH@ 169
------------INS ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RoutingSlip {} is not using ProducerCache",this);} @AT@ 18828 @LENGTH@ 59
---------------INS Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @TO@ ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @AT@ 18828 @LENGTH@ 58
------------------INS SimpleName@@producerCache @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 18828 @LENGTH@ 13
------------------INS Operator@@= @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 18841 @LENGTH@ 1
------------------INS ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 18844 @LENGTH@ 42
---------------------INS New@@new @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 18844 @LENGTH@ 3
---------------------INS SimpleType@@EmptyProducerCache @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 18848 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 18867 @LENGTH@ 4
---------------------INS SimpleName@@camelContext @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 18873 @LENGTH@ 12
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("RoutingSlip {} is not using ProducerCache",this) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RoutingSlip {} is not using ProducerCache",this);} @AT@ 18904 @LENGTH@ 61
---------------INS MethodInvocation@@LOG.debug("RoutingSlip {} is not using ProducerCache",this) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("RoutingSlip {} is not using ProducerCache",this) @AT@ 18904 @LENGTH@ 60
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("RoutingSlip {} is not using ProducerCache",this) @AT@ 18904 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["RoutingSlip {} is not using ProducerCache", this] @TO@ MethodInvocation@@LOG.debug("RoutingSlip {} is not using ProducerCache",this) @AT@ 18908 @LENGTH@ 56
---------------------INS StringLiteral@@"RoutingSlip {} is not using ProducerCache" @TO@ SimpleName@@MethodName:debug:["RoutingSlip {} is not using ProducerCache", this] @AT@ 18914 @LENGTH@ 43
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:debug:["RoutingSlip {} is not using ProducerCache", this] @AT@ 18959 @LENGTH@ 4


UPD IfStatement@@if (isRefreshTokenRequest(parameters)) {  tokenRequest.setScope(OAuth2Utils.parseParameterList(parameters.get(OAuth2Utils.SCOPE)));} @TO@ if (isRefreshTokenRequest(parameters)) {  if (StringUtils.isEmpty(parameters.get("refresh_token"))) {    throw new InvalidRequestException("refresh_token parameter not provided");  }  tokenRequest.setScope(OAuth2Utils.parseParameterList(parameters.get(OAuth2Utils.SCOPE)));} @AT@ 6089 @LENGTH@ 238
---UPD Block@@ThenBody:{  tokenRequest.setScope(OAuth2Utils.parseParameterList(parameters.get(OAuth2Utils.SCOPE)));} @TO@ ThenBody:{  if (StringUtils.isEmpty(parameters.get("refresh_token"))) {    throw new InvalidRequestException("refresh_token parameter not provided");  }  tokenRequest.setScope(OAuth2Utils.parseParameterList(parameters.get(OAuth2Utils.SCOPE)));} @AT@ 6128 @LENGTH@ 199
------INS IfStatement@@if (StringUtils.isEmpty(parameters.get("refresh_token"))) {  throw new InvalidRequestException("refresh_token parameter not provided");} @TO@ Block@@ThenBody:{  tokenRequest.setScope(OAuth2Utils.parseParameterList(parameters.get(OAuth2Utils.SCOPE)));} @AT@ 6133 @LENGTH@ 143
---------INS MethodInvocation@@StringUtils.isEmpty(parameters.get("refresh_token")) @TO@ IfStatement@@if (StringUtils.isEmpty(parameters.get("refresh_token"))) {  throw new InvalidRequestException("refresh_token parameter not provided");} @AT@ 6137 @LENGTH@ 52
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(parameters.get("refresh_token")) @AT@ 6137 @LENGTH@ 11
------------INS SimpleName@@MethodName:isEmpty:[parameters.get("refresh_token")] @TO@ MethodInvocation@@StringUtils.isEmpty(parameters.get("refresh_token")) @AT@ 6149 @LENGTH@ 40
---------------MOV MethodInvocation@@parameters.get("refresh_token") @TO@ SimpleName@@MethodName:isEmpty:[parameters.get("refresh_token")] @AT@ 9061 @LENGTH@ 31
---------INS Block@@ThenBody:{  throw new InvalidRequestException("refresh_token parameter not provided");} @TO@ IfStatement@@if (StringUtils.isEmpty(parameters.get("refresh_token"))) {  throw new InvalidRequestException("refresh_token parameter not provided");} @AT@ 6191 @LENGTH@ 85
------------INS ThrowStatement@@ClassInstanceCreation:new InvalidRequestException("refresh_token parameter not provided") @TO@ Block@@ThenBody:{  throw new InvalidRequestException("refresh_token parameter not provided");} @AT@ 6197 @LENGTH@ 74
---------------INS ClassInstanceCreation@@InvalidRequestException["refresh_token parameter not provided"] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidRequestException("refresh_token parameter not provided") @AT@ 6203 @LENGTH@ 67
------------------INS New@@new @TO@ ClassInstanceCreation@@InvalidRequestException["refresh_token parameter not provided"] @AT@ 6203 @LENGTH@ 3
------------------INS SimpleType@@InvalidRequestException @TO@ ClassInstanceCreation@@InvalidRequestException["refresh_token parameter not provided"] @AT@ 6207 @LENGTH@ 23
------------------INS StringLiteral@@"refresh_token parameter not provided" @TO@ ClassInstanceCreation@@InvalidRequestException["refresh_token parameter not provided"] @AT@ 6231 @LENGTH@ 38


INS ExpressionStatement@@MethodInvocation:configureConsumer(consumer) @TO@ MethodDeclaration@@public, Consumer, MethodName:createConsumer, Processor processor, Exception,  @AT@ 2274 @LENGTH@ 28
---INS MethodInvocation@@configureConsumer(consumer) @TO@ ExpressionStatement@@MethodInvocation:configureConsumer(consumer) @AT@ 2274 @LENGTH@ 27
------INS SimpleName@@MethodName:configureConsumer:[consumer] @TO@ MethodInvocation@@configureConsumer(consumer) @AT@ 2274 @LENGTH@ 27
---------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:configureConsumer:[consumer] @AT@ 2292 @LENGTH@ 8


UPD MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @TO@ protected, void, MethodName:doShutdown, Exception,  @AT@ 18037 @LENGTH@ 559
---UPD SimpleName@@MethodName:doStop @TO@ MethodName:doShutdown @AT@ 18052 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new HiveException(e,ErrorMsg.GENERIC_ERROR,"in database" + desc.getDbName()) @TO@ ClassInstanceCreation:new HiveException(e,ErrorMsg.GENERIC_ERROR,"in database " + desc.getDbName()) @AT@ 2799 @LENGTH@ 85
---UPD ClassInstanceCreation@@HiveException[e, ErrorMsg.GENERIC_ERROR, "in database" + desc.getDbName()] @TO@ HiveException[e, ErrorMsg.GENERIC_ERROR, "in database " + desc.getDbName()] @AT@ 2805 @LENGTH@ 78
------UPD InfixExpression@@"in database" + desc.getDbName() @TO@ "in database " + desc.getDbName() @AT@ 2850 @LENGTH@ 32
---------UPD StringLiteral@@"in database" @TO@ "in database " @AT@ 2850 @LENGTH@ 13


DEL MethodDeclaration@@OperationFailedException, MethodName:cannotRemoveFilter, String name, Collection<String> references,  @AT@ 42246 @LENGTH@ 63
---DEL SimpleType@@OperationFailedException @AT@ 42221 @LENGTH@ 24
---DEL SimpleName@@MethodName:cannotRemoveFilter @AT@ 42246 @LENGTH@ 18
---DEL SingleVariableDeclaration@@String name @AT@ 42265 @LENGTH@ 11
------DEL SimpleType@@String @AT@ 42265 @LENGTH@ 6
------DEL SimpleName@@name @AT@ 42272 @LENGTH@ 4
---DEL SingleVariableDeclaration@@Collection<String> references @AT@ 42278 @LENGTH@ 29
------DEL ParameterizedType@@Collection<String> @AT@ 42278 @LENGTH@ 18
---------DEL SimpleType@@Collection @AT@ 42278 @LENGTH@ 10
---------DEL SimpleType@@String @AT@ 42289 @LENGTH@ 6
------DEL SimpleName@@references @AT@ 42297 @LENGTH@ 10


UPD MethodDeclaration@@public, voidMethodName:Base32OutputStream, final OutputStream out, final boolean doEncode, final int lineLength, final byte[] lineSeparator,  @TO@ public, voidMethodName:Base32OutputStream, final OutputStream ouput, final boolean doEncode, final int lineLength, final byte[] lineSeparator,  @AT@ 3677 @LENGTH@ 230
---UPD SingleVariableDeclaration@@final OutputStream out @TO@ final OutputStream ouput @AT@ 3703 @LENGTH@ 22
------UPD SimpleName@@out @TO@ ouput @AT@ 3722 @LENGTH@ 3
---UPD SuperConstructorInvocation@@super(out,new Base32(lineLength,lineSeparator),doEncode);
 @TO@ super(ouput,new Base32(lineLength,lineSeparator),doEncode);
 @AT@ 3841 @LENGTH@ 60
------UPD SimpleName@@out @TO@ ouput @AT@ 3847 @LENGTH@ 3


UPD VariableDeclarationStatement@@RoutesDefinition routes=new ModelParser(new StringReader("<routes>" + "<route id='foo'>" + "<from uri='my:bar'/>"+ "<to uri='mock:res'/>"+ "</route>"+ "</routes>")).parseRoutesDefinition(); @TO@ RoutesDefinition routes=new ModelParser(new StringReader("<routes>" + "  <route id='foo'>" + "    <from uri='my:bar'/>"+ "    <to uri='mock:res'/>"+ "  </route>"+ "</routes>")).parseRoutesDefinition(); @AT@ 2218 @LENGTH@ 340
---UPD VariableDeclarationFragment@@routes=new ModelParser(new StringReader("<routes>" + "<route id='foo'>" + "<from uri='my:bar'/>"+ "<to uri='mock:res'/>"+ "</route>"+ "</routes>")).parseRoutesDefinition() @TO@ routes=new ModelParser(new StringReader("<routes>" + "  <route id='foo'>" + "    <from uri='my:bar'/>"+ "    <to uri='mock:res'/>"+ "  </route>"+ "</routes>")).parseRoutesDefinition() @AT@ 2235 @LENGTH@ 322
------UPD MethodInvocation@@new ModelParser(new StringReader("<routes>" + "<route id='foo'>" + "<from uri='my:bar'/>"+ "<to uri='mock:res'/>"+ "</route>"+ "</routes>")).parseRoutesDefinition() @TO@ new ModelParser(new StringReader("<routes>" + "  <route id='foo'>" + "    <from uri='my:bar'/>"+ "    <to uri='mock:res'/>"+ "  </route>"+ "</routes>")).parseRoutesDefinition() @AT@ 2244 @LENGTH@ 313
---------UPD ClassInstanceCreation@@ModelParser[new StringReader("<routes>" + "<route id='foo'>" + "<from uri='my:bar'/>"+ "<to uri='mock:res'/>"+ "</route>"+ "</routes>")] @TO@ ModelParser[new StringReader("<routes>" + "  <route id='foo'>" + "    <from uri='my:bar'/>"+ "    <to uri='mock:res'/>"+ "  </route>"+ "</routes>")] @AT@ 2244 @LENGTH@ 289
------------UPD ClassInstanceCreation@@StringReader["<routes>" + "<route id='foo'>" + "<from uri='my:bar'/>"+ "<to uri='mock:res'/>"+ "</route>"+ "</routes>"] @TO@ StringReader["<routes>" + "  <route id='foo'>" + "    <from uri='my:bar'/>"+ "    <to uri='mock:res'/>"+ "  </route>"+ "</routes>"] @AT@ 2260 @LENGTH@ 272
---------------UPD InfixExpression@@"<routes>" + "<route id='foo'>" + "<from uri='my:bar'/>"+ "<to uri='mock:res'/>"+ "</route>"+ "</routes>" @TO@ "<routes>" + "  <route id='foo'>" + "    <from uri='my:bar'/>"+ "    <to uri='mock:res'/>"+ "  </route>"+ "</routes>" @AT@ 2294 @LENGTH@ 228
------------------UPD StringLiteral@@"<route id='foo'>" @TO@ "  <route id='foo'>" @AT@ 2331 @LENGTH@ 18
------------------UPD StringLiteral@@"<from uri='my:bar'/>" @TO@ "    <from uri='my:bar'/>" @AT@ 2380 @LENGTH@ 22
------------------UPD StringLiteral@@"<to uri='mock:res'/>" @TO@ "    <to uri='mock:res'/>" @AT@ 2433 @LENGTH@ 22
------------------UPD StringLiteral@@"</route>" @TO@ "  </route>" @AT@ 2482 @LENGTH@ 10


INS MethodDeclaration@@private, voidMethodName:WekaTypeConverters,  @TO@ TypeDeclaration@@[@Converter, public]WekaTypeConverters,  @AT@ 1066 @LENGTH@ 36
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:WekaTypeConverters,  @AT@ 1066 @LENGTH@ 7
---INS SimpleName@@MethodName:WekaTypeConverters @TO@ MethodDeclaration@@private, voidMethodName:WekaTypeConverters,  @AT@ 1074 @LENGTH@ 18


UPD Block@@ThenBody:{  s=producer.apply(endpoint);  endpoint.getCamelContext().addService(s,true,true);} @TO@ ThenBody:{  S tempS=producer.apply(endpoint);  endpoint.getCamelContext().addService(tempS,true,true);  s=tempS;} @AT@ 6711 @LENGTH@ 155
---INS VariableDeclarationStatement@@S tempS=producer.apply(endpoint); @TO@ Block@@ThenBody:{  s=producer.apply(endpoint);  endpoint.getCamelContext().addService(s,true,true);} @AT@ 6737 @LENGTH@ 35
------INS SimpleType@@S @TO@ VariableDeclarationStatement@@S tempS=producer.apply(endpoint); @AT@ 6737 @LENGTH@ 1
------INS VariableDeclarationFragment@@tempS=producer.apply(endpoint) @TO@ VariableDeclarationStatement@@S tempS=producer.apply(endpoint); @AT@ 6739 @LENGTH@ 32
---------INS SimpleName@@tempS @TO@ VariableDeclarationFragment@@tempS=producer.apply(endpoint) @AT@ 6739 @LENGTH@ 5
---------MOV MethodInvocation@@producer.apply(endpoint) @TO@ VariableDeclarationFragment@@tempS=producer.apply(endpoint) @AT@ 6741 @LENGTH@ 24
---DEL ExpressionStatement@@Assignment:s=producer.apply(endpoint) @AT@ 6737 @LENGTH@ 29
------DEL Assignment@@s=producer.apply(endpoint) @AT@ 6737 @LENGTH@ 28
---------DEL SimpleName@@s @AT@ 6737 @LENGTH@ 1
---------DEL Operator@@= @AT@ 6738 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:endpoint.getCamelContext().addService(s,true,true) @TO@ MethodInvocation:endpoint.getCamelContext().addService(tempS,true,true) @AT@ 6791 @LENGTH@ 53
------UPD MethodInvocation@@endpoint.getCamelContext().addService(s,true,true) @TO@ endpoint.getCamelContext().addService(tempS,true,true) @AT@ 6791 @LENGTH@ 52
---------UPD SimpleName@@MethodName:addService:[s, true, true] @TO@ MethodName:addService:[tempS, true, true] @AT@ 6818 @LENGTH@ 25
------------UPD SimpleName@@s @TO@ tempS @AT@ 6829 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:s=tempS @TO@ Block@@ThenBody:{  s=producer.apply(endpoint);  endpoint.getCamelContext().addService(s,true,true);} @AT@ 6879 @LENGTH@ 10
------INS Assignment@@s=tempS @TO@ ExpressionStatement@@Assignment:s=tempS @AT@ 6879 @LENGTH@ 9
---------INS SimpleName@@s @TO@ Assignment@@s=tempS @AT@ 6879 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@s=tempS @AT@ 6880 @LENGTH@ 1
---------INS SimpleName@@tempS @TO@ Assignment@@s=tempS @AT@ 6883 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:throwsIfZip64ExtraCouldNotBeUnderstoodY, Exception,  @TO@ public, void, MethodName:throwsIfThereIsNoEocd, Exception,  @AT@ 29100 @LENGTH@ 431
---UPD SimpleName@@MethodName:throwsIfZip64ExtraCouldNotBeUnderstoodY @TO@ MethodName:throwsIfThereIsNoEocd @AT@ 29112 @LENGTH@ 39


INS ExpressionStatement@@MethodInvocation:seda.setQueueSize(2) @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 2078 @LENGTH@ 21
---INS MethodInvocation@@seda.setQueueSize(2) @TO@ ExpressionStatement@@MethodInvocation:seda.setQueueSize(2) @AT@ 2078 @LENGTH@ 20
------INS SimpleName@@Name:seda @TO@ MethodInvocation@@seda.setQueueSize(2) @AT@ 2078 @LENGTH@ 4
------INS SimpleName@@MethodName:setQueueSize:[2] @TO@ MethodInvocation@@seda.setQueueSize(2) @AT@ 2083 @LENGTH@ 15
---------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:setQueueSize:[2] @AT@ 2096 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoFieldSetMapperIsProvided,  @TO@ TypeDeclaration@@[public]FlatFileItemReaderBuilderTests,  @AT@ 16048 @LENGTH@ 664
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoFieldSetMapperIsProvided,  @AT@ 16048 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoFieldSetMapperIsProvided,  @AT@ 16055 @LENGTH@ 4
---INS SimpleName@@MethodName:testErrorMessageWhenNoFieldSetMapperIsProvided @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoFieldSetMapperIsProvided,  @AT@ 16060 @LENGTH@ 46
---INS TryStatement@@try {  new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build();} catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoFieldSetMapperIsProvided,  @AT@ 16113 @LENGTH@ 596
------INS ExpressionStatement@@MethodInvocation:new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @TO@ TryStatement@@try {  new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build();} catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @AT@ 16122 @LENGTH@ 178
---------INS MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @TO@ ExpressionStatement@@MethodInvocation:new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @AT@ 16122 @LENGTH@ 177
------------INS MethodInvocation@@MethodName:lineTokenizer:[line -> new DefaultFieldSet(line.split(";"))] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @AT@ 16122 @LENGTH@ 163
---------------INS LambdaExpression@@line -> new DefaultFieldSet(line.split(";")) @TO@ MethodInvocation@@MethodName:lineTokenizer:[line -> new DefaultFieldSet(line.split(";"))] @AT@ 16240 @LENGTH@ 44
------------------INS VariableDeclarationFragment@@line @TO@ LambdaExpression@@line -> new DefaultFieldSet(line.split(";")) @AT@ 16240 @LENGTH@ 4
---------------------INS SimpleName@@line @TO@ VariableDeclarationFragment@@line @AT@ 16240 @LENGTH@ 4
------------------INS ClassInstanceCreation@@DefaultFieldSet[line.split(";")] @TO@ LambdaExpression@@line -> new DefaultFieldSet(line.split(";")) @AT@ 16248 @LENGTH@ 36
---------------------INS New@@new @TO@ ClassInstanceCreation@@DefaultFieldSet[line.split(";")] @AT@ 16248 @LENGTH@ 3
---------------------INS SimpleType@@DefaultFieldSet @TO@ ClassInstanceCreation@@DefaultFieldSet[line.split(";")] @AT@ 16252 @LENGTH@ 15
---------------------INS MethodInvocation@@line.split(";") @TO@ ClassInstanceCreation@@DefaultFieldSet[line.split(";")] @AT@ 16268 @LENGTH@ 15
------------------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.split(";") @AT@ 16268 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:split:[";"] @TO@ MethodInvocation@@line.split(";") @AT@ 16273 @LENGTH@ 10
---------------------------INS StringLiteral@@";" @TO@ SimpleName@@MethodName:split:[";"] @AT@ 16279 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:resource:[getResource("1;2;3")] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @AT@ 16122 @LENGTH@ 97
---------------INS MethodInvocation@@getResource("1;2;3") @TO@ MethodInvocation@@MethodName:resource:[getResource("1;2;3")] @AT@ 16198 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getResource:["1;2;3"] @TO@ MethodInvocation@@getResource("1;2;3") @AT@ 16198 @LENGTH@ 20
---------------------INS StringLiteral@@"1;2;3" @TO@ SimpleName@@MethodName:getResource:["1;2;3"] @AT@ 16210 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:name:["fooReader"] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @AT@ 16122 @LENGTH@ 60
---------------INS StringLiteral@@"fooReader" @TO@ MethodInvocation@@MethodName:name:["fooReader"] @AT@ 16170 @LENGTH@ 11
------------INS ClassInstanceCreation@@FlatFileItemReaderBuilder<Foo>[] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @AT@ 16122 @LENGTH@ 36
---------------INS New@@new @TO@ ClassInstanceCreation@@FlatFileItemReaderBuilder<Foo>[] @AT@ 16122 @LENGTH@ 3
---------------INS ParameterizedType@@FlatFileItemReaderBuilder<Foo> @TO@ ClassInstanceCreation@@FlatFileItemReaderBuilder<Foo>[] @AT@ 16126 @LENGTH@ 30
------------------INS SimpleType@@FlatFileItemReaderBuilder @TO@ ParameterizedType@@FlatFileItemReaderBuilder<Foo> @AT@ 16126 @LENGTH@ 25
------------------INS SimpleType@@Foo @TO@ ParameterizedType@@FlatFileItemReaderBuilder<Foo> @AT@ 16152 @LENGTH@ 3
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build() @AT@ 16292 @LENGTH@ 7
------INS CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @TO@ TryStatement@@try {  new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).lineTokenizer(line -> new DefaultFieldSet(line.split(";"))).build();} catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @AT@ 16305 @LENGTH@ 404
---------INS SingleVariableDeclaration@@IllegalStateException exception @TO@ CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @AT@ 16312 @LENGTH@ 31
------------INS SimpleType@@IllegalStateException @TO@ SingleVariableDeclaration@@IllegalStateException exception @AT@ 16312 @LENGTH@ 21
------------INS SimpleName@@exception @TO@ SingleVariableDeclaration@@IllegalStateException exception @AT@ 16334 @LENGTH@ 9
---------INS VariableDeclarationStatement@@String exceptionMessage=exception.getMessage(); @TO@ CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @AT@ 16350 @LENGTH@ 49
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String exceptionMessage=exception.getMessage(); @AT@ 16350 @LENGTH@ 6
------------INS VariableDeclarationFragment@@exceptionMessage=exception.getMessage() @TO@ VariableDeclarationStatement@@String exceptionMessage=exception.getMessage(); @AT@ 16357 @LENGTH@ 41
---------------INS SimpleName@@exceptionMessage @TO@ VariableDeclarationFragment@@exceptionMessage=exception.getMessage() @AT@ 16357 @LENGTH@ 16
---------------INS MethodInvocation@@exception.getMessage() @TO@ VariableDeclarationFragment@@exceptionMessage=exception.getMessage() @AT@ 16376 @LENGTH@ 22
------------------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.getMessage() @AT@ 16376 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exception.getMessage() @AT@ 16386 @LENGTH@ 12
---------INS IfStatement@@if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {  fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");} @TO@ CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @AT@ 16403 @LENGTH@ 217
------------INS MethodInvocation@@exceptionMessage.equals("No LineTokenizer implementation was provided.") @TO@ IfStatement@@if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {  fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");} @AT@ 16407 @LENGTH@ 72
---------------INS SimpleName@@Name:exceptionMessage @TO@ MethodInvocation@@exceptionMessage.equals("No LineTokenizer implementation was provided.") @AT@ 16407 @LENGTH@ 16
---------------INS SimpleName@@MethodName:equals:["No LineTokenizer implementation was provided."] @TO@ MethodInvocation@@exceptionMessage.equals("No LineTokenizer implementation was provided.") @AT@ 16424 @LENGTH@ 55
------------------INS StringLiteral@@"No LineTokenizer implementation was provided." @TO@ SimpleName@@MethodName:equals:["No LineTokenizer implementation was provided."] @AT@ 16431 @LENGTH@ 47
------------INS Block@@ThenBody:{  fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");} @TO@ IfStatement@@if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {  fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");} @AT@ 16481 @LENGTH@ 139
---------------INS ExpressionStatement@@MethodInvocation:fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided") @TO@ Block@@ThenBody:{  fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");} @AT@ 16487 @LENGTH@ 128
------------------INS MethodInvocation@@fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided") @TO@ ExpressionStatement@@MethodInvocation:fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided") @AT@ 16487 @LENGTH@ 127
---------------------INS SimpleName@@MethodName:fail:["Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided"] @TO@ MethodInvocation@@fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided") @AT@ 16487 @LENGTH@ 127
------------------------INS InfixExpression@@"Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided" @TO@ SimpleName@@MethodName:fail:["Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided"] @AT@ 16492 @LENGTH@ 121
---------------------------INS StringLiteral@@"Error message should not be 'No LineTokenizer implementation was provided.'" @TO@ InfixExpression@@"Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided" @AT@ 16492 @LENGTH@ 77
---------------------------INS Operator@@+ @TO@ InfixExpression@@"Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided" @AT@ 16569 @LENGTH@ 1
---------------------------INS StringLiteral@@" when a LineTokenizer is provided" @TO@ InfixExpression@@"Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided" @AT@ 16578 @LENGTH@ 35
---------INS ExpressionStatement@@MethodInvocation:assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage) @TO@ CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  if (exceptionMessage.equals("No LineTokenizer implementation was provided.")) {    fail("Error message should not be 'No LineTokenizer implementation was provided.'" + " when a LineTokenizer is provided");  }  assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage);} @AT@ 16624 @LENGTH@ 81
------------INS MethodInvocation@@assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage) @AT@ 16624 @LENGTH@ 80
---------------INS SimpleName@@MethodName:assertEquals:["No FieldSetMapper implementation was provided.", exceptionMessage] @TO@ MethodInvocation@@assertEquals("No FieldSetMapper implementation was provided.",exceptionMessage) @AT@ 16624 @LENGTH@ 80
------------------INS StringLiteral@@"No FieldSetMapper implementation was provided." @TO@ SimpleName@@MethodName:assertEquals:["No FieldSetMapper implementation was provided.", exceptionMessage] @AT@ 16637 @LENGTH@ 48
------------------INS SimpleName@@exceptionMessage @TO@ SimpleName@@MethodName:assertEquals:["No FieldSetMapper implementation was provided.", exceptionMessage] @AT@ 16687 @LENGTH@ 16


UPD MethodDeclaration@@default, UpdateWithUpdate<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, UpdateWithUpdate<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 6582 @LENGTH@ 134
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 6619 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 6638 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 6663 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 6670 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 6670 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 6679 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 6685 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 6691 @LENGTH@ 18


UPD FieldDeclaration@@protected, final, Logger, [LOG=LoggerFactory.getLogger(getClass())] @TO@ protected, final, Logger, [log=LoggerFactory.getLogger(getClass())] @AT@ 1098 @LENGTH@ 65
---UPD VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(getClass()) @TO@ log=LoggerFactory.getLogger(getClass()) @AT@ 1121 @LENGTH@ 41
------UPD SimpleName@@LOG @TO@ log @AT@ 1121 @LENGTH@ 3


UPD MethodDeclaration@@protected, voidMethodName:BaseNCodecInputStream, final InputStream in, final BaseNCodec baseNCodec, final boolean doEncode,  @TO@ protected, voidMethodName:BaseNCodecInputStream, final InputStream input, final BaseNCodec baseNCodec, final boolean doEncode,  @AT@ 1411 @LENGTH@ 205
---UPD SingleVariableDeclaration@@final InputStream in @TO@ final InputStream input @AT@ 1443 @LENGTH@ 20
------UPD SimpleName@@in @TO@ input @AT@ 1461 @LENGTH@ 2
---UPD SuperConstructorInvocation@@super(in);
 @TO@ super(input);
 @AT@ 1528 @LENGTH@ 10
------UPD SimpleName@@in @TO@ input @AT@ 1534 @LENGTH@ 2


UPD IfStatement@@if (!detectBlueprintMainOnClassPath()) {  throw new MojoFailureException("Cannot run OSGi Blueprint Main because camel-blueprint-main JAR is not available on classpath");} @TO@ if (usingBlueprintMain && !detectBlueprintMainOnClassPath()) {  throw new MojoFailureException("Cannot run OSGi Blueprint Main because camel-blueprint-main JAR is not available on classpath");} @AT@ 17280 @LENGTH@ 191
---INS InfixExpression@@usingBlueprintMain && !detectBlueprintMainOnClassPath() @TO@ IfStatement@@if (!detectBlueprintMainOnClassPath()) {  throw new MojoFailureException("Cannot run OSGi Blueprint Main because camel-blueprint-main JAR is not available on classpath");} @AT@ 17284 @LENGTH@ 55
------INS SimpleName@@usingBlueprintMain @TO@ InfixExpression@@usingBlueprintMain && !detectBlueprintMainOnClassPath() @AT@ 17284 @LENGTH@ 18
------INS Operator@@&& @TO@ InfixExpression@@usingBlueprintMain && !detectBlueprintMainOnClassPath() @AT@ 17302 @LENGTH@ 2
------INS PrefixExpression@@!detectBlueprintMainOnClassPath() @TO@ InfixExpression@@usingBlueprintMain && !detectBlueprintMainOnClassPath() @AT@ 17306 @LENGTH@ 33
---------MOV Operator@@! @TO@ PrefixExpression@@!detectBlueprintMainOnClassPath() @AT@ 17284 @LENGTH@ 1
---------MOV MethodInvocation@@MethodName:detectBlueprintMainOnClassPath:[] @TO@ PrefixExpression@@!detectBlueprintMainOnClassPath() @AT@ 17285 @LENGTH@ 32
---DEL PrefixExpression@@!detectBlueprintMainOnClassPath() @AT@ 17284 @LENGTH@ 33


DEL MethodDeclaration@@protected, void, MethodName:doStartEagerServices,  @AT@ 10438 @LENGTH@ 132
---DEL Modifier@@protected @AT@ 10438 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 10448 @LENGTH@ 4
---DEL SimpleName@@MethodName:doStartEagerServices @AT@ 10453 @LENGTH@ 20
---DEL ExpressionStatement@@MethodInvocation:getExtension(HealthCheckRegistry.class) @AT@ 10486 @LENGTH@ 40
------DEL MethodInvocation@@getExtension(HealthCheckRegistry.class) @AT@ 10486 @LENGTH@ 39
---------DEL SimpleName@@MethodName:getExtension:[HealthCheckRegistry.class] @AT@ 10486 @LENGTH@ 39
------------DEL TypeLiteral@@HealthCheckRegistry.class @AT@ 10499 @LENGTH@ 25
---DEL ExpressionStatement@@SuperMethodInvocation:super.doStartEagerServices() @AT@ 10535 @LENGTH@ 29
------DEL SuperMethodInvocation@@super.doStartEagerServices() @AT@ 10535 @LENGTH@ 28
---------DEL SimpleName@@MethodName:doStartEagerServices:[] @AT@ 10541 @LENGTH@ 20


UPD VariableDeclarationStatement@@String xml=new String(Saml2Utils.decode(responseUrlDecoded),UTF_8); @TO@ String xml=new String(Saml2Utils.samlDecode(responseUrlDecoded),UTF_8); @AT@ 1993 @LENGTH@ 70
---UPD VariableDeclarationFragment@@xml=new String(Saml2Utils.decode(responseUrlDecoded),UTF_8) @TO@ xml=new String(Saml2Utils.samlDecode(responseUrlDecoded),UTF_8) @AT@ 2000 @LENGTH@ 62
------UPD ClassInstanceCreation@@String[Saml2Utils.decode(responseUrlDecoded), UTF_8] @TO@ String[Saml2Utils.samlDecode(responseUrlDecoded), UTF_8] @AT@ 2006 @LENGTH@ 56
---------UPD MethodInvocation@@Saml2Utils.decode(responseUrlDecoded) @TO@ Saml2Utils.samlDecode(responseUrlDecoded) @AT@ 2017 @LENGTH@ 37
------------UPD SimpleName@@MethodName:decode:[responseUrlDecoded] @TO@ MethodName:samlDecode:[responseUrlDecoded] @AT@ 2028 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:shouldReturnLongIfIdentifierIsBigInteger, SQLException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]AclClassIdUtilsTest,  @AT@ 1965 @LENGTH@ 252
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldReturnLongIfIdentifierIsBigInteger, SQLException,  @AT@ 1965 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldReturnLongIfIdentifierIsBigInteger, SQLException,  @AT@ 1972 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldReturnLongIfIdentifierIsBigInteger @TO@ MethodDeclaration@@public, void, MethodName:shouldReturnLongIfIdentifierIsBigInteger, SQLException,  @AT@ 1977 @LENGTH@ 40
---INS SimpleType@@SQLException @TO@ MethodDeclaration@@public, void, MethodName:shouldReturnLongIfIdentifierIsBigInteger, SQLException,  @AT@ 2027 @LENGTH@ 12
---INS VariableDeclarationStatement@@Serializable newIdentifier=aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet); @TO@ MethodDeclaration@@public, void, MethodName:shouldReturnLongIfIdentifierIsBigInteger, SQLException,  @AT@ 2054 @LENGTH@ 90
------INS SimpleType@@Serializable @TO@ VariableDeclarationStatement@@Serializable newIdentifier=aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet); @AT@ 2054 @LENGTH@ 12
------INS VariableDeclarationFragment@@newIdentifier=aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet) @TO@ VariableDeclarationStatement@@Serializable newIdentifier=aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet); @AT@ 2067 @LENGTH@ 76
---------INS SimpleName@@newIdentifier @TO@ VariableDeclarationFragment@@newIdentifier=aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet) @AT@ 2067 @LENGTH@ 13
---------INS MethodInvocation@@aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet) @TO@ VariableDeclarationFragment@@newIdentifier=aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet) @AT@ 2083 @LENGTH@ 60
------------INS SimpleName@@Name:aclClassIdUtils @TO@ MethodInvocation@@aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet) @AT@ 2083 @LENGTH@ 15
------------INS SimpleName@@MethodName:identifierFrom:[BIGINT_IDENTIFIER, resultSet] @TO@ MethodInvocation@@aclClassIdUtils.identifierFrom(BIGINT_IDENTIFIER,resultSet) @AT@ 2099 @LENGTH@ 44
---------------INS SimpleName@@BIGINT_IDENTIFIER @TO@ SimpleName@@MethodName:identifierFrom:[BIGINT_IDENTIFIER, resultSet] @AT@ 2114 @LENGTH@ 17
---------------INS SimpleName@@resultSet @TO@ SimpleName@@MethodName:identifierFrom:[BIGINT_IDENTIFIER, resultSet] @AT@ 2133 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(newIdentifier).isEqualTo(DEFAULT_IDENTIFIER) @TO@ MethodDeclaration@@public, void, MethodName:shouldReturnLongIfIdentifierIsBigInteger, SQLException,  @AT@ 2158 @LENGTH@ 56
------INS MethodInvocation@@assertThat(newIdentifier).isEqualTo(DEFAULT_IDENTIFIER) @TO@ ExpressionStatement@@MethodInvocation:assertThat(newIdentifier).isEqualTo(DEFAULT_IDENTIFIER) @AT@ 2158 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:assertThat:[newIdentifier] @TO@ MethodInvocation@@assertThat(newIdentifier).isEqualTo(DEFAULT_IDENTIFIER) @AT@ 2158 @LENGTH@ 25
------------INS SimpleName@@newIdentifier @TO@ MethodInvocation@@MethodName:assertThat:[newIdentifier] @AT@ 2169 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEqualTo:[DEFAULT_IDENTIFIER] @TO@ MethodInvocation@@assertThat(newIdentifier).isEqualTo(DEFAULT_IDENTIFIER) @AT@ 2184 @LENGTH@ 29
------------INS SimpleName@@DEFAULT_IDENTIFIER @TO@ SimpleName@@MethodName:isEqualTo:[DEFAULT_IDENTIFIER] @AT@ 2194 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:bufferedChars.clear() @TO@ MethodInvocation:BufferCaster.cast(bufferedChars).clear() @AT@ 20700 @LENGTH@ 22
---UPD MethodInvocation@@bufferedChars.clear() @TO@ BufferCaster.cast(bufferedChars).clear() @AT@ 20700 @LENGTH@ 21
------UPD SimpleName@@Name:bufferedChars @TO@ bufferedChars @AT@ 20700 @LENGTH@ 13
------INS SimpleName@@Name:BufferCaster @TO@ MethodInvocation@@bufferedChars.clear() @AT@ 20700 @LENGTH@ 12
------INS MethodInvocation@@MethodName:cast:[bufferedChars] @TO@ MethodInvocation@@bufferedChars.clear() @AT@ 20700 @LENGTH@ 32
---------MOV SimpleName@@Name:bufferedChars @TO@ MethodInvocation@@MethodName:cast:[bufferedChars] @AT@ 20700 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:endpoint=new MiloServerEndpoint(uri,remaining,this.namespace,this) @TO@ Assignment:endpoint=new MiloServerEndpoint(uri,remaining,this) @AT@ 16832 @LENGTH@ 72
---UPD Assignment@@endpoint=new MiloServerEndpoint(uri,remaining,this.namespace,this) @TO@ endpoint=new MiloServerEndpoint(uri,remaining,this) @AT@ 16832 @LENGTH@ 71
------UPD ClassInstanceCreation@@MiloServerEndpoint[uri, remaining, this.namespace, this] @TO@ MiloServerEndpoint[uri, remaining, this] @AT@ 16843 @LENGTH@ 60
---------DEL FieldAccess@@this.namespace @AT@ 16882 @LENGTH@ 14
------------DEL ThisExpression@@this @AT@ 16882 @LENGTH@ 4
------------DEL SimpleName@@namespace @AT@ 16887 @LENGTH@ 9
---------DEL ThisExpression@@this @AT@ 16898 @LENGTH@ 4
---------INS ThisExpression@@this @TO@ ClassInstanceCreation@@MiloServerEndpoint[uri, remaining, this.namespace, this] @AT@ 16958 @LENGTH@ 4


UPD Block@@ThenBody:{  LOG.trace("Loading class: {}",clazzName);  Class<?> clazz=classLoader.loadClass(clazzName);  LOG.trace("Creating LURCacheFactory instance from class: {}",clazzName);  Object factory=clazz.getDeclaredConstructor().newInstance();  LOG.trace("Created LURCacheFactory instance: {}",factory);  LOG.info("Detected and using LURCacheFactory: {}",factory);  return (LRUCacheFactory)factory;} @TO@ ThenBody:{  LOG.trace("Loading class: {}",clazzName);  Class<?> clazz=classLoader.loadClass(clazzName);  LOG.trace("Creating LRUCacheFactory instance from class: {}",clazzName);  Object factory=clazz.getDeclaredConstructor().newInstance();  LOG.trace("Created LRUCacheFactory instance: {}",factory);  LOG.info("Detected and using LRUCacheFactory: {}",factory);  return (LRUCacheFactory)factory;} @AT@ 2862 @LENGTH@ 545
---UPD ExpressionStatement@@MethodInvocation:LOG.trace("Creating LURCacheFactory instance from class: {}",clazzName) @TO@ MethodInvocation:LOG.trace("Creating LRUCacheFactory instance from class: {}",clazzName) @AT@ 3018 @LENGTH@ 73
------UPD MethodInvocation@@LOG.trace("Creating LURCacheFactory instance from class: {}",clazzName) @TO@ LOG.trace("Creating LRUCacheFactory instance from class: {}",clazzName) @AT@ 3018 @LENGTH@ 72
---------UPD SimpleName@@MethodName:trace:["Creating LURCacheFactory instance from class: {}", clazzName] @TO@ MethodName:trace:["Creating LRUCacheFactory instance from class: {}", clazzName] @AT@ 3022 @LENGTH@ 68
------------UPD StringLiteral@@"Creating LURCacheFactory instance from class: {}" @TO@ "Creating LRUCacheFactory instance from class: {}" @AT@ 3028 @LENGTH@ 50
---UPD ExpressionStatement@@MethodInvocation:LOG.trace("Created LURCacheFactory instance: {}",factory) @TO@ MethodInvocation:LOG.trace("Created LRUCacheFactory instance: {}",factory) @AT@ 3195 @LENGTH@ 59
------UPD MethodInvocation@@LOG.trace("Created LURCacheFactory instance: {}",factory) @TO@ LOG.trace("Created LRUCacheFactory instance: {}",factory) @AT@ 3195 @LENGTH@ 58
---------UPD SimpleName@@MethodName:trace:["Created LURCacheFactory instance: {}", factory] @TO@ MethodName:trace:["Created LRUCacheFactory instance: {}", factory] @AT@ 3199 @LENGTH@ 54
------------UPD StringLiteral@@"Created LURCacheFactory instance: {}" @TO@ "Created LRUCacheFactory instance: {}" @AT@ 3205 @LENGTH@ 38
---UPD ExpressionStatement@@MethodInvocation:LOG.info("Detected and using LURCacheFactory: {}",factory) @TO@ MethodInvocation:LOG.info("Detected and using LRUCacheFactory: {}",factory) @AT@ 3275 @LENGTH@ 60
------UPD MethodInvocation@@LOG.info("Detected and using LURCacheFactory: {}",factory) @TO@ LOG.info("Detected and using LRUCacheFactory: {}",factory) @AT@ 3275 @LENGTH@ 59
---------UPD SimpleName@@MethodName:info:["Detected and using LURCacheFactory: {}", factory] @TO@ MethodName:info:["Detected and using LRUCacheFactory: {}", factory] @AT@ 3279 @LENGTH@ 55
------------UPD StringLiteral@@"Detected and using LURCacheFactory: {}" @TO@ "Detected and using LRUCacheFactory: {}" @AT@ 3284 @LENGTH@ 40


UPD ExpressionStatement@@Assignment:childServices=new CopyOnWriteArrayList<>() @TO@ Assignment:childServices=new ArrayList<>() @AT@ 4815 @LENGTH@ 45
---UPD Assignment@@childServices=new CopyOnWriteArrayList<>() @TO@ childServices=new ArrayList<>() @AT@ 4815 @LENGTH@ 44
------UPD ClassInstanceCreation@@CopyOnWriteArrayList<>[] @TO@ ArrayList<>[] @AT@ 4831 @LENGTH@ 28
---------UPD ParameterizedType@@CopyOnWriteArrayList<> @TO@ ArrayList<> @AT@ 4835 @LENGTH@ 22
------------UPD SimpleType@@CopyOnWriteArrayList @TO@ ArrayList @AT@ 4835 @LENGTH@ 20


MOV FieldDeclaration@@private, static, final, String[], [CLASS_NAMES=new String[]{"org.apache.camel.main.MainConfigurationProperties","org.apache.camel.main.HystrixConfigurationProperties","org.apache.camel.main.Resilience4jConfigurationProperties","org.apache.camel.main.RestConfigurationProperties","org.apache.camel.ExtendedCamelContext"}] @TO@ TypeDeclaration@@[@Mojo(name="generate-main-configurer",threadSafe=true,defaultPhase=LifecyclePhase.PROCESS_CLASSES), public]MainConfigurerMojo, AbstractGeneratorMojo @AT@ 2021 @LENGTH@ 382


UPD FieldDeclaration@@private, Map<ErrorHandlerFactory,Set<NamedNode>>, [errorHandlers=new HashMap<>()] @TO@ private, ConcurrentMap<ErrorHandlerFactory,Set<NamedNode>>, [errorHandlers=new ConcurrentHashMap<>()] @AT@ 3388 @LENGTH@ 81
---UPD ParameterizedType@@Map<ErrorHandlerFactory,Set<NamedNode>> @TO@ ConcurrentMap<ErrorHandlerFactory,Set<NamedNode>> @AT@ 3396 @LENGTH@ 40
------UPD SimpleType@@Map @TO@ ConcurrentMap @AT@ 3396 @LENGTH@ 3
---UPD VariableDeclarationFragment@@errorHandlers=new HashMap<>() @TO@ errorHandlers=new ConcurrentHashMap<>() @AT@ 3437 @LENGTH@ 31
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ ConcurrentHashMap<>[] @AT@ 3453 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ ConcurrentHashMap<> @AT@ 3457 @LENGTH@ 9
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 3457 @LENGTH@ 7


UPD MethodDeclaration@@static, BinaryTree, MethodName:decode, final InputStream in, final int totalNumberOfValues, IOException,  @TO@ static, BinaryTree, MethodName:decode, final InputStream inputStream, final int totalNumberOfValues, IOException,  @AT@ 3874 @LENGTH@ 3350
---UPD SingleVariableDeclaration@@final InputStream in @TO@ final InputStream inputStream @AT@ 3899 @LENGTH@ 20
------UPD SimpleName@@in @TO@ inputStream @AT@ 3917 @LENGTH@ 2
---UPD VariableDeclarationStatement@@final int size=in.read() + 1; @TO@ final int size=inputStream.read() + 1; @AT@ 4237 @LENGTH@ 31
------UPD VariableDeclarationFragment@@size=in.read() + 1 @TO@ size=inputStream.read() + 1 @AT@ 4247 @LENGTH@ 20
---------UPD InfixExpression@@in.read() + 1 @TO@ inputStream.read() + 1 @AT@ 4254 @LENGTH@ 13
------------UPD MethodInvocation@@in.read() @TO@ inputStream.read() @AT@ 4254 @LENGTH@ 9
---------------UPD SimpleName@@Name:in @TO@ Name:inputStream @AT@ 4254 @LENGTH@ 2
---UPD VariableDeclarationStatement@@final int read=IOUtils.readFully(in,encodedTree); @TO@ final int read=IOUtils.readFully(inputStream,encodedTree); @AT@ 4469 @LENGTH@ 52
------UPD VariableDeclarationFragment@@read=IOUtils.readFully(in,encodedTree) @TO@ read=IOUtils.readFully(inputStream,encodedTree) @AT@ 4479 @LENGTH@ 41
---------UPD MethodInvocation@@IOUtils.readFully(in,encodedTree) @TO@ IOUtils.readFully(inputStream,encodedTree) @AT@ 4486 @LENGTH@ 34
------------UPD SimpleName@@MethodName:readFully:[in, encodedTree] @TO@ MethodName:readFully:[inputStream, encodedTree] @AT@ 4494 @LENGTH@ 26
---------------UPD SimpleName@@in @TO@ inputStream @AT@ 4504 @LENGTH@ 2


INS MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @TO@ TypeDeclaration@@[public]RabbitListenerAnnotationBeanPostProcessor, [BeanPostProcessor, Ordered, BeanFactoryAware, BeanClassLoaderAware, EnvironmentAware, SmartInitializingSingleton] @AT@ 20069 @LENGTH@ 1123
---MOV VariableDeclarationStatement@@RabbitListener rabbitListener=rabbitListenerArg; @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 17764 @LENGTH@ 50
---MOV VariableDeclarationStatement@@MergedAnnotation<RabbitListener> mergedAnnotation=MergedAnnotation.missing(); @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 17817 @LENGTH@ 79
---MOV IfStatement@@if (endpoint instanceof MultiMethodRabbitListenerEndpoint) {  if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} else {  if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 18067 @LENGTH@ 535
---MOV IfStatement@@if (!MergedAnnotation.missing().equals(mergedAnnotation)) {  rabbitListener=mergedAnnotation.synthesize();} @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 18605 @LENGTH@ 114
---INS Modifier@@private @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 20069 @LENGTH@ 7
---INS SimpleType@@RabbitListener @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 20077 @LENGTH@ 14
---INS SimpleName@@MethodName:synthesizeIfPossible @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 20092 @LENGTH@ 20
---INS SingleVariableDeclaration@@MethodRabbitListenerEndpoint endpoint @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 20113 @LENGTH@ 37
------INS SimpleType@@MethodRabbitListenerEndpoint @TO@ SingleVariableDeclaration@@MethodRabbitListenerEndpoint endpoint @AT@ 20113 @LENGTH@ 28
------INS SimpleName@@endpoint @TO@ SingleVariableDeclaration@@MethodRabbitListenerEndpoint endpoint @AT@ 20142 @LENGTH@ 8
---INS SingleVariableDeclaration@@RabbitListener rabbitListenerArg @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 20152 @LENGTH@ 32
------INS SimpleType@@RabbitListener @TO@ SingleVariableDeclaration@@RabbitListener rabbitListenerArg @AT@ 20152 @LENGTH@ 14
------INS SimpleName@@rabbitListenerArg @TO@ SingleVariableDeclaration@@RabbitListener rabbitListenerArg @AT@ 20167 @LENGTH@ 17
---INS SingleVariableDeclaration@@Object target @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 20189 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object target @AT@ 20189 @LENGTH@ 6
------INS SimpleName@@target @TO@ SingleVariableDeclaration@@Object target @AT@ 20196 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:rabbitListener @TO@ MethodDeclaration@@private, RabbitListener, MethodName:synthesizeIfPossible, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object target,  @AT@ 21167 @LENGTH@ 22
------INS SimpleName@@rabbitListener @TO@ ReturnStatement@@SimpleName:rabbitListener @AT@ 21174 @LENGTH@ 14


UPD TryStatement@@try (CSVPrinter csvPrinter=new CSVPrinter(out,this)){  csvPrinter.printRecord(values);  return out.toString().trim();} catch (final IOException e) {  throw new IllegalStateException(e);} @TO@ try (CSVPrinter csvPrinter=new CSVPrinter(out,this)){  csvPrinter.printRecord(values);  String res=out.toString();  int len=recordSeparator != null ? res.length() - recordSeparator.length() : res.length();  return res.substring(0,len);} catch (final IOException e) {  throw new IllegalStateException(e);} @AT@ 28792 @LENGTH@ 313
---UPD ReturnStatement@@MethodInvocation:out.toString().trim() @TO@ MethodInvocation:res.substring(0,len) @AT@ 28906 @LENGTH@ 29
------UPD MethodInvocation@@out.toString().trim() @TO@ res.substring(0,len) @AT@ 28913 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:toString:[] @AT@ 28913 @LENGTH@ 14
---------UPD SimpleName@@Name:out @TO@ Name:res @AT@ 28913 @LENGTH@ 3
---------UPD SimpleName@@MethodName:trim:[] @TO@ MethodName:substring:[0, len] @AT@ 28928 @LENGTH@ 6
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:trim:[] @AT@ 29072 @LENGTH@ 1
------------INS SimpleName@@len @TO@ SimpleName@@MethodName:trim:[] @AT@ 29075 @LENGTH@ 3
---INS VariableDeclarationStatement@@String res=out.toString(); @TO@ TryStatement@@try (CSVPrinter csvPrinter=new CSVPrinter(out,this)){  csvPrinter.printRecord(values);  return out.toString().trim();} catch (final IOException e) {  throw new IllegalStateException(e);} @AT@ 28906 @LENGTH@ 28
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String res=out.toString(); @AT@ 28906 @LENGTH@ 6
------INS VariableDeclarationFragment@@res=out.toString() @TO@ VariableDeclarationStatement@@String res=out.toString(); @AT@ 28913 @LENGTH@ 20
---------INS SimpleName@@res @TO@ VariableDeclarationFragment@@res=out.toString() @AT@ 28913 @LENGTH@ 3
---------INS MethodInvocation@@out.toString() @TO@ VariableDeclarationFragment@@res=out.toString() @AT@ 28919 @LENGTH@ 14
------------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.toString() @AT@ 28919 @LENGTH@ 3
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@out.toString() @AT@ 28923 @LENGTH@ 10
---INS VariableDeclarationStatement@@int len=recordSeparator != null ? res.length() - recordSeparator.length() : res.length(); @TO@ TryStatement@@try (CSVPrinter csvPrinter=new CSVPrinter(out,this)){  csvPrinter.printRecord(values);  return out.toString().trim();} catch (final IOException e) {  throw new IllegalStateException(e);} @AT@ 28947 @LENGTH@ 91
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int len=recordSeparator != null ? res.length() - recordSeparator.length() : res.length(); @AT@ 28947 @LENGTH@ 3
------INS VariableDeclarationFragment@@len=recordSeparator != null ? res.length() - recordSeparator.length() : res.length() @TO@ VariableDeclarationStatement@@int len=recordSeparator != null ? res.length() - recordSeparator.length() : res.length(); @AT@ 28951 @LENGTH@ 86
---------INS SimpleName@@len @TO@ VariableDeclarationFragment@@len=recordSeparator != null ? res.length() - recordSeparator.length() : res.length() @AT@ 28951 @LENGTH@ 3
---------INS ConditionalExpression@@recordSeparator != null ? res.length() - recordSeparator.length() : res.length() @TO@ VariableDeclarationFragment@@len=recordSeparator != null ? res.length() - recordSeparator.length() : res.length() @AT@ 28957 @LENGTH@ 80
------------INS InfixExpression@@recordSeparator != null @TO@ ConditionalExpression@@recordSeparator != null ? res.length() - recordSeparator.length() : res.length() @AT@ 28957 @LENGTH@ 23
---------------INS SimpleName@@recordSeparator @TO@ InfixExpression@@recordSeparator != null @AT@ 28957 @LENGTH@ 15
---------------INS Operator@@!= @TO@ InfixExpression@@recordSeparator != null @AT@ 28972 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@recordSeparator != null @AT@ 28976 @LENGTH@ 4
------------INS InfixExpression@@res.length() - recordSeparator.length() @TO@ ConditionalExpression@@recordSeparator != null ? res.length() - recordSeparator.length() : res.length() @AT@ 28983 @LENGTH@ 39
---------------INS MethodInvocation@@res.length() @TO@ InfixExpression@@res.length() - recordSeparator.length() @AT@ 28983 @LENGTH@ 12
------------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.length() @AT@ 28983 @LENGTH@ 3
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@res.length() @AT@ 28987 @LENGTH@ 8
---------------INS Operator@@- @TO@ InfixExpression@@res.length() - recordSeparator.length() @AT@ 28995 @LENGTH@ 1
---------------INS MethodInvocation@@recordSeparator.length() @TO@ InfixExpression@@res.length() - recordSeparator.length() @AT@ 28998 @LENGTH@ 24
------------------INS SimpleName@@Name:recordSeparator @TO@ MethodInvocation@@recordSeparator.length() @AT@ 28998 @LENGTH@ 15
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@recordSeparator.length() @AT@ 29014 @LENGTH@ 8
------------INS MethodInvocation@@res.length() @TO@ ConditionalExpression@@recordSeparator != null ? res.length() - recordSeparator.length() : res.length() @AT@ 29025 @LENGTH@ 12
---------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.length() @AT@ 29025 @LENGTH@ 3
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@res.length() @AT@ 29029 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizationRequestTests,  @AT@ 12625 @LENGTH@ 930
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12625 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12632 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12637 @LENGTH@ 56
---INS VariableDeclarationStatement@@Map<String,Object> additionalParameters=new HashMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12700 @LENGTH@ 59
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=new HashMap<>(); @AT@ 12700 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 12700 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 12704 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 12712 @LENGTH@ 6
------INS VariableDeclarationFragment@@additionalParameters=new HashMap<>() @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=new HashMap<>(); @AT@ 12720 @LENGTH@ 38
---------INS SimpleName@@additionalParameters @TO@ VariableDeclarationFragment@@additionalParameters=new HashMap<>() @AT@ 12720 @LENGTH@ 20
---------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@additionalParameters=new HashMap<>() @AT@ 12743 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 12743 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 12747 @LENGTH@ 9
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 12747 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:additionalParameters.put("item amount","19.95" + '\u20ac') @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12762 @LENGTH@ 60
------INS MethodInvocation@@additionalParameters.put("item amount","19.95" + '\u20ac') @TO@ ExpressionStatement@@MethodInvocation:additionalParameters.put("item amount","19.95" + '\u20ac') @AT@ 12762 @LENGTH@ 59
---------INS SimpleName@@Name:additionalParameters @TO@ MethodInvocation@@additionalParameters.put("item amount","19.95" + '\u20ac') @AT@ 12762 @LENGTH@ 20
---------INS SimpleName@@MethodName:put:["item amount", "19.95" + '\u20ac'] @TO@ MethodInvocation@@additionalParameters.put("item amount","19.95" + '\u20ac') @AT@ 12783 @LENGTH@ 38
------------INS StringLiteral@@"item amount" @TO@ SimpleName@@MethodName:put:["item amount", "19.95" + '\u20ac'] @AT@ 12787 @LENGTH@ 13
------------INS InfixExpression@@"19.95" + '\u20ac' @TO@ SimpleName@@MethodName:put:["item amount", "19.95" + '\u20ac'] @AT@ 12802 @LENGTH@ 18
---------------INS StringLiteral@@"19.95" @TO@ InfixExpression@@"19.95" + '\u20ac' @AT@ 12802 @LENGTH@ 7
---------------INS Operator@@+ @TO@ InfixExpression@@"19.95" + '\u20ac' @AT@ 12809 @LENGTH@ 1
---------------INS CharacterLiteral@@'\u20ac' @TO@ InfixExpression@@"19.95" + '\u20ac' @AT@ 12812 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:additionalParameters.put("item name","H" + '\u00c5' + "M"+ '\u00d6') @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12825 @LENGTH@ 71
------INS MethodInvocation@@additionalParameters.put("item name","H" + '\u00c5' + "M"+ '\u00d6') @TO@ ExpressionStatement@@MethodInvocation:additionalParameters.put("item name","H" + '\u00c5' + "M"+ '\u00d6') @AT@ 12825 @LENGTH@ 70
---------INS SimpleName@@Name:additionalParameters @TO@ MethodInvocation@@additionalParameters.put("item name","H" + '\u00c5' + "M"+ '\u00d6') @AT@ 12825 @LENGTH@ 20
---------INS SimpleName@@MethodName:put:["item name", "H" + '\u00c5' + "M"+ '\u00d6'] @TO@ MethodInvocation@@additionalParameters.put("item name","H" + '\u00c5' + "M"+ '\u00d6') @AT@ 12846 @LENGTH@ 49
------------INS StringLiteral@@"item name" @TO@ SimpleName@@MethodName:put:["item name", "H" + '\u00c5' + "M"+ '\u00d6'] @AT@ 12850 @LENGTH@ 11
------------INS InfixExpression@@"H" + '\u00c5' + "M"+ '\u00d6' @TO@ SimpleName@@MethodName:put:["item name", "H" + '\u00c5' + "M"+ '\u00d6'] @AT@ 12863 @LENGTH@ 31
---------------INS StringLiteral@@"H" @TO@ InfixExpression@@"H" + '\u00c5' + "M"+ '\u00d6' @AT@ 12863 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@"H" + '\u00c5' + "M"+ '\u00d6' @AT@ 12866 @LENGTH@ 1
---------------INS CharacterLiteral@@'\u00c5' @TO@ InfixExpression@@"H" + '\u00c5' + "M"+ '\u00d6' @AT@ 12869 @LENGTH@ 8
---------------INS StringLiteral@@"M" @TO@ InfixExpression@@"H" + '\u00c5' + "M"+ '\u00d6' @AT@ 12880 @LENGTH@ 3
---------------INS CharacterLiteral@@'\u00d6' @TO@ InfixExpression@@"H" + '\u00c5' + "M"+ '\u00d6' @AT@ 12886 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:additionalParameters.put('\u00e2' + "ge","4" + '\u00bd') @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12899 @LENGTH@ 58
------INS MethodInvocation@@additionalParameters.put('\u00e2' + "ge","4" + '\u00bd') @TO@ ExpressionStatement@@MethodInvocation:additionalParameters.put('\u00e2' + "ge","4" + '\u00bd') @AT@ 12899 @LENGTH@ 57
---------INS SimpleName@@Name:additionalParameters @TO@ MethodInvocation@@additionalParameters.put('\u00e2' + "ge","4" + '\u00bd') @AT@ 12899 @LENGTH@ 20
---------INS SimpleName@@MethodName:put:['\u00e2' + "ge", "4" + '\u00bd'] @TO@ MethodInvocation@@additionalParameters.put('\u00e2' + "ge","4" + '\u00bd') @AT@ 12920 @LENGTH@ 36
------------INS InfixExpression@@'\u00e2' + "ge" @TO@ SimpleName@@MethodName:put:['\u00e2' + "ge", "4" + '\u00bd'] @AT@ 12924 @LENGTH@ 15
---------------INS CharacterLiteral@@'\u00e2' @TO@ InfixExpression@@'\u00e2' + "ge" @AT@ 12924 @LENGTH@ 8
---------------INS Operator@@+ @TO@ InfixExpression@@'\u00e2' + "ge" @AT@ 12932 @LENGTH@ 1
---------------INS StringLiteral@@"ge" @TO@ InfixExpression@@'\u00e2' + "ge" @AT@ 12935 @LENGTH@ 4
------------INS InfixExpression@@"4" + '\u00bd' @TO@ SimpleName@@MethodName:put:['\u00e2' + "ge", "4" + '\u00bd'] @AT@ 12941 @LENGTH@ 14
---------------INS StringLiteral@@"4" @TO@ InfixExpression@@"4" + '\u00bd' @AT@ 12941 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@"4" + '\u00bd' @AT@ 12944 @LENGTH@ 1
---------------INS CharacterLiteral@@'\u00bd' @TO@ InfixExpression@@"4" + '\u00bd' @AT@ 12947 @LENGTH@ 8
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build(); @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 12960 @LENGTH@ 161
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build(); @AT@ 12960 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build(); @AT@ 12987 @LENGTH@ 133
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @AT@ 12987 @LENGTH@ 20
---------INS MethodInvocation@@TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @TO@ VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @AT@ 13014 @LENGTH@ 106
------------INS MethodInvocation@@MethodName:additionalParameters:[additionalParameters] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @AT@ 13014 @LENGTH@ 91
---------------INS SimpleName@@additionalParameters @TO@ MethodInvocation@@MethodName:additionalParameters:[additionalParameters] @AT@ 13084 @LENGTH@ 20
------------INS MethodInvocation@@MethodName:request:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @AT@ 13014 @LENGTH@ 41
------------INS SimpleName@@Name:TestOAuth2AuthorizationRequests @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @AT@ 13014 @LENGTH@ 31
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().additionalParameters(additionalParameters).build() @AT@ 13113 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 13125 @LENGTH@ 74
------INS MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @AT@ 13125 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @AT@ 13125 @LENGTH@ 61
------------INS MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @AT@ 13136 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 13136 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getAuthorizationRequestUri:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 13157 @LENGTH@ 28
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @AT@ 13187 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96") @TO@ MethodDeclaration@@public, void, MethodName:buildWhenNonAsciiAdditionalParametersThenProperlyEncoded,  @AT@ 13202 @LENGTH@ 350
------INS MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96") @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96") @AT@ 13202 @LENGTH@ 349
---------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96") @AT@ 13202 @LENGTH@ 61
------------INS MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @AT@ 13213 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 13213 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getAuthorizationRequestUri:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 13234 @LENGTH@ 28
---------INS SimpleName@@MethodName:isEqualTo:["https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96"] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96") @AT@ 13269 @LENGTH@ 282
------------INS InfixExpression@@"https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96" @TO@ SimpleName@@MethodName:isEqualTo:["https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96"] @AT@ 13279 @LENGTH@ 271
---------------INS StringLiteral@@"https://example.com/login/oauth/authorize?" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96" @AT@ 13279 @LENGTH@ 44
---------------INS Operator@@+ @TO@ InfixExpression@@"https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96" @AT@ 13323 @LENGTH@ 1
---------------INS StringLiteral@@"response_type=code&client_id=client-id&state=state&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96" @AT@ 13332 @LENGTH@ 53
---------------INS StringLiteral@@"redirect_uri=https://example.com/authorize/oauth2/code/registration-id&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96" @AT@ 13394 @LENGTH@ 73
---------------INS StringLiteral@@"item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize?" + "response_type=code&client_id=client-id&state=state&" + "redirect_uri=https://example.com/authorize/oauth2/code/registration-id&"+ "item%20amount=19.95%E2%82%AC&%C3%A2ge=4%C2%BD&item%20name=H%C3%85M%C3%96" @AT@ 13476 @LENGTH@ 74


UPD Block@@ThenBody:{  Authentication user=new PreAuthenticatedAuthenticationToken(authentication.getUserAuthentication(),"",authentication.getAuthorities());  user=authenticationManager.authenticate(user);  Object details=authentication.getDetails();  authentication=new OAuth2Authentication(authentication.getOAuth2Request(),user);  authentication.setDetails(details);} @TO@ ThenBody:{  Authentication userAuthentication=authentication.getUserAuthentication();  PreAuthenticatedAuthenticationToken preAuthenticatedToken=new PreAuthenticatedAuthenticationToken(userAuthentication,"",authentication.getAuthorities());  if (userAuthentication.getDetails() != null) {    preAuthenticatedToken.setDetails(userAuthentication.getDetails());  }  Authentication user=authenticationManager.authenticate(preAuthenticatedToken);  Object details=authentication.getDetails();  authentication=new OAuth2Authentication(authentication.getOAuth2Request(),user);  authentication.setDetails(details);} @AT@ 6758 @LENGTH@ 516
---UPD VariableDeclarationStatement@@Authentication user=new PreAuthenticatedAuthenticationToken(authentication.getUserAuthentication(),"",authentication.getAuthorities()); @TO@ PreAuthenticatedAuthenticationToken preAuthenticatedToken=new PreAuthenticatedAuthenticationToken(userAuthentication,"",authentication.getAuthorities()); @AT@ 6904 @LENGTH@ 139
------UPD SimpleType@@Authentication @TO@ PreAuthenticatedAuthenticationToken @AT@ 6904 @LENGTH@ 14
------UPD VariableDeclarationFragment@@user=new PreAuthenticatedAuthenticationToken(authentication.getUserAuthentication(),"",authentication.getAuthorities()) @TO@ preAuthenticatedToken=new PreAuthenticatedAuthenticationToken(userAuthentication,"",authentication.getAuthorities()) @AT@ 6919 @LENGTH@ 123
---------UPD SimpleName@@user @TO@ preAuthenticatedToken @AT@ 6919 @LENGTH@ 4
---------UPD ClassInstanceCreation@@PreAuthenticatedAuthenticationToken[authentication.getUserAuthentication(), "", authentication.getAuthorities()] @TO@ PreAuthenticatedAuthenticationToken[userAuthentication, "", authentication.getAuthorities()] @AT@ 6926 @LENGTH@ 116
------------DEL MethodInvocation@@authentication.getUserAuthentication() @AT@ 6966 @LENGTH@ 38
---------------DEL SimpleName@@Name:authentication @AT@ 6966 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:getUserAuthentication:[] @AT@ 6981 @LENGTH@ 23
------------INS SimpleName@@userAuthentication @TO@ ClassInstanceCreation@@PreAuthenticatedAuthenticationToken[authentication.getUserAuthentication(), "", authentication.getAuthorities()] @AT@ 7089 @LENGTH@ 18
---INS VariableDeclarationStatement@@Authentication userAuthentication=authentication.getUserAuthentication(); @TO@ Block@@ThenBody:{  Authentication user=new PreAuthenticatedAuthenticationToken(authentication.getUserAuthentication(),"",authentication.getAuthorities());  user=authenticationManager.authenticate(user);  Object details=authentication.getDetails();  authentication=new OAuth2Authentication(authentication.getOAuth2Request(),user);  authentication.setDetails(details);} @AT@ 6904 @LENGTH@ 75
------INS SimpleType@@Authentication @TO@ VariableDeclarationStatement@@Authentication userAuthentication=authentication.getUserAuthentication(); @AT@ 6904 @LENGTH@ 14
------INS VariableDeclarationFragment@@userAuthentication=authentication.getUserAuthentication() @TO@ VariableDeclarationStatement@@Authentication userAuthentication=authentication.getUserAuthentication(); @AT@ 6919 @LENGTH@ 59
---------INS SimpleName@@userAuthentication @TO@ VariableDeclarationFragment@@userAuthentication=authentication.getUserAuthentication() @AT@ 6919 @LENGTH@ 18
---------INS MethodInvocation@@authentication.getUserAuthentication() @TO@ VariableDeclarationFragment@@userAuthentication=authentication.getUserAuthentication() @AT@ 6940 @LENGTH@ 38
------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 6940 @LENGTH@ 14
------------INS SimpleName@@MethodName:getUserAuthentication:[] @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 6955 @LENGTH@ 23
---DEL ExpressionStatement@@Assignment:user=authenticationManager.authenticate(user) @AT@ 7047 @LENGTH@ 48
------DEL Assignment@@user=authenticationManager.authenticate(user) @AT@ 7047 @LENGTH@ 47
---------DEL SimpleName@@user @AT@ 7047 @LENGTH@ 4
---------DEL Operator@@= @AT@ 7051 @LENGTH@ 1
---------DEL MethodInvocation@@authenticationManager.authenticate(user) @AT@ 7054 @LENGTH@ 40
---INS IfStatement@@if (userAuthentication.getDetails() != null) {  preAuthenticatedToken.setDetails(userAuthentication.getDetails());} @TO@ Block@@ThenBody:{  Authentication user=new PreAuthenticatedAuthenticationToken(authentication.getUserAuthentication(),"",authentication.getAuthorities());  user=authenticationManager.authenticate(user);  Object details=authentication.getDetails();  authentication=new OAuth2Authentication(authentication.getOAuth2Request(),user);  authentication.setDetails(details);} @AT@ 7164 @LENGTH@ 122
------INS InfixExpression@@userAuthentication.getDetails() != null @TO@ IfStatement@@if (userAuthentication.getDetails() != null) {  preAuthenticatedToken.setDetails(userAuthentication.getDetails());} @AT@ 7168 @LENGTH@ 39
---------INS MethodInvocation@@userAuthentication.getDetails() @TO@ InfixExpression@@userAuthentication.getDetails() != null @AT@ 7168 @LENGTH@ 31
------------INS SimpleName@@Name:userAuthentication @TO@ MethodInvocation@@userAuthentication.getDetails() @AT@ 7168 @LENGTH@ 18
------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@userAuthentication.getDetails() @AT@ 7187 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@userAuthentication.getDetails() != null @AT@ 7199 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@userAuthentication.getDetails() != null @AT@ 7203 @LENGTH@ 4
------INS Block@@ThenBody:{  preAuthenticatedToken.setDetails(userAuthentication.getDetails());} @TO@ IfStatement@@if (userAuthentication.getDetails() != null) {  preAuthenticatedToken.setDetails(userAuthentication.getDetails());} @AT@ 7209 @LENGTH@ 77
---------INS ExpressionStatement@@MethodInvocation:preAuthenticatedToken.setDetails(userAuthentication.getDetails()) @TO@ Block@@ThenBody:{  preAuthenticatedToken.setDetails(userAuthentication.getDetails());} @AT@ 7215 @LENGTH@ 66
------------INS MethodInvocation@@preAuthenticatedToken.setDetails(userAuthentication.getDetails()) @TO@ ExpressionStatement@@MethodInvocation:preAuthenticatedToken.setDetails(userAuthentication.getDetails()) @AT@ 7215 @LENGTH@ 65
---------------INS SimpleName@@Name:preAuthenticatedToken @TO@ MethodInvocation@@preAuthenticatedToken.setDetails(userAuthentication.getDetails()) @AT@ 7215 @LENGTH@ 21
---------------INS SimpleName@@MethodName:setDetails:[userAuthentication.getDetails()] @TO@ MethodInvocation@@preAuthenticatedToken.setDetails(userAuthentication.getDetails()) @AT@ 7237 @LENGTH@ 43
------------------INS MethodInvocation@@userAuthentication.getDetails() @TO@ SimpleName@@MethodName:setDetails:[userAuthentication.getDetails()] @AT@ 7248 @LENGTH@ 31
---------------------INS SimpleName@@Name:userAuthentication @TO@ MethodInvocation@@userAuthentication.getDetails() @AT@ 7248 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@userAuthentication.getDetails() @AT@ 7267 @LENGTH@ 12
---INS VariableDeclarationStatement@@Authentication user=authenticationManager.authenticate(preAuthenticatedToken); @TO@ Block@@ThenBody:{  Authentication user=new PreAuthenticatedAuthenticationToken(authentication.getUserAuthentication(),"",authentication.getAuthorities());  user=authenticationManager.authenticate(user);  Object details=authentication.getDetails();  authentication=new OAuth2Authentication(authentication.getOAuth2Request(),user);  authentication.setDetails(details);} @AT@ 7290 @LENGTH@ 80
------INS SimpleType@@Authentication @TO@ VariableDeclarationStatement@@Authentication user=authenticationManager.authenticate(preAuthenticatedToken); @AT@ 7290 @LENGTH@ 14
------INS VariableDeclarationFragment@@user=authenticationManager.authenticate(preAuthenticatedToken) @TO@ VariableDeclarationStatement@@Authentication user=authenticationManager.authenticate(preAuthenticatedToken); @AT@ 7305 @LENGTH@ 64
---------INS SimpleName@@user @TO@ VariableDeclarationFragment@@user=authenticationManager.authenticate(preAuthenticatedToken) @AT@ 7305 @LENGTH@ 4
---------INS MethodInvocation@@authenticationManager.authenticate(preAuthenticatedToken) @TO@ VariableDeclarationFragment@@user=authenticationManager.authenticate(preAuthenticatedToken) @AT@ 7312 @LENGTH@ 57
------------MOV SimpleName@@Name:authenticationManager @TO@ MethodInvocation@@authenticationManager.authenticate(preAuthenticatedToken) @AT@ 7054 @LENGTH@ 21
------------MOV SimpleName@@MethodName:authenticate:[user] @TO@ MethodInvocation@@authenticationManager.authenticate(preAuthenticatedToken) @AT@ 7076 @LENGTH@ 18
---------------UPD SimpleName@@user @TO@ preAuthenticatedToken @AT@ 7089 @LENGTH@ 4


DEL MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @AT@ 1469 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1469 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1476 @LENGTH@ 7
---DEL SimpleName@@MethodName:isUseRouteBuilder @AT@ 1484 @LENGTH@ 17
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1514 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1521 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizationCodeGrantFilterTests,  @AT@ 6910 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 6910 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 6917 @LENGTH@ 4
---INS SimpleName@@MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 6922 @LENGTH@ 70
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 6999 @LENGTH@ 110
------INS MethodInvocation@@assertThatThrownBy(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 6999 @LENGTH@ 109
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.filter.setRequestCache(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 6999 @LENGTH@ 59
------------INS LambdaExpression@@() -> this.filter.setRequestCache(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.filter.setRequestCache(null)] @AT@ 7018 @LENGTH@ 39
---------------INS MethodInvocation@@this.filter.setRequestCache(null) @TO@ LambdaExpression@@() -> this.filter.setRequestCache(null) @AT@ 7024 @LENGTH@ 33
------------------INS FieldAccess@@this.filter @TO@ MethodInvocation@@this.filter.setRequestCache(null) @AT@ 7024 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.filter @AT@ 7024 @LENGTH@ 4
---------------------INS SimpleName@@filter @TO@ FieldAccess@@this.filter @AT@ 7029 @LENGTH@ 6
------------------INS SimpleName@@MethodName:setRequestCache:[null] @TO@ MethodInvocation@@this.filter.setRequestCache(null) @AT@ 7036 @LENGTH@ 21
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setRequestCache:[null] @AT@ 7052 @LENGTH@ 4
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 7064 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 7077 @LENGTH@ 30


INS MethodDeclaration@@private, voidMethodName:AnimalFactory,  @TO@ TypeDeclaration@@[public]AnimalFactory,  @AT@ 878 @LENGTH@ 31
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:AnimalFactory,  @AT@ 878 @LENGTH@ 7
---INS SimpleName@@MethodName:AnimalFactory @TO@ MethodDeclaration@@private, voidMethodName:AnimalFactory,  @AT@ 886 @LENGTH@ 13


INS MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @TO@ TypeDeclaration@@[public]RepublishMessageRecoverer, [MessageRecoverer] @AT@ 7074 @LENGTH@ 509
---INS Modifier@@private @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7074 @LENGTH@ 7
---INS ArrayType@@String[] @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7082 @LENGTH@ 8
------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 7082 @LENGTH@ 6
---INS SimpleName@@MethodName:processStackTrace @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7091 @LENGTH@ 17
---INS SingleVariableDeclaration@@Throwable cause @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7109 @LENGTH@ 15
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 7109 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@Throwable cause @AT@ 7119 @LENGTH@ 5
---INS SingleVariableDeclaration@@String exceptionMessage @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7126 @LENGTH@ 23
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String exceptionMessage @AT@ 7126 @LENGTH@ 6
------INS SimpleName@@exceptionMessage @TO@ SingleVariableDeclaration@@String exceptionMessage @AT@ 7133 @LENGTH@ 16
---MOV VariableDeclarationStatement@@String stackTraceAsString=getStackTraceAsString(cause); @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7155 @LENGTH@ 57
---MOV IfStatement@@if (this.maxStackTraceLength < 0) {  int maxStackTraceLen=RabbitUtils.getMaxFrame(((RabbitTemplate)this.errorTemplate).getConnectionFactory());  if (maxStackTraceLen > 0) {    maxStackTraceLen-=this.frameMaxHeadroom;    this.maxStackTraceLength=maxStackTraceLen;  }} @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7215 @LENGTH@ 290
---INS ReturnStatement@@MethodInvocation:truncateIfNecessary(cause,exceptionMessage,stackTraceAsString) @TO@ MethodDeclaration@@private, String[], MethodName:processStackTrace, Throwable cause, String exceptionMessage,  @AT@ 7508 @LENGTH@ 72
------INS MethodInvocation@@truncateIfNecessary(cause,exceptionMessage,stackTraceAsString) @TO@ ReturnStatement@@MethodInvocation:truncateIfNecessary(cause,exceptionMessage,stackTraceAsString) @AT@ 7515 @LENGTH@ 64
---------INS SimpleName@@MethodName:truncateIfNecessary:[cause, exceptionMessage, stackTraceAsString] @TO@ MethodInvocation@@truncateIfNecessary(cause,exceptionMessage,stackTraceAsString) @AT@ 7515 @LENGTH@ 64
------------INS SimpleName@@cause @TO@ SimpleName@@MethodName:truncateIfNecessary:[cause, exceptionMessage, stackTraceAsString] @AT@ 7535 @LENGTH@ 5
------------INS SimpleName@@exceptionMessage @TO@ SimpleName@@MethodName:truncateIfNecessary:[cause, exceptionMessage, stackTraceAsString] @AT@ 7542 @LENGTH@ 16
------------INS SimpleName@@stackTraceAsString @TO@ SimpleName@@MethodName:truncateIfNecessary:[cause, exceptionMessage, stackTraceAsString] @AT@ 7560 @LENGTH@ 18


MOV ExpressionStatement@@MethodInvocation:parseQueryParams(options) @TO@ MethodDeclaration@@public, void, MethodName:configureProperties, Map<String,Object> options,  @AT@ 4976 @LENGTH@ 26


UPD TryStatement@@try {  principal=this.introspector.introspect(bearer.getToken());} catch (OAuth2IntrospectionException failed) {  throw new InvalidBearerTokenException(failed.getMessage());} @TO@ try {  principal=this.introspector.introspect(bearer.getToken());} catch (BadOpaqueTokenException failed) {  throw new InvalidBearerTokenException(failed.getMessage());}catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage());} @AT@ 4024 @LENGTH@ 186
---UPD CatchClause@@catch (OAuth2IntrospectionException failed) {  throw new InvalidBearerTokenException(failed.getMessage());} @TO@ catch (BadOpaqueTokenException failed) {  throw new InvalidBearerTokenException(failed.getMessage());} @AT@ 4098 @LENGTH@ 112
------UPD SingleVariableDeclaration@@OAuth2IntrospectionException failed @TO@ BadOpaqueTokenException failed @AT@ 4105 @LENGTH@ 35
---------UPD SimpleType@@OAuth2IntrospectionException @TO@ BadOpaqueTokenException @AT@ 4105 @LENGTH@ 28
---INS CatchClause@@catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage());} @TO@ TryStatement@@try {  principal=this.introspector.introspect(bearer.getToken());} catch (OAuth2IntrospectionException failed) {  throw new InvalidBearerTokenException(failed.getMessage());} @AT@ 4387 @LENGTH@ 115
------INS SingleVariableDeclaration@@OAuth2IntrospectionException failed @TO@ CatchClause@@catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage());} @AT@ 4394 @LENGTH@ 35
---------INS SimpleType@@OAuth2IntrospectionException @TO@ SingleVariableDeclaration@@OAuth2IntrospectionException failed @AT@ 4394 @LENGTH@ 28
---------INS SimpleName@@failed @TO@ SingleVariableDeclaration@@OAuth2IntrospectionException failed @AT@ 4423 @LENGTH@ 6
------INS ThrowStatement@@ClassInstanceCreation:new AuthenticationServiceException(failed.getMessage()) @TO@ CatchClause@@catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage());} @AT@ 4436 @LENGTH@ 62
---------INS ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage()] @TO@ ThrowStatement@@ClassInstanceCreation:new AuthenticationServiceException(failed.getMessage()) @AT@ 4442 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage()] @AT@ 4442 @LENGTH@ 3
------------INS SimpleType@@AuthenticationServiceException @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage()] @AT@ 4446 @LENGTH@ 30
------------INS MethodInvocation@@failed.getMessage() @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage()] @AT@ 4477 @LENGTH@ 19
---------------INS SimpleName@@Name:failed @TO@ MethodInvocation@@failed.getMessage() @AT@ 4477 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@failed.getMessage() @AT@ 4484 @LENGTH@ 12


UPD FieldDeclaration@@private, static, final, char[], [DEFAULT_CODEC="1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".toCharArray()] @TO@ private, static, final, char[], [DEFAULT_CODEC="1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".toCharArray()] @AT@ 463 @LENGTH@ 127
---UPD VariableDeclarationFragment@@DEFAULT_CODEC="1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".toCharArray() @TO@ DEFAULT_CODEC="1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".toCharArray() @AT@ 491 @LENGTH@ 98
------UPD MethodInvocation@@"1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".toCharArray() @TO@ "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".toCharArray() @AT@ 507 @LENGTH@ 82
---------UPD StringLiteral@@"1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" @TO@ "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_" @AT@ 507 @LENGTH@ 64


INS MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @TO@ TypeDeclaration@@[public]RemoteTokenServicesTest,  @AT@ 3688 @LENGTH@ 511
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 3688 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 3695 @LENGTH@ 4
---INS SimpleName@@MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 3700 @LENGTH@ 77
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 3787 @LENGTH@ 9
---INS VariableDeclarationStatement@@ResponseEntity<Map> response=new ResponseEntity<Map>(HttpStatus.REQUEST_TIMEOUT); @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 3801 @LENGTH@ 83
------INS ParameterizedType@@ResponseEntity<Map> @TO@ VariableDeclarationStatement@@ResponseEntity<Map> response=new ResponseEntity<Map>(HttpStatus.REQUEST_TIMEOUT); @AT@ 3801 @LENGTH@ 19
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3801 @LENGTH@ 14
---------INS SimpleType@@Map @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3816 @LENGTH@ 3
------INS VariableDeclarationFragment@@response=new ResponseEntity<Map>(HttpStatus.REQUEST_TIMEOUT) @TO@ VariableDeclarationStatement@@ResponseEntity<Map> response=new ResponseEntity<Map>(HttpStatus.REQUEST_TIMEOUT); @AT@ 3821 @LENGTH@ 62
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new ResponseEntity<Map>(HttpStatus.REQUEST_TIMEOUT) @AT@ 3821 @LENGTH@ 8
---------INS ClassInstanceCreation@@ResponseEntity<Map>[HttpStatus.REQUEST_TIMEOUT] @TO@ VariableDeclarationFragment@@response=new ResponseEntity<Map>(HttpStatus.REQUEST_TIMEOUT) @AT@ 3832 @LENGTH@ 51
------------INS New@@new @TO@ ClassInstanceCreation@@ResponseEntity<Map>[HttpStatus.REQUEST_TIMEOUT] @AT@ 3832 @LENGTH@ 3
------------INS ParameterizedType@@ResponseEntity<Map> @TO@ ClassInstanceCreation@@ResponseEntity<Map>[HttpStatus.REQUEST_TIMEOUT] @AT@ 3836 @LENGTH@ 19
---------------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3836 @LENGTH@ 14
---------------INS SimpleType@@Map @TO@ ParameterizedType@@ResponseEntity<Map> @AT@ 3851 @LENGTH@ 3
------------INS QualifiedName@@HttpStatus.REQUEST_TIMEOUT @TO@ ClassInstanceCreation@@ResponseEntity<Map>[HttpStatus.REQUEST_TIMEOUT] @AT@ 3856 @LENGTH@ 26
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.REQUEST_TIMEOUT @AT@ 3856 @LENGTH@ 10
---------------INS SimpleName@@REQUEST_TIMEOUT @TO@ QualifiedName@@HttpStatus.REQUEST_TIMEOUT @AT@ 3867 @LENGTH@ 15
---INS VariableDeclarationStatement@@RestTemplate restTemplate=mock(RestTemplate.class); @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 3887 @LENGTH@ 53
------INS SimpleType@@RestTemplate @TO@ VariableDeclarationStatement@@RestTemplate restTemplate=mock(RestTemplate.class); @AT@ 3887 @LENGTH@ 12
------INS VariableDeclarationFragment@@restTemplate=mock(RestTemplate.class) @TO@ VariableDeclarationStatement@@RestTemplate restTemplate=mock(RestTemplate.class); @AT@ 3900 @LENGTH@ 39
---------INS SimpleName@@restTemplate @TO@ VariableDeclarationFragment@@restTemplate=mock(RestTemplate.class) @AT@ 3900 @LENGTH@ 12
---------INS MethodInvocation@@mock(RestTemplate.class) @TO@ VariableDeclarationFragment@@restTemplate=mock(RestTemplate.class) @AT@ 3915 @LENGTH@ 24
------------INS SimpleName@@MethodName:mock:[RestTemplate.class] @TO@ MethodInvocation@@mock(RestTemplate.class) @AT@ 3915 @LENGTH@ 24
---------------INS TypeLiteral@@RestTemplate.class @TO@ SimpleName@@MethodName:mock:[RestTemplate.class] @AT@ 3920 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 3943 @LENGTH@ 126
------INS MethodInvocation@@when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @TO@ ExpressionStatement@@MethodInvocation:when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @AT@ 3943 @LENGTH@ 125
---------INS MethodInvocation@@MethodName:when:[restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))] @TO@ MethodInvocation@@when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @AT@ 3943 @LENGTH@ 104
------------INS MethodInvocation@@restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class)) @TO@ MethodInvocation@@MethodName:when:[restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))] @AT@ 3948 @LENGTH@ 98
---------------INS SimpleName@@Name:restTemplate @TO@ MethodInvocation@@restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class)) @AT@ 3948 @LENGTH@ 12
---------------INS SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @TO@ MethodInvocation@@restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class)) @AT@ 3961 @LENGTH@ 85
------------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 3970 @LENGTH@ 11
------------------INS MethodInvocation@@any(HttpMethod.class) @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 3983 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:any:[HttpMethod.class] @TO@ MethodInvocation@@any(HttpMethod.class) @AT@ 3983 @LENGTH@ 21
------------------------INS TypeLiteral@@HttpMethod.class @TO@ SimpleName@@MethodName:any:[HttpMethod.class] @AT@ 3987 @LENGTH@ 16
------------------INS MethodInvocation@@any(HttpEntity.class) @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 4006 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:any:[HttpEntity.class] @TO@ MethodInvocation@@any(HttpEntity.class) @AT@ 4006 @LENGTH@ 21
------------------------INS TypeLiteral@@HttpEntity.class @TO@ SimpleName@@MethodName:any:[HttpEntity.class] @AT@ 4010 @LENGTH@ 16
------------------INS MethodInvocation@@any(Class.class) @TO@ SimpleName@@MethodName:exchange:[anyString(), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)] @AT@ 4029 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:any:[Class.class] @TO@ MethodInvocation@@any(Class.class) @AT@ 4029 @LENGTH@ 16
------------------------INS TypeLiteral@@Class.class @TO@ SimpleName@@MethodName:any:[Class.class] @AT@ 4033 @LENGTH@ 11
---------INS SimpleName@@MethodName:thenReturn:[response] @TO@ MethodInvocation@@when(restTemplate.exchange(anyString(),any(HttpMethod.class),any(HttpEntity.class),any(Class.class))).thenReturn(response) @AT@ 4048 @LENGTH@ 20
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:thenReturn:[response] @AT@ 4059 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:this.remoteTokenServices.setRestTemplate(restTemplate) @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 4072 @LENGTH@ 55
------INS MethodInvocation@@this.remoteTokenServices.setRestTemplate(restTemplate) @TO@ ExpressionStatement@@MethodInvocation:this.remoteTokenServices.setRestTemplate(restTemplate) @AT@ 4072 @LENGTH@ 54
---------INS FieldAccess@@this.remoteTokenServices @TO@ MethodInvocation@@this.remoteTokenServices.setRestTemplate(restTemplate) @AT@ 4072 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.remoteTokenServices @AT@ 4072 @LENGTH@ 4
------------INS SimpleName@@remoteTokenServices @TO@ FieldAccess@@this.remoteTokenServices @AT@ 4077 @LENGTH@ 19
---------INS SimpleName@@MethodName:setRestTemplate:[restTemplate] @TO@ MethodInvocation@@this.remoteTokenServices.setRestTemplate(restTemplate) @AT@ 4097 @LENGTH@ 29
------------INS SimpleName@@restTemplate @TO@ SimpleName@@MethodName:setRestTemplate:[restTemplate] @AT@ 4113 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:this.remoteTokenServices.loadAuthentication("access-token-1234") @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseNullThenThrowInvalidTokenException, Exception,  @AT@ 4131 @LENGTH@ 65
------INS MethodInvocation@@this.remoteTokenServices.loadAuthentication("access-token-1234") @TO@ ExpressionStatement@@MethodInvocation:this.remoteTokenServices.loadAuthentication("access-token-1234") @AT@ 4131 @LENGTH@ 64
---------INS FieldAccess@@this.remoteTokenServices @TO@ MethodInvocation@@this.remoteTokenServices.loadAuthentication("access-token-1234") @AT@ 4131 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.remoteTokenServices @AT@ 4131 @LENGTH@ 4
------------INS SimpleName@@remoteTokenServices @TO@ FieldAccess@@this.remoteTokenServices @AT@ 4136 @LENGTH@ 19
---------INS SimpleName@@MethodName:loadAuthentication:["access-token-1234"] @TO@ MethodInvocation@@this.remoteTokenServices.loadAuthentication("access-token-1234") @AT@ 4156 @LENGTH@ 39
------------INS StringLiteral@@"access-token-1234" @TO@ SimpleName@@MethodName:loadAuthentication:["access-token-1234"] @AT@ 4175 @LENGTH@ 19


UPD VariableDeclarationStatement@@final Double valueAsDouble=(Double.parseDouble(fieldConfig.getDefaultValueAsString()) / 1000); @TO@ final Double valueAsDouble=Double.parseDouble(fieldConfig.getDefaultValueAsString()) / 1000; @AT@ 7944 @LENGTH@ 96
---UPD VariableDeclarationFragment@@valueAsDouble=(Double.parseDouble(fieldConfig.getDefaultValueAsString()) / 1000) @TO@ valueAsDouble=Double.parseDouble(fieldConfig.getDefaultValueAsString()) / 1000 @AT@ 7957 @LENGTH@ 82
------DEL ParenthesizedExpression@@(Double.parseDouble(fieldConfig.getDefaultValueAsString()) / 1000) @AT@ 7973 @LENGTH@ 66
------MOV InfixExpression@@Double.parseDouble(fieldConfig.getDefaultValueAsString()) / 1000 @TO@ VariableDeclarationFragment@@valueAsDouble=(Double.parseDouble(fieldConfig.getDefaultValueAsString()) / 1000) @AT@ 7974 @LENGTH@ 64


UPD ExpressionStatement@@Assignment:this.group=group @TO@ Assignment:this.group="0".equals(group) ? null : group @AT@ 9300 @LENGTH@ 19
---UPD Assignment@@this.group=group @TO@ this.group="0".equals(group) ? null : group @AT@ 9300 @LENGTH@ 18
------INS ConditionalExpression@@"0".equals(group) ? null : group @TO@ Assignment@@this.group=group @AT@ 9313 @LENGTH@ 32
---------INS MethodInvocation@@"0".equals(group) @TO@ ConditionalExpression@@"0".equals(group) ? null : group @AT@ 9313 @LENGTH@ 17
------------INS StringLiteral@@"0" @TO@ MethodInvocation@@"0".equals(group) @AT@ 9313 @LENGTH@ 3
------------INS SimpleName@@MethodName:equals:[group] @TO@ MethodInvocation@@"0".equals(group) @AT@ 9317 @LENGTH@ 13
---------------INS SimpleName@@group @TO@ SimpleName@@MethodName:equals:[group] @AT@ 9324 @LENGTH@ 5
---------INS NullLiteral@@null @TO@ ConditionalExpression@@"0".equals(group) ? null : group @AT@ 9333 @LENGTH@ 4
---------INS SimpleName@@group @TO@ ConditionalExpression@@"0".equals(group) ? null : group @AT@ 9340 @LENGTH@ 5
------DEL SimpleName@@group @AT@ 9313 @LENGTH@ 5


UPD MethodDeclaration@@voidMethodName:OAuth2AccessTokenMixin, @JsonProperty("tokenType") @JsonDeserialize(converter=StdConverters.AccessTokenTypeConverter.class) OAuth2AccessToken.TokenType tokenType, @JsonProperty("tokenValue") String tokenValue, @JsonProperty("issuedAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant issuedAt, @JsonProperty("expiresAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant expiresAt, @JsonProperty("scopes") Set<String> scopes,  @TO@ voidMethodName:OAuth2AccessTokenMixin, @JsonProperty("tokenType") @JsonDeserialize(converter=StdConverters.AccessTokenTypeConverter.class) OAuth2AccessToken.TokenType tokenType, @JsonProperty("tokenValue") String tokenValue, @JsonProperty("issuedAt") Instant issuedAt, @JsonProperty("expiresAt") Instant expiresAt, @JsonProperty("scopes") Set<String> scopes,  @AT@ 1759 @LENGTH@ 523
---UPD SingleVariableDeclaration@@@JsonProperty("issuedAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant issuedAt @TO@ @JsonProperty("issuedAt") Instant issuedAt @AT@ 1980 @LENGTH@ 121
---UPD SingleVariableDeclaration@@@JsonProperty("expiresAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant expiresAt @TO@ @JsonProperty("expiresAt") Instant expiresAt @AT@ 2106 @LENGTH@ 123


INS MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @TO@ TypeDeclaration@@[public, final]AesBytesEncryptor, [BytesEncryptor] @AT@ 3080 @LENGTH@ 255
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3080 @LENGTH@ 6
---INS SimpleName@@MethodName:AesBytesEncryptor @TO@ MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3087 @LENGTH@ 17
---INS SingleVariableDeclaration@@String password @TO@ MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3105 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String password @AT@ 3105 @LENGTH@ 6
------INS SimpleName@@password @TO@ SingleVariableDeclaration@@String password @AT@ 3112 @LENGTH@ 8
---INS SingleVariableDeclaration@@CharSequence salt @TO@ MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3122 @LENGTH@ 17
------INS SimpleType@@CharSequence @TO@ SingleVariableDeclaration@@CharSequence salt @AT@ 3122 @LENGTH@ 12
------INS SimpleName@@salt @TO@ SingleVariableDeclaration@@CharSequence salt @AT@ 3135 @LENGTH@ 4
---INS SingleVariableDeclaration@@BytesKeyGenerator ivGenerator @TO@ MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3144 @LENGTH@ 29
------INS SimpleType@@BytesKeyGenerator @TO@ SingleVariableDeclaration@@BytesKeyGenerator ivGenerator @AT@ 3144 @LENGTH@ 17
------INS SimpleName@@ivGenerator @TO@ SingleVariableDeclaration@@BytesKeyGenerator ivGenerator @AT@ 3162 @LENGTH@ 11
---INS SingleVariableDeclaration@@CipherAlgorithm alg @TO@ MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3175 @LENGTH@ 19
------INS SimpleType@@CipherAlgorithm @TO@ SingleVariableDeclaration@@CipherAlgorithm alg @AT@ 3175 @LENGTH@ 15
------INS SimpleName@@alg @TO@ SingleVariableDeclaration@@CipherAlgorithm alg @AT@ 3191 @LENGTH@ 3
---INS ConstructorInvocation@@this(newSecretKey("PBKDF2WithHmacSHA1",new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)),ivGenerator,alg); @TO@ MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3200 @LENGTH@ 132
------INS MethodInvocation@@newSecretKey("PBKDF2WithHmacSHA1",new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)) @TO@ ConstructorInvocation@@this(newSecretKey("PBKDF2WithHmacSHA1",new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)),ivGenerator,alg); @AT@ 3205 @LENGTH@ 107
---------INS SimpleName@@MethodName:newSecretKey:["PBKDF2WithHmacSHA1", new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)] @TO@ MethodInvocation@@newSecretKey("PBKDF2WithHmacSHA1",new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)) @AT@ 3205 @LENGTH@ 107
------------INS StringLiteral@@"PBKDF2WithHmacSHA1" @TO@ SimpleName@@MethodName:newSecretKey:["PBKDF2WithHmacSHA1", new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)] @AT@ 3218 @LENGTH@ 20
------------MOV ClassInstanceCreation@@PBEKeySpec[password.toCharArray(), Hex.decode(salt), 1024, 256] @TO@ SimpleName@@MethodName:newSecretKey:["PBKDF2WithHmacSHA1", new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)] @AT@ 3229 @LENGTH@ 71
------INS SimpleName@@ivGenerator @TO@ ConstructorInvocation@@this(newSecretKey("PBKDF2WithHmacSHA1",new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)),ivGenerator,alg); @AT@ 3314 @LENGTH@ 11
------INS SimpleName@@alg @TO@ ConstructorInvocation@@this(newSecretKey("PBKDF2WithHmacSHA1",new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256)),ivGenerator,alg); @AT@ 3327 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testHeaderExpression, Exception,  @TO@ TypeDeclaration@@[public]ExpressionBuilderTest, TestSupport @AT@ 6420 @LENGTH@ 144
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHeaderExpression, Exception,  @AT@ 6420 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHeaderExpression, Exception,  @AT@ 6427 @LENGTH@ 4
---INS SimpleName@@MethodName:testHeaderExpression @TO@ MethodDeclaration@@public, void, MethodName:testHeaderExpression, Exception,  @AT@ 6432 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testHeaderExpression, Exception,  @AT@ 6462 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertExpression(headerExpression("name",String.class),exchange,"James") @TO@ MethodDeclaration@@public, void, MethodName:testHeaderExpression, Exception,  @AT@ 6482 @LENGTH@ 76
------INS MethodInvocation@@assertExpression(headerExpression("name",String.class),exchange,"James") @TO@ ExpressionStatement@@MethodInvocation:assertExpression(headerExpression("name",String.class),exchange,"James") @AT@ 6482 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertExpression:[headerExpression("name",String.class), exchange, "James"] @TO@ MethodInvocation@@assertExpression(headerExpression("name",String.class),exchange,"James") @AT@ 6482 @LENGTH@ 75
------------INS MethodInvocation@@headerExpression("name",String.class) @TO@ SimpleName@@MethodName:assertExpression:[headerExpression("name",String.class), exchange, "James"] @AT@ 6499 @LENGTH@ 38
---------------INS SimpleName@@MethodName:headerExpression:["name", String.class] @TO@ MethodInvocation@@headerExpression("name",String.class) @AT@ 6499 @LENGTH@ 38
------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:headerExpression:["name", String.class] @AT@ 6516 @LENGTH@ 6
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:headerExpression:["name", String.class] @AT@ 6524 @LENGTH@ 12
---------------INS SimpleName@@MethodName:headerExpression:["name", String.class] @TO@ MethodInvocation@@headerExpression("name",String.class) @AT@ 6499 @LENGTH@ 38
------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:headerExpression:["name", String.class] @AT@ 6516 @LENGTH@ 6
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:headerExpression:["name", String.class] @AT@ 6524 @LENGTH@ 12
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertExpression:[headerExpression("name",String.class), exchange, "James"] @AT@ 6539 @LENGTH@ 8
------------INS StringLiteral@@"James" @TO@ SimpleName@@MethodName:assertExpression:[headerExpression("name",String.class), exchange, "James"] @AT@ 6549 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:dead").to("mock:dead").throwException(new IllegalArgumentException("We are dead")) @TO@ MethodInvocation:from("direct:dead").routeId("dead").log("sending recovered aggregated exchange to dead letter channel with ${body}").to("mock:dead").throwException(new IOException("We are dead")) @AT@ 3105 @LENGTH@ 146
---UPD MethodInvocation@@from("direct:dead").to("mock:dead").throwException(new IllegalArgumentException("We are dead")) @TO@ from("direct:dead").routeId("dead").log("sending recovered aggregated exchange to dead letter channel with ${body}").to("mock:dead").throwException(new IOException("We are dead")) @AT@ 3105 @LENGTH@ 145
------INS MethodInvocation@@MethodName:log:["sending recovered aggregated exchange to dead letter channel with ${body}"] @TO@ MethodInvocation@@from("direct:dead").to("mock:dead").throwException(new IllegalArgumentException("We are dead")) @AT@ 3150 @LENGTH@ 141
---------INS StringLiteral@@"sending recovered aggregated exchange to dead letter channel with ${body}" @TO@ MethodInvocation@@MethodName:log:["sending recovered aggregated exchange to dead letter channel with ${body}"] @AT@ 3215 @LENGTH@ 75
------INS MethodInvocation@@MethodName:routeId:["dead"] @TO@ MethodInvocation@@from("direct:dead").to("mock:dead").throwException(new IllegalArgumentException("We are dead")) @AT@ 3150 @LENGTH@ 35
---------INS StringLiteral@@"dead" @TO@ MethodInvocation@@MethodName:routeId:["dead"] @AT@ 3178 @LENGTH@ 6
------UPD SimpleName@@MethodName:throwException:[new IllegalArgumentException("We are dead")] @TO@ MethodName:throwException:[new IOException("We are dead")] @AT@ 3191 @LENGTH@ 59
---------UPD ClassInstanceCreation@@IllegalArgumentException["We are dead"] @TO@ IOException["We are dead"] @AT@ 3206 @LENGTH@ 43
------------UPD SimpleType@@IllegalArgumentException @TO@ IOException @AT@ 3210 @LENGTH@ 24


INS FieldDeclaration@@static, final, String, [X5T="x5t"] @TO@ TypeDeclaration@@[final]JwkAttributes,  @AT@ 1114 @LENGTH@ 32
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, String, [X5T="x5t"] @AT@ 1114 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, String, [X5T="x5t"] @AT@ 1121 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@static, final, String, [X5T="x5t"] @AT@ 1127 @LENGTH@ 6
---INS VariableDeclarationFragment@@X5T="x5t" @TO@ FieldDeclaration@@static, final, String, [X5T="x5t"] @AT@ 1134 @LENGTH@ 11
------INS SimpleName@@X5T @TO@ VariableDeclarationFragment@@X5T="x5t" @AT@ 1134 @LENGTH@ 3
------INS StringLiteral@@"x5t" @TO@ VariableDeclarationFragment@@X5T="x5t" @AT@ 1140 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:result=execResult.getStdout() != null ? execResult.getStdout() : null @TO@ Assignment:result=execResult.getStdout() @AT@ 5759 @LENGTH@ 72
---UPD Assignment@@result=execResult.getStdout() != null ? execResult.getStdout() : null @TO@ result=execResult.getStdout() @AT@ 5759 @LENGTH@ 71
------DEL ConditionalExpression@@execResult.getStdout() != null ? execResult.getStdout() : null @AT@ 5768 @LENGTH@ 62
---------DEL InfixExpression@@execResult.getStdout() != null @AT@ 5768 @LENGTH@ 30
------------DEL MethodInvocation@@execResult.getStdout() @AT@ 5768 @LENGTH@ 22
------------DEL Operator@@!= @AT@ 5790 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 5794 @LENGTH@ 4
---------DEL MethodInvocation@@execResult.getStdout() @AT@ 5801 @LENGTH@ 22
------------DEL SimpleName@@Name:execResult @AT@ 5801 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getStdout:[] @AT@ 5812 @LENGTH@ 11
---------DEL NullLiteral@@null @AT@ 5826 @LENGTH@ 4
------INS MethodInvocation@@execResult.getStdout() @TO@ Assignment@@result=execResult.getStdout() != null ? execResult.getStdout() : null @AT@ 5815 @LENGTH@ 22
---------MOV SimpleName@@Name:execResult @TO@ MethodInvocation@@execResult.getStdout() @AT@ 5768 @LENGTH@ 10
---------MOV SimpleName@@MethodName:getStdout:[] @TO@ MethodInvocation@@execResult.getStdout() @AT@ 5779 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/").with(oidcLogin().clientRegistration(clientRegistration).idToken(i -> i.subject("spring-security")))).andExpect(model().attribute("userName","spring-security")).andExpect(model().attribute("clientName","my-client-name")).andExpect(model().attribute("userAttributes",Collections.singletonMap(SUB,"spring-security"))) @TO@ MethodInvocation:this.mvc.perform(get("/").with(oauth2Login().clientRegistration(clientRegistration).attributes(a -> a.put("sub","spring-security")))).andExpect(model().attribute("userName","spring-security")).andExpect(model().attribute("clientName","my-client-name")).andExpect(model().attribute("userAttributes",Collections.singletonMap("sub","spring-security"))) @AT@ 3186 @LENGTH@ 370
---UPD MethodInvocation@@this.mvc.perform(get("/").with(oidcLogin().clientRegistration(clientRegistration).idToken(i -> i.subject("spring-security")))).andExpect(model().attribute("userName","spring-security")).andExpect(model().attribute("clientName","my-client-name")).andExpect(model().attribute("userAttributes",Collections.singletonMap(SUB,"spring-security"))) @TO@ this.mvc.perform(get("/").with(oauth2Login().clientRegistration(clientRegistration).attributes(a -> a.put("sub","spring-security")))).andExpect(model().attribute("userName","spring-security")).andExpect(model().attribute("clientName","my-client-name")).andExpect(model().attribute("userAttributes",Collections.singletonMap("sub","spring-security"))) @AT@ 3186 @LENGTH@ 369
------UPD MethodInvocation@@MethodName:perform:[get("/").with(oidcLogin().clientRegistration(clientRegistration).idToken(i -> i.subject("spring-security")))] @TO@ MethodName:perform:[get("/").with(oauth2Login().clientRegistration(clientRegistration).attributes(a -> a.put("sub","spring-security")))] @AT@ 3186 @LENGTH@ 136
---------UPD MethodInvocation@@get("/").with(oidcLogin().clientRegistration(clientRegistration).idToken(i -> i.subject("spring-security"))) @TO@ get("/").with(oauth2Login().clientRegistration(clientRegistration).attributes(a -> a.put("sub","spring-security"))) @AT@ 3203 @LENGTH@ 118
------------UPD SimpleName@@MethodName:with:[oidcLogin().clientRegistration(clientRegistration).idToken(i -> i.subject("spring-security"))] @TO@ MethodName:with:[oauth2Login().clientRegistration(clientRegistration).attributes(a -> a.put("sub","spring-security"))] @AT@ 3212 @LENGTH@ 109
---------------UPD MethodInvocation@@oidcLogin().clientRegistration(clientRegistration).idToken(i -> i.subject("spring-security")) @TO@ oauth2Login().clientRegistration(clientRegistration).attributes(a -> a.put("sub","spring-security")) @AT@ 3217 @LENGTH@ 103
------------------UPD MethodInvocation@@MethodName:oidcLogin:[] @TO@ MethodName:oauth2Login:[] @AT@ 3217 @LENGTH@ 11
------------------UPD SimpleName@@MethodName:idToken:[i -> i.subject("spring-security")] @TO@ MethodName:attributes:[a -> a.put("sub","spring-security")] @AT@ 3278 @LENGTH@ 42
---------------------UPD LambdaExpression@@i -> i.subject("spring-security") @TO@ a -> a.put("sub","spring-security") @AT@ 3286 @LENGTH@ 33
------------------------UPD VariableDeclarationFragment@@i @TO@ a @AT@ 3286 @LENGTH@ 1
---------------------------UPD SimpleName@@i @TO@ a @AT@ 3286 @LENGTH@ 1
------------------------UPD MethodInvocation@@i.subject("spring-security") @TO@ a.put("sub","spring-security") @AT@ 3291 @LENGTH@ 28
---------------------------UPD SimpleName@@Name:i @TO@ Name:a @AT@ 3291 @LENGTH@ 1
---------------------------UPD SimpleName@@MethodName:subject:["spring-security"] @TO@ MethodName:put:["sub", "spring-security"] @AT@ 3293 @LENGTH@ 26
------------------------------INS StringLiteral@@"sub" @TO@ SimpleName@@MethodName:subject:["spring-security"] @AT@ 3225 @LENGTH@ 5
------UPD SimpleName@@MethodName:andExpect:[model().attribute("userAttributes",Collections.singletonMap(SUB,"spring-security"))] @TO@ MethodName:andExpect:[model().attribute("userAttributes",Collections.singletonMap("sub","spring-security"))] @AT@ 3459 @LENGTH@ 96
---------UPD MethodInvocation@@model().attribute("userAttributes",Collections.singletonMap(SUB,"spring-security")) @TO@ model().attribute("userAttributes",Collections.singletonMap("sub","spring-security")) @AT@ 3469 @LENGTH@ 85
------------UPD SimpleName@@MethodName:attribute:["userAttributes", Collections.singletonMap(SUB,"spring-security")] @TO@ MethodName:attribute:["userAttributes", Collections.singletonMap("sub","spring-security")] @AT@ 3477 @LENGTH@ 77
---------------UPD MethodInvocation@@Collections.singletonMap(SUB,"spring-security") @TO@ Collections.singletonMap("sub","spring-security") @AT@ 3505 @LENGTH@ 48
------------------UPD SimpleName@@MethodName:singletonMap:[SUB, "spring-security"] @TO@ MethodName:singletonMap:["sub", "spring-security"] @AT@ 3517 @LENGTH@ 36
---------------------INS StringLiteral@@"sub" @TO@ SimpleName@@MethodName:singletonMap:[SUB, "spring-security"] @AT@ 3461 @LENGTH@ 5
---------------------DEL SimpleName@@SUB @AT@ 3530 @LENGTH@ 3


UPD TryStatement@@try (InputStream inputStream=new FileInputStream(input);InputStream expectedStream=new FileInputStream(expected);BrotliCompressorInputStream brotliInputStream=new BrotliCompressorInputStream(inputStream)){  final byte[] b=new byte[20];  IOUtils.readFully(expectedStream,b);  final ByteArrayOutputStream bos=new ByteArrayOutputStream();  int readByte=-1;  while ((readByte=brotliInputStream.read()) != -1) {    bos.write(readByte);  }  Assert.assertArrayEquals(b,bos.toByteArray());}  @TO@ try (InputStream inputStream=new FileInputStream(input);BrotliCompressorInputStream brotliInputStream=new BrotliCompressorInputStream(inputStream)){  final byte[] b=new byte[20];  IOUtils.read(expected,b);  final ByteArrayOutputStream bos=new ByteArrayOutputStream();  int readByte=-1;  while ((readByte=brotliInputStream.read()) != -1) {    bos.write(readByte);  }  Assert.assertArrayEquals(b,bos.toByteArray());}  @AT@ 1790 @LENGTH@ 631
---DEL VariableDeclarationExpression@@InputStream expectedStream=new FileInputStream(expected) @AT@ 1865 @LENGTH@ 58
------DEL SimpleType@@InputStream @AT@ 1865 @LENGTH@ 11
------DEL VariableDeclarationFragment@@expectedStream=new FileInputStream(expected) @AT@ 1877 @LENGTH@ 46
---------DEL SimpleName@@expectedStream @AT@ 1877 @LENGTH@ 14
---------DEL ClassInstanceCreation@@FileInputStream[expected] @AT@ 1894 @LENGTH@ 29
------------DEL New@@new @AT@ 1894 @LENGTH@ 3
------------DEL SimpleType@@FileInputStream @AT@ 1898 @LENGTH@ 15
------------DEL SimpleName@@expected @AT@ 1914 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:IOUtils.readFully(expectedStream,b) @TO@ MethodInvocation:IOUtils.read(expected,b) @AT@ 2092 @LENGTH@ 37
------UPD MethodInvocation@@IOUtils.readFully(expectedStream,b) @TO@ IOUtils.read(expected,b) @AT@ 2092 @LENGTH@ 36
---------UPD SimpleName@@MethodName:readFully:[expectedStream, b] @TO@ MethodName:read:[expected, b] @AT@ 2100 @LENGTH@ 28
------------UPD SimpleName@@expectedStream @TO@ expected @AT@ 2110 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  if (!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
) @TO@ MethodInvocation:Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
) @AT@ 5865 @LENGTH@ 2493
---UPD MethodInvocation@@Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  if (!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
) @TO@ Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
) @AT@ 5872 @LENGTH@ 2485
------UPD SimpleName@@MethodName:defer:[() -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  if (!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
] @TO@ MethodName:defer:[() -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
] @AT@ 5877 @LENGTH@ 2480
---------UPD LambdaExpression@@() -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  if (!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
 @TO@ () -> {
  OAuth2AuthorizationCodeAuthenticationToken authorizationCodeAuthentication=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  if (!authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {
    return Mono.empty();
  }
  OAuth2AuthorizationRequest authorizationRequest=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationRequest();
  OAuth2AuthorizationResponse authorizationResponse=authorizationCodeAuthentication.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    throw new OAuth2AuthenticationException(authorizationResponse.getError(),authorizationResponse.getError().toString());
  }
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).flatMap(accessTokenResponse -> authenticationResult(authorizationCodeAuthentication,accessTokenResponse)).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).onErrorMap(JwtException.class,e -> {
    OAuth2Error invalidIdTokenError=new OAuth2Error(INVALID_ID_TOKEN_ERROR_CODE,e.getMessage(),null);
    throw new OAuth2AuthenticationException(invalidIdTokenError,invalidIdTokenError.toString(),e);
  }
);
}
 @AT@ 5883 @LENGTH@ 2473
------------DEL IfStatement@@if (!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri())) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 7277 @LENGTH@ 269
---------------DEL PrefixExpression@@!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri()) @AT@ 7281 @LENGTH@ 85
------------------DEL Operator@@! @AT@ 7281 @LENGTH@ 1
------------------DEL MethodInvocation@@authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri()) @AT@ 7282 @LENGTH@ 84
---------------------DEL MethodInvocation@@MethodName:getRedirectUri:[] @AT@ 7282 @LENGTH@ 38
---------------------DEL SimpleName@@Name:authorizationResponse @AT@ 7282 @LENGTH@ 21
---------------------DEL SimpleName@@MethodName:equals:[authorizationRequest.getRedirectUri()] @AT@ 7321 @LENGTH@ 45
------------------------DEL MethodInvocation@@authorizationRequest.getRedirectUri() @AT@ 7328 @LENGTH@ 37
---------------------------DEL SimpleName@@Name:authorizationRequest @AT@ 7328 @LENGTH@ 20
---------------------------DEL SimpleName@@MethodName:getRedirectUri:[] @AT@ 7349 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 7368 @LENGTH@ 178
------------------DEL VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE); @AT@ 7374 @LENGTH@ 85
---------------------DEL SimpleType@@OAuth2Error @AT@ 7374 @LENGTH@ 11
---------------------DEL VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE) @AT@ 7386 @LENGTH@ 72
------------------------DEL SimpleName@@oauth2Error @AT@ 7386 @LENGTH@ 11
------------------------DEL ClassInstanceCreation@@OAuth2Error[INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE] @AT@ 7400 @LENGTH@ 58
---------------------------DEL New@@new @AT@ 7400 @LENGTH@ 3
---------------------------DEL SimpleType@@OAuth2Error @AT@ 7404 @LENGTH@ 11
---------------------------DEL SimpleName@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE @AT@ 7416 @LENGTH@ 41
------------------DEL ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @AT@ 7464 @LENGTH@ 77
---------------------DEL ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 7470 @LENGTH@ 70
------------------------DEL New@@new @AT@ 7470 @LENGTH@ 3
------------------------DEL SimpleType@@OAuth2AuthenticationException @AT@ 7474 @LENGTH@ 29
------------------------DEL SimpleName@@oauth2Error @AT@ 7504 @LENGTH@ 11
------------------------DEL MethodInvocation@@oauth2Error.toString() @AT@ 7517 @LENGTH@ 22
---------------------------DEL SimpleName@@Name:oauth2Error @AT@ 7517 @LENGTH@ 11
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 7529 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, ParameterizedTypeReference<Map<String,String>>, [PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,String>>(){
}
] @TO@ private, static, final, ParameterizedTypeReference<Map<String,Object>>, [PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,Object>>(){
}
] @AT@ 2014 @LENGTH@ 159
---UPD ParameterizedType@@ParameterizedTypeReference<Map<String,String>> @TO@ ParameterizedTypeReference<Map<String,Object>> @AT@ 2035 @LENGTH@ 47
------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 2062 @LENGTH@ 19
---------UPD SimpleType@@String @TO@ Object @AT@ 2074 @LENGTH@ 6
---UPD VariableDeclarationFragment@@PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,String>>(){
}
 @TO@ PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,Object>>(){
}
 @AT@ 2083 @LENGTH@ 89
------UPD ClassInstanceCreation@@ParameterizedTypeReference<Map<String,String>>[] @TO@ ParameterizedTypeReference<Map<String,Object>>[] @AT@ 2116 @LENGTH@ 56
---------UPD ParameterizedType@@ParameterizedTypeReference<Map<String,String>> @TO@ ParameterizedTypeReference<Map<String,Object>> @AT@ 2120 @LENGTH@ 47
------------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 2147 @LENGTH@ 19
---------------UPD SimpleType@@String @TO@ Object @AT@ 2159 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:form.set("grant_type","password") @TO@ MethodInvocation:form.set(OAuth2Utils.GRANT_TYPE,"password") @AT@ 2838 @LENGTH@ 35
---UPD MethodInvocation@@form.set("grant_type","password") @TO@ form.set(OAuth2Utils.GRANT_TYPE,"password") @AT@ 2838 @LENGTH@ 34
------UPD SimpleName@@MethodName:set:["grant_type", "password"] @TO@ MethodName:set:[OAuth2Utils.GRANT_TYPE, "password"] @AT@ 2843 @LENGTH@ 29
---------DEL StringLiteral@@"grant_type" @AT@ 2847 @LENGTH@ 12
---------INS QualifiedName@@OAuth2Utils.GRANT_TYPE @TO@ SimpleName@@MethodName:set:["grant_type", "password"] @AT@ 2925 @LENGTH@ 22
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 2925 @LENGTH@ 11
------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 2937 @LENGTH@ 10


INS MethodDeclaration@@Map<String,Object>, MethodName:getOptions,  @TO@ TypeDeclaration@@[public]BeanHolder,  @AT@ 1155 @LENGTH@ 13
---INS ParameterizedType@@Map<String,Object> @TO@ MethodDeclaration@@Map<String,Object>, MethodName:getOptions,  @AT@ 1135 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1135 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1139 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1147 @LENGTH@ 6
---INS SimpleName@@MethodName:getOptions @TO@ MethodDeclaration@@Map<String,Object>, MethodName:getOptions,  @AT@ 1155 @LENGTH@ 10


UPD MethodDeclaration@@public, static, String, MethodName:detect, final InputStream in, CompressorException,  @TO@ public, static, String, MethodName:detect, final InputStream inputStream, CompressorException,  @AT@ 16857 @LENGTH@ 1873
---UPD SingleVariableDeclaration@@final InputStream in @TO@ final InputStream inputStream @AT@ 16885 @LENGTH@ 20
------UPD SimpleName@@in @TO@ inputStream @AT@ 16903 @LENGTH@ 2
---UPD IfStatement@@if (in == null) {  throw new IllegalArgumentException("Stream must not be null.");} @TO@ if (inputStream == null) {  throw new IllegalArgumentException("Stream must not be null.");} @AT@ 16944 @LENGTH@ 103
------UPD InfixExpression@@in == null @TO@ inputStream == null @AT@ 16948 @LENGTH@ 10
---------UPD SimpleName@@in @TO@ inputStream @AT@ 16948 @LENGTH@ 2
---UPD IfStatement@@if (!in.markSupported()) {  throw new IllegalArgumentException("Mark is not supported.");} @TO@ if (!inputStream.markSupported()) {  throw new IllegalArgumentException("Mark is not supported.");} @AT@ 17057 @LENGTH@ 110
------UPD PrefixExpression@@!in.markSupported() @TO@ !inputStream.markSupported() @AT@ 17061 @LENGTH@ 19
---------UPD MethodInvocation@@in.markSupported() @TO@ inputStream.markSupported() @AT@ 17062 @LENGTH@ 18
------------UPD SimpleName@@Name:in @TO@ Name:inputStream @AT@ 17062 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:in.mark(signature.length) @TO@ MethodInvocation:inputStream.mark(signature.length) @AT@ 17224 @LENGTH@ 26
------UPD MethodInvocation@@in.mark(signature.length) @TO@ inputStream.mark(signature.length) @AT@ 17224 @LENGTH@ 25
---------UPD SimpleName@@Name:in @TO@ Name:inputStream @AT@ 17224 @LENGTH@ 2
---UPD TryStatement@@try {  signatureLength=IOUtils.readFully(in,signature);  in.reset();} catch (IOException e) {  throw new CompressorException("IOException while reading signature.",e);} @TO@ try {  signatureLength=IOUtils.readFully(inputStream,signature);  inputStream.reset();} catch (IOException e) {  throw new CompressorException("IOException while reading signature.",e);} @AT@ 17293 @LENGTH@ 223
------UPD ExpressionStatement@@Assignment:signatureLength=IOUtils.readFully(in,signature) @TO@ Assignment:signatureLength=IOUtils.readFully(inputStream,signature) @AT@ 17311 @LENGTH@ 51
---------UPD Assignment@@signatureLength=IOUtils.readFully(in,signature) @TO@ signatureLength=IOUtils.readFully(inputStream,signature) @AT@ 17311 @LENGTH@ 50
------------UPD MethodInvocation@@IOUtils.readFully(in,signature) @TO@ IOUtils.readFully(inputStream,signature) @AT@ 17329 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:readFully:[in, signature] @TO@ MethodName:readFully:[inputStream, signature] @AT@ 17337 @LENGTH@ 24
------------------UPD SimpleName@@in @TO@ inputStream @AT@ 17347 @LENGTH@ 2
------UPD ExpressionStatement@@MethodInvocation:in.reset() @TO@ MethodInvocation:inputStream.reset() @AT@ 17375 @LENGTH@ 11
---------UPD MethodInvocation@@in.reset() @TO@ inputStream.reset() @AT@ 17375 @LENGTH@ 10
------------UPD SimpleName@@Name:in @TO@ Name:inputStream @AT@ 17375 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ MethodInvocation:SocketHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 14842 @LENGTH@ 80
---UPD MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ SocketHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 14842 @LENGTH@ 79
------INS QualifiedName@@Name:SocketHandlerResourceDefinition.FILTER_SPEC @TO@ MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 14777 @LENGTH@ 43
------DEL SimpleName@@Name:FILTER_SPEC @AT@ 14842 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:session.setMaxInactiveInterval(originMaxInactiveInterval) @TO@ MethodDeclaration@@final, HttpSession, MethodName:applySessionFixation, HttpServletRequest request,  @AT@ 4281 @LENGTH@ 58
---INS MethodInvocation@@session.setMaxInactiveInterval(originMaxInactiveInterval) @TO@ ExpressionStatement@@MethodInvocation:session.setMaxInactiveInterval(originMaxInactiveInterval) @AT@ 4281 @LENGTH@ 57
------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.setMaxInactiveInterval(originMaxInactiveInterval) @AT@ 4281 @LENGTH@ 7
------INS SimpleName@@MethodName:setMaxInactiveInterval:[originMaxInactiveInterval] @TO@ MethodInvocation@@session.setMaxInactiveInterval(originMaxInactiveInterval) @AT@ 4289 @LENGTH@ 49
---------INS SimpleName@@originMaxInactiveInterval @TO@ SimpleName@@MethodName:setMaxInactiveInterval:[originMaxInactiveInterval] @AT@ 4312 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:fail("Should have thown IllegalArgumentException") @TO@ MethodInvocation:fail("Should have thrown IllegalArgumentException") @AT@ 3880 @LENGTH@ 51
---UPD MethodInvocation@@fail("Should have thown IllegalArgumentException") @TO@ fail("Should have thrown IllegalArgumentException") @AT@ 3880 @LENGTH@ 50
------UPD SimpleName@@MethodName:fail:["Should have thown IllegalArgumentException"] @TO@ MethodName:fail:["Should have thrown IllegalArgumentException"] @AT@ 3880 @LENGTH@ 50
---------UPD StringLiteral@@"Should have thown IllegalArgumentException" @TO@ "Should have thrown IllegalArgumentException" @AT@ 3885 @LENGTH@ 44


UPD TypeDeclaration@@[public]BearerTokenResolver,  @TO@ [@FunctionalInterface, public]BearerTokenResolver,  @AT@ 1152 @LENGTH@ 404
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]BearerTokenResolver,  @AT@ 1152 @LENGTH@ 20


UPD TypeDeclaration@@[public]JsonMapper,  @TO@ [public, final]JsonMapper,  @AT@ 1705 @LENGTH@ 19998
---INS Modifier@@final @TO@ TypeDeclaration@@[public]JsonMapper,  @AT@ 1712 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue(response.contains("Problem accessing /CxfOperationExceptionTest/rest")) @TO@ MethodInvocation:assertTrue(response.contains("CxfOperationExceptionTest/rest")) @AT@ 2703 @LENGTH@ 83
---UPD MethodInvocation@@assertTrue(response.contains("Problem accessing /CxfOperationExceptionTest/rest")) @TO@ assertTrue(response.contains("CxfOperationExceptionTest/rest")) @AT@ 2703 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertTrue:[response.contains("Problem accessing /CxfOperationExceptionTest/rest")] @TO@ MethodName:assertTrue:[response.contains("CxfOperationExceptionTest/rest")] @AT@ 2703 @LENGTH@ 82
---------UPD MethodInvocation@@response.contains("Problem accessing /CxfOperationExceptionTest/rest") @TO@ response.contains("CxfOperationExceptionTest/rest") @AT@ 2714 @LENGTH@ 70
------------UPD SimpleName@@MethodName:contains:["Problem accessing /CxfOperationExceptionTest/rest"] @TO@ MethodName:contains:["CxfOperationExceptionTest/rest"] @AT@ 2723 @LENGTH@ 61
---------------UPD StringLiteral@@"Problem accessing /CxfOperationExceptionTest/rest" @TO@ "CxfOperationExceptionTest/rest" @AT@ 2732 @LENGTH@ 51


UPD MethodDeclaration@@voidMethodName:OAuth2RefreshTokenMixin, @JsonProperty("tokenValue") String tokenValue, @JsonProperty("issuedAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant issuedAt,  @TO@ voidMethodName:OAuth2RefreshTokenMixin, @JsonProperty("tokenValue") String tokenValue, @JsonProperty("issuedAt") Instant issuedAt,  @AT@ 1675 @LENGTH@ 205
---UPD SingleVariableDeclaration@@@JsonProperty("issuedAt") @JsonFormat(pattern=StdDateFormat.DATE_FORMAT_STR_ISO8601,timezone="UTC") Instant issuedAt @TO@ @JsonProperty("issuedAt") Instant issuedAt @AT@ 1753 @LENGTH@ 121


INS MethodDeclaration@@void, MethodName:gh174,  @TO@ TypeDeclaration@@[@Nested]Issues,  @AT@ 65458 @LENGTH@ 727
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:gh174,  @AT@ 65453 @LENGTH@ 4
---INS SimpleName@@MethodName:gh174 @TO@ MethodDeclaration@@void, MethodName:gh174,  @AT@ 65458 @LENGTH@ 5
---INS VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @TO@ MethodDeclaration@@void, MethodName:gh174,  @AT@ 65471 @LENGTH@ 41
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @AT@ 65471 @LENGTH@ 5
------INS SimpleType@@Node @TO@ VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @AT@ 65477 @LENGTH@ 4
------INS VariableDeclarationFragment@@r=node("Resume").named("r") @TO@ VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @AT@ 65482 @LENGTH@ 29
---------INS SimpleName@@r @TO@ VariableDeclarationFragment@@r=node("Resume").named("r") @AT@ 65482 @LENGTH@ 1
---------INS MethodInvocation@@node("Resume").named("r") @TO@ VariableDeclarationFragment@@r=node("Resume").named("r") @AT@ 65486 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:node:["Resume"] @TO@ MethodInvocation@@node("Resume").named("r") @AT@ 65486 @LENGTH@ 14
---------------INS StringLiteral@@"Resume" @TO@ MethodInvocation@@MethodName:node:["Resume"] @AT@ 65491 @LENGTH@ 8
------------INS SimpleName@@MethodName:named:["r"] @TO@ MethodInvocation@@node("Resume").named("r") @AT@ 65501 @LENGTH@ 10
---------------INS StringLiteral@@"r" @TO@ SimpleName@@MethodName:named:["r"] @AT@ 65507 @LENGTH@ 3
---INS VariableDeclarationStatement@@final Node o=node("Offer").named("o"); @TO@ MethodDeclaration@@void, MethodName:gh174,  @AT@ 65516 @LENGTH@ 40
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Node o=node("Offer").named("o"); @AT@ 65516 @LENGTH@ 5
------INS SimpleType@@Node @TO@ VariableDeclarationStatement@@final Node o=node("Offer").named("o"); @AT@ 65522 @LENGTH@ 4
------INS VariableDeclarationFragment@@o=node("Offer").named("o") @TO@ VariableDeclarationStatement@@final Node o=node("Offer").named("o"); @AT@ 65527 @LENGTH@ 28
---------INS SimpleName@@o @TO@ VariableDeclarationFragment@@o=node("Offer").named("o") @AT@ 65527 @LENGTH@ 1
---------INS MethodInvocation@@node("Offer").named("o") @TO@ VariableDeclarationFragment@@o=node("Offer").named("o") @AT@ 65531 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:node:["Offer"] @TO@ MethodInvocation@@node("Offer").named("o") @AT@ 65531 @LENGTH@ 13
---------------INS StringLiteral@@"Offer" @TO@ MethodInvocation@@MethodName:node:["Offer"] @AT@ 65536 @LENGTH@ 7
------------INS SimpleName@@MethodName:named:["o"] @TO@ MethodInvocation@@node("Offer").named("o") @AT@ 65545 @LENGTH@ 10
---------------INS StringLiteral@@"o" @TO@ SimpleName@@MethodName:named:["o"] @AT@ 65551 @LENGTH@ 3
---INS VariableDeclarationStatement@@Statement s=match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build(); @TO@ MethodDeclaration@@void, MethodName:gh174,  @AT@ 65561 @LENGTH@ 352
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@Statement s=match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build(); @AT@ 65561 @LENGTH@ 9
------INS VariableDeclarationFragment@@s=match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @TO@ VariableDeclarationStatement@@Statement s=match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build(); @AT@ 65571 @LENGTH@ 341
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @AT@ 65571 @LENGTH@ 1
---------INS MethodInvocation@@match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @TO@ VariableDeclarationFragment@@s=match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @AT@ 65575 @LENGTH@ 337
------------INS MethodInvocation@@MethodName:returningDistinct:[r, o] @TO@ MethodInvocation@@match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @AT@ 65575 @LENGTH@ 324
---------------INS SimpleName@@r @TO@ MethodInvocation@@MethodName:returningDistinct:[r, o] @AT@ 65894 @LENGTH@ 1
---------------INS SimpleName@@o @TO@ MethodInvocation@@MethodName:returningDistinct:[r, o] @AT@ 65897 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:and:[coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))] @TO@ MethodInvocation@@match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @AT@ 65575 @LENGTH@ 295
---------------INS MethodInvocation@@coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus"))) @TO@ MethodInvocation@@MethodName:and:[coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))] @AT@ 65662 @LENGTH@ 207
------------------INS MethodInvocation@@MethodName:and:[r.hasLabels("InvalidStatus").not()] @TO@ MethodInvocation@@coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus"))) @AT@ 65662 @LENGTH@ 122
---------------------INS MethodInvocation@@r.hasLabels("InvalidStatus").not() @TO@ MethodInvocation@@MethodName:and:[r.hasLabels("InvalidStatus").not()] @AT@ 65749 @LENGTH@ 34
------------------------INS MethodInvocation@@MethodName:hasLabels:["InvalidStatus"] @TO@ MethodInvocation@@r.hasLabels("InvalidStatus").not() @AT@ 65749 @LENGTH@ 28
---------------------------INS StringLiteral@@"InvalidStatus" @TO@ MethodInvocation@@MethodName:hasLabels:["InvalidStatus"] @AT@ 65761 @LENGTH@ 15
------------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.hasLabels("InvalidStatus").not() @AT@ 65749 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@r.hasLabels("InvalidStatus").not() @AT@ 65778 @LENGTH@ 5
------------------INS MethodInvocation@@MethodName:isEqualTo:[literalFalse()] @TO@ MethodInvocation@@coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus"))) @AT@ 65662 @LENGTH@ 76
---------------------INS MethodInvocation@@MethodName:literalFalse:[] @TO@ MethodInvocation@@MethodName:isEqualTo:[literalFalse()] @AT@ 65723 @LENGTH@ 14
------------------INS MethodInvocation@@MethodName:coalesce:[o.property("valid_only"), literalFalse()] @TO@ MethodInvocation@@coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus"))) @AT@ 65662 @LENGTH@ 50
---------------------INS MethodInvocation@@o.property("valid_only") @TO@ MethodInvocation@@MethodName:coalesce:[o.property("valid_only"), literalFalse()] @AT@ 65671 @LENGTH@ 24
------------------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.property("valid_only") @AT@ 65671 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:property:["valid_only"] @TO@ MethodInvocation@@o.property("valid_only") @AT@ 65673 @LENGTH@ 22
---------------------------INS StringLiteral@@"valid_only" @TO@ SimpleName@@MethodName:property:["valid_only"] @AT@ 65682 @LENGTH@ 12
---------------------INS MethodInvocation@@MethodName:literalFalse:[] @TO@ MethodInvocation@@MethodName:coalesce:[o.property("valid_only"), literalFalse()] @AT@ 65697 @LENGTH@ 14
------------------INS SimpleName@@MethodName:or:[o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus"))] @TO@ MethodInvocation@@coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus"))) @AT@ 65791 @LENGTH@ 78
---------------------INS MethodInvocation@@o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")) @TO@ SimpleName@@MethodName:or:[o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus"))] @AT@ 65794 @LENGTH@ 74
------------------------INS MethodInvocation@@MethodName:isTrue:[] @TO@ MethodInvocation@@o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")) @AT@ 65794 @LENGTH@ 33
------------------------INS MethodInvocation@@MethodName:property:["valid_only"] @TO@ MethodInvocation@@o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")) @AT@ 65794 @LENGTH@ 24
---------------------------INS StringLiteral@@"valid_only" @TO@ MethodInvocation@@MethodName:property:["valid_only"] @AT@ 65805 @LENGTH@ 12
------------------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")) @AT@ 65794 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:and:[r.hasLabels("InvalidStatus")] @TO@ MethodInvocation@@o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")) @AT@ 65835 @LENGTH@ 33
---------------------------INS MethodInvocation@@r.hasLabels("InvalidStatus") @TO@ SimpleName@@MethodName:and:[r.hasLabels("InvalidStatus")] @AT@ 65839 @LENGTH@ 28
------------------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.hasLabels("InvalidStatus") @AT@ 65839 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:hasLabels:["InvalidStatus"] @TO@ MethodInvocation@@r.hasLabels("InvalidStatus") @AT@ 65841 @LENGTH@ 26
---------------------------------INS StringLiteral@@"InvalidStatus" @TO@ SimpleName@@MethodName:hasLabels:["InvalidStatus"] @AT@ 65851 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:where:[r.hasLabels("LastResume").not()] @TO@ MethodInvocation@@match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @AT@ 65575 @LENGTH@ 77
---------------INS MethodInvocation@@r.hasLabels("LastResume").not() @TO@ MethodInvocation@@MethodName:where:[r.hasLabels("LastResume").not()] @AT@ 65620 @LENGTH@ 31
------------------INS MethodInvocation@@MethodName:hasLabels:["LastResume"] @TO@ MethodInvocation@@r.hasLabels("LastResume").not() @AT@ 65620 @LENGTH@ 25
---------------------INS StringLiteral@@"LastResume" @TO@ MethodInvocation@@MethodName:hasLabels:["LastResume"] @AT@ 65632 @LENGTH@ 12
------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.hasLabels("LastResume").not() @AT@ 65620 @LENGTH@ 1
------------------INS SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@r.hasLabels("LastResume").not() @AT@ 65646 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:match:[r.relationshipTo(o,"FOR")] @TO@ MethodInvocation@@match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @AT@ 65575 @LENGTH@ 33
---------------INS MethodInvocation@@r.relationshipTo(o,"FOR") @TO@ MethodInvocation@@MethodName:match:[r.relationshipTo(o,"FOR")] @AT@ 65581 @LENGTH@ 26
------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.relationshipTo(o,"FOR") @AT@ 65581 @LENGTH@ 1
------------------INS SimpleName@@MethodName:relationshipTo:[o, "FOR"] @TO@ MethodInvocation@@r.relationshipTo(o,"FOR") @AT@ 65583 @LENGTH@ 24
---------------------INS SimpleName@@o @TO@ SimpleName@@MethodName:relationshipTo:[o, "FOR"] @AT@ 65598 @LENGTH@ 1
---------------------INS StringLiteral@@"FOR" @TO@ SimpleName@@MethodName:relationshipTo:[o, "FOR"] @AT@ 65601 @LENGTH@ 5
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@match(r.relationshipTo(o,"FOR")).where(r.hasLabels("LastResume").not()).and(coalesce(o.property("valid_only"),literalFalse()).isEqualTo(literalFalse()).and(r.hasLabels("InvalidStatus").not()).or(o.property("valid_only").isTrue().and(r.hasLabels("InvalidStatus")))).returningDistinct(r,o).build() @AT@ 65905 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o") @TO@ MethodDeclaration@@void, MethodName:gh174,  @AT@ 65918 @LENGTH@ 263
------INS MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o") @AT@ 65918 @LENGTH@ 262
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(s)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o") @AT@ 65918 @LENGTH@ 36
------------INS MethodInvocation@@cypherRenderer.render(s) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(s)] @AT@ 65929 @LENGTH@ 24
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(s) @AT@ 65929 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[s] @TO@ MethodInvocation@@cypherRenderer.render(s) @AT@ 65944 @LENGTH@ 9
------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:render:[s] @AT@ 65951 @LENGTH@ 1
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o") @AT@ 65960 @LENGTH@ 220
------------INS StringLiteral@@"MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (r:`Resume`)-[:`FOR`]->(o:`Offer`) WHERE (NOT (r:`LastResume`) AND coalesce(o.valid_only, false) = false AND NOT (r:`InvalidStatus`) OR (o.valid_only = true AND r:`InvalidStatus`)) RETURN DISTINCT r, o"] @AT@ 65970 @LENGTH@ 209


INS MethodDeclaration@@protected, Map<String,AttributeValue>, MethodName:determineExclusiveStartKey,  @TO@ TypeDeclaration@@[public, abstract]AbstractDdbCommand,  @AT@ 3514 @LENGTH@ 152
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Map<String,AttributeValue>, MethodName:determineExclusiveStartKey,  @AT@ 3514 @LENGTH@ 9
---INS ParameterizedType@@Map<String,AttributeValue> @TO@ MethodDeclaration@@protected, Map<String,AttributeValue>, MethodName:determineExclusiveStartKey,  @AT@ 3524 @LENGTH@ 27
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,AttributeValue> @AT@ 3524 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,AttributeValue> @AT@ 3528 @LENGTH@ 6
------INS SimpleType@@AttributeValue @TO@ ParameterizedType@@Map<String,AttributeValue> @AT@ 3536 @LENGTH@ 14
---INS SimpleName@@MethodName:determineExclusiveStartKey @TO@ MethodDeclaration@@protected, Map<String,AttributeValue>, MethodName:determineExclusiveStartKey,  @AT@ 3552 @LENGTH@ 26
---INS ReturnStatement@@MethodInvocation:exchange.getIn().getHeader(DdbConstants.START_KEY,Map.class) @TO@ MethodDeclaration@@protected, Map<String,AttributeValue>, MethodName:determineExclusiveStartKey,  @AT@ 3591 @LENGTH@ 69
------INS MethodInvocation@@exchange.getIn().getHeader(DdbConstants.START_KEY,Map.class) @TO@ ReturnStatement@@MethodInvocation:exchange.getIn().getHeader(DdbConstants.START_KEY,Map.class) @AT@ 3598 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeader(DdbConstants.START_KEY,Map.class) @AT@ 3598 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeader(DdbConstants.START_KEY,Map.class) @AT@ 3598 @LENGTH@ 8
---------INS SimpleName@@MethodName:getHeader:[DdbConstants.START_KEY, Map.class] @TO@ MethodInvocation@@exchange.getIn().getHeader(DdbConstants.START_KEY,Map.class) @AT@ 3615 @LENGTH@ 44
------------INS QualifiedName@@DdbConstants.START_KEY @TO@ SimpleName@@MethodName:getHeader:[DdbConstants.START_KEY, Map.class] @AT@ 3625 @LENGTH@ 22
---------------INS SimpleName@@DdbConstants @TO@ QualifiedName@@DdbConstants.START_KEY @AT@ 3625 @LENGTH@ 12
---------------INS SimpleName@@START_KEY @TO@ QualifiedName@@DdbConstants.START_KEY @AT@ 3638 @LENGTH@ 9
------------INS TypeLiteral@@Map.class @TO@ SimpleName@@MethodName:getHeader:[DdbConstants.START_KEY, Map.class] @AT@ 3649 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:makeImmutable,  @TO@ public, void, MethodName:init,  @AT@ 48785 @LENGTH@ 397
---MOV ExpressionStatement@@MethodInvocation:delegate.init() @TO@ MethodDeclaration@@public, void, MethodName:makeImmutable,  @AT@ 8360 @LENGTH@ 16
---UPD SimpleName@@MethodName:makeImmutable @TO@ MethodName:init @AT@ 48797 @LENGTH@ 13
---UPD IfStatement@@if (delegate instanceof LightweightRuntimeCamelContext) {  throw new IllegalStateException();} @TO@ if (delegate instanceof LightweightRuntimeCamelContext) {  return;} @AT@ 48823 @LENGTH@ 114
------UPD Block@@ThenBody:{  throw new IllegalStateException();} @TO@ ThenBody:{  return;} @AT@ 48879 @LENGTH@ 58
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  throw new IllegalStateException();} @AT@ 48813 @LENGTH@ 7
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException() @AT@ 48893 @LENGTH@ 34
------------DEL ClassInstanceCreation@@IllegalStateException[] @AT@ 48899 @LENGTH@ 27
---------------DEL New@@new @AT@ 48899 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 48903 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:delegate.setAutoStartup(false) @AT@ 48946 @LENGTH@ 31
------DEL MethodInvocation@@delegate.setAutoStartup(false) @AT@ 48946 @LENGTH@ 30
---------DEL SimpleName@@Name:delegate @AT@ 48946 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setAutoStartup:[false] @AT@ 48955 @LENGTH@ 21
------------DEL BooleanLiteral@@false @AT@ 48970 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:delegate.start() @AT@ 48986 @LENGTH@ 17
------DEL MethodInvocation@@delegate.start() @AT@ 48986 @LENGTH@ 16
---------DEL SimpleName@@Name:delegate @AT@ 48986 @LENGTH@ 8
---------DEL SimpleName@@MethodName:start:[] @AT@ 48995 @LENGTH@ 7


UPD TypeDeclaration@@[public]ReactiveOAuth2UserService,  @TO@ [@FunctionalInterface, public]ReactiveOAuth2UserService,  @AT@ 1528 @LENGTH@ 507
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveOAuth2UserService,  @AT@ 1528 @LENGTH@ 20


UPD ForStatement@@for (int i=100; i > 0; i--) {  template.sendBodyAndHeader(endpoint,i,"num",(long)i);} @TO@ for (int i=100; i > 0; i--) {  String text="" + i;  template.sendBodyAndHeader(endpoint,text,"num",(long)i);} @AT@ 2009 @LENGTH@ 111
---UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(endpoint,i,"num",(long)i) @TO@ MethodInvocation:template.sendBodyAndHeader(endpoint,text,"num",(long)i) @AT@ 2053 @LENGTH@ 57
------UPD MethodInvocation@@template.sendBodyAndHeader(endpoint,i,"num",(long)i) @TO@ template.sendBodyAndHeader(endpoint,text,"num",(long)i) @AT@ 2053 @LENGTH@ 56
---------UPD SimpleName@@MethodName:sendBodyAndHeader:[endpoint, i, "num", (long)i] @TO@ MethodName:sendBodyAndHeader:[endpoint, text, "num", (long)i] @AT@ 2062 @LENGTH@ 47
------------UPD SimpleName@@i @TO@ text @AT@ 2090 @LENGTH@ 1
---INS VariableDeclarationStatement@@String text="" + i; @TO@ ForStatement@@for (int i=100; i > 0; i--) {  template.sendBodyAndHeader(endpoint,i,"num",(long)i);} @AT@ 2181 @LENGTH@ 21
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String text="" + i; @AT@ 2181 @LENGTH@ 6
------INS VariableDeclarationFragment@@text="" + i @TO@ VariableDeclarationStatement@@String text="" + i; @AT@ 2188 @LENGTH@ 13
---------INS SimpleName@@text @TO@ VariableDeclarationFragment@@text="" + i @AT@ 2188 @LENGTH@ 4
---------INS InfixExpression@@"" + i @TO@ VariableDeclarationFragment@@text="" + i @AT@ 2195 @LENGTH@ 6
------------INS StringLiteral@@"" @TO@ InfixExpression@@"" + i @AT@ 2195 @LENGTH@ 2
------------INS Operator@@+ @TO@ InfixExpression@@"" + i @AT@ 2197 @LENGTH@ 1
------------INS SimpleName@@i @TO@ InfixExpression@@"" + i @AT@ 2200 @LENGTH@ 1


UPD IfStatement@@if (input.markSupported()) input.mark(10240); @TO@ if (input.markSupported()) {  input.mark(10240);} @AT@ 5559 @LENGTH@ 61
---UPD Block@@ThenBody:input.mark(10240); @TO@ ThenBody:{  input.mark(10240);} @AT@ 5602 @LENGTH@ 18


INS IfStatement@@if (requestCache != null) {  authorizationCodeGrantFilter.setRequestCache(requestCache);} @TO@ MethodDeclaration@@private, OAuth2AuthorizationCodeGrantFilter, MethodName:createAuthorizationCodeGrantFilter, B builder,  @AT@ 11993 @LENGTH@ 96
---INS InfixExpression@@requestCache != null @TO@ IfStatement@@if (requestCache != null) {  authorizationCodeGrantFilter.setRequestCache(requestCache);} @AT@ 11997 @LENGTH@ 20
------INS SimpleName@@requestCache @TO@ InfixExpression@@requestCache != null @AT@ 11997 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@requestCache != null @AT@ 12009 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@requestCache != null @AT@ 12013 @LENGTH@ 4
---INS Block@@ThenBody:{  authorizationCodeGrantFilter.setRequestCache(requestCache);} @TO@ IfStatement@@if (requestCache != null) {  authorizationCodeGrantFilter.setRequestCache(requestCache);} @AT@ 12019 @LENGTH@ 70
------INS ExpressionStatement@@MethodInvocation:authorizationCodeGrantFilter.setRequestCache(requestCache) @TO@ Block@@ThenBody:{  authorizationCodeGrantFilter.setRequestCache(requestCache);} @AT@ 12025 @LENGTH@ 59
---------INS MethodInvocation@@authorizationCodeGrantFilter.setRequestCache(requestCache) @TO@ ExpressionStatement@@MethodInvocation:authorizationCodeGrantFilter.setRequestCache(requestCache) @AT@ 12025 @LENGTH@ 58
------------INS SimpleName@@Name:authorizationCodeGrantFilter @TO@ MethodInvocation@@authorizationCodeGrantFilter.setRequestCache(requestCache) @AT@ 12025 @LENGTH@ 28
------------INS SimpleName@@MethodName:setRequestCache:[requestCache] @TO@ MethodInvocation@@authorizationCodeGrantFilter.setRequestCache(requestCache) @AT@ 12054 @LENGTH@ 29
---------------INS SimpleName@@requestCache @TO@ SimpleName@@MethodName:setRequestCache:[requestCache] @AT@ 12070 @LENGTH@ 12


DEL MethodDeclaration@@private, static, OAuth2AuthorizedClientManager, MethodName:createDefaultAuthorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 5080 @LENGTH@ 719
---DEL Modifier@@private @AT@ 5080 @LENGTH@ 7
---DEL Modifier@@static @AT@ 5088 @LENGTH@ 6
---DEL SimpleType@@OAuth2AuthorizedClientManager @AT@ 5095 @LENGTH@ 29
---DEL SimpleName@@MethodName:createDefaultAuthorizedClientManager @AT@ 5125 @LENGTH@ 36
---DEL SingleVariableDeclaration@@ClientRegistrationRepository clientRegistrationRepository @AT@ 5166 @LENGTH@ 57
------DEL SimpleType@@ClientRegistrationRepository @AT@ 5166 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 5195 @LENGTH@ 28
---DEL SingleVariableDeclaration@@OAuth2AuthorizedClientRepository authorizedClientRepository @AT@ 5225 @LENGTH@ 59
------DEL SimpleType@@OAuth2AuthorizedClientRepository @AT@ 5225 @LENGTH@ 32
------DEL SimpleName@@authorizedClientRepository @AT@ 5258 @LENGTH@ 26
---DEL VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 5291 @LENGTH@ 219
------DEL SimpleType@@OAuth2AuthorizedClientProvider @AT@ 5291 @LENGTH@ 30
------DEL VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 5322 @LENGTH@ 187
---------DEL SimpleName@@authorizedClientProvider @AT@ 5322 @LENGTH@ 24
---------DEL MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 5353 @LENGTH@ 156
------------DEL MethodInvocation@@MethodName:password:[] @AT@ 5353 @LENGTH@ 141
------------DEL MethodInvocation@@MethodName:clientCredentials:[] @AT@ 5353 @LENGTH@ 123
------------DEL MethodInvocation@@MethodName:refreshToken:[] @AT@ 5353 @LENGTH@ 96
------------DEL MethodInvocation@@MethodName:authorizationCode:[] @AT@ 5353 @LENGTH@ 74
------------DEL MethodInvocation@@MethodName:builder:[] @AT@ 5353 @LENGTH@ 47
------------DEL SimpleName@@Name:OAuth2AuthorizedClientProviderBuilder @AT@ 5353 @LENGTH@ 37
------------DEL SimpleName@@MethodName:build:[] @AT@ 5502 @LENGTH@ 7
---DEL VariableDeclarationStatement@@DefaultOAuth2AuthorizedClientManager authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository); @AT@ 5513 @LENGTH@ 167
------DEL SimpleType@@DefaultOAuth2AuthorizedClientManager @AT@ 5513 @LENGTH@ 36
------DEL VariableDeclarationFragment@@authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 5550 @LENGTH@ 129
---------DEL SimpleName@@authorizedClientManager @AT@ 5550 @LENGTH@ 23
---------DEL ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 5576 @LENGTH@ 103
------------DEL New@@new @AT@ 5576 @LENGTH@ 3
------------DEL SimpleType@@DefaultOAuth2AuthorizedClientManager @AT@ 5580 @LENGTH@ 36
------------DEL SimpleName@@clientRegistrationRepository @AT@ 5622 @LENGTH@ 28
------------DEL SimpleName@@authorizedClientRepository @AT@ 5652 @LENGTH@ 26
---DEL ExpressionStatement@@MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 5683 @LENGTH@ 78
------DEL MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 5683 @LENGTH@ 77
---------DEL SimpleName@@Name:authorizedClientManager @AT@ 5683 @LENGTH@ 23
---------DEL SimpleName@@MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @AT@ 5707 @LENGTH@ 53
------------DEL SimpleName@@authorizedClientProvider @AT@ 5735 @LENGTH@ 24
---DEL ReturnStatement@@SimpleName:authorizedClientManager @AT@ 5765 @LENGTH@ 31
------DEL SimpleName@@authorizedClientManager @AT@ 5772 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenAuthorizationRequestCustomizerRemovesNonceThenQueryExcludesNonce,  @AT@ 23881 @LENGTH@ 99
---INS MethodInvocation@@assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 23881 @LENGTH@ 98
------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAttributes()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 23881 @LENGTH@ 48
---------INS MethodInvocation@@authorizationRequest.getAttributes() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAttributes()] @AT@ 23892 @LENGTH@ 36
------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAttributes() @AT@ 23892 @LENGTH@ 20
------------INS SimpleName@@MethodName:getAttributes:[] @TO@ MethodInvocation@@authorizationRequest.getAttributes() @AT@ 23913 @LENGTH@ 15
------INS SimpleName@@MethodName:containsKey:[OAuth2ParameterNames.REGISTRATION_ID] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAttributes()).containsKey(OAuth2ParameterNames.REGISTRATION_ID) @AT@ 23930 @LENGTH@ 49
---------INS QualifiedName@@OAuth2ParameterNames.REGISTRATION_ID @TO@ SimpleName@@MethodName:containsKey:[OAuth2ParameterNames.REGISTRATION_ID] @AT@ 23942 @LENGTH@ 36
------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.REGISTRATION_ID @AT@ 23942 @LENGTH@ 20
------------INS SimpleName@@REGISTRATION_ID @TO@ QualifiedName@@OAuth2ParameterNames.REGISTRATION_ID @AT@ 23963 @LENGTH@ 15


INS IfStatement@@if (cacheSize >= 0) {  this.producers=createServicePool(camelContext,maxCacheSize);} else {  this.producers=null;} @TO@ MethodDeclaration@@public, voidMethodName:DefaultProducerCache, Object source, CamelContext camelContext, int cacheSize,  @AT@ 2933 @LENGTH@ 194
---INS InfixExpression@@cacheSize >= 0 @TO@ IfStatement@@if (cacheSize >= 0) {  this.producers=createServicePool(camelContext,maxCacheSize);} else {  this.producers=null;} @AT@ 2937 @LENGTH@ 14
------INS SimpleName@@cacheSize @TO@ InfixExpression@@cacheSize >= 0 @AT@ 2937 @LENGTH@ 9
------INS Operator@@>= @TO@ InfixExpression@@cacheSize >= 0 @AT@ 2946 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@cacheSize >= 0 @AT@ 2950 @LENGTH@ 1
---INS Block@@ThenBody:{  this.producers=createServicePool(camelContext,maxCacheSize);} @TO@ IfStatement@@if (cacheSize >= 0) {  this.producers=createServicePool(camelContext,maxCacheSize);} else {  this.producers=null;} @AT@ 2953 @LENGTH@ 87
------MOV ExpressionStatement@@Assignment:this.producers=createServicePool(camelContext,maxCacheSize) @TO@ Block@@ThenBody:{  this.producers=createServicePool(camelContext,maxCacheSize);} @AT@ 2933 @LENGTH@ 63
---INS Block@@ElseBody:{  this.producers=null;} @TO@ IfStatement@@if (cacheSize >= 0) {  this.producers=createServicePool(camelContext,maxCacheSize);} else {  this.producers=null;} @AT@ 3046 @LENGTH@ 81
------INS ExpressionStatement@@Assignment:this.producers=null @TO@ Block@@ElseBody:{  this.producers=null;} @AT@ 3095 @LENGTH@ 22
---------INS Assignment@@this.producers=null @TO@ ExpressionStatement@@Assignment:this.producers=null @AT@ 3095 @LENGTH@ 21
------------INS FieldAccess@@this.producers @TO@ Assignment@@this.producers=null @AT@ 3095 @LENGTH@ 14
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.producers @AT@ 3095 @LENGTH@ 4
---------------INS SimpleName@@producers @TO@ FieldAccess@@this.producers @AT@ 3100 @LENGTH@ 9
------------INS Operator@@= @TO@ Assignment@@this.producers=null @AT@ 3109 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@this.producers=null @AT@ 3112 @LENGTH@ 4


UPD TypeDeclaration@@[public]ReactiveJwtDecoder,  @TO@ [@FunctionalInterface, public]ReactiveJwtDecoder,  @AT@ 1748 @LENGTH@ 338
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveJwtDecoder,  @AT@ 1748 @LENGTH@ 20


UPD TypeDeclaration@@[public]OpaqueTokenIntrospector,  @TO@ [@FunctionalInterface, public]OpaqueTokenIntrospector,  @AT@ 1319 @LENGTH@ 331
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]OpaqueTokenIntrospector,  @AT@ 1319 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.31.0.Final").dependency("org.kie:kie-dmn-api:7.31.0.Final").dependency("org.kie:kie-dmn-model:7.31.0.Final").dependency("org.kie:kie-internal:7.31.0.Final").dependency("org.drools:drools-compiler:7.31.0.Final").dependency("org.drools:drools-canonical-model:7.31.0.Final").dependency("org.drools:drools-model-compiler:7.31.0.Final").dependency("org.drools:drools-mvel-compiler:7.31.0.Final").dependency("org.drools:drools-mvel-parser:7.31.0.Final").dependency("org.drools:drools-core:7.31.0.Final").unitTestExpectedNumber(0).build() @AT@ 1441 @LENGTH@ 555
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.31.0.Final").dependency("org.kie:kie-dmn-api:7.31.0.Final").dependency("org.kie:kie-dmn-model:7.31.0.Final").dependency("org.kie:kie-internal:7.31.0.Final").dependency("org.drools:drools-compiler:7.31.0.Final").dependency("org.drools:drools-canonical-model:7.31.0.Final").dependency("org.drools:drools-model-compiler:7.31.0.Final").dependency("org.drools:drools-mvel-compiler:7.31.0.Final").dependency("org.drools:drools-mvel-parser:7.31.0.Final").dependency("org.drools:drools-core:7.31.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 547
------INS MethodInvocation@@MethodName:dependency:["org.drools:drools-canonical-model:7.31.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 490
---------INS StringLiteral@@"org.drools:drools-canonical-model:7.31.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.drools:drools-canonical-model:7.31.0.Final"] @AT@ 1889 @LENGTH@ 48
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.30.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-core:7.31.0.Final"] @AT@ 1448 @LENGTH@ 479
---------UPD StringLiteral@@"org.drools:drools-core:7.30.0.Final" @TO@ "org.drools:drools-core:7.31.0.Final" @AT@ 1889 @LENGTH@ 37
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.30.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-compiler:7.31.0.Final"] @AT@ 1448 @LENGTH@ 412
---------UPD StringLiteral@@"org.drools:drools-compiler:7.30.0.Final" @TO@ "org.drools:drools-compiler:7.31.0.Final" @AT@ 1818 @LENGTH@ 41
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-internal:7.30.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-internal:7.31.0.Final"] @AT@ 1448 @LENGTH@ 341
---------UPD StringLiteral@@"org.kie:kie-internal:7.30.0.Final" @TO@ "org.kie:kie-internal:7.31.0.Final" @AT@ 1753 @LENGTH@ 35
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-model:7.30.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-dmn-model:7.31.0.Final"] @AT@ 1448 @LENGTH@ 276
---------UPD StringLiteral@@"org.kie:kie-dmn-model:7.30.0.Final" @TO@ "org.kie:kie-dmn-model:7.31.0.Final" @AT@ 1687 @LENGTH@ 36
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-api:7.30.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-dmn-api:7.31.0.Final"] @AT@ 1448 @LENGTH@ 210
---------UPD StringLiteral@@"org.kie:kie-dmn-api:7.30.0.Final" @TO@ "org.kie:kie-dmn-api:7.31.0.Final" @AT@ 1623 @LENGTH@ 34
------UPD MethodInvocation@@MethodName:dependency:["org.kie:kie-api:7.30.0.Final"] @TO@ MethodName:dependency:["org.kie:kie-api:7.31.0.Final"] @AT@ 1448 @LENGTH@ 146
---------UPD StringLiteral@@"org.kie:kie-api:7.30.0.Final" @TO@ "org.kie:kie-api:7.31.0.Final" @AT@ 1563 @LENGTH@ 30
------INS MethodInvocation@@MethodName:dependency:["org.drools:drools-mvel-parser:7.31.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 717
---------INS StringLiteral@@"org.drools:drools-mvel-parser:7.31.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.drools:drools-mvel-parser:7.31.0.Final"] @AT@ 2120 @LENGTH@ 44
------INS MethodInvocation@@MethodName:dependency:["org.drools:drools-mvel-compiler:7.31.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 643
---------INS StringLiteral@@"org.drools:drools-mvel-compiler:7.31.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.drools:drools-mvel-compiler:7.31.0.Final"] @AT@ 2044 @LENGTH@ 46
------INS MethodInvocation@@MethodName:dependency:["org.drools:drools-model-compiler:7.31.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.30.0.Final").dependency("org.kie:kie-dmn-api:7.30.0.Final").dependency("org.kie:kie-dmn-model:7.30.0.Final").dependency("org.kie:kie-internal:7.30.0.Final").dependency("org.drools:drools-compiler:7.30.0.Final").dependency("org.drools:drools-core:7.30.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 567
---------INS StringLiteral@@"org.drools:drools-model-compiler:7.31.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.drools:drools-model-compiler:7.31.0.Final"] @AT@ 1967 @LENGTH@ 47


UPD ExpressionStatement@@MethodInvocation:from("seda:foo?size=2").routeId("foo").noAutoStartup().to("mock:result") @TO@ MethodInvocation:from("seda:foo").routeId("foo").noAutoStartup().to("mock:result") @AT@ 2079 @LENGTH@ 98
---UPD MethodInvocation@@from("seda:foo?size=2").routeId("foo").noAutoStartup().to("mock:result") @TO@ from("seda:foo").routeId("foo").noAutoStartup().to("mock:result") @AT@ 2079 @LENGTH@ 97
------UPD MethodInvocation@@MethodName:from:["seda:foo?size=2"] @TO@ MethodName:from:["seda:foo"] @AT@ 2079 @LENGTH@ 23
---------UPD StringLiteral@@"seda:foo?size=2" @TO@ "seda:foo" @AT@ 2084 @LENGTH@ 17


INS MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ TypeDeclaration@@[public]SupervisingRouteController, DefaultRouteController @AT@ 7136 @LENGTH@ 282
---MOV ExpressionStatement@@Assignment:executorService=context.getExecutorServiceManager().newSingleThreadScheduledExecutor(this,"SupervisingRouteController") @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7128 @LENGTH@ 123
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7136 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7146 @LENGTH@ 4
---INS SimpleName@@MethodName:doStart @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7151 @LENGTH@ 7
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7168 @LENGTH@ 9
---INS VariableDeclarationStatement@@CamelContext context=getCamelContext(); @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7188 @LENGTH@ 41
------INS SimpleType@@CamelContext @TO@ VariableDeclarationStatement@@CamelContext context=getCamelContext(); @AT@ 7188 @LENGTH@ 12
------INS VariableDeclarationFragment@@context=getCamelContext() @TO@ VariableDeclarationStatement@@CamelContext context=getCamelContext(); @AT@ 7201 @LENGTH@ 27
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=getCamelContext() @AT@ 7201 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ VariableDeclarationFragment@@context=getCamelContext() @AT@ 7211 @LENGTH@ 17
---MOV ExpressionStatement@@Assignment:timer=new BackOffTimer(executorService) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 7260 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:form.add("grant_type","refresh_token") @TO@ MethodInvocation:form.add(OAuth2Utils.GRANT_TYPE,"refresh_token") @AT@ 8998 @LENGTH@ 40
---UPD MethodInvocation@@form.add("grant_type","refresh_token") @TO@ form.add(OAuth2Utils.GRANT_TYPE,"refresh_token") @AT@ 8998 @LENGTH@ 39
------UPD SimpleName@@MethodName:add:["grant_type", "refresh_token"] @TO@ MethodName:add:[OAuth2Utils.GRANT_TYPE, "refresh_token"] @AT@ 9003 @LENGTH@ 34
---------INS QualifiedName@@OAuth2Utils.GRANT_TYPE @TO@ SimpleName@@MethodName:add:["grant_type", "refresh_token"] @AT@ 9007 @LENGTH@ 22
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 9007 @LENGTH@ 11
------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 9019 @LENGTH@ 10
---------DEL StringLiteral@@"grant_type" @AT@ 9007 @LENGTH@ 12


UPD FieldDeclaration@@private, RestOperations, [restTemplate] @TO@ private, volatile, RestOperations, [restTemplate] @AT@ 2654 @LENGTH@ 36
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, RestOperations, [restTemplate] @AT@ 2662 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ MethodInvocation:assertIsInstanceOf(PropertyBindingException.class,e.getCause()) @AT@ 5012 @LENGTH@ 65
---UPD MethodInvocation@@assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ assertIsInstanceOf(PropertyBindingException.class,e.getCause()) @AT@ 5012 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @TO@ MethodName:assertIsInstanceOf:[PropertyBindingException.class, e.getCause()] @AT@ 5012 @LENGTH@ 64
---------UPD TypeLiteral@@IllegalArgumentException.class @TO@ PropertyBindingException.class @AT@ 5031 @LENGTH@ 30


UPD FieldDeclaration@@private, final, Map<PersistentProperty<?>,ResourceMapping>, [propertyCache=new ConcurrentHashMap<PersistentProperty<?>,ResourceMapping>()] @TO@ private, final, Map<PersistentProperty<?>,ResourceMapping>, [propertyCache=new ConcurrentHashMap<>()] @AT@ 1752 @LENGTH@ 138
---UPD VariableDeclarationFragment@@propertyCache=new ConcurrentHashMap<PersistentProperty<?>,ResourceMapping>() @TO@ propertyCache=new ConcurrentHashMap<>() @AT@ 1810 @LENGTH@ 79
------UPD ClassInstanceCreation@@ConcurrentHashMap<PersistentProperty<?>,ResourceMapping>[] @TO@ ConcurrentHashMap<>[] @AT@ 1826 @LENGTH@ 63
---------UPD ParameterizedType@@ConcurrentHashMap<PersistentProperty<?>,ResourceMapping> @TO@ ConcurrentHashMap<> @AT@ 1830 @LENGTH@ 57
------------DEL ParameterizedType@@PersistentProperty<?> @AT@ 1848 @LENGTH@ 21
---------------DEL SimpleType@@PersistentProperty @AT@ 1848 @LENGTH@ 18
---------------DEL WildcardType@@? @AT@ 1867 @LENGTH@ 1
------------DEL SimpleType@@ResourceMapping @AT@ 1871 @LENGTH@ 15


DEL MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationResponseRedirectUriNotEqualAuthorizationRequestRedirectUriThenThrowOAuth2AuthenticationException,  @AT@ 7105 @LENGTH@ 676
---DEL Modifier@@public @AT@ 7105 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 7112 @LENGTH@ 4
---DEL SimpleName@@MethodName:authenticateWhenAuthorizationResponseRedirectUriNotEqualAuthorizationRequestRedirectUriThenThrowOAuth2AuthenticationException @AT@ 7117 @LENGTH@ 125
---DEL ExpressionStatement@@MethodInvocation:this.exception.expect(OAuth2AuthenticationException.class) @AT@ 7249 @LENGTH@ 59
------DEL MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @AT@ 7249 @LENGTH@ 58
---------DEL FieldAccess@@this.exception @AT@ 7249 @LENGTH@ 14
------------DEL ThisExpression@@this @AT@ 7249 @LENGTH@ 4
------------DEL SimpleName@@exception @AT@ 7254 @LENGTH@ 9
---------DEL SimpleName@@MethodName:expect:[OAuth2AuthenticationException.class] @AT@ 7264 @LENGTH@ 43
------------DEL TypeLiteral@@OAuth2AuthenticationException.class @AT@ 7271 @LENGTH@ 35
---DEL ExpressionStatement@@MethodInvocation:this.exception.expectMessage(containsString("invalid_redirect_uri_parameter")) @AT@ 7311 @LENGTH@ 79
------DEL MethodInvocation@@this.exception.expectMessage(containsString("invalid_redirect_uri_parameter")) @AT@ 7311 @LENGTH@ 78
---------DEL FieldAccess@@this.exception @AT@ 7311 @LENGTH@ 14
------------DEL ThisExpression@@this @AT@ 7311 @LENGTH@ 4
------------DEL SimpleName@@exception @AT@ 7316 @LENGTH@ 9
---------DEL SimpleName@@MethodName:expectMessage:[containsString("invalid_redirect_uri_parameter")] @AT@ 7326 @LENGTH@ 63
------------DEL MethodInvocation@@containsString("invalid_redirect_uri_parameter") @AT@ 7340 @LENGTH@ 48
---------------DEL SimpleName@@MethodName:containsString:["invalid_redirect_uri_parameter"] @AT@ 7340 @LENGTH@ 48
------------------DEL StringLiteral@@"invalid_redirect_uri_parameter" @AT@ 7355 @LENGTH@ 32
---DEL VariableDeclarationStatement@@OAuth2AuthorizationResponse authorizationResponse=success().redirectUri("https://example2.com").build(); @AT@ 7394 @LENGTH@ 110
------DEL SimpleType@@OAuth2AuthorizationResponse @AT@ 7394 @LENGTH@ 27
------DEL VariableDeclarationFragment@@authorizationResponse=success().redirectUri("https://example2.com").build() @AT@ 7422 @LENGTH@ 81
---------DEL SimpleName@@authorizationResponse @AT@ 7422 @LENGTH@ 21
---------DEL MethodInvocation@@success().redirectUri("https://example2.com").build() @AT@ 7450 @LENGTH@ 53
------------DEL MethodInvocation@@MethodName:redirectUri:["https://example2.com"] @AT@ 7450 @LENGTH@ 45
---------------DEL StringLiteral@@"https://example2.com" @AT@ 7472 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:success:[] @AT@ 7450 @LENGTH@ 9
------------DEL SimpleName@@MethodName:build:[] @AT@ 7496 @LENGTH@ 7
---DEL VariableDeclarationStatement@@OAuth2AuthorizationExchange authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,authorizationResponse); @AT@ 7507 @LENGTH@ 138
------DEL SimpleType@@OAuth2AuthorizationExchange @AT@ 7507 @LENGTH@ 27
------DEL VariableDeclarationFragment@@authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,authorizationResponse) @AT@ 7535 @LENGTH@ 109
---------DEL SimpleName@@authorizationExchange @AT@ 7535 @LENGTH@ 21
---------DEL ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, authorizationResponse] @AT@ 7563 @LENGTH@ 81
------------DEL New@@new @AT@ 7563 @LENGTH@ 3
------------DEL SimpleType@@OAuth2AuthorizationExchange @AT@ 7567 @LENGTH@ 27
------------DEL FieldAccess@@this.authorizationRequest @AT@ 7595 @LENGTH@ 25
---------------DEL ThisExpression@@this @AT@ 7595 @LENGTH@ 4
---------------DEL SimpleName@@authorizationRequest @AT@ 7600 @LENGTH@ 20
------------DEL SimpleName@@authorizationResponse @AT@ 7622 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:this.authenticationProvider.authenticate(new OAuth2LoginAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7649 @LENGTH@ 129
------DEL MethodInvocation@@this.authenticationProvider.authenticate(new OAuth2LoginAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7649 @LENGTH@ 128
---------DEL FieldAccess@@this.authenticationProvider @AT@ 7649 @LENGTH@ 27
------------DEL ThisExpression@@this @AT@ 7649 @LENGTH@ 4
------------DEL SimpleName@@authenticationProvider @AT@ 7654 @LENGTH@ 22
---------DEL SimpleName@@MethodName:authenticate:[new OAuth2LoginAuthenticationToken(this.clientRegistration,authorizationExchange)] @AT@ 7677 @LENGTH@ 100
------------DEL ClassInstanceCreation@@OAuth2LoginAuthenticationToken[this.clientRegistration, authorizationExchange] @AT@ 7694 @LENGTH@ 82
---------------DEL New@@new @AT@ 7694 @LENGTH@ 3
---------------DEL SimpleType@@OAuth2LoginAuthenticationToken @AT@ 7698 @LENGTH@ 30
---------------DEL FieldAccess@@this.clientRegistration @AT@ 7729 @LENGTH@ 23
------------------DEL ThisExpression@@this @AT@ 7729 @LENGTH@ 4
------------------DEL SimpleName@@clientRegistration @AT@ 7734 @LENGTH@ 18
---------------DEL SimpleName@@authorizationExchange @AT@ 7754 @LENGTH@ 21


DEL FieldDeclaration@@private, static, final, String, [INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE="invalid_redirect_uri_parameter"] @AT@ 4412 @LENGTH@ 105
---DEL Modifier@@private @AT@ 4412 @LENGTH@ 7
---DEL Modifier@@static @AT@ 4420 @LENGTH@ 6
---DEL Modifier@@final @AT@ 4427 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 4433 @LENGTH@ 6
---DEL VariableDeclarationFragment@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE="invalid_redirect_uri_parameter" @AT@ 4440 @LENGTH@ 76
------DEL SimpleName@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE @AT@ 4440 @LENGTH@ 41
------DEL StringLiteral@@"invalid_redirect_uri_parameter" @AT@ 4484 @LENGTH@ 32


UPD MethodDeclaration@@KubernetesReplicationControllersEndpointBuilder, MethodName:kubernetesReplicationControllers, String path,  @TO@ static, KubernetesReplicationControllersEndpointBuilder, MethodName:kubernetesReplicationControllers, String path,  @AT@ 46867 @LENGTH@ 537
---INS Modifier@@static @TO@ MethodDeclaration@@KubernetesReplicationControllersEndpointBuilder, MethodName:kubernetesReplicationControllers, String path,  @AT@ 46819 @LENGTH@ 6


INS MethodDeclaration@@void, MethodName:gh204,  @TO@ TypeDeclaration@@[@Nested]Issues,  @AT@ 80938 @LENGTH@ 344
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:gh204,  @AT@ 80933 @LENGTH@ 4
---INS SimpleName@@MethodName:gh204 @TO@ MethodDeclaration@@void, MethodName:gh204,  @AT@ 80938 @LENGTH@ 5
---INS VariableDeclarationStatement@@final Node a=node("A").named("a"); @TO@ MethodDeclaration@@void, MethodName:gh204,  @AT@ 80951 @LENGTH@ 36
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Node a=node("A").named("a"); @AT@ 80951 @LENGTH@ 5
------INS SimpleType@@Node @TO@ VariableDeclarationStatement@@final Node a=node("A").named("a"); @AT@ 80957 @LENGTH@ 4
------INS VariableDeclarationFragment@@a=node("A").named("a") @TO@ VariableDeclarationStatement@@final Node a=node("A").named("a"); @AT@ 80962 @LENGTH@ 24
---------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a=node("A").named("a") @AT@ 80962 @LENGTH@ 1
---------INS MethodInvocation@@node("A").named("a") @TO@ VariableDeclarationFragment@@a=node("A").named("a") @AT@ 80966 @LENGTH@ 20
------------INS MethodInvocation@@MethodName:node:["A"] @TO@ MethodInvocation@@node("A").named("a") @AT@ 80966 @LENGTH@ 9
---------------INS StringLiteral@@"A" @TO@ MethodInvocation@@MethodName:node:["A"] @AT@ 80971 @LENGTH@ 3
------------INS SimpleName@@MethodName:named:["a"] @TO@ MethodInvocation@@node("A").named("a") @AT@ 80976 @LENGTH@ 10
---------------INS StringLiteral@@"a" @TO@ SimpleName@@MethodName:named:["a"] @AT@ 80982 @LENGTH@ 3
---INS VariableDeclarationStatement@@final Node b=node("B").named("b"); @TO@ MethodDeclaration@@void, MethodName:gh204,  @AT@ 80991 @LENGTH@ 36
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Node b=node("B").named("b"); @AT@ 80991 @LENGTH@ 5
------INS SimpleType@@Node @TO@ VariableDeclarationStatement@@final Node b=node("B").named("b"); @AT@ 80997 @LENGTH@ 4
------INS VariableDeclarationFragment@@b=node("B").named("b") @TO@ VariableDeclarationStatement@@final Node b=node("B").named("b"); @AT@ 81002 @LENGTH@ 24
---------INS SimpleName@@b @TO@ VariableDeclarationFragment@@b=node("B").named("b") @AT@ 81002 @LENGTH@ 1
---------INS MethodInvocation@@node("B").named("b") @TO@ VariableDeclarationFragment@@b=node("B").named("b") @AT@ 81006 @LENGTH@ 20
------------INS MethodInvocation@@MethodName:node:["B"] @TO@ MethodInvocation@@node("B").named("b") @AT@ 81006 @LENGTH@ 9
---------------INS StringLiteral@@"B" @TO@ MethodInvocation@@MethodName:node:["B"] @AT@ 81011 @LENGTH@ 3
------------INS SimpleName@@MethodName:named:["b"] @TO@ MethodInvocation@@node("B").named("b") @AT@ 81016 @LENGTH@ 10
---------------INS StringLiteral@@"b" @TO@ SimpleName@@MethodName:named:["b"] @AT@ 81022 @LENGTH@ 3
---INS VariableDeclarationStatement@@final Node c=node("C").named("c"); @TO@ MethodDeclaration@@void, MethodName:gh204,  @AT@ 81031 @LENGTH@ 36
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Node c=node("C").named("c"); @AT@ 81031 @LENGTH@ 5
------INS SimpleType@@Node @TO@ VariableDeclarationStatement@@final Node c=node("C").named("c"); @AT@ 81037 @LENGTH@ 4
------INS VariableDeclarationFragment@@c=node("C").named("c") @TO@ VariableDeclarationStatement@@final Node c=node("C").named("c"); @AT@ 81042 @LENGTH@ 24
---------INS SimpleName@@c @TO@ VariableDeclarationFragment@@c=node("C").named("c") @AT@ 81042 @LENGTH@ 1
---------INS MethodInvocation@@node("C").named("c") @TO@ VariableDeclarationFragment@@c=node("C").named("c") @AT@ 81046 @LENGTH@ 20
------------INS MethodInvocation@@MethodName:node:["C"] @TO@ MethodInvocation@@node("C").named("c") @AT@ 81046 @LENGTH@ 9
---------------INS StringLiteral@@"C" @TO@ MethodInvocation@@MethodName:node:["C"] @AT@ 81051 @LENGTH@ 3
------------INS SimpleName@@MethodName:named:["c"] @TO@ MethodInvocation@@node("C").named("c") @AT@ 81056 @LENGTH@ 10
---------------INS StringLiteral@@"c" @TO@ SimpleName@@MethodName:named:["c"] @AT@ 81062 @LENGTH@ 3
---INS VariableDeclarationStatement@@Statement s=match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build(); @TO@ MethodDeclaration@@void, MethodName:gh204,  @AT@ 81072 @LENGTH@ 97
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@Statement s=match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build(); @AT@ 81072 @LENGTH@ 9
------INS VariableDeclarationFragment@@s=match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build() @TO@ VariableDeclarationStatement@@Statement s=match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build(); @AT@ 81082 @LENGTH@ 86
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build() @AT@ 81082 @LENGTH@ 1
---------INS MethodInvocation@@match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build() @TO@ VariableDeclarationFragment@@s=match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build() @AT@ 81086 @LENGTH@ 82
------------INS MethodInvocation@@MethodName:returning:[a] @TO@ MethodInvocation@@match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build() @AT@ 81086 @LENGTH@ 69
---------------INS SimpleName@@a @TO@ MethodInvocation@@MethodName:returning:[a] @AT@ 81153 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:match:[a.relationshipTo(b).relationshipTo(c).max(2)] @TO@ MethodInvocation@@match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build() @AT@ 81086 @LENGTH@ 51
---------------INS MethodInvocation@@a.relationshipTo(b).relationshipTo(c).max(2) @TO@ MethodInvocation@@MethodName:match:[a.relationshipTo(b).relationshipTo(c).max(2)] @AT@ 81092 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:relationshipTo:[c] @TO@ MethodInvocation@@a.relationshipTo(b).relationshipTo(c).max(2) @AT@ 81092 @LENGTH@ 37
---------------------INS SimpleName@@c @TO@ MethodInvocation@@MethodName:relationshipTo:[c] @AT@ 81127 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:relationshipTo:[b] @TO@ MethodInvocation@@a.relationshipTo(b).relationshipTo(c).max(2) @AT@ 81092 @LENGTH@ 19
---------------------INS SimpleName@@b @TO@ MethodInvocation@@MethodName:relationshipTo:[b] @AT@ 81109 @LENGTH@ 1
------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.relationshipTo(b).relationshipTo(c).max(2) @AT@ 81092 @LENGTH@ 1
------------------INS SimpleName@@MethodName:max:[2] @TO@ MethodInvocation@@a.relationshipTo(b).relationshipTo(c).max(2) @AT@ 81130 @LENGTH@ 6
---------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:max:[2] @AT@ 81134 @LENGTH@ 1
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@match(a.relationshipTo(b).relationshipTo(c).max(2)).returning(a).build() @AT@ 81161 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a") @TO@ MethodDeclaration@@void, MethodName:gh204,  @AT@ 81174 @LENGTH@ 104
------INS MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a") @AT@ 81174 @LENGTH@ 103
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(s)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a") @AT@ 81174 @LENGTH@ 36
------------INS MethodInvocation@@cypherRenderer.render(s) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(s)] @AT@ 81185 @LENGTH@ 24
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(s) @AT@ 81185 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[s] @TO@ MethodInvocation@@cypherRenderer.render(s) @AT@ 81200 @LENGTH@ 9
------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:render:[s] @AT@ 81207 @LENGTH@ 1
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a") @AT@ 81216 @LENGTH@ 61
------------INS StringLiteral@@"MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (a:`A`)-->(b:`B`)-[*..2]->(c:`C`) RETURN a"] @AT@ 81226 @LENGTH@ 50


UPD IfStatement@@if (ch == 'y') {  ch=requireInput(ch,YES);  xmlDeclStandalone=new Boolean(true);} else if (ch == 'n') {  ch=requireInput(ch,NO);  xmlDeclStandalone=new Boolean(false);} else {  throw new XmlPullParserException("expected 'yes' or 'no' after standalone and not " + printable(ch),this,null);} @TO@ if (ch == 'y') {  ch=requireInput(ch,YES);  xmlDeclStandalone=Boolean.TRUE;} else if (ch == 'n') {  ch=requireInput(ch,NO);  xmlDeclStandalone=Boolean.FALSE;} else {  throw new XmlPullParserException("expected 'yes' or 'no' after standalone and not " + printable(ch),this,null);} @AT@ 105162 @LENGTH@ 534
---UPD Block@@ThenBody:{  ch=requireInput(ch,YES);  xmlDeclStandalone=new Boolean(true);} @TO@ ThenBody:{  ch=requireInput(ch,YES);  xmlDeclStandalone=Boolean.TRUE;} @AT@ 105177 @LENGTH@ 173
------UPD ExpressionStatement@@Assignment:xmlDeclStandalone=new Boolean(true) @TO@ Assignment:xmlDeclStandalone=Boolean.TRUE @AT@ 105298 @LENGTH@ 38
---------UPD Assignment@@xmlDeclStandalone=new Boolean(true) @TO@ xmlDeclStandalone=Boolean.TRUE @AT@ 105298 @LENGTH@ 37
------------DEL ClassInstanceCreation@@Boolean[true] @AT@ 105318 @LENGTH@ 17
---------------DEL New@@new @AT@ 105318 @LENGTH@ 3
---------------DEL SimpleType@@Boolean @AT@ 105322 @LENGTH@ 7
---------------DEL BooleanLiteral@@true @AT@ 105330 @LENGTH@ 4
------------INS QualifiedName@@Boolean.TRUE @TO@ Assignment@@xmlDeclStandalone=new Boolean(true) @AT@ 105318 @LENGTH@ 12
---------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 105318 @LENGTH@ 7
---------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 105326 @LENGTH@ 4
---UPD Block@@ElseBody:if (ch == 'n') {  ch=requireInput(ch,NO);  xmlDeclStandalone=new Boolean(false);} else {  throw new XmlPullParserException("expected 'yes' or 'no' after standalone and not " + printable(ch),this,null);} @TO@ ElseBody:if (ch == 'n') {  ch=requireInput(ch,NO);  xmlDeclStandalone=Boolean.FALSE;} else {  throw new XmlPullParserException("expected 'yes' or 'no' after standalone and not " + printable(ch),this,null);} @AT@ 105356 @LENGTH@ 340
------UPD IfStatement@@if (ch == 'n') {  ch=requireInput(ch,NO);  xmlDeclStandalone=new Boolean(false);} else {  throw new XmlPullParserException("expected 'yes' or 'no' after standalone and not " + printable(ch),this,null);} @TO@ if (ch == 'n') {  ch=requireInput(ch,NO);  xmlDeclStandalone=Boolean.FALSE;} else {  throw new XmlPullParserException("expected 'yes' or 'no' after standalone and not " + printable(ch),this,null);} @AT@ 105356 @LENGTH@ 340
---------UPD Block@@ThenBody:{  ch=requireInput(ch,NO);  xmlDeclStandalone=new Boolean(false);} @TO@ ThenBody:{  ch=requireInput(ch,NO);  xmlDeclStandalone=Boolean.FALSE;} @AT@ 105371 @LENGTH@ 174
------------UPD ExpressionStatement@@Assignment:xmlDeclStandalone=new Boolean(false) @TO@ Assignment:xmlDeclStandalone=Boolean.FALSE @AT@ 105492 @LENGTH@ 39
---------------UPD Assignment@@xmlDeclStandalone=new Boolean(false) @TO@ xmlDeclStandalone=Boolean.FALSE @AT@ 105492 @LENGTH@ 38
------------------INS QualifiedName@@Boolean.FALSE @TO@ Assignment@@xmlDeclStandalone=new Boolean(false) @AT@ 105507 @LENGTH@ 13
---------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 105507 @LENGTH@ 7
---------------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 105515 @LENGTH@ 5
------------------DEL ClassInstanceCreation@@Boolean[false] @AT@ 105512 @LENGTH@ 18
---------------------DEL New@@new @AT@ 105512 @LENGTH@ 3
---------------------DEL SimpleType@@Boolean @AT@ 105516 @LENGTH@ 7
---------------------DEL BooleanLiteral@@false @AT@ 105524 @LENGTH@ 5


UPD MethodDeclaration@@void, MethodName:decode, final byte[] in, int inPos, final int inAvail, final Context context,  @TO@ void, MethodName:decode, final byte[] input, int inPos, final int inAvail, final Context context,  @AT@ 15760 @LENGTH@ 4711
---UPD SingleVariableDeclaration@@final byte[] in @TO@ final byte[] input @AT@ 15767 @LENGTH@ 15
------UPD SimpleName@@in @TO@ input @AT@ 15780 @LENGTH@ 2
---UPD ForStatement@@for (int i=0; i < inAvail; i++) {  final byte b=in[inPos++];  if (b == pad) {    context.eof=true;    break;  }  final byte[] buffer=ensureBufferSize(decodeSize,context);  if (b >= 0 && b < this.decodeTable.length) {    final int result=this.decodeTable[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);      }    }  }} @TO@ for (int i=0; i < inAvail; i++) {  final byte b=input[inPos++];  if (b == pad) {    context.eof=true;    break;  }  final byte[] buffer=ensureBufferSize(decodeSize,context);  if (b >= 0 && b < this.decodeTable.length) {    final int result=this.decodeTable[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);      }    }  }} @AT@ 16031 @LENGTH@ 1291
------UPD VariableDeclarationStatement@@final byte b=in[inPos++]; @TO@ final byte b=input[inPos++]; @AT@ 16079 @LENGTH@ 27
---------UPD VariableDeclarationFragment@@b=in[inPos++] @TO@ b=input[inPos++] @AT@ 16090 @LENGTH@ 15
------------UPD ArrayAccess@@in[inPos++] @TO@ input[inPos++] @AT@ 16094 @LENGTH@ 11
---------------UPD SimpleName@@in @TO@ input @AT@ 16094 @LENGTH@ 2


MOV MethodDeclaration@@protected, voidMethodName:ImmutableCamelContext, CamelContext delegate,  @TO@ TypeDeclaration@@[@Experimental, public]ImmutableCamelContext, [ExtendedCamelContext, CatalogCamelContext, ModelCamelContext] @AT@ 7038 @LENGTH@ 96


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultingRDF.size(),1761) @TO@ MethodInvocation:assertEquals(resultingRDF.size(),1762) @AT@ 1701 @LENGTH@ 40
---UPD MethodInvocation@@assertEquals(resultingRDF.size(),1761) @TO@ assertEquals(resultingRDF.size(),1762) @AT@ 1701 @LENGTH@ 39
------UPD SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 1761] @TO@ MethodName:assertEquals:[resultingRDF.size(), 1762] @AT@ 1701 @LENGTH@ 39
---------UPD NumberLiteral@@1761 @TO@ 1762 @AT@ 1735 @LENGTH@ 4


UPD IfStatement@@if (canConvertFromStringTo(Long.class)) {  idAsLong=conversionService.convert(identifier,Long.class);} else {  idAsLong=Long.valueOf(identifier.toString());} @TO@ if (conversionService.canConvert(identifier.getClass(),Long.class)) {  idAsLong=conversionService.convert(identifier,Long.class);} else {  idAsLong=Long.valueOf(identifier.toString());} @AT@ 4669 @LENGTH@ 172
---UPD MethodInvocation@@canConvertFromStringTo(Long.class) @TO@ conversionService.canConvert(identifier.getClass(),Long.class) @AT@ 4673 @LENGTH@ 34
------INS SimpleName@@Name:conversionService @TO@ MethodInvocation@@canConvertFromStringTo(Long.class) @AT@ 4673 @LENGTH@ 17
------UPD SimpleName@@MethodName:canConvertFromStringTo:[Long.class] @TO@ MethodName:canConvert:[identifier.getClass(), Long.class] @AT@ 4673 @LENGTH@ 34
---------INS MethodInvocation@@identifier.getClass() @TO@ SimpleName@@MethodName:canConvertFromStringTo:[Long.class] @AT@ 4702 @LENGTH@ 21
------------INS SimpleName@@Name:identifier @TO@ MethodInvocation@@identifier.getClass() @AT@ 4702 @LENGTH@ 10
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@identifier.getClass() @AT@ 4713 @LENGTH@ 10


UPD CatchClause@@catch (ParseException|IOException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @TO@ catch (ParseException|IOException ex) {  int statusCode=500;  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error);  throw new ClientAuthorizationException(oauth2Error,clientRegistration.getRegistrationId(),message,ex);} @AT@ 5125 @LENGTH@ 303
---INS VariableDeclarationStatement@@int statusCode=500; @TO@ CatchClause@@catch (ParseException|IOException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 5172 @LENGTH@ 21
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 5172 @LENGTH@ 3
------INS VariableDeclarationFragment@@statusCode=500 @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 5176 @LENGTH@ 16
---------INS SimpleName@@statusCode @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 5176 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 5189 @LENGTH@ 3
---UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error,ex) @TO@ ClassInstanceCreation:new ClientAuthorizationException(oauth2Error,clientRegistration.getRegistrationId(),message,ex) @AT@ 5368 @LENGTH@ 56
------UPD ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @TO@ ClientAuthorizationException[oauth2Error, clientRegistration.getRegistrationId(), message, ex] @AT@ 5374 @LENGTH@ 49
---------UPD SimpleType@@OAuth2AuthorizationException @TO@ ClientAuthorizationException @AT@ 5378 @LENGTH@ 28
---------INS MethodInvocation@@clientRegistration.getRegistrationId() @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 5608 @LENGTH@ 38
------------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 5608 @LENGTH@ 18
------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 5627 @LENGTH@ 19
---------INS SimpleName@@message @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 5653 @LENGTH@ 7
---INS VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @TO@ CatchClause@@catch (ParseException|IOException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 5406 @LENGTH@ 135
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 5406 @LENGTH@ 6
------INS VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 5413 @LENGTH@ 127
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 5413 @LENGTH@ 7
---------INS MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 5423 @LENGTH@ 117
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 5423 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 5430 @LENGTH@ 110
---------------INS StringLiteral@@"Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s" @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 5437 @LENGTH@ 67
---------------INS SimpleName@@statusCode @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 5511 @LENGTH@ 10
---------------INS SimpleName@@oauth2Error @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 5528 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:DefaultCompositeApiClient, final SalesforceEndpointConfig configuration, final PayloadFormat format, final String version, final SalesforceSession session, final SalesforceHttpClient httpClient, SalesforceException,  @TO@ public, voidMethodName:DefaultCompositeApiClient, final SalesforceEndpointConfig configuration, final PayloadFormat format, final String version, final SalesforceSession session, final SalesforceHttpClient httpClient, final SalesforceLoginConfig loginConfig, SalesforceException,  @AT@ 3412 @LENGTH@ 990
---UPD SuperConstructorInvocation@@super(version,session,httpClient);
 @TO@ super(version,session,httpClient,loginConfig);
 @AT@ 3695 @LENGTH@ 36
------INS SimpleName@@loginConfig @TO@ SuperConstructorInvocation@@super(version,session,httpClient);
 @AT@ 3840 @LENGTH@ 11
---INS SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @TO@ MethodDeclaration@@public, voidMethodName:DefaultCompositeApiClient, final SalesforceEndpointConfig configuration, final PayloadFormat format, final String version, final SalesforceSession session, final SalesforceHttpClient httpClient, SalesforceException,  @AT@ 3718 @LENGTH@ 39
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @AT@ 3718 @LENGTH@ 5
------INS SimpleType@@SalesforceLoginConfig @TO@ SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @AT@ 3724 @LENGTH@ 21
------INS SimpleName@@loginConfig @TO@ SingleVariableDeclaration@@final SalesforceLoginConfig loginConfig @AT@ 3746 @LENGTH@ 11


UPD IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ if (cacheSize < 0) {  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("RecipientList {} is not using ProducerCache",this);} else {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("RecipientList {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 7421 @LENGTH@ 239


INS ExpressionStatement@@MethodInvocation:forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @TO@ MethodDeclaration@@MethodSpec, MethodName:generateRestMethod,  @AT@ 2855 @LENGTH@ 115
---INS MethodInvocation@@forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @TO@ ExpressionStatement@@MethodInvocation:forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @AT@ 2855 @LENGTH@ 114
------INS SimpleName@@Name:forward @TO@ MethodInvocation@@forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @AT@ 2855 @LENGTH@ 7
------INS SimpleName@@MethodName:addCode:["    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n"] @TO@ MethodInvocation@@forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @AT@ 2863 @LENGTH@ 106
---------INS StringLiteral@@"    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n" @TO@ SimpleName@@MethodName:addCode:["    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n"] @AT@ 2871 @LENGTH@ 97


UPD VariableDeclarationStatement@@String tarballName="llap-" + version + ".tar.gz"; @TO@ String tarballName=cl.getName() + "-" + version+ ".tar.gz"; @AT@ 12733 @LENGTH@ 51
---UPD VariableDeclarationFragment@@tarballName="llap-" + version + ".tar.gz" @TO@ tarballName=cl.getName() + "-" + version+ ".tar.gz" @AT@ 12740 @LENGTH@ 43
------UPD InfixExpression@@"llap-" + version + ".tar.gz" @TO@ cl.getName() + "-" + version+ ".tar.gz" @AT@ 12754 @LENGTH@ 29
---------INS MethodInvocation@@cl.getName() @TO@ InfixExpression@@"llap-" + version + ".tar.gz" @AT@ 12754 @LENGTH@ 12
------------INS SimpleName@@Name:cl @TO@ MethodInvocation@@cl.getName() @AT@ 12754 @LENGTH@ 2
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@cl.getName() @AT@ 12757 @LENGTH@ 9
---------DEL StringLiteral@@"llap-" @AT@ 12754 @LENGTH@ 7
---------INS StringLiteral@@"-" @TO@ InfixExpression@@"llap-" + version + ".tar.gz" @AT@ 12769 @LENGTH@ 3


UPD ReturnStatement@@NumberLiteral:0 @TO@ MethodInvocation:Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @AT@ 2849 @LENGTH@ 9
---DEL NumberLiteral@@0 @AT@ 2856 @LENGTH@ 1
---INS MethodInvocation@@Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @TO@ ReturnStatement@@NumberLiteral:0 @AT@ 3697 @LENGTH@ 82
------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @AT@ 3697 @LENGTH@ 4
------INS SimpleName@@MethodName:compare:[fri1.getCurrentAttemptStartTime(), fri2.getCurrentAttemptStartTime()] @TO@ MethodInvocation@@Long.compare(fri1.getCurrentAttemptStartTime(),fri2.getCurrentAttemptStartTime()) @AT@ 3702 @LENGTH@ 77
---------INS MethodInvocation@@fri1.getCurrentAttemptStartTime() @TO@ SimpleName@@MethodName:compare:[fri1.getCurrentAttemptStartTime(), fri2.getCurrentAttemptStartTime()] @AT@ 3710 @LENGTH@ 33
------------INS SimpleName@@Name:fri1 @TO@ MethodInvocation@@fri1.getCurrentAttemptStartTime() @AT@ 3710 @LENGTH@ 4
------------INS SimpleName@@MethodName:getCurrentAttemptStartTime:[] @TO@ MethodInvocation@@fri1.getCurrentAttemptStartTime() @AT@ 3715 @LENGTH@ 28
---------INS MethodInvocation@@fri2.getCurrentAttemptStartTime() @TO@ SimpleName@@MethodName:compare:[fri1.getCurrentAttemptStartTime(), fri2.getCurrentAttemptStartTime()] @AT@ 3745 @LENGTH@ 33
------------INS SimpleName@@Name:fri2 @TO@ MethodInvocation@@fri2.getCurrentAttemptStartTime() @AT@ 3745 @LENGTH@ 4
------------INS SimpleName@@MethodName:getCurrentAttemptStartTime:[] @TO@ MethodInvocation@@fri2.getCurrentAttemptStartTime() @AT@ 3750 @LENGTH@ 28


INS MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @TO@ TypeDeclaration@@[public]SimpleBuilder, [Predicate, Expression, ExpressionResultTypeAware] @AT@ 2692 @LENGTH@ 510
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2692 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2699 @LENGTH@ 7
---INS SimpleName@@MethodName:configure @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2707 @LENGTH@ 9
---INS SingleVariableDeclaration@@CamelContext camelContext @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2717 @LENGTH@ 25
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2717 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2730 @LENGTH@ 12
---INS SingleVariableDeclaration@@Object target @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2744 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object target @AT@ 2744 @LENGTH@ 6
------INS SimpleName@@target @TO@ SingleVariableDeclaration@@Object target @AT@ 2751 @LENGTH@ 6
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2759 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 2759 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 2766 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2772 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 2772 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 2779 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean ignoreCase @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2786 @LENGTH@ 18
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean ignoreCase @AT@ 2786 @LENGTH@ 7
------INS SimpleName@@ignoreCase @TO@ SingleVariableDeclaration@@boolean ignoreCase @AT@ 2794 @LENGTH@ 10
---INS IfStatement@@if (target != this) {  throw new IllegalStateException("Can only configure our own instance !");} @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2816 @LENGTH@ 117
------INS InfixExpression@@target != this @TO@ IfStatement@@if (target != this) {  throw new IllegalStateException("Can only configure our own instance !");} @AT@ 2820 @LENGTH@ 14
---------INS SimpleName@@target @TO@ InfixExpression@@target != this @AT@ 2820 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@target != this @AT@ 2826 @LENGTH@ 2
---------INS ThisExpression@@this @TO@ InfixExpression@@target != this @AT@ 2830 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new IllegalStateException("Can only configure our own instance !");} @TO@ IfStatement@@if (target != this) {  throw new IllegalStateException("Can only configure our own instance !");} @AT@ 2836 @LENGTH@ 97
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Can only configure our own instance !") @TO@ Block@@ThenBody:{  throw new IllegalStateException("Can only configure our own instance !");} @AT@ 2850 @LENGTH@ 73
------------INS ClassInstanceCreation@@IllegalStateException["Can only configure our own instance !"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Can only configure our own instance !") @AT@ 2856 @LENGTH@ 66
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Can only configure our own instance !"] @AT@ 2856 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Can only configure our own instance !"] @AT@ 2860 @LENGTH@ 21
---------------INS StringLiteral@@"Can only configure our own instance !" @TO@ ClassInstanceCreation@@IllegalStateException["Can only configure our own instance !"] @AT@ 2882 @LENGTH@ 39
---INS SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:configure, CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase,  @AT@ 2942 @LENGTH@ 254
------INS ConditionalExpression@@ignoreCase ? name.toLowerCase() : name @TO@ SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @AT@ 2950 @LENGTH@ 38
---------INS SimpleName@@ignoreCase @TO@ ConditionalExpression@@ignoreCase ? name.toLowerCase() : name @AT@ 2950 @LENGTH@ 10
---------INS MethodInvocation@@name.toLowerCase() @TO@ ConditionalExpression@@ignoreCase ? name.toLowerCase() : name @AT@ 2963 @LENGTH@ 18
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.toLowerCase() @AT@ 2963 @LENGTH@ 4
------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@name.toLowerCase() @AT@ 2968 @LENGTH@ 13
---------INS SimpleName@@name @TO@ ConditionalExpression@@ignoreCase ? name.toLowerCase() : name @AT@ 2984 @LENGTH@ 4
------INS SwitchCase@@case "resulttype": @TO@ SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @AT@ 3004 @LENGTH@ 18
---------INS StringLiteral@@"resulttype" @TO@ SwitchCase@@case "resulttype": @AT@ 3009 @LENGTH@ 12
------INS SwitchCase@@case "resultType": @TO@ SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @AT@ 3035 @LENGTH@ 18
---------INS StringLiteral@@"resultType" @TO@ SwitchCase@@case "resultType": @AT@ 3040 @LENGTH@ 12
------INS ExpressionStatement@@MethodInvocation:setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value)) @TO@ SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @AT@ 3054 @LENGTH@ 84
---------INS MethodInvocation@@setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value)) @TO@ ExpressionStatement@@MethodInvocation:setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value)) @AT@ 3054 @LENGTH@ 83
------------INS SimpleName@@MethodName:setResultType:[PropertyConfigurerSupport.property(camelContext,Class.class,value)] @TO@ MethodInvocation@@setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value)) @AT@ 3054 @LENGTH@ 83
---------------INS MethodInvocation@@PropertyConfigurerSupport.property(camelContext,Class.class,value) @TO@ SimpleName@@MethodName:setResultType:[PropertyConfigurerSupport.property(camelContext,Class.class,value)] @AT@ 3068 @LENGTH@ 68
------------------INS SimpleName@@Name:PropertyConfigurerSupport @TO@ MethodInvocation@@PropertyConfigurerSupport.property(camelContext,Class.class,value) @AT@ 3068 @LENGTH@ 25
------------------INS SimpleName@@MethodName:property:[camelContext, Class.class, value] @TO@ MethodInvocation@@PropertyConfigurerSupport.property(camelContext,Class.class,value) @AT@ 3094 @LENGTH@ 42
---------------------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:property:[camelContext, Class.class, value] @AT@ 3103 @LENGTH@ 12
---------------------INS TypeLiteral@@Class.class @TO@ SimpleName@@MethodName:property:[camelContext, Class.class, value] @AT@ 3117 @LENGTH@ 11
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:property:[camelContext, Class.class, value] @AT@ 3130 @LENGTH@ 5
------INS ReturnStatement@@BooleanLiteral:true @TO@ SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @AT@ 3139 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3146 @LENGTH@ 4
------INS SwitchCase@@default @TO@ SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @AT@ 3164 @LENGTH@ 8
------INS ReturnStatement@@BooleanLiteral:false @TO@ SwitchStatement@@switch (ignoreCase ? name.toLowerCase() : name) {case "resulttype":case "resultType":  setResultType(PropertyConfigurerSupport.property(camelContext,Class.class,value));return true;default :return false;} @AT@ 3173 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3180 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithInvalidToken,  @TO@ TypeDeclaration@@[public]DefaultTokenServicesTests,  @AT@ 1493 @LENGTH@ 198
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithInvalidToken,  @AT@ 1493 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithInvalidToken,  @AT@ 1500 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadAccessTokenWithInvalidToken @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithInvalidToken,  @AT@ 1505 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithInvalidToken,  @AT@ 1547 @LENGTH@ 96
------INS MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1547 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:when:[tokenStore.readAccessToken(Mockito.anyString())] @TO@ MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1547 @LENGTH@ 61
------------INS MethodInvocation@@tokenStore.readAccessToken(Mockito.anyString()) @TO@ MethodInvocation@@MethodName:when:[tokenStore.readAccessToken(Mockito.anyString())] @AT@ 1560 @LENGTH@ 47
---------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.readAccessToken(Mockito.anyString()) @AT@ 1560 @LENGTH@ 10
---------------INS SimpleName@@MethodName:readAccessToken:[Mockito.anyString()] @TO@ MethodInvocation@@tokenStore.readAccessToken(Mockito.anyString()) @AT@ 1571 @LENGTH@ 36
------------------INS MethodInvocation@@Mockito.anyString() @TO@ SimpleName@@MethodName:readAccessToken:[Mockito.anyString()] @AT@ 1587 @LENGTH@ 19
---------------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.anyString() @AT@ 1587 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:anyString:[] @TO@ MethodInvocation@@Mockito.anyString() @AT@ 1595 @LENGTH@ 11
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1547 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenThrow:[new RuntimeException()] @TO@ MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1609 @LENGTH@ 33
------------INS ClassInstanceCreation@@RuntimeException[] @TO@ SimpleName@@MethodName:thenThrow:[new RuntimeException()] @AT@ 1619 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[] @AT@ 1619 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[] @AT@ 1623 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:services.readAccessToken("invalid-token") @TO@ MethodDeclaration@@public, void, MethodName:testReadAccessTokenWithInvalidToken,  @AT@ 1646 @LENGTH@ 42
------INS MethodInvocation@@services.readAccessToken("invalid-token") @TO@ ExpressionStatement@@MethodInvocation:services.readAccessToken("invalid-token") @AT@ 1646 @LENGTH@ 41
---------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.readAccessToken("invalid-token") @AT@ 1646 @LENGTH@ 8
---------INS SimpleName@@MethodName:readAccessToken:["invalid-token"] @TO@ MethodInvocation@@services.readAccessToken("invalid-token") @AT@ 1655 @LENGTH@ 32
------------INS StringLiteral@@"invalid-token" @TO@ SimpleName@@MethodName:readAccessToken:["invalid-token"] @AT@ 1671 @LENGTH@ 15


UPD ThrowStatement@@ClassInstanceCreation:new OAuth2IntrospectionException("Provided token [" + token + "] isn't active") @TO@ ClassInstanceCreation:new BadOpaqueTokenException("Provided token isn't active") @AT@ 6511 @LENGTH@ 86
---UPD ClassInstanceCreation@@OAuth2IntrospectionException["Provided token [" + token + "] isn't active"] @TO@ BadOpaqueTokenException["Provided token isn't active"] @AT@ 6517 @LENGTH@ 79
------INS StringLiteral@@"Provided token isn't active" @TO@ ClassInstanceCreation@@OAuth2IntrospectionException["Provided token [" + token + "] isn't active"] @AT@ 6519 @LENGTH@ 29
------UPD SimpleType@@OAuth2IntrospectionException @TO@ BadOpaqueTokenException @AT@ 6521 @LENGTH@ 28
------DEL InfixExpression@@"Provided token [" + token + "] isn't active" @AT@ 6550 @LENGTH@ 45
---------DEL StringLiteral@@"Provided token [" @AT@ 6550 @LENGTH@ 18
---------DEL Operator@@+ @AT@ 6568 @LENGTH@ 1
---------DEL SimpleName@@token @AT@ 6571 @LENGTH@ 5
---------DEL StringLiteral@@"] isn't active" @AT@ 6579 @LENGTH@ 16


UPD FieldDeclaration@@private, static, List<String>, [REST_XMLS=Arrays.asList("barRest.xml","simpleRest.xml","simpleRestToD.xml")] @TO@ private, static, final, List<String>, [REST_XMLS=Arrays.asList("barRest.xml","simpleRest.xml","simpleRestToD.xml")] @AT@ 1325 @LENGTH@ 108
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, List<String>, [REST_XMLS=Arrays.asList("barRest.xml","simpleRest.xml","simpleRestToD.xml")] @AT@ 1340 @LENGTH@ 5


UPD IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ if (cacheSize < 0) {  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("Enricher {} is not using ProducerCache",this);} else {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 14135 @LENGTH@ 234


UPD IfStatement@@if (parserSettings == null) {  parserSettings=new ThreadLocal<CPS>(){    @Override protected CPS initialValue(){      return createAndConfigureParserSettings();    }  };  unmarshaller=new Unmarshaller<>(lazyLoad,asMap);} @TO@ if (parserSettings == null) {  unmarshaller=new Unmarshaller<>(lazyLoad,asMap);  parserSettings=new ThreadLocal<CPS>(){    @Override protected CPS initialValue(){      return createAndConfigureParserSettings();    }  };} @AT@ 4295 @LENGTH@ 390
---UPD Block@@ThenBody:{  parserSettings=new ThreadLocal<CPS>(){    @Override protected CPS initialValue(){      return createAndConfigureParserSettings();    }  };  unmarshaller=new Unmarshaller<>(lazyLoad,asMap);} @TO@ ThenBody:{  unmarshaller=new Unmarshaller<>(lazyLoad,asMap);  parserSettings=new ThreadLocal<CPS>(){    @Override protected CPS initialValue(){      return createAndConfigureParserSettings();    }  };} @AT@ 4323 @LENGTH@ 362
------MOV ExpressionStatement@@Assignment:parserSettings=new ThreadLocal<CPS>(){
  @Override protected CPS initialValue(){
    return createAndConfigureParserSettings();
  }
}
 @TO@ Block@@ThenBody:{  parserSettings=new ThreadLocal<CPS>(){    @Override protected CPS initialValue(){      return createAndConfigureParserSettings();    }  };  unmarshaller=new Unmarshaller<>(lazyLoad,asMap);} @AT@ 4345 @LENGTH@ 250


INS FieldDeclaration@@static, final, SimpleAttributeDefinition, [HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build()] @TO@ TypeDeclaration@@[public]AsyncHandlerResourceDefinition, AbstractHandlerDefinition @AT@ 4774 @LENGTH@ 345
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, SimpleAttributeDefinition, [HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build()] @AT@ 4774 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, SimpleAttributeDefinition, [HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build()] @AT@ 4781 @LENGTH@ 5
---INS SimpleType@@SimpleAttributeDefinition @TO@ FieldDeclaration@@static, final, SimpleAttributeDefinition, [HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build()] @AT@ 4787 @LENGTH@ 25
---INS VariableDeclarationFragment@@HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @TO@ FieldDeclaration@@static, final, SimpleAttributeDefinition, [HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build()] @AT@ 4813 @LENGTH@ 305
------INS SimpleName@@HANDLER @TO@ VariableDeclarationFragment@@HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 4813 @LENGTH@ 7
------INS MethodInvocation@@SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @TO@ VariableDeclarationFragment@@HANDLER=SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 4823 @LENGTH@ 295
---------MOV MethodInvocation@@MethodName:setCapabilityReference:[Capabilities.HANDLER_REFERENCE_RECORDER] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 4784 @LENGTH@ 214
---------INS MethodInvocation@@MethodName:setAttributeMarshaller:[ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 4823 @LENGTH@ 197
------------INS QualifiedName@@ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER @TO@ MethodInvocation@@MethodName:setAttributeMarshaller:[ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER] @AT@ 4967 @LENGTH@ 52
---------------INS SimpleName@@ElementAttributeMarshaller @TO@ QualifiedName@@ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER @AT@ 4967 @LENGTH@ 26
---------------INS SimpleName@@NAME_ATTRIBUTE_MARSHALLER @TO@ QualifiedName@@ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER @AT@ 4994 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:setAllowExpression:[false] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 4823 @LENGTH@ 107
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:setAllowExpression:[false] @AT@ 4924 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:create:["handler", ModelType.STRING] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 4823 @LENGTH@ 68
------------INS StringLiteral@@"handler" @TO@ MethodInvocation@@MethodName:create:["handler", ModelType.STRING] @AT@ 4863 @LENGTH@ 9
------------INS QualifiedName@@ModelType.STRING @TO@ MethodInvocation@@MethodName:create:["handler", ModelType.STRING] @AT@ 4874 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 4874 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 4884 @LENGTH@ 6
---------INS SimpleName@@Name:SimpleAttributeDefinitionBuilder @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 4823 @LENGTH@ 32
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create("handler",ModelType.STRING).setAllowExpression(false).setAttributeMarshaller(ElementAttributeMarshaller.NAME_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_REFERENCE_RECORDER).build() @AT@ 5111 @LENGTH@ 7


MOV FieldDeclaration@@private, volatile, Expression, [expr] @TO@ TypeDeclaration@@[public]MockExpressionClause, [Expression, Predicate] @AT@ 13373 @LENGTH@ 33


UPD TypeDeclaration@@[public]JwtDecoderFactory,  @TO@ [@FunctionalInterface, public]JwtDecoderFactory,  @AT@ 1021 @LENGTH@ 264
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]JwtDecoderFactory,  @AT@ 1021 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:this.issuerConverter.convert(exchange).flatMap(issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(new InvalidBearerTokenException("Invalid issuer " + issuer)))) @TO@ MethodInvocation:this.issuerConverter.convert(exchange).flatMap(issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(() -> new InvalidBearerTokenException("Invalid issuer " + issuer)))) @AT@ 5623 @LENGTH@ 232
---UPD MethodInvocation@@this.issuerConverter.convert(exchange).flatMap(issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(new InvalidBearerTokenException("Invalid issuer " + issuer)))) @TO@ this.issuerConverter.convert(exchange).flatMap(issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(() -> new InvalidBearerTokenException("Invalid issuer " + issuer)))) @AT@ 5630 @LENGTH@ 224
------UPD SimpleName@@MethodName:flatMap:[issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(new InvalidBearerTokenException("Invalid issuer " + issuer)))] @TO@ MethodName:flatMap:[issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(() -> new InvalidBearerTokenException("Invalid issuer " + issuer)))] @AT@ 5674 @LENGTH@ 180
---------UPD LambdaExpression@@issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(new InvalidBearerTokenException("Invalid issuer " + issuer))) @TO@ issuer -> this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(() -> new InvalidBearerTokenException("Invalid issuer " + issuer))) @AT@ 5682 @LENGTH@ 166
------------UPD MethodInvocation@@this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(new InvalidBearerTokenException("Invalid issuer " + issuer))) @TO@ this.issuerAuthenticationManagerResolver.resolve(issuer).switchIfEmpty(Mono.error(() -> new InvalidBearerTokenException("Invalid issuer " + issuer))) @AT@ 5697 @LENGTH@ 151
---------------UPD SimpleName@@MethodName:switchIfEmpty:[Mono.error(new InvalidBearerTokenException("Invalid issuer " + issuer))] @TO@ MethodName:switchIfEmpty:[Mono.error(() -> new InvalidBearerTokenException("Invalid issuer " + issuer))] @AT@ 5754 @LENGTH@ 94
------------------UPD MethodInvocation@@Mono.error(new InvalidBearerTokenException("Invalid issuer " + issuer)) @TO@ Mono.error(() -> new InvalidBearerTokenException("Invalid issuer " + issuer)) @AT@ 5776 @LENGTH@ 71
---------------------UPD SimpleName@@MethodName:error:[new InvalidBearerTokenException("Invalid issuer " + issuer)] @TO@ MethodName:error:[() -> new InvalidBearerTokenException("Invalid issuer " + issuer)] @AT@ 5781 @LENGTH@ 66
------------------------INS LambdaExpression@@() -> new InvalidBearerTokenException("Invalid issuer " + issuer) @TO@ SimpleName@@MethodName:error:[new InvalidBearerTokenException("Invalid issuer " + issuer)] @AT@ 5787 @LENGTH@ 65
---------------------------MOV ClassInstanceCreation@@InvalidBearerTokenException["Invalid issuer " + issuer] @TO@ LambdaExpression@@() -> new InvalidBearerTokenException("Invalid issuer " + issuer) @AT@ 5787 @LENGTH@ 59


INS MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 19302 @LENGTH@ 485
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19302 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19309 @LENGTH@ 4
---INS SimpleName@@MethodName:usingPipesWithNamedParameter @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19314 @LENGTH@ 28
---INS VariableDeclarationStatement@@String queryString="SELECT u FROM User u WHERE u.lastname LIKE '%'||:name||'%'"; @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19350 @LENGTH@ 82
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String queryString="SELECT u FROM User u WHERE u.lastname LIKE '%'||:name||'%'"; @AT@ 19350 @LENGTH@ 6
------INS VariableDeclarationFragment@@queryString="SELECT u FROM User u WHERE u.lastname LIKE '%'||:name||'%'" @TO@ VariableDeclarationStatement@@String queryString="SELECT u FROM User u WHERE u.lastname LIKE '%'||:name||'%'"; @AT@ 19357 @LENGTH@ 74
---------INS SimpleName@@queryString @TO@ VariableDeclarationFragment@@queryString="SELECT u FROM User u WHERE u.lastname LIKE '%'||:name||'%'" @AT@ 19357 @LENGTH@ 11
---------INS StringLiteral@@"SELECT u FROM User u WHERE u.lastname LIKE '%'||:name||'%'" @TO@ VariableDeclarationFragment@@queryString="SELECT u FROM User u WHERE u.lastname LIKE '%'||:name||'%'" @AT@ 19371 @LENGTH@ 60
---INS VariableDeclarationStatement@@StringQuery query=new StringQuery(queryString); @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19435 @LENGTH@ 49
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery(queryString); @AT@ 19435 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new StringQuery(queryString) @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery(queryString); @AT@ 19447 @LENGTH@ 36
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new StringQuery(queryString) @AT@ 19447 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringQuery[queryString] @TO@ VariableDeclarationFragment@@query=new StringQuery(queryString) @AT@ 19455 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@StringQuery[queryString] @AT@ 19455 @LENGTH@ 3
------------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery[queryString] @AT@ 19459 @LENGTH@ 11
------------INS SimpleName@@queryString @TO@ ClassInstanceCreation@@StringQuery[queryString] @AT@ 19471 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.getQueryString()).isEqualTo(queryString) @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19488 @LENGTH@ 65
------INS MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 19488 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:assertThat:[query.getQueryString()] @TO@ MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 19488 @LENGTH@ 41
------------INS MethodInvocation@@query.getQueryString() @TO@ MethodInvocation@@MethodName:assertThat:[query.getQueryString()] @AT@ 19506 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryString() @AT@ 19506 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQueryString:[] @TO@ MethodInvocation@@query.getQueryString() @AT@ 19512 @LENGTH@ 16
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 19488 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[queryString] @TO@ MethodInvocation@@softly.assertThat(query.getQueryString()).isEqualTo(queryString) @AT@ 19530 @LENGTH@ 22
------------INS SimpleName@@queryString @TO@ SimpleName@@MethodName:isEqualTo:[queryString] @AT@ 19540 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.hasParameterBindings()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19556 @LENGTH@ 57
------INS MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 19556 @LENGTH@ 56
---------INS MethodInvocation@@MethodName:assertThat:[query.hasParameterBindings()] @TO@ MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 19556 @LENGTH@ 47
------------INS MethodInvocation@@query.hasParameterBindings() @TO@ MethodInvocation@@MethodName:assertThat:[query.hasParameterBindings()] @AT@ 19574 @LENGTH@ 28
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.hasParameterBindings() @AT@ 19574 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasParameterBindings:[] @TO@ MethodInvocation@@query.hasParameterBindings() @AT@ 19580 @LENGTH@ 22
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 19556 @LENGTH@ 6
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@softly.assertThat(query.hasParameterBindings()).isTrue() @AT@ 19604 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings()).hasSize(1) @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19616 @LENGTH@ 59
------INS MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 19616 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:assertThat:[query.getParameterBindings()] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 19616 @LENGTH@ 47
------------INS MethodInvocation@@query.getParameterBindings() @TO@ MethodInvocation@@MethodName:assertThat:[query.getParameterBindings()] @AT@ 19634 @LENGTH@ 28
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 19634 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getParameterBindings:[] @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 19640 @LENGTH@ 22
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 19616 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings()).hasSize(1) @AT@ 19664 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 19672 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("name") @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19678 @LENGTH@ 83
------INS MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("name") @TO@ ExpressionStatement@@MethodInvocation:softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("name") @AT@ 19678 @LENGTH@ 82
---------INS MethodInvocation@@MethodName:assertThat:[query.getParameterBindings().get(0).getName()] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("name") @AT@ 19678 @LENGTH@ 64
------------INS MethodInvocation@@query.getParameterBindings().get(0).getName() @TO@ MethodInvocation@@MethodName:assertThat:[query.getParameterBindings().get(0).getName()] @AT@ 19696 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 19696 @LENGTH@ 35
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 19729 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getParameterBindings:[] @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 19696 @LENGTH@ 28
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 19696 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@query.getParameterBindings().get(0).getName() @AT@ 19732 @LENGTH@ 9
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("name") @AT@ 19678 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:["name"] @TO@ MethodInvocation@@softly.assertThat(query.getParameterBindings().get(0).getName()).isEqualTo("name") @AT@ 19743 @LENGTH@ 17
------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:isEqualTo:["name"] @AT@ 19753 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:softly.assertAll() @TO@ MethodDeclaration@@public, void, MethodName:usingPipesWithNamedParameter,  @AT@ 19765 @LENGTH@ 19
------INS MethodInvocation@@softly.assertAll() @TO@ ExpressionStatement@@MethodInvocation:softly.assertAll() @AT@ 19765 @LENGTH@ 18
---------INS SimpleName@@Name:softly @TO@ MethodInvocation@@softly.assertAll() @AT@ 19765 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertAll:[] @TO@ MethodInvocation@@softly.assertAll() @AT@ 19772 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:generateMetaInfConfigurer, String fqn,  @TO@ private, void, MethodName:generateMetaInfConfigurer, String fqn,  @AT@ 5538 @LENGTH@ 507
---UPD Modifier@@protected @TO@ private @AT@ 5538 @LENGTH@ 9
---UPD TryStatement@@try (Writer w=new StringWriter()){  w.append("# " + GENERATED_MSG + "\n");  w.append("class=").append(fqn + "Configurer").append("\n");  updateResource(resourcesOutputDir.toPath(),"META-INF/services/org/apache/camel/configurer/" + name,w.toString());} catch (IOException e) {  throw new RuntimeException(e);} @TO@ try (Writer w=new StringWriter()){  w.append("# " + GENERATED_MSG + "\n");  w.append("class=").append(fqn).append("Configurer").append("\n");  updateResource(resourcesOutputDir.toPath(),"META-INF/services/org/apache/camel/configurer/" + name,w.toString());} catch (IOException e) {  throw new RuntimeException(e);} @AT@ 5664 @LENGTH@ 375
------UPD ExpressionStatement@@MethodInvocation:w.append("class=").append(fqn + "Configurer").append("\n") @TO@ MethodInvocation:w.append("class=").append(fqn).append("Configurer").append("\n") @AT@ 5765 @LENGTH@ 59
---------UPD MethodInvocation@@w.append("class=").append(fqn + "Configurer").append("\n") @TO@ w.append("class=").append(fqn).append("Configurer").append("\n") @AT@ 5765 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:append:["Configurer"] @TO@ MethodInvocation@@w.append("class=").append(fqn + "Configurer").append("\n") @AT@ 5746 @LENGTH@ 51
---------------INS StringLiteral@@"Configurer" @TO@ MethodInvocation@@MethodName:append:["Configurer"] @AT@ 5784 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:append:[fqn] @TO@ MethodInvocation@@w.append("class=").append(fqn + "Configurer").append("\n") @AT@ 5746 @LENGTH@ 30
---------------INS SimpleName@@fqn @TO@ MethodInvocation@@MethodName:append:[fqn] @AT@ 5772 @LENGTH@ 3
------------DEL MethodInvocation@@MethodName:append:[fqn + "Configurer"] @AT@ 5765 @LENGTH@ 45
---------------DEL InfixExpression@@fqn + "Configurer" @AT@ 5791 @LENGTH@ 18
------------------DEL SimpleName@@fqn @AT@ 5791 @LENGTH@ 3
------------------DEL Operator@@+ @AT@ 5794 @LENGTH@ 1
------------------DEL StringLiteral@@"Configurer" @AT@ 5797 @LENGTH@ 12


UPD VariableDeclarationStatement@@OAuth2AuthorizationCodeAuthenticationToken authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()); @TO@ OAuth2AuthorizationCodeAuthenticationToken authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken(),accessTokenResponse.getAdditionalParameters()); @AT@ 3449 @LENGTH@ 327
---UPD VariableDeclarationFragment@@authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken()) @TO@ authenticationResult=new OAuth2AuthorizationCodeAuthenticationToken(authorizationCodeAuthentication.getClientRegistration(),authorizationCodeAuthentication.getAuthorizationExchange(),accessTokenResponse.getAccessToken(),accessTokenResponse.getRefreshToken(),accessTokenResponse.getAdditionalParameters()) @AT@ 3492 @LENGTH@ 283
------UPD ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), accessTokenResponse.getAccessToken(), accessTokenResponse.getRefreshToken()] @TO@ OAuth2AuthorizationCodeAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), accessTokenResponse.getAccessToken(), accessTokenResponse.getRefreshToken(), accessTokenResponse.getAdditionalParameters()] @AT@ 3518 @LENGTH@ 257
---------INS MethodInvocation@@accessTokenResponse.getAdditionalParameters() @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[authorizationCodeAuthentication.getClientRegistration(), authorizationCodeAuthentication.getAuthorizationExchange(), accessTokenResponse.getAccessToken(), accessTokenResponse.getRefreshToken()] @AT@ 3780 @LENGTH@ 45
------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 3780 @LENGTH@ 19
------------INS SimpleName@@MethodName:getAdditionalParameters:[] @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 3800 @LENGTH@ 25


UPD SuperConstructorInvocation@@super(association);
 @TO@ super(key,association);
 @AT@ 11171 @LENGTH@ 19
---INS SimpleName@@key @TO@ SuperConstructorInvocation@@super(association);
 @AT@ 11170 @LENGTH@ 3


UPD MethodDeclaration@@private, JwkDefinitionHolder, MethodName:getDefinition, String keyId,  @TO@ private, JwkDefinitionHolder, MethodName:getDefinition, String keyId, String x5t,  @AT@ 4029 @LENGTH@ 101
---UPD ReturnStatement@@MethodInvocation:this.jwkDefinitions.get(keyId) @TO@ SimpleName:result @AT@ 4089 @LENGTH@ 38
------INS SimpleName@@result @TO@ ReturnStatement@@MethodInvocation:this.jwkDefinitions.get(keyId) @AT@ 4929 @LENGTH@ 6
---INS SingleVariableDeclaration@@String x5t @TO@ MethodDeclaration@@private, JwkDefinitionHolder, MethodName:getDefinition, String keyId,  @AT@ 4509 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String x5t @AT@ 4509 @LENGTH@ 6
------INS SimpleName@@x5t @TO@ SingleVariableDeclaration@@String x5t @AT@ 4516 @LENGTH@ 3
---INS VariableDeclarationStatement@@JwkDefinitionHolder result=null; @TO@ MethodDeclaration@@private, JwkDefinitionHolder, MethodName:getDefinition, String keyId,  @AT@ 4525 @LENGTH@ 34
------INS SimpleType@@JwkDefinitionHolder @TO@ VariableDeclarationStatement@@JwkDefinitionHolder result=null; @AT@ 4525 @LENGTH@ 19
------INS VariableDeclarationFragment@@result=null @TO@ VariableDeclarationStatement@@JwkDefinitionHolder result=null; @AT@ 4545 @LENGTH@ 13
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=null @AT@ 4545 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@result=null @AT@ 4554 @LENGTH@ 4
---INS IfStatement@@if (keyId != null) {  result=this.jwkDefinitions.get(keyId);} else if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @TO@ MethodDeclaration@@private, JwkDefinitionHolder, MethodName:getDefinition, String keyId,  @AT@ 4562 @LENGTH@ 357
------INS InfixExpression@@keyId != null @TO@ IfStatement@@if (keyId != null) {  result=this.jwkDefinitions.get(keyId);} else if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4566 @LENGTH@ 13
---------INS SimpleName@@keyId @TO@ InfixExpression@@keyId != null @AT@ 4566 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@keyId != null @AT@ 4571 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@keyId != null @AT@ 4575 @LENGTH@ 4
------INS Block@@ThenBody:{  result=this.jwkDefinitions.get(keyId);} @TO@ IfStatement@@if (keyId != null) {  result=this.jwkDefinitions.get(keyId);} else if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4581 @LENGTH@ 49
---------INS ExpressionStatement@@Assignment:result=this.jwkDefinitions.get(keyId) @TO@ Block@@ThenBody:{  result=this.jwkDefinitions.get(keyId);} @AT@ 4586 @LENGTH@ 40
------------INS Assignment@@result=this.jwkDefinitions.get(keyId) @TO@ ExpressionStatement@@Assignment:result=this.jwkDefinitions.get(keyId) @AT@ 4586 @LENGTH@ 39
---------------MOV MethodInvocation@@this.jwkDefinitions.get(keyId) @TO@ Assignment@@result=this.jwkDefinitions.get(keyId) @AT@ 4096 @LENGTH@ 30
---------------INS SimpleName@@result @TO@ Assignment@@result=this.jwkDefinitions.get(keyId) @AT@ 4586 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@result=this.jwkDefinitions.get(keyId) @AT@ 4592 @LENGTH@ 1
------INS Block@@ElseBody:if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @TO@ IfStatement@@if (keyId != null) {  result=this.jwkDefinitions.get(keyId);} else if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4636 @LENGTH@ 283
---------INS IfStatement@@if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @TO@ Block@@ElseBody:if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4636 @LENGTH@ 283
------------INS InfixExpression@@x5t != null @TO@ IfStatement@@if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4640 @LENGTH@ 11
---------------INS SimpleName@@x5t @TO@ InfixExpression@@x5t != null @AT@ 4640 @LENGTH@ 3
---------------INS Operator@@!= @TO@ InfixExpression@@x5t != null @AT@ 4643 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@x5t != null @AT@ 4647 @LENGTH@ 4
------------INS Block@@ThenBody:{  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @TO@ IfStatement@@if (x5t != null) {  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4653 @LENGTH@ 266
---------------INS VariableDeclarationStatement@@Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator(); @TO@ Block@@ThenBody:{  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4658 @LENGTH@ 77
------------------INS ParameterizedType@@Iterator<JwkDefinitionHolder> @TO@ VariableDeclarationStatement@@Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator(); @AT@ 4658 @LENGTH@ 29
---------------------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<JwkDefinitionHolder> @AT@ 4658 @LENGTH@ 8
---------------------INS SimpleType@@JwkDefinitionHolder @TO@ ParameterizedType@@Iterator<JwkDefinitionHolder> @AT@ 4667 @LENGTH@ 19
------------------INS VariableDeclarationFragment@@iter=this.jwkDefinitions.values().iterator() @TO@ VariableDeclarationStatement@@Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator(); @AT@ 4688 @LENGTH@ 46
---------------------INS SimpleName@@iter @TO@ VariableDeclarationFragment@@iter=this.jwkDefinitions.values().iterator() @AT@ 4688 @LENGTH@ 4
---------------------INS MethodInvocation@@this.jwkDefinitions.values().iterator() @TO@ VariableDeclarationFragment@@iter=this.jwkDefinitions.values().iterator() @AT@ 4695 @LENGTH@ 39
------------------------INS MethodInvocation@@MethodName:values:[] @TO@ MethodInvocation@@this.jwkDefinitions.values().iterator() @AT@ 4695 @LENGTH@ 28
------------------------INS FieldAccess@@this.jwkDefinitions @TO@ MethodInvocation@@this.jwkDefinitions.values().iterator() @AT@ 4695 @LENGTH@ 19
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwkDefinitions @AT@ 4695 @LENGTH@ 4
---------------------------INS SimpleName@@jwkDefinitions @TO@ FieldAccess@@this.jwkDefinitions @AT@ 4700 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@this.jwkDefinitions.values().iterator() @AT@ 4724 @LENGTH@ 10
---------------INS WhileStatement@@while (result == null && iter.hasNext()) {  JwkDefinitionHolder entry=iter.next();  if (x5t.equals(entry.getJwkDefinition().getX5t())) {    result=entry;  }} @TO@ Block@@ThenBody:{  Iterator<JwkDefinitionHolder> iter=this.jwkDefinitions.values().iterator();  while (result == null && iter.hasNext()) {    JwkDefinitionHolder entry=iter.next();    if (x5t.equals(entry.getJwkDefinition().getX5t())) {      result=entry;    }  }} @AT@ 4739 @LENGTH@ 176
------------------INS InfixExpression@@result == null && iter.hasNext() @TO@ WhileStatement@@while (result == null && iter.hasNext()) {  JwkDefinitionHolder entry=iter.next();  if (x5t.equals(entry.getJwkDefinition().getX5t())) {    result=entry;  }} @AT@ 4746 @LENGTH@ 32
---------------------INS InfixExpression@@result == null @TO@ InfixExpression@@result == null && iter.hasNext() @AT@ 4746 @LENGTH@ 14
------------------------INS SimpleName@@result @TO@ InfixExpression@@result == null @AT@ 4746 @LENGTH@ 6
------------------------INS Operator@@== @TO@ InfixExpression@@result == null @AT@ 4752 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@result == null @AT@ 4756 @LENGTH@ 4
---------------------INS Operator@@&& @TO@ InfixExpression@@result == null && iter.hasNext() @AT@ 4760 @LENGTH@ 2
---------------------INS MethodInvocation@@iter.hasNext() @TO@ InfixExpression@@result == null && iter.hasNext() @AT@ 4764 @LENGTH@ 14
------------------------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.hasNext() @AT@ 4764 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iter.hasNext() @AT@ 4769 @LENGTH@ 9
------------------INS Block@@WhileBody:{  JwkDefinitionHolder entry=iter.next();  if (x5t.equals(entry.getJwkDefinition().getX5t())) {    result=entry;  }} @TO@ WhileStatement@@while (result == null && iter.hasNext()) {  JwkDefinitionHolder entry=iter.next();  if (x5t.equals(entry.getJwkDefinition().getX5t())) {    result=entry;  }} @AT@ 4780 @LENGTH@ 135
---------------------INS VariableDeclarationStatement@@JwkDefinitionHolder entry=iter.next(); @TO@ Block@@WhileBody:{  JwkDefinitionHolder entry=iter.next();  if (x5t.equals(entry.getJwkDefinition().getX5t())) {    result=entry;  }} @AT@ 4786 @LENGTH@ 40
------------------------INS SimpleType@@JwkDefinitionHolder @TO@ VariableDeclarationStatement@@JwkDefinitionHolder entry=iter.next(); @AT@ 4786 @LENGTH@ 19
------------------------INS VariableDeclarationFragment@@entry=iter.next() @TO@ VariableDeclarationStatement@@JwkDefinitionHolder entry=iter.next(); @AT@ 4806 @LENGTH@ 19
---------------------------INS SimpleName@@entry @TO@ VariableDeclarationFragment@@entry=iter.next() @AT@ 4806 @LENGTH@ 5
---------------------------INS MethodInvocation@@iter.next() @TO@ VariableDeclarationFragment@@entry=iter.next() @AT@ 4814 @LENGTH@ 11
------------------------------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.next() @AT@ 4814 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iter.next() @AT@ 4819 @LENGTH@ 6
---------------------INS IfStatement@@if (x5t.equals(entry.getJwkDefinition().getX5t())) {  result=entry;} @TO@ Block@@WhileBody:{  JwkDefinitionHolder entry=iter.next();  if (x5t.equals(entry.getJwkDefinition().getX5t())) {    result=entry;  }} @AT@ 4831 @LENGTH@ 79
------------------------INS MethodInvocation@@x5t.equals(entry.getJwkDefinition().getX5t()) @TO@ IfStatement@@if (x5t.equals(entry.getJwkDefinition().getX5t())) {  result=entry;} @AT@ 4835 @LENGTH@ 45
---------------------------INS SimpleName@@Name:x5t @TO@ MethodInvocation@@x5t.equals(entry.getJwkDefinition().getX5t()) @AT@ 4835 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:equals:[entry.getJwkDefinition().getX5t()] @TO@ MethodInvocation@@x5t.equals(entry.getJwkDefinition().getX5t()) @AT@ 4839 @LENGTH@ 41
------------------------------INS MethodInvocation@@entry.getJwkDefinition().getX5t() @TO@ SimpleName@@MethodName:equals:[entry.getJwkDefinition().getX5t()] @AT@ 4846 @LENGTH@ 33
---------------------------------INS MethodInvocation@@MethodName:getJwkDefinition:[] @TO@ MethodInvocation@@entry.getJwkDefinition().getX5t() @AT@ 4846 @LENGTH@ 24
---------------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getJwkDefinition().getX5t() @AT@ 4846 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getX5t:[] @TO@ MethodInvocation@@entry.getJwkDefinition().getX5t() @AT@ 4871 @LENGTH@ 8
------------------------INS Block@@ThenBody:{  result=entry;} @TO@ IfStatement@@if (x5t.equals(entry.getJwkDefinition().getX5t())) {  result=entry;} @AT@ 4882 @LENGTH@ 28
---------------------------INS ExpressionStatement@@Assignment:result=entry @TO@ Block@@ThenBody:{  result=entry;} @AT@ 4889 @LENGTH@ 15
------------------------------INS Assignment@@result=entry @TO@ ExpressionStatement@@Assignment:result=entry @AT@ 4889 @LENGTH@ 14
---------------------------------INS SimpleName@@result @TO@ Assignment@@result=entry @AT@ 4889 @LENGTH@ 6
---------------------------------INS Operator@@= @TO@ Assignment@@result=entry @AT@ 4895 @LENGTH@ 1
---------------------------------INS SimpleName@@entry @TO@ Assignment@@result=entry @AT@ 4898 @LENGTH@ 5


UPD MethodDeclaration@@default, TerminatingFind<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, TerminatingFind<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 5300 @LENGTH@ 133
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 5336 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5355 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 5380 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 5387 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 5387 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 5396 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 5402 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5408 @LENGTH@ 18


UPD MethodDeclaration@@public, OAuth2ResourceServerSpec, MethodName:authenticationManagerResolver, ReactiveAuthenticationManagerResolver<ServerHttpRequest> authenticationManagerResolver,  @TO@ public, OAuth2ResourceServerSpec, MethodName:authenticationManagerResolver, ReactiveAuthenticationManagerResolver<ServerWebExchange> authenticationManagerResolver,  @AT@ 67308 @LENGTH@ 345
---UPD SingleVariableDeclaration@@ReactiveAuthenticationManagerResolver<ServerHttpRequest> authenticationManagerResolver @TO@ ReactiveAuthenticationManagerResolver<ServerWebExchange> authenticationManagerResolver @AT@ 67375 @LENGTH@ 86
------UPD ParameterizedType@@ReactiveAuthenticationManagerResolver<ServerHttpRequest> @TO@ ReactiveAuthenticationManagerResolver<ServerWebExchange> @AT@ 67375 @LENGTH@ 56
---------UPD SimpleType@@ServerHttpRequest @TO@ ServerWebExchange @AT@ 67413 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:LOG.trace(" Exchange {} : Ack deadline : {}",exchange.getExchangeId(),deadline) @TO@ MethodInvocation:log.trace(" Exchange {} : Ack deadline : {}",exchange.getExchangeId(),deadline) @AT@ 2148 @LENGTH@ 82
---UPD MethodInvocation@@LOG.trace(" Exchange {} : Ack deadline : {}",exchange.getExchangeId(),deadline) @TO@ log.trace(" Exchange {} : Ack deadline : {}",exchange.getExchangeId(),deadline) @AT@ 2148 @LENGTH@ 81
------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 2148 @LENGTH@ 3


UPD MethodDeclaration@@void, MethodName:findAllWithProjectionByCriteria,  @TO@ void, MethodName:distinctAppliesFilterQuery,  @AT@ 5497 @LENGTH@ 250
---UPD SimpleName@@MethodName:findAllWithProjectionByCriteria @TO@ MethodName:distinctAppliesFilterQuery @AT@ 5497 @LENGTH@ 31
---UPD ExpressionStatement@@MethodInvocation:template.query(Person.class).as(Jedi.class).matching(where("firstname").is("luke")).all().as(StepVerifier::create).consumeNextWith(it -> assertThat(it).isInstanceOf(Jedi.class)).verifyComplete() @TO@ MethodInvocation:template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all().as(StepVerifier::create).consumeNextWith(it -> assertThat(it).isEqualTo("luke")).verifyComplete() @AT@ 5536 @LENGTH@ 208
------UPD MethodInvocation@@template.query(Person.class).as(Jedi.class).matching(where("firstname").is("luke")).all().as(StepVerifier::create).consumeNextWith(it -> assertThat(it).isInstanceOf(Jedi.class)).verifyComplete() @TO@ template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all().as(StepVerifier::create).consumeNextWith(it -> assertThat(it).isEqualTo("luke")).verifyComplete() @AT@ 5536 @LENGTH@ 207
---------UPD MethodInvocation@@MethodName:consumeNextWith:[it -> assertThat(it).isInstanceOf(Jedi.class)] @TO@ MethodName:consumeNextWith:[it -> assertThat(it).isEqualTo("luke")] @AT@ 5536 @LENGTH@ 182
------------UPD LambdaExpression@@it -> assertThat(it).isInstanceOf(Jedi.class) @TO@ it -> assertThat(it).isEqualTo("luke") @AT@ 5672 @LENGTH@ 45
---------------UPD MethodInvocation@@assertThat(it).isInstanceOf(Jedi.class) @TO@ assertThat(it).isEqualTo("luke") @AT@ 5678 @LENGTH@ 39
------------------UPD SimpleName@@MethodName:isInstanceOf:[Jedi.class] @TO@ MethodName:isEqualTo:["luke"] @AT@ 5693 @LENGTH@ 24
---------------------DEL TypeLiteral@@Jedi.class @AT@ 5706 @LENGTH@ 10
---------------------INS StringLiteral@@"luke" @TO@ SimpleName@@MethodName:isInstanceOf:[Jedi.class] @AT@ 20161 @LENGTH@ 6
---------UPD MethodInvocation@@MethodName:matching:[where("firstname").is("luke")] @TO@ MethodName:matching:[where("lastname").is(luke.lastname)] @AT@ 5536 @LENGTH@ 83
------------UPD MethodInvocation@@where("firstname").is("luke") @TO@ where("lastname").is(luke.lastname) @AT@ 5589 @LENGTH@ 29
---------------UPD MethodInvocation@@MethodName:where:["firstname"] @TO@ MethodName:where:["lastname"] @AT@ 5589 @LENGTH@ 18
------------------UPD StringLiteral@@"firstname" @TO@ "lastname" @AT@ 5595 @LENGTH@ 11
---------------UPD SimpleName@@MethodName:is:["luke"] @TO@ MethodName:is:[luke.lastname] @AT@ 5608 @LENGTH@ 10
------------------DEL StringLiteral@@"luke" @AT@ 5611 @LENGTH@ 6
------------------INS QualifiedName@@luke.lastname @TO@ SimpleName@@MethodName:is:["luke"] @AT@ 20026 @LENGTH@ 13
---------------------INS SimpleName@@luke @TO@ QualifiedName@@luke.lastname @AT@ 20026 @LENGTH@ 4
---------------------INS SimpleName@@lastname @TO@ QualifiedName@@luke.lastname @AT@ 20031 @LENGTH@ 8
---------UPD MethodInvocation@@MethodName:as:[Jedi.class] @TO@ MethodName:distinct:["firstname"] @AT@ 5536 @LENGTH@ 43
------------DEL TypeLiteral@@Jedi.class @AT@ 5568 @LENGTH@ 10
------------INS StringLiteral@@"firstname" @TO@ MethodInvocation@@MethodName:as:[Jedi.class] @AT@ 19975 @LENGTH@ 11
---------INS MethodInvocation@@MethodName:as:[String.class] @TO@ MethodInvocation@@template.query(Person.class).as(Jedi.class).matching(where("firstname").is("luke")).all().as(StepVerifier::create).consumeNextWith(it -> assertThat(it).isInstanceOf(Jedi.class)).verifyComplete() @AT@ 19913 @LENGTH@ 153
------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:as:[String.class] @AT@ 20053 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:inCollection:[STAR_WARS] @TO@ MethodInvocation@@template.query(Person.class).as(Jedi.class).matching(where("firstname").is("luke")).all().as(StepVerifier::create).consumeNextWith(it -> assertThat(it).isInstanceOf(Jedi.class)).verifyComplete() @AT@ 19913 @LENGTH@ 52
------------INS SimpleName@@STAR_WARS @TO@ MethodInvocation@@MethodName:inCollection:[STAR_WARS] @AT@ 19955 @LENGTH@ 9


INS MethodDeclaration@@public, AuthenticationManagerBuilder, MethodName:authenticationEventPublisher, AuthenticationEventPublisher eventPublisher,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 15679 @LENGTH@ 251
---MOV ExpressionStatement@@MethodInvocation:authenticationBuilder.authenticationEventPublisher(eventPublisher) @TO@ MethodDeclaration@@public, AuthenticationManagerBuilder, MethodName:authenticationEventPublisher, AuthenticationEventPublisher eventPublisher,  @AT@ 9422 @LENGTH@ 67
---INS Modifier@@public @TO@ MethodDeclaration@@public, AuthenticationManagerBuilder, MethodName:authenticationEventPublisher, AuthenticationEventPublisher eventPublisher,  @AT@ 15679 @LENGTH@ 6
---INS SimpleType@@AuthenticationManagerBuilder @TO@ MethodDeclaration@@public, AuthenticationManagerBuilder, MethodName:authenticationEventPublisher, AuthenticationEventPublisher eventPublisher,  @AT@ 15686 @LENGTH@ 28
---INS SimpleName@@MethodName:authenticationEventPublisher @TO@ MethodDeclaration@@public, AuthenticationManagerBuilder, MethodName:authenticationEventPublisher, AuthenticationEventPublisher eventPublisher,  @AT@ 15715 @LENGTH@ 28
---INS SingleVariableDeclaration@@AuthenticationEventPublisher eventPublisher @TO@ MethodDeclaration@@public, AuthenticationManagerBuilder, MethodName:authenticationEventPublisher, AuthenticationEventPublisher eventPublisher,  @AT@ 15744 @LENGTH@ 43
------INS SimpleType@@AuthenticationEventPublisher @TO@ SingleVariableDeclaration@@AuthenticationEventPublisher eventPublisher @AT@ 15744 @LENGTH@ 28
------INS SimpleName@@eventPublisher @TO@ SingleVariableDeclaration@@AuthenticationEventPublisher eventPublisher @AT@ 15773 @LENGTH@ 14
---INS ReturnStatement@@SuperMethodInvocation:super.authenticationEventPublisher(eventPublisher) @TO@ MethodDeclaration@@public, AuthenticationManagerBuilder, MethodName:authenticationEventPublisher, AuthenticationEventPublisher eventPublisher,  @AT@ 15867 @LENGTH@ 58
------INS SuperMethodInvocation@@super.authenticationEventPublisher(eventPublisher) @TO@ ReturnStatement@@SuperMethodInvocation:super.authenticationEventPublisher(eventPublisher) @AT@ 15874 @LENGTH@ 50
---------INS SimpleName@@MethodName:authenticationEventPublisher:[eventPublisher] @TO@ SuperMethodInvocation@@super.authenticationEventPublisher(eventPublisher) @AT@ 15880 @LENGTH@ 28
---------INS SimpleName@@eventPublisher @TO@ SuperMethodInvocation@@super.authenticationEventPublisher(eventPublisher) @AT@ 15909 @LENGTH@ 14


UPD TryStatement@@try {  return super.renewToken(token,renewer);}  finally {  super.currentTokens.remove(id);} @TO@ try {  long res=super.renewToken(token,renewer);  this.tokenStore.removeToken(id);  this.tokenStore.addToken(id,super.currentTokens.get(id));  return res;}  finally {  super.currentTokens.remove(id);} @AT@ 6592 @LENGTH@ 120
---INS VariableDeclarationStatement@@long res=super.renewToken(token,renewer); @TO@ TryStatement@@try {  return super.renewToken(token,renewer);}  finally {  super.currentTokens.remove(id);} @AT@ 6606 @LENGTH@ 44
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long res=super.renewToken(token,renewer); @AT@ 6606 @LENGTH@ 4
------INS VariableDeclarationFragment@@res=super.renewToken(token,renewer) @TO@ VariableDeclarationStatement@@long res=super.renewToken(token,renewer); @AT@ 6611 @LENGTH@ 38
---------INS SimpleName@@res @TO@ VariableDeclarationFragment@@res=super.renewToken(token,renewer) @AT@ 6611 @LENGTH@ 3
---------INS SuperMethodInvocation@@super.renewToken(token,renewer) @TO@ VariableDeclarationFragment@@res=super.renewToken(token,renewer) @AT@ 6617 @LENGTH@ 32
------------MOV SimpleName@@MethodName:renewToken:[token, renewer] @TO@ SuperMethodInvocation@@super.renewToken(token,renewer) @AT@ 6619 @LENGTH@ 10
------------MOV SimpleName@@token @TO@ SuperMethodInvocation@@super.renewToken(token,renewer) @AT@ 6630 @LENGTH@ 5
------------MOV SimpleName@@renewer @TO@ SuperMethodInvocation@@super.renewToken(token,renewer) @AT@ 6637 @LENGTH@ 7
---DEL ReturnStatement@@SuperMethodInvocation:super.renewToken(token,renewer) @AT@ 6606 @LENGTH@ 40
------DEL SuperMethodInvocation@@super.renewToken(token,renewer) @AT@ 6613 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:this.tokenStore.removeToken(id) @TO@ TryStatement@@try {  return super.renewToken(token,renewer);}  finally {  super.currentTokens.remove(id);} @AT@ 6659 @LENGTH@ 32
------INS MethodInvocation@@this.tokenStore.removeToken(id) @TO@ ExpressionStatement@@MethodInvocation:this.tokenStore.removeToken(id) @AT@ 6659 @LENGTH@ 31
---------INS FieldAccess@@this.tokenStore @TO@ MethodInvocation@@this.tokenStore.removeToken(id) @AT@ 6659 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenStore @AT@ 6659 @LENGTH@ 4
------------INS SimpleName@@tokenStore @TO@ FieldAccess@@this.tokenStore @AT@ 6664 @LENGTH@ 10
---------INS SimpleName@@MethodName:removeToken:[id] @TO@ MethodInvocation@@this.tokenStore.removeToken(id) @AT@ 6675 @LENGTH@ 15
------------INS SimpleName@@id @TO@ SimpleName@@MethodName:removeToken:[id] @AT@ 6687 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:this.tokenStore.addToken(id,super.currentTokens.get(id)) @TO@ TryStatement@@try {  return super.renewToken(token,renewer);}  finally {  super.currentTokens.remove(id);} @AT@ 6700 @LENGTH@ 58
------INS MethodInvocation@@this.tokenStore.addToken(id,super.currentTokens.get(id)) @TO@ ExpressionStatement@@MethodInvocation:this.tokenStore.addToken(id,super.currentTokens.get(id)) @AT@ 6700 @LENGTH@ 57
---------INS FieldAccess@@this.tokenStore @TO@ MethodInvocation@@this.tokenStore.addToken(id,super.currentTokens.get(id)) @AT@ 6700 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenStore @AT@ 6700 @LENGTH@ 4
------------INS SimpleName@@tokenStore @TO@ FieldAccess@@this.tokenStore @AT@ 6705 @LENGTH@ 10
---------INS SimpleName@@MethodName:addToken:[id, super.currentTokens.get(id)] @TO@ MethodInvocation@@this.tokenStore.addToken(id,super.currentTokens.get(id)) @AT@ 6716 @LENGTH@ 41
------------INS SimpleName@@id @TO@ SimpleName@@MethodName:addToken:[id, super.currentTokens.get(id)] @AT@ 6725 @LENGTH@ 2
------------INS MethodInvocation@@super.currentTokens.get(id) @TO@ SimpleName@@MethodName:addToken:[id, super.currentTokens.get(id)] @AT@ 6729 @LENGTH@ 27
---------------INS SuperFieldAccess@@super.currentTokens @TO@ MethodInvocation@@super.currentTokens.get(id) @AT@ 6729 @LENGTH@ 19
------------------INS SimpleName@@currentTokens @TO@ SuperFieldAccess@@super.currentTokens @AT@ 6735 @LENGTH@ 13
---------------INS SimpleName@@MethodName:get:[id] @TO@ MethodInvocation@@super.currentTokens.get(id) @AT@ 6749 @LENGTH@ 7
------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:get:[id] @AT@ 6753 @LENGTH@ 2
---INS ReturnStatement@@SimpleName:res @TO@ TryStatement@@try {  return super.renewToken(token,renewer);}  finally {  super.currentTokens.remove(id);} @AT@ 6767 @LENGTH@ 11
------INS SimpleName@@res @TO@ ReturnStatement@@SimpleName:res @AT@ 6774 @LENGTH@ 3


UPD Block@@ThenBody:{  expr=getExpressionValue();  if (expr == null) {    expr=getExpressionType().createExpression(context);  }  expr.init(context);} @TO@ ThenBody:{  Expression newExpression=getExpressionValue();  if (newExpression == null) {    newExpression=getExpressionType().createExpression(context);  }  newExpression.init(context);  expr=newExpression;} @AT@ 13563 @LENGTH@ 248
---INS VariableDeclarationStatement@@Expression newExpression=getExpressionValue(); @TO@ Block@@ThenBody:{  expr=getExpressionValue();  if (expr == null) {    expr=getExpressionType().createExpression(context);  }  expr.init(context);} @AT@ 13585 @LENGTH@ 48
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression newExpression=getExpressionValue(); @AT@ 13585 @LENGTH@ 10
------INS VariableDeclarationFragment@@newExpression=getExpressionValue() @TO@ VariableDeclarationStatement@@Expression newExpression=getExpressionValue(); @AT@ 13596 @LENGTH@ 36
---------INS SimpleName@@newExpression @TO@ VariableDeclarationFragment@@newExpression=getExpressionValue() @AT@ 13596 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:getExpressionValue:[] @TO@ VariableDeclarationFragment@@newExpression=getExpressionValue() @AT@ 13612 @LENGTH@ 20
---DEL ExpressionStatement@@Assignment:expr=getExpressionValue() @AT@ 13585 @LENGTH@ 28
------DEL Assignment@@expr=getExpressionValue() @AT@ 13585 @LENGTH@ 27
---------DEL SimpleName@@expr @AT@ 13585 @LENGTH@ 4
---------DEL Operator@@= @AT@ 13589 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:getExpressionValue:[] @AT@ 13592 @LENGTH@ 20
---UPD IfStatement@@if (expr == null) {  expr=getExpressionType().createExpression(context);} @TO@ if (newExpression == null) {  newExpression=getExpressionType().createExpression(context);} @AT@ 13634 @LENGTH@ 119
------UPD InfixExpression@@expr == null @TO@ newExpression == null @AT@ 13638 @LENGTH@ 12
---------UPD SimpleName@@expr @TO@ newExpression @AT@ 13638 @LENGTH@ 4
------UPD Block@@ThenBody:{  expr=getExpressionType().createExpression(context);} @TO@ ThenBody:{  newExpression=getExpressionType().createExpression(context);} @AT@ 13652 @LENGTH@ 101
---------UPD ExpressionStatement@@Assignment:expr=getExpressionType().createExpression(context) @TO@ Assignment:newExpression=getExpressionType().createExpression(context) @AT@ 13678 @LENGTH@ 53
------------UPD Assignment@@expr=getExpressionType().createExpression(context) @TO@ newExpression=getExpressionType().createExpression(context) @AT@ 13678 @LENGTH@ 52
---------------UPD SimpleName@@expr @TO@ newExpression @AT@ 13678 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:expr.init(context) @TO@ MethodInvocation:newExpression.init(context) @AT@ 13774 @LENGTH@ 19
------UPD MethodInvocation@@expr.init(context) @TO@ newExpression.init(context) @AT@ 13774 @LENGTH@ 18
---------UPD SimpleName@@Name:expr @TO@ Name:newExpression @AT@ 13774 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:expr=newExpression @TO@ Block@@ThenBody:{  expr=getExpressionValue();  if (expr == null) {    expr=getExpressionType().createExpression(context);  }  expr.init(context);} @AT@ 13861 @LENGTH@ 21
------INS Assignment@@expr=newExpression @TO@ ExpressionStatement@@Assignment:expr=newExpression @AT@ 13861 @LENGTH@ 20
---------INS SimpleName@@expr @TO@ Assignment@@expr=newExpression @AT@ 13861 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@expr=newExpression @AT@ 13865 @LENGTH@ 1
---------INS SimpleName@@newExpression @TO@ Assignment@@expr=newExpression @AT@ 13868 @LENGTH@ 13


UPD FieldDeclaration@@private, int, [counter=0] @TO@ private, int, [counter] @AT@ 3195 @LENGTH@ 24
---UPD VariableDeclarationFragment@@counter=0 @TO@ counter @AT@ 3207 @LENGTH@ 11
------DEL NumberLiteral@@0 @AT@ 3217 @LENGTH@ 1


UPD FieldDeclaration@@private, List<String>, [comments=new ArrayList<>()] @TO@ private, List<String>, [comments=new ArrayList<>(Arrays.asList(FlatFileItemReader.DEFAULT_COMMENT_PREFIXES))] @AT@ 2973 @LENGTH@ 50
---UPD VariableDeclarationFragment@@comments=new ArrayList<>() @TO@ comments=new ArrayList<>(Arrays.asList(FlatFileItemReader.DEFAULT_COMMENT_PREFIXES)) @AT@ 2994 @LENGTH@ 28
------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<>[Arrays.asList(FlatFileItemReader.DEFAULT_COMMENT_PREFIXES)] @AT@ 3005 @LENGTH@ 17
---------INS MethodInvocation@@Arrays.asList(FlatFileItemReader.DEFAULT_COMMENT_PREFIXES) @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 3024 @LENGTH@ 58
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(FlatFileItemReader.DEFAULT_COMMENT_PREFIXES) @AT@ 3024 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[FlatFileItemReader.DEFAULT_COMMENT_PREFIXES] @TO@ MethodInvocation@@Arrays.asList(FlatFileItemReader.DEFAULT_COMMENT_PREFIXES) @AT@ 3031 @LENGTH@ 51
---------------INS QualifiedName@@FlatFileItemReader.DEFAULT_COMMENT_PREFIXES @TO@ SimpleName@@MethodName:asList:[FlatFileItemReader.DEFAULT_COMMENT_PREFIXES] @AT@ 3038 @LENGTH@ 43
------------------INS SimpleName@@FlatFileItemReader @TO@ QualifiedName@@FlatFileItemReader.DEFAULT_COMMENT_PREFIXES @AT@ 3038 @LENGTH@ 18
------------------INS SimpleName@@DEFAULT_COMMENT_PREFIXES @TO@ QualifiedName@@FlatFileItemReader.DEFAULT_COMMENT_PREFIXES @AT@ 3057 @LENGTH@ 24


UPD TypeDeclaration@@[public]OAuth2AccessTokenResponseClient,  @TO@ [@FunctionalInterface, public]OAuth2AccessTokenResponseClient,  @AT@ 1687 @LENGTH@ 751
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]OAuth2AccessTokenResponseClient,  @AT@ 1687 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:defaultHeaderFilterStrategy.setOutFilterPattern(null) @TO@ MethodInvocation:defaultHeaderFilterStrategy.setOutFilterPattern("") @AT@ 2610 @LENGTH@ 54
---UPD MethodInvocation@@defaultHeaderFilterStrategy.setOutFilterPattern(null) @TO@ defaultHeaderFilterStrategy.setOutFilterPattern("") @AT@ 2610 @LENGTH@ 53
------UPD SimpleName@@MethodName:setOutFilterPattern:[null] @TO@ MethodName:setOutFilterPattern:[""] @AT@ 2638 @LENGTH@ 25
---------DEL NullLiteral@@null @AT@ 2658 @LENGTH@ 4
---------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:setOutFilterPattern:[null] @AT@ 2658 @LENGTH@ 2


DEL VariableDeclarationStatement@@List<HBaseCell> resultCells=new LinkedList<>(); @AT@ 6156 @LENGTH@ 49
---DEL ParameterizedType@@List<HBaseCell> @AT@ 6156 @LENGTH@ 15
------DEL SimpleType@@List @AT@ 6156 @LENGTH@ 4
------DEL SimpleType@@HBaseCell @AT@ 6161 @LENGTH@ 9
---DEL VariableDeclarationFragment@@resultCells=new LinkedList<>() @AT@ 6172 @LENGTH@ 32
------DEL SimpleName@@resultCells @AT@ 6172 @LENGTH@ 11
------DEL ClassInstanceCreation@@LinkedList<>[] @AT@ 6186 @LENGTH@ 18
---------DEL New@@new @AT@ 6186 @LENGTH@ 3
---------DEL ParameterizedType@@LinkedList<> @AT@ 6190 @LENGTH@ 12
------------DEL SimpleType@@LinkedList @AT@ 6190 @LENGTH@ 10


MOV MethodDeclaration@@void, MethodName:findAllWithProjectionByCriteria,  @TO@ TypeDeclaration@@[@ExtendWith(MongoClientExtension.class)]ReactiveFindOperationSupportTests,  @AT@ 5497 @LENGTH@ 250


UPD ThrowStatement@@ClassInstanceCreation:new OAuth2IntrospectionException("Provided token [" + token + "] isn't active") @TO@ ClassInstanceCreation:new OAuth2IntrospectionException("requestEntityConverter returned a null entity") @AT@ 5922 @LENGTH@ 86
---UPD ClassInstanceCreation@@OAuth2IntrospectionException["Provided token [" + token + "] isn't active"] @TO@ OAuth2IntrospectionException["requestEntityConverter returned a null entity"] @AT@ 5928 @LENGTH@ 79
------INS StringLiteral@@"requestEntityConverter returned a null entity" @TO@ ClassInstanceCreation@@OAuth2IntrospectionException["Provided token [" + token + "] isn't active"] @AT@ 5933 @LENGTH@ 47
------DEL InfixExpression@@"Provided token [" + token + "] isn't active" @AT@ 5961 @LENGTH@ 45
---------DEL StringLiteral@@"Provided token [" @AT@ 5961 @LENGTH@ 18
---------DEL Operator@@+ @AT@ 5979 @LENGTH@ 1
---------DEL SimpleName@@token @AT@ 5982 @LENGTH@ 5
---------DEL StringLiteral@@"] isn't active" @AT@ 5990 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Unable to parse ACK Deadline header value",e) @TO@ MethodInvocation:log.warn("Unable to parse ACK Deadline header value",e) @AT@ 2024 @LENGTH@ 57
---UPD MethodInvocation@@LOG.warn("Unable to parse ACK Deadline header value",e) @TO@ log.warn("Unable to parse ACK Deadline header value",e) @AT@ 2024 @LENGTH@ 56
------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 2024 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ MethodInvocation:PeriodicSizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 10313 @LENGTH@ 80
---UPD MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ PeriodicSizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 10313 @LENGTH@ 79
------INS QualifiedName@@Name:PeriodicSizeRotatingHandlerResourceDefinition.FILTER_SPEC @TO@ MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 10248 @LENGTH@ 57
------DEL SimpleName@@Name:FILTER_SPEC @AT@ 10313 @LENGTH@ 11


UPD IfStatement@@if (from != null) {  conf.setComponent(or(conf.getComponent(),from.getComponent()));  conf.setApiComponent(or(conf.getApiComponent(),from.getApiComponent()));  conf.setProducerComponent(or(conf.getProducerComponent(),from.getProducerComponent()));  conf.setProducerApiDoc(or(conf.getProducerApiDoc(),from.getProducerApiDoc()));  conf.setScheme(or(conf.getScheme(),from.getScheme()));  conf.setHost(or(conf.getHost(),from.getHost()));  conf.setUseXForwardHeaders(or(conf.isUseXForwardHeaders(),from.isUseXForwardHeaders()));  conf.setContextPath(or(conf.getContextPath(),from.getContextPath()));  conf.setApiContextPath(or(conf.getApiContextPath(),from.getApiContextPath()));  conf.setApiContextRouteId(or(conf.getApiContextRouteId(),from.getApiContextRouteId()));  conf.setApiContextIdPattern(or(conf.getApiContextIdPattern(),from.getApiContextIdPattern()));  conf.setApiContextListing(or(conf.isApiContextListing(),from.isApiContextListing()));  conf.setApiVendorExtension(or(conf.isApiVendorExtension(),from.isApiVendorExtension()));  conf.setHostNameResolver(or(conf.getHostNameResolver(),from.getHostNameResolver(),RestHostNameResolver.allLocalIp));  conf.setBindingMode(or(conf.getBindingMode(),from.getBindingMode(),RestBindingMode.off));  conf.setSkipBindingOnErrorCode(or(conf.isSkipBindingOnErrorCode(),from.isSkipBindingOnErrorCode()));  conf.setClientRequestValidation(or(conf.isClientRequestValidation(),from.isClientRequestValidation()));  conf.setEnableCORS(or(conf.isEnableCORS(),from.isEnableCORS()));  conf.setJsonDataFormat(or(conf.getJsonDataFormat(),from.getJsonDataFormat()));  conf.setXmlDataFormat(or(conf.getXmlDataFormat(),from.getXmlDataFormat()));  conf.setComponentProperties(mergeProperties(conf.getComponentProperties(),from.getComponentProperties()));  conf.setEndpointProperties(mergeProperties(conf.getEndpointProperties(),from.getEndpointProperties()));  conf.setConsumerProperties(mergeProperties(conf.getConsumerProperties(),from.getConsumerProperties()));  conf.setDataFormatProperties(mergeProperties(conf.getDataFormatProperties(),from.getDataFormatProperties()));  conf.setApiProperties(mergeProperties(conf.getApiProperties(),from.getApiProperties()));  conf.setCorsHeaders(mergeProperties(conf.getCorsHeaders(),from.getCorsHeaders()));} @TO@ if (from != null) {  conf.setComponent(or(conf.getComponent(),from.getComponent()));  conf.setApiComponent(or(conf.getApiComponent(),from.getApiComponent()));  conf.setProducerComponent(or(conf.getProducerComponent(),from.getProducerComponent()));  conf.setProducerApiDoc(or(conf.getProducerApiDoc(),from.getProducerApiDoc()));  conf.setScheme(or(conf.getScheme(),from.getScheme()));  conf.setHost(or(conf.getHost(),from.getHost()));  conf.setUseXForwardHeaders(or(conf.isUseXForwardHeaders(),from.isUseXForwardHeaders()));  conf.setApiHost(or(conf.getApiHost(),from.getApiHost()));  conf.setPort(or(conf.getPort(),from.getPort()));  conf.setContextPath(or(conf.getContextPath(),from.getContextPath()));  conf.setApiContextPath(or(conf.getApiContextPath(),from.getApiContextPath()));  conf.setApiContextRouteId(or(conf.getApiContextRouteId(),from.getApiContextRouteId()));  conf.setApiContextIdPattern(or(conf.getApiContextIdPattern(),from.getApiContextIdPattern()));  conf.setApiContextListing(or(conf.isApiContextListing(),from.isApiContextListing()));  conf.setApiVendorExtension(or(conf.isApiVendorExtension(),from.isApiVendorExtension()));  conf.setHostNameResolver(or(conf.getHostNameResolver(),from.getHostNameResolver(),RestHostNameResolver.allLocalIp));  conf.setBindingMode(or(conf.getBindingMode(),from.getBindingMode(),RestBindingMode.off));  conf.setSkipBindingOnErrorCode(or(conf.isSkipBindingOnErrorCode(),from.isSkipBindingOnErrorCode()));  conf.setClientRequestValidation(or(conf.isClientRequestValidation(),from.isClientRequestValidation()));  conf.setEnableCORS(or(conf.isEnableCORS(),from.isEnableCORS()));  conf.setJsonDataFormat(or(conf.getJsonDataFormat(),from.getJsonDataFormat()));  conf.setXmlDataFormat(or(conf.getXmlDataFormat(),from.getXmlDataFormat()));  conf.setComponentProperties(mergeProperties(conf.getComponentProperties(),from.getComponentProperties()));  conf.setEndpointProperties(mergeProperties(conf.getEndpointProperties(),from.getEndpointProperties()));  conf.setConsumerProperties(mergeProperties(conf.getConsumerProperties(),from.getConsumerProperties()));  conf.setDataFormatProperties(mergeProperties(conf.getDataFormatProperties(),from.getDataFormatProperties()));  conf.setApiProperties(mergeProperties(conf.getApiProperties(),from.getApiProperties()));  conf.setCorsHeaders(mergeProperties(conf.getCorsHeaders(),from.getCorsHeaders()));} @AT@ 9319 @LENGTH@ 2633
---UPD Block@@ThenBody:{  conf.setComponent(or(conf.getComponent(),from.getComponent()));  conf.setApiComponent(or(conf.getApiComponent(),from.getApiComponent()));  conf.setProducerComponent(or(conf.getProducerComponent(),from.getProducerComponent()));  conf.setProducerApiDoc(or(conf.getProducerApiDoc(),from.getProducerApiDoc()));  conf.setScheme(or(conf.getScheme(),from.getScheme()));  conf.setHost(or(conf.getHost(),from.getHost()));  conf.setUseXForwardHeaders(or(conf.isUseXForwardHeaders(),from.isUseXForwardHeaders()));  conf.setContextPath(or(conf.getContextPath(),from.getContextPath()));  conf.setApiContextPath(or(conf.getApiContextPath(),from.getApiContextPath()));  conf.setApiContextRouteId(or(conf.getApiContextRouteId(),from.getApiContextRouteId()));  conf.setApiContextIdPattern(or(conf.getApiContextIdPattern(),from.getApiContextIdPattern()));  conf.setApiContextListing(or(conf.isApiContextListing(),from.isApiContextListing()));  conf.setApiVendorExtension(or(conf.isApiVendorExtension(),from.isApiVendorExtension()));  conf.setHostNameResolver(or(conf.getHostNameResolver(),from.getHostNameResolver(),RestHostNameResolver.allLocalIp));  conf.setBindingMode(or(conf.getBindingMode(),from.getBindingMode(),RestBindingMode.off));  conf.setSkipBindingOnErrorCode(or(conf.isSkipBindingOnErrorCode(),from.isSkipBindingOnErrorCode()));  conf.setClientRequestValidation(or(conf.isClientRequestValidation(),from.isClientRequestValidation()));  conf.setEnableCORS(or(conf.isEnableCORS(),from.isEnableCORS()));  conf.setJsonDataFormat(or(conf.getJsonDataFormat(),from.getJsonDataFormat()));  conf.setXmlDataFormat(or(conf.getXmlDataFormat(),from.getXmlDataFormat()));  conf.setComponentProperties(mergeProperties(conf.getComponentProperties(),from.getComponentProperties()));  conf.setEndpointProperties(mergeProperties(conf.getEndpointProperties(),from.getEndpointProperties()));  conf.setConsumerProperties(mergeProperties(conf.getConsumerProperties(),from.getConsumerProperties()));  conf.setDataFormatProperties(mergeProperties(conf.getDataFormatProperties(),from.getDataFormatProperties()));  conf.setApiProperties(mergeProperties(conf.getApiProperties(),from.getApiProperties()));  conf.setCorsHeaders(mergeProperties(conf.getCorsHeaders(),from.getCorsHeaders()));} @TO@ ThenBody:{  conf.setComponent(or(conf.getComponent(),from.getComponent()));  conf.setApiComponent(or(conf.getApiComponent(),from.getApiComponent()));  conf.setProducerComponent(or(conf.getProducerComponent(),from.getProducerComponent()));  conf.setProducerApiDoc(or(conf.getProducerApiDoc(),from.getProducerApiDoc()));  conf.setScheme(or(conf.getScheme(),from.getScheme()));  conf.setHost(or(conf.getHost(),from.getHost()));  conf.setUseXForwardHeaders(or(conf.isUseXForwardHeaders(),from.isUseXForwardHeaders()));  conf.setApiHost(or(conf.getApiHost(),from.getApiHost()));  conf.setPort(or(conf.getPort(),from.getPort()));  conf.setContextPath(or(conf.getContextPath(),from.getContextPath()));  conf.setApiContextPath(or(conf.getApiContextPath(),from.getApiContextPath()));  conf.setApiContextRouteId(or(conf.getApiContextRouteId(),from.getApiContextRouteId()));  conf.setApiContextIdPattern(or(conf.getApiContextIdPattern(),from.getApiContextIdPattern()));  conf.setApiContextListing(or(conf.isApiContextListing(),from.isApiContextListing()));  conf.setApiVendorExtension(or(conf.isApiVendorExtension(),from.isApiVendorExtension()));  conf.setHostNameResolver(or(conf.getHostNameResolver(),from.getHostNameResolver(),RestHostNameResolver.allLocalIp));  conf.setBindingMode(or(conf.getBindingMode(),from.getBindingMode(),RestBindingMode.off));  conf.setSkipBindingOnErrorCode(or(conf.isSkipBindingOnErrorCode(),from.isSkipBindingOnErrorCode()));  conf.setClientRequestValidation(or(conf.isClientRequestValidation(),from.isClientRequestValidation()));  conf.setEnableCORS(or(conf.isEnableCORS(),from.isEnableCORS()));  conf.setJsonDataFormat(or(conf.getJsonDataFormat(),from.getJsonDataFormat()));  conf.setXmlDataFormat(or(conf.getXmlDataFormat(),from.getXmlDataFormat()));  conf.setComponentProperties(mergeProperties(conf.getComponentProperties(),from.getComponentProperties()));  conf.setEndpointProperties(mergeProperties(conf.getEndpointProperties(),from.getEndpointProperties()));  conf.setConsumerProperties(mergeProperties(conf.getConsumerProperties(),from.getConsumerProperties()));  conf.setDataFormatProperties(mergeProperties(conf.getDataFormatProperties(),from.getDataFormatProperties()));  conf.setApiProperties(mergeProperties(conf.getApiProperties(),from.getApiProperties()));  conf.setCorsHeaders(mergeProperties(conf.getCorsHeaders(),from.getCorsHeaders()));} @AT@ 9337 @LENGTH@ 2615
------INS ExpressionStatement@@MethodInvocation:conf.setApiHost(or(conf.getApiHost(),from.getApiHost())) @TO@ Block@@ThenBody:{  conf.setComponent(or(conf.getComponent(),from.getComponent()));  conf.setApiComponent(or(conf.getApiComponent(),from.getApiComponent()));  conf.setProducerComponent(or(conf.getProducerComponent(),from.getProducerComponent()));  conf.setProducerApiDoc(or(conf.getProducerApiDoc(),from.getProducerApiDoc()));  conf.setScheme(or(conf.getScheme(),from.getScheme()));  conf.setHost(or(conf.getHost(),from.getHost()));  conf.setUseXForwardHeaders(or(conf.isUseXForwardHeaders(),from.isUseXForwardHeaders()));  conf.setContextPath(or(conf.getContextPath(),from.getContextPath()));  conf.setApiContextPath(or(conf.getApiContextPath(),from.getApiContextPath()));  conf.setApiContextRouteId(or(conf.getApiContextRouteId(),from.getApiContextRouteId()));  conf.setApiContextIdPattern(or(conf.getApiContextIdPattern(),from.getApiContextIdPattern()));  conf.setApiContextListing(or(conf.isApiContextListing(),from.isApiContextListing()));  conf.setApiVendorExtension(or(conf.isApiVendorExtension(),from.isApiVendorExtension()));  conf.setHostNameResolver(or(conf.getHostNameResolver(),from.getHostNameResolver(),RestHostNameResolver.allLocalIp));  conf.setBindingMode(or(conf.getBindingMode(),from.getBindingMode(),RestBindingMode.off));  conf.setSkipBindingOnErrorCode(or(conf.isSkipBindingOnErrorCode(),from.isSkipBindingOnErrorCode()));  conf.setClientRequestValidation(or(conf.isClientRequestValidation(),from.isClientRequestValidation()));  conf.setEnableCORS(or(conf.isEnableCORS(),from.isEnableCORS()));  conf.setJsonDataFormat(or(conf.getJsonDataFormat(),from.getJsonDataFormat()));  conf.setXmlDataFormat(or(conf.getXmlDataFormat(),from.getXmlDataFormat()));  conf.setComponentProperties(mergeProperties(conf.getComponentProperties(),from.getComponentProperties()));  conf.setEndpointProperties(mergeProperties(conf.getEndpointProperties(),from.getEndpointProperties()));  conf.setConsumerProperties(mergeProperties(conf.getConsumerProperties(),from.getConsumerProperties()));  conf.setDataFormatProperties(mergeProperties(conf.getDataFormatProperties(),from.getDataFormatProperties()));  conf.setApiProperties(mergeProperties(conf.getApiProperties(),from.getApiProperties()));  conf.setCorsHeaders(mergeProperties(conf.getCorsHeaders(),from.getCorsHeaders()));} @AT@ 9971 @LENGTH@ 58
---------INS MethodInvocation@@conf.setApiHost(or(conf.getApiHost(),from.getApiHost())) @TO@ ExpressionStatement@@MethodInvocation:conf.setApiHost(or(conf.getApiHost(),from.getApiHost())) @AT@ 9971 @LENGTH@ 57
------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.setApiHost(or(conf.getApiHost(),from.getApiHost())) @AT@ 9971 @LENGTH@ 4
------------INS SimpleName@@MethodName:setApiHost:[or(conf.getApiHost(),from.getApiHost())] @TO@ MethodInvocation@@conf.setApiHost(or(conf.getApiHost(),from.getApiHost())) @AT@ 9976 @LENGTH@ 52
---------------INS MethodInvocation@@or(conf.getApiHost(),from.getApiHost()) @TO@ SimpleName@@MethodName:setApiHost:[or(conf.getApiHost(),from.getApiHost())] @AT@ 9987 @LENGTH@ 40
------------------INS SimpleName@@MethodName:or:[conf.getApiHost(), from.getApiHost()] @TO@ MethodInvocation@@or(conf.getApiHost(),from.getApiHost()) @AT@ 9987 @LENGTH@ 40
---------------------INS MethodInvocation@@conf.getApiHost() @TO@ SimpleName@@MethodName:or:[conf.getApiHost(), from.getApiHost()] @AT@ 9990 @LENGTH@ 17
------------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getApiHost() @AT@ 9990 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getApiHost:[] @TO@ MethodInvocation@@conf.getApiHost() @AT@ 9995 @LENGTH@ 12
---------------------INS MethodInvocation@@from.getApiHost() @TO@ SimpleName@@MethodName:or:[conf.getApiHost(), from.getApiHost()] @AT@ 10009 @LENGTH@ 17
------------------------INS SimpleName@@Name:from @TO@ MethodInvocation@@from.getApiHost() @AT@ 10009 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getApiHost:[] @TO@ MethodInvocation@@from.getApiHost() @AT@ 10014 @LENGTH@ 12
------INS ExpressionStatement@@MethodInvocation:conf.setPort(or(conf.getPort(),from.getPort())) @TO@ Block@@ThenBody:{  conf.setComponent(or(conf.getComponent(),from.getComponent()));  conf.setApiComponent(or(conf.getApiComponent(),from.getApiComponent()));  conf.setProducerComponent(or(conf.getProducerComponent(),from.getProducerComponent()));  conf.setProducerApiDoc(or(conf.getProducerApiDoc(),from.getProducerApiDoc()));  conf.setScheme(or(conf.getScheme(),from.getScheme()));  conf.setHost(or(conf.getHost(),from.getHost()));  conf.setUseXForwardHeaders(or(conf.isUseXForwardHeaders(),from.isUseXForwardHeaders()));  conf.setContextPath(or(conf.getContextPath(),from.getContextPath()));  conf.setApiContextPath(or(conf.getApiContextPath(),from.getApiContextPath()));  conf.setApiContextRouteId(or(conf.getApiContextRouteId(),from.getApiContextRouteId()));  conf.setApiContextIdPattern(or(conf.getApiContextIdPattern(),from.getApiContextIdPattern()));  conf.setApiContextListing(or(conf.isApiContextListing(),from.isApiContextListing()));  conf.setApiVendorExtension(or(conf.isApiVendorExtension(),from.isApiVendorExtension()));  conf.setHostNameResolver(or(conf.getHostNameResolver(),from.getHostNameResolver(),RestHostNameResolver.allLocalIp));  conf.setBindingMode(or(conf.getBindingMode(),from.getBindingMode(),RestBindingMode.off));  conf.setSkipBindingOnErrorCode(or(conf.isSkipBindingOnErrorCode(),from.isSkipBindingOnErrorCode()));  conf.setClientRequestValidation(or(conf.isClientRequestValidation(),from.isClientRequestValidation()));  conf.setEnableCORS(or(conf.isEnableCORS(),from.isEnableCORS()));  conf.setJsonDataFormat(or(conf.getJsonDataFormat(),from.getJsonDataFormat()));  conf.setXmlDataFormat(or(conf.getXmlDataFormat(),from.getXmlDataFormat()));  conf.setComponentProperties(mergeProperties(conf.getComponentProperties(),from.getComponentProperties()));  conf.setEndpointProperties(mergeProperties(conf.getEndpointProperties(),from.getEndpointProperties()));  conf.setConsumerProperties(mergeProperties(conf.getConsumerProperties(),from.getConsumerProperties()));  conf.setDataFormatProperties(mergeProperties(conf.getDataFormatProperties(),from.getDataFormatProperties()));  conf.setApiProperties(mergeProperties(conf.getApiProperties(),from.getApiProperties()));  conf.setCorsHeaders(mergeProperties(conf.getCorsHeaders(),from.getCorsHeaders()));} @AT@ 10042 @LENGTH@ 49
---------INS MethodInvocation@@conf.setPort(or(conf.getPort(),from.getPort())) @TO@ ExpressionStatement@@MethodInvocation:conf.setPort(or(conf.getPort(),from.getPort())) @AT@ 10042 @LENGTH@ 48
------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.setPort(or(conf.getPort(),from.getPort())) @AT@ 10042 @LENGTH@ 4
------------INS SimpleName@@MethodName:setPort:[or(conf.getPort(),from.getPort())] @TO@ MethodInvocation@@conf.setPort(or(conf.getPort(),from.getPort())) @AT@ 10047 @LENGTH@ 43
---------------INS MethodInvocation@@or(conf.getPort(),from.getPort()) @TO@ SimpleName@@MethodName:setPort:[or(conf.getPort(),from.getPort())] @AT@ 10055 @LENGTH@ 34
------------------INS SimpleName@@MethodName:or:[conf.getPort(), from.getPort()] @TO@ MethodInvocation@@or(conf.getPort(),from.getPort()) @AT@ 10055 @LENGTH@ 34
---------------------INS MethodInvocation@@conf.getPort() @TO@ SimpleName@@MethodName:or:[conf.getPort(), from.getPort()] @AT@ 10058 @LENGTH@ 14
------------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getPort() @AT@ 10058 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@conf.getPort() @AT@ 10063 @LENGTH@ 9
---------------------INS MethodInvocation@@from.getPort() @TO@ SimpleName@@MethodName:or:[conf.getPort(), from.getPort()] @AT@ 10074 @LENGTH@ 14
------------------------INS SimpleName@@Name:from @TO@ MethodInvocation@@from.getPort() @AT@ 10074 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@from.getPort() @AT@ 10079 @LENGTH@ 9


UPD EnhancedForStatement@@for (Map<String,String> row : rows) {  String optionalPrefix=null;  boolean found=false;  if (row.containsKey("optionalPrefix")) {    optionalPrefix=row.get("optionalPrefix");  }  if (row.containsKey("name")) {    if (optionalPrefix != null && name.startsWith(optionalPrefix)) {      name=name.substring(optionalPrefix.length());      return stripOptionalPrefixFromName(rows,name);    } else {      found=name.equalsIgnoreCase(row.get("name"));    }  }  if (found) {    return name;  }} @TO@ for (Map<String,String> row : rows) {  boolean found=false;  if (row.containsKey("name")) {    String optionalPrefix=row.get("optionalPrefix");    if (optionalPrefix != null && !optionalPrefix.isEmpty() && name.startsWith(optionalPrefix)) {      name=name.substring(optionalPrefix.length());      return stripOptionalPrefixFromName(rows,name);    } else {      found=name.equalsIgnoreCase(row.get("name"));    }  }  if (found) {    return name;  }} @AT@ 16484 @LENGTH@ 738
---DEL VariableDeclarationStatement@@String optionalPrefix=null; @AT@ 16535 @LENGTH@ 29
------DEL SimpleType@@String @AT@ 16535 @LENGTH@ 6
------DEL VariableDeclarationFragment@@optionalPrefix=null @AT@ 16542 @LENGTH@ 21
---------DEL SimpleName@@optionalPrefix @AT@ 16542 @LENGTH@ 14
---------DEL NullLiteral@@null @AT@ 16559 @LENGTH@ 4
---DEL IfStatement@@if (row.containsKey("optionalPrefix")) {  optionalPrefix=row.get("optionalPrefix");} @AT@ 16612 @LENGTH@ 114
------DEL MethodInvocation@@row.containsKey("optionalPrefix") @AT@ 16616 @LENGTH@ 33
---------DEL SimpleName@@Name:row @AT@ 16616 @LENGTH@ 3
---------DEL SimpleName@@MethodName:containsKey:["optionalPrefix"] @AT@ 16620 @LENGTH@ 29
------------DEL StringLiteral@@"optionalPrefix" @AT@ 16632 @LENGTH@ 16
------DEL Block@@ThenBody:{  optionalPrefix=row.get("optionalPrefix");} @AT@ 16651 @LENGTH@ 75
---------DEL ExpressionStatement@@Assignment:optionalPrefix=row.get("optionalPrefix") @AT@ 16669 @LENGTH@ 43
------------DEL Assignment@@optionalPrefix=row.get("optionalPrefix") @AT@ 16669 @LENGTH@ 42
---------------DEL SimpleName@@optionalPrefix @AT@ 16669 @LENGTH@ 14
---------------DEL Operator@@= @AT@ 16683 @LENGTH@ 1
---UPD IfStatement@@if (row.containsKey("name")) {  if (optionalPrefix != null && name.startsWith(optionalPrefix)) {    name=name.substring(optionalPrefix.length());    return stripOptionalPrefixFromName(rows,name);  } else {    found=name.equalsIgnoreCase(row.get("name"));  }} @TO@ if (row.containsKey("name")) {  String optionalPrefix=row.get("optionalPrefix");  if (optionalPrefix != null && !optionalPrefix.isEmpty() && name.startsWith(optionalPrefix)) {    name=name.substring(optionalPrefix.length());    return stripOptionalPrefixFromName(rows,name);  } else {    found=name.equalsIgnoreCase(row.get("name"));  }} @AT@ 16739 @LENGTH@ 405
------UPD Block@@ThenBody:{  if (optionalPrefix != null && name.startsWith(optionalPrefix)) {    name=name.substring(optionalPrefix.length());    return stripOptionalPrefixFromName(rows,name);  } else {    found=name.equalsIgnoreCase(row.get("name"));  }} @TO@ ThenBody:{  String optionalPrefix=row.get("optionalPrefix");  if (optionalPrefix != null && !optionalPrefix.isEmpty() && name.startsWith(optionalPrefix)) {    name=name.substring(optionalPrefix.length());    return stripOptionalPrefixFromName(rows,name);  } else {    found=name.equalsIgnoreCase(row.get("name"));  }} @AT@ 16768 @LENGTH@ 376
---------INS VariableDeclarationStatement@@String optionalPrefix=row.get("optionalPrefix"); @TO@ Block@@ThenBody:{  if (optionalPrefix != null && name.startsWith(optionalPrefix)) {    name=name.substring(optionalPrefix.length());    return stripOptionalPrefixFromName(rows,name);  } else {    found=name.equalsIgnoreCase(row.get("name"));  }} @AT@ 16617 @LENGTH@ 50
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String optionalPrefix=row.get("optionalPrefix"); @AT@ 16617 @LENGTH@ 6
------------INS VariableDeclarationFragment@@optionalPrefix=row.get("optionalPrefix") @TO@ VariableDeclarationStatement@@String optionalPrefix=row.get("optionalPrefix"); @AT@ 16624 @LENGTH@ 42
---------------INS SimpleName@@optionalPrefix @TO@ VariableDeclarationFragment@@optionalPrefix=row.get("optionalPrefix") @AT@ 16624 @LENGTH@ 14
---------------MOV MethodInvocation@@row.get("optionalPrefix") @TO@ VariableDeclarationFragment@@optionalPrefix=row.get("optionalPrefix") @AT@ 16686 @LENGTH@ 25
---------UPD IfStatement@@if (optionalPrefix != null && name.startsWith(optionalPrefix)) {  name=name.substring(optionalPrefix.length());  return stripOptionalPrefixFromName(rows,name);} else {  found=name.equalsIgnoreCase(row.get("name"));} @TO@ if (optionalPrefix != null && !optionalPrefix.isEmpty() && name.startsWith(optionalPrefix)) {  name=name.substring(optionalPrefix.length());  return stripOptionalPrefixFromName(rows,name);} else {  found=name.equalsIgnoreCase(row.get("name"));} @AT@ 16786 @LENGTH@ 344
------------UPD InfixExpression@@optionalPrefix != null && name.startsWith(optionalPrefix) @TO@ optionalPrefix != null && !optionalPrefix.isEmpty() && name.startsWith(optionalPrefix) @AT@ 16790 @LENGTH@ 57
---------------INS InfixExpression@@optionalPrefix != null && !optionalPrefix.isEmpty() @TO@ InfixExpression@@optionalPrefix != null && name.startsWith(optionalPrefix) @AT@ 16688 @LENGTH@ 51
------------------INS PrefixExpression@@!optionalPrefix.isEmpty() @TO@ InfixExpression@@optionalPrefix != null && !optionalPrefix.isEmpty() @AT@ 16714 @LENGTH@ 25
---------------------INS Operator@@! @TO@ PrefixExpression@@!optionalPrefix.isEmpty() @AT@ 16714 @LENGTH@ 1
---------------------INS MethodInvocation@@optionalPrefix.isEmpty() @TO@ PrefixExpression@@!optionalPrefix.isEmpty() @AT@ 16715 @LENGTH@ 24
------------------------INS SimpleName@@Name:optionalPrefix @TO@ MethodInvocation@@optionalPrefix.isEmpty() @AT@ 16715 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@optionalPrefix.isEmpty() @AT@ 16730 @LENGTH@ 9
------------------MOV InfixExpression@@optionalPrefix != null @TO@ InfixExpression@@optionalPrefix != null && !optionalPrefix.isEmpty() @AT@ 16790 @LENGTH@ 22
------------------MOV Operator@@&& @TO@ InfixExpression@@optionalPrefix != null && !optionalPrefix.isEmpty() @AT@ 16812 @LENGTH@ 2
---------------INS Operator@@&& @TO@ InfixExpression@@optionalPrefix != null && name.startsWith(optionalPrefix) @AT@ 16739 @LENGTH@ 2


UPD IfStatement@@if (attribute.equals(CommonAttributes.FILTER_SPEC.getName())) {  final String configValue=loggerConfig.getFilter();  final String modelValue=loggerModel.hasDefined(attribute) ? loggerModel.get(attribute).asString() : null;  Assert.assertEquals(String.format("Filter expressions do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else if (attribute.equals(CommonAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @TO@ if (attribute.equals(LoggerAttributes.FILTER_SPEC.getName())) {  final String configValue=loggerConfig.getFilter();  final String modelValue=loggerModel.hasDefined(attribute) ? loggerModel.get(attribute).asString() : null;  Assert.assertEquals(String.format("Filter expressions do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else if (attribute.equals(LoggerAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @AT@ 14282 @LENGTH@ 2604
---UPD MethodInvocation@@attribute.equals(CommonAttributes.FILTER_SPEC.getName()) @TO@ attribute.equals(LoggerAttributes.FILTER_SPEC.getName()) @AT@ 14286 @LENGTH@ 56
------UPD SimpleName@@MethodName:equals:[CommonAttributes.FILTER_SPEC.getName()] @TO@ MethodName:equals:[LoggerAttributes.FILTER_SPEC.getName()] @AT@ 14296 @LENGTH@ 46
---------UPD MethodInvocation@@CommonAttributes.FILTER_SPEC.getName() @TO@ LoggerAttributes.FILTER_SPEC.getName() @AT@ 14303 @LENGTH@ 38
------------UPD QualifiedName@@Name:CommonAttributes.FILTER_SPEC @TO@ Name:LoggerAttributes.FILTER_SPEC @AT@ 14303 @LENGTH@ 28
---UPD Block@@ElseBody:if (attribute.equals(CommonAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @TO@ ElseBody:if (attribute.equals(LoggerAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @AT@ 14762 @LENGTH@ 2124
------UPD IfStatement@@if (attribute.equals(CommonAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @TO@ if (attribute.equals(LoggerAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @AT@ 14762 @LENGTH@ 2124
---------UPD MethodInvocation@@attribute.equals(CommonAttributes.HANDLERS.getName()) @TO@ attribute.equals(LoggerAttributes.HANDLERS.getName()) @AT@ 14766 @LENGTH@ 53
------------UPD SimpleName@@MethodName:equals:[CommonAttributes.HANDLERS.getName()] @TO@ MethodName:equals:[LoggerAttributes.HANDLERS.getName()] @AT@ 14776 @LENGTH@ 43
---------------UPD MethodInvocation@@CommonAttributes.HANDLERS.getName() @TO@ LoggerAttributes.HANDLERS.getName() @AT@ 14783 @LENGTH@ 35
------------------UPD QualifiedName@@Name:CommonAttributes.HANDLERS @TO@ Name:LoggerAttributes.HANDLERS @AT@ 14783 @LENGTH@ 25
------UPD IfStatement@@if (attribute.equals(CommonAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @TO@ if (attribute.equals(LoggerAttributes.HANDLERS.getName())) {  final List<String> handlerNames=loggerConfig.getHandlerNames();  final ModelNode handlers=loggerModel.get(attribute);  if (handlers.isDefined()) {    final List<String> modelHandlerNames=new ArrayList<>();    for (    ModelNode handler : handlers.asList()) {      modelHandlerNames.add(handler.asString());    }    final List<String> missingConfigHandlers=new ArrayList<>(handlerNames);    missingConfigHandlers.removeAll(modelHandlerNames);    final List<String> missingModelHandlers=new ArrayList<>(modelHandlerNames);    missingModelHandlers.removeAll(handlerNames);    Assert.assertTrue("Logger in model contains handlers not in the configuration: " + missingConfigHandlers,missingConfigHandlers.isEmpty());    Assert.assertTrue("Logger in configuration contains handlers not in the model: " + missingModelHandlers,missingModelHandlers.isEmpty());  } else {    Assert.assertTrue("Handlers attached to loggers in the configuration that are not attached to loggers in the model. Logger: " + name,handlerNames.isEmpty());  }} else if (attribute.equals(LoggerResourceDefinition.USE_PARENT_HANDLERS.getName())) {  final Boolean configValue=loggerConfig.getUseParentHandlers();  final Boolean modelValue=loggerModel.get(attribute).asBoolean();  Assert.assertEquals(String.format("Use parent handler attributes do not match. Config Value: %s  Model Value: %s",configValue,modelValue),configValue,modelValue);} else {  Assert.fail("Invalid attribute: " + attribute);} @AT@ 14762 @LENGTH@ 2124
---------UPD MethodInvocation@@attribute.equals(CommonAttributes.HANDLERS.getName()) @TO@ attribute.equals(LoggerAttributes.HANDLERS.getName()) @AT@ 14766 @LENGTH@ 53
------------UPD SimpleName@@MethodName:equals:[CommonAttributes.HANDLERS.getName()] @TO@ MethodName:equals:[LoggerAttributes.HANDLERS.getName()] @AT@ 14776 @LENGTH@ 43
---------------UPD MethodInvocation@@CommonAttributes.HANDLERS.getName() @TO@ LoggerAttributes.HANDLERS.getName() @AT@ 14783 @LENGTH@ 35
------------------UPD QualifiedName@@Name:CommonAttributes.HANDLERS @TO@ Name:LoggerAttributes.HANDLERS @AT@ 14783 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultingRDF.size(),1762) @TO@ MethodInvocation:assertEquals(resultingRDF.size(),1761) @AT@ 1701 @LENGTH@ 40
---UPD MethodInvocation@@assertEquals(resultingRDF.size(),1762) @TO@ assertEquals(resultingRDF.size(),1761) @AT@ 1701 @LENGTH@ 39
------UPD SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 1762] @TO@ MethodName:assertEquals:[resultingRDF.size(), 1761] @AT@ 1701 @LENGTH@ 39
---------UPD NumberLiteral@@1762 @TO@ 1761 @AT@ 1735 @LENGTH@ 4


MOV FieldDeclaration@@protected, MavenProject, [project] @TO@ TypeDeclaration@@[@Mojo(name="eip-documentation-enricher",requiresDependencyResolution=ResolutionScope.COMPILE_PLUS_RUNTIME,defaultPhase=LifecyclePhase.PREPARE_PACKAGE), public]EipDocumentationEnricherMojo, AbstractMojo @AT@ 2391 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:forward.addCode("    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n") @TO@ MethodInvocation:forward.addCode("    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n") @AT@ 2855 @LENGTH@ 122
---UPD MethodInvocation@@forward.addCode("    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n") @TO@ forward.addCode("    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n") @AT@ 2855 @LENGTH@ 121
------UPD SimpleName@@MethodName:addCode:["    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n"] @TO@ MethodName:addCode:["    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n"] @AT@ 2863 @LENGTH@ 113
---------UPD StringLiteral@@"    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n" @TO@ "    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n" @AT@ 2871 @LENGTH@ 104


INS MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @TO@ TypeDeclaration@@[public]OidcIdTokenValidatorTests,  @AT@ 3518 @LENGTH@ 601
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @AT@ 3518 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @AT@ 3525 @LENGTH@ 4
---INS SimpleName@@MethodName:validateWhenMetadataIssuerMismatchThenHasErrors @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @AT@ 3530 @LENGTH@ 47
---INS VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new HashMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @AT@ 3729 @LENGTH@ 60
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new HashMap<>(); @AT@ 3729 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 3729 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 3733 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 3741 @LENGTH@ 6
------INS VariableDeclarationFragment@@configurationMetadata=new HashMap<>() @TO@ VariableDeclarationStatement@@Map<String,Object> configurationMetadata=new HashMap<>(); @AT@ 3749 @LENGTH@ 39
---------INS SimpleName@@configurationMetadata @TO@ VariableDeclarationFragment@@configurationMetadata=new HashMap<>() @AT@ 3749 @LENGTH@ 21
---------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@configurationMetadata=new HashMap<>() @AT@ 3773 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 3773 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 3777 @LENGTH@ 9
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 3777 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:configurationMetadata.put("issuer","https://issuer.somethingelse.com") @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @AT@ 3792 @LENGTH@ 72
------INS MethodInvocation@@configurationMetadata.put("issuer","https://issuer.somethingelse.com") @TO@ ExpressionStatement@@MethodInvocation:configurationMetadata.put("issuer","https://issuer.somethingelse.com") @AT@ 3792 @LENGTH@ 71
---------INS SimpleName@@Name:configurationMetadata @TO@ MethodInvocation@@configurationMetadata.put("issuer","https://issuer.somethingelse.com") @AT@ 3792 @LENGTH@ 21
---------INS SimpleName@@MethodName:put:["issuer", "https://issuer.somethingelse.com"] @TO@ MethodInvocation@@configurationMetadata.put("issuer","https://issuer.somethingelse.com") @AT@ 3814 @LENGTH@ 49
------------INS StringLiteral@@"issuer" @TO@ SimpleName@@MethodName:put:["issuer", "https://issuer.somethingelse.com"] @AT@ 3818 @LENGTH@ 8
------------INS StringLiteral@@"https://issuer.somethingelse.com" @TO@ SimpleName@@MethodName:put:["issuer", "https://issuer.somethingelse.com"] @AT@ 3828 @LENGTH@ 34
---INS ExpressionStatement@@Assignment:this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @AT@ 3867 @LENGTH@ 91
------INS Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @TO@ ExpressionStatement@@Assignment:this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 3867 @LENGTH@ 90
---------INS FieldAccess@@this.registration @TO@ Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 3867 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 3867 @LENGTH@ 4
------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 3872 @LENGTH@ 12
---------INS Operator@@= @TO@ Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 3884 @LENGTH@ 1
---------INS MethodInvocation@@this.registration.providerConfigurationMetadata(configurationMetadata) @TO@ Assignment@@this.registration=this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 3887 @LENGTH@ 70
------------INS FieldAccess@@this.registration @TO@ MethodInvocation@@this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 3887 @LENGTH@ 17
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 3887 @LENGTH@ 4
---------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 3892 @LENGTH@ 12
------------INS SimpleName@@MethodName:providerConfigurationMetadata:[configurationMetadata] @TO@ MethodInvocation@@this.registration.providerConfigurationMetadata(configurationMetadata) @AT@ 3905 @LENGTH@ 52
---------------INS SimpleName@@configurationMetadata @TO@ SimpleName@@MethodName:providerConfigurationMetadata:[configurationMetadata] @AT@ 3935 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.contains(IdTokenClaimNames.ISS)) @TO@ MethodDeclaration@@public, void, MethodName:validateWhenMetadataIssuerMismatchThenHasErrors,  @AT@ 3962 @LENGTH@ 154
------INS MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.contains(IdTokenClaimNames.ISS)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.contains(IdTokenClaimNames.ISS)) @AT@ 3962 @LENGTH@ 153
---------INS MethodInvocation@@MethodName:extracting:[OAuth2Error::getDescription] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.contains(IdTokenClaimNames.ISS)) @AT@ 3962 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.contains(IdTokenClaimNames.ISS)) @AT@ 3962 @LENGTH@ 50
------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:hasSize:[1] @AT@ 4010 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:assertThat:[this.validateIdToken()] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.contains(IdTokenClaimNames.ISS)) @AT@ 3962 @LENGTH@ 34
------------INS MethodInvocation@@this.validateIdToken() @TO@ MethodInvocation@@MethodName:assertThat:[this.validateIdToken()] @AT@ 3973 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.validateIdToken() @AT@ 3973 @LENGTH@ 4
---------------INS SimpleName@@MethodName:validateIdToken:[] @TO@ MethodInvocation@@this.validateIdToken() @AT@ 3978 @LENGTH@ 17
---------INS SimpleName@@MethodName:allMatch:[msg -> msg.contains(IdTokenClaimNames.ISS)] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.contains(IdTokenClaimNames.ISS)) @AT@ 4063 @LENGTH@ 52
------------INS LambdaExpression@@msg -> msg.contains(IdTokenClaimNames.ISS) @TO@ SimpleName@@MethodName:allMatch:[msg -> msg.contains(IdTokenClaimNames.ISS)] @AT@ 4072 @LENGTH@ 42
---------------INS VariableDeclarationFragment@@msg @TO@ LambdaExpression@@msg -> msg.contains(IdTokenClaimNames.ISS) @AT@ 4072 @LENGTH@ 3
------------------INS SimpleName@@msg @TO@ VariableDeclarationFragment@@msg @AT@ 4072 @LENGTH@ 3
---------------INS MethodInvocation@@msg.contains(IdTokenClaimNames.ISS) @TO@ LambdaExpression@@msg -> msg.contains(IdTokenClaimNames.ISS) @AT@ 4079 @LENGTH@ 35
------------------INS SimpleName@@Name:msg @TO@ MethodInvocation@@msg.contains(IdTokenClaimNames.ISS) @AT@ 4079 @LENGTH@ 3
------------------INS SimpleName@@MethodName:contains:[IdTokenClaimNames.ISS] @TO@ MethodInvocation@@msg.contains(IdTokenClaimNames.ISS) @AT@ 4083 @LENGTH@ 31
---------------------INS QualifiedName@@IdTokenClaimNames.ISS @TO@ SimpleName@@MethodName:contains:[IdTokenClaimNames.ISS] @AT@ 4092 @LENGTH@ 21
------------------------INS SimpleName@@IdTokenClaimNames @TO@ QualifiedName@@IdTokenClaimNames.ISS @AT@ 4092 @LENGTH@ 17
------------------------INS SimpleName@@ISS @TO@ QualifiedName@@IdTokenClaimNames.ISS @AT@ 4110 @LENGTH@ 3


UPD MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @TO@ protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListenerArg, Object bean, Object target, String beanName,  @AT@ 17407 @LENGTH@ 2363
---UPD SingleVariableDeclaration@@RabbitListener rabbitListener @TO@ RabbitListener rabbitListenerArg @AT@ 17477 @LENGTH@ 29
------UPD SimpleName@@rabbitListener @TO@ rabbitListenerArg @AT@ 17492 @LENGTH@ 14
---INS VariableDeclarationStatement@@RabbitListener rabbitListener=rabbitListenerArg; @TO@ MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @AT@ 17764 @LENGTH@ 50
------INS SimpleType@@RabbitListener @TO@ VariableDeclarationStatement@@RabbitListener rabbitListener=rabbitListenerArg; @AT@ 17764 @LENGTH@ 14
------INS VariableDeclarationFragment@@rabbitListener=rabbitListenerArg @TO@ VariableDeclarationStatement@@RabbitListener rabbitListener=rabbitListenerArg; @AT@ 17779 @LENGTH@ 34
---------INS SimpleName@@rabbitListener @TO@ VariableDeclarationFragment@@rabbitListener=rabbitListenerArg @AT@ 17779 @LENGTH@ 14
---------INS SimpleName@@rabbitListenerArg @TO@ VariableDeclarationFragment@@rabbitListener=rabbitListenerArg @AT@ 17796 @LENGTH@ 17
---INS VariableDeclarationStatement@@MergedAnnotation<RabbitListener> mergedAnnotation=MergedAnnotation.missing(); @TO@ MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @AT@ 17817 @LENGTH@ 79
------INS ParameterizedType@@MergedAnnotation<RabbitListener> @TO@ VariableDeclarationStatement@@MergedAnnotation<RabbitListener> mergedAnnotation=MergedAnnotation.missing(); @AT@ 17817 @LENGTH@ 32
---------INS SimpleType@@MergedAnnotation @TO@ ParameterizedType@@MergedAnnotation<RabbitListener> @AT@ 17817 @LENGTH@ 16
---------INS SimpleType@@RabbitListener @TO@ ParameterizedType@@MergedAnnotation<RabbitListener> @AT@ 17834 @LENGTH@ 14
------INS VariableDeclarationFragment@@mergedAnnotation=MergedAnnotation.missing() @TO@ VariableDeclarationStatement@@MergedAnnotation<RabbitListener> mergedAnnotation=MergedAnnotation.missing(); @AT@ 17850 @LENGTH@ 45
---------INS SimpleName@@mergedAnnotation @TO@ VariableDeclarationFragment@@mergedAnnotation=MergedAnnotation.missing() @AT@ 17850 @LENGTH@ 16
---------INS MethodInvocation@@MergedAnnotation.missing() @TO@ VariableDeclarationFragment@@mergedAnnotation=MergedAnnotation.missing() @AT@ 17869 @LENGTH@ 26
------------INS SimpleName@@Name:MergedAnnotation @TO@ MethodInvocation@@MergedAnnotation.missing() @AT@ 17869 @LENGTH@ 16
------------INS SimpleName@@MethodName:missing:[] @TO@ MethodInvocation@@MergedAnnotation.missing() @AT@ 17886 @LENGTH@ 9
---INS IfStatement@@if (endpoint instanceof MultiMethodRabbitListenerEndpoint) {  if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} else {  if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @TO@ MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @AT@ 18067 @LENGTH@ 535
------INS InstanceofExpression@@endpoint instanceof MultiMethodRabbitListenerEndpoint @TO@ IfStatement@@if (endpoint instanceof MultiMethodRabbitListenerEndpoint) {  if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} else {  if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @AT@ 18071 @LENGTH@ 53
---------INS SimpleName@@endpoint @TO@ InstanceofExpression@@endpoint instanceof MultiMethodRabbitListenerEndpoint @AT@ 18071 @LENGTH@ 8
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@endpoint instanceof MultiMethodRabbitListenerEndpoint @AT@ 18080 @LENGTH@ 10
---------INS SimpleType@@MultiMethodRabbitListenerEndpoint @TO@ InstanceofExpression@@endpoint instanceof MultiMethodRabbitListenerEndpoint @AT@ 18091 @LENGTH@ 33
------INS Block@@ThenBody:{  if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @TO@ IfStatement@@if (endpoint instanceof MultiMethodRabbitListenerEndpoint) {  if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} else {  if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @AT@ 18126 @LENGTH@ 231
---------INS IfStatement@@if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {  mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @TO@ Block@@ThenBody:{  if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @AT@ 18131 @LENGTH@ 222
------------INS InfixExpression@@AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null @TO@ IfStatement@@if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {  mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @AT@ 18135 @LENGTH@ 80
---------------INS MethodInvocation@@AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) @TO@ InfixExpression@@AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null @AT@ 18135 @LENGTH@ 72
------------------INS SimpleName@@Name:AnnotationUtils @TO@ MethodInvocation@@AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) @AT@ 18135 @LENGTH@ 15
------------------INS SimpleName@@MethodName:findAnnotation:[(Class<?>)target, RabbitListeners.class] @TO@ MethodInvocation@@AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) @AT@ 18151 @LENGTH@ 56
---------------------INS CastExpression@@(Class<?>)target @TO@ SimpleName@@MethodName:findAnnotation:[(Class<?>)target, RabbitListeners.class] @AT@ 18166 @LENGTH@ 17
------------------------INS ParameterizedType@@Class<?> @TO@ CastExpression@@(Class<?>)target @AT@ 18167 @LENGTH@ 8
---------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 18167 @LENGTH@ 5
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 18173 @LENGTH@ 1
------------------------INS SimpleName@@target @TO@ CastExpression@@(Class<?>)target @AT@ 18177 @LENGTH@ 6
---------------------INS TypeLiteral@@RabbitListeners.class @TO@ SimpleName@@MethodName:findAnnotation:[(Class<?>)target, RabbitListeners.class] @AT@ 18185 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null @AT@ 18207 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null @AT@ 18211 @LENGTH@ 4
------------INS Block@@ThenBody:{  mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @TO@ IfStatement@@if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {  mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @AT@ 18217 @LENGTH@ 136
---------------INS ExpressionStatement@@Assignment:mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @TO@ Block@@ThenBody:{  mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @AT@ 18223 @LENGTH@ 125
------------------INS Assignment@@mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @TO@ ExpressionStatement@@Assignment:mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18223 @LENGTH@ 124
---------------------INS SimpleName@@mergedAnnotation @TO@ Assignment@@mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18223 @LENGTH@ 16
---------------------INS Operator@@= @TO@ Assignment@@mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18239 @LENGTH@ 1
---------------------INS MethodInvocation@@MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @TO@ Assignment@@mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18242 @LENGTH@ 105
------------------------INS MethodInvocation@@MethodName:from:[(Class<?>)target, SearchStrategy.TYPE_HIERARCHY] @TO@ MethodInvocation@@MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18242 @LENGTH@ 72
---------------------------INS CastExpression@@(Class<?>)target @TO@ MethodInvocation@@MethodName:from:[(Class<?>)target, SearchStrategy.TYPE_HIERARCHY] @AT@ 18265 @LENGTH@ 17
------------------------------INS ParameterizedType@@Class<?> @TO@ CastExpression@@(Class<?>)target @AT@ 18266 @LENGTH@ 8
---------------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 18266 @LENGTH@ 5
---------------------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 18272 @LENGTH@ 1
------------------------------INS SimpleName@@target @TO@ CastExpression@@(Class<?>)target @AT@ 18276 @LENGTH@ 6
---------------------------INS QualifiedName@@SearchStrategy.TYPE_HIERARCHY @TO@ MethodInvocation@@MethodName:from:[(Class<?>)target, SearchStrategy.TYPE_HIERARCHY] @AT@ 18284 @LENGTH@ 29
------------------------------INS SimpleName@@SearchStrategy @TO@ QualifiedName@@SearchStrategy.TYPE_HIERARCHY @AT@ 18284 @LENGTH@ 14
------------------------------INS SimpleName@@TYPE_HIERARCHY @TO@ QualifiedName@@SearchStrategy.TYPE_HIERARCHY @AT@ 18299 @LENGTH@ 14
------------------------INS SimpleName@@Name:MergedAnnotations @TO@ MethodInvocation@@MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18242 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:get:[RabbitListener.class] @TO@ MethodInvocation@@MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18322 @LENGTH@ 25
---------------------------INS TypeLiteral@@RabbitListener.class @TO@ SimpleName@@MethodName:get:[RabbitListener.class] @AT@ 18326 @LENGTH@ 20
------INS Block@@ElseBody:{  if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @TO@ IfStatement@@if (endpoint instanceof MultiMethodRabbitListenerEndpoint) {  if (AnnotationUtils.findAnnotation((Class<?>)target,RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from((Class<?>)target,SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} else {  if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @AT@ 18365 @LENGTH@ 237
---------INS IfStatement@@if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {  mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @TO@ Block@@ElseBody:{  if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {    mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);  }} @AT@ 18370 @LENGTH@ 228
------------INS InfixExpression@@AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null @TO@ IfStatement@@if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {  mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @AT@ 18374 @LENGTH@ 83
---------------INS MethodInvocation@@AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) @TO@ InfixExpression@@AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null @AT@ 18374 @LENGTH@ 75
------------------INS SimpleName@@Name:AnnotationUtils @TO@ MethodInvocation@@AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) @AT@ 18374 @LENGTH@ 15
------------------INS SimpleName@@MethodName:findAnnotation:[endpoint.getMethod(), RabbitListeners.class] @TO@ MethodInvocation@@AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) @AT@ 18390 @LENGTH@ 59
---------------------INS MethodInvocation@@endpoint.getMethod() @TO@ SimpleName@@MethodName:findAnnotation:[endpoint.getMethod(), RabbitListeners.class] @AT@ 18405 @LENGTH@ 20
------------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getMethod() @AT@ 18405 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getMethod:[] @TO@ MethodInvocation@@endpoint.getMethod() @AT@ 18414 @LENGTH@ 11
---------------------INS TypeLiteral@@RabbitListeners.class @TO@ SimpleName@@MethodName:findAnnotation:[endpoint.getMethod(), RabbitListeners.class] @AT@ 18427 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null @AT@ 18449 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null @AT@ 18453 @LENGTH@ 4
------------INS Block@@ThenBody:{  mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @TO@ IfStatement@@if (AnnotationUtils.findAnnotation(endpoint.getMethod(),RabbitListeners.class) == null) {  mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @AT@ 18459 @LENGTH@ 139
---------------INS ExpressionStatement@@Assignment:mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @TO@ Block@@ThenBody:{  mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class);} @AT@ 18465 @LENGTH@ 128
------------------INS Assignment@@mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @TO@ ExpressionStatement@@Assignment:mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18465 @LENGTH@ 127
---------------------INS SimpleName@@mergedAnnotation @TO@ Assignment@@mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18465 @LENGTH@ 16
---------------------INS Operator@@= @TO@ Assignment@@mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18481 @LENGTH@ 1
---------------------INS MethodInvocation@@MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @TO@ Assignment@@mergedAnnotation=MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18484 @LENGTH@ 108
------------------------INS MethodInvocation@@MethodName:from:[endpoint.getMethod(), SearchStrategy.TYPE_HIERARCHY] @TO@ MethodInvocation@@MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18484 @LENGTH@ 75
---------------------------INS MethodInvocation@@endpoint.getMethod() @TO@ MethodInvocation@@MethodName:from:[endpoint.getMethod(), SearchStrategy.TYPE_HIERARCHY] @AT@ 18507 @LENGTH@ 20
------------------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getMethod() @AT@ 18507 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:getMethod:[] @TO@ MethodInvocation@@endpoint.getMethod() @AT@ 18516 @LENGTH@ 11
---------------------------INS QualifiedName@@SearchStrategy.TYPE_HIERARCHY @TO@ MethodInvocation@@MethodName:from:[endpoint.getMethod(), SearchStrategy.TYPE_HIERARCHY] @AT@ 18529 @LENGTH@ 29
------------------------------INS SimpleName@@SearchStrategy @TO@ QualifiedName@@SearchStrategy.TYPE_HIERARCHY @AT@ 18529 @LENGTH@ 14
------------------------------INS SimpleName@@TYPE_HIERARCHY @TO@ QualifiedName@@SearchStrategy.TYPE_HIERARCHY @AT@ 18544 @LENGTH@ 14
------------------------INS SimpleName@@Name:MergedAnnotations @TO@ MethodInvocation@@MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18484 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:get:[RabbitListener.class] @TO@ MethodInvocation@@MergedAnnotations.from(endpoint.getMethod(),SearchStrategy.TYPE_HIERARCHY).get(RabbitListener.class) @AT@ 18567 @LENGTH@ 25
---------------------------INS TypeLiteral@@RabbitListener.class @TO@ SimpleName@@MethodName:get:[RabbitListener.class] @AT@ 18571 @LENGTH@ 20
---INS IfStatement@@if (!MergedAnnotation.missing().equals(mergedAnnotation)) {  rabbitListener=mergedAnnotation.synthesize();} @TO@ MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @AT@ 18605 @LENGTH@ 114
------INS PrefixExpression@@!MergedAnnotation.missing().equals(mergedAnnotation) @TO@ IfStatement@@if (!MergedAnnotation.missing().equals(mergedAnnotation)) {  rabbitListener=mergedAnnotation.synthesize();} @AT@ 18609 @LENGTH@ 52
---------INS Operator@@! @TO@ PrefixExpression@@!MergedAnnotation.missing().equals(mergedAnnotation) @AT@ 18609 @LENGTH@ 1
---------INS MethodInvocation@@MergedAnnotation.missing().equals(mergedAnnotation) @TO@ PrefixExpression@@!MergedAnnotation.missing().equals(mergedAnnotation) @AT@ 18610 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:missing:[] @TO@ MethodInvocation@@MergedAnnotation.missing().equals(mergedAnnotation) @AT@ 18610 @LENGTH@ 26
------------INS SimpleName@@Name:MergedAnnotation @TO@ MethodInvocation@@MergedAnnotation.missing().equals(mergedAnnotation) @AT@ 18610 @LENGTH@ 16
------------INS SimpleName@@MethodName:equals:[mergedAnnotation] @TO@ MethodInvocation@@MergedAnnotation.missing().equals(mergedAnnotation) @AT@ 18637 @LENGTH@ 24
---------------INS SimpleName@@mergedAnnotation @TO@ SimpleName@@MethodName:equals:[mergedAnnotation] @AT@ 18644 @LENGTH@ 16
------INS Block@@ThenBody:{  rabbitListener=mergedAnnotation.synthesize();} @TO@ IfStatement@@if (!MergedAnnotation.missing().equals(mergedAnnotation)) {  rabbitListener=mergedAnnotation.synthesize();} @AT@ 18663 @LENGTH@ 56
---------INS ExpressionStatement@@Assignment:rabbitListener=mergedAnnotation.synthesize() @TO@ Block@@ThenBody:{  rabbitListener=mergedAnnotation.synthesize();} @AT@ 18668 @LENGTH@ 47
------------INS Assignment@@rabbitListener=mergedAnnotation.synthesize() @TO@ ExpressionStatement@@Assignment:rabbitListener=mergedAnnotation.synthesize() @AT@ 18668 @LENGTH@ 46
---------------INS SimpleName@@rabbitListener @TO@ Assignment@@rabbitListener=mergedAnnotation.synthesize() @AT@ 18668 @LENGTH@ 14
---------------INS Operator@@= @TO@ Assignment@@rabbitListener=mergedAnnotation.synthesize() @AT@ 18682 @LENGTH@ 1
---------------INS MethodInvocation@@mergedAnnotation.synthesize() @TO@ Assignment@@rabbitListener=mergedAnnotation.synthesize() @AT@ 18685 @LENGTH@ 29
------------------INS SimpleName@@Name:mergedAnnotation @TO@ MethodInvocation@@mergedAnnotation.synthesize() @AT@ 18685 @LENGTH@ 16
------------------INS SimpleName@@MethodName:synthesize:[] @TO@ MethodInvocation@@mergedAnnotation.synthesize() @AT@ 18702 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]BasicAuthenticationConverterTests,  @AT@ 4454 @LENGTH@ 216
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError,  @AT@ 4454 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError,  @AT@ 4461 @LENGTH@ 4
---INS SimpleName@@MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError,  @AT@ 4466 @LENGTH@ 54
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError,  @AT@ 4527 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 4527 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 4550 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 4550 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 4560 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 4560 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 4564 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","Basic ") @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError,  @AT@ 4592 @LENGTH@ 45
------INS MethodInvocation@@request.addHeader("Authorization","Basic ") @TO@ ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","Basic ") @AT@ 4592 @LENGTH@ 44
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader("Authorization","Basic ") @AT@ 4592 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["Authorization", "Basic "] @TO@ MethodInvocation@@request.addHeader("Authorization","Basic ") @AT@ 4600 @LENGTH@ 36
------------INS StringLiteral@@"Authorization" @TO@ SimpleName@@MethodName:addHeader:["Authorization", "Basic "] @AT@ 4610 @LENGTH@ 15
------------INS StringLiteral@@"Basic " @TO@ SimpleName@@MethodName:addHeader:["Authorization", "Basic "] @AT@ 4627 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:converter.convert(request) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenEmptyBasicAuthorizationHeaderTokenThenError,  @AT@ 4640 @LENGTH@ 27
------INS MethodInvocation@@converter.convert(request) @TO@ ExpressionStatement@@MethodInvocation:converter.convert(request) @AT@ 4640 @LENGTH@ 26
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convert(request) @AT@ 4640 @LENGTH@ 9
---------INS SimpleName@@MethodName:convert:[request] @TO@ MethodInvocation@@converter.convert(request) @AT@ 4650 @LENGTH@ 16
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:convert:[request] @AT@ 4658 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @WebAppConfiguration, public]SecurityMockMvcRequestPostProcessorsOAuth2ClientTests,  @AT@ 5102 @LENGTH@ 239
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5102 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5109 @LENGTH@ 4
---INS SimpleName@@MethodName:oauth2ClientWhenPrincipalNameThenUses @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5114 @LENGTH@ 37
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5161 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))).andExpect(content().string("test-subject")) @TO@ MethodDeclaration@@public, void, MethodName:oauth2ClientWhenPrincipalNameThenUses, Exception,  @AT@ 5175 @LENGTH@ 163
------INS MethodInvocation@@this.mvc.perform(get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))).andExpect(content().string("test-subject")) @TO@ ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))).andExpect(content().string("test-subject")) @AT@ 5175 @LENGTH@ 162
---------INS MethodInvocation@@MethodName:perform:[get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))] @TO@ MethodInvocation@@this.mvc.perform(get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))).andExpect(content().string("test-subject")) @AT@ 5175 @LENGTH@ 113
------------INS MethodInvocation@@get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject")) @TO@ MethodInvocation@@MethodName:perform:[get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))] @AT@ 5192 @LENGTH@ 95
---------------INS MethodInvocation@@MethodName:get:["/principal-name"] @TO@ MethodInvocation@@get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject")) @AT@ 5192 @LENGTH@ 22
------------------INS StringLiteral@@"/principal-name" @TO@ MethodInvocation@@MethodName:get:["/principal-name"] @AT@ 5196 @LENGTH@ 17
---------------INS SimpleName@@MethodName:with:[oauth2Client("registration-id").principalName("test-subject")] @TO@ MethodInvocation@@get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject")) @AT@ 5220 @LENGTH@ 67
------------------INS MethodInvocation@@oauth2Client("registration-id").principalName("test-subject") @TO@ SimpleName@@MethodName:with:[oauth2Client("registration-id").principalName("test-subject")] @AT@ 5225 @LENGTH@ 61
---------------------INS MethodInvocation@@MethodName:oauth2Client:["registration-id"] @TO@ MethodInvocation@@oauth2Client("registration-id").principalName("test-subject") @AT@ 5225 @LENGTH@ 31
------------------------INS StringLiteral@@"registration-id" @TO@ MethodInvocation@@MethodName:oauth2Client:["registration-id"] @AT@ 5238 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:principalName:["test-subject"] @TO@ MethodInvocation@@oauth2Client("registration-id").principalName("test-subject") @AT@ 5257 @LENGTH@ 29
------------------------INS StringLiteral@@"test-subject" @TO@ SimpleName@@MethodName:principalName:["test-subject"] @AT@ 5271 @LENGTH@ 14
---------INS FieldAccess@@this.mvc @TO@ MethodInvocation@@this.mvc.perform(get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))).andExpect(content().string("test-subject")) @AT@ 5175 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mvc @AT@ 5175 @LENGTH@ 4
------------INS SimpleName@@mvc @TO@ FieldAccess@@this.mvc @AT@ 5180 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[content().string("test-subject")] @TO@ MethodInvocation@@this.mvc.perform(get("/principal-name").with(oauth2Client("registration-id").principalName("test-subject"))).andExpect(content().string("test-subject")) @AT@ 5294 @LENGTH@ 43
------------INS MethodInvocation@@content().string("test-subject") @TO@ SimpleName@@MethodName:andExpect:[content().string("test-subject")] @AT@ 5304 @LENGTH@ 32
---------------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@content().string("test-subject") @AT@ 5304 @LENGTH@ 9
---------------INS SimpleName@@MethodName:string:["test-subject"] @TO@ MethodInvocation@@content().string("test-subject") @AT@ 5314 @LENGTH@ 22
------------------INS StringLiteral@@"test-subject" @TO@ SimpleName@@MethodName:string:["test-subject"] @AT@ 5321 @LENGTH@ 14


DEL FieldDeclaration@@ReactiveClientRegistrationRepository, [clientRegistrationRepository] @AT@ 2101 @LENGTH@ 66
---DEL SimpleType@@ReactiveClientRegistrationRepository @AT@ 2101 @LENGTH@ 36
---DEL VariableDeclarationFragment@@clientRegistrationRepository @AT@ 2138 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 2138 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:addMapping("org.springframework.security.oauth2.server.resource.InvalidBearerTokenException",AuthenticationFailureBadCredentialsEvent.class) @TO@ MethodDeclaration@@public, voidMethodName:DefaultAuthenticationEventPublisher, ApplicationEventPublisher applicationEventPublisher,  @AT@ 4855 @LENGTH@ 151
---INS MethodInvocation@@addMapping("org.springframework.security.oauth2.server.resource.InvalidBearerTokenException",AuthenticationFailureBadCredentialsEvent.class) @TO@ ExpressionStatement@@MethodInvocation:addMapping("org.springframework.security.oauth2.server.resource.InvalidBearerTokenException",AuthenticationFailureBadCredentialsEvent.class) @AT@ 4855 @LENGTH@ 150
------INS SimpleName@@MethodName:addMapping:["org.springframework.security.oauth2.server.resource.InvalidBearerTokenException", AuthenticationFailureBadCredentialsEvent.class] @TO@ MethodInvocation@@addMapping("org.springframework.security.oauth2.server.resource.InvalidBearerTokenException",AuthenticationFailureBadCredentialsEvent.class) @AT@ 4855 @LENGTH@ 150
---------INS StringLiteral@@"org.springframework.security.oauth2.server.resource.InvalidBearerTokenException" @TO@ SimpleName@@MethodName:addMapping:["org.springframework.security.oauth2.server.resource.InvalidBearerTokenException", AuthenticationFailureBadCredentialsEvent.class] @AT@ 4871 @LENGTH@ 81
---------INS TypeLiteral@@AuthenticationFailureBadCredentialsEvent.class @TO@ SimpleName@@MethodName:addMapping:["org.springframework.security.oauth2.server.resource.InvalidBearerTokenException", AuthenticationFailureBadCredentialsEvent.class] @AT@ 4958 @LENGTH@ 46


INS MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @TO@ TypeDeclaration@@[public]ApacheDSContainerTests,  @AT@ 6285 @LENGTH@ 410
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 6285 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 6292 @LENGTH@ 4
---INS SimpleName@@MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 6297 @LENGTH@ 56
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 6363 @LENGTH@ 9
---INS VariableDeclarationStatement@@ApacheDSContainer server=new ApacheDSContainer("dc=springframework,dc=org","classpath:test-server.ldif"); @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 6377 @LENGTH@ 112
------INS SimpleType@@ApacheDSContainer @TO@ VariableDeclarationStatement@@ApacheDSContainer server=new ApacheDSContainer("dc=springframework,dc=org","classpath:test-server.ldif"); @AT@ 6377 @LENGTH@ 17
------INS VariableDeclarationFragment@@server=new ApacheDSContainer("dc=springframework,dc=org","classpath:test-server.ldif") @TO@ VariableDeclarationStatement@@ApacheDSContainer server=new ApacheDSContainer("dc=springframework,dc=org","classpath:test-server.ldif"); @AT@ 6395 @LENGTH@ 93
---------INS SimpleName@@server @TO@ VariableDeclarationFragment@@server=new ApacheDSContainer("dc=springframework,dc=org","classpath:test-server.ldif") @AT@ 6395 @LENGTH@ 6
---------INS ClassInstanceCreation@@ApacheDSContainer["dc=springframework,dc=org", "classpath:test-server.ldif"] @TO@ VariableDeclarationFragment@@server=new ApacheDSContainer("dc=springframework,dc=org","classpath:test-server.ldif") @AT@ 6404 @LENGTH@ 84
------------INS New@@new @TO@ ClassInstanceCreation@@ApacheDSContainer["dc=springframework,dc=org", "classpath:test-server.ldif"] @AT@ 6404 @LENGTH@ 3
------------INS SimpleType@@ApacheDSContainer @TO@ ClassInstanceCreation@@ApacheDSContainer["dc=springframework,dc=org", "classpath:test-server.ldif"] @AT@ 6408 @LENGTH@ 17
------------INS StringLiteral@@"dc=springframework,dc=org" @TO@ ClassInstanceCreation@@ApacheDSContainer["dc=springframework,dc=org", "classpath:test-server.ldif"] @AT@ 6426 @LENGTH@ 27
------------INS StringLiteral@@"classpath:test-server.ldif" @TO@ ClassInstanceCreation@@ApacheDSContainer["dc=springframework,dc=org", "classpath:test-server.ldif"] @AT@ 6459 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:server.setPort(0) @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 6492 @LENGTH@ 18
------INS MethodInvocation@@server.setPort(0) @TO@ ExpressionStatement@@MethodInvocation:server.setPort(0) @AT@ 6492 @LENGTH@ 17
---------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.setPort(0) @AT@ 6492 @LENGTH@ 6
---------INS SimpleName@@MethodName:setPort:[0] @TO@ MethodInvocation@@server.setPort(0) @AT@ 6499 @LENGTH@ 10
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setPort:[0] @AT@ 6507 @LENGTH@ 1
---INS TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isEqualTo(0);  assertThat(server.getLocalPort()).isNotEqualTo(0);}  finally {  server.destroy();} @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSetWhenPortIsZeroThenRandomPortIsSelected, Exception,  @AT@ 6513 @LENGTH@ 179
------INS ExpressionStatement@@MethodInvocation:server.afterPropertiesSet() @TO@ TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isEqualTo(0);  assertThat(server.getLocalPort()).isNotEqualTo(0);}  finally {  server.destroy();} @AT@ 6522 @LENGTH@ 28
---------INS MethodInvocation@@server.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:server.afterPropertiesSet() @AT@ 6522 @LENGTH@ 27
------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.afterPropertiesSet() @AT@ 6522 @LENGTH@ 6
------------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@server.afterPropertiesSet() @AT@ 6529 @LENGTH@ 20
------INS ExpressionStatement@@MethodInvocation:assertThat(server.getPort()).isEqualTo(0) @TO@ TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isEqualTo(0);  assertThat(server.getLocalPort()).isNotEqualTo(0);}  finally {  server.destroy();} @AT@ 6555 @LENGTH@ 42
---------INS MethodInvocation@@assertThat(server.getPort()).isEqualTo(0) @TO@ ExpressionStatement@@MethodInvocation:assertThat(server.getPort()).isEqualTo(0) @AT@ 6555 @LENGTH@ 41
------------INS MethodInvocation@@MethodName:assertThat:[server.getPort()] @TO@ MethodInvocation@@assertThat(server.getPort()).isEqualTo(0) @AT@ 6555 @LENGTH@ 28
---------------INS MethodInvocation@@server.getPort() @TO@ MethodInvocation@@MethodName:assertThat:[server.getPort()] @AT@ 6566 @LENGTH@ 16
------------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.getPort() @AT@ 6566 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@server.getPort() @AT@ 6573 @LENGTH@ 9
------------INS SimpleName@@MethodName:isEqualTo:[0] @TO@ MethodInvocation@@assertThat(server.getPort()).isEqualTo(0) @AT@ 6584 @LENGTH@ 12
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:isEqualTo:[0] @AT@ 6594 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:assertThat(server.getLocalPort()).isNotEqualTo(0) @TO@ TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isEqualTo(0);  assertThat(server.getLocalPort()).isNotEqualTo(0);}  finally {  server.destroy();} @AT@ 6601 @LENGTH@ 50
---------INS MethodInvocation@@assertThat(server.getLocalPort()).isNotEqualTo(0) @TO@ ExpressionStatement@@MethodInvocation:assertThat(server.getLocalPort()).isNotEqualTo(0) @AT@ 6601 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:assertThat:[server.getLocalPort()] @TO@ MethodInvocation@@assertThat(server.getLocalPort()).isNotEqualTo(0) @AT@ 6601 @LENGTH@ 33
---------------INS MethodInvocation@@server.getLocalPort() @TO@ MethodInvocation@@MethodName:assertThat:[server.getLocalPort()] @AT@ 6612 @LENGTH@ 21
------------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.getLocalPort() @AT@ 6612 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getLocalPort:[] @TO@ MethodInvocation@@server.getLocalPort() @AT@ 6619 @LENGTH@ 14
------------INS SimpleName@@MethodName:isNotEqualTo:[0] @TO@ MethodInvocation@@assertThat(server.getLocalPort()).isNotEqualTo(0) @AT@ 6635 @LENGTH@ 15
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:isNotEqualTo:[0] @AT@ 6648 @LENGTH@ 1
------INS Block@@FinallyBody:{  server.destroy();} @TO@ TryStatement@@try {  server.afterPropertiesSet();  assertThat(server.getPort()).isEqualTo(0);  assertThat(server.getLocalPort()).isNotEqualTo(0);}  finally {  server.destroy();} @AT@ 6666 @LENGTH@ 26
---------INS ExpressionStatement@@MethodInvocation:server.destroy() @TO@ Block@@FinallyBody:{  server.destroy();} @AT@ 6671 @LENGTH@ 17
------------INS MethodInvocation@@server.destroy() @TO@ ExpressionStatement@@MethodInvocation:server.destroy() @AT@ 6671 @LENGTH@ 16
---------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.destroy() @AT@ 6671 @LENGTH@ 6
---------------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@server.destroy() @AT@ 6678 @LENGTH@ 9


UPD TypeDeclaration@@[@org.apache.camel.spi.annotations.Language("tokenize"), public]TokenizeLanguage, [Language, IsSingleton] @TO@ [@org.apache.camel.spi.annotations.Language("tokenize"), public]TokenizeLanguage, [Language, IsSingleton, GeneratedPropertyConfigurer] @AT@ 1743 @LENGTH@ 5953
---INS SimpleType@@GeneratedPropertyConfigurer @TO@ TypeDeclaration@@[@org.apache.camel.spi.annotations.Language("tokenize"), public]TokenizeLanguage, [Language, IsSingleton] @AT@ 2026 @LENGTH@ 27


DEL MethodDeclaration@@private, Integer, MethodName:determineLimit,  @AT@ 3052 @LENGTH@ 118
---DEL Modifier@@private @AT@ 3052 @LENGTH@ 7
---DEL SimpleType@@Integer @AT@ 3060 @LENGTH@ 7
---DEL SimpleName@@MethodName:determineLimit @AT@ 3068 @LENGTH@ 14
---DEL ReturnStatement@@MethodInvocation:exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @AT@ 3095 @LENGTH@ 69
------DEL MethodInvocation@@exchange.getIn().getHeader(DdbConstants.LIMIT,Integer.class) @AT@ 3102 @LENGTH@ 61
---------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 3102 @LENGTH@ 16
---------DEL SimpleName@@Name:exchange @AT@ 3102 @LENGTH@ 8
---------DEL SimpleName@@MethodName:getHeader:[DdbConstants.LIMIT, Integer.class] @AT@ 3119 @LENGTH@ 44
------------DEL QualifiedName@@DdbConstants.LIMIT @AT@ 3129 @LENGTH@ 18
---------------DEL SimpleName@@DdbConstants @AT@ 3129 @LENGTH@ 12
---------------DEL SimpleName@@LIMIT @AT@ 3142 @LENGTH@ 5
------------DEL TypeLiteral@@Integer.class @AT@ 3149 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:Mono.just(exchange.getRequest()).map(r -> r.getMethod()).filter(m -> ALLOWED_METHODS.contains(m)).flatMap(m -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @TO@ MethodInvocation:Mono.just(exchange.getRequest()).flatMap(r -> Mono.justOrEmpty(r.getMethod())).filter(m -> ALLOWED_METHODS.contains(m)).flatMap(m -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @AT@ 7887 @LENGTH@ 197
---UPD MethodInvocation@@Mono.just(exchange.getRequest()).map(r -> r.getMethod()).filter(m -> ALLOWED_METHODS.contains(m)).flatMap(m -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @TO@ Mono.just(exchange.getRequest()).flatMap(r -> Mono.justOrEmpty(r.getMethod())).filter(m -> ALLOWED_METHODS.contains(m)).flatMap(m -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @AT@ 7894 @LENGTH@ 189
------UPD MethodInvocation@@MethodName:map:[r -> r.getMethod()] @TO@ MethodName:flatMap:[r -> Mono.justOrEmpty(r.getMethod())] @AT@ 7894 @LENGTH@ 61
---------UPD LambdaExpression@@r -> r.getMethod() @TO@ r -> Mono.justOrEmpty(r.getMethod()) @AT@ 7936 @LENGTH@ 18
------------DEL MethodInvocation@@r.getMethod() @AT@ 7941 @LENGTH@ 13
------------INS MethodInvocation@@Mono.justOrEmpty(r.getMethod()) @TO@ LambdaExpression@@r -> r.getMethod() @AT@ 7972 @LENGTH@ 31
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.justOrEmpty(r.getMethod()) @AT@ 7972 @LENGTH@ 4
---------------INS SimpleName@@MethodName:justOrEmpty:[r.getMethod()] @TO@ MethodInvocation@@Mono.justOrEmpty(r.getMethod()) @AT@ 7977 @LENGTH@ 26
------------------INS MethodInvocation@@r.getMethod() @TO@ SimpleName@@MethodName:justOrEmpty:[r.getMethod()] @AT@ 7989 @LENGTH@ 13
---------------------MOV SimpleName@@Name:r @TO@ MethodInvocation@@r.getMethod() @AT@ 7941 @LENGTH@ 1
---------------------MOV SimpleName@@MethodName:getMethod:[] @TO@ MethodInvocation@@r.getMethod() @AT@ 7943 @LENGTH@ 11


UPD VariableDeclarationStatement@@String xml=new String(Saml2Utils.decode(responseUrlDecoded),UTF_8); @TO@ String xml=new String(Saml2Utils.samlDecode(responseUrlDecoded),UTF_8); @AT@ 1993 @LENGTH@ 70
---UPD VariableDeclarationFragment@@xml=new String(Saml2Utils.decode(responseUrlDecoded),UTF_8) @TO@ xml=new String(Saml2Utils.samlDecode(responseUrlDecoded),UTF_8) @AT@ 2000 @LENGTH@ 62
------UPD ClassInstanceCreation@@String[Saml2Utils.decode(responseUrlDecoded), UTF_8] @TO@ String[Saml2Utils.samlDecode(responseUrlDecoded), UTF_8] @AT@ 2006 @LENGTH@ 56
---------UPD MethodInvocation@@Saml2Utils.decode(responseUrlDecoded) @TO@ Saml2Utils.samlDecode(responseUrlDecoded) @AT@ 2017 @LENGTH@ 37
------------UPD SimpleName@@MethodName:decode:[responseUrlDecoded] @TO@ MethodName:samlDecode:[responseUrlDecoded] @AT@ 2028 @LENGTH@ 26


DEL FieldDeclaration@@ClientRegistrationRepository, [clientRegistrationRepository] @AT@ 2118 @LENGTH@ 58
---DEL SimpleType@@ClientRegistrationRepository @AT@ 2118 @LENGTH@ 28
---DEL VariableDeclarationFragment@@clientRegistrationRepository @AT@ 2147 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 2147 @LENGTH@ 28


UPD ExpressionStatement@@Assignment:this.analyticsClient=new DefaultAnalyticsApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient) @TO@ Assignment:this.analyticsClient=new DefaultAnalyticsApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient,loginConfig) @AT@ 2564 @LENGTH@ 143
---UPD Assignment@@this.analyticsClient=new DefaultAnalyticsApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient) @TO@ this.analyticsClient=new DefaultAnalyticsApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient,loginConfig) @AT@ 2564 @LENGTH@ 142
------UPD ClassInstanceCreation@@DefaultAnalyticsApiClient[(String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION), session, httpClient] @TO@ DefaultAnalyticsApiClient[(String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION), session, httpClient, loginConfig] @AT@ 2587 @LENGTH@ 119
---------INS SimpleName@@loginConfig @TO@ ClassInstanceCreation@@DefaultAnalyticsApiClient[(String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION), session, httpClient] @AT@ 2707 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @TO@ TypeDeclaration@@[public]DefaultRouteContext, [RouteContext] @AT@ 18555 @LENGTH@ 107
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 18555 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 18562 @LENGTH@ 4
---INS SimpleName@@MethodName:removeErrorHandlers @TO@ MethodDeclaration@@public, void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 18567 @LENGTH@ 19
---INS SingleVariableDeclaration@@ErrorHandlerFactory factory @TO@ MethodDeclaration@@public, void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 18587 @LENGTH@ 27
------INS SimpleType@@ErrorHandlerFactory @TO@ SingleVariableDeclaration@@ErrorHandlerFactory factory @AT@ 18587 @LENGTH@ 19
------INS SimpleName@@factory @TO@ SingleVariableDeclaration@@ErrorHandlerFactory factory @AT@ 18607 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:errorHandlers.remove(factory) @TO@ MethodDeclaration@@public, void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 18626 @LENGTH@ 30
------INS MethodInvocation@@errorHandlers.remove(factory) @TO@ ExpressionStatement@@MethodInvocation:errorHandlers.remove(factory) @AT@ 18626 @LENGTH@ 29
---------INS SimpleName@@Name:errorHandlers @TO@ MethodInvocation@@errorHandlers.remove(factory) @AT@ 18626 @LENGTH@ 13
---------INS SimpleName@@MethodName:remove:[factory] @TO@ MethodInvocation@@errorHandlers.remove(factory) @AT@ 18640 @LENGTH@ 15
------------INS SimpleName@@factory @TO@ SimpleName@@MethodName:remove:[factory] @AT@ 18647 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new Saml2WebSsoAuthenticationRequestFilter(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository,authenticationRequestResolver) @TO@ MethodInvocation:postProcess(new Saml2WebSsoAuthenticationRequestFilter(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository,authenticationRequestResolver)) @AT@ 12185 @LENGTH@ 158
---INS MethodInvocation@@postProcess(new Saml2WebSsoAuthenticationRequestFilter(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository,authenticationRequestResolver)) @TO@ ReturnStatement@@ClassInstanceCreation:new Saml2WebSsoAuthenticationRequestFilter(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository,authenticationRequestResolver) @AT@ 12192 @LENGTH@ 163
------INS SimpleName@@MethodName:postProcess:[new Saml2WebSsoAuthenticationRequestFilter(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository,authenticationRequestResolver)] @TO@ MethodInvocation@@postProcess(new Saml2WebSsoAuthenticationRequestFilter(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository,authenticationRequestResolver)) @AT@ 12192 @LENGTH@ 163
---------MOV ClassInstanceCreation@@Saml2WebSsoAuthenticationRequestFilter[Saml2LoginConfigurer.this.relyingPartyRegistrationRepository, authenticationRequestResolver] @TO@ SimpleName@@MethodName:postProcess:[new Saml2WebSsoAuthenticationRequestFilter(Saml2LoginConfigurer.this.relyingPartyRegistrationRepository,authenticationRequestResolver)] @AT@ 12192 @LENGTH@ 150


INS MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @TO@ TypeDeclaration@@[public]QueryTests,  @AT@ 11964 @LENGTH@ 347
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 11964 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 11971 @LENGTH@ 4
---INS SimpleName@@MethodName:queryOfShouldWorkOnProxiedObjects @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 11976 @LENGTH@ 33
---INS VariableDeclarationStatement@@BasicQuery source=new BasicQuery("{ 'foo' : 'bar'}","{ '_id' : -1, 'foo' : 1 }"); @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 12017 @LENGTH@ 84
------INS SimpleType@@BasicQuery @TO@ VariableDeclarationStatement@@BasicQuery source=new BasicQuery("{ 'foo' : 'bar'}","{ '_id' : -1, 'foo' : 1 }"); @AT@ 12017 @LENGTH@ 10
------INS VariableDeclarationFragment@@source=new BasicQuery("{ 'foo' : 'bar'}","{ '_id' : -1, 'foo' : 1 }") @TO@ VariableDeclarationStatement@@BasicQuery source=new BasicQuery("{ 'foo' : 'bar'}","{ '_id' : -1, 'foo' : 1 }"); @AT@ 12028 @LENGTH@ 72
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new BasicQuery("{ 'foo' : 'bar'}","{ '_id' : -1, 'foo' : 1 }") @AT@ 12028 @LENGTH@ 6
---------INS ClassInstanceCreation@@BasicQuery["{ 'foo' : 'bar'}", "{ '_id' : -1, 'foo' : 1 }"] @TO@ VariableDeclarationFragment@@source=new BasicQuery("{ 'foo' : 'bar'}","{ '_id' : -1, 'foo' : 1 }") @AT@ 12037 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@BasicQuery["{ 'foo' : 'bar'}", "{ '_id' : -1, 'foo' : 1 }"] @AT@ 12037 @LENGTH@ 3
------------INS SimpleType@@BasicQuery @TO@ ClassInstanceCreation@@BasicQuery["{ 'foo' : 'bar'}", "{ '_id' : -1, 'foo' : 1 }"] @AT@ 12041 @LENGTH@ 10
------------INS StringLiteral@@"{ 'foo' : 'bar'}" @TO@ ClassInstanceCreation@@BasicQuery["{ 'foo' : 'bar'}", "{ '_id' : -1, 'foo' : 1 }"] @AT@ 12052 @LENGTH@ 18
------------INS StringLiteral@@"{ '_id' : -1, 'foo' : 1 }" @TO@ ClassInstanceCreation@@BasicQuery["{ 'foo' : 'bar'}", "{ '_id' : -1, 'foo' : 1 }"] @AT@ 12072 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:source.withHint("the hint") @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 12104 @LENGTH@ 28
------INS MethodInvocation@@source.withHint("the hint") @TO@ ExpressionStatement@@MethodInvocation:source.withHint("the hint") @AT@ 12104 @LENGTH@ 27
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.withHint("the hint") @AT@ 12104 @LENGTH@ 6
---------INS SimpleName@@MethodName:withHint:["the hint"] @TO@ MethodInvocation@@source.withHint("the hint") @AT@ 12111 @LENGTH@ 20
------------INS StringLiteral@@"the hint" @TO@ SimpleName@@MethodName:withHint:["the hint"] @AT@ 12120 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:source.limit(10) @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 12135 @LENGTH@ 17
------INS MethodInvocation@@source.limit(10) @TO@ ExpressionStatement@@MethodInvocation:source.limit(10) @AT@ 12135 @LENGTH@ 16
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.limit(10) @AT@ 12135 @LENGTH@ 6
---------INS SimpleName@@MethodName:limit:[10] @TO@ MethodInvocation@@source.limit(10) @AT@ 12142 @LENGTH@ 9
------------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:limit:[10] @AT@ 12148 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:source.setSortObject(new Document("_id",1)) @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 12155 @LENGTH@ 45
------INS MethodInvocation@@source.setSortObject(new Document("_id",1)) @TO@ ExpressionStatement@@MethodInvocation:source.setSortObject(new Document("_id",1)) @AT@ 12155 @LENGTH@ 44
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.setSortObject(new Document("_id",1)) @AT@ 12155 @LENGTH@ 6
---------INS SimpleName@@MethodName:setSortObject:[new Document("_id",1)] @TO@ MethodInvocation@@source.setSortObject(new Document("_id",1)) @AT@ 12162 @LENGTH@ 37
------------INS ClassInstanceCreation@@Document["_id", 1] @TO@ SimpleName@@MethodName:setSortObject:[new Document("_id",1)] @AT@ 12176 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@Document["_id", 1] @AT@ 12176 @LENGTH@ 3
---------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["_id", 1] @AT@ 12180 @LENGTH@ 8
---------------INS StringLiteral@@"_id" @TO@ ClassInstanceCreation@@Document["_id", 1] @AT@ 12189 @LENGTH@ 5
---------------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@Document["_id", 1] @AT@ 12196 @LENGTH@ 1
---INS VariableDeclarationStatement@@Query target=Query.of((Query)new ProxyFactory(source).getProxy()); @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 12204 @LENGTH@ 69
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query target=Query.of((Query)new ProxyFactory(source).getProxy()); @AT@ 12204 @LENGTH@ 5
------INS VariableDeclarationFragment@@target=Query.of((Query)new ProxyFactory(source).getProxy()) @TO@ VariableDeclarationStatement@@Query target=Query.of((Query)new ProxyFactory(source).getProxy()); @AT@ 12210 @LENGTH@ 62
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=Query.of((Query)new ProxyFactory(source).getProxy()) @AT@ 12210 @LENGTH@ 6
---------INS MethodInvocation@@Query.of((Query)new ProxyFactory(source).getProxy()) @TO@ VariableDeclarationFragment@@target=Query.of((Query)new ProxyFactory(source).getProxy()) @AT@ 12219 @LENGTH@ 53
------------INS SimpleName@@Name:Query @TO@ MethodInvocation@@Query.of((Query)new ProxyFactory(source).getProxy()) @AT@ 12219 @LENGTH@ 5
------------INS SimpleName@@MethodName:of:[(Query)new ProxyFactory(source).getProxy()] @TO@ MethodInvocation@@Query.of((Query)new ProxyFactory(source).getProxy()) @AT@ 12225 @LENGTH@ 47
---------------INS CastExpression@@(Query)new ProxyFactory(source).getProxy() @TO@ SimpleName@@MethodName:of:[(Query)new ProxyFactory(source).getProxy()] @AT@ 12228 @LENGTH@ 43
------------------INS SimpleType@@Query @TO@ CastExpression@@(Query)new ProxyFactory(source).getProxy() @AT@ 12229 @LENGTH@ 5
------------------INS MethodInvocation@@new ProxyFactory(source).getProxy() @TO@ CastExpression@@(Query)new ProxyFactory(source).getProxy() @AT@ 12236 @LENGTH@ 35
---------------------INS ClassInstanceCreation@@ProxyFactory[source] @TO@ MethodInvocation@@new ProxyFactory(source).getProxy() @AT@ 12236 @LENGTH@ 24
------------------------INS New@@new @TO@ ClassInstanceCreation@@ProxyFactory[source] @AT@ 12236 @LENGTH@ 3
------------------------INS SimpleType@@ProxyFactory @TO@ ClassInstanceCreation@@ProxyFactory[source] @AT@ 12240 @LENGTH@ 12
------------------------INS SimpleName@@source @TO@ ClassInstanceCreation@@ProxyFactory[source] @AT@ 12253 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getProxy:[] @TO@ MethodInvocation@@new ProxyFactory(source).getProxy() @AT@ 12261 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:compareQueries(target,source) @TO@ MethodDeclaration@@public, void, MethodName:queryOfShouldWorkOnProxiedObjects,  @AT@ 12277 @LENGTH@ 31
------INS MethodInvocation@@compareQueries(target,source) @TO@ ExpressionStatement@@MethodInvocation:compareQueries(target,source) @AT@ 12277 @LENGTH@ 30
---------INS SimpleName@@MethodName:compareQueries:[target, source] @TO@ MethodInvocation@@compareQueries(target,source) @AT@ 12277 @LENGTH@ 30
------------INS SimpleName@@target @TO@ SimpleName@@MethodName:compareQueries:[target, source] @AT@ 12292 @LENGTH@ 6
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:compareQueries:[target, source] @AT@ 12300 @LENGTH@ 6


INS MethodDeclaration@@Mono<Long>, MethodName:countAllByNameOrName, String aName, String anotherName,  @TO@ TypeDeclaration@@[public]ReactivePersonRepository, [ReactiveNeo4jRepository<PersonWithAllConstructor,Long>] @AT@ 1949 @LENGTH@ 55
---INS ParameterizedType@@Mono<Long> @TO@ MethodDeclaration@@Mono<Long>, MethodName:countAllByNameOrName, String aName, String anotherName,  @AT@ 1938 @LENGTH@ 10
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Long> @AT@ 1938 @LENGTH@ 4
------INS SimpleType@@Long @TO@ ParameterizedType@@Mono<Long> @AT@ 1943 @LENGTH@ 4
---INS SimpleName@@MethodName:countAllByNameOrName @TO@ MethodDeclaration@@Mono<Long>, MethodName:countAllByNameOrName, String aName, String anotherName,  @AT@ 1949 @LENGTH@ 20
---INS SingleVariableDeclaration@@String aName @TO@ MethodDeclaration@@Mono<Long>, MethodName:countAllByNameOrName, String aName, String anotherName,  @AT@ 1970 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String aName @AT@ 1970 @LENGTH@ 6
------INS SimpleName@@aName @TO@ SingleVariableDeclaration@@String aName @AT@ 1977 @LENGTH@ 5
---INS SingleVariableDeclaration@@String anotherName @TO@ MethodDeclaration@@Mono<Long>, MethodName:countAllByNameOrName, String aName, String anotherName,  @AT@ 1984 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String anotherName @AT@ 1984 @LENGTH@ 6
------INS SimpleName@@anotherName @TO@ SingleVariableDeclaration@@String anotherName @AT@ 1991 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:Assert.state(validatorValue == 1 || validatorValue == 2 || validatorValue == 4,"Only one LineTokenizer option may be configured") @TO@ MethodInvocation:Assert.state(validatorValue == 0 || validatorValue == 1 || validatorValue == 2 || validatorValue == 4,"Only one LineTokenizer option may be configured") @AT@ 15069 @LENGTH@ 136
---UPD MethodInvocation@@Assert.state(validatorValue == 1 || validatorValue == 2 || validatorValue == 4,"Only one LineTokenizer option may be configured") @TO@ Assert.state(validatorValue == 0 || validatorValue == 1 || validatorValue == 2 || validatorValue == 4,"Only one LineTokenizer option may be configured") @AT@ 15069 @LENGTH@ 135
------UPD SimpleName@@MethodName:state:[validatorValue == 1 || validatorValue == 2 || validatorValue == 4, "Only one LineTokenizer option may be configured"] @TO@ MethodName:state:[validatorValue == 0 || validatorValue == 1 || validatorValue == 2 || validatorValue == 4, "Only one LineTokenizer option may be configured"] @AT@ 15076 @LENGTH@ 128
---------UPD InfixExpression@@validatorValue == 1 || validatorValue == 2 || validatorValue == 4 @TO@ validatorValue == 0 || validatorValue == 1 || validatorValue == 2 || validatorValue == 4 @AT@ 15082 @LENGTH@ 65
------------UPD InfixExpression@@validatorValue == 1 || validatorValue == 2 @TO@ validatorValue == 0 || validatorValue == 1 || validatorValue == 2 @AT@ 15082 @LENGTH@ 42
---------------INS InfixExpression@@validatorValue == 0 || validatorValue == 1 @TO@ InfixExpression@@validatorValue == 1 || validatorValue == 2 @AT@ 15082 @LENGTH@ 42
------------------MOV InfixExpression@@validatorValue == 1 @TO@ InfixExpression@@validatorValue == 0 || validatorValue == 1 @AT@ 15082 @LENGTH@ 19
------------------INS InfixExpression@@validatorValue == 0 @TO@ InfixExpression@@validatorValue == 0 || validatorValue == 1 @AT@ 15082 @LENGTH@ 19
---------------------INS SimpleName@@validatorValue @TO@ InfixExpression@@validatorValue == 0 @AT@ 15082 @LENGTH@ 14
---------------------INS Operator@@== @TO@ InfixExpression@@validatorValue == 0 @AT@ 15096 @LENGTH@ 2
---------------------INS NumberLiteral@@0 @TO@ InfixExpression@@validatorValue == 0 @AT@ 15100 @LENGTH@ 1
------------------INS Operator@@|| @TO@ InfixExpression@@validatorValue == 0 || validatorValue == 1 @AT@ 15101 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @TO@ TypeDeclaration@@[public]KafkaConsumerFullTest, BaseEmbeddedKafkaTest @AT@ 4702 @LENGTH@ 854
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4702 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4709 @LENGTH@ 4
---INS SimpleName@@MethodName:kafkaRecordSpecificHeadersAreNotOverwritten @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4714 @LENGTH@ 43
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4767 @LENGTH@ 20
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4789 @LENGTH@ 11
---INS VariableDeclarationStatement@@String propagatedHeaderKey=KafkaConstants.TOPIC; @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4811 @LENGTH@ 50
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String propagatedHeaderKey=KafkaConstants.TOPIC; @AT@ 4811 @LENGTH@ 6
------INS VariableDeclarationFragment@@propagatedHeaderKey=KafkaConstants.TOPIC @TO@ VariableDeclarationStatement@@String propagatedHeaderKey=KafkaConstants.TOPIC; @AT@ 4818 @LENGTH@ 42
---------INS SimpleName@@propagatedHeaderKey @TO@ VariableDeclarationFragment@@propagatedHeaderKey=KafkaConstants.TOPIC @AT@ 4818 @LENGTH@ 19
---------INS QualifiedName@@KafkaConstants.TOPIC @TO@ VariableDeclarationFragment@@propagatedHeaderKey=KafkaConstants.TOPIC @AT@ 4840 @LENGTH@ 20
------------INS SimpleName@@KafkaConstants @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 4840 @LENGTH@ 14
------------INS SimpleName@@TOPIC @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 4855 @LENGTH@ 5
---INS VariableDeclarationStatement@@byte[] propagatedHeaderValue="propagated incorrect topic".getBytes(); @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4870 @LENGTH@ 71
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] propagatedHeaderValue="propagated incorrect topic".getBytes(); @AT@ 4870 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4870 @LENGTH@ 4
------INS VariableDeclarationFragment@@propagatedHeaderValue="propagated incorrect topic".getBytes() @TO@ VariableDeclarationStatement@@byte[] propagatedHeaderValue="propagated incorrect topic".getBytes(); @AT@ 4877 @LENGTH@ 63
---------INS SimpleName@@propagatedHeaderValue @TO@ VariableDeclarationFragment@@propagatedHeaderValue="propagated incorrect topic".getBytes() @AT@ 4877 @LENGTH@ 21
---------INS MethodInvocation@@"propagated incorrect topic".getBytes() @TO@ VariableDeclarationFragment@@propagatedHeaderValue="propagated incorrect topic".getBytes() @AT@ 4901 @LENGTH@ 39
------------INS StringLiteral@@"propagated incorrect topic" @TO@ MethodInvocation@@"propagated incorrect topic".getBytes() @AT@ 4901 @LENGTH@ 28
------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"propagated incorrect topic".getBytes() @AT@ 4930 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:to.expectedHeaderReceived(KafkaConstants.TOPIC,TOPIC) @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 4950 @LENGTH@ 55
------INS MethodInvocation@@to.expectedHeaderReceived(KafkaConstants.TOPIC,TOPIC) @TO@ ExpressionStatement@@MethodInvocation:to.expectedHeaderReceived(KafkaConstants.TOPIC,TOPIC) @AT@ 4950 @LENGTH@ 54
---------INS SimpleName@@Name:to @TO@ MethodInvocation@@to.expectedHeaderReceived(KafkaConstants.TOPIC,TOPIC) @AT@ 4950 @LENGTH@ 2
---------INS SimpleName@@MethodName:expectedHeaderReceived:[KafkaConstants.TOPIC, TOPIC] @TO@ MethodInvocation@@to.expectedHeaderReceived(KafkaConstants.TOPIC,TOPIC) @AT@ 4953 @LENGTH@ 51
------------INS QualifiedName@@KafkaConstants.TOPIC @TO@ SimpleName@@MethodName:expectedHeaderReceived:[KafkaConstants.TOPIC, TOPIC] @AT@ 4976 @LENGTH@ 20
---------------INS SimpleName@@KafkaConstants @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 4976 @LENGTH@ 14
---------------INS SimpleName@@TOPIC @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 4991 @LENGTH@ 5
------------INS SimpleName@@TOPIC @TO@ SimpleName@@MethodName:expectedHeaderReceived:[KafkaConstants.TOPIC, TOPIC] @AT@ 4998 @LENGTH@ 5
---INS VariableDeclarationStatement@@ProducerRecord<String,String> data=new ProducerRecord<>(TOPIC,"1","message"); @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 5015 @LENGTH@ 82
------INS ParameterizedType@@ProducerRecord<String,String> @TO@ VariableDeclarationStatement@@ProducerRecord<String,String> data=new ProducerRecord<>(TOPIC,"1","message"); @AT@ 5015 @LENGTH@ 30
---------INS SimpleType@@ProducerRecord @TO@ ParameterizedType@@ProducerRecord<String,String> @AT@ 5015 @LENGTH@ 14
---------INS SimpleType@@String @TO@ ParameterizedType@@ProducerRecord<String,String> @AT@ 5030 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@ProducerRecord<String,String> @AT@ 5038 @LENGTH@ 6
------INS VariableDeclarationFragment@@data=new ProducerRecord<>(TOPIC,"1","message") @TO@ VariableDeclarationStatement@@ProducerRecord<String,String> data=new ProducerRecord<>(TOPIC,"1","message"); @AT@ 5046 @LENGTH@ 50
---------INS SimpleName@@data @TO@ VariableDeclarationFragment@@data=new ProducerRecord<>(TOPIC,"1","message") @AT@ 5046 @LENGTH@ 4
---------INS ClassInstanceCreation@@ProducerRecord<>[TOPIC, "1", "message"] @TO@ VariableDeclarationFragment@@data=new ProducerRecord<>(TOPIC,"1","message") @AT@ 5053 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@ProducerRecord<>[TOPIC, "1", "message"] @AT@ 5053 @LENGTH@ 3
------------INS ParameterizedType@@ProducerRecord<> @TO@ ClassInstanceCreation@@ProducerRecord<>[TOPIC, "1", "message"] @AT@ 5057 @LENGTH@ 16
---------------INS SimpleType@@ProducerRecord @TO@ ParameterizedType@@ProducerRecord<> @AT@ 5057 @LENGTH@ 14
------------INS SimpleName@@TOPIC @TO@ ClassInstanceCreation@@ProducerRecord<>[TOPIC, "1", "message"] @AT@ 5074 @LENGTH@ 5
------------INS StringLiteral@@"1" @TO@ ClassInstanceCreation@@ProducerRecord<>[TOPIC, "1", "message"] @AT@ 5081 @LENGTH@ 3
------------INS StringLiteral@@"message" @TO@ ClassInstanceCreation@@ProducerRecord<>[TOPIC, "1", "message"] @AT@ 5086 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:data.headers().add(new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)) @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 5106 @LENGTH@ 81
------INS MethodInvocation@@data.headers().add(new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)) @TO@ ExpressionStatement@@MethodInvocation:data.headers().add(new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)) @AT@ 5106 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:headers:[] @TO@ MethodInvocation@@data.headers().add(new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)) @AT@ 5106 @LENGTH@ 14
---------INS SimpleName@@Name:data @TO@ MethodInvocation@@data.headers().add(new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)) @AT@ 5106 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:[new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)] @TO@ MethodInvocation@@data.headers().add(new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)) @AT@ 5121 @LENGTH@ 65
------------INS ClassInstanceCreation@@RecordHeader[propagatedHeaderKey, propagatedHeaderValue] @TO@ SimpleName@@MethodName:add:[new RecordHeader(propagatedHeaderKey,propagatedHeaderValue)] @AT@ 5125 @LENGTH@ 60
---------------INS New@@new @TO@ ClassInstanceCreation@@RecordHeader[propagatedHeaderKey, propagatedHeaderValue] @AT@ 5125 @LENGTH@ 3
---------------INS SimpleType@@RecordHeader @TO@ ClassInstanceCreation@@RecordHeader[propagatedHeaderKey, propagatedHeaderValue] @AT@ 5129 @LENGTH@ 12
---------------INS SimpleName@@propagatedHeaderKey @TO@ ClassInstanceCreation@@RecordHeader[propagatedHeaderKey, propagatedHeaderValue] @AT@ 5142 @LENGTH@ 19
---------------INS SimpleName@@propagatedHeaderValue @TO@ ClassInstanceCreation@@RecordHeader[propagatedHeaderKey, propagatedHeaderValue] @AT@ 5163 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:producer.send(data) @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 5196 @LENGTH@ 20
------INS MethodInvocation@@producer.send(data) @TO@ ExpressionStatement@@MethodInvocation:producer.send(data) @AT@ 5196 @LENGTH@ 19
---------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.send(data) @AT@ 5196 @LENGTH@ 8
---------INS SimpleName@@MethodName:send:[data] @TO@ MethodInvocation@@producer.send(data) @AT@ 5205 @LENGTH@ 10
------------INS SimpleName@@data @TO@ SimpleName@@MethodName:send:[data] @AT@ 5210 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:to.assertIsSatisfied(3000) @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 5226 @LENGTH@ 27
------INS MethodInvocation@@to.assertIsSatisfied(3000) @TO@ ExpressionStatement@@MethodInvocation:to.assertIsSatisfied(3000) @AT@ 5226 @LENGTH@ 26
---------INS SimpleName@@Name:to @TO@ MethodInvocation@@to.assertIsSatisfied(3000) @AT@ 5226 @LENGTH@ 2
---------INS SimpleName@@MethodName:assertIsSatisfied:[3000] @TO@ MethodInvocation@@to.assertIsSatisfied(3000) @AT@ 5229 @LENGTH@ 23
------------INS NumberLiteral@@3000 @TO@ SimpleName@@MethodName:assertIsSatisfied:[3000] @AT@ 5247 @LENGTH@ 4
---INS VariableDeclarationStatement@@Map<String,Object> headers=to.getExchanges().get(0).getIn().getHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 5263 @LENGTH@ 76
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> headers=to.getExchanges().get(0).getIn().getHeaders(); @AT@ 5263 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 5263 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5267 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 5275 @LENGTH@ 6
------INS VariableDeclarationFragment@@headers=to.getExchanges().get(0).getIn().getHeaders() @TO@ VariableDeclarationStatement@@Map<String,Object> headers=to.getExchanges().get(0).getIn().getHeaders(); @AT@ 5283 @LENGTH@ 55
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=to.getExchanges().get(0).getIn().getHeaders() @AT@ 5283 @LENGTH@ 7
---------INS MethodInvocation@@to.getExchanges().get(0).getIn().getHeaders() @TO@ VariableDeclarationFragment@@headers=to.getExchanges().get(0).getIn().getHeaders() @AT@ 5293 @LENGTH@ 45
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@to.getExchanges().get(0).getIn().getHeaders() @AT@ 5293 @LENGTH@ 32
------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@to.getExchanges().get(0).getIn().getHeaders() @AT@ 5293 @LENGTH@ 24
---------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 5315 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getExchanges:[] @TO@ MethodInvocation@@to.getExchanges().get(0).getIn().getHeaders() @AT@ 5293 @LENGTH@ 17
------------INS SimpleName@@Name:to @TO@ MethodInvocation@@to.getExchanges().get(0).getIn().getHeaders() @AT@ 5293 @LENGTH@ 2
------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@to.getExchanges().get(0).getIn().getHeaders() @AT@ 5326 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertTrue("Should receive KafkaEndpoint populated kafka.TOPIC header",headers.containsKey(KafkaConstants.TOPIC)) @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 5348 @LENGTH@ 115
------INS MethodInvocation@@assertTrue("Should receive KafkaEndpoint populated kafka.TOPIC header",headers.containsKey(KafkaConstants.TOPIC)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Should receive KafkaEndpoint populated kafka.TOPIC header",headers.containsKey(KafkaConstants.TOPIC)) @AT@ 5348 @LENGTH@ 114
---------INS SimpleName@@MethodName:assertTrue:["Should receive KafkaEndpoint populated kafka.TOPIC header", headers.containsKey(KafkaConstants.TOPIC)] @TO@ MethodInvocation@@assertTrue("Should receive KafkaEndpoint populated kafka.TOPIC header",headers.containsKey(KafkaConstants.TOPIC)) @AT@ 5348 @LENGTH@ 114
------------INS StringLiteral@@"Should receive KafkaEndpoint populated kafka.TOPIC header" @TO@ SimpleName@@MethodName:assertTrue:["Should receive KafkaEndpoint populated kafka.TOPIC header", headers.containsKey(KafkaConstants.TOPIC)] @AT@ 5359 @LENGTH@ 59
------------INS MethodInvocation@@headers.containsKey(KafkaConstants.TOPIC) @TO@ SimpleName@@MethodName:assertTrue:["Should receive KafkaEndpoint populated kafka.TOPIC header", headers.containsKey(KafkaConstants.TOPIC)] @AT@ 5420 @LENGTH@ 41
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.containsKey(KafkaConstants.TOPIC) @AT@ 5420 @LENGTH@ 7
---------------INS SimpleName@@MethodName:containsKey:[KafkaConstants.TOPIC] @TO@ MethodInvocation@@headers.containsKey(KafkaConstants.TOPIC) @AT@ 5428 @LENGTH@ 33
------------------INS QualifiedName@@KafkaConstants.TOPIC @TO@ SimpleName@@MethodName:containsKey:[KafkaConstants.TOPIC] @AT@ 5440 @LENGTH@ 20
---------------------INS SimpleName@@KafkaConstants @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 5440 @LENGTH@ 14
---------------------INS SimpleName@@TOPIC @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 5455 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals("Topic name received",TOPIC,headers.get(KafkaConstants.TOPIC)) @TO@ MethodDeclaration@@public, void, MethodName:kafkaRecordSpecificHeadersAreNotOverwritten, InterruptedException, IOException,  @AT@ 5472 @LENGTH@ 78
------INS MethodInvocation@@assertEquals("Topic name received",TOPIC,headers.get(KafkaConstants.TOPIC)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Topic name received",TOPIC,headers.get(KafkaConstants.TOPIC)) @AT@ 5472 @LENGTH@ 77
---------INS SimpleName@@MethodName:assertEquals:["Topic name received", TOPIC, headers.get(KafkaConstants.TOPIC)] @TO@ MethodInvocation@@assertEquals("Topic name received",TOPIC,headers.get(KafkaConstants.TOPIC)) @AT@ 5472 @LENGTH@ 77
------------INS StringLiteral@@"Topic name received" @TO@ SimpleName@@MethodName:assertEquals:["Topic name received", TOPIC, headers.get(KafkaConstants.TOPIC)] @AT@ 5485 @LENGTH@ 21
------------INS SimpleName@@TOPIC @TO@ SimpleName@@MethodName:assertEquals:["Topic name received", TOPIC, headers.get(KafkaConstants.TOPIC)] @AT@ 5508 @LENGTH@ 5
------------INS MethodInvocation@@headers.get(KafkaConstants.TOPIC) @TO@ SimpleName@@MethodName:assertEquals:["Topic name received", TOPIC, headers.get(KafkaConstants.TOPIC)] @AT@ 5515 @LENGTH@ 33
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.get(KafkaConstants.TOPIC) @AT@ 5515 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:[KafkaConstants.TOPIC] @TO@ MethodInvocation@@headers.get(KafkaConstants.TOPIC) @AT@ 5523 @LENGTH@ 25
------------------INS QualifiedName@@KafkaConstants.TOPIC @TO@ SimpleName@@MethodName:get:[KafkaConstants.TOPIC] @AT@ 5527 @LENGTH@ 20
---------------------INS SimpleName@@KafkaConstants @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 5527 @LENGTH@ 14
---------------------INS SimpleName@@TOPIC @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 5542 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithInvalidToken,  @TO@ TypeDeclaration@@[public]DefaultTokenServicesTests,  @AT@ 1227 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithInvalidToken,  @AT@ 1227 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithInvalidToken,  @AT@ 1234 @LENGTH@ 4
---INS SimpleName@@MethodName:testLoadAuthenticationWithInvalidToken @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithInvalidToken,  @AT@ 1239 @LENGTH@ 38
---INS ExpressionStatement@@MethodInvocation:Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithInvalidToken,  @AT@ 1284 @LENGTH@ 96
------INS MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1284 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:when:[tokenStore.readAccessToken(Mockito.anyString())] @TO@ MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1284 @LENGTH@ 61
------------INS MethodInvocation@@tokenStore.readAccessToken(Mockito.anyString()) @TO@ MethodInvocation@@MethodName:when:[tokenStore.readAccessToken(Mockito.anyString())] @AT@ 1297 @LENGTH@ 47
---------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.readAccessToken(Mockito.anyString()) @AT@ 1297 @LENGTH@ 10
---------------INS SimpleName@@MethodName:readAccessToken:[Mockito.anyString()] @TO@ MethodInvocation@@tokenStore.readAccessToken(Mockito.anyString()) @AT@ 1308 @LENGTH@ 36
------------------INS MethodInvocation@@Mockito.anyString() @TO@ SimpleName@@MethodName:readAccessToken:[Mockito.anyString()] @AT@ 1324 @LENGTH@ 19
---------------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.anyString() @AT@ 1324 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:anyString:[] @TO@ MethodInvocation@@Mockito.anyString() @AT@ 1332 @LENGTH@ 11
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1284 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenThrow:[new RuntimeException()] @TO@ MethodInvocation@@Mockito.when(tokenStore.readAccessToken(Mockito.anyString())).thenThrow(new RuntimeException()) @AT@ 1346 @LENGTH@ 33
------------INS ClassInstanceCreation@@RuntimeException[] @TO@ SimpleName@@MethodName:thenThrow:[new RuntimeException()] @AT@ 1356 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[] @AT@ 1356 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[] @AT@ 1360 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:services.loadAuthentication("invalid-token") @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithInvalidToken,  @AT@ 1383 @LENGTH@ 45
------INS MethodInvocation@@services.loadAuthentication("invalid-token") @TO@ ExpressionStatement@@MethodInvocation:services.loadAuthentication("invalid-token") @AT@ 1383 @LENGTH@ 44
---------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.loadAuthentication("invalid-token") @AT@ 1383 @LENGTH@ 8
---------INS SimpleName@@MethodName:loadAuthentication:["invalid-token"] @TO@ MethodInvocation@@services.loadAuthentication("invalid-token") @AT@ 1392 @LENGTH@ 35
------------INS StringLiteral@@"invalid-token" @TO@ SimpleName@@MethodName:loadAuthentication:["invalid-token"] @AT@ 1411 @LENGTH@ 15


DEL MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationResponseRedirectUriNotEqualAuthorizationRequestRedirectUriThenThrowOAuth2AuthenticationException,  @AT@ 9082 @LENGTH@ 672
---DEL Modifier@@public @AT@ 9082 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 9089 @LENGTH@ 4
---DEL SimpleName@@MethodName:authenticateWhenAuthorizationResponseRedirectUriNotEqualAuthorizationRequestRedirectUriThenThrowOAuth2AuthenticationException @AT@ 9094 @LENGTH@ 125
---DEL ExpressionStatement@@MethodInvocation:this.exception.expect(OAuth2AuthenticationException.class) @AT@ 9226 @LENGTH@ 59
------DEL MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @AT@ 9226 @LENGTH@ 58
---------DEL FieldAccess@@this.exception @AT@ 9226 @LENGTH@ 14
------------DEL ThisExpression@@this @AT@ 9226 @LENGTH@ 4
------------DEL SimpleName@@exception @AT@ 9231 @LENGTH@ 9
---------DEL SimpleName@@MethodName:expect:[OAuth2AuthenticationException.class] @AT@ 9241 @LENGTH@ 43
------------DEL TypeLiteral@@OAuth2AuthenticationException.class @AT@ 9248 @LENGTH@ 35
---DEL ExpressionStatement@@MethodInvocation:this.exception.expectMessage(containsString("invalid_redirect_uri_parameter")) @AT@ 9288 @LENGTH@ 79
------DEL MethodInvocation@@this.exception.expectMessage(containsString("invalid_redirect_uri_parameter")) @AT@ 9288 @LENGTH@ 78
---------DEL FieldAccess@@this.exception @AT@ 9288 @LENGTH@ 14
------------DEL ThisExpression@@this @AT@ 9288 @LENGTH@ 4
------------DEL SimpleName@@exception @AT@ 9293 @LENGTH@ 9
---------DEL SimpleName@@MethodName:expectMessage:[containsString("invalid_redirect_uri_parameter")] @AT@ 9303 @LENGTH@ 63
------------DEL MethodInvocation@@containsString("invalid_redirect_uri_parameter") @AT@ 9317 @LENGTH@ 48
---------------DEL SimpleName@@MethodName:containsString:["invalid_redirect_uri_parameter"] @AT@ 9317 @LENGTH@ 48
------------------DEL StringLiteral@@"invalid_redirect_uri_parameter" @AT@ 9332 @LENGTH@ 32
---DEL VariableDeclarationStatement@@OAuth2AuthorizationResponse authorizationResponse=success().redirectUri("https://example2.com").build(); @AT@ 9371 @LENGTH@ 106
------DEL SimpleType@@OAuth2AuthorizationResponse @AT@ 9371 @LENGTH@ 27
------DEL VariableDeclarationFragment@@authorizationResponse=success().redirectUri("https://example2.com").build() @AT@ 9399 @LENGTH@ 77
---------DEL SimpleName@@authorizationResponse @AT@ 9399 @LENGTH@ 21
---------DEL MethodInvocation@@success().redirectUri("https://example2.com").build() @AT@ 9423 @LENGTH@ 53
------------DEL MethodInvocation@@MethodName:redirectUri:["https://example2.com"] @AT@ 9423 @LENGTH@ 45
---------------DEL StringLiteral@@"https://example2.com" @AT@ 9445 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:success:[] @AT@ 9423 @LENGTH@ 9
------------DEL SimpleName@@MethodName:build:[] @AT@ 9469 @LENGTH@ 7
---DEL VariableDeclarationStatement@@OAuth2AuthorizationExchange authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,authorizationResponse); @AT@ 9480 @LENGTH@ 138
------DEL SimpleType@@OAuth2AuthorizationExchange @AT@ 9480 @LENGTH@ 27
------DEL VariableDeclarationFragment@@authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,authorizationResponse) @AT@ 9508 @LENGTH@ 109
---------DEL SimpleName@@authorizationExchange @AT@ 9508 @LENGTH@ 21
---------DEL ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, authorizationResponse] @AT@ 9536 @LENGTH@ 81
------------DEL New@@new @AT@ 9536 @LENGTH@ 3
------------DEL SimpleType@@OAuth2AuthorizationExchange @AT@ 9540 @LENGTH@ 27
------------DEL FieldAccess@@this.authorizationRequest @AT@ 9568 @LENGTH@ 25
---------------DEL ThisExpression@@this @AT@ 9568 @LENGTH@ 4
---------------DEL SimpleName@@authorizationRequest @AT@ 9573 @LENGTH@ 20
------------DEL SimpleName@@authorizationResponse @AT@ 9595 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:this.authenticationProvider.authenticate(new OAuth2LoginAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 9622 @LENGTH@ 129
------DEL MethodInvocation@@this.authenticationProvider.authenticate(new OAuth2LoginAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 9622 @LENGTH@ 128
---------DEL FieldAccess@@this.authenticationProvider @AT@ 9622 @LENGTH@ 27
------------DEL ThisExpression@@this @AT@ 9622 @LENGTH@ 4
------------DEL SimpleName@@authenticationProvider @AT@ 9627 @LENGTH@ 22
---------DEL SimpleName@@MethodName:authenticate:[new OAuth2LoginAuthenticationToken(this.clientRegistration,authorizationExchange)] @AT@ 9650 @LENGTH@ 100
------------DEL ClassInstanceCreation@@OAuth2LoginAuthenticationToken[this.clientRegistration, authorizationExchange] @AT@ 9667 @LENGTH@ 82
---------------DEL New@@new @AT@ 9667 @LENGTH@ 3
---------------DEL SimpleType@@OAuth2LoginAuthenticationToken @AT@ 9671 @LENGTH@ 30
---------------DEL FieldAccess@@this.clientRegistration @AT@ 9702 @LENGTH@ 23
------------------DEL ThisExpression@@this @AT@ 9702 @LENGTH@ 4
------------------DEL SimpleName@@clientRegistration @AT@ 9707 @LENGTH@ 18
---------------DEL SimpleName@@authorizationExchange @AT@ 9727 @LENGTH@ 21


UPD CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @TO@ catch (RestClientException ex) {  int statusCode=500;  if (ex instanceof RestClientResponseException) {    statusCode=((RestClientResponseException)ex).getRawStatusCode();  }  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error);  throw new ClientAuthorizationException(oauth2Error,refreshTokenGrantRequest.getClientRegistration().getRegistrationId(),message,ex);} @AT@ 3576 @LENGTH@ 294
---INS VariableDeclarationStatement@@int statusCode=500; @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3681 @LENGTH@ 21
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3681 @LENGTH@ 3
------INS VariableDeclarationFragment@@statusCode=500 @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3685 @LENGTH@ 16
---------INS SimpleName@@statusCode @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3685 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3698 @LENGTH@ 3
---INS IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3706 @LENGTH@ 125
------INS InstanceofExpression@@ex instanceof RestClientResponseException @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3710 @LENGTH@ 41
---------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3710 @LENGTH@ 2
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3713 @LENGTH@ 10
---------INS SimpleType@@RestClientResponseException @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3724 @LENGTH@ 27
------INS Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3753 @LENGTH@ 78
---------INS ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3759 @LENGTH@ 67
------------INS Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3759 @LENGTH@ 66
---------------INS SimpleName@@statusCode @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3759 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3769 @LENGTH@ 1
---------------INS MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3772 @LENGTH@ 53
------------------INS ParenthesizedExpression@@((RestClientResponseException)ex) @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 3772 @LENGTH@ 34
---------------------INS CastExpression@@(RestClientResponseException)ex @TO@ ParenthesizedExpression@@((RestClientResponseException)ex) @AT@ 3773 @LENGTH@ 32
------------------------INS SimpleType@@RestClientResponseException @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 3774 @LENGTH@ 27
------------------------INS SimpleName@@ex @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 3803 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getRawStatusCode:[] @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 3807 @LENGTH@ 18
---UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error,ex) @TO@ ClassInstanceCreation:new ClientAuthorizationException(oauth2Error,refreshTokenGrantRequest.getClientRegistration().getRegistrationId(),message,ex) @AT@ 3810 @LENGTH@ 56
------UPD ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @TO@ ClientAuthorizationException[oauth2Error, refreshTokenGrantRequest.getClientRegistration().getRegistrationId(), message, ex] @AT@ 3816 @LENGTH@ 49
---------UPD SimpleType@@OAuth2AuthorizationException @TO@ ClientAuthorizationException @AT@ 3820 @LENGTH@ 28
---------INS MethodInvocation@@refreshTokenGrantRequest.getClientRegistration().getRegistrationId() @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4246 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getClientRegistration:[] @TO@ MethodInvocation@@refreshTokenGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4246 @LENGTH@ 48
------------INS SimpleName@@Name:refreshTokenGrantRequest @TO@ MethodInvocation@@refreshTokenGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4246 @LENGTH@ 24
------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@refreshTokenGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4295 @LENGTH@ 19
---------INS SimpleName@@message @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4321 @LENGTH@ 7
---INS VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 4044 @LENGTH@ 135
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4044 @LENGTH@ 6
------INS VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4051 @LENGTH@ 127
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4051 @LENGTH@ 7
---------INS MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4061 @LENGTH@ 117
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4061 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4068 @LENGTH@ 110
---------------INS StringLiteral@@"Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s" @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4075 @LENGTH@ 67
---------------INS SimpleName@@statusCode @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4149 @LENGTH@ 10
---------------INS SimpleName@@oauth2Error @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4166 @LENGTH@ 11


UPD WhileStatement@@while (m.find()) {  String link=m.group("link");  String all=m.group("all");  String[] groups=link.split(":");  String cl, ml, rem;  if (groups.length == 3) {    cl=groups[0];    ml=groups[1].isEmpty() ? "ROOT" : groups[1];    rem=groups[2];  } else   if (groups.length == 2) {    cl=component;    ml=groups[0];    rem=groups[1];  } else {    cl=component;    ml=module;    rem=groups[0];  }  if (cl.startsWith("latest@")) {    cl=cl.substring("latest@".length());  }  link=cl + ":" + ml+ ":"+ rem;  if (!pages.containsKey(link)) {    long line=str.chars().limit(m.start()).filter(c -> c == '\n').count() + 1;    String prnt=Stream.of(all.split("\n")).map(String::trim).collect(Collectors.joining(" "));    unresolved.add(page.getKey() + " (" + page.getValue()+ ") at line "+ line+ ": "+ prnt);  }} @TO@ while (m.find()) {  String link=m.group("link");  String all=m.group("all");  String[] groups=link.split(":");  String cl;  String ml;  String rem;  if (groups.length == 3) {    cl=groups[0];    ml=groups[1].isEmpty() ? "ROOT" : groups[1];    rem=groups[2];  } else   if (groups.length == 2) {    cl=component;    ml=groups[0];    rem=groups[1];  } else {    cl=component;    ml=module;    rem=groups[0];  }  if (cl.startsWith("latest@")) {    cl=cl.substring("latest@".length());  }  link=cl + ":" + ml+ ":"+ rem;  if (!pages.containsKey(link)) {    long line=str.chars().limit(m.start()).filter(c -> c == '\n').count() + 1;    String prnt=Stream.of(all.split("\n")).map(String::trim).collect(Collectors.joining(" "));    unresolved.add(page.getKey() + " (" + page.getValue()+ ") at line "+ line+ ": "+ prnt);  }} @AT@ 5594 @LENGTH@ 1263
---UPD Block@@WhileBody:{  String link=m.group("link");  String all=m.group("all");  String[] groups=link.split(":");  String cl, ml, rem;  if (groups.length == 3) {    cl=groups[0];    ml=groups[1].isEmpty() ? "ROOT" : groups[1];    rem=groups[2];  } else   if (groups.length == 2) {    cl=component;    ml=groups[0];    rem=groups[1];  } else {    cl=component;    ml=module;    rem=groups[0];  }  if (cl.startsWith("latest@")) {    cl=cl.substring("latest@".length());  }  link=cl + ":" + ml+ ":"+ rem;  if (!pages.containsKey(link)) {    long line=str.chars().limit(m.start()).filter(c -> c == '\n').count() + 1;    String prnt=Stream.of(all.split("\n")).map(String::trim).collect(Collectors.joining(" "));    unresolved.add(page.getKey() + " (" + page.getValue()+ ") at line "+ line+ ": "+ prnt);  }} @TO@ WhileBody:{  String link=m.group("link");  String all=m.group("all");  String[] groups=link.split(":");  String cl;  String ml;  String rem;  if (groups.length == 3) {    cl=groups[0];    ml=groups[1].isEmpty() ? "ROOT" : groups[1];    rem=groups[2];  } else   if (groups.length == 2) {    cl=component;    ml=groups[0];    rem=groups[1];  } else {    cl=component;    ml=module;    rem=groups[0];  }  if (cl.startsWith("latest@")) {    cl=cl.substring("latest@".length());  }  link=cl + ":" + ml+ ":"+ rem;  if (!pages.containsKey(link)) {    long line=str.chars().limit(m.start()).filter(c -> c == '\n').count() + 1;    String prnt=Stream.of(all.split("\n")).map(String::trim).collect(Collectors.joining(" "));    unresolved.add(page.getKey() + " (" + page.getValue()+ ") at line "+ line+ ": "+ prnt);  }} @AT@ 5611 @LENGTH@ 1246
------DEL VariableDeclarationStatement@@String cl, ml, rem; @AT@ 5772 @LENGTH@ 19
------INS VariableDeclarationStatement@@String cl; @TO@ Block@@WhileBody:{  String link=m.group("link");  String all=m.group("all");  String[] groups=link.split(":");  String cl, ml, rem;  if (groups.length == 3) {    cl=groups[0];    ml=groups[1].isEmpty() ? "ROOT" : groups[1];    rem=groups[2];  } else   if (groups.length == 2) {    cl=component;    ml=groups[0];    rem=groups[1];  } else {    cl=component;    ml=module;    rem=groups[0];  }  if (cl.startsWith("latest@")) {    cl=cl.substring("latest@".length());  }  link=cl + ":" + ml+ ":"+ rem;  if (!pages.containsKey(link)) {    long line=str.chars().limit(m.start()).filter(c -> c == '\n').count() + 1;    String prnt=Stream.of(all.split("\n")).map(String::trim).collect(Collectors.joining(" "));    unresolved.add(page.getKey() + " (" + page.getValue()+ ") at line "+ line+ ": "+ prnt);  }} @AT@ 5772 @LENGTH@ 10
---------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String cl; @AT@ 5772 @LENGTH@ 6
---------MOV VariableDeclarationFragment@@cl @TO@ VariableDeclarationStatement@@String cl; @AT@ 5779 @LENGTH@ 2
------INS VariableDeclarationStatement@@String ml; @TO@ Block@@WhileBody:{  String link=m.group("link");  String all=m.group("all");  String[] groups=link.split(":");  String cl, ml, rem;  if (groups.length == 3) {    cl=groups[0];    ml=groups[1].isEmpty() ? "ROOT" : groups[1];    rem=groups[2];  } else   if (groups.length == 2) {    cl=component;    ml=groups[0];    rem=groups[1];  } else {    cl=component;    ml=module;    rem=groups[0];  }  if (cl.startsWith("latest@")) {    cl=cl.substring("latest@".length());  }  link=cl + ":" + ml+ ":"+ rem;  if (!pages.containsKey(link)) {    long line=str.chars().limit(m.start()).filter(c -> c == '\n').count() + 1;    String prnt=Stream.of(all.split("\n")).map(String::trim).collect(Collectors.joining(" "));    unresolved.add(page.getKey() + " (" + page.getValue()+ ") at line "+ line+ ": "+ prnt);  }} @AT@ 5799 @LENGTH@ 10
---------MOV VariableDeclarationFragment@@ml @TO@ VariableDeclarationStatement@@String ml; @AT@ 5783 @LENGTH@ 2
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String ml; @AT@ 5799 @LENGTH@ 6
------INS VariableDeclarationStatement@@String rem; @TO@ Block@@WhileBody:{  String link=m.group("link");  String all=m.group("all");  String[] groups=link.split(":");  String cl, ml, rem;  if (groups.length == 3) {    cl=groups[0];    ml=groups[1].isEmpty() ? "ROOT" : groups[1];    rem=groups[2];  } else   if (groups.length == 2) {    cl=component;    ml=groups[0];    rem=groups[1];  } else {    cl=component;    ml=module;    rem=groups[0];  }  if (cl.startsWith("latest@")) {    cl=cl.substring("latest@".length());  }  link=cl + ":" + ml+ ":"+ rem;  if (!pages.containsKey(link)) {    long line=str.chars().limit(m.start()).filter(c -> c == '\n').count() + 1;    String prnt=Stream.of(all.split("\n")).map(String::trim).collect(Collectors.joining(" "));    unresolved.add(page.getKey() + " (" + page.getValue()+ ") at line "+ line+ ": "+ prnt);  }} @AT@ 5826 @LENGTH@ 11
---------MOV VariableDeclarationFragment@@rem @TO@ VariableDeclarationStatement@@String rem; @AT@ 5787 @LENGTH@ 3
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String rem; @AT@ 5826 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/").with(oidcLogin())).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","test")).andExpect(model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject"))) @TO@ MethodInvocation:this.mvc.perform(get("/").with(oauth2Login())).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","test")).andExpect(model().attribute("userAttributes",Collections.singletonMap("sub","test-subject"))) @AT@ 2549 @LENGTH@ 259
---UPD MethodInvocation@@this.mvc.perform(get("/").with(oidcLogin())).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","test")).andExpect(model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject"))) @TO@ this.mvc.perform(get("/").with(oauth2Login())).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","test")).andExpect(model().attribute("userAttributes",Collections.singletonMap("sub","test-subject"))) @AT@ 2549 @LENGTH@ 258
------UPD MethodInvocation@@MethodName:perform:[get("/").with(oidcLogin())] @TO@ MethodName:perform:[get("/").with(oauth2Login())] @AT@ 2549 @LENGTH@ 44
---------UPD MethodInvocation@@get("/").with(oidcLogin()) @TO@ get("/").with(oauth2Login()) @AT@ 2566 @LENGTH@ 26
------------UPD SimpleName@@MethodName:with:[oidcLogin()] @TO@ MethodName:with:[oauth2Login()] @AT@ 2575 @LENGTH@ 17
---------------UPD MethodInvocation@@MethodName:oidcLogin:[] @TO@ MethodName:oauth2Login:[] @AT@ 2580 @LENGTH@ 11
------UPD SimpleName@@MethodName:andExpect:[model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject"))] @TO@ MethodName:andExpect:[model().attribute("userAttributes",Collections.singletonMap("sub","test-subject"))] @AT@ 2714 @LENGTH@ 93
---------UPD MethodInvocation@@model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject")) @TO@ model().attribute("userAttributes",Collections.singletonMap("sub","test-subject")) @AT@ 2724 @LENGTH@ 82
------------UPD SimpleName@@MethodName:attribute:["userAttributes", Collections.singletonMap(SUB,"test-subject")] @TO@ MethodName:attribute:["userAttributes", Collections.singletonMap("sub","test-subject")] @AT@ 2732 @LENGTH@ 74
---------------UPD MethodInvocation@@Collections.singletonMap(SUB,"test-subject") @TO@ Collections.singletonMap("sub","test-subject") @AT@ 2760 @LENGTH@ 45
------------------UPD SimpleName@@MethodName:singletonMap:[SUB, "test-subject"] @TO@ MethodName:singletonMap:["sub", "test-subject"] @AT@ 2772 @LENGTH@ 33
---------------------INS StringLiteral@@"sub" @TO@ SimpleName@@MethodName:singletonMap:[SUB, "test-subject"] @AT@ 2706 @LENGTH@ 5
---------------------DEL SimpleName@@SUB @AT@ 2785 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:createJwtHeader("key-id-1",JwkDefinition.CryptoAlgorithm.RS256) @TO@ MethodInvocation:createJwtHeader("key-id-1",null,JwkDefinition.CryptoAlgorithm.RS256) @AT@ 1611 @LENGTH@ 72
---UPD MethodInvocation@@createJwtHeader("key-id-1",JwkDefinition.CryptoAlgorithm.RS256) @TO@ createJwtHeader("key-id-1",null,JwkDefinition.CryptoAlgorithm.RS256) @AT@ 1618 @LENGTH@ 64
------UPD SimpleName@@MethodName:createJwtHeader:["key-id-1", JwkDefinition.CryptoAlgorithm.RS256] @TO@ MethodName:createJwtHeader:["key-id-1", null, JwkDefinition.CryptoAlgorithm.RS256] @AT@ 1618 @LENGTH@ 64
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createJwtHeader:["key-id-1", JwkDefinition.CryptoAlgorithm.RS256] @AT@ 1646 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:setAdditionalExceptionMappings, Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings,  @TO@ TypeDeclaration@@[public]DefaultAuthenticationEventPublisher, [AuthenticationEventPublisher, ApplicationEventPublisherAware] @AT@ 8170 @LENGTH@ 713
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setAdditionalExceptionMappings, Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings,  @AT@ 8170 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setAdditionalExceptionMappings, Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings,  @AT@ 8177 @LENGTH@ 4
---INS SimpleName@@MethodName:setAdditionalExceptionMappings @TO@ MethodDeclaration@@public, void, MethodName:setAdditionalExceptionMappings, Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings,  @AT@ 8182 @LENGTH@ 30
---INS SingleVariableDeclaration@@Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings @TO@ MethodDeclaration@@public, void, MethodName:setAdditionalExceptionMappings, Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings,  @AT@ 8213 @LENGTH@ 110
------INS ParameterizedType@@Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @TO@ SingleVariableDeclaration@@Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings @AT@ 8213 @LENGTH@ 101
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @AT@ 8213 @LENGTH@ 3
---------INS ParameterizedType@@Class<? extends AuthenticationException> @TO@ ParameterizedType@@Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @AT@ 8217 @LENGTH@ 40
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends AuthenticationException> @AT@ 8217 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends AuthenticationException> @AT@ 8223 @LENGTH@ 33
---------INS ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @TO@ ParameterizedType@@Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @AT@ 8262 @LENGTH@ 51
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @AT@ 8262 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @AT@ 8268 @LENGTH@ 44
------INS SimpleName@@mappings @TO@ SingleVariableDeclaration@@Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings @AT@ 8315 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:Assert.notEmpty(mappings,"The mappings Map must not be empty nor null") @TO@ MethodDeclaration@@public, void, MethodName:setAdditionalExceptionMappings, Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings,  @AT@ 8328 @LENGTH@ 73
------INS MethodInvocation@@Assert.notEmpty(mappings,"The mappings Map must not be empty nor null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notEmpty(mappings,"The mappings Map must not be empty nor null") @AT@ 8328 @LENGTH@ 72
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notEmpty(mappings,"The mappings Map must not be empty nor null") @AT@ 8328 @LENGTH@ 6
---------INS SimpleName@@MethodName:notEmpty:[mappings, "The mappings Map must not be empty nor null"] @TO@ MethodInvocation@@Assert.notEmpty(mappings,"The mappings Map must not be empty nor null") @AT@ 8335 @LENGTH@ 65
------------INS SimpleName@@mappings @TO@ SimpleName@@MethodName:notEmpty:[mappings, "The mappings Map must not be empty nor null"] @AT@ 8344 @LENGTH@ 8
------------INS StringLiteral@@"The mappings Map must not be empty nor null" @TO@ SimpleName@@MethodName:notEmpty:[mappings, "The mappings Map must not be empty nor null"] @AT@ 8354 @LENGTH@ 45
---INS EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @TO@ MethodDeclaration@@public, void, MethodName:setAdditionalExceptionMappings, Map<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> mappings,  @AT@ 8404 @LENGTH@ 476
------INS SingleVariableDeclaration@@Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry @TO@ EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @AT@ 8409 @LENGTH@ 110
---------INS ParameterizedType@@Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @TO@ SingleVariableDeclaration@@Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry @AT@ 8409 @LENGTH@ 104
------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @AT@ 8409 @LENGTH@ 9
------------INS ParameterizedType@@Class<? extends AuthenticationException> @TO@ ParameterizedType@@Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @AT@ 8419 @LENGTH@ 40
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends AuthenticationException> @AT@ 8419 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends AuthenticationException> @AT@ 8425 @LENGTH@ 33
------------INS ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @TO@ ParameterizedType@@Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> @AT@ 8461 @LENGTH@ 51
---------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @AT@ 8461 @LENGTH@ 5
---------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @AT@ 8467 @LENGTH@ 44
---------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry @AT@ 8514 @LENGTH@ 5
------INS MethodInvocation@@mappings.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @AT@ 8526 @LENGTH@ 19
---------INS SimpleName@@Name:mappings @TO@ MethodInvocation@@mappings.entrySet() @AT@ 8526 @LENGTH@ 8
---------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@mappings.entrySet() @AT@ 8535 @LENGTH@ 10
------INS VariableDeclarationStatement@@Class<?> exceptionClass=entry.getKey(); @TO@ EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @AT@ 8553 @LENGTH@ 41
---------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> exceptionClass=entry.getKey(); @AT@ 8553 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 8553 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 8559 @LENGTH@ 1
---------INS VariableDeclarationFragment@@exceptionClass=entry.getKey() @TO@ VariableDeclarationStatement@@Class<?> exceptionClass=entry.getKey(); @AT@ 8562 @LENGTH@ 31
------------INS SimpleName@@exceptionClass @TO@ VariableDeclarationFragment@@exceptionClass=entry.getKey() @AT@ 8562 @LENGTH@ 14
------------INS MethodInvocation@@entry.getKey() @TO@ VariableDeclarationFragment@@exceptionClass=entry.getKey() @AT@ 8579 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 8579 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 8585 @LENGTH@ 8
------INS VariableDeclarationStatement@@Class<?> eventClass=entry.getValue(); @TO@ EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @AT@ 8599 @LENGTH@ 39
---------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> eventClass=entry.getValue(); @AT@ 8599 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 8599 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 8605 @LENGTH@ 1
---------INS VariableDeclarationFragment@@eventClass=entry.getValue() @TO@ VariableDeclarationStatement@@Class<?> eventClass=entry.getValue(); @AT@ 8608 @LENGTH@ 29
------------INS SimpleName@@eventClass @TO@ VariableDeclarationFragment@@eventClass=entry.getValue() @AT@ 8608 @LENGTH@ 10
------------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@eventClass=entry.getValue() @AT@ 8621 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 8621 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 8627 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:Assert.notNull(exceptionClass,"exceptionClass cannot be null") @TO@ EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @AT@ 8643 @LENGTH@ 64
---------INS MethodInvocation@@Assert.notNull(exceptionClass,"exceptionClass cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(exceptionClass,"exceptionClass cannot be null") @AT@ 8643 @LENGTH@ 63
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(exceptionClass,"exceptionClass cannot be null") @AT@ 8643 @LENGTH@ 6
------------INS SimpleName@@MethodName:notNull:[exceptionClass, "exceptionClass cannot be null"] @TO@ MethodInvocation@@Assert.notNull(exceptionClass,"exceptionClass cannot be null") @AT@ 8650 @LENGTH@ 56
---------------INS SimpleName@@exceptionClass @TO@ SimpleName@@MethodName:notNull:[exceptionClass, "exceptionClass cannot be null"] @AT@ 8658 @LENGTH@ 14
---------------INS StringLiteral@@"exceptionClass cannot be null" @TO@ SimpleName@@MethodName:notNull:[exceptionClass, "exceptionClass cannot be null"] @AT@ 8674 @LENGTH@ 31
------INS ExpressionStatement@@MethodInvocation:Assert.notNull(eventClass,"eventClass cannot be null") @TO@ EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @AT@ 8712 @LENGTH@ 56
---------INS MethodInvocation@@Assert.notNull(eventClass,"eventClass cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(eventClass,"eventClass cannot be null") @AT@ 8712 @LENGTH@ 55
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(eventClass,"eventClass cannot be null") @AT@ 8712 @LENGTH@ 6
------------INS SimpleName@@MethodName:notNull:[eventClass, "eventClass cannot be null"] @TO@ MethodInvocation@@Assert.notNull(eventClass,"eventClass cannot be null") @AT@ 8719 @LENGTH@ 48
---------------INS SimpleName@@eventClass @TO@ SimpleName@@MethodName:notNull:[eventClass, "eventClass cannot be null"] @AT@ 8727 @LENGTH@ 10
---------------INS StringLiteral@@"eventClass cannot be null" @TO@ SimpleName@@MethodName:notNull:[eventClass, "eventClass cannot be null"] @AT@ 8739 @LENGTH@ 27
------INS ExpressionStatement@@MethodInvocation:addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass) @TO@ EnhancedForStatement@@for (Map.Entry<Class<? extends AuthenticationException>,Class<? extends AbstractAuthenticationFailureEvent>> entry : mappings.entrySet()) {  Class<?> exceptionClass=entry.getKey();  Class<?> eventClass=entry.getValue();  Assert.notNull(exceptionClass,"exceptionClass cannot be null");  Assert.notNull(eventClass,"eventClass cannot be null");  addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass);} @AT@ 8773 @LENGTH@ 103
---------INS MethodInvocation@@addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass) @TO@ ExpressionStatement@@MethodInvocation:addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass) @AT@ 8773 @LENGTH@ 102
------------INS SimpleName@@MethodName:addMapping:[exceptionClass.getName(), (Class<? extends AbstractAuthenticationFailureEvent>)eventClass] @TO@ MethodInvocation@@addMapping(exceptionClass.getName(),(Class<? extends AbstractAuthenticationFailureEvent>)eventClass) @AT@ 8773 @LENGTH@ 102
---------------INS MethodInvocation@@exceptionClass.getName() @TO@ SimpleName@@MethodName:addMapping:[exceptionClass.getName(), (Class<? extends AbstractAuthenticationFailureEvent>)eventClass] @AT@ 8784 @LENGTH@ 24
------------------INS SimpleName@@Name:exceptionClass @TO@ MethodInvocation@@exceptionClass.getName() @AT@ 8784 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@exceptionClass.getName() @AT@ 8799 @LENGTH@ 9
---------------INS CastExpression@@(Class<? extends AbstractAuthenticationFailureEvent>)eventClass @TO@ SimpleName@@MethodName:addMapping:[exceptionClass.getName(), (Class<? extends AbstractAuthenticationFailureEvent>)eventClass] @AT@ 8810 @LENGTH@ 64
------------------INS ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @TO@ CastExpression@@(Class<? extends AbstractAuthenticationFailureEvent>)eventClass @AT@ 8811 @LENGTH@ 51
---------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @AT@ 8811 @LENGTH@ 5
---------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends AbstractAuthenticationFailureEvent> @AT@ 8817 @LENGTH@ 44
------------------INS SimpleName@@eventClass @TO@ CastExpression@@(Class<? extends AbstractAuthenticationFailureEvent>)eventClass @AT@ 8864 @LENGTH@ 10


INS MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @TO@ TypeDeclaration@@[public]EndpointConsumerBuilder, [EndpointConsumerResolver] @AT@ 1712 @LENGTH@ 82
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1707 @LENGTH@ 4
---INS SimpleName@@MethodName:doSetMultiValueProperties @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1712 @LENGTH@ 25
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1738 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 1738 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 1745 @LENGTH@ 4
---INS SingleVariableDeclaration@@String prefix @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1751 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String prefix @AT@ 1751 @LENGTH@ 6
------INS SimpleName@@prefix @TO@ SingleVariableDeclaration@@String prefix @AT@ 1758 @LENGTH@ 6
---INS SingleVariableDeclaration@@Map<String,Object> values @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1766 @LENGTH@ 26
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> values @AT@ 1766 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1766 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1770 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1778 @LENGTH@ 6
------INS SimpleName@@values @TO@ SingleVariableDeclaration@@Map<String,Object> values @AT@ 1786 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [FILTER_SPEC=SimpleAttributeDefinitionBuilder.create(CommonAttributes.FILTER_SPEC).setAlternatives(new String[0]).build()] @TO@ public, static, final, SimpleAttributeDefinition, [FILTER_SPEC=SimpleAttributeDefinitionBuilder.create(AbstractHandlerDefinition.FILTER_SPEC).setAlternatives(new String[0]).build()] @AT@ 4261 @LENGTH@ 195
---UPD VariableDeclarationFragment@@FILTER_SPEC=SimpleAttributeDefinitionBuilder.create(CommonAttributes.FILTER_SPEC).setAlternatives(new String[0]).build() @TO@ FILTER_SPEC=SimpleAttributeDefinitionBuilder.create(AbstractHandlerDefinition.FILTER_SPEC).setAlternatives(new String[0]).build() @AT@ 4307 @LENGTH@ 148
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.FILTER_SPEC).setAlternatives(new String[0]).build() @TO@ SimpleAttributeDefinitionBuilder.create(AbstractHandlerDefinition.FILTER_SPEC).setAlternatives(new String[0]).build() @AT@ 4321 @LENGTH@ 134
---------UPD MethodInvocation@@MethodName:create:[CommonAttributes.FILTER_SPEC] @TO@ MethodName:create:[AbstractHandlerDefinition.FILTER_SPEC] @AT@ 4321 @LENGTH@ 69
------------UPD QualifiedName@@CommonAttributes.FILTER_SPEC @TO@ AbstractHandlerDefinition.FILTER_SPEC @AT@ 4361 @LENGTH@ 28
---------------UPD SimpleName@@CommonAttributes @TO@ AbstractHandlerDefinition @AT@ 4361 @LENGTH@ 16


DEL IfStatement@@if (!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri())) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);  throw new OAuth2AuthorizationException(oauth2Error);} @AT@ 2154 @LENGTH@ 241
---DEL PrefixExpression@@!authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri()) @AT@ 2158 @LENGTH@ 85
------DEL Operator@@! @AT@ 2158 @LENGTH@ 1
------DEL MethodInvocation@@authorizationResponse.getRedirectUri().equals(authorizationRequest.getRedirectUri()) @AT@ 2159 @LENGTH@ 84
---------DEL MethodInvocation@@MethodName:getRedirectUri:[] @AT@ 2159 @LENGTH@ 38
---------DEL SimpleName@@Name:authorizationResponse @AT@ 2159 @LENGTH@ 21
---------DEL SimpleName@@MethodName:equals:[authorizationRequest.getRedirectUri()] @AT@ 2198 @LENGTH@ 45
------------DEL MethodInvocation@@authorizationRequest.getRedirectUri() @AT@ 2205 @LENGTH@ 37
---------------DEL SimpleName@@Name:authorizationRequest @AT@ 2205 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:getRedirectUri:[] @AT@ 2226 @LENGTH@ 16
---DEL Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE);  throw new OAuth2AuthorizationException(oauth2Error);} @AT@ 2245 @LENGTH@ 150
------DEL VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE); @AT@ 2250 @LENGTH@ 85
---------DEL SimpleType@@OAuth2Error @AT@ 2250 @LENGTH@ 11
---------DEL VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE) @AT@ 2262 @LENGTH@ 72
------------DEL SimpleName@@oauth2Error @AT@ 2262 @LENGTH@ 11
------------DEL ClassInstanceCreation@@OAuth2Error[INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE] @AT@ 2276 @LENGTH@ 58
---------------DEL New@@new @AT@ 2276 @LENGTH@ 3
---------------DEL SimpleType@@OAuth2Error @AT@ 2280 @LENGTH@ 11
---------------DEL SimpleName@@INVALID_REDIRECT_URI_PARAMETER_ERROR_CODE @AT@ 2292 @LENGTH@ 41
------DEL ThrowStatement@@ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error) @AT@ 2339 @LENGTH@ 52
---------DEL ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error] @AT@ 2345 @LENGTH@ 45
------------DEL New@@new @AT@ 2345 @LENGTH@ 3
------------DEL SimpleType@@OAuth2AuthorizationException @AT@ 2349 @LENGTH@ 28
------------DEL SimpleName@@oauth2Error @AT@ 2378 @LENGTH@ 11


INS IfStatement@@if (CollectionUtils.isEmpty(map)) {  if (logger.isDebugEnabled()) {    logger.debug("check_token returned empty");  }  throw new InvalidTokenException(accessToken);} @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:loadAuthentication, String accessToken, AuthenticationException, InvalidTokenException,  @AT@ 4113 @LENGTH@ 175
---INS MethodInvocation@@CollectionUtils.isEmpty(map) @TO@ IfStatement@@if (CollectionUtils.isEmpty(map)) {  if (logger.isDebugEnabled()) {    logger.debug("check_token returned empty");  }  throw new InvalidTokenException(accessToken);} @AT@ 4117 @LENGTH@ 28
------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(map) @AT@ 4117 @LENGTH@ 15
------INS SimpleName@@MethodName:isEmpty:[map] @TO@ MethodInvocation@@CollectionUtils.isEmpty(map) @AT@ 4133 @LENGTH@ 12
---------INS SimpleName@@map @TO@ SimpleName@@MethodName:isEmpty:[map] @AT@ 4141 @LENGTH@ 3
---INS Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("check_token returned empty");  }  throw new InvalidTokenException(accessToken);} @TO@ IfStatement@@if (CollectionUtils.isEmpty(map)) {  if (logger.isDebugEnabled()) {    logger.debug("check_token returned empty");  }  throw new InvalidTokenException(accessToken);} @AT@ 4147 @LENGTH@ 141
------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("check_token returned empty");} @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("check_token returned empty");  }  throw new InvalidTokenException(accessToken);} @AT@ 4152 @LENGTH@ 83
---------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("check_token returned empty");} @AT@ 4156 @LENGTH@ 23
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 4156 @LENGTH@ 6
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 4163 @LENGTH@ 16
---------INS Block@@ThenBody:{  logger.debug("check_token returned empty");} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("check_token returned empty");} @AT@ 4181 @LENGTH@ 54
------------INS ExpressionStatement@@MethodInvocation:logger.debug("check_token returned empty") @TO@ Block@@ThenBody:{  logger.debug("check_token returned empty");} @AT@ 4187 @LENGTH@ 43
---------------INS MethodInvocation@@logger.debug("check_token returned empty") @TO@ ExpressionStatement@@MethodInvocation:logger.debug("check_token returned empty") @AT@ 4187 @LENGTH@ 42
------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("check_token returned empty") @AT@ 4187 @LENGTH@ 6
------------------INS SimpleName@@MethodName:debug:["check_token returned empty"] @TO@ MethodInvocation@@logger.debug("check_token returned empty") @AT@ 4194 @LENGTH@ 35
---------------------INS StringLiteral@@"check_token returned empty" @TO@ SimpleName@@MethodName:debug:["check_token returned empty"] @AT@ 4200 @LENGTH@ 28
------INS ThrowStatement@@ClassInstanceCreation:new InvalidTokenException(accessToken) @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("check_token returned empty");  }  throw new InvalidTokenException(accessToken);} @AT@ 4239 @LENGTH@ 45
---------INS ClassInstanceCreation@@InvalidTokenException[accessToken] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidTokenException(accessToken) @AT@ 4245 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidTokenException[accessToken] @AT@ 4245 @LENGTH@ 3
------------INS SimpleType@@InvalidTokenException @TO@ ClassInstanceCreation@@InvalidTokenException[accessToken] @AT@ 4249 @LENGTH@ 21
------------INS SimpleName@@accessToken @TO@ ClassInstanceCreation@@InvalidTokenException[accessToken] @AT@ 4271 @LENGTH@ 11


UPD FieldDeclaration@@static, private, final, ClassNameMatcher, [ALWAYS_TRUE=className -> true] @TO@ private, static, final, ClassNameMatcher, [ALWAYS_TRUE=className -> true] @AT@ 1612 @LENGTH@ 70
---INS Modifier@@private @TO@ FieldDeclaration@@static, private, final, ClassNameMatcher, [ALWAYS_TRUE=className -> true] @AT@ 1612 @LENGTH@ 7
---DEL Modifier@@private @AT@ 1619 @LENGTH@ 7


UPD VariableDeclarationStatement@@final Long jobId=BeanstalkExchangeHelper.getJobID(exchange); @TO@ final long jobId=BeanstalkExchangeHelper.getJobID(exchange); @AT@ 1573 @LENGTH@ 62
---DEL SimpleType@@Long @AT@ 1579 @LENGTH@ 4
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@final Long jobId=BeanstalkExchangeHelper.getJobID(exchange); @AT@ 1579 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:routes.pop() @TO@ MethodInvocation:routes.poll() @AT@ 11716 @LENGTH@ 20
---UPD MethodInvocation@@routes.pop() @TO@ routes.poll() @AT@ 11723 @LENGTH@ 12
------UPD SimpleName@@MethodName:pop:[] @TO@ MethodName:poll:[] @AT@ 11730 @LENGTH@ 5


MOV ExpressionStatement@@MethodInvocation:template.sendBody("direct:test",null) @TO@ MethodDeclaration@@public, void, MethodName:test, Exception,  @AT@ 1551 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:producer.newMessage().value("Hello World!").property("proccessedOnce","false").send() @TO@ MethodInvocation:producer.newMessage().value("Hello World!").property("processedOnce","false").send() @AT@ 8566 @LENGTH@ 87
---UPD MethodInvocation@@producer.newMessage().value("Hello World!").property("proccessedOnce","false").send() @TO@ producer.newMessage().value("Hello World!").property("processedOnce","false").send() @AT@ 8566 @LENGTH@ 86
------UPD MethodInvocation@@MethodName:property:["proccessedOnce", "false"] @TO@ MethodName:property:["processedOnce", "false"] @AT@ 8566 @LENGTH@ 79
---------UPD StringLiteral@@"proccessedOnce" @TO@ "processedOnce" @AT@ 8619 @LENGTH@ 16


MOV MethodDeclaration@@public, static, Charset, MethodName:toCharset, final Charset charset,  @TO@ TypeDeclaration@@[public]Charsets,  @AT@ 3067 @LENGTH@ 131


UPD MethodDeclaration@@default, TerminatingFind<T>, MethodName:matching, CriteriaDefinition criteriaDefinition,  @TO@ default, TerminatingFind<T>, MethodName:matching, CriteriaDefinition criteria,  @AT@ 5310 @LENGTH@ 133
---UPD SingleVariableDeclaration@@CriteriaDefinition criteriaDefinition @TO@ CriteriaDefinition criteria @AT@ 5346 @LENGTH@ 37
------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5365 @LENGTH@ 18
---UPD ReturnStatement@@MethodInvocation:matching(Query.query(criteriaDefinition)) @TO@ MethodInvocation:matching(Query.query(criteria)) @AT@ 5390 @LENGTH@ 49
------UPD MethodInvocation@@matching(Query.query(criteriaDefinition)) @TO@ matching(Query.query(criteria)) @AT@ 5397 @LENGTH@ 41
---------UPD SimpleName@@MethodName:matching:[Query.query(criteriaDefinition)] @TO@ MethodName:matching:[Query.query(criteria)] @AT@ 5397 @LENGTH@ 41
------------UPD MethodInvocation@@Query.query(criteriaDefinition) @TO@ Query.query(criteria) @AT@ 5406 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:query:[criteriaDefinition] @TO@ MethodName:query:[criteria] @AT@ 5412 @LENGTH@ 25
------------------UPD SimpleName@@criteriaDefinition @TO@ criteria @AT@ 5418 @LENGTH@ 18


INS TryStatement@@try (final ByteArrayOutputStream output=new ByteArrayOutputStream(size)){  output.write(input);  return output.toInputStream();}  @TO@ MethodDeclaration@@public, static, InputStream, MethodName:toBufferedInputStream, final InputStream input, final int size, IOException,  @AT@ 4924 @LENGTH@ 162
---INS VariableDeclarationExpression@@final ByteArrayOutputStream output=new ByteArrayOutputStream(size) @TO@ TryStatement@@try (final ByteArrayOutputStream output=new ByteArrayOutputStream(size)){  output.write(input);  return output.toInputStream();}  @AT@ 4929 @LENGTH@ 68
------INS Modifier@@final @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream output=new ByteArrayOutputStream(size) @AT@ 4929 @LENGTH@ 5
------INS SimpleType@@ByteArrayOutputStream @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream output=new ByteArrayOutputStream(size) @AT@ 4935 @LENGTH@ 21
------MOV VariableDeclarationFragment@@output=new ByteArrayOutputStream(size) @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream output=new ByteArrayOutputStream(size) @AT@ 5087 @LENGTH@ 40
---MOV ExpressionStatement@@MethodInvocation:output.write(input) @TO@ TryStatement@@try (final ByteArrayOutputStream output=new ByteArrayOutputStream(size)){  output.write(input);  return output.toInputStream();}  @AT@ 5137 @LENGTH@ 20
---MOV ReturnStatement@@MethodInvocation:output.toInputStream() @TO@ TryStatement@@try (final ByteArrayOutputStream output=new ByteArrayOutputStream(size)){  output.write(input);  return output.toInputStream();}  @AT@ 5166 @LENGTH@ 30


UPD TryStatement@@try {  Object value=readValue(reader,decoderContext);  if (value instanceof Map) {    if (!((Map)value).isEmpty()) {      return new Document((Map)value);    }  }} catch (Exception ex) {  throw e;} @TO@ try {  Object value=readValue(reader,decoderContext);  if (value instanceof Map<?,?>) {    if (!((Map)value).isEmpty()) {      return new Document((Map<String,Object>)value);    }  }} catch (Exception ex) {  e.addSuppressed(ex);  throw e;} @AT@ 7186 @LENGTH@ 228
---UPD IfStatement@@if (value instanceof Map) {  if (!((Map)value).isEmpty()) {    return new Document((Map)value);  }} @TO@ if (value instanceof Map<?,?>) {  if (!((Map)value).isEmpty()) {    return new Document((Map<String,Object>)value);  }} @AT@ 7251 @LENGTH@ 117
------UPD InstanceofExpression@@value instanceof Map @TO@ value instanceof Map<?,?> @AT@ 7255 @LENGTH@ 20
---------DEL SimpleType@@Map @AT@ 7272 @LENGTH@ 3
---------INS ParameterizedType@@Map<?,?> @TO@ InstanceofExpression@@value instanceof Map @AT@ 7320 @LENGTH@ 9
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 7320 @LENGTH@ 3
------------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 7324 @LENGTH@ 1
------------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 7327 @LENGTH@ 1
------UPD Block@@ThenBody:{  if (!((Map)value).isEmpty()) {    return new Document((Map)value);  }} @TO@ ThenBody:{  if (!((Map)value).isEmpty()) {    return new Document((Map<String,Object>)value);  }} @AT@ 7277 @LENGTH@ 91
---------UPD IfStatement@@if (!((Map)value).isEmpty()) {  return new Document((Map)value);} @TO@ if (!((Map)value).isEmpty()) {  return new Document((Map<String,Object>)value);} @AT@ 7284 @LENGTH@ 78
------------UPD Block@@ThenBody:{  return new Document((Map)value);} @TO@ ThenBody:{  return new Document((Map<String,Object>)value);} @AT@ 7314 @LENGTH@ 48
---------------UPD ReturnStatement@@ClassInstanceCreation:new Document((Map)value) @TO@ ClassInstanceCreation:new Document((Map<String,Object>)value) @AT@ 7322 @LENGTH@ 33
------------------UPD ClassInstanceCreation@@Document[(Map)value] @TO@ Document[(Map<String,Object>)value] @AT@ 7329 @LENGTH@ 25
---------------------UPD CastExpression@@(Map)value @TO@ (Map<String,Object>)value @AT@ 7342 @LENGTH@ 11
------------------------DEL SimpleType@@Map @AT@ 7343 @LENGTH@ 3
------------------------INS ParameterizedType@@Map<String,Object> @TO@ CastExpression@@(Map)value @AT@ 7397 @LENGTH@ 19
---------------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 7397 @LENGTH@ 3
---------------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 7401 @LENGTH@ 6
---------------------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 7409 @LENGTH@ 6
---UPD CatchClause@@catch (Exception ex) {  throw e;} @TO@ catch (Exception ex) {  e.addSuppressed(ex);  throw e;} @AT@ 7374 @LENGTH@ 40
------INS ExpressionStatement@@MethodInvocation:e.addSuppressed(ex) @TO@ CatchClause@@catch (Exception ex) {  throw e;} @AT@ 7471 @LENGTH@ 20
---------INS MethodInvocation@@e.addSuppressed(ex) @TO@ ExpressionStatement@@MethodInvocation:e.addSuppressed(ex) @AT@ 7471 @LENGTH@ 19
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.addSuppressed(ex) @AT@ 7471 @LENGTH@ 1
------------INS SimpleName@@MethodName:addSuppressed:[ex] @TO@ MethodInvocation@@e.addSuppressed(ex) @AT@ 7473 @LENGTH@ 17
---------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:addSuppressed:[ex] @AT@ 7487 @LENGTH@ 2


INS IfStatement@@if (this.jwtAuthenticationConverter == null) {  if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {    this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);  } else {    this.jwtAuthenticationConverter=new JwtAuthenticationConverter();  }} @TO@ MethodDeclaration@@Converter<Jwt,? extends AbstractAuthenticationToken>, MethodName:getJwtAuthenticationConverter,  @AT@ 12205 @LENGTH@ 327
---INS InfixExpression@@this.jwtAuthenticationConverter == null @TO@ IfStatement@@if (this.jwtAuthenticationConverter == null) {  if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {    this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);  } else {    this.jwtAuthenticationConverter=new JwtAuthenticationConverter();  }} @AT@ 12209 @LENGTH@ 39
------INS FieldAccess@@this.jwtAuthenticationConverter @TO@ InfixExpression@@this.jwtAuthenticationConverter == null @AT@ 12209 @LENGTH@ 31
---------INS ThisExpression@@this @TO@ FieldAccess@@this.jwtAuthenticationConverter @AT@ 12209 @LENGTH@ 4
---------INS SimpleName@@jwtAuthenticationConverter @TO@ FieldAccess@@this.jwtAuthenticationConverter @AT@ 12214 @LENGTH@ 26
------INS Operator@@== @TO@ InfixExpression@@this.jwtAuthenticationConverter == null @AT@ 12240 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@this.jwtAuthenticationConverter == null @AT@ 12244 @LENGTH@ 4
---INS Block@@ThenBody:{  if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {    this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);  } else {    this.jwtAuthenticationConverter=new JwtAuthenticationConverter();  }} @TO@ IfStatement@@if (this.jwtAuthenticationConverter == null) {  if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {    this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);  } else {    this.jwtAuthenticationConverter=new JwtAuthenticationConverter();  }} @AT@ 12250 @LENGTH@ 282
------INS IfStatement@@if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {  this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);} else {  this.jwtAuthenticationConverter=new JwtAuthenticationConverter();} @TO@ Block@@ThenBody:{  if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {    this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);  } else {    this.jwtAuthenticationConverter=new JwtAuthenticationConverter();  }} @AT@ 12256 @LENGTH@ 271
---------INS InfixExpression@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0 @TO@ IfStatement@@if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {  this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);} else {  this.jwtAuthenticationConverter=new JwtAuthenticationConverter();} @AT@ 12260 @LENGTH@ 77
------------INS FieldAccess@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length @TO@ InfixExpression@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0 @AT@ 12260 @LENGTH@ 73
---------------INS MethodInvocation@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class) @TO@ FieldAccess@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length @AT@ 12260 @LENGTH@ 66
------------------INS FieldAccess@@this.context @TO@ MethodInvocation@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class) @AT@ 12260 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 12260 @LENGTH@ 4
---------------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 12265 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getBeanNamesForType:[JwtAuthenticationConverter.class] @TO@ MethodInvocation@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class) @AT@ 12273 @LENGTH@ 53
---------------------INS TypeLiteral@@JwtAuthenticationConverter.class @TO@ SimpleName@@MethodName:getBeanNamesForType:[JwtAuthenticationConverter.class] @AT@ 12293 @LENGTH@ 32
---------------INS SimpleName@@length @TO@ FieldAccess@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length @AT@ 12327 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0 @AT@ 12333 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0 @AT@ 12336 @LENGTH@ 1
---------INS Block@@ThenBody:{  this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);} @TO@ IfStatement@@if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {  this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);} else {  this.jwtAuthenticationConverter=new JwtAuthenticationConverter();} @AT@ 12339 @LENGTH@ 102
------------INS ExpressionStatement@@Assignment:this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class) @TO@ Block@@ThenBody:{  this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);} @AT@ 12346 @LENGTH@ 89
---------------INS Assignment@@this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class) @TO@ ExpressionStatement@@Assignment:this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class) @AT@ 12346 @LENGTH@ 88
------------------INS FieldAccess@@this.jwtAuthenticationConverter @TO@ Assignment@@this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class) @AT@ 12346 @LENGTH@ 31
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwtAuthenticationConverter @AT@ 12346 @LENGTH@ 4
---------------------INS SimpleName@@jwtAuthenticationConverter @TO@ FieldAccess@@this.jwtAuthenticationConverter @AT@ 12351 @LENGTH@ 26
------------------INS Operator@@= @TO@ Assignment@@this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class) @AT@ 12377 @LENGTH@ 1
------------------INS MethodInvocation@@this.context.getBean(JwtAuthenticationConverter.class) @TO@ Assignment@@this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class) @AT@ 12380 @LENGTH@ 54
---------------------INS FieldAccess@@this.context @TO@ MethodInvocation@@this.context.getBean(JwtAuthenticationConverter.class) @AT@ 12380 @LENGTH@ 12
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 12380 @LENGTH@ 4
------------------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 12385 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getBean:[JwtAuthenticationConverter.class] @TO@ MethodInvocation@@this.context.getBean(JwtAuthenticationConverter.class) @AT@ 12393 @LENGTH@ 41
------------------------INS TypeLiteral@@JwtAuthenticationConverter.class @TO@ SimpleName@@MethodName:getBean:[JwtAuthenticationConverter.class] @AT@ 12401 @LENGTH@ 32
---------INS Block@@ElseBody:{  this.jwtAuthenticationConverter=new JwtAuthenticationConverter();} @TO@ IfStatement@@if (this.context.getBeanNamesForType(JwtAuthenticationConverter.class).length > 0) {  this.jwtAuthenticationConverter=this.context.getBean(JwtAuthenticationConverter.class);} else {  this.jwtAuthenticationConverter=new JwtAuthenticationConverter();} @AT@ 12447 @LENGTH@ 80
------------INS ExpressionStatement@@Assignment:this.jwtAuthenticationConverter=new JwtAuthenticationConverter() @TO@ Block@@ElseBody:{  this.jwtAuthenticationConverter=new JwtAuthenticationConverter();} @AT@ 12454 @LENGTH@ 67
---------------INS Assignment@@this.jwtAuthenticationConverter=new JwtAuthenticationConverter() @TO@ ExpressionStatement@@Assignment:this.jwtAuthenticationConverter=new JwtAuthenticationConverter() @AT@ 12454 @LENGTH@ 66
------------------INS FieldAccess@@this.jwtAuthenticationConverter @TO@ Assignment@@this.jwtAuthenticationConverter=new JwtAuthenticationConverter() @AT@ 12454 @LENGTH@ 31
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwtAuthenticationConverter @AT@ 12454 @LENGTH@ 4
---------------------INS SimpleName@@jwtAuthenticationConverter @TO@ FieldAccess@@this.jwtAuthenticationConverter @AT@ 12459 @LENGTH@ 26
------------------INS Operator@@= @TO@ Assignment@@this.jwtAuthenticationConverter=new JwtAuthenticationConverter() @AT@ 12485 @LENGTH@ 1
------------------INS ClassInstanceCreation@@JwtAuthenticationConverter[] @TO@ Assignment@@this.jwtAuthenticationConverter=new JwtAuthenticationConverter() @AT@ 12488 @LENGTH@ 32
---------------------INS New@@new @TO@ ClassInstanceCreation@@JwtAuthenticationConverter[] @AT@ 12488 @LENGTH@ 3
---------------------INS SimpleType@@JwtAuthenticationConverter @TO@ ClassInstanceCreation@@JwtAuthenticationConverter[] @AT@ 12492 @LENGTH@ 26


UPD MethodDeclaration@@private, boolean, MethodName:isInsertInto, QBParseInfo qbp, String dest,  @TO@ protected, boolean, MethodName:isInsertInto, QBParseInfo qbp, String dest,  @AT@ 31997 @LENGTH@ 305
---UPD Modifier@@private @TO@ protected @AT@ 31997 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Unexpected mismatch.")) @TO@ ClassInstanceCreation:new IllegalStateException("Unexpected mismatch.") @AT@ 15151 @LENGTH@ 71
---UPD ClassInstanceCreation@@IllegalStateException[String.format("Unexpected mismatch.")] @TO@ IllegalStateException["Unexpected mismatch."] @AT@ 15157 @LENGTH@ 64
------DEL MethodInvocation@@String.format("Unexpected mismatch.") @AT@ 15183 @LENGTH@ 37
---------DEL SimpleName@@Name:String @AT@ 15183 @LENGTH@ 6
---------DEL SimpleName@@MethodName:format:["Unexpected mismatch."] @AT@ 15190 @LENGTH@ 30
------------DEL StringLiteral@@"Unexpected mismatch." @AT@ 15197 @LENGTH@ 22
------INS StringLiteral@@"Unexpected mismatch." @TO@ ClassInstanceCreation@@IllegalStateException[String.format("Unexpected mismatch.")] @AT@ 15183 @LENGTH@ 22


UPD VariableDeclarationStatement@@String json="?#{  T(" + this.getClass().getName() + ").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.superviser':  principal.id } } } }"; @TO@ String json="?#{  T(" + this.getClass().getName() + ").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.supervisor':  principal.id } } } }"; @AT@ 11327 @LENGTH@ 200
---UPD VariableDeclarationFragment@@json="?#{  T(" + this.getClass().getName() + ").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.superviser':  principal.id } } } }" @TO@ json="?#{  T(" + this.getClass().getName() + ").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.supervisor':  principal.id } } } }" @AT@ 11334 @LENGTH@ 192
------UPD InfixExpression@@"?#{  T(" + this.getClass().getName() + ").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.superviser':  principal.id } } } }" @TO@ "?#{  T(" + this.getClass().getName() + ").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.supervisor':  principal.id } } } }" @AT@ 11341 @LENGTH@ 185
---------UPD StringLiteral@@").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.superviser':  principal.id } } } }" @TO@ ").isBatman() ? {'_class': { '$eq' : 'region' }} : { '$and' : { {'_class': { '$eq' : 'region' } }, {'user.supervisor':  principal.id } } } }" @AT@ 11385 @LENGTH@ 141


UPD ExpressionStatement@@MethodInvocation:verifyRoles(myWork,"eis-role","wm-default-group") @TO@ MethodInvocation:verifyRoles(myWork,"**","eis-role","wm-default-group") @AT@ 7989 @LENGTH@ 52
---UPD MethodInvocation@@verifyRoles(myWork,"eis-role","wm-default-group") @TO@ verifyRoles(myWork,"**","eis-role","wm-default-group") @AT@ 7989 @LENGTH@ 51
------UPD SimpleName@@MethodName:verifyRoles:[myWork, "eis-role", "wm-default-group"] @TO@ MethodName:verifyRoles:[myWork, "**", "eis-role", "wm-default-group"] @AT@ 7989 @LENGTH@ 51
---------INS StringLiteral@@"**" @TO@ SimpleName@@MethodName:verifyRoles:[myWork, "eis-role", "wm-default-group"] @AT@ 8009 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @TO@ TypeDeclaration@@[public]AbstractEndpointBuilder,  @AT@ 5965 @LENGTH@ 206
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 5965 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 5972 @LENGTH@ 4
---INS SimpleName@@MethodName:doSetMultiValueProperties @TO@ MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 5977 @LENGTH@ 25
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 6003 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 6003 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 6010 @LENGTH@ 4
---INS SingleVariableDeclaration@@String prefix @TO@ MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 6016 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String prefix @AT@ 6016 @LENGTH@ 6
------INS SimpleName@@prefix @TO@ SingleVariableDeclaration@@String prefix @AT@ 6023 @LENGTH@ 6
---INS SingleVariableDeclaration@@Map<String,Object> values @TO@ MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 6031 @LENGTH@ 26
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> values @AT@ 6031 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 6031 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 6035 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 6043 @LENGTH@ 6
------INS SimpleName@@values @TO@ SingleVariableDeclaration@@Map<String,Object> values @AT@ 6051 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:values.forEach((k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
) @TO@ MethodDeclaration@@public, void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 6069 @LENGTH@ 96
------INS MethodInvocation@@values.forEach((k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
) @TO@ ExpressionStatement@@MethodInvocation:values.forEach((k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
) @AT@ 6069 @LENGTH@ 95
---------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.forEach((k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
) @AT@ 6069 @LENGTH@ 6
---------INS SimpleName@@MethodName:forEach:[(k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
] @TO@ MethodInvocation@@values.forEach((k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
) @AT@ 6076 @LENGTH@ 88
------------INS LambdaExpression@@(k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
 @TO@ SimpleName@@MethodName:forEach:[(k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
] @AT@ 6084 @LENGTH@ 79
---------------INS VariableDeclarationFragment@@k @TO@ LambdaExpression@@(k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
 @AT@ 6085 @LENGTH@ 1
------------------INS SimpleName@@k @TO@ VariableDeclarationFragment@@k @AT@ 6085 @LENGTH@ 1
---------------INS VariableDeclarationFragment@@v @TO@ LambdaExpression@@(k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
 @AT@ 6088 @LENGTH@ 1
------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v @AT@ 6088 @LENGTH@ 1
---------------INS ExpressionStatement@@MethodInvocation:doSetMultiValueProperty(name,prefix + k,v) @TO@ LambdaExpression@@(k,v) -> {
  doSetMultiValueProperty(name,prefix + k,v);
}
 @AT@ 6108 @LENGTH@ 45
------------------INS MethodInvocation@@doSetMultiValueProperty(name,prefix + k,v) @TO@ ExpressionStatement@@MethodInvocation:doSetMultiValueProperty(name,prefix + k,v) @AT@ 6108 @LENGTH@ 44
---------------------INS SimpleName@@MethodName:doSetMultiValueProperty:[name, prefix + k, v] @TO@ MethodInvocation@@doSetMultiValueProperty(name,prefix + k,v) @AT@ 6108 @LENGTH@ 44
------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:doSetMultiValueProperty:[name, prefix + k, v] @AT@ 6132 @LENGTH@ 4
------------------------INS InfixExpression@@prefix + k @TO@ SimpleName@@MethodName:doSetMultiValueProperty:[name, prefix + k, v] @AT@ 6138 @LENGTH@ 10
---------------------------INS SimpleName@@prefix @TO@ InfixExpression@@prefix + k @AT@ 6138 @LENGTH@ 6
---------------------------INS Operator@@+ @TO@ InfixExpression@@prefix + k @AT@ 6144 @LENGTH@ 1
---------------------------INS SimpleName@@k @TO@ InfixExpression@@prefix + k @AT@ 6147 @LENGTH@ 1
------------------------INS SimpleName@@v @TO@ SimpleName@@MethodName:doSetMultiValueProperty:[name, prefix + k, v] @AT@ 6150 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @TO@ TypeDeclaration@@[public]AesBytesEncryptorTests,  @AT@ 3294 @LENGTH@ 699
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3294 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3301 @LENGTH@ 4
---INS SimpleName@@MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3306 @LENGTH@ 50
---INS ExpressionStatement@@MethodInvocation:CryptoAssumptions.assumeGCMJCE() @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3363 @LENGTH@ 33
------INS MethodInvocation@@CryptoAssumptions.assumeGCMJCE() @TO@ ExpressionStatement@@MethodInvocation:CryptoAssumptions.assumeGCMJCE() @AT@ 3363 @LENGTH@ 32
---------INS SimpleName@@Name:CryptoAssumptions @TO@ MethodInvocation@@CryptoAssumptions.assumeGCMJCE() @AT@ 3363 @LENGTH@ 17
---------INS SimpleName@@MethodName:assumeGCMJCE:[] @TO@ MethodInvocation@@CryptoAssumptions.assumeGCMJCE() @AT@ 3381 @LENGTH@ 14
---INS VariableDeclarationStatement@@PBEKeySpec keySpec=new PBEKeySpec(this.password.toCharArray(),Hex.decode(this.hexSalt),1024,256); @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3399 @LENGTH@ 106
------INS SimpleType@@PBEKeySpec @TO@ VariableDeclarationStatement@@PBEKeySpec keySpec=new PBEKeySpec(this.password.toCharArray(),Hex.decode(this.hexSalt),1024,256); @AT@ 3399 @LENGTH@ 10
------INS VariableDeclarationFragment@@keySpec=new PBEKeySpec(this.password.toCharArray(),Hex.decode(this.hexSalt),1024,256) @TO@ VariableDeclarationStatement@@PBEKeySpec keySpec=new PBEKeySpec(this.password.toCharArray(),Hex.decode(this.hexSalt),1024,256); @AT@ 3410 @LENGTH@ 94
---------INS SimpleName@@keySpec @TO@ VariableDeclarationFragment@@keySpec=new PBEKeySpec(this.password.toCharArray(),Hex.decode(this.hexSalt),1024,256) @AT@ 3410 @LENGTH@ 7
---------INS ClassInstanceCreation@@PBEKeySpec[this.password.toCharArray(), Hex.decode(this.hexSalt), 1024, 256] @TO@ VariableDeclarationFragment@@keySpec=new PBEKeySpec(this.password.toCharArray(),Hex.decode(this.hexSalt),1024,256) @AT@ 3420 @LENGTH@ 84
------------INS New@@new @TO@ ClassInstanceCreation@@PBEKeySpec[this.password.toCharArray(), Hex.decode(this.hexSalt), 1024, 256] @AT@ 3420 @LENGTH@ 3
------------INS SimpleType@@PBEKeySpec @TO@ ClassInstanceCreation@@PBEKeySpec[this.password.toCharArray(), Hex.decode(this.hexSalt), 1024, 256] @AT@ 3424 @LENGTH@ 10
------------INS MethodInvocation@@this.password.toCharArray() @TO@ ClassInstanceCreation@@PBEKeySpec[this.password.toCharArray(), Hex.decode(this.hexSalt), 1024, 256] @AT@ 3435 @LENGTH@ 27
---------------INS FieldAccess@@this.password @TO@ MethodInvocation@@this.password.toCharArray() @AT@ 3435 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.password @AT@ 3435 @LENGTH@ 4
------------------INS SimpleName@@password @TO@ FieldAccess@@this.password @AT@ 3440 @LENGTH@ 8
---------------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@this.password.toCharArray() @AT@ 3449 @LENGTH@ 13
------------INS MethodInvocation@@Hex.decode(this.hexSalt) @TO@ ClassInstanceCreation@@PBEKeySpec[this.password.toCharArray(), Hex.decode(this.hexSalt), 1024, 256] @AT@ 3464 @LENGTH@ 24
---------------INS SimpleName@@Name:Hex @TO@ MethodInvocation@@Hex.decode(this.hexSalt) @AT@ 3464 @LENGTH@ 3
---------------INS SimpleName@@MethodName:decode:[this.hexSalt] @TO@ MethodInvocation@@Hex.decode(this.hexSalt) @AT@ 3468 @LENGTH@ 20
------------------INS FieldAccess@@this.hexSalt @TO@ SimpleName@@MethodName:decode:[this.hexSalt] @AT@ 3475 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.hexSalt @AT@ 3475 @LENGTH@ 4
---------------------INS SimpleName@@hexSalt @TO@ FieldAccess@@this.hexSalt @AT@ 3480 @LENGTH@ 7
------------INS NumberLiteral@@1024 @TO@ ClassInstanceCreation@@PBEKeySpec[this.password.toCharArray(), Hex.decode(this.hexSalt), 1024, 256] @AT@ 3494 @LENGTH@ 4
------------INS NumberLiteral@@256 @TO@ ClassInstanceCreation@@PBEKeySpec[this.password.toCharArray(), Hex.decode(this.hexSalt), 1024, 256] @AT@ 3500 @LENGTH@ 3
---INS VariableDeclarationStatement@@SecretKey secretKey=newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec); @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3508 @LENGTH@ 71
------INS SimpleType@@SecretKey @TO@ VariableDeclarationStatement@@SecretKey secretKey=newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec); @AT@ 3508 @LENGTH@ 9
------INS VariableDeclarationFragment@@secretKey=newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec) @TO@ VariableDeclarationStatement@@SecretKey secretKey=newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec); @AT@ 3518 @LENGTH@ 60
---------INS SimpleName@@secretKey @TO@ VariableDeclarationFragment@@secretKey=newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec) @AT@ 3518 @LENGTH@ 9
---------INS MethodInvocation@@newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec) @TO@ VariableDeclarationFragment@@secretKey=newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec) @AT@ 3530 @LENGTH@ 48
------------INS SimpleName@@MethodName:newSecretKey:[PBKDF2WithHmacSHA1.name(), keySpec] @TO@ MethodInvocation@@newSecretKey(PBKDF2WithHmacSHA1.name(),keySpec) @AT@ 3530 @LENGTH@ 48
---------------INS MethodInvocation@@PBKDF2WithHmacSHA1.name() @TO@ SimpleName@@MethodName:newSecretKey:[PBKDF2WithHmacSHA1.name(), keySpec] @AT@ 3543 @LENGTH@ 25
------------------INS SimpleName@@Name:PBKDF2WithHmacSHA1 @TO@ MethodInvocation@@PBKDF2WithHmacSHA1.name() @AT@ 3543 @LENGTH@ 18
------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@PBKDF2WithHmacSHA1.name() @AT@ 3562 @LENGTH@ 6
---------------INS SimpleName@@keySpec @TO@ SimpleName@@MethodName:newSecretKey:[PBKDF2WithHmacSHA1.name(), keySpec] @AT@ 3570 @LENGTH@ 7
---INS VariableDeclarationStatement@@AesBytesEncryptor encryptor=new AesBytesEncryptor(secretKey,this.generator,GCM); @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3582 @LENGTH@ 84
------INS SimpleType@@AesBytesEncryptor @TO@ VariableDeclarationStatement@@AesBytesEncryptor encryptor=new AesBytesEncryptor(secretKey,this.generator,GCM); @AT@ 3582 @LENGTH@ 17
------INS VariableDeclarationFragment@@encryptor=new AesBytesEncryptor(secretKey,this.generator,GCM) @TO@ VariableDeclarationStatement@@AesBytesEncryptor encryptor=new AesBytesEncryptor(secretKey,this.generator,GCM); @AT@ 3600 @LENGTH@ 65
---------INS SimpleName@@encryptor @TO@ VariableDeclarationFragment@@encryptor=new AesBytesEncryptor(secretKey,this.generator,GCM) @AT@ 3600 @LENGTH@ 9
---------INS ClassInstanceCreation@@AesBytesEncryptor[secretKey, this.generator, GCM] @TO@ VariableDeclarationFragment@@encryptor=new AesBytesEncryptor(secretKey,this.generator,GCM) @AT@ 3612 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@AesBytesEncryptor[secretKey, this.generator, GCM] @AT@ 3612 @LENGTH@ 3
------------INS SimpleType@@AesBytesEncryptor @TO@ ClassInstanceCreation@@AesBytesEncryptor[secretKey, this.generator, GCM] @AT@ 3616 @LENGTH@ 17
------------INS SimpleName@@secretKey @TO@ ClassInstanceCreation@@AesBytesEncryptor[secretKey, this.generator, GCM] @AT@ 3634 @LENGTH@ 9
------------INS FieldAccess@@this.generator @TO@ ClassInstanceCreation@@AesBytesEncryptor[secretKey, this.generator, GCM] @AT@ 3645 @LENGTH@ 14
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.generator @AT@ 3645 @LENGTH@ 4
---------------INS SimpleName@@generator @TO@ FieldAccess@@this.generator @AT@ 3650 @LENGTH@ 9
------------INS SimpleName@@GCM @TO@ ClassInstanceCreation@@AesBytesEncryptor[secretKey, this.generator, GCM] @AT@ 3661 @LENGTH@ 3
---INS VariableDeclarationStatement@@byte[] encryption=encryptor.encrypt(this.secret.getBytes()); @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3670 @LENGTH@ 62
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] encryption=encryptor.encrypt(this.secret.getBytes()); @AT@ 3670 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 3670 @LENGTH@ 4
------INS VariableDeclarationFragment@@encryption=encryptor.encrypt(this.secret.getBytes()) @TO@ VariableDeclarationStatement@@byte[] encryption=encryptor.encrypt(this.secret.getBytes()); @AT@ 3677 @LENGTH@ 54
---------INS SimpleName@@encryption @TO@ VariableDeclarationFragment@@encryption=encryptor.encrypt(this.secret.getBytes()) @AT@ 3677 @LENGTH@ 10
---------INS MethodInvocation@@encryptor.encrypt(this.secret.getBytes()) @TO@ VariableDeclarationFragment@@encryption=encryptor.encrypt(this.secret.getBytes()) @AT@ 3690 @LENGTH@ 41
------------INS SimpleName@@Name:encryptor @TO@ MethodInvocation@@encryptor.encrypt(this.secret.getBytes()) @AT@ 3690 @LENGTH@ 9
------------INS SimpleName@@MethodName:encrypt:[this.secret.getBytes()] @TO@ MethodInvocation@@encryptor.encrypt(this.secret.getBytes()) @AT@ 3700 @LENGTH@ 31
---------------INS MethodInvocation@@this.secret.getBytes() @TO@ SimpleName@@MethodName:encrypt:[this.secret.getBytes()] @AT@ 3708 @LENGTH@ 22
------------------INS FieldAccess@@this.secret @TO@ MethodInvocation@@this.secret.getBytes() @AT@ 3708 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.secret @AT@ 3708 @LENGTH@ 4
---------------------INS SimpleName@@secret @TO@ FieldAccess@@this.secret @AT@ 3713 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@this.secret.getBytes() @AT@ 3720 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(new String(Hex.encode(encryption))).isEqualTo("4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee") @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3735 @LENGTH@ 140
------INS MethodInvocation@@assertThat(new String(Hex.encode(encryption))).isEqualTo("4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee") @TO@ ExpressionStatement@@MethodInvocation:assertThat(new String(Hex.encode(encryption))).isEqualTo("4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee") @AT@ 3735 @LENGTH@ 139
---------INS MethodInvocation@@MethodName:assertThat:[new String(Hex.encode(encryption))] @TO@ MethodInvocation@@assertThat(new String(Hex.encode(encryption))).isEqualTo("4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee") @AT@ 3735 @LENGTH@ 46
------------INS ClassInstanceCreation@@String[Hex.encode(encryption)] @TO@ MethodInvocation@@MethodName:assertThat:[new String(Hex.encode(encryption))] @AT@ 3746 @LENGTH@ 34
---------------INS New@@new @TO@ ClassInstanceCreation@@String[Hex.encode(encryption)] @AT@ 3746 @LENGTH@ 3
---------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[Hex.encode(encryption)] @AT@ 3750 @LENGTH@ 6
---------------INS MethodInvocation@@Hex.encode(encryption) @TO@ ClassInstanceCreation@@String[Hex.encode(encryption)] @AT@ 3757 @LENGTH@ 22
------------------INS SimpleName@@Name:Hex @TO@ MethodInvocation@@Hex.encode(encryption) @AT@ 3757 @LENGTH@ 3
------------------INS SimpleName@@MethodName:encode:[encryption] @TO@ MethodInvocation@@Hex.encode(encryption) @AT@ 3761 @LENGTH@ 18
---------------------INS SimpleName@@encryption @TO@ SimpleName@@MethodName:encode:[encryption] @AT@ 3768 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee"] @TO@ MethodInvocation@@assertThat(new String(Hex.encode(encryption))).isEqualTo("4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee") @AT@ 3787 @LENGTH@ 87
------------INS StringLiteral@@"4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee" @TO@ SimpleName@@MethodName:isEqualTo:["4b0febebd439db7ca77153cb254520c3e4d61ae38207b4e42b820d311dc3d4e0e2f37ed5ee"] @AT@ 3797 @LENGTH@ 76
---INS VariableDeclarationStatement@@byte[] decryption=encryptor.decrypt(encryption); @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3879 @LENGTH@ 50
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] decryption=encryptor.decrypt(encryption); @AT@ 3879 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 3879 @LENGTH@ 4
------INS VariableDeclarationFragment@@decryption=encryptor.decrypt(encryption) @TO@ VariableDeclarationStatement@@byte[] decryption=encryptor.decrypt(encryption); @AT@ 3886 @LENGTH@ 42
---------INS SimpleName@@decryption @TO@ VariableDeclarationFragment@@decryption=encryptor.decrypt(encryption) @AT@ 3886 @LENGTH@ 10
---------INS MethodInvocation@@encryptor.decrypt(encryption) @TO@ VariableDeclarationFragment@@decryption=encryptor.decrypt(encryption) @AT@ 3899 @LENGTH@ 29
------------INS SimpleName@@Name:encryptor @TO@ MethodInvocation@@encryptor.decrypt(encryption) @AT@ 3899 @LENGTH@ 9
------------INS SimpleName@@MethodName:decrypt:[encryption] @TO@ MethodInvocation@@encryptor.decrypt(encryption) @AT@ 3909 @LENGTH@ 19
---------------INS SimpleName@@encryption @TO@ SimpleName@@MethodName:decrypt:[encryption] @AT@ 3917 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(new String(decryption)).isEqualTo(this.secret) @TO@ MethodDeclaration@@public, void, MethodName:roundtripWhenUsingSecretKeyThenEncryptsAndDecrypts,  @AT@ 3932 @LENGTH@ 58
------INS MethodInvocation@@assertThat(new String(decryption)).isEqualTo(this.secret) @TO@ ExpressionStatement@@MethodInvocation:assertThat(new String(decryption)).isEqualTo(this.secret) @AT@ 3932 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:assertThat:[new String(decryption)] @TO@ MethodInvocation@@assertThat(new String(decryption)).isEqualTo(this.secret) @AT@ 3932 @LENGTH@ 34
------------INS ClassInstanceCreation@@String[decryption] @TO@ MethodInvocation@@MethodName:assertThat:[new String(decryption)] @AT@ 3943 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@String[decryption] @AT@ 3943 @LENGTH@ 3
---------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[decryption] @AT@ 3947 @LENGTH@ 6
---------------INS SimpleName@@decryption @TO@ ClassInstanceCreation@@String[decryption] @AT@ 3954 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:[this.secret] @TO@ MethodInvocation@@assertThat(new String(decryption)).isEqualTo(this.secret) @AT@ 3967 @LENGTH@ 22
------------INS FieldAccess@@this.secret @TO@ SimpleName@@MethodName:isEqualTo:[this.secret] @AT@ 3977 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.secret @AT@ 3977 @LENGTH@ 4
---------------INS SimpleName@@secret @TO@ FieldAccess@@this.secret @AT@ 3982 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(withUser + " cannot have null username on both username and value properites") @TO@ ClassInstanceCreation:new IllegalArgumentException(withUser + " cannot have null username on both username and value properties") @AT@ 1751 @LENGTH@ 119
---UPD ClassInstanceCreation@@IllegalArgumentException[withUser + " cannot have null username on both username and value properites"] @TO@ IllegalArgumentException[withUser + " cannot have null username on both username and value properties"] @AT@ 1757 @LENGTH@ 112
------UPD InfixExpression@@withUser + " cannot have null username on both username and value properites" @TO@ withUser + " cannot have null username on both username and value properties" @AT@ 1786 @LENGTH@ 82
---------UPD StringLiteral@@" cannot have null username on both username and value properites" @TO@ " cannot have null username on both username and value properties" @AT@ 1802 @LENGTH@ 66


INS MethodDeclaration@@void, MethodName:relationshipWithProperties,  @TO@ TypeDeclaration@@[@Nested]ReadingAndReturn,  @AT@ 3224 @LENGTH@ 375
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:relationshipWithProperties,  @AT@ 3219 @LENGTH@ 4
---INS SimpleName@@MethodName:relationshipWithProperties @TO@ MethodDeclaration@@void, MethodName:relationshipWithProperties,  @AT@ 3224 @LENGTH@ 26
---INS VariableDeclarationStatement@@Statement statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build(); @TO@ MethodDeclaration@@void, MethodName:relationshipWithProperties,  @AT@ 3259 @LENGTH@ 189
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@Statement statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build(); @AT@ 3259 @LENGTH@ 9
------INS VariableDeclarationFragment@@statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @TO@ VariableDeclarationStatement@@Statement statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build(); @AT@ 3269 @LENGTH@ 178
---------INS SimpleName@@statement @TO@ VariableDeclarationFragment@@statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @AT@ 3269 @LENGTH@ 9
---------INS MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @TO@ VariableDeclarationFragment@@statement=Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @AT@ 3281 @LENGTH@ 166
------------INS MethodInvocation@@MethodName:returning:[bikeNode, userNode] @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @AT@ 3281 @LENGTH@ 152
---------------INS SimpleName@@bikeNode @TO@ MethodInvocation@@MethodName:returning:[bikeNode, userNode] @AT@ 3414 @LENGTH@ 8
---------------INS SimpleName@@userNode @TO@ MethodInvocation@@MethodName:returning:[bikeNode, userNode] @AT@ 3424 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:match:[userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))] @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @AT@ 3281 @LENGTH@ 116
---------------INS MethodInvocation@@userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16"))) @TO@ MethodInvocation@@MethodName:match:[userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))] @AT@ 3300 @LENGTH@ 96
------------------INS MethodInvocation@@MethodName:relationshipTo:[bikeNode, "OWNS"] @TO@ MethodInvocation@@userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16"))) @AT@ 3300 @LENGTH@ 41
---------------------INS SimpleName@@bikeNode @TO@ MethodInvocation@@MethodName:relationshipTo:[bikeNode, "OWNS"] @AT@ 3324 @LENGTH@ 8
---------------------INS StringLiteral@@"OWNS" @TO@ MethodInvocation@@MethodName:relationshipTo:[bikeNode, "OWNS"] @AT@ 3334 @LENGTH@ 6
------------------INS SimpleName@@Name:userNode @TO@ MethodInvocation@@userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16"))) @AT@ 3300 @LENGTH@ 8
------------------INS SimpleName@@MethodName:properties:[mapOf("boughtOn",literalOf("2019-04-16"))] @TO@ MethodInvocation@@userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16"))) @AT@ 3342 @LENGTH@ 54
---------------------INS MethodInvocation@@mapOf("boughtOn",literalOf("2019-04-16")) @TO@ SimpleName@@MethodName:properties:[mapOf("boughtOn",literalOf("2019-04-16"))] @AT@ 3353 @LENGTH@ 42
------------------------INS SimpleName@@MethodName:mapOf:["boughtOn", literalOf("2019-04-16")] @TO@ MethodInvocation@@mapOf("boughtOn",literalOf("2019-04-16")) @AT@ 3353 @LENGTH@ 42
---------------------------INS StringLiteral@@"boughtOn" @TO@ SimpleName@@MethodName:mapOf:["boughtOn", literalOf("2019-04-16")] @AT@ 3359 @LENGTH@ 10
---------------------------INS MethodInvocation@@literalOf("2019-04-16") @TO@ SimpleName@@MethodName:mapOf:["boughtOn", literalOf("2019-04-16")] @AT@ 3371 @LENGTH@ 23
------------------------------INS SimpleName@@MethodName:literalOf:["2019-04-16"] @TO@ MethodInvocation@@literalOf("2019-04-16") @AT@ 3371 @LENGTH@ 23
---------------------------------INS StringLiteral@@"2019-04-16" @TO@ SimpleName@@MethodName:literalOf:["2019-04-16"] @AT@ 3381 @LENGTH@ 12
------------------------------INS SimpleName@@MethodName:literalOf:["2019-04-16"] @TO@ MethodInvocation@@literalOf("2019-04-16") @AT@ 3371 @LENGTH@ 23
---------------------------------INS StringLiteral@@"2019-04-16" @TO@ SimpleName@@MethodName:literalOf:["2019-04-16"] @AT@ 3381 @LENGTH@ 12
------------INS SimpleName@@Name:Cypher @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @AT@ 3281 @LENGTH@ 6
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@Cypher.match(userNode.relationshipTo(bikeNode,"OWNS").properties(mapOf("boughtOn",literalOf("2019-04-16")))).returning(bikeNode,userNode).build() @AT@ 3440 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u") @TO@ MethodDeclaration@@void, MethodName:relationshipWithProperties,  @AT@ 3454 @LENGTH@ 140
------INS MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u") @AT@ 3454 @LENGTH@ 139
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u") @AT@ 3454 @LENGTH@ 44
------------INS MethodInvocation@@cypherRenderer.render(statement) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @AT@ 3465 @LENGTH@ 32
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 3465 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[statement] @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 3480 @LENGTH@ 17
------------------INS SimpleName@@statement @TO@ SimpleName@@MethodName:render:[statement] @AT@ 3487 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u") @AT@ 3505 @LENGTH@ 88
------------INS StringLiteral@@"MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (u:`User`)-[:`OWNS` {boughtOn: '2019-04-16'}]->(b:`Bike`) RETURN b, u"] @AT@ 3515 @LENGTH@ 77


INS TryStatement@@try {  jwt=JwtHelper.decode(token);  jwt.verifySignature(verifier);} catch (Exception ex) {  throw new InvalidTokenException("Failed to decode/verify JWT/JWS",ex);} @TO@ MethodDeclaration@@protected, Map<String,Object>, MethodName:decode, String token,  @AT@ 5978 @LENGTH@ 179
---INS ExpressionStatement@@Assignment:jwt=JwtHelper.decode(token) @TO@ TryStatement@@try {  jwt=JwtHelper.decode(token);  jwt.verifySignature(verifier);} catch (Exception ex) {  throw new InvalidTokenException("Failed to decode/verify JWT/JWS",ex);} @AT@ 5987 @LENGTH@ 30
------INS Assignment@@jwt=JwtHelper.decode(token) @TO@ ExpressionStatement@@Assignment:jwt=JwtHelper.decode(token) @AT@ 5987 @LENGTH@ 29
---------MOV MethodInvocation@@JwtHelper.decode(token) @TO@ Assignment@@jwt=JwtHelper.decode(token) @AT@ 5977 @LENGTH@ 23
---------INS SimpleName@@jwt @TO@ Assignment@@jwt=JwtHelper.decode(token) @AT@ 5987 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@jwt=JwtHelper.decode(token) @AT@ 5990 @LENGTH@ 1
---MOV ExpressionStatement@@MethodInvocation:jwt.verifySignature(verifier) @TO@ TryStatement@@try {  jwt=JwtHelper.decode(token);  jwt.verifySignature(verifier);} catch (Exception ex) {  throw new InvalidTokenException("Failed to decode/verify JWT/JWS",ex);} @AT@ 6004 @LENGTH@ 30
---INS CatchClause@@catch (Exception ex) {  throw new InvalidTokenException("Failed to decode/verify JWT/JWS",ex);} @TO@ TryStatement@@try {  jwt=JwtHelper.decode(token);  jwt.verifySignature(verifier);} catch (Exception ex) {  throw new InvalidTokenException("Failed to decode/verify JWT/JWS",ex);} @AT@ 6056 @LENGTH@ 101
------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  throw new InvalidTokenException("Failed to decode/verify JWT/JWS",ex);} @AT@ 6063 @LENGTH@ 12
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 6063 @LENGTH@ 9
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 6073 @LENGTH@ 2
------INS ThrowStatement@@ClassInstanceCreation:new InvalidTokenException("Failed to decode/verify JWT/JWS",ex) @TO@ CatchClause@@catch (Exception ex) {  throw new InvalidTokenException("Failed to decode/verify JWT/JWS",ex);} @AT@ 6082 @LENGTH@ 71
---------INS ClassInstanceCreation@@InvalidTokenException["Failed to decode/verify JWT/JWS", ex] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidTokenException("Failed to decode/verify JWT/JWS",ex) @AT@ 6088 @LENGTH@ 64
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidTokenException["Failed to decode/verify JWT/JWS", ex] @AT@ 6088 @LENGTH@ 3
------------INS SimpleType@@InvalidTokenException @TO@ ClassInstanceCreation@@InvalidTokenException["Failed to decode/verify JWT/JWS", ex] @AT@ 6092 @LENGTH@ 21
------------INS StringLiteral@@"Failed to decode/verify JWT/JWS" @TO@ ClassInstanceCreation@@InvalidTokenException["Failed to decode/verify JWT/JWS", ex] @AT@ 6114 @LENGTH@ 33
------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@InvalidTokenException["Failed to decode/verify JWT/JWS", ex] @AT@ 6149 @LENGTH@ 2


UPD TypeDeclaration@@[public]ReactiveOAuth2AccessTokenResponseClient,  @TO@ [@FunctionalInterface, public]ReactiveOAuth2AccessTokenResponseClient,  @AT@ 1729 @LENGTH@ 765
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveOAuth2AccessTokenResponseClient,  @AT@ 1729 @LENGTH@ 20


INS MethodDeclaration@@protected, SalesforceHttpClient, MethodName:getHttpClient,  @TO@ TypeDeclaration@@[@Metadata(label="verifiers",enums="parameters,connectivity"), @Component("salesforce"), public]SalesforceComponent, DefaultComponent[SSLContextParametersAware] @AT@ 16537 @LENGTH@ 81
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, SalesforceHttpClient, MethodName:getHttpClient,  @AT@ 16537 @LENGTH@ 9
---INS SimpleType@@SalesforceHttpClient @TO@ MethodDeclaration@@protected, SalesforceHttpClient, MethodName:getHttpClient,  @AT@ 16547 @LENGTH@ 20
---INS SimpleName@@MethodName:getHttpClient @TO@ MethodDeclaration@@protected, SalesforceHttpClient, MethodName:getHttpClient,  @AT@ 16568 @LENGTH@ 13
---INS ReturnStatement@@SimpleName:httpClient @TO@ MethodDeclaration@@protected, SalesforceHttpClient, MethodName:getHttpClient,  @AT@ 16594 @LENGTH@ 18
------INS SimpleName@@httpClient @TO@ ReturnStatement@@SimpleName:httpClient @AT@ 16601 @LENGTH@ 10


UPD ReturnStatement@@ClassInstanceCreation:new DefaultRestClient(httpClient,config.getApiVersion(),config.getFormat(),session) @TO@ ClassInstanceCreation:new DefaultRestClient(httpClient,config.getApiVersion(),config.getFormat(),session,loginConfig) @AT@ 30010 @LENGTH@ 94
---UPD ClassInstanceCreation@@DefaultRestClient[httpClient, config.getApiVersion(), config.getFormat(), session] @TO@ DefaultRestClient[httpClient, config.getApiVersion(), config.getFormat(), session, loginConfig] @AT@ 30017 @LENGTH@ 86
------INS SimpleName@@loginConfig @TO@ ClassInstanceCreation@@DefaultRestClient[httpClient, config.getApiVersion(), config.getFormat(), session] @AT@ 30117 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:parseFilter(operation,reader) @TO@ MethodInvocation:parseFilter(operation,CustomHandlerResourceDefinition.FILTER_SPEC,reader) @AT@ 7614 @LENGTH@ 31
---UPD MethodInvocation@@parseFilter(operation,reader) @TO@ parseFilter(operation,CustomHandlerResourceDefinition.FILTER_SPEC,reader) @AT@ 7614 @LENGTH@ 30
------UPD SimpleName@@MethodName:parseFilter:[operation, reader] @TO@ MethodName:parseFilter:[operation, CustomHandlerResourceDefinition.FILTER_SPEC, reader] @AT@ 7614 @LENGTH@ 30
---------INS QualifiedName@@CustomHandlerResourceDefinition.FILTER_SPEC @TO@ SimpleName@@MethodName:parseFilter:[operation, reader] @AT@ 7707 @LENGTH@ 43
------------INS SimpleName@@CustomHandlerResourceDefinition @TO@ QualifiedName@@CustomHandlerResourceDefinition.FILTER_SPEC @AT@ 7707 @LENGTH@ 31
------------INS SimpleName@@FILTER_SPEC @TO@ QualifiedName@@CustomHandlerResourceDefinition.FILTER_SPEC @AT@ 7739 @LENGTH@ 11


UPD TryStatement@@try {  userAuth=authenticationManager.authenticate(userAuth);} catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());}catch (BadCredentialsException e) {  throw new InvalidGrantException(e.getMessage());} @TO@ try {  userAuth=authenticationManager.authenticate(userAuth);} catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());}catch (BadCredentialsException e) {  throw new InvalidGrantException(e.getMessage());}catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 3542 @LENGTH@ 429
---INS CatchClause@@catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @TO@ TryStatement@@try {  userAuth=authenticationManager.authenticate(userAuth);} catch (AccountStatusException ase) {  throw new InvalidGrantException(ase.getMessage());}catch (BadCredentialsException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 4054 @LENGTH@ 156
------INS SingleVariableDeclaration@@UsernameNotFoundException e @TO@ CatchClause@@catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 4061 @LENGTH@ 27
---------INS SimpleType@@UsernameNotFoundException @TO@ SingleVariableDeclaration@@UsernameNotFoundException e @AT@ 4061 @LENGTH@ 25
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@UsernameNotFoundException e @AT@ 4087 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new InvalidGrantException(e.getMessage()) @TO@ CatchClause@@catch (UsernameNotFoundException e) {  throw new InvalidGrantException(e.getMessage());} @AT@ 4158 @LENGTH@ 48
---------INS ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidGrantException(e.getMessage()) @AT@ 4164 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @AT@ 4164 @LENGTH@ 3
------------INS SimpleType@@InvalidGrantException @TO@ ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @AT@ 4168 @LENGTH@ 21
------------INS MethodInvocation@@e.getMessage() @TO@ ClassInstanceCreation@@InvalidGrantException[e.getMessage()] @AT@ 4190 @LENGTH@ 14
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 4190 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 4192 @LENGTH@ 12


UPD MethodDeclaration@@private, final, void, MethodName:populateCache, Repositories repositories, RepositoryRestConfiguration configuration,  @TO@ private, void, MethodName:populateCache, Repositories repositories, RepositoryRestConfiguration configuration,  @AT@ 2661 @LENGTH@ 985
---DEL Modifier@@final @AT@ 2669 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:logger.info("{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}","fileListProvider={}, inTest={}",UnitTestPropertiesParser.class.getSimpleName(),sourceDirectory,testCasePropertyName,excludedProvided,(fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()),inTest) @TO@ MethodInvocation:logger.info("{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" + "fileListProvider={}, inTest={}",UnitTestPropertiesParser.class.getSimpleName(),sourceDirectory,testCasePropertyName,excludedProvided,(fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()),inTest) @AT@ 3754 @LENGTH@ 357
---UPD MethodInvocation@@logger.info("{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}","fileListProvider={}, inTest={}",UnitTestPropertiesParser.class.getSimpleName(),sourceDirectory,testCasePropertyName,excludedProvided,(fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()),inTest) @TO@ logger.info("{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" + "fileListProvider={}, inTest={}",UnitTestPropertiesParser.class.getSimpleName(),sourceDirectory,testCasePropertyName,excludedProvided,(fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()),inTest) @AT@ 3754 @LENGTH@ 356
------UPD SimpleName@@MethodName:info:["{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}", "fileListProvider={}, inTest={}", UnitTestPropertiesParser.class.getSimpleName(), sourceDirectory, testCasePropertyName, excludedProvided, (fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()), inTest] @TO@ MethodName:info:["{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" + "fileListProvider={}, inTest={}", UnitTestPropertiesParser.class.getSimpleName(), sourceDirectory, testCasePropertyName, excludedProvided, (fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()), inTest] @AT@ 3761 @LENGTH@ 349
---------INS InfixExpression@@"{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" + "fileListProvider={}, inTest={}" @TO@ SimpleName@@MethodName:info:["{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}", "fileListProvider={}, inTest={}", UnitTestPropertiesParser.class.getSimpleName(), sourceDirectory, testCasePropertyName, excludedProvided, (fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()), inTest] @AT@ 3766 @LENGTH@ 124
------------INS StringLiteral@@"{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" @TO@ InfixExpression@@"{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" + "fileListProvider={}, inTest={}" @AT@ 3766 @LENGTH@ 81
------------INS Operator@@+ @TO@ InfixExpression@@"{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" + "fileListProvider={}, inTest={}" @AT@ 3847 @LENGTH@ 1
------------INS StringLiteral@@"fileListProvider={}, inTest={}" @TO@ InfixExpression@@"{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" + "fileListProvider={}, inTest={}" @AT@ 3858 @LENGTH@ 32
---------DEL StringLiteral@@"{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}" @AT@ 3766 @LENGTH@ 81
---------DEL StringLiteral@@"fileListProvider={}, inTest={}" @AT@ 3857 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:from("direct:start").aggregate(header("id"),new MyAggregationStrategy()).completionSize(5).aggregationRepository(repo).log("aggregated exchange id ${exchangeId} with ${body}").to("mock:aggregated").throwException(new IllegalArgumentException("Damn")).to("mock:result").end() @TO@ MethodInvocation:from("direct:start").routeId("start").aggregate(header("id"),new MyAggregationStrategy()).completionSize(5).aggregationRepository(repo).log("aggregated exchange id ${exchangeId} with ${body}").to("mock:aggregated").throwException(new IllegalArgumentException("Damn")).to("mock:result").end() @AT@ 2636 @LENGTH@ 451
---UPD MethodInvocation@@from("direct:start").aggregate(header("id"),new MyAggregationStrategy()).completionSize(5).aggregationRepository(repo).log("aggregated exchange id ${exchangeId} with ${body}").to("mock:aggregated").throwException(new IllegalArgumentException("Damn")).to("mock:result").end() @TO@ from("direct:start").routeId("start").aggregate(header("id"),new MyAggregationStrategy()).completionSize(5).aggregationRepository(repo).log("aggregated exchange id ${exchangeId} with ${body}").to("mock:aggregated").throwException(new IllegalArgumentException("Damn")).to("mock:result").end() @AT@ 2636 @LENGTH@ 450
------INS MethodInvocation@@MethodName:routeId:["start"] @TO@ MethodInvocation@@from("direct:start").aggregate(header("id"),new MyAggregationStrategy()).completionSize(5).aggregationRepository(repo).log("aggregated exchange id ${exchangeId} with ${body}").to("mock:aggregated").throwException(new IllegalArgumentException("Damn")).to("mock:result").end() @AT@ 2664 @LENGTH@ 37
---------INS StringLiteral@@"start" @TO@ MethodInvocation@@MethodName:routeId:["start"] @AT@ 2693 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @WebAppConfiguration, public]SecurityMockMvcRequestPostProcessorsOpaqueTokenTests,  @AT@ 4831 @LENGTH@ 610
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 4831 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 4838 @LENGTH@ 4
---INS SimpleName@@MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence @TO@ MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 4843 @LENGTH@ 62
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 4915 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2AuthenticatedPrincipal principal=active(a -> a.put("scope","user")); @TO@ MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 4929 @LENGTH@ 77
------INS SimpleType@@OAuth2AuthenticatedPrincipal @TO@ VariableDeclarationStatement@@OAuth2AuthenticatedPrincipal principal=active(a -> a.put("scope","user")); @AT@ 4929 @LENGTH@ 28
------INS VariableDeclarationFragment@@principal=active(a -> a.put("scope","user")) @TO@ VariableDeclarationStatement@@OAuth2AuthenticatedPrincipal principal=active(a -> a.put("scope","user")); @AT@ 4958 @LENGTH@ 47
---------INS SimpleName@@principal @TO@ VariableDeclarationFragment@@principal=active(a -> a.put("scope","user")) @AT@ 4958 @LENGTH@ 9
---------INS MethodInvocation@@active(a -> a.put("scope","user")) @TO@ VariableDeclarationFragment@@principal=active(a -> a.put("scope","user")) @AT@ 4970 @LENGTH@ 35
------------INS SimpleName@@MethodName:active:[a -> a.put("scope","user")] @TO@ MethodInvocation@@active(a -> a.put("scope","user")) @AT@ 4970 @LENGTH@ 35
---------------INS LambdaExpression@@a -> a.put("scope","user") @TO@ SimpleName@@MethodName:active:[a -> a.put("scope","user")] @AT@ 4977 @LENGTH@ 27
------------------INS VariableDeclarationFragment@@a @TO@ LambdaExpression@@a -> a.put("scope","user") @AT@ 4977 @LENGTH@ 1
---------------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 4977 @LENGTH@ 1
---------------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 4977 @LENGTH@ 1
------------------INS MethodInvocation@@a.put("scope","user") @TO@ LambdaExpression@@a -> a.put("scope","user") @AT@ 4982 @LENGTH@ 22
---------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.put("scope","user") @AT@ 4982 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:put:["scope", "user"] @TO@ MethodInvocation@@a.put("scope","user") @AT@ 4984 @LENGTH@ 20
------------------------INS StringLiteral@@"scope" @TO@ SimpleName@@MethodName:put:["scope", "user"] @AT@ 4988 @LENGTH@ 7
------------------------INS StringLiteral@@"user" @TO@ SimpleName@@MethodName:put:["scope", "user"] @AT@ 4997 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))).andExpect(status().isOk()).andExpect(content().string((String)principal.getAttribute("sub"))) @TO@ MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5010 @LENGTH@ 245
------INS MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))).andExpect(status().isOk()).andExpect(content().string((String)principal.getAttribute("sub"))) @TO@ ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))).andExpect(status().isOk()).andExpect(content().string((String)principal.getAttribute("sub"))) @AT@ 5010 @LENGTH@ 244
---------INS MethodInvocation@@MethodName:andExpect:[status().isOk()] @TO@ MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))).andExpect(status().isOk()).andExpect(content().string((String)principal.getAttribute("sub"))) @AT@ 5010 @LENGTH@ 171
------------INS MethodInvocation@@status().isOk() @TO@ MethodInvocation@@MethodName:andExpect:[status().isOk()] @AT@ 5165 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isOk() @AT@ 5165 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isOk:[] @TO@ MethodInvocation@@status().isOk() @AT@ 5174 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:perform:[get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))] @TO@ MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))).andExpect(status().isOk()).andExpect(content().string((String)principal.getAttribute("sub"))) @AT@ 5010 @LENGTH@ 139
------------INS MethodInvocation@@get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal)) @TO@ MethodInvocation@@MethodName:perform:[get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))] @AT@ 5027 @LENGTH@ 121
---------------INS MethodInvocation@@MethodName:get:["/opaque-token/sub"] @TO@ MethodInvocation@@get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal)) @AT@ 5027 @LENGTH@ 24
------------------INS StringLiteral@@"/opaque-token/sub" @TO@ MethodInvocation@@MethodName:get:["/opaque-token/sub"] @AT@ 5031 @LENGTH@ 19
---------------INS SimpleName@@MethodName:with:[opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal)] @TO@ MethodInvocation@@get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal)) @AT@ 5057 @LENGTH@ 91
------------------INS MethodInvocation@@opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal) @TO@ SimpleName@@MethodName:with:[opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal)] @AT@ 5062 @LENGTH@ 85
---------------------INS MethodInvocation@@MethodName:attributes:[a -> a.put("sub","foo")] @TO@ MethodInvocation@@opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal) @AT@ 5062 @LENGTH@ 57
------------------------INS LambdaExpression@@a -> a.put("sub","foo") @TO@ MethodInvocation@@MethodName:attributes:[a -> a.put("sub","foo")] @AT@ 5094 @LENGTH@ 24
---------------------------INS VariableDeclarationFragment@@a @TO@ LambdaExpression@@a -> a.put("sub","foo") @AT@ 5094 @LENGTH@ 1
------------------------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 5094 @LENGTH@ 1
---------------------------INS MethodInvocation@@a.put("sub","foo") @TO@ LambdaExpression@@a -> a.put("sub","foo") @AT@ 5099 @LENGTH@ 19
------------------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.put("sub","foo") @AT@ 5099 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:put:["sub", "foo"] @TO@ MethodInvocation@@a.put("sub","foo") @AT@ 5101 @LENGTH@ 17
---------------------------------INS StringLiteral@@"sub" @TO@ SimpleName@@MethodName:put:["sub", "foo"] @AT@ 5105 @LENGTH@ 5
---------------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:put:["sub", "foo"] @AT@ 5112 @LENGTH@ 5
---------------------INS MethodInvocation@@MethodName:opaqueToken:[] @TO@ MethodInvocation@@opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal) @AT@ 5062 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:principal:[principal] @TO@ MethodInvocation@@opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal) @AT@ 5127 @LENGTH@ 20
------------------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:principal:[principal] @AT@ 5137 @LENGTH@ 9
---------INS FieldAccess@@this.mvc @TO@ MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))).andExpect(status().isOk()).andExpect(content().string((String)principal.getAttribute("sub"))) @AT@ 5010 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mvc @AT@ 5010 @LENGTH@ 4
------------INS SimpleName@@mvc @TO@ FieldAccess@@this.mvc @AT@ 5015 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[content().string((String)principal.getAttribute("sub"))] @TO@ MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().attributes(a -> a.put("sub","foo")).principal(principal))).andExpect(status().isOk()).andExpect(content().string((String)principal.getAttribute("sub"))) @AT@ 5187 @LENGTH@ 67
------------INS MethodInvocation@@content().string((String)principal.getAttribute("sub")) @TO@ SimpleName@@MethodName:andExpect:[content().string((String)principal.getAttribute("sub"))] @AT@ 5197 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@content().string((String)principal.getAttribute("sub")) @AT@ 5197 @LENGTH@ 9
---------------INS SimpleName@@MethodName:string:[(String)principal.getAttribute("sub")] @TO@ MethodInvocation@@content().string((String)principal.getAttribute("sub")) @AT@ 5207 @LENGTH@ 46
------------------INS CastExpression@@(String)principal.getAttribute("sub") @TO@ SimpleName@@MethodName:string:[(String)principal.getAttribute("sub")] @AT@ 5214 @LENGTH@ 38
---------------------INS SimpleType@@String @TO@ CastExpression@@(String)principal.getAttribute("sub") @AT@ 5215 @LENGTH@ 6
---------------------INS MethodInvocation@@principal.getAttribute("sub") @TO@ CastExpression@@(String)principal.getAttribute("sub") @AT@ 5223 @LENGTH@ 29
------------------------INS SimpleName@@Name:principal @TO@ MethodInvocation@@principal.getAttribute("sub") @AT@ 5223 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getAttribute:["sub"] @TO@ MethodInvocation@@principal.getAttribute("sub") @AT@ 5233 @LENGTH@ 19
---------------------------INS StringLiteral@@"sub" @TO@ SimpleName@@MethodName:getAttribute:["sub"] @AT@ 5246 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))).andExpect(content().string("bar")) @TO@ MethodDeclaration@@public, void, MethodName:opaqueTokenWhenPrincipalSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5258 @LENGTH@ 180
------INS MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))).andExpect(content().string("bar")) @TO@ ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))).andExpect(content().string("bar")) @AT@ 5258 @LENGTH@ 179
---------INS MethodInvocation@@MethodName:perform:[get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))] @TO@ MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))).andExpect(content().string("bar")) @AT@ 5258 @LENGTH@ 139
------------INS MethodInvocation@@get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar"))) @TO@ MethodInvocation@@MethodName:perform:[get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))] @AT@ 5275 @LENGTH@ 121
---------------INS MethodInvocation@@MethodName:get:["/opaque-token/sub"] @TO@ MethodInvocation@@get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar"))) @AT@ 5275 @LENGTH@ 24
------------------INS StringLiteral@@"/opaque-token/sub" @TO@ MethodInvocation@@MethodName:get:["/opaque-token/sub"] @AT@ 5279 @LENGTH@ 19
---------------INS SimpleName@@MethodName:with:[opaqueToken().principal(principal).attributes(a -> a.put("sub","bar"))] @TO@ MethodInvocation@@get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar"))) @AT@ 5305 @LENGTH@ 91
------------------INS MethodInvocation@@opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")) @TO@ SimpleName@@MethodName:with:[opaqueToken().principal(principal).attributes(a -> a.put("sub","bar"))] @AT@ 5310 @LENGTH@ 85
---------------------INS MethodInvocation@@MethodName:principal:[principal] @TO@ MethodInvocation@@opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")) @AT@ 5310 @LENGTH@ 41
------------------------INS SimpleName@@principal @TO@ MethodInvocation@@MethodName:principal:[principal] @AT@ 5341 @LENGTH@ 9
---------------------INS MethodInvocation@@MethodName:opaqueToken:[] @TO@ MethodInvocation@@opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")) @AT@ 5310 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:attributes:[a -> a.put("sub","bar")] @TO@ MethodInvocation@@opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")) @AT@ 5359 @LENGTH@ 36
------------------------INS LambdaExpression@@a -> a.put("sub","bar") @TO@ SimpleName@@MethodName:attributes:[a -> a.put("sub","bar")] @AT@ 5370 @LENGTH@ 24
---------------------------INS VariableDeclarationFragment@@a @TO@ LambdaExpression@@a -> a.put("sub","bar") @AT@ 5370 @LENGTH@ 1
------------------------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 5370 @LENGTH@ 1
---------------------------INS MethodInvocation@@a.put("sub","bar") @TO@ LambdaExpression@@a -> a.put("sub","bar") @AT@ 5375 @LENGTH@ 19
------------------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.put("sub","bar") @AT@ 5375 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:put:["sub", "bar"] @TO@ MethodInvocation@@a.put("sub","bar") @AT@ 5377 @LENGTH@ 17
---------------------------------INS StringLiteral@@"sub" @TO@ SimpleName@@MethodName:put:["sub", "bar"] @AT@ 5381 @LENGTH@ 5
---------------------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:put:["sub", "bar"] @AT@ 5388 @LENGTH@ 5
---------INS FieldAccess@@this.mvc @TO@ MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))).andExpect(content().string("bar")) @AT@ 5258 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mvc @AT@ 5258 @LENGTH@ 4
------------INS SimpleName@@mvc @TO@ FieldAccess@@this.mvc @AT@ 5263 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[content().string("bar")] @TO@ MethodInvocation@@this.mvc.perform(get("/opaque-token/sub").with(opaqueToken().principal(principal).attributes(a -> a.put("sub","bar")))).andExpect(content().string("bar")) @AT@ 5403 @LENGTH@ 34
------------INS MethodInvocation@@content().string("bar") @TO@ SimpleName@@MethodName:andExpect:[content().string("bar")] @AT@ 5413 @LENGTH@ 23
---------------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@content().string("bar") @AT@ 5413 @LENGTH@ 9
---------------INS SimpleName@@MethodName:string:["bar"] @TO@ MethodInvocation@@content().string("bar") @AT@ 5423 @LENGTH@ 13
------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:string:["bar"] @AT@ 5430 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @TO@ TypeDeclaration@@[public]DefaultBearerTokenResolverTests,  @AT@ 1693 @LENGTH@ 336
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 1693 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 1700 @LENGTH@ 4
---INS SimpleName@@MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 1705 @LENGTH@ 66
---INS ExpressionStatement@@MethodInvocation:this.resolver.setBearerTokenHeaderName(CUSTOM_HEADER) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 1778 @LENGTH@ 54
------INS MethodInvocation@@this.resolver.setBearerTokenHeaderName(CUSTOM_HEADER) @TO@ ExpressionStatement@@MethodInvocation:this.resolver.setBearerTokenHeaderName(CUSTOM_HEADER) @AT@ 1778 @LENGTH@ 53
---------INS FieldAccess@@this.resolver @TO@ MethodInvocation@@this.resolver.setBearerTokenHeaderName(CUSTOM_HEADER) @AT@ 1778 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.resolver @AT@ 1778 @LENGTH@ 4
------------INS SimpleName@@resolver @TO@ FieldAccess@@this.resolver @AT@ 1783 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBearerTokenHeaderName:[CUSTOM_HEADER] @TO@ MethodInvocation@@this.resolver.setBearerTokenHeaderName(CUSTOM_HEADER) @AT@ 1792 @LENGTH@ 39
------------INS SimpleName@@CUSTOM_HEADER @TO@ SimpleName@@MethodName:setBearerTokenHeaderName:[CUSTOM_HEADER] @AT@ 1817 @LENGTH@ 13
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 1835 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 1835 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 1858 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 1858 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 1868 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 1868 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 1872 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addHeader(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 1900 @LENGTH@ 57
------INS MethodInvocation@@request.addHeader(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @TO@ ExpressionStatement@@MethodInvocation:request.addHeader(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 1900 @LENGTH@ 56
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 1900 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:[CUSTOM_HEADER, "Bearer " + TEST_TOKEN] @TO@ MethodInvocation@@request.addHeader(CUSTOM_HEADER,"Bearer " + TEST_TOKEN) @AT@ 1908 @LENGTH@ 48
------------INS SimpleName@@CUSTOM_HEADER @TO@ SimpleName@@MethodName:addHeader:[CUSTOM_HEADER, "Bearer " + TEST_TOKEN] @AT@ 1918 @LENGTH@ 13
------------INS InfixExpression@@"Bearer " + TEST_TOKEN @TO@ SimpleName@@MethodName:addHeader:[CUSTOM_HEADER, "Bearer " + TEST_TOKEN] @AT@ 1933 @LENGTH@ 22
---------------INS StringLiteral@@"Bearer " @TO@ InfixExpression@@"Bearer " + TEST_TOKEN @AT@ 1933 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@"Bearer " + TEST_TOKEN @AT@ 1942 @LENGTH@ 1
---------------INS SimpleName@@TEST_TOKEN @TO@ InfixExpression@@"Bearer " + TEST_TOKEN @AT@ 1945 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(this.resolver.resolve(request)).isEqualTo(TEST_TOKEN) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenCustomDefinedHeaderIsValidAndPresentThenTokenIsResolved,  @AT@ 1961 @LENGTH@ 65
------INS MethodInvocation@@assertThat(this.resolver.resolve(request)).isEqualTo(TEST_TOKEN) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.resolver.resolve(request)).isEqualTo(TEST_TOKEN) @AT@ 1961 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:assertThat:[this.resolver.resolve(request)] @TO@ MethodInvocation@@assertThat(this.resolver.resolve(request)).isEqualTo(TEST_TOKEN) @AT@ 1961 @LENGTH@ 42
------------INS MethodInvocation@@this.resolver.resolve(request) @TO@ MethodInvocation@@MethodName:assertThat:[this.resolver.resolve(request)] @AT@ 1972 @LENGTH@ 30
---------------INS FieldAccess@@this.resolver @TO@ MethodInvocation@@this.resolver.resolve(request) @AT@ 1972 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.resolver @AT@ 1972 @LENGTH@ 4
------------------INS SimpleName@@resolver @TO@ FieldAccess@@this.resolver @AT@ 1977 @LENGTH@ 8
---------------INS SimpleName@@MethodName:resolve:[request] @TO@ MethodInvocation@@this.resolver.resolve(request) @AT@ 1986 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:resolve:[request] @AT@ 1994 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEqualTo:[TEST_TOKEN] @TO@ MethodInvocation@@assertThat(this.resolver.resolve(request)).isEqualTo(TEST_TOKEN) @AT@ 2004 @LENGTH@ 21
------------INS SimpleName@@TEST_TOKEN @TO@ SimpleName@@MethodName:isEqualTo:[TEST_TOKEN] @AT@ 2014 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, ParameterizedTypeReference<Map<String,String>>, [PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,String>>(){
}
] @TO@ private, static, final, ParameterizedTypeReference<Map<String,Object>>, [PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,Object>>(){
}
] @AT@ 2151 @LENGTH@ 159
---UPD ParameterizedType@@ParameterizedTypeReference<Map<String,String>> @TO@ ParameterizedTypeReference<Map<String,Object>> @AT@ 2172 @LENGTH@ 47
------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 2199 @LENGTH@ 19
---------UPD SimpleType@@String @TO@ Object @AT@ 2211 @LENGTH@ 6
---UPD VariableDeclarationFragment@@PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,String>>(){
}
 @TO@ PARAMETERIZED_RESPONSE_TYPE=new ParameterizedTypeReference<Map<String,Object>>(){
}
 @AT@ 2220 @LENGTH@ 89
------UPD ClassInstanceCreation@@ParameterizedTypeReference<Map<String,String>>[] @TO@ ParameterizedTypeReference<Map<String,Object>>[] @AT@ 2253 @LENGTH@ 56
---------UPD ParameterizedType@@ParameterizedTypeReference<Map<String,String>> @TO@ ParameterizedTypeReference<Map<String,Object>> @AT@ 2257 @LENGTH@ 47
------------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 2284 @LENGTH@ 19
---------------UPD SimpleType@@String @TO@ Object @AT@ 2296 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The array of keys must not be null") @TO@ ClassInstanceCreation:new NullPointerException("The array of keys must not be null") @AT@ 5651 @LENGTH@ 73
---UPD ClassInstanceCreation@@IllegalArgumentException["The array of keys must not be null"] @TO@ NullPointerException["The array of keys must not be null"] @AT@ 5657 @LENGTH@ 66
------UPD SimpleType@@IllegalArgumentException @TO@ NullPointerException @AT@ 5661 @LENGTH@ 24


UPD MethodDeclaration@@public, void, MethodName:setAny, String name, Object value, IllegalArgumentException,  @TO@ public, void, MethodName:setAny, String name, Object value,  @AT@ 1686 @LENGTH@ 218
---DEL SimpleType@@IllegalArgumentException @AT@ 1739 @LENGTH@ 24
---UPD IfStatement@@if (!VALUE_FIELD.equals(name)) {  throw new IllegalArgumentException(name);} @TO@ if (VALUE_FIELD.equals(name)) {  this.value=value;} @AT@ 1774 @LENGTH@ 96
------DEL PrefixExpression@@!VALUE_FIELD.equals(name) @AT@ 1778 @LENGTH@ 25
---------DEL Operator@@! @AT@ 1778 @LENGTH@ 1
------MOV MethodInvocation@@VALUE_FIELD.equals(name) @TO@ IfStatement@@if (!VALUE_FIELD.equals(name)) {  throw new IllegalArgumentException(name);} @AT@ 1779 @LENGTH@ 24
------UPD Block@@ThenBody:{  throw new IllegalArgumentException(name);} @TO@ ThenBody:{  this.value=value;} @AT@ 1805 @LENGTH@ 65
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(name) @AT@ 1819 @LENGTH@ 41
------------DEL ClassInstanceCreation@@IllegalArgumentException[name] @AT@ 1825 @LENGTH@ 34
---------------DEL New@@new @AT@ 1825 @LENGTH@ 3
---------------DEL SimpleType@@IllegalArgumentException @AT@ 1829 @LENGTH@ 24
---------------DEL SimpleName@@name @AT@ 1854 @LENGTH@ 4
---------MOV ExpressionStatement@@Assignment:this.value=value @TO@ Block@@ThenBody:{  throw new IllegalArgumentException(name);} @AT@ 1879 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token"))).isInstanceOf(OAuth2AuthenticationException.class).extracting("error.description").isEqualTo("Invalid token") @TO@ MethodInvocation:assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token"))).isInstanceOf(AuthenticationServiceException.class) @AT@ 5777 @LENGTH@ 213
---UPD MethodInvocation@@assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token"))).isInstanceOf(OAuth2AuthenticationException.class).extracting("error.description").isEqualTo("Invalid token") @TO@ assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token"))).isInstanceOf(AuthenticationServiceException.class) @AT@ 5777 @LENGTH@ 212
------DEL MethodInvocation@@MethodName:extracting:["error.description"] @AT@ 5777 @LENGTH@ 180
---------DEL StringLiteral@@"error.description" @AT@ 5937 @LENGTH@ 19
------DEL MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @AT@ 5777 @LENGTH@ 143
---------DEL TypeLiteral@@OAuth2AuthenticationException.class @AT@ 5884 @LENGTH@ 35
------INS SimpleName@@MethodName:isInstanceOf:[AuthenticationServiceException.class] @TO@ MethodInvocation@@assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token"))).isInstanceOf(OAuth2AuthenticationException.class).extracting("error.description").isEqualTo("Invalid token") @AT@ 5875 @LENGTH@ 50
---------INS TypeLiteral@@AuthenticationServiceException.class @TO@ SimpleName@@MethodName:isInstanceOf:[AuthenticationServiceException.class] @AT@ 5888 @LENGTH@ 36
------DEL SimpleName@@MethodName:isEqualTo:["Invalid token"] @AT@ 5963 @LENGTH@ 26
---------DEL StringLiteral@@"Invalid token" @AT@ 5973 @LENGTH@ 15


DEL FieldDeclaration@@ClientRegistrationRepository, [clientRegistrationRepository] @AT@ 2135 @LENGTH@ 58
---DEL SimpleType@@ClientRegistrationRepository @AT@ 2135 @LENGTH@ 28
---DEL VariableDeclarationFragment@@clientRegistrationRepository @AT@ 2164 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 2164 @LENGTH@ 28


UPD ReturnStatement@@ClassInstanceCreation:new ReactivePartTreeNeo4jQuery(neo4jOperations,mappingContext,queryMethod) @TO@ MethodInvocation:ReactivePartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @AT@ 3176 @LENGTH@ 84
---INS MethodInvocation@@ReactivePartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @TO@ ReturnStatement@@ClassInstanceCreation:new ReactivePartTreeNeo4jQuery(neo4jOperations,mappingContext,queryMethod) @AT@ 3183 @LENGTH@ 79
------INS SimpleName@@Name:ReactivePartTreeNeo4jQuery @TO@ MethodInvocation@@ReactivePartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @AT@ 3183 @LENGTH@ 26
------INS SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @TO@ MethodInvocation@@ReactivePartTreeNeo4jQuery.create(neo4jOperations,mappingContext,queryMethod) @AT@ 3210 @LENGTH@ 52
---------INS SimpleName@@neo4jOperations @TO@ SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @AT@ 3217 @LENGTH@ 15
---------INS SimpleName@@mappingContext @TO@ SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @AT@ 3234 @LENGTH@ 14
---------INS SimpleName@@queryMethod @TO@ SimpleName@@MethodName:create:[neo4jOperations, mappingContext, queryMethod] @AT@ 3250 @LENGTH@ 11
---DEL ClassInstanceCreation@@ReactivePartTreeNeo4jQuery[neo4jOperations, mappingContext, queryMethod] @AT@ 3183 @LENGTH@ 76
------DEL New@@new @AT@ 3183 @LENGTH@ 3
------DEL SimpleType@@ReactivePartTreeNeo4jQuery @AT@ 3187 @LENGTH@ 26
------DEL SimpleName@@neo4jOperations @AT@ 3214 @LENGTH@ 15
------DEL SimpleName@@mappingContext @AT@ 3231 @LENGTH@ 14
------DEL SimpleName@@queryMethod @AT@ 3247 @LENGTH@ 11


UPD TypeDeclaration@@[@Neo4jIntegrationTest(domainPackages="org.springframework.data.neo4j.examples.galaxy.domain",repositoryPackages="org.springframework.data.neo4j.examples.galaxy.repo"), @ComponentScan("org.springframework.data.neo4j.examples.galaxy.service"), public]GalaxyContextConfiguration,  @TO@ [@Neo4jIntegrationTest(domainPackages={"org.springframework.data.neo4j.examples.galaxy.domain","org.springframework.data.neo4j.queries.ogmgh552"},repositoryPackages={"org.springframework.data.neo4j.examples.galaxy.repo","org.springframework.data.neo4j.queries.ogmgh552"}), @ComponentScan("org.springframework.data.neo4j.examples.galaxy.service"), public]GalaxyContextConfiguration,  @AT@ 843 @LENGTH@ 289
---UPD NormalAnnotation@@@Neo4jIntegrationTest(domainPackages="org.springframework.data.neo4j.examples.galaxy.domain",repositoryPackages="org.springframework.data.neo4j.examples.galaxy.repo") @TO@ @Neo4jIntegrationTest(domainPackages={"org.springframework.data.neo4j.examples.galaxy.domain","org.springframework.data.neo4j.queries.ogmgh552"},repositoryPackages={"org.springframework.data.neo4j.examples.galaxy.repo","org.springframework.data.neo4j.queries.ogmgh552"}) @AT@ 843 @LENGTH@ 173


UPD VariableDeclarationStatement@@Long unixTimestamp=Long.parseLong(jsonParser.getText()); @TO@ long unixTimestamp=Long.parseLong(jsonParser.getText()); @AT@ 1481 @LENGTH@ 58
---DEL SimpleType@@Long @AT@ 1481 @LENGTH@ 4
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@Long unixTimestamp=Long.parseLong(jsonParser.getText()); @AT@ 1481 @LENGTH@ 4


UPD VariableDeclarationStatement@@Document mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity); @TO@ Document mappedKeys=mapper.getMappedSort(indexDefinition.getIndexKeys(),entity); @AT@ 4855 @LENGTH@ 85
---UPD VariableDeclarationFragment@@mappedKeys=mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @TO@ mappedKeys=mapper.getMappedSort(indexDefinition.getIndexKeys(),entity) @AT@ 4864 @LENGTH@ 75
------UPD MethodInvocation@@mapper.getMappedObject(indexDefinition.getIndexKeys(),entity) @TO@ mapper.getMappedSort(indexDefinition.getIndexKeys(),entity) @AT@ 4877 @LENGTH@ 62
---------UPD SimpleName@@MethodName:getMappedObject:[indexDefinition.getIndexKeys(), entity] @TO@ MethodName:getMappedSort:[indexDefinition.getIndexKeys(), entity] @AT@ 4884 @LENGTH@ 55


UPD TypeDeclaration@@[@Component("xj"), public]XJComponent, XsltComponent @TO@ [@Component("xj"), public]XJComponent, XsltSaxonComponent @AT@ 1172 @LENGTH@ 210
---UPD SimpleType@@XsltComponent @TO@ XsltSaxonComponent @AT@ 1222 @LENGTH@ 13


UPD FieldDeclaration@@private, ReactiveAuthenticationManagerResolver<ServerHttpRequest>, [authenticationManagerResolver] @TO@ private, ReactiveAuthenticationManagerResolver<ServerWebExchange>, [authenticationManagerResolver] @AT@ 65037 @LENGTH@ 95
---UPD ParameterizedType@@ReactiveAuthenticationManagerResolver<ServerHttpRequest> @TO@ ReactiveAuthenticationManagerResolver<ServerWebExchange> @AT@ 65045 @LENGTH@ 56
------UPD SimpleType@@ServerHttpRequest @TO@ ServerWebExchange @AT@ 65083 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:modifiable.put("grant_type",grantType) @TO@ MethodInvocation:modifiable.put(OAuth2Utils.GRANT_TYPE,grantType) @AT@ 3092 @LENGTH@ 40
---UPD MethodInvocation@@modifiable.put("grant_type",grantType) @TO@ modifiable.put(OAuth2Utils.GRANT_TYPE,grantType) @AT@ 3092 @LENGTH@ 39
------UPD SimpleName@@MethodName:put:["grant_type", grantType] @TO@ MethodName:put:[OAuth2Utils.GRANT_TYPE, grantType] @AT@ 3103 @LENGTH@ 28
---------INS QualifiedName@@OAuth2Utils.GRANT_TYPE @TO@ SimpleName@@MethodName:put:["grant_type", grantType] @AT@ 3107 @LENGTH@ 22
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 3107 @LENGTH@ 11
------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 3119 @LENGTH@ 10
---------DEL StringLiteral@@"grant_type" @AT@ 3107 @LENGTH@ 12


INS IfStatement@@if (target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain())) {  target.setSubjectInfo(source.getSubjectInfo());} else {  currentUtil.createSubjectInfo(previousUtil.getUserPrincipal(),previousUtil.getCredential(),previousUtil.getSubject());} @TO@ MethodDeclaration@@private, void, MethodName:propagateSubject, final SecurityContext target, final SecurityContext source,  @AT@ 17049 @LENGTH@ 362
---INS InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain()) @TO@ IfStatement@@if (target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain())) {  target.setSubjectInfo(source.getSubjectInfo());} else {  currentUtil.createSubjectInfo(previousUtil.getUserPrincipal(),previousUtil.getCredential(),previousUtil.getSubject());} @AT@ 17052 @LENGTH@ 137
------INS InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null @TO@ InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain()) @AT@ 17052 @LENGTH@ 72
---------INS InfixExpression@@target.getSecurityDomain() != null @TO@ InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null @AT@ 17052 @LENGTH@ 34
------------INS MethodInvocation@@target.getSecurityDomain() @TO@ InfixExpression@@target.getSecurityDomain() != null @AT@ 17052 @LENGTH@ 26
---------------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.getSecurityDomain() @AT@ 17052 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getSecurityDomain:[] @TO@ MethodInvocation@@target.getSecurityDomain() @AT@ 17059 @LENGTH@ 19
------------INS Operator@@!= @TO@ InfixExpression@@target.getSecurityDomain() != null @AT@ 17078 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@target.getSecurityDomain() != null @AT@ 17082 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null @AT@ 17086 @LENGTH@ 2
---------INS InfixExpression@@source.getSecurityDomain() != null @TO@ InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null @AT@ 17090 @LENGTH@ 34
------------INS MethodInvocation@@source.getSecurityDomain() @TO@ InfixExpression@@source.getSecurityDomain() != null @AT@ 17090 @LENGTH@ 26
---------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getSecurityDomain() @AT@ 17090 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getSecurityDomain:[] @TO@ MethodInvocation@@source.getSecurityDomain() @AT@ 17097 @LENGTH@ 19
------------INS Operator@@!= @TO@ InfixExpression@@source.getSecurityDomain() != null @AT@ 17116 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@source.getSecurityDomain() != null @AT@ 17120 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain()) @AT@ 17124 @LENGTH@ 2
------INS MethodInvocation@@target.getSecurityDomain().equals(source.getSecurityDomain()) @TO@ InfixExpression@@target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain()) @AT@ 17128 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:getSecurityDomain:[] @TO@ MethodInvocation@@target.getSecurityDomain().equals(source.getSecurityDomain()) @AT@ 17128 @LENGTH@ 26
---------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.getSecurityDomain().equals(source.getSecurityDomain()) @AT@ 17128 @LENGTH@ 6
---------INS SimpleName@@MethodName:equals:[source.getSecurityDomain()] @TO@ MethodInvocation@@target.getSecurityDomain().equals(source.getSecurityDomain()) @AT@ 17155 @LENGTH@ 34
------------INS MethodInvocation@@source.getSecurityDomain() @TO@ SimpleName@@MethodName:equals:[source.getSecurityDomain()] @AT@ 17162 @LENGTH@ 26
---------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getSecurityDomain() @AT@ 17162 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getSecurityDomain:[] @TO@ MethodInvocation@@source.getSecurityDomain() @AT@ 17169 @LENGTH@ 19
---INS Block@@ThenBody:{  target.setSubjectInfo(source.getSubjectInfo());} @TO@ IfStatement@@if (target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain())) {  target.setSubjectInfo(source.getSubjectInfo());} else {  currentUtil.createSubjectInfo(previousUtil.getUserPrincipal(),previousUtil.getCredential(),previousUtil.getSubject());} @AT@ 17190 @LENGTH@ 71
------INS ExpressionStatement@@MethodInvocation:target.setSubjectInfo(source.getSubjectInfo()) @TO@ Block@@ThenBody:{  target.setSubjectInfo(source.getSubjectInfo());} @AT@ 17204 @LENGTH@ 47
---------INS MethodInvocation@@target.setSubjectInfo(source.getSubjectInfo()) @TO@ ExpressionStatement@@MethodInvocation:target.setSubjectInfo(source.getSubjectInfo()) @AT@ 17204 @LENGTH@ 46
------------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.setSubjectInfo(source.getSubjectInfo()) @AT@ 17204 @LENGTH@ 6
------------INS SimpleName@@MethodName:setSubjectInfo:[source.getSubjectInfo()] @TO@ MethodInvocation@@target.setSubjectInfo(source.getSubjectInfo()) @AT@ 17211 @LENGTH@ 39
---------------INS MethodInvocation@@source.getSubjectInfo() @TO@ SimpleName@@MethodName:setSubjectInfo:[source.getSubjectInfo()] @AT@ 17226 @LENGTH@ 23
------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getSubjectInfo() @AT@ 17226 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getSubjectInfo:[] @TO@ MethodInvocation@@source.getSubjectInfo() @AT@ 17233 @LENGTH@ 16
---INS Block@@ElseBody:{  currentUtil.createSubjectInfo(previousUtil.getUserPrincipal(),previousUtil.getCredential(),previousUtil.getSubject());} @TO@ IfStatement@@if (target.getSecurityDomain() != null && source.getSecurityDomain() != null && target.getSecurityDomain().equals(source.getSecurityDomain())) {  target.setSubjectInfo(source.getSubjectInfo());} else {  currentUtil.createSubjectInfo(previousUtil.getUserPrincipal(),previousUtil.getCredential(),previousUtil.getSubject());} @AT@ 17267 @LENGTH@ 144
------MOV ExpressionStatement@@MethodInvocation:currentUtil.createSubjectInfo(previousUtil.getUserPrincipal(),previousUtil.getCredential(),previousUtil.getSubject()) @TO@ Block@@ElseBody:{  currentUtil.createSubjectInfo(previousUtil.getUserPrincipal(),previousUtil.getCredential(),previousUtil.getSubject());} @AT@ 17049 @LENGTH@ 120


UPD MethodDeclaration@@default, RestEndpointProducerBuilder, MethodName:queryParameters, String queryParameters,  @TO@ default, RestEndpointProducerBuilder, MethodName:queryParameters, Map values,  @AT@ 18806 @LENGTH@ 192
---UPD SingleVariableDeclaration@@String queryParameters @TO@ Map values @AT@ 18875 @LENGTH@ 22
------UPD SimpleType@@String @TO@ Map @AT@ 18875 @LENGTH@ 6
------UPD SimpleName@@queryParameters @TO@ values @AT@ 18882 @LENGTH@ 15
---UPD ExpressionStatement@@MethodInvocation:doSetProperty("queryParameters",queryParameters) @TO@ MethodInvocation:doSetMultiValueProperties("queryParameters","null",values) @AT@ 18913 @LENGTH@ 50
------UPD MethodInvocation@@doSetProperty("queryParameters",queryParameters) @TO@ doSetMultiValueProperties("queryParameters","null",values) @AT@ 18913 @LENGTH@ 49
---------UPD SimpleName@@MethodName:doSetProperty:["queryParameters", queryParameters] @TO@ MethodName:doSetMultiValueProperties:["queryParameters", "null", values] @AT@ 18913 @LENGTH@ 49
------------UPD SimpleName@@queryParameters @TO@ values @AT@ 18946 @LENGTH@ 15
------------INS StringLiteral@@"null" @TO@ SimpleName@@MethodName:doSetProperty:["queryParameters", queryParameters] @AT@ 19621 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @TO@ MethodInvocation:from("direct:start").to("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @AT@ 2128 @LENGTH@ 327
---UPD MethodInvocation@@from("direct:start").to("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @TO@ from("direct:start").to("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @AT@ 2128 @LENGTH@ 326
------UPD MethodInvocation@@MethodName:to:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:to:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder"] @AT@ 2128 @LENGTH@ 116
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2152 @LENGTH@ 91
------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2191 @LENGTH@ 52


UPD VariableDeclarationStatement@@Character fourth=headerName.charAt(3); @TO@ char fourth=headerName.charAt(3); @AT@ 22075 @LENGTH@ 40
---DEL SimpleType@@Character @AT@ 22075 @LENGTH@ 9
---INS PrimitiveType@@char @TO@ VariableDeclarationStatement@@Character fourth=headerName.charAt(3); @AT@ 22075 @LENGTH@ 4


UPD TypeDeclaration@@[final]TestSaml2SigningCredentials,  @TO@ [public, final]TestSaml2SigningCredentials,  @AT@ 1412 @LENGTH@ 4560
---INS Modifier@@public @TO@ TypeDeclaration@@[final]TestSaml2SigningCredentials,  @AT@ 1412 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/").with(opaqueToken().attribute("sub","ch4mpy"))).andExpect(content().string(is("Hello, ch4mpy!"))) @TO@ MethodInvocation:this.mvc.perform(get("/").with(opaqueToken().attributes(a -> a.put("sub","ch4mpy")))).andExpect(content().string(is("Hello, ch4mpy!"))) @AT@ 1926 @LENGTH@ 129
---UPD MethodInvocation@@this.mvc.perform(get("/").with(opaqueToken().attribute("sub","ch4mpy"))).andExpect(content().string(is("Hello, ch4mpy!"))) @TO@ this.mvc.perform(get("/").with(opaqueToken().attributes(a -> a.put("sub","ch4mpy")))).andExpect(content().string(is("Hello, ch4mpy!"))) @AT@ 1926 @LENGTH@ 128
------UPD MethodInvocation@@MethodName:perform:[get("/").with(opaqueToken().attribute("sub","ch4mpy"))] @TO@ MethodName:perform:[get("/").with(opaqueToken().attributes(a -> a.put("sub","ch4mpy")))] @AT@ 1926 @LENGTH@ 73
---------UPD MethodInvocation@@get("/").with(opaqueToken().attribute("sub","ch4mpy")) @TO@ get("/").with(opaqueToken().attributes(a -> a.put("sub","ch4mpy"))) @AT@ 1943 @LENGTH@ 55
------------UPD SimpleName@@MethodName:with:[opaqueToken().attribute("sub","ch4mpy")] @TO@ MethodName:with:[opaqueToken().attributes(a -> a.put("sub","ch4mpy"))] @AT@ 1952 @LENGTH@ 46
---------------UPD MethodInvocation@@opaqueToken().attribute("sub","ch4mpy") @TO@ opaqueToken().attributes(a -> a.put("sub","ch4mpy")) @AT@ 1957 @LENGTH@ 40
------------------INS SimpleName@@MethodName:attributes:[a -> a.put("sub","ch4mpy")] @TO@ MethodInvocation@@opaqueToken().attribute("sub","ch4mpy") @AT@ 1971 @LENGTH@ 39
---------------------INS LambdaExpression@@a -> a.put("sub","ch4mpy") @TO@ SimpleName@@MethodName:attributes:[a -> a.put("sub","ch4mpy")] @AT@ 1982 @LENGTH@ 27
------------------------INS VariableDeclarationFragment@@a @TO@ LambdaExpression@@a -> a.put("sub","ch4mpy") @AT@ 1982 @LENGTH@ 1
---------------------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 1982 @LENGTH@ 1
------------------------INS MethodInvocation@@a.put("sub","ch4mpy") @TO@ LambdaExpression@@a -> a.put("sub","ch4mpy") @AT@ 1987 @LENGTH@ 22
---------------------------MOV SimpleName@@MethodName:attribute:["sub", "ch4mpy"] @TO@ MethodInvocation@@a.put("sub","ch4mpy") @AT@ 1971 @LENGTH@ 26
---------------------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.put("sub","ch4mpy") @AT@ 1987 @LENGTH@ 1
------------------UPD SimpleName@@MethodName:attribute:["sub", "ch4mpy"] @TO@ MethodName:put:["sub", "ch4mpy"] @AT@ 1971 @LENGTH@ 26


MOV ExpressionStatement@@MethodInvocation:setProperties(endpoint,params) @TO@ MethodDeclaration@@protected, RabbitMQEndpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> params, Exception,  @AT@ 11828 @LENGTH@ 32


UPD Block@@ThenBody:{  expr=getExpressionValue();  if (expr == null) {    expr=delegate.getExpressionType().createExpression(context);  }  expr.init(context);} @TO@ ThenBody:{  Expression newExpression=getExpressionValue();  if (newExpression == null) {    newExpression=delegate.getExpressionType().createExpression(context);  }  newExpression.init(context);  expr=newExpression;} @AT@ 33130 @LENGTH@ 257
---INS VariableDeclarationStatement@@Expression newExpression=getExpressionValue(); @TO@ Block@@ThenBody:{  expr=getExpressionValue();  if (expr == null) {    expr=delegate.getExpressionType().createExpression(context);  }  expr.init(context);} @AT@ 33152 @LENGTH@ 48
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression newExpression=getExpressionValue(); @AT@ 33152 @LENGTH@ 10
------INS VariableDeclarationFragment@@newExpression=getExpressionValue() @TO@ VariableDeclarationStatement@@Expression newExpression=getExpressionValue(); @AT@ 33163 @LENGTH@ 36
---------INS SimpleName@@newExpression @TO@ VariableDeclarationFragment@@newExpression=getExpressionValue() @AT@ 33163 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:getExpressionValue:[] @TO@ VariableDeclarationFragment@@newExpression=getExpressionValue() @AT@ 33179 @LENGTH@ 20
---DEL ExpressionStatement@@Assignment:expr=getExpressionValue() @AT@ 33152 @LENGTH@ 28
------DEL Assignment@@expr=getExpressionValue() @AT@ 33152 @LENGTH@ 27
---------DEL SimpleName@@expr @AT@ 33152 @LENGTH@ 4
---------DEL Operator@@= @AT@ 33156 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:getExpressionValue:[] @AT@ 33159 @LENGTH@ 20
---UPD IfStatement@@if (expr == null) {  expr=delegate.getExpressionType().createExpression(context);} @TO@ if (newExpression == null) {  newExpression=delegate.getExpressionType().createExpression(context);} @AT@ 33201 @LENGTH@ 128
------UPD InfixExpression@@expr == null @TO@ newExpression == null @AT@ 33205 @LENGTH@ 12
---------UPD SimpleName@@expr @TO@ newExpression @AT@ 33205 @LENGTH@ 4
------UPD Block@@ThenBody:{  expr=delegate.getExpressionType().createExpression(context);} @TO@ ThenBody:{  newExpression=delegate.getExpressionType().createExpression(context);} @AT@ 33219 @LENGTH@ 110
---------UPD ExpressionStatement@@Assignment:expr=delegate.getExpressionType().createExpression(context) @TO@ Assignment:newExpression=delegate.getExpressionType().createExpression(context) @AT@ 33245 @LENGTH@ 62
------------UPD Assignment@@expr=delegate.getExpressionType().createExpression(context) @TO@ newExpression=delegate.getExpressionType().createExpression(context) @AT@ 33245 @LENGTH@ 61
---------------UPD SimpleName@@expr @TO@ newExpression @AT@ 33245 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:expr.init(context) @TO@ MethodInvocation:newExpression.init(context) @AT@ 33350 @LENGTH@ 19
------UPD MethodInvocation@@expr.init(context) @TO@ newExpression.init(context) @AT@ 33350 @LENGTH@ 18
---------UPD SimpleName@@Name:expr @TO@ Name:newExpression @AT@ 33350 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:expr=newExpression @TO@ Block@@ThenBody:{  expr=getExpressionValue();  if (expr == null) {    expr=delegate.getExpressionType().createExpression(context);  }  expr.init(context);} @AT@ 33437 @LENGTH@ 21
------INS Assignment@@expr=newExpression @TO@ ExpressionStatement@@Assignment:expr=newExpression @AT@ 33437 @LENGTH@ 20
---------INS SimpleName@@expr @TO@ Assignment@@expr=newExpression @AT@ 33437 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@expr=newExpression @AT@ 33441 @LENGTH@ 1
---------INS SimpleName@@newExpression @TO@ Assignment@@expr=newExpression @AT@ 33444 @LENGTH@ 13


UPD MethodDeclaration@@public, List<org.apache.hadoop.hive.metastore.api.Partition>, MethodName:addPartition, List<org.apache.hadoop.hive.metastore.api.Partition> partitions, boolean ifNotExists, boolean needResults, HiveException,  @TO@ public, List<org.apache.hadoop.hive.metastore.api.Partition>, MethodName:addPartitions, List<org.apache.hadoop.hive.metastore.api.Partition> partitions, boolean ifNotExists, boolean needResults, HiveException,  @AT@ 137331 @LENGTH@ 429
---UPD SimpleName@@MethodName:addPartition @TO@ MethodName:addPartitions @AT@ 137391 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:setOptions, Map<String,Object> options,  @TO@ TypeDeclaration@@[public]RequestBeanHolder, [BeanHolder] @AT@ 1457 @LENGTH@ 100
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1457 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1464 @LENGTH@ 4
---INS SimpleName@@MethodName:setOptions @TO@ MethodDeclaration@@public, void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1469 @LENGTH@ 10
---INS SingleVariableDeclaration@@Map<String,Object> options @TO@ MethodDeclaration@@public, void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1480 @LENGTH@ 27
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> options @AT@ 1480 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1480 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1484 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1492 @LENGTH@ 6
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@Map<String,Object> options @AT@ 1500 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.holder.setOptions(options) @TO@ MethodDeclaration@@public, void, MethodName:setOptions, Map<String,Object> options,  @AT@ 1519 @LENGTH@ 32
------INS MethodInvocation@@this.holder.setOptions(options) @TO@ ExpressionStatement@@MethodInvocation:this.holder.setOptions(options) @AT@ 1519 @LENGTH@ 31
---------INS FieldAccess@@this.holder @TO@ MethodInvocation@@this.holder.setOptions(options) @AT@ 1519 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.holder @AT@ 1519 @LENGTH@ 4
------------INS SimpleName@@holder @TO@ FieldAccess@@this.holder @AT@ 1524 @LENGTH@ 6
---------INS SimpleName@@MethodName:setOptions:[options] @TO@ MethodInvocation@@this.holder.setOptions(options) @AT@ 1531 @LENGTH@ 19
------------INS SimpleName@@options @TO@ SimpleName@@MethodName:setOptions:[options] @AT@ 1542 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, BigInteger, [BIGINT_IDENTIFIER=new BigInteger("999")] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]AclClassIdUtilsTest,  @AT@ 1320 @LENGTH@ 74
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, BigInteger, [BIGINT_IDENTIFIER=new BigInteger("999")] @AT@ 1320 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, BigInteger, [BIGINT_IDENTIFIER=new BigInteger("999")] @AT@ 1328 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, BigInteger, [BIGINT_IDENTIFIER=new BigInteger("999")] @AT@ 1335 @LENGTH@ 5
---INS SimpleType@@BigInteger @TO@ FieldDeclaration@@private, static, final, BigInteger, [BIGINT_IDENTIFIER=new BigInteger("999")] @AT@ 1341 @LENGTH@ 10
---INS VariableDeclarationFragment@@BIGINT_IDENTIFIER=new BigInteger("999") @TO@ FieldDeclaration@@private, static, final, BigInteger, [BIGINT_IDENTIFIER=new BigInteger("999")] @AT@ 1352 @LENGTH@ 41
------INS SimpleName@@BIGINT_IDENTIFIER @TO@ VariableDeclarationFragment@@BIGINT_IDENTIFIER=new BigInteger("999") @AT@ 1352 @LENGTH@ 17
------INS ClassInstanceCreation@@BigInteger["999"] @TO@ VariableDeclarationFragment@@BIGINT_IDENTIFIER=new BigInteger("999") @AT@ 1372 @LENGTH@ 21
---------INS New@@new @TO@ ClassInstanceCreation@@BigInteger["999"] @AT@ 1372 @LENGTH@ 3
---------INS SimpleType@@BigInteger @TO@ ClassInstanceCreation@@BigInteger["999"] @AT@ 1376 @LENGTH@ 10
---------INS StringLiteral@@"999" @TO@ ClassInstanceCreation@@BigInteger["999"] @AT@ 1387 @LENGTH@ 5


UPD TryStatement@@try (InputStream inputStream=new FileInputStream(input);InputStream expectedStream=new FileInputStream(expected);ZstdCompressorInputStream zstdInputStream=new ZstdCompressorInputStream(inputStream)){  final byte[] b=new byte[97];  IOUtils.readFully(expectedStream,b);  final ByteArrayOutputStream bos=new ByteArrayOutputStream();  int readByte=-1;  while ((readByte=zstdInputStream.read()) != -1) {    bos.write(readByte);  }  Assert.assertArrayEquals(b,bos.toByteArray());}  @TO@ try (InputStream inputStream=new FileInputStream(input);ZstdCompressorInputStream zstdInputStream=new ZstdCompressorInputStream(inputStream)){  final byte[] b=new byte[97];  IOUtils.read(expected,b);  final ByteArrayOutputStream bos=new ByteArrayOutputStream();  int readByte=-1;  while ((readByte=zstdInputStream.read()) != -1) {    bos.write(readByte);  }  Assert.assertArrayEquals(b,bos.toByteArray());}  @AT@ 1861 @LENGTH@ 615
---DEL VariableDeclarationExpression@@InputStream expectedStream=new FileInputStream(expected) @AT@ 1932 @LENGTH@ 58
------DEL SimpleType@@InputStream @AT@ 1932 @LENGTH@ 11
------DEL VariableDeclarationFragment@@expectedStream=new FileInputStream(expected) @AT@ 1944 @LENGTH@ 46
---------DEL SimpleName@@expectedStream @AT@ 1944 @LENGTH@ 14
---------DEL ClassInstanceCreation@@FileInputStream[expected] @AT@ 1961 @LENGTH@ 29
------------DEL New@@new @AT@ 1961 @LENGTH@ 3
------------DEL SimpleType@@FileInputStream @AT@ 1965 @LENGTH@ 15
------------DEL SimpleName@@expected @AT@ 1981 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:IOUtils.readFully(expectedStream,b) @TO@ MethodInvocation:IOUtils.read(expected,b) @AT@ 2149 @LENGTH@ 37
------UPD MethodInvocation@@IOUtils.readFully(expectedStream,b) @TO@ IOUtils.read(expected,b) @AT@ 2149 @LENGTH@ 36
---------UPD SimpleName@@MethodName:readFully:[expectedStream, b] @TO@ MethodName:read:[expected, b] @AT@ 2157 @LENGTH@ 28
------------UPD SimpleName@@expectedStream @TO@ expected @AT@ 2167 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:log.debug(String.format("Invoke '%s' on bound conneciton",method.getName())) @TO@ MethodInvocation:log.debug(String.format("Invoke '%s' on bound connection",method.getName())) @AT@ 12731 @LENGTH@ 78
---UPD MethodInvocation@@log.debug(String.format("Invoke '%s' on bound conneciton",method.getName())) @TO@ log.debug(String.format("Invoke '%s' on bound connection",method.getName())) @AT@ 12731 @LENGTH@ 77
------UPD SimpleName@@MethodName:debug:[String.format("Invoke '%s' on bound conneciton",method.getName())] @TO@ MethodName:debug:[String.format("Invoke '%s' on bound connection",method.getName())] @AT@ 12735 @LENGTH@ 73
---------UPD MethodInvocation@@String.format("Invoke '%s' on bound conneciton",method.getName()) @TO@ String.format("Invoke '%s' on bound connection",method.getName()) @AT@ 12741 @LENGTH@ 66
------------UPD SimpleName@@MethodName:format:["Invoke '%s' on bound conneciton", method.getName()] @TO@ MethodName:format:["Invoke '%s' on bound connection", method.getName()] @AT@ 12748 @LENGTH@ 59
---------------UPD StringLiteral@@"Invoke '%s' on bound conneciton" @TO@ "Invoke '%s' on bound connection" @AT@ 12755 @LENGTH@ 33


UPD MethodDeclaration@@public, voidMethodName:AesBytesEncryptor, String password, CharSequence salt, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @TO@ public, voidMethodName:AesBytesEncryptor, SecretKey secretKey, BytesKeyGenerator ivGenerator, CipherAlgorithm alg,  @AT@ 3088 @LENGTH@ 533
---UPD SingleVariableDeclaration@@String password @TO@ SecretKey secretKey @AT@ 3113 @LENGTH@ 15
------UPD SimpleType@@String @TO@ SecretKey @AT@ 3113 @LENGTH@ 6
------UPD SimpleName@@password @TO@ secretKey @AT@ 3120 @LENGTH@ 8
---DEL SingleVariableDeclaration@@CharSequence salt @AT@ 3130 @LENGTH@ 17
------DEL SimpleType@@CharSequence @AT@ 3130 @LENGTH@ 12
------DEL SimpleName@@salt @AT@ 3143 @LENGTH@ 4
---DEL VariableDeclarationStatement@@PBEKeySpec keySpec=new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256); @AT@ 3208 @LENGTH@ 93
------DEL SimpleType@@PBEKeySpec @AT@ 3208 @LENGTH@ 10
------DEL VariableDeclarationFragment@@keySpec=new PBEKeySpec(password.toCharArray(),Hex.decode(salt),1024,256) @AT@ 3219 @LENGTH@ 81
---------DEL SimpleName@@keySpec @AT@ 3219 @LENGTH@ 7
---DEL VariableDeclarationStatement@@SecretKey secretKey=newSecretKey("PBKDF2WithHmacSHA1",keySpec); @AT@ 3304 @LENGTH@ 66
------DEL SimpleType@@SecretKey @AT@ 3304 @LENGTH@ 9
------DEL VariableDeclarationFragment@@secretKey=newSecretKey("PBKDF2WithHmacSHA1",keySpec) @AT@ 3314 @LENGTH@ 55
---------DEL SimpleName@@secretKey @AT@ 3314 @LENGTH@ 9
---------DEL MethodInvocation@@newSecretKey("PBKDF2WithHmacSHA1",keySpec) @AT@ 3326 @LENGTH@ 43
------------DEL SimpleName@@MethodName:newSecretKey:["PBKDF2WithHmacSHA1", keySpec] @AT@ 3326 @LENGTH@ 43
---------------DEL StringLiteral@@"PBKDF2WithHmacSHA1" @AT@ 3339 @LENGTH@ 20
---------------DEL SimpleName@@keySpec @AT@ 3361 @LENGTH@ 7


MOV VariableDeclarationStatement@@long count; @TO@ MethodDeclaration@@public, void, MethodName:testReadBigFile, Exception,  @AT@ 4373 @LENGTH@ 11


UPD Block@@ThenBody:{  pages.put(component + ":ROOT:" + n.get().getFileName().toString(),n.get());} @TO@ ThenBody:{  Path f=n.get();  Path m=f.getParent();  while (!m.getParent().getFileName().toString().equals("modules")) {    m=m.getParent();  }  pages.put(component + ":" + m.getFileName().toString()+ ":"+ f.getFileName().toString(),n.get());} @AT@ 4451 @LENGTH@ 116
---UPD ExpressionStatement@@MethodInvocation:pages.put(component + ":ROOT:" + n.get().getFileName().toString(),n.get()) @TO@ MethodInvocation:pages.put(component + ":" + m.getFileName().toString()+ ":"+ f.getFileName().toString(),n.get()) @AT@ 4473 @LENGTH@ 76
------UPD MethodInvocation@@pages.put(component + ":ROOT:" + n.get().getFileName().toString(),n.get()) @TO@ pages.put(component + ":" + m.getFileName().toString()+ ":"+ f.getFileName().toString(),n.get()) @AT@ 4473 @LENGTH@ 75
---------UPD SimpleName@@MethodName:put:[component + ":ROOT:" + n.get().getFileName().toString(), n.get()] @TO@ MethodName:put:[component + ":" + m.getFileName().toString()+ ":"+ f.getFileName().toString(), n.get()] @AT@ 4479 @LENGTH@ 69
------------UPD InfixExpression@@component + ":ROOT:" + n.get().getFileName().toString() @TO@ component + ":" + m.getFileName().toString()+ ":"+ f.getFileName().toString() @AT@ 4483 @LENGTH@ 55
---------------UPD StringLiteral@@":ROOT:" @TO@ ":" @AT@ 4495 @LENGTH@ 8
---------------UPD MethodInvocation@@n.get().getFileName().toString() @TO@ m.getFileName().toString() @AT@ 4506 @LENGTH@ 32
------------------DEL MethodInvocation@@MethodName:get:[] @AT@ 4506 @LENGTH@ 7
------------------UPD SimpleName@@Name:n @TO@ Name:m @AT@ 4506 @LENGTH@ 1
---------------INS StringLiteral@@":" @TO@ InfixExpression@@component + ":ROOT:" + n.get().getFileName().toString() @AT@ 4765 @LENGTH@ 3
---------------INS MethodInvocation@@f.getFileName().toString() @TO@ InfixExpression@@component + ":ROOT:" + n.get().getFileName().toString() @AT@ 4771 @LENGTH@ 26
------------------INS MethodInvocation@@MethodName:getFileName:[] @TO@ MethodInvocation@@f.getFileName().toString() @AT@ 4771 @LENGTH@ 15
------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.getFileName().toString() @AT@ 4771 @LENGTH@ 1
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@f.getFileName().toString() @AT@ 4787 @LENGTH@ 10
---INS VariableDeclarationStatement@@Path f=n.get(); @TO@ Block@@ThenBody:{  pages.put(component + ":ROOT:" + n.get().getFileName().toString(),n.get());} @AT@ 4473 @LENGTH@ 17
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path f=n.get(); @AT@ 4473 @LENGTH@ 4
------INS VariableDeclarationFragment@@f=n.get() @TO@ VariableDeclarationStatement@@Path f=n.get(); @AT@ 4478 @LENGTH@ 11
---------INS SimpleName@@f @TO@ VariableDeclarationFragment@@f=n.get() @AT@ 4478 @LENGTH@ 1
---------INS MethodInvocation@@n.get() @TO@ VariableDeclarationFragment@@f=n.get() @AT@ 4482 @LENGTH@ 7
------------INS SimpleName@@Name:n @TO@ MethodInvocation@@n.get() @AT@ 4482 @LENGTH@ 1
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@n.get() @AT@ 4484 @LENGTH@ 5
---INS VariableDeclarationStatement@@Path m=f.getParent(); @TO@ Block@@ThenBody:{  pages.put(component + ":ROOT:" + n.get().getFileName().toString(),n.get());} @AT@ 4511 @LENGTH@ 23
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path m=f.getParent(); @AT@ 4511 @LENGTH@ 4
------INS VariableDeclarationFragment@@m=f.getParent() @TO@ VariableDeclarationStatement@@Path m=f.getParent(); @AT@ 4516 @LENGTH@ 17
---------INS SimpleName@@m @TO@ VariableDeclarationFragment@@m=f.getParent() @AT@ 4516 @LENGTH@ 1
---------INS MethodInvocation@@f.getParent() @TO@ VariableDeclarationFragment@@m=f.getParent() @AT@ 4520 @LENGTH@ 13
------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.getParent() @AT@ 4520 @LENGTH@ 1
------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@f.getParent() @AT@ 4522 @LENGTH@ 11
---INS WhileStatement@@while (!m.getParent().getFileName().toString().equals("modules")) {  m=m.getParent();} @TO@ Block@@ThenBody:{  pages.put(component + ":ROOT:" + n.get().getFileName().toString(),n.get());} @AT@ 4555 @LENGTH@ 132
------INS PrefixExpression@@!m.getParent().getFileName().toString().equals("modules") @TO@ WhileStatement@@while (!m.getParent().getFileName().toString().equals("modules")) {  m=m.getParent();} @AT@ 4562 @LENGTH@ 57
---------INS Operator@@! @TO@ PrefixExpression@@!m.getParent().getFileName().toString().equals("modules") @AT@ 4562 @LENGTH@ 1
---------INS MethodInvocation@@m.getParent().getFileName().toString().equals("modules") @TO@ PrefixExpression@@!m.getParent().getFileName().toString().equals("modules") @AT@ 4563 @LENGTH@ 56
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@m.getParent().getFileName().toString().equals("modules") @AT@ 4563 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:getFileName:[] @TO@ MethodInvocation@@m.getParent().getFileName().toString().equals("modules") @AT@ 4563 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@m.getParent().getFileName().toString().equals("modules") @AT@ 4563 @LENGTH@ 13
------------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.getParent().getFileName().toString().equals("modules") @AT@ 4563 @LENGTH@ 1
------------INS SimpleName@@MethodName:equals:["modules"] @TO@ MethodInvocation@@m.getParent().getFileName().toString().equals("modules") @AT@ 4602 @LENGTH@ 17
---------------INS StringLiteral@@"modules" @TO@ SimpleName@@MethodName:equals:["modules"] @AT@ 4609 @LENGTH@ 9
------INS Block@@WhileBody:{  m=m.getParent();} @TO@ WhileStatement@@while (!m.getParent().getFileName().toString().equals("modules")) {  m=m.getParent();} @AT@ 4621 @LENGTH@ 66
---------INS ExpressionStatement@@Assignment:m=m.getParent() @TO@ Block@@WhileBody:{  m=m.getParent();} @AT@ 4647 @LENGTH@ 18
------------INS Assignment@@m=m.getParent() @TO@ ExpressionStatement@@Assignment:m=m.getParent() @AT@ 4647 @LENGTH@ 17
---------------INS SimpleName@@m @TO@ Assignment@@m=m.getParent() @AT@ 4647 @LENGTH@ 1
---------------INS Operator@@= @TO@ Assignment@@m=m.getParent() @AT@ 4648 @LENGTH@ 1
---------------INS MethodInvocation@@m.getParent() @TO@ Assignment@@m=m.getParent() @AT@ 4651 @LENGTH@ 13
------------------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.getParent() @AT@ 4651 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@m.getParent() @AT@ 4653 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:requestWhenMockOidcLoginThenIndex, Exception,  @TO@ public, void, MethodName:requestWhenMockOAuth2LoginThenIndex, Exception,  @AT@ 11917 @LENGTH@ 483
---UPD SimpleName@@MethodName:requestWhenMockOidcLoginThenIndex @TO@ MethodName:requestWhenMockOAuth2LoginThenIndex @AT@ 11929 @LENGTH@ 33
---UPD ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/").with(oidcLogin().clientRegistration(clientRegistration))).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","GitHub")).andExpect(model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject"))) @TO@ MethodInvocation:this.mvc.perform(get("/").with(oauth2Login().clientRegistration(clientRegistration))).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","GitHub")).andExpect(model().attribute("userAttributes",Collections.singletonMap("sub","test-subject"))) @AT@ 12094 @LENGTH@ 303
------UPD MethodInvocation@@this.mvc.perform(get("/").with(oidcLogin().clientRegistration(clientRegistration))).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","GitHub")).andExpect(model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject"))) @TO@ this.mvc.perform(get("/").with(oauth2Login().clientRegistration(clientRegistration))).andExpect(model().attribute("userName","test-subject")).andExpect(model().attribute("clientName","GitHub")).andExpect(model().attribute("userAttributes",Collections.singletonMap("sub","test-subject"))) @AT@ 12094 @LENGTH@ 302
---------UPD MethodInvocation@@MethodName:perform:[get("/").with(oidcLogin().clientRegistration(clientRegistration))] @TO@ MethodName:perform:[get("/").with(oauth2Login().clientRegistration(clientRegistration))] @AT@ 12094 @LENGTH@ 83
------------UPD MethodInvocation@@get("/").with(oidcLogin().clientRegistration(clientRegistration)) @TO@ get("/").with(oauth2Login().clientRegistration(clientRegistration)) @AT@ 12111 @LENGTH@ 65
---------------UPD SimpleName@@MethodName:with:[oidcLogin().clientRegistration(clientRegistration)] @TO@ MethodName:with:[oauth2Login().clientRegistration(clientRegistration)] @AT@ 12120 @LENGTH@ 56
------------------UPD MethodInvocation@@oidcLogin().clientRegistration(clientRegistration) @TO@ oauth2Login().clientRegistration(clientRegistration) @AT@ 12125 @LENGTH@ 50
---------------------UPD MethodInvocation@@MethodName:oidcLogin:[] @TO@ MethodName:oauth2Login:[] @AT@ 12125 @LENGTH@ 11
---------UPD SimpleName@@MethodName:andExpect:[model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject"))] @TO@ MethodName:andExpect:[model().attribute("userAttributes",Collections.singletonMap("sub","test-subject"))] @AT@ 12303 @LENGTH@ 93
------------UPD MethodInvocation@@model().attribute("userAttributes",Collections.singletonMap(SUB,"test-subject")) @TO@ model().attribute("userAttributes",Collections.singletonMap("sub","test-subject")) @AT@ 12313 @LENGTH@ 82
---------------UPD SimpleName@@MethodName:attribute:["userAttributes", Collections.singletonMap(SUB,"test-subject")] @TO@ MethodName:attribute:["userAttributes", Collections.singletonMap("sub","test-subject")] @AT@ 12321 @LENGTH@ 74
------------------UPD MethodInvocation@@Collections.singletonMap(SUB,"test-subject") @TO@ Collections.singletonMap("sub","test-subject") @AT@ 12349 @LENGTH@ 45
---------------------UPD SimpleName@@MethodName:singletonMap:[SUB, "test-subject"] @TO@ MethodName:singletonMap:["sub", "test-subject"] @AT@ 12361 @LENGTH@ 33
------------------------INS StringLiteral@@"sub" @TO@ SimpleName@@MethodName:singletonMap:[SUB, "test-subject"] @AT@ 12297 @LENGTH@ 5
------------------------DEL SimpleName@@SUB @AT@ 12374 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertTrue("Size should be around 50",template.getCurrentCacheSize() >= 50) @TO@ MethodInvocation:await().atMost(2,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 50) @AT@ 2173 @LENGTH@ 77
---UPD MethodInvocation@@assertTrue("Size should be around 50",template.getCurrentCacheSize() >= 50) @TO@ await().atMost(2,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 50) @AT@ 2173 @LENGTH@ 76
------UPD SimpleName@@MethodName:assertTrue:["Size should be around 50", template.getCurrentCacheSize() >= 50] @TO@ MethodName:until:[() -> template.getCurrentCacheSize() == 50] @AT@ 2173 @LENGTH@ 76
---------DEL StringLiteral@@"Size should be around 50" @AT@ 2184 @LENGTH@ 26
---------DEL InfixExpression@@template.getCurrentCacheSize() >= 50 @AT@ 2212 @LENGTH@ 36
---------INS LambdaExpression@@() -> template.getCurrentCacheSize() == 50 @TO@ SimpleName@@MethodName:assertTrue:["Size should be around 50", template.getCurrentCacheSize() >= 50] @AT@ 2301 @LENGTH@ 42
------------INS InfixExpression@@template.getCurrentCacheSize() == 50 @TO@ LambdaExpression@@() -> template.getCurrentCacheSize() == 50 @AT@ 2307 @LENGTH@ 36
---------------MOV MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 50 @AT@ 2212 @LENGTH@ 30
---------------MOV MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 50 @AT@ 2212 @LENGTH@ 30
---------------MOV Operator@@>= @TO@ InfixExpression@@template.getCurrentCacheSize() == 50 @AT@ 2242 @LENGTH@ 2
---------------MOV Operator@@>= @TO@ InfixExpression@@template.getCurrentCacheSize() == 50 @AT@ 2242 @LENGTH@ 2
---------------MOV NumberLiteral@@50 @TO@ InfixExpression@@template.getCurrentCacheSize() == 50 @AT@ 2246 @LENGTH@ 2
---------------MOV NumberLiteral@@50 @TO@ InfixExpression@@template.getCurrentCacheSize() == 50 @AT@ 2246 @LENGTH@ 2
------INS MethodInvocation@@MethodName:atMost:[2, TimeUnit.SECONDS] @TO@ MethodInvocation@@assertTrue("Size should be around 50",template.getCurrentCacheSize() >= 50) @AT@ 2259 @LENGTH@ 35
---------INS NumberLiteral@@2 @TO@ MethodInvocation@@MethodName:atMost:[2, TimeUnit.SECONDS] @AT@ 2274 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[2, TimeUnit.SECONDS] @AT@ 2277 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2277 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2286 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@assertTrue("Size should be around 50",template.getCurrentCacheSize() >= 50) @AT@ 2259 @LENGTH@ 7


UPD FieldDeclaration@@private, File, [index] @TO@ protected, File, [index] @AT@ 2567 @LENGTH@ 19
---UPD Modifier@@private @TO@ protected @AT@ 2567 @LENGTH@ 7


UPD VariableDeclarationStatement@@Set<ResourceMetadata> metadata=new HashSet<ResourceMetadata>(); @TO@ Set<ResourceMetadata> metadata=new HashSet<>(); @AT@ 5129 @LENGTH@ 65
---UPD VariableDeclarationFragment@@metadata=new HashSet<ResourceMetadata>() @TO@ metadata=new HashSet<>() @AT@ 5151 @LENGTH@ 42
------UPD ClassInstanceCreation@@HashSet<ResourceMetadata>[] @TO@ HashSet<>[] @AT@ 5162 @LENGTH@ 31
---------UPD ParameterizedType@@HashSet<ResourceMetadata> @TO@ HashSet<> @AT@ 5166 @LENGTH@ 25
------------DEL SimpleType@@ResourceMetadata @AT@ 5174 @LENGTH@ 16


UPD IfStatement@@if (writerSettings == null) {  writerSettings=createAndConfigureWriterSettings();  marshaller=new Marshaller<>(headers,headers == null);} @TO@ if (writerSettings == null) {  marshaller=new Marshaller<>(headers,headers == null);  writerSettings=createAndConfigureWriterSettings();} @AT@ 3585 @LENGTH@ 197
---UPD Block@@ThenBody:{  writerSettings=createAndConfigureWriterSettings();  marshaller=new Marshaller<>(headers,headers == null);} @TO@ ThenBody:{  marshaller=new Marshaller<>(headers,headers == null);  writerSettings=createAndConfigureWriterSettings();} @AT@ 3613 @LENGTH@ 169
------MOV ExpressionStatement@@Assignment:writerSettings=createAndConfigureWriterSettings() @TO@ Block@@ThenBody:{  writerSettings=createAndConfigureWriterSettings();  marshaller=new Marshaller<>(headers,headers == null);} @AT@ 3635 @LENGTH@ 52


UPD FieldDeclaration@@private, Converter<Jwt,? extends AbstractAuthenticationToken>, [jwtAuthenticationConverter=new JwtAuthenticationConverter()] @TO@ private, Converter<Jwt,? extends AbstractAuthenticationToken>, [jwtAuthenticationConverter] @AT@ 11123 @LENGTH@ 128
---UPD VariableDeclarationFragment@@jwtAuthenticationConverter=new JwtAuthenticationConverter() @TO@ jwtAuthenticationConverter @AT@ 11185 @LENGTH@ 65
------DEL ClassInstanceCreation@@JwtAuthenticationConverter[] @AT@ 11218 @LENGTH@ 32
---------DEL New@@new @AT@ 11218 @LENGTH@ 3
---------DEL SimpleType@@JwtAuthenticationConverter @AT@ 11222 @LENGTH@ 26


INS MethodDeclaration@@public, LdapSearcherCache<R,K>, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @TO@ TypeDeclaration@@LdapCacheService, [Service] @AT@ 4660 @LENGTH@ 140
---INS Modifier@@public @TO@ MethodDeclaration@@public, LdapSearcherCache<R,K>, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 4660 @LENGTH@ 6
---INS ParameterizedType@@LdapSearcherCache<R,K> @TO@ MethodDeclaration@@public, LdapSearcherCache<R,K>, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 4667 @LENGTH@ 23
------INS SimpleType@@LdapSearcherCache @TO@ ParameterizedType@@LdapSearcherCache<R,K> @AT@ 4667 @LENGTH@ 17
------INS SimpleType@@R @TO@ ParameterizedType@@LdapSearcherCache<R,K> @AT@ 4685 @LENGTH@ 1
------INS SimpleType@@K @TO@ ParameterizedType@@LdapSearcherCache<R,K> @AT@ 4688 @LENGTH@ 1
---INS SimpleName@@MethodName:getValue @TO@ MethodDeclaration@@public, LdapSearcherCache<R,K>, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 4691 @LENGTH@ 8
---INS SimpleType@@IllegalStateException @TO@ MethodDeclaration@@public, LdapSearcherCache<R,K>, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 4709 @LENGTH@ 21
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@public, LdapSearcherCache<R,K>, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 4732 @LENGTH@ 24
---INS ReturnStatement@@SimpleName:cacheImplementation @TO@ MethodDeclaration@@public, LdapSearcherCache<R,K>, MethodName:getValue, IllegalStateException, IllegalArgumentException,  @AT@ 4767 @LENGTH@ 27
------INS SimpleName@@cacheImplementation @TO@ ReturnStatement@@SimpleName:cacheImplementation @AT@ 4774 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:this.clientRegistrationRepository.findByRegistrationId("github").map(clientRegistration -> this.test.mutateWith(mockOidcLogin().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub"))).block() @TO@ MethodInvocation:this.clientRegistrationRepository.findByRegistrationId("github").map(clientRegistration -> this.test.mutateWith(mockOAuth2Login().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub"))).block() @AT@ 2206 @LENGTH@ 300
---UPD MethodInvocation@@this.clientRegistrationRepository.findByRegistrationId("github").map(clientRegistration -> this.test.mutateWith(mockOidcLogin().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub"))).block() @TO@ this.clientRegistrationRepository.findByRegistrationId("github").map(clientRegistration -> this.test.mutateWith(mockOAuth2Login().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub"))).block() @AT@ 2206 @LENGTH@ 299
------UPD MethodInvocation@@MethodName:map:[clientRegistration -> this.test.mutateWith(mockOidcLogin().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub"))] @TO@ MethodName:map:[clientRegistration -> this.test.mutateWith(mockOAuth2Login().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub"))] @AT@ 2206 @LENGTH@ 291
---------UPD LambdaExpression@@clientRegistration -> this.test.mutateWith(mockOidcLogin().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub")) @TO@ clientRegistration -> this.test.mutateWith(mockOAuth2Login().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub")) @AT@ 2280 @LENGTH@ 211
------------UPD MethodInvocation@@this.test.mutateWith(mockOidcLogin().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub")) @TO@ this.test.mutateWith(mockOAuth2Login().clientRegistration(clientRegistration)).get().uri("/").exchange().expectBody(String.class).value(containsString("GitHub")) @AT@ 2308 @LENGTH@ 183
---------------UPD MethodInvocation@@MethodName:mutateWith:[mockOidcLogin().clientRegistration(clientRegistration)] @TO@ MethodName:mutateWith:[mockOAuth2Login().clientRegistration(clientRegistration)] @AT@ 2308 @LENGTH@ 76
------------------UPD MethodInvocation@@mockOidcLogin().clientRegistration(clientRegistration) @TO@ mockOAuth2Login().clientRegistration(clientRegistration) @AT@ 2329 @LENGTH@ 54
---------------------UPD MethodInvocation@@MethodName:mockOidcLogin:[] @TO@ MethodName:mockOAuth2Login:[] @AT@ 2329 @LENGTH@ 15


UPD IfStatement@@if (parameterizedType.getRawType().equals(List.class) && parameterizedType.getActualTypeArguments().length == 1) {  Type paramType=parameterizedType.getActualTypeArguments()[0];  boolean messageHasGeneric=paramType instanceof ParameterizedType && ((ParameterizedType)paramType).getRawType().equals(Message.class);  this.isMessageList=paramType.equals(Message.class) || messageHasGeneric;  this.isAmqpMessageList=paramType.equals(org.springframework.amqp.core.Message.class);  if (messageHasGeneric) {    genericParameterType=((ParameterizedType)paramType).getActualTypeArguments()[0];  }  if (this.isBatch) {    genericParameterType=paramType;  }} @TO@ if (this.isBatch && parameterizedType.getRawType().equals(List.class) && parameterizedType.getActualTypeArguments().length == 1) {  Type paramType=parameterizedType.getActualTypeArguments()[0];  boolean messageHasGeneric=paramType instanceof ParameterizedType && ((ParameterizedType)paramType).getRawType().equals(Message.class);  this.isMessageList=paramType.equals(Message.class) || messageHasGeneric;  this.isAmqpMessageList=paramType.equals(org.springframework.amqp.core.Message.class);  if (messageHasGeneric) {    genericParameterType=((ParameterizedType)paramType).getActualTypeArguments()[0];  } else {    genericParameterType=paramType;  }} @AT@ 14348 @LENGTH@ 794
---UPD InfixExpression@@parameterizedType.getRawType().equals(List.class) && parameterizedType.getActualTypeArguments().length == 1 @TO@ this.isBatch && parameterizedType.getRawType().equals(List.class) && parameterizedType.getActualTypeArguments().length == 1 @AT@ 14352 @LENGTH@ 113
------MOV MethodInvocation@@parameterizedType.getRawType().equals(List.class) @TO@ InfixExpression@@parameterizedType.getRawType().equals(List.class) && parameterizedType.getActualTypeArguments().length == 1 @AT@ 14352 @LENGTH@ 49
------INS FieldAccess@@this.isBatch @TO@ InfixExpression@@parameterizedType.getRawType().equals(List.class) && parameterizedType.getActualTypeArguments().length == 1 @AT@ 14374 @LENGTH@ 12
---------INS ThisExpression@@this @TO@ FieldAccess@@this.isBatch @AT@ 14374 @LENGTH@ 4
---------INS SimpleName@@isBatch @TO@ FieldAccess@@this.isBatch @AT@ 14379 @LENGTH@ 7
---UPD Block@@ThenBody:{  Type paramType=parameterizedType.getActualTypeArguments()[0];  boolean messageHasGeneric=paramType instanceof ParameterizedType && ((ParameterizedType)paramType).getRawType().equals(Message.class);  this.isMessageList=paramType.equals(Message.class) || messageHasGeneric;  this.isAmqpMessageList=paramType.equals(org.springframework.amqp.core.Message.class);  if (messageHasGeneric) {    genericParameterType=((ParameterizedType)paramType).getActualTypeArguments()[0];  }  if (this.isBatch) {    genericParameterType=paramType;  }} @TO@ ThenBody:{  Type paramType=parameterizedType.getActualTypeArguments()[0];  boolean messageHasGeneric=paramType instanceof ParameterizedType && ((ParameterizedType)paramType).getRawType().equals(Message.class);  this.isMessageList=paramType.equals(Message.class) || messageHasGeneric;  this.isAmqpMessageList=paramType.equals(org.springframework.amqp.core.Message.class);  if (messageHasGeneric) {    genericParameterType=((ParameterizedType)paramType).getActualTypeArguments()[0];  } else {    genericParameterType=paramType;  }} @AT@ 14467 @LENGTH@ 675
------UPD IfStatement@@if (messageHasGeneric) {  genericParameterType=((ParameterizedType)paramType).getActualTypeArguments()[0];} @TO@ if (messageHasGeneric) {  genericParameterType=((ParameterizedType)paramType).getActualTypeArguments()[0];} else {  genericParameterType=paramType;} @AT@ 14867 @LENGTH@ 121
---------INS Block@@ElseBody:{  genericParameterType=paramType;} @TO@ IfStatement@@if (messageHasGeneric) {  genericParameterType=((ParameterizedType)paramType).getActualTypeArguments()[0];} @AT@ 15043 @LENGTH@ 124
------------MOV ExpressionStatement@@Assignment:genericParameterType=paramType @TO@ Block@@ElseBody:{  genericParameterType=paramType;} @AT@ 15096 @LENGTH@ 33
------DEL IfStatement@@if (this.isBatch) {  genericParameterType=paramType;} @AT@ 14994 @LENGTH@ 142
---------DEL FieldAccess@@this.isBatch @AT@ 14998 @LENGTH@ 12
------------DEL ThisExpression@@this @AT@ 14998 @LENGTH@ 4
------------DEL SimpleName@@isBatch @AT@ 15003 @LENGTH@ 7
---------DEL Block@@ThenBody:{  genericParameterType=paramType;} @AT@ 15012 @LENGTH@ 124


UPD VariableDeclarationStatement@@long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong(); @TO@ long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong(); @AT@ 4981 @LENGTH@ 277
---UPD VariableDeclarationFragment@@numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @TO@ numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @AT@ 4986 @LENGTH@ 271
------UPD MethodInvocation@@transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @TO@ transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",recorded.iterator().next().getId())).single().get("numberOfRelations").asLong() @AT@ 5006 @LENGTH@ 251
---------UPD MethodInvocation@@MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations", Values.parameters("id",recorded.iterator().next().getId())] @TO@ MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations", Values.parameters("id",recorded.iterator().next().getId())] @AT@ 5006 @LENGTH@ 203
------------UPD InfixExpression@@"" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations" @TO@ "" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations" @AT@ 5022 @LENGTH@ 121
---------------INS StringLiteral@@"RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))" @TO@ InfixExpression@@"" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t) --> (:Person)) as numberOfRelations" @AT@ 5088 @LENGTH@ 80
---------------UPD StringLiteral@@"RETURN size((t) --> (:Person)) as numberOfRelations" @TO@ " as numberOfRelations" @AT@ 5090 @LENGTH@ 53


UPD VariableDeclarationStatement@@DistinctQueryContext distinctQueryContext=queryOperations.distincQueryContext(query,field); @TO@ DistinctQueryContext distinctQueryContext=queryOperations.distinctQueryContext(query,field); @AT@ 38504 @LENGTH@ 94
---UPD VariableDeclarationFragment@@distinctQueryContext=queryOperations.distincQueryContext(query,field) @TO@ distinctQueryContext=queryOperations.distinctQueryContext(query,field) @AT@ 38525 @LENGTH@ 72
------UPD MethodInvocation@@queryOperations.distincQueryContext(query,field) @TO@ queryOperations.distinctQueryContext(query,field) @AT@ 38548 @LENGTH@ 49
---------UPD SimpleName@@MethodName:distincQueryContext:[query, field] @TO@ MethodName:distinctQueryContext:[query, field] @AT@ 38564 @LENGTH@ 33


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unexpected CharBuffer postion: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf) @TO@ ClassInstanceCreation:new IllegalStateException("Unexpected CharBuffer position: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf) @AT@ 9523 @LENGTH@ 153
---UPD ClassInstanceCreation@@IllegalStateException["Unexpected CharBuffer postion: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf] @TO@ IllegalStateException["Unexpected CharBuffer position: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf] @AT@ 9529 @LENGTH@ 146
------UPD InfixExpression@@"Unexpected CharBuffer postion: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf @TO@ "Unexpected CharBuffer position: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf @AT@ 9555 @LENGTH@ 119
---------UPD StringLiteral@@"Unexpected CharBuffer postion: actual=" @TO@ "Unexpected CharBuffer position: actual=" @AT@ 9555 @LENGTH@ 40


UPD MethodDeclaration@@OpenshiftBuildConfigsEndpointBuilder, MethodName:openshiftBuildConfigs, String path,  @TO@ static, OpenshiftBuildConfigsEndpointBuilder, MethodName:openshiftBuildConfigs, String path,  @AT@ 15506 @LENGTH@ 460
---INS Modifier@@static @TO@ MethodDeclaration@@OpenshiftBuildConfigsEndpointBuilder, MethodName:openshiftBuildConfigs, String path,  @AT@ 15469 @LENGTH@ 6


UPD TypeDeclaration@@[public]ReactiveOAuth2AuthorizedClientProvider,  @TO@ [@FunctionalInterface, public]ReactiveOAuth2AuthorizedClientProvider,  @AT@ 1282 @LENGTH@ 770
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveOAuth2AuthorizedClientProvider,  @AT@ 1282 @LENGTH@ 20


UPD ReturnStatement@@ClassInstanceCreation:new DefaultStatementWithUpdateBuilder(REMOVE,Operations.set(named,label)) @TO@ ClassInstanceCreation:new DefaultStatementWithUpdateBuilder(REMOVE,Operations.remove(named,label)) @AT@ 6512 @LENGTH@ 83
---UPD ClassInstanceCreation@@DefaultStatementWithUpdateBuilder[REMOVE, Operations.set(named,label)] @TO@ DefaultStatementWithUpdateBuilder[REMOVE, Operations.remove(named,label)] @AT@ 6519 @LENGTH@ 75
------UPD MethodInvocation@@Operations.set(named,label) @TO@ Operations.remove(named,label) @AT@ 6565 @LENGTH@ 28
---------UPD SimpleName@@MethodName:set:[named, label] @TO@ MethodName:remove:[named, label] @AT@ 6576 @LENGTH@ 17


INS MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @TO@ TypeDeclaration@@[public]BCrypt,  @AT@ 33991 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @AT@ 33991 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @AT@ 33998 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @AT@ 34005 @LENGTH@ 7
---INS SimpleName@@MethodName:checkpw @TO@ MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @AT@ 34013 @LENGTH@ 7
---INS SingleVariableDeclaration@@byte[] passwordb @TO@ MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @AT@ 34021 @LENGTH@ 16
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] passwordb @AT@ 34021 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 34021 @LENGTH@ 4
------INS SimpleName@@passwordb @TO@ SingleVariableDeclaration@@byte[] passwordb @AT@ 34028 @LENGTH@ 9
---INS SingleVariableDeclaration@@String hashed @TO@ MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @AT@ 34039 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String hashed @AT@ 34039 @LENGTH@ 6
------INS SimpleName@@hashed @TO@ SingleVariableDeclaration@@String hashed @AT@ 34046 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:equalsNoEarlyReturn(hashed,hashpw(passwordb,hashed)) @TO@ MethodDeclaration@@public, static, boolean, MethodName:checkpw, byte[] passwordb, String hashed,  @AT@ 34058 @LENGTH@ 62
------INS MethodInvocation@@equalsNoEarlyReturn(hashed,hashpw(passwordb,hashed)) @TO@ ReturnStatement@@MethodInvocation:equalsNoEarlyReturn(hashed,hashpw(passwordb,hashed)) @AT@ 34065 @LENGTH@ 54
---------INS SimpleName@@MethodName:equalsNoEarlyReturn:[hashed, hashpw(passwordb,hashed)] @TO@ MethodInvocation@@equalsNoEarlyReturn(hashed,hashpw(passwordb,hashed)) @AT@ 34065 @LENGTH@ 54
------------INS SimpleName@@hashed @TO@ SimpleName@@MethodName:equalsNoEarlyReturn:[hashed, hashpw(passwordb,hashed)] @AT@ 34085 @LENGTH@ 6
------------INS MethodInvocation@@hashpw(passwordb,hashed) @TO@ SimpleName@@MethodName:equalsNoEarlyReturn:[hashed, hashpw(passwordb,hashed)] @AT@ 34093 @LENGTH@ 25
---------------INS SimpleName@@MethodName:hashpw:[passwordb, hashed] @TO@ MethodInvocation@@hashpw(passwordb,hashed) @AT@ 34093 @LENGTH@ 25
------------------INS SimpleName@@passwordb @TO@ SimpleName@@MethodName:hashpw:[passwordb, hashed] @AT@ 34100 @LENGTH@ 9
------------------INS SimpleName@@hashed @TO@ SimpleName@@MethodName:hashpw:[passwordb, hashed] @AT@ 34111 @LENGTH@ 6
---------------INS SimpleName@@MethodName:hashpw:[passwordb, hashed] @TO@ MethodInvocation@@hashpw(passwordb,hashed) @AT@ 34093 @LENGTH@ 25
------------------INS SimpleName@@passwordb @TO@ SimpleName@@MethodName:hashpw:[passwordb, hashed] @AT@ 34100 @LENGTH@ 9
------------------INS SimpleName@@hashed @TO@ SimpleName@@MethodName:hashpw:[passwordb, hashed] @AT@ 34111 @LENGTH@ 6


INS VariableDeclarationStatement@@Consumer consumer=delegate.createConsumer(processor); @TO@ MethodDeclaration@@public, Consumer, MethodName:createConsumer, Processor processor, Exception,  @AT@ 2210 @LENGTH@ 55
---INS SimpleType@@Consumer @TO@ VariableDeclarationStatement@@Consumer consumer=delegate.createConsumer(processor); @AT@ 2210 @LENGTH@ 8
---INS VariableDeclarationFragment@@consumer=delegate.createConsumer(processor) @TO@ VariableDeclarationStatement@@Consumer consumer=delegate.createConsumer(processor); @AT@ 2219 @LENGTH@ 45
------MOV MethodInvocation@@delegate.createConsumer(processor) @TO@ VariableDeclarationFragment@@consumer=delegate.createConsumer(processor) @AT@ 2217 @LENGTH@ 34
------INS SimpleName@@consumer @TO@ VariableDeclarationFragment@@consumer=delegate.createConsumer(processor) @AT@ 2219 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]OidcIdTokenValidatorTests,  @AT@ 2968 @LENGTH@ 274
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 2968 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 2975 @LENGTH@ 4
---INS SimpleName@@MethodName:setClockWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 2980 @LENGTH@ 49
---INS VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3036 @LENGTH@ 92
------INS SimpleType@@OidcIdTokenValidator @TO@ VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @AT@ 3036 @LENGTH@ 20
------INS VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @TO@ VariableDeclarationStatement@@OidcIdTokenValidator idTokenValidator=new OidcIdTokenValidator(this.registration.build()); @AT@ 3057 @LENGTH@ 70
---------INS SimpleName@@idTokenValidator @TO@ VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @AT@ 3057 @LENGTH@ 16
---------INS ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @TO@ VariableDeclarationFragment@@idTokenValidator=new OidcIdTokenValidator(this.registration.build()) @AT@ 3076 @LENGTH@ 51
------------INS New@@new @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 3076 @LENGTH@ 3
------------INS SimpleType@@OidcIdTokenValidator @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 3080 @LENGTH@ 20
------------INS MethodInvocation@@this.registration.build() @TO@ ClassInstanceCreation@@OidcIdTokenValidator[this.registration.build()] @AT@ 3101 @LENGTH@ 25
---------------INS FieldAccess@@this.registration @TO@ MethodInvocation@@this.registration.build() @AT@ 3101 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 3101 @LENGTH@ 4
------------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 3106 @LENGTH@ 12
---------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.registration.build() @AT@ 3119 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> idTokenValidator.setClock(null)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3131 @LENGTH@ 108
------INS MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClock(null)).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> idTokenValidator.setClock(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 3131 @LENGTH@ 107
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> idTokenValidator.setClock(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClock(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 3131 @LENGTH@ 57
------------INS LambdaExpression@@() -> idTokenValidator.setClock(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> idTokenValidator.setClock(null)] @AT@ 3150 @LENGTH@ 37
---------------INS MethodInvocation@@idTokenValidator.setClock(null) @TO@ LambdaExpression@@() -> idTokenValidator.setClock(null) @AT@ 3156 @LENGTH@ 31
------------------INS SimpleName@@Name:idTokenValidator @TO@ MethodInvocation@@idTokenValidator.setClock(null) @AT@ 3156 @LENGTH@ 16
------------------INS SimpleName@@MethodName:setClock:[null] @TO@ MethodInvocation@@idTokenValidator.setClock(null) @AT@ 3173 @LENGTH@ 14
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setClock:[null] @AT@ 3182 @LENGTH@ 4
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> idTokenValidator.setClock(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 3194 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3207 @LENGTH@ 30


UPD IfStatement@@if (hasDerived) {  if (!attributeMembers.isEmpty()) {    parser.addMethod().setSignature("    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");  }  if (!elementMembers.isEmpty()) {    parser.addMethod().setSignature("    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");  }  if (!Modifier.isAbstract(clazz.getModifiers())) {    parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");  }} else {  parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n");} @TO@ if (hasDerived) {  if (!attributeMembers.isEmpty()) {    parser.addMethod().setSignature("protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");  }  if (!elementMembers.isEmpty()) {    parser.addMethod().setSignature("protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");  }  if (!Modifier.isAbstract(clazz.getModifiers())) {    parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");  }} else {  parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n");} @AT@ 27590 @LENGTH@ 1421
---UPD Block@@ThenBody:{  if (!attributeMembers.isEmpty()) {    parser.addMethod().setSignature("    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");  }  if (!elementMembers.isEmpty()) {    parser.addMethod().setSignature("    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");  }  if (!Modifier.isAbstract(clazz.getModifiers())) {    parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");  }} @TO@ ThenBody:{  if (!attributeMembers.isEmpty()) {    parser.addMethod().setSignature("protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");  }  if (!elementMembers.isEmpty()) {    parser.addMethod().setSignature("protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");  }  if (!Modifier.isAbstract(clazz.getModifiers())) {    parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");  }} @AT@ 27606 @LENGTH@ 1118
------UPD IfStatement@@if (!attributeMembers.isEmpty()) {  parser.addMethod().setSignature("    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");} @TO@ if (!attributeMembers.isEmpty()) {  parser.addMethod().setSignature("protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");} @AT@ 27624 @LENGTH@ 272
---------UPD Block@@ThenBody:{  parser.addMethod().setSignature("    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");} @TO@ ThenBody:{  parser.addMethod().setSignature("protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";");} @AT@ 27657 @LENGTH@ 239
------------UPD ExpressionStatement@@MethodInvocation:parser.addMethod().setSignature("    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";") @TO@ MethodInvocation:parser.addMethod().setSignature("protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";") @AT@ 27679 @LENGTH@ 199
---------------UPD MethodInvocation@@parser.addMethod().setSignature("    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";") @TO@ parser.addMethod().setSignature("protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()").setBody("return" + attributes + ";") @AT@ 27679 @LENGTH@ 198
------------------UPD MethodInvocation@@MethodName:setSignature:["    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()"] @TO@ MethodName:setSignature:["protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()"] @AT@ 27679 @LENGTH@ 136
---------------------UPD InfixExpression@@"    protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()" @TO@ "protected <T extends " + qname + "> AttributeHandler<T> "+ lowercase(name)+ "AttributeHandler()" @AT@ 27711 @LENGTH@ 103
------------------------UPD StringLiteral@@"    protected <T extends " @TO@ "protected <T extends " @AT@ 27711 @LENGTH@ 27
------UPD IfStatement@@if (!elementMembers.isEmpty()) {  parser.addMethod().setSignature("    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");} @TO@ if (!elementMembers.isEmpty()) {  parser.addMethod().setSignature("protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");} @AT@ 27913 @LENGTH@ 264
---------UPD Block@@ThenBody:{  parser.addMethod().setSignature("    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");} @TO@ ThenBody:{  parser.addMethod().setSignature("protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";");} @AT@ 27944 @LENGTH@ 233
------------UPD ExpressionStatement@@MethodInvocation:parser.addMethod().setSignature("    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";") @TO@ MethodInvocation:parser.addMethod().setSignature("protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";") @AT@ 27966 @LENGTH@ 193
---------------UPD MethodInvocation@@parser.addMethod().setSignature("    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";") @TO@ parser.addMethod().setSignature("protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()").setBody("return" + elements + ";") @AT@ 27966 @LENGTH@ 192
------------------UPD MethodInvocation@@MethodName:setSignature:["    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()"] @TO@ MethodName:setSignature:["protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()"] @AT@ 27966 @LENGTH@ 132
---------------------UPD InfixExpression@@"    protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()" @TO@ "protected <T extends " + qname + "> ElementHandler<T> "+ lowercase(name)+ "ElementHandler()" @AT@ 27998 @LENGTH@ 99
------------------------UPD StringLiteral@@"    protected <T extends " @TO@ "protected <T extends " @AT@ 27998 @LENGTH@ 27
------UPD IfStatement@@if (!Modifier.isAbstract(clazz.getModifiers())) {  parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");} @TO@ if (!Modifier.isAbstract(clazz.getModifiers())) {  parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");} @AT@ 28194 @LENGTH@ 516
---------UPD Block@@ThenBody:{  parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");} @TO@ ThenBody:{  parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n");} @AT@ 28242 @LENGTH@ 468
------------UPD ExpressionStatement@@MethodInvocation:parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n") @TO@ MethodInvocation:parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n") @AT@ 28264 @LENGTH@ 428
---------------UPD MethodInvocation@@parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n") @TO@ parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(), "+ (attributeMembers.isEmpty() ? attributes : lowercase(name) + "AttributeHandler()")+ ", "+ (elementMembers.isEmpty() ? elements : lowercase(name) + "ElementHandler()")+ ","+ value+ ");\n") @AT@ 28264 @LENGTH@ 427
------------------UPD MethodInvocation@@MethodName:setSignature:["    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException"] @TO@ MethodName:setSignature:["protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException"] @AT@ 28264 @LENGTH@ 127
---------------------UPD InfixExpression@@"    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException" @TO@ "protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException" @AT@ 28296 @LENGTH@ 94
------------------------UPD StringLiteral@@"    protected " @TO@ "protected " @AT@ 28296 @LENGTH@ 16
---UPD Block@@ElseBody:{  parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n");} @TO@ ElseBody:{  parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n");} @AT@ 28730 @LENGTH@ 281
------UPD ExpressionStatement@@MethodInvocation:parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n") @TO@ MethodInvocation:parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n") @AT@ 28748 @LENGTH@ 249
---------UPD MethodInvocation@@parser.addMethod().setSignature("    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n") @TO@ parser.addMethod().setSignature("protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException").setBody("return doParse(new " + qname + "(),"+ attributes+ ","+ elements+ ","+ value+ ");\n") @AT@ 28748 @LENGTH@ 248
------------UPD MethodInvocation@@MethodName:setSignature:["    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException"] @TO@ MethodName:setSignature:["protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException"] @AT@ 28748 @LENGTH@ 127
---------------UPD InfixExpression@@"    protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException" @TO@ "protected " + qname + " doParse"+ name+ "() throws IOException, XmlPullParserException" @AT@ 28780 @LENGTH@ 94
------------------UPD StringLiteral@@"    protected " @TO@ "protected " @AT@ 28780 @LENGTH@ 16


MOV MethodDeclaration@@public, static, Charset, MethodName:toCharset, final String charset,  @TO@ TypeDeclaration@@[public]Charsets,  @AT@ 3574 @LENGTH@ 147


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("88.8889",String.format("%.4f",accuracy)) @TO@ MethodInvocation:Assert.assertEquals("88.8889",String.format(Locale.ENGLISH,"%.4f",accuracy)) @AT@ 4241 @LENGTH@ 64
---UPD MethodInvocation@@Assert.assertEquals("88.8889",String.format("%.4f",accuracy)) @TO@ Assert.assertEquals("88.8889",String.format(Locale.ENGLISH,"%.4f",accuracy)) @AT@ 4241 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertEquals:["88.8889", String.format("%.4f",accuracy)] @TO@ MethodName:assertEquals:["88.8889", String.format(Locale.ENGLISH,"%.4f",accuracy)] @AT@ 4248 @LENGTH@ 56
---------UPD MethodInvocation@@String.format("%.4f",accuracy) @TO@ String.format(Locale.ENGLISH,"%.4f",accuracy) @AT@ 4272 @LENGTH@ 31
------------UPD SimpleName@@MethodName:format:["%.4f", accuracy] @TO@ MethodName:format:[Locale.ENGLISH, "%.4f", accuracy] @AT@ 4279 @LENGTH@ 24
---------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:format:["%.4f", accuracy] @AT@ 4312 @LENGTH@ 14
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 4312 @LENGTH@ 6
------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 4319 @LENGTH@ 7


UPD VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build(); @TO@ OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Map::clear).attributes(Map::clear).build(); @AT@ 2744 @LENGTH@ 235
---UPD VariableDeclarationFragment@@authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @TO@ authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Map::clear).attributes(Map::clear).build() @AT@ 2771 @LENGTH@ 207
------UPD MethodInvocation@@this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @TO@ this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Map::clear).attributes(Map::clear).build() @AT@ 2798 @LENGTH@ 180
---------UPD MethodInvocation@@MethodName:attributes:[Collections.emptyMap()] @TO@ MethodName:attributes:[Map::clear] @AT@ 2798 @LENGTH@ 165
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 2940 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 2940 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 2952 @LENGTH@ 10
---------UPD MethodInvocation@@MethodName:additionalParameters:[Collections.emptyMap()] @TO@ MethodName:additionalParameters:[Map::clear] @AT@ 2798 @LENGTH@ 123
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 2898 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 2898 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 2910 @LENGTH@ 10


UPD MethodDeclaration@@voidMethodName:Neo4jQuerySupport, Neo4jMappingContext mappingContext, Neo4jQueryMethod queryMethod,  @TO@ voidMethodName:Neo4jQuerySupport, Neo4jMappingContext mappingContext, Neo4jQueryMethod queryMethod, Neo4jQueryType queryType,  @AT@ 2325 @LENGTH@ 349
---INS SingleVariableDeclaration@@Neo4jQueryType queryType @TO@ MethodDeclaration@@voidMethodName:Neo4jQuerySupport, Neo4jMappingContext mappingContext, Neo4jQueryMethod queryMethod,  @AT@ 2482 @LENGTH@ 24
------INS SimpleType@@Neo4jQueryType @TO@ SingleVariableDeclaration@@Neo4jQueryType queryType @AT@ 2482 @LENGTH@ 14
------INS SimpleName@@queryType @TO@ SingleVariableDeclaration@@Neo4jQueryType queryType @AT@ 2497 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(queryType,"Query type must not be null!") @TO@ MethodDeclaration@@voidMethodName:Neo4jQuerySupport, Neo4jMappingContext mappingContext, Neo4jQueryMethod queryMethod,  @AT@ 2648 @LENGTH@ 58
------INS MethodInvocation@@Assert.notNull(queryType,"Query type must not be null!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(queryType,"Query type must not be null!") @AT@ 2648 @LENGTH@ 57
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(queryType,"Query type must not be null!") @AT@ 2648 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[queryType, "Query type must not be null!"] @TO@ MethodInvocation@@Assert.notNull(queryType,"Query type must not be null!") @AT@ 2655 @LENGTH@ 50
------------INS SimpleName@@queryType @TO@ SimpleName@@MethodName:notNull:[queryType, "Query type must not be null!"] @AT@ 2663 @LENGTH@ 9
------------INS StringLiteral@@"Query type must not be null!" @TO@ SimpleName@@MethodName:notNull:[queryType, "Query type must not be null!"] @AT@ 2674 @LENGTH@ 30
---INS ExpressionStatement@@Assignment:this.queryType=queryType @TO@ MethodDeclaration@@voidMethodName:Neo4jQuerySupport, Neo4jMappingContext mappingContext, Neo4jQueryMethod queryMethod,  @AT@ 2834 @LENGTH@ 27
------INS Assignment@@this.queryType=queryType @TO@ ExpressionStatement@@Assignment:this.queryType=queryType @AT@ 2834 @LENGTH@ 26
---------INS FieldAccess@@this.queryType @TO@ Assignment@@this.queryType=queryType @AT@ 2834 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.queryType @AT@ 2834 @LENGTH@ 4
------------INS SimpleName@@queryType @TO@ FieldAccess@@this.queryType @AT@ 2839 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@this.queryType=queryType @AT@ 2848 @LENGTH@ 1
---------INS SimpleName@@queryType @TO@ Assignment@@this.queryType=queryType @AT@ 2851 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ MethodInvocation:SizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 13836 @LENGTH@ 80
---UPD MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @TO@ SizeRotatingHandlerResourceDefinition.FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 13836 @LENGTH@ 79
------INS QualifiedName@@Name:SizeRotatingHandlerResourceDefinition.FILTER_SPEC @TO@ MethodInvocation@@FILTER_SPEC.parseAndSetParameter(readValueAttribute(reader),operation,reader) @AT@ 13817 @LENGTH@ 49
------DEL SimpleName@@Name:FILTER_SPEC @AT@ 13836 @LENGTH@ 11


UPD MethodDeclaration@@T, MethodName:construct, final byte buf[], final int offset, final int length,  @TO@ T, MethodName:construct, final byte[] buf, final int offset, final int length,  @AT@ 12034 @LENGTH@ 64
---UPD SingleVariableDeclaration@@final byte buf[] @TO@ final byte[] buf @AT@ 12044 @LENGTH@ 16
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@final byte buf[] @AT@ 12050 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 12050 @LENGTH@ 4
------DEL PrimitiveType@@byte @AT@ 12050 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:when(this.authorizationRequestRepository.loadAuthorizationRequest(any())).thenReturn(Mono.empty()) @AT@ 3092 @LENGTH@ 99
---DEL MethodInvocation@@when(this.authorizationRequestRepository.loadAuthorizationRequest(any())).thenReturn(Mono.empty()) @AT@ 3092 @LENGTH@ 98
------DEL MethodInvocation@@MethodName:when:[this.authorizationRequestRepository.loadAuthorizationRequest(any())] @AT@ 3092 @LENGTH@ 73
---------DEL MethodInvocation@@this.authorizationRequestRepository.loadAuthorizationRequest(any()) @AT@ 3097 @LENGTH@ 67
------------DEL FieldAccess@@this.authorizationRequestRepository @AT@ 3097 @LENGTH@ 35
---------------DEL ThisExpression@@this @AT@ 3097 @LENGTH@ 4
---------------DEL SimpleName@@authorizationRequestRepository @AT@ 3102 @LENGTH@ 30
------------DEL SimpleName@@MethodName:loadAuthorizationRequest:[any()] @AT@ 3133 @LENGTH@ 31
---------------DEL MethodInvocation@@MethodName:any:[] @AT@ 3158 @LENGTH@ 5
------DEL SimpleName@@MethodName:thenReturn:[Mono.empty()] @AT@ 3166 @LENGTH@ 24
---------DEL MethodInvocation@@Mono.empty() @AT@ 3177 @LENGTH@ 12
------------DEL SimpleName@@Name:Mono @AT@ 3177 @LENGTH@ 4
------------DEL SimpleName@@MethodName:empty:[] @AT@ 3182 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:this.tokenResponseConverter.convert(tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()))) @TO@ MethodInvocation:this.tokenResponseConverter.convert(tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())))) @AT@ 3573 @LENGTH@ 204
---UPD MethodInvocation@@this.tokenResponseConverter.convert(tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()))) @TO@ this.tokenResponseConverter.convert(tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())))) @AT@ 3580 @LENGTH@ 196
------UPD SimpleName@@MethodName:convert:[tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()))] @TO@ MethodName:convert:[tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())))] @AT@ 3608 @LENGTH@ 168
---------UPD MethodInvocation@@tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @TO@ tokenResponseParameters.entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))) @AT@ 3622 @LENGTH@ 153
------------UPD SimpleName@@MethodName:collect:[Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())] @TO@ MethodName:collect:[Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue()))] @AT@ 3674 @LENGTH@ 101
---------------UPD MethodInvocation@@Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()) @TO@ Collectors.toMap(Map.Entry::getKey,entry -> String.valueOf(entry.getValue())) @AT@ 3682 @LENGTH@ 92
------------------UPD SimpleName@@MethodName:toMap:[Map.Entry::getKey, entry -> entry.getValue().toString()] @TO@ MethodName:toMap:[Map.Entry::getKey, entry -> String.valueOf(entry.getValue())] @AT@ 3693 @LENGTH@ 81
---------------------UPD LambdaExpression@@entry -> entry.getValue().toString() @TO@ entry -> String.valueOf(entry.getValue()) @AT@ 3737 @LENGTH@ 36
------------------------INS MethodInvocation@@String.valueOf(entry.getValue()) @TO@ LambdaExpression@@entry -> entry.getValue().toString() @AT@ 3746 @LENGTH@ 32
---------------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.valueOf(entry.getValue()) @AT@ 3746 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:valueOf:[entry.getValue()] @TO@ MethodInvocation@@String.valueOf(entry.getValue()) @AT@ 3753 @LENGTH@ 25
------------------------------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:valueOf:[entry.getValue()] @AT@ 3761 @LENGTH@ 16
---------------------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 3746 @LENGTH@ 5
---------------------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 3763 @LENGTH@ 10
------------------------DEL MethodInvocation@@entry.getValue().toString() @AT@ 3746 @LENGTH@ 27
---------------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 3746 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationRequestUriFunctionSetThenOverridesDefault,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizationRequestTests,  @AT@ 7820 @LENGTH@ 498
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationRequestUriFunctionSetThenOverridesDefault,  @AT@ 7820 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationRequestUriFunctionSetThenOverridesDefault,  @AT@ 7827 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenAuthorizationRequestUriFunctionSetThenOverridesDefault @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationRequestUriFunctionSetThenOverridesDefault,  @AT@ 7832 @LENGTH@ 63
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build(); @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationRequestUriFunctionSetThenOverridesDefault,  @AT@ 7902 @LENGTH@ 319
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build(); @AT@ 7902 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build(); @AT@ 7929 @LENGTH@ 291
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7929 @LENGTH@ 20
---------INS MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @TO@ VariableDeclarationFragment@@authorizationRequest=OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 268
------------INS MethodInvocation@@MethodName:authorizationRequestUri:[uriBuilder -> URI.create(AUTHORIZATION_URI)] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 255
---------------INS LambdaExpression@@uriBuilder -> URI.create(AUTHORIZATION_URI) @TO@ MethodInvocation@@MethodName:authorizationRequestUri:[uriBuilder -> URI.create(AUTHORIZATION_URI)] @AT@ 8163 @LENGTH@ 43
------------------INS VariableDeclarationFragment@@uriBuilder @TO@ LambdaExpression@@uriBuilder -> URI.create(AUTHORIZATION_URI) @AT@ 8163 @LENGTH@ 10
---------------------INS SimpleName@@uriBuilder @TO@ VariableDeclarationFragment@@uriBuilder @AT@ 8163 @LENGTH@ 10
------------------INS MethodInvocation@@URI.create(AUTHORIZATION_URI) @TO@ LambdaExpression@@uriBuilder -> URI.create(AUTHORIZATION_URI) @AT@ 8177 @LENGTH@ 29
---------------------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create(AUTHORIZATION_URI) @AT@ 8177 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:create:[AUTHORIZATION_URI] @TO@ MethodInvocation@@URI.create(AUTHORIZATION_URI) @AT@ 8181 @LENGTH@ 25
------------------------INS SimpleName@@AUTHORIZATION_URI @TO@ SimpleName@@MethodName:create:[AUTHORIZATION_URI] @AT@ 8188 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:state:[STATE] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 181
---------------INS SimpleName@@STATE @TO@ MethodInvocation@@MethodName:state:[STATE] @AT@ 8127 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:scopes:[SCOPES] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 163
---------------INS SimpleName@@SCOPES @TO@ MethodInvocation@@MethodName:scopes:[SCOPES] @AT@ 8108 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:redirectUri:[REDIRECT_URI] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 143
---------------INS SimpleName@@REDIRECT_URI @TO@ MethodInvocation@@MethodName:redirectUri:[REDIRECT_URI] @AT@ 8082 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:clientId:[CLIENT_ID] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 112
---------------INS SimpleName@@CLIENT_ID @TO@ MethodInvocation@@MethodName:clientId:[CLIENT_ID] @AT@ 8054 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 87
---------------INS SimpleName@@AUTHORIZATION_URI @TO@ MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI] @AT@ 8021 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:authorizationCode:[] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 46
------------INS SimpleName@@Name:OAuth2AuthorizationRequest @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 7952 @LENGTH@ 26
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).authorizationRequestUri(uriBuilder -> URI.create(AUTHORIZATION_URI)).build() @AT@ 8213 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo(AUTHORIZATION_URI) @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationRequestUriFunctionSetThenOverridesDefault,  @AT@ 8224 @LENGTH@ 91
------INS MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo(AUTHORIZATION_URI) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo(AUTHORIZATION_URI) @AT@ 8224 @LENGTH@ 90
---------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo(AUTHORIZATION_URI) @AT@ 8224 @LENGTH@ 61
------------INS MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @AT@ 8235 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 8235 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getAuthorizationRequestUri:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 8256 @LENGTH@ 28
---------INS SimpleName@@MethodName:isEqualTo:[AUTHORIZATION_URI] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo(AUTHORIZATION_URI) @AT@ 8286 @LENGTH@ 28
------------INS SimpleName@@AUTHORIZATION_URI @TO@ SimpleName@@MethodName:isEqualTo:[AUTHORIZATION_URI] @AT@ 8296 @LENGTH@ 17


UPD FieldDeclaration@@private, SourceHandlerFactory, [sourceHandlerFactory] @TO@ private, volatile, SourceHandlerFactory, [sourceHandlerFactory] @AT@ 2690 @LENGTH@ 50
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, SourceHandlerFactory, [sourceHandlerFactory] @AT@ 2698 @LENGTH@ 8


UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error) @TO@ ClassInstanceCreation:new ClientAuthorizationException(oauth2Error,clientRegistration.getRegistrationId()) @AT@ 6004 @LENGTH@ 52
---UPD ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error] @TO@ ClientAuthorizationException[oauth2Error, clientRegistration.getRegistrationId()] @AT@ 6010 @LENGTH@ 45
------UPD SimpleType@@OAuth2AuthorizationException @TO@ ClientAuthorizationException @AT@ 6014 @LENGTH@ 28
------INS MethodInvocation@@clientRegistration.getRegistrationId() @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error] @AT@ 6303 @LENGTH@ 38
---------INS SimpleName@@Name:clientRegistration @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 6303 @LENGTH@ 18
---------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@clientRegistration.getRegistrationId() @AT@ 6322 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(proc.getExpression() instanceof SimpleExpression) @TO@ MethodInvocation:Assert.assertEquals("file:${header.CamelServiceCallServiceHost}:${header.CamelServiceCallServicePort}",proc.getExpression().toString()) @AT@ 17343 @LENGTH@ 68
---UPD MethodInvocation@@Assert.assertTrue(proc.getExpression() instanceof SimpleExpression) @TO@ Assert.assertEquals("file:${header.CamelServiceCallServiceHost}:${header.CamelServiceCallServicePort}",proc.getExpression().toString()) @AT@ 17343 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertTrue:[proc.getExpression() instanceof SimpleExpression] @TO@ MethodName:assertEquals:["file:${header.CamelServiceCallServiceHost}:${header.CamelServiceCallServicePort}", proc.getExpression().toString()] @AT@ 17350 @LENGTH@ 60
---------DEL InstanceofExpression@@proc.getExpression() instanceof SimpleExpression @AT@ 17361 @LENGTH@ 48
------------DEL MethodInvocation@@proc.getExpression() @AT@ 17361 @LENGTH@ 20
------------DEL Instanceof@@instanceof @AT@ 17382 @LENGTH@ 10
------------DEL SimpleType@@SimpleExpression @AT@ 17393 @LENGTH@ 16
---------INS StringLiteral@@"file:${header.CamelServiceCallServiceHost}:${header.CamelServiceCallServicePort}" @TO@ SimpleName@@MethodName:assertTrue:[proc.getExpression() instanceof SimpleExpression] @AT@ 17363 @LENGTH@ 82
---------INS MethodInvocation@@proc.getExpression().toString() @TO@ SimpleName@@MethodName:assertTrue:[proc.getExpression() instanceof SimpleExpression] @AT@ 17467 @LENGTH@ 31
------------MOV SimpleName@@Name:proc @TO@ MethodInvocation@@proc.getExpression().toString() @AT@ 17361 @LENGTH@ 4
------------MOV SimpleName@@MethodName:getExpression:[] @TO@ MethodInvocation@@proc.getExpression().toString() @AT@ 17366 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getExpression:[] @TO@ MethodInvocation@@proc.getExpression().toString() @AT@ 17467 @LENGTH@ 20


INS MethodDeclaration@@public, static, Condition, MethodName:isFalse,  @TO@ TypeDeclaration@@[@API(status=EXPERIMENTAL,since="1.0"), public, final]Conditions,  @AT@ 7211 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Condition, MethodName:isFalse,  @AT@ 7211 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Condition, MethodName:isFalse,  @AT@ 7218 @LENGTH@ 6
---INS SimpleType@@Condition @TO@ MethodDeclaration@@public, static, Condition, MethodName:isFalse,  @AT@ 7225 @LENGTH@ 9
---INS SimpleName@@MethodName:isFalse @TO@ MethodDeclaration@@public, static, Condition, MethodName:isFalse,  @AT@ 7235 @LENGTH@ 7
---INS ReturnStatement@@QualifiedName:ConstantCondition.FALSE @TO@ MethodDeclaration@@public, static, Condition, MethodName:isFalse,  @AT@ 7250 @LENGTH@ 31
------INS QualifiedName@@ConstantCondition.FALSE @TO@ ReturnStatement@@QualifiedName:ConstantCondition.FALSE @AT@ 7257 @LENGTH@ 23
---------INS SimpleName@@ConstantCondition @TO@ QualifiedName@@ConstantCondition.FALSE @AT@ 7257 @LENGTH@ 17
---------INS SimpleName@@FALSE @TO@ QualifiedName@@ConstantCondition.FALSE @AT@ 7275 @LENGTH@ 5


UPD IfStatement@@if (cachedEntityCallbacks.size() != entityCallbacks.size()) {  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);  AnnotationAwareOrderComparator.sort(cachedEntityCallbacks);} @TO@ if (cachedEntityCallbacks.size() != entityCallbacks.size()) {  List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size());  AnnotationAwareOrderComparator.sort(entityCallbacks);synchronized (this) {    cachedEntityCallbacks.clear();    cachedEntityCallbacks.addAll(entityCallbacks);  }} @AT@ 13451 @LENGTH@ 220
---UPD Block@@ThenBody:{  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);  AnnotationAwareOrderComparator.sort(cachedEntityCallbacks);} @TO@ SyncBody:{  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);} @AT@ 13511 @LENGTH@ 160
---INS Block@@ThenBody:{  List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size());  AnnotationAwareOrderComparator.sort(entityCallbacks);synchronized (this) {    cachedEntityCallbacks.clear();    cachedEntityCallbacks.addAll(entityCallbacks);  }} @TO@ IfStatement@@if (cachedEntityCallbacks.size() != entityCallbacks.size()) {  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);  AnnotationAwareOrderComparator.sort(cachedEntityCallbacks);} @AT@ 13538 @LENGTH@ 283
------INS VariableDeclarationStatement@@List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size()); @TO@ Block@@ThenBody:{  List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size());  AnnotationAwareOrderComparator.sort(entityCallbacks);synchronized (this) {    cachedEntityCallbacks.clear();    cachedEntityCallbacks.addAll(entityCallbacks);  }} @AT@ 13545 @LENGTH@ 87
---------INS ParameterizedType@@List<EntityCallback<?>> @TO@ VariableDeclarationStatement@@List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size()); @AT@ 13545 @LENGTH@ 23
------------INS SimpleType@@List @TO@ ParameterizedType@@List<EntityCallback<?>> @AT@ 13545 @LENGTH@ 4
------------INS ParameterizedType@@EntityCallback<?> @TO@ ParameterizedType@@List<EntityCallback<?>> @AT@ 13550 @LENGTH@ 17
---------------INS SimpleType@@EntityCallback @TO@ ParameterizedType@@EntityCallback<?> @AT@ 13550 @LENGTH@ 14
---------------INS WildcardType@@? @TO@ ParameterizedType@@EntityCallback<?> @AT@ 13565 @LENGTH@ 1
---------INS VariableDeclarationFragment@@entityCallbacks=new ArrayList<>(this.entityCallbacks.size()) @TO@ VariableDeclarationStatement@@List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size()); @AT@ 13569 @LENGTH@ 62
------------INS SimpleName@@entityCallbacks @TO@ VariableDeclarationFragment@@entityCallbacks=new ArrayList<>(this.entityCallbacks.size()) @AT@ 13569 @LENGTH@ 15
------------INS ClassInstanceCreation@@ArrayList<>[this.entityCallbacks.size()] @TO@ VariableDeclarationFragment@@entityCallbacks=new ArrayList<>(this.entityCallbacks.size()) @AT@ 13587 @LENGTH@ 44
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[this.entityCallbacks.size()] @AT@ 13587 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[this.entityCallbacks.size()] @AT@ 13591 @LENGTH@ 11
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 13591 @LENGTH@ 9
---------------INS MethodInvocation@@this.entityCallbacks.size() @TO@ ClassInstanceCreation@@ArrayList<>[this.entityCallbacks.size()] @AT@ 13603 @LENGTH@ 27
------------------INS FieldAccess@@this.entityCallbacks @TO@ MethodInvocation@@this.entityCallbacks.size() @AT@ 13603 @LENGTH@ 20
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.entityCallbacks @AT@ 13603 @LENGTH@ 4
---------------------INS SimpleName@@entityCallbacks @TO@ FieldAccess@@this.entityCallbacks @AT@ 13608 @LENGTH@ 15
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@this.entityCallbacks.size() @AT@ 13624 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:AnnotationAwareOrderComparator.sort(entityCallbacks) @TO@ Block@@ThenBody:{  List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size());  AnnotationAwareOrderComparator.sort(entityCallbacks);synchronized (this) {    cachedEntityCallbacks.clear();    cachedEntityCallbacks.addAll(entityCallbacks);  }} @AT@ 13638 @LENGTH@ 53
---------INS MethodInvocation@@AnnotationAwareOrderComparator.sort(entityCallbacks) @TO@ ExpressionStatement@@MethodInvocation:AnnotationAwareOrderComparator.sort(entityCallbacks) @AT@ 13638 @LENGTH@ 52
------------INS SimpleName@@Name:AnnotationAwareOrderComparator @TO@ MethodInvocation@@AnnotationAwareOrderComparator.sort(entityCallbacks) @AT@ 13638 @LENGTH@ 30
------------INS SimpleName@@MethodName:sort:[entityCallbacks] @TO@ MethodInvocation@@AnnotationAwareOrderComparator.sort(entityCallbacks) @AT@ 13669 @LENGTH@ 21
---------------INS SimpleName@@entityCallbacks @TO@ SimpleName@@MethodName:sort:[entityCallbacks] @AT@ 13674 @LENGTH@ 15
------INS SynchronizedStatement@@synchronized (this) {  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);} @TO@ Block@@ThenBody:{  List<EntityCallback<?>> entityCallbacks=new ArrayList<>(this.entityCallbacks.size());  AnnotationAwareOrderComparator.sort(entityCallbacks);synchronized (this) {    cachedEntityCallbacks.clear();    cachedEntityCallbacks.addAll(entityCallbacks);  }} @AT@ 13698 @LENGTH@ 117
---------MOV Block@@ThenBody:{  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);  AnnotationAwareOrderComparator.sort(cachedEntityCallbacks);} @TO@ SynchronizedStatement@@synchronized (this) {  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);} @AT@ 13511 @LENGTH@ 160
------------DEL ExpressionStatement@@MethodInvocation:AnnotationAwareOrderComparator.sort(cachedEntityCallbacks) @AT@ 13606 @LENGTH@ 59
---------------DEL MethodInvocation@@AnnotationAwareOrderComparator.sort(cachedEntityCallbacks) @AT@ 13606 @LENGTH@ 58
------------------DEL SimpleName@@Name:AnnotationAwareOrderComparator @AT@ 13606 @LENGTH@ 30
------------------DEL SimpleName@@MethodName:sort:[cachedEntityCallbacks] @AT@ 13637 @LENGTH@ 27
---------------------DEL SimpleName@@cachedEntityCallbacks @AT@ 13642 @LENGTH@ 21
---------INS ThisExpression@@this @TO@ SynchronizedStatement@@synchronized (this) {  cachedEntityCallbacks.clear();  cachedEntityCallbacks.addAll(entityCallbacks);} @AT@ 13711 @LENGTH@ 4


UPD VariableDeclarationStatement@@Path all=componentsOutDir.resolve("../models.properties"); @TO@ Path all=componentsOutDir.resolve("../components.properties"); @AT@ 17861 @LENGTH@ 60
---UPD VariableDeclarationFragment@@all=componentsOutDir.resolve("../models.properties") @TO@ all=componentsOutDir.resolve("../components.properties") @AT@ 17866 @LENGTH@ 54
------UPD MethodInvocation@@componentsOutDir.resolve("../models.properties") @TO@ componentsOutDir.resolve("../components.properties") @AT@ 17872 @LENGTH@ 48
---------UPD SimpleName@@MethodName:resolve:["../models.properties"] @TO@ MethodName:resolve:["../components.properties"] @AT@ 17889 @LENGTH@ 31
------------UPD StringLiteral@@"../models.properties" @TO@ "../components.properties" @AT@ 17897 @LENGTH@ 22


UPD TryStatement@@try {  exchange.getIn().setHeader(Exchange.REDELIVERY_COUNTER,data.redeliveryCounter);  exchange.adapt(ExtendedExchange.class).setRedeliveryExhausted(true);  deadLetterProducerTemplate.send(recoverable.getDeadLetterUri(),exchange);} catch (Throwable e) {  exchange.setException(e);} @TO@ try {  exchange.getIn().setHeader(Exchange.REDELIVERY_COUNTER,data.redeliveryCounter);  exchange.adapt(ExtendedExchange.class).setRedeliveryExhausted(false);  exchange.adapt(ExtendedExchange.class).setRollbackOnly(false);  deadLetterProducerTemplate.send(recoverable.getDeadLetterUri(),exchange);} catch (Throwable e) {  exchange.setException(e);} @AT@ 57790 @LENGTH@ 552
---UPD ExpressionStatement@@MethodInvocation:exchange.adapt(ExtendedExchange.class).setRedeliveryExhausted(true) @TO@ MethodInvocation:exchange.adapt(ExtendedExchange.class).setRedeliveryExhausted(false) @AT@ 58011 @LENGTH@ 68
------UPD MethodInvocation@@exchange.adapt(ExtendedExchange.class).setRedeliveryExhausted(true) @TO@ exchange.adapt(ExtendedExchange.class).setRedeliveryExhausted(false) @AT@ 58011 @LENGTH@ 67
---------UPD SimpleName@@MethodName:setRedeliveryExhausted:[true] @TO@ MethodName:setRedeliveryExhausted:[false] @AT@ 58050 @LENGTH@ 28
------------UPD BooleanLiteral@@true @TO@ false @AT@ 58073 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:exchange.adapt(ExtendedExchange.class).setRollbackOnly(false) @TO@ TryStatement@@try {  exchange.getIn().setHeader(Exchange.REDELIVERY_COUNTER,data.redeliveryCounter);  exchange.adapt(ExtendedExchange.class).setRedeliveryExhausted(true);  deadLetterProducerTemplate.send(recoverable.getDeadLetterUri(),exchange);} catch (Throwable e) {  exchange.setException(e);} @AT@ 58187 @LENGTH@ 62
------INS MethodInvocation@@exchange.adapt(ExtendedExchange.class).setRollbackOnly(false) @TO@ ExpressionStatement@@MethodInvocation:exchange.adapt(ExtendedExchange.class).setRollbackOnly(false) @AT@ 58187 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:adapt:[ExtendedExchange.class] @TO@ MethodInvocation@@exchange.adapt(ExtendedExchange.class).setRollbackOnly(false) @AT@ 58187 @LENGTH@ 38
------------INS TypeLiteral@@ExtendedExchange.class @TO@ MethodInvocation@@MethodName:adapt:[ExtendedExchange.class] @AT@ 58202 @LENGTH@ 22
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.adapt(ExtendedExchange.class).setRollbackOnly(false) @AT@ 58187 @LENGTH@ 8
---------INS SimpleName@@MethodName:setRollbackOnly:[false] @TO@ MethodInvocation@@exchange.adapt(ExtendedExchange.class).setRollbackOnly(false) @AT@ 58226 @LENGTH@ 22
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setRollbackOnly:[false] @AT@ 58242 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @TO@ MethodDeclaration@@public, void, MethodName:testCacheProducers, Exception,  @AT@ 2039 @LENGTH@ 87
---INS MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2039 @LENGTH@ 86
------INS MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2039 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 2054 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 2057 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2057 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2066 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2039 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 200] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 200) @AT@ 2075 @LENGTH@ 50
---------INS LambdaExpression@@() -> template.getCurrentCacheSize() == 200 @TO@ SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 200] @AT@ 2081 @LENGTH@ 43
------------INS InfixExpression@@template.getCurrentCacheSize() == 200 @TO@ LambdaExpression@@() -> template.getCurrentCacheSize() == 200 @AT@ 2087 @LENGTH@ 37
---------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 200 @AT@ 2087 @LENGTH@ 30
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2087 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 2096 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@template.getCurrentCacheSize() == 200 @AT@ 2117 @LENGTH@ 2
---------------INS NumberLiteral@@200 @TO@ InfixExpression@@template.getCurrentCacheSize() == 200 @AT@ 2121 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:this.routeBuilders=routeBuilders @TO@ Assignment:this.routeBuilders=routesBuilders @AT@ 14668 @LENGTH@ 35
---UPD Assignment@@this.routeBuilders=routeBuilders @TO@ this.routeBuilders=routesBuilders @AT@ 14668 @LENGTH@ 34
------UPD SimpleName@@routeBuilders @TO@ routesBuilders @AT@ 14689 @LENGTH@ 13


UPD VariableDeclarationStatement@@long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong(); @TO@ long numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong(); @AT@ 4401 @LENGTH@ 321
---UPD VariableDeclarationFragment@@numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @TO@ numberOfRelations=transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @AT@ 4406 @LENGTH@ 315
------UPD MethodInvocation@@transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @TO@ transaction.run("" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations",Values.parameters("id",personWithRelatives.getId())).single().get("numberOfRelations").asLong() @AT@ 4426 @LENGTH@ 295
---------UPD MethodInvocation@@MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations", Values.parameters("id",personWithRelatives.getId())] @TO@ MethodName:run:["" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations", Values.parameters("id",personWithRelatives.getId())] @AT@ 4426 @LENGTH@ 247
------------UPD InfixExpression@@"" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))"+ " as numberOfRelations" @TO@ "" + "MATCH (t:PersonWithRelatives) WHERE id(t) = $id " + "RETURN size((t)-->(:Person))"+ " as numberOfRelations" @AT@ 4442 @LENGTH@ 176
---------------UPD StringLiteral@@"RETURN size((t)-[:RELATIVE_1]->(:Person)) + size((t)-[:RELATIVE_2]->(:Person))" @TO@ "RETURN size((t)-->(:Person))" @AT@ 4508 @LENGTH@ 80


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> result.block()).isInstanceOf(RuntimeException.class) @TO@ MethodInvocation:assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("An error occurred parsing the Access Token response") @AT@ 3372 @LENGTH@ 79
---UPD MethodInvocation@@assertThatCode(() -> result.block()).isInstanceOf(RuntimeException.class) @TO@ assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("An error occurred parsing the Access Token response") @AT@ 3372 @LENGTH@ 78
------UPD MethodInvocation@@MethodName:assertThatCode:[() -> result.block()] @TO@ MethodName:assertThatCode:[result::block] @AT@ 3372 @LENGTH@ 36
---------DEL LambdaExpression@@() -> result.block() @AT@ 3387 @LENGTH@ 20
------------DEL MethodInvocation@@result.block() @AT@ 3393 @LENGTH@ 14
---------------DEL SimpleName@@Name:result @AT@ 3393 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:block:[] @AT@ 3400 @LENGTH@ 7
------DEL SimpleName@@MethodName:isInstanceOf:[RuntimeException.class] @AT@ 3414 @LENGTH@ 36
---------DEL TypeLiteral@@RuntimeException.class @AT@ 3427 @LENGTH@ 22
------INS MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @TO@ MethodInvocation@@assertThatCode(() -> result.block()).isInstanceOf(RuntimeException.class) @AT@ 3450 @LENGTH@ 83
---------INS TypeLiteral@@OAuth2AuthorizationException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @AT@ 3498 @LENGTH@ 34
------INS SimpleName@@MethodName:hasMessageContaining:["An error occurred parsing the Access Token response"] @TO@ MethodInvocation@@assertThatCode(() -> result.block()).isInstanceOf(RuntimeException.class) @AT@ 3539 @LENGTH@ 75
---------INS StringLiteral@@"An error occurred parsing the Access Token response" @TO@ SimpleName@@MethodName:hasMessageContaining:["An error occurred parsing the Access Token response"] @AT@ 3560 @LENGTH@ 53


UPD VariableDeclarationStatement@@String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class); @TO@ String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",in.toString(),String.class); @AT@ 3272 @LENGTH@ 156
---UPD VariableDeclarationFragment@@out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",in.toString(),String.class) @AT@ 3279 @LENGTH@ 148
------UPD MethodInvocation@@template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder",in.toString(),String.class) @AT@ 3285 @LENGTH@ 142
---------UPD SimpleName@@MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", in.toString(), String.class] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder", in.toString(), String.class] @AT@ 3294 @LENGTH@ 133
------------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 3306 @LENGTH@ 91
---------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 3345 @LENGTH@ 52


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 1947 @LENGTH@ 294
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 1962 @LENGTH@ 7
---INS ExpressionStatement@@SuperMethodInvocation:super.doInit() @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 1998 @LENGTH@ 15
------INS SuperMethodInvocation@@super.doInit() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doInit() @AT@ 1998 @LENGTH@ 14
---------INS SimpleName@@MethodName:doInit:[] @TO@ SuperMethodInvocation@@super.doInit() @AT@ 2004 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizationRequestTests,  @AT@ 11812 @LENGTH@ 803
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt,  @AT@ 11812 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt,  @AT@ 11819 @LENGTH@ 4
---INS SimpleName@@MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt,  @AT@ 11824 @LENGTH@ 91
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build(); @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt,  @AT@ 11922 @LENGTH@ 248
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build(); @AT@ 11922 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build(); @AT@ 11949 @LENGTH@ 220
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @AT@ 11949 @LENGTH@ 20
---------INS MethodInvocation@@TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @TO@ VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @AT@ 11976 @LENGTH@ 193
------------INS MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D"] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @AT@ 11976 @LENGTH@ 185
---------------INS InfixExpression@@AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D" @TO@ MethodInvocation@@MethodName:authorizationUri:[AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D"] @AT@ 12042 @LENGTH@ 118
------------------INS SimpleName@@AUTHORIZATION_URI @TO@ InfixExpression@@AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D" @AT@ 12042 @LENGTH@ 17
------------------INS Operator@@+ @TO@ InfixExpression@@AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D" @AT@ 12059 @LENGTH@ 1
------------------INS StringLiteral@@"?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D" @TO@ InfixExpression@@AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D" @AT@ 12070 @LENGTH@ 90
------------INS MethodInvocation@@MethodName:request:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @AT@ 11976 @LENGTH@ 41
------------INS SimpleName@@Name:TestOAuth2AuthorizationRequests @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @AT@ 11976 @LENGTH@ 31
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().authorizationUri(AUTHORIZATION_URI + "?claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D").build() @AT@ 12162 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt,  @AT@ 12174 @LENGTH@ 74
------INS MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @AT@ 12174 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @AT@ 12174 @LENGTH@ 61
------------INS MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @AT@ 12185 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 12185 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getAuthorizationRequestUri:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 12206 @LENGTH@ 28
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isNotNull() @AT@ 12236 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id") @TO@ MethodDeclaration@@public, void, MethodName:buildWhenAuthorizationUriIncludesEscapedQueryParameterThenAuthorizationRequestUrlIncludesIt,  @AT@ 12251 @LENGTH@ 361
------INS MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id") @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id") @AT@ 12251 @LENGTH@ 360
---------INS MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id") @AT@ 12251 @LENGTH@ 61
------------INS MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:assertThat:[authorizationRequest.getAuthorizationRequestUri()] @AT@ 12262 @LENGTH@ 49
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 12262 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getAuthorizationRequestUri:[] @TO@ MethodInvocation@@authorizationRequest.getAuthorizationRequestUri() @AT@ 12283 @LENGTH@ 28
---------INS SimpleName@@MethodName:isEqualTo:["https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id"] @TO@ MethodInvocation@@assertThat(authorizationRequest.getAuthorizationRequestUri()).isEqualTo("https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id") @AT@ 12318 @LENGTH@ 293
------------INS InfixExpression@@"https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id" @TO@ SimpleName@@MethodName:isEqualTo:["https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id"] @AT@ 12328 @LENGTH@ 282
---------------INS StringLiteral@@"https://provider.com/oauth2/authorize?" @TO@ InfixExpression@@"https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id" @AT@ 12328 @LENGTH@ 40
---------------INS Operator@@+ @TO@ InfixExpression@@"https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id" @AT@ 12368 @LENGTH@ 1
---------------INS StringLiteral@@"claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" @TO@ InfixExpression@@"https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id" @AT@ 12377 @LENGTH@ 90
---------------INS StringLiteral@@"response_type=code&client_id=client-id&state=state&" @TO@ InfixExpression@@"https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id" @AT@ 12476 @LENGTH@ 53
---------------INS StringLiteral@@"redirect_uri=https://example.com/authorize/oauth2/code/registration-id" @TO@ InfixExpression@@"https://provider.com/oauth2/authorize?" + "claims=%7B%22userinfo%22%3A%7B%22email_verified%22%3A%7B%22essential%22%3Atrue%7D%7D%7D&" + "response_type=code&client_id=client-id&state=state&"+ "redirect_uri=https://example.com/authorize/oauth2/code/registration-id" @AT@ 12538 @LENGTH@ 72


UPD MethodDeclaration@@public, static, Charset, MethodName:toCharset, final String charset,  @TO@ public, static, Charset, MethodName:toCharset, final String charsetName,  @AT@ 4591 @LENGTH@ 147
---UPD SingleVariableDeclaration@@final String charset @TO@ final String charsetName @AT@ 4623 @LENGTH@ 20
------UPD SimpleName@@charset @TO@ charsetName @AT@ 4636 @LENGTH@ 7
---UPD ReturnStatement@@ConditionalExpression:charset == null ? Charset.defaultCharset() : Charset.forName(charset) @TO@ ConditionalExpression:charsetName == null ? Charset.defaultCharset() : Charset.forName(charsetName) @AT@ 4655 @LENGTH@ 77
------UPD ConditionalExpression@@charset == null ? Charset.defaultCharset() : Charset.forName(charset) @TO@ charsetName == null ? Charset.defaultCharset() : Charset.forName(charsetName) @AT@ 4662 @LENGTH@ 69
---------UPD InfixExpression@@charset == null @TO@ charsetName == null @AT@ 4662 @LENGTH@ 15
------------UPD SimpleName@@charset @TO@ charsetName @AT@ 4662 @LENGTH@ 7
---------UPD MethodInvocation@@Charset.forName(charset) @TO@ Charset.forName(charsetName) @AT@ 4707 @LENGTH@ 24
------------UPD SimpleName@@MethodName:forName:[charset] @TO@ MethodName:forName:[charsetName] @AT@ 4715 @LENGTH@ 16
---------------UPD SimpleName@@charset @TO@ charsetName @AT@ 4723 @LENGTH@ 7


INS TypeDeclaration@@[@EnableWebFlux, static]WebFluxConfig,  @TO@ TypeDeclaration@@[public]OAuth2LoginTests,  @AT@ 9673 @LENGTH@ 46
---INS MarkerAnnotation@@@EnableWebFlux @TO@ TypeDeclaration@@[@EnableWebFlux, static]WebFluxConfig,  @AT@ 9673 @LENGTH@ 14
---INS Modifier@@static @TO@ TypeDeclaration@@[@EnableWebFlux, static]WebFluxConfig,  @AT@ 9689 @LENGTH@ 6
---INS SimpleName@@ClassName:WebFluxConfig @TO@ TypeDeclaration@@[@EnableWebFlux, static]WebFluxConfig,  @AT@ 9702 @LENGTH@ 13


UPD MethodDeclaration@@public, voidMethodName:DefaultAnalyticsApiClient, String version, SalesforceSession session, SalesforceHttpClient httpClient, SalesforceException,  @TO@ public, voidMethodName:DefaultAnalyticsApiClient, String version, SalesforceSession session, SalesforceHttpClient httpClient, SalesforceLoginConfig loginConfig, SalesforceException,  @AT@ 2977 @LENGTH@ 244
---UPD SuperConstructorInvocation@@super(version,session,httpClient);
 @TO@ super(version,session,httpClient,loginConfig);
 @AT@ 3123 @LENGTH@ 36
------INS SimpleName@@loginConfig @TO@ SuperConstructorInvocation@@super(version,session,httpClient);
 @AT@ 3262 @LENGTH@ 11
---INS SingleVariableDeclaration@@SalesforceLoginConfig loginConfig @TO@ MethodDeclaration@@public, voidMethodName:DefaultAnalyticsApiClient, String version, SalesforceSession session, SalesforceHttpClient httpClient, SalesforceException,  @AT@ 3154 @LENGTH@ 33
------INS SimpleType@@SalesforceLoginConfig @TO@ SingleVariableDeclaration@@SalesforceLoginConfig loginConfig @AT@ 3154 @LENGTH@ 21
------INS SimpleName@@loginConfig @TO@ SingleVariableDeclaration@@SalesforceLoginConfig loginConfig @AT@ 3176 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @TO@ MethodDeclaration@@MethodSpec, MethodName:generateRestMethod,  @AT@ 3884 @LENGTH@ 115
---INS MethodInvocation@@forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @TO@ ExpressionStatement@@MethodInvocation:forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @AT@ 3884 @LENGTH@ 114
------INS SimpleName@@Name:forward @TO@ MethodInvocation@@forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @AT@ 3884 @LENGTH@ 7
------INS SimpleName@@MethodName:addCode:["    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n"] @TO@ MethodInvocation@@forward.addCode("    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n") @AT@ 3892 @LENGTH@ 106
---------INS StringLiteral@@"    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n" @TO@ SimpleName@@MethodName:addCode:["    String camelPrefix = (path != null && path.startsWith(\"/\")) ? \"/camel\" : \"/camel/\";\n"] @AT@ 3900 @LENGTH@ 97


UPD TypeDeclaration@@[@API(status=API.Status.INTERNAL,since="1.0"), public, final]NodeLabels, [Visitable] @TO@ [@API(status=API.Status.INTERNAL,since="1.0"), final]NodeLabels, [Visitable] @AT@ 1092 @LENGTH@ 349
---DEL Modifier@@public @AT@ 1142 @LENGTH@ 6


UPD MethodDeclaration@@KubernetesResourcesQuotaEndpointBuilder, MethodName:kubernetesResourcesQuota, String path,  @TO@ static, KubernetesResourcesQuotaEndpointBuilder, MethodName:kubernetesResourcesQuota, String path,  @AT@ 15682 @LENGTH@ 481
---INS Modifier@@static @TO@ MethodDeclaration@@KubernetesResourcesQuotaEndpointBuilder, MethodName:kubernetesResourcesQuota, String path,  @AT@ 15642 @LENGTH@ 6


MOV FieldDeclaration@@public, static, final, String, [PREFIX="{" + Constants.PLACEHOLDER_QNAME + "}"] @TO@ TypeDeclaration@@[public, final]ProcessorDefinitionHelper,  @AT@ 2178 @LENGTH@ 76


UPD MethodDeclaration@@public, StreamMessageListenerContainerOptionsBuilder<K,MapRecord<K,HK,HV>>, HK, HV, MethodName:hashValueSerializer, RedisSerializer<HK> serializer,  @TO@ public, StreamMessageListenerContainerOptionsBuilder<K,MapRecord<K,HK,HV>>, HK, HV, MethodName:hashValueSerializer, RedisSerializer<HV> serializer,  @AT@ 27618 @LENGTH@ 340
---UPD SingleVariableDeclaration@@RedisSerializer<HK> serializer @TO@ RedisSerializer<HV> serializer @AT@ 27729 @LENGTH@ 30
------UPD ParameterizedType@@RedisSerializer<HK> @TO@ RedisSerializer<HV> @AT@ 27729 @LENGTH@ 19
---------UPD SimpleType@@HK @TO@ HV @AT@ 27745 @LENGTH@ 2


UPD VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(null).attributes(null).build(); @TO@ OAuth2AuthorizationRequest authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build(); @AT@ 2714 @LENGTH@ 199
---UPD VariableDeclarationFragment@@authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(null).attributes(null).build() @TO@ authorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @AT@ 2741 @LENGTH@ 171
------UPD MethodInvocation@@this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(null).attributes(null).build() @TO@ this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @AT@ 2768 @LENGTH@ 144
---------UPD MethodInvocation@@MethodName:attributes:[null] @TO@ MethodName:attributes:[Collections.emptyMap()] @AT@ 2768 @LENGTH@ 129
------------DEL NullLiteral@@null @AT@ 2892 @LENGTH@ 4
------------INS MethodInvocation@@Collections.emptyMap() @TO@ MethodInvocation@@MethodName:attributes:[null] @AT@ 2940 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 2940 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 2952 @LENGTH@ 10
---------UPD MethodInvocation@@MethodName:additionalParameters:[null] @TO@ MethodName:additionalParameters:[Collections.emptyMap()] @AT@ 2768 @LENGTH@ 105
------------DEL NullLiteral@@null @AT@ 2868 @LENGTH@ 4
------------INS MethodInvocation@@Collections.emptyMap() @TO@ MethodInvocation@@MethodName:additionalParameters:[null] @AT@ 2898 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 2898 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 2910 @LENGTH@ 10


UPD FieldDeclaration@@protected, String, [allowAnyType=Boolean.toString(false)] @TO@ private, String, [allowAnyType=Boolean.toString(false)] @AT@ 2444 @LENGTH@ 56
---UPD Modifier@@protected @TO@ private @AT@ 2444 @LENGTH@ 9


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 3231 @LENGTH@ 439
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 3246 @LENGTH@ 7
---INS ExpressionStatement@@SuperMethodInvocation:super.doInit() @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 3288 @LENGTH@ 15
------INS SuperMethodInvocation@@super.doInit() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doInit() @AT@ 3288 @LENGTH@ 14
---------INS SimpleName@@MethodName:doInit:[] @TO@ SuperMethodInvocation@@super.doInit() @AT@ 3294 @LENGTH@ 6


INS MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ TypeDeclaration@@[public]DefaultServiceCallProcessor, AsyncProcessorSupport @AT@ 4941 @LENGTH@ 182
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 4941 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 4951 @LENGTH@ 4
---INS SimpleName@@MethodName:doStart @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 4956 @LENGTH@ 7
---MOV ExpressionStatement@@MethodInvocation:ServiceHelper.startService(processor) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 4961 @LENGTH@ 38
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 4973 @LENGTH@ 9
---MOV ExpressionStatement@@MethodInvocation:ServiceHelper.startService(loadBalancer) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 5008 @LENGTH@ 41


INS MethodDeclaration@@void, MethodName:unwindWithoutWith,  @TO@ TypeDeclaration@@[@Nested]UnwindRendering,  @AT@ 61810 @LENGTH@ 600
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:unwindWithoutWith,  @AT@ 61805 @LENGTH@ 4
---INS SimpleName@@MethodName:unwindWithoutWith @TO@ MethodDeclaration@@void, MethodName:unwindWithoutWith,  @AT@ 61810 @LENGTH@ 17
---INS VariableDeclarationStatement@@final Node rootNode=anyNode(NAME_OF_ROOT_NODE); @TO@ MethodDeclaration@@void, MethodName:unwindWithoutWith,  @AT@ 61836 @LENGTH@ 49
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Node rootNode=anyNode(NAME_OF_ROOT_NODE); @AT@ 61836 @LENGTH@ 5
------INS SimpleType@@Node @TO@ VariableDeclarationStatement@@final Node rootNode=anyNode(NAME_OF_ROOT_NODE); @AT@ 61842 @LENGTH@ 4
------INS VariableDeclarationFragment@@rootNode=anyNode(NAME_OF_ROOT_NODE) @TO@ VariableDeclarationStatement@@final Node rootNode=anyNode(NAME_OF_ROOT_NODE); @AT@ 61847 @LENGTH@ 37
---------INS SimpleName@@rootNode @TO@ VariableDeclarationFragment@@rootNode=anyNode(NAME_OF_ROOT_NODE) @AT@ 61847 @LENGTH@ 8
---------INS MethodInvocation@@anyNode(NAME_OF_ROOT_NODE) @TO@ VariableDeclarationFragment@@rootNode=anyNode(NAME_OF_ROOT_NODE) @AT@ 61858 @LENGTH@ 26
------------INS SimpleName@@MethodName:anyNode:[NAME_OF_ROOT_NODE] @TO@ MethodInvocation@@anyNode(NAME_OF_ROOT_NODE) @AT@ 61858 @LENGTH@ 26
---------------INS SimpleName@@NAME_OF_ROOT_NODE @TO@ SimpleName@@MethodName:anyNode:[NAME_OF_ROOT_NODE] @AT@ 61866 @LENGTH@ 17
---INS VariableDeclarationStatement@@final SymbolicName label=name("label"); @TO@ MethodDeclaration@@void, MethodName:unwindWithoutWith,  @AT@ 61889 @LENGTH@ 41
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final SymbolicName label=name("label"); @AT@ 61889 @LENGTH@ 5
------INS SimpleType@@SymbolicName @TO@ VariableDeclarationStatement@@final SymbolicName label=name("label"); @AT@ 61895 @LENGTH@ 12
------INS VariableDeclarationFragment@@label=name("label") @TO@ VariableDeclarationStatement@@final SymbolicName label=name("label"); @AT@ 61908 @LENGTH@ 21
---------INS SimpleName@@label @TO@ VariableDeclarationFragment@@label=name("label") @AT@ 61908 @LENGTH@ 5
---------INS MethodInvocation@@name("label") @TO@ VariableDeclarationFragment@@label=name("label") @AT@ 61916 @LENGTH@ 13
------------INS SimpleName@@MethodName:name:["label"] @TO@ MethodInvocation@@name("label") @AT@ 61916 @LENGTH@ 13
---------------INS StringLiteral@@"label" @TO@ SimpleName@@MethodName:name:["label"] @AT@ 61921 @LENGTH@ 7
---INS VariableDeclarationStatement@@final Statement statement=Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build(); @TO@ MethodDeclaration@@void, MethodName:unwindWithoutWith,  @AT@ 61934 @LENGTH@ 275
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Statement statement=Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build(); @AT@ 61934 @LENGTH@ 5
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@final Statement statement=Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build(); @AT@ 61940 @LENGTH@ 9
------INS VariableDeclarationFragment@@statement=Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @TO@ VariableDeclarationStatement@@final Statement statement=Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build(); @AT@ 61950 @LENGTH@ 258
---------INS SimpleName@@statement @TO@ VariableDeclarationFragment@@statement=Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61950 @LENGTH@ 9
---------INS MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @TO@ VariableDeclarationFragment@@statement=Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 245
------------INS MethodInvocation@@MethodName:returning:[Functions.collect(label).as("labels")] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 237
---------------INS MethodInvocation@@Functions.collect(label).as("labels") @TO@ MethodInvocation@@MethodName:returning:[Functions.collect(label).as("labels")] @AT@ 62162 @LENGTH@ 37
------------------INS MethodInvocation@@MethodName:collect:[label] @TO@ MethodInvocation@@Functions.collect(label).as("labels") @AT@ 62162 @LENGTH@ 24
---------------------INS SimpleName@@label @TO@ MethodInvocation@@MethodName:collect:[label] @AT@ 62180 @LENGTH@ 5
------------------INS SimpleName@@Name:Functions @TO@ MethodInvocation@@Functions.collect(label).as("labels") @AT@ 62162 @LENGTH@ 9
------------------INS SimpleName@@MethodName:as:["labels"] @TO@ MethodInvocation@@Functions.collect(label).as("labels") @AT@ 62187 @LENGTH@ 12
---------------------INS StringLiteral@@"labels" @TO@ SimpleName@@MethodName:as:["labels"] @AT@ 62190 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:where:[label.in(parameter("fixedLabels")).not()] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 183
---------------INS MethodInvocation@@label.in(parameter("fixedLabels")).not() @TO@ MethodInvocation@@MethodName:where:[label.in(parameter("fixedLabels")).not()] @AT@ 62105 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:in:[parameter("fixedLabels")] @TO@ MethodInvocation@@label.in(parameter("fixedLabels")).not() @AT@ 62105 @LENGTH@ 34
---------------------INS MethodInvocation@@parameter("fixedLabels") @TO@ MethodInvocation@@MethodName:in:[parameter("fixedLabels")] @AT@ 62114 @LENGTH@ 24
------------------------INS SimpleName@@MethodName:parameter:["fixedLabels"] @TO@ MethodInvocation@@parameter("fixedLabels") @AT@ 62114 @LENGTH@ 24
---------------------------INS StringLiteral@@"fixedLabels" @TO@ SimpleName@@MethodName:parameter:["fixedLabels"] @AT@ 62124 @LENGTH@ 13
------------------INS SimpleName@@Name:label @TO@ MethodInvocation@@label.in(parameter("fixedLabels")).not() @AT@ 62105 @LENGTH@ 5
------------------INS SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@label.in(parameter("fixedLabels")).not() @AT@ 62140 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:with:[label] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 135
---------------INS SimpleName@@label @TO@ MethodInvocation@@MethodName:with:[label] @AT@ 62092 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:as:["label"] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 118
---------------INS StringLiteral@@"label" @TO@ MethodInvocation@@MethodName:as:["label"] @AT@ 62073 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:unwind:[rootNode.labels()] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 106
---------------INS MethodInvocation@@rootNode.labels() @TO@ MethodInvocation@@MethodName:unwind:[rootNode.labels()] @AT@ 62051 @LENGTH@ 17
------------------INS SimpleName@@Name:rootNode @TO@ MethodInvocation@@rootNode.labels() @AT@ 62051 @LENGTH@ 8
------------------INS SimpleName@@MethodName:labels:[] @TO@ MethodInvocation@@rootNode.labels() @AT@ 62060 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:where:[rootNode.internalId().isEqualTo(literalOf(1))] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 75
---------------INS MethodInvocation@@rootNode.internalId().isEqualTo(literalOf(1)) @TO@ MethodInvocation@@MethodName:where:[rootNode.internalId().isEqualTo(literalOf(1))] @AT@ 61992 @LENGTH@ 45
------------------INS MethodInvocation@@MethodName:internalId:[] @TO@ MethodInvocation@@rootNode.internalId().isEqualTo(literalOf(1)) @AT@ 61992 @LENGTH@ 21
------------------INS SimpleName@@Name:rootNode @TO@ MethodInvocation@@rootNode.internalId().isEqualTo(literalOf(1)) @AT@ 61992 @LENGTH@ 8
------------------INS SimpleName@@MethodName:isEqualTo:[literalOf(1)] @TO@ MethodInvocation@@rootNode.internalId().isEqualTo(literalOf(1)) @AT@ 62014 @LENGTH@ 23
---------------------INS MethodInvocation@@literalOf(1) @TO@ SimpleName@@MethodName:isEqualTo:[literalOf(1)] @AT@ 62024 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:literalOf:[1] @TO@ MethodInvocation@@literalOf(1) @AT@ 62024 @LENGTH@ 12
---------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:literalOf:[1] @AT@ 62034 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:match:[rootNode] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 22
---------------INS SimpleName@@rootNode @TO@ MethodInvocation@@MethodName:match:[rootNode] @AT@ 61976 @LENGTH@ 8
------------INS SimpleName@@Name:Cypher @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 61963 @LENGTH@ 6
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@Cypher.match(rootNode).where(rootNode.internalId().isEqualTo(literalOf(1))).unwind(rootNode.labels()).as("label").with(label).where(label.in(parameter("fixedLabels")).not()).returning(Functions.collect(label).as("labels")).build() @AT@ 62201 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels") @TO@ MethodDeclaration@@void, MethodName:unwindWithoutWith,  @AT@ 62214 @LENGTH@ 192
------INS MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels") @AT@ 62214 @LENGTH@ 191
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels") @AT@ 62214 @LENGTH@ 44
------------INS MethodInvocation@@cypherRenderer.render(statement) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @AT@ 62225 @LENGTH@ 32
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 62225 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[statement] @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 62240 @LENGTH@ 17
------------------INS SimpleName@@statement @TO@ SimpleName@@MethodName:render:[statement] @AT@ 62247 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels") @AT@ 62264 @LENGTH@ 141
------------INS StringLiteral@@"MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (n) WHERE id(n) = 1 UNWIND labels(n) AS label WITH label WHERE NOT (label IN $fixedLabels) RETURN collect(label) AS labels"] @AT@ 62274 @LENGTH@ 130


UPD EnhancedForStatement@@for (RuntimeEndpointRegistry.Statistic stat : context.getRuntimeEndpointRegistry().getEndpointStatistics()) {  String url=stat.getUri();  String routeId=stat.getRouteId();  String direction=stat.getDirection();  Boolean isStatic=staticRegistry.isStatic(url);  Boolean isDynamic=staticRegistry.isDynamic(url);  long hits=stat.getHits();  Map<String,String> row=new LinkedHashMap<>();  row.put("camelContextName",context.getName());  row.put("uri",url);  row.put("routeId",routeId);  row.put("direction",direction);  row.put("static",isStatic.toString());  row.put("dynamic",isDynamic.toString());  row.put("hits","" + hits);  answer.add(row);} @TO@ for (RuntimeEndpointRegistry.Statistic stat : context.getRuntimeEndpointRegistry().getEndpointStatistics()) {  String url=stat.getUri();  String routeId=stat.getRouteId();  String direction=stat.getDirection();  boolean isStatic=staticRegistry.isStatic(url);  boolean isDynamic=staticRegistry.isDynamic(url);  long hits=stat.getHits();  Map<String,String> row=new LinkedHashMap<>();  row.put("camelContextName",context.getName());  row.put("uri",url);  row.put("routeId",routeId);  row.put("direction",direction);  row.put("static",Boolean.toString(isStatic));  row.put("dynamic",Boolean.toString(isDynamic));  row.put("hits","" + hits);  answer.add(row);} @AT@ 24678 @LENGTH@ 968
---UPD VariableDeclarationStatement@@Boolean isStatic=staticRegistry.isStatic(url); @TO@ boolean isStatic=staticRegistry.isStatic(url); @AT@ 24973 @LENGTH@ 48
------DEL SimpleType@@Boolean @AT@ 24973 @LENGTH@ 7
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@Boolean isStatic=staticRegistry.isStatic(url); @AT@ 24973 @LENGTH@ 7
---UPD VariableDeclarationStatement@@Boolean isDynamic=staticRegistry.isDynamic(url); @TO@ boolean isDynamic=staticRegistry.isDynamic(url); @AT@ 25042 @LENGTH@ 50
------DEL SimpleType@@Boolean @AT@ 25042 @LENGTH@ 7
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@Boolean isDynamic=staticRegistry.isDynamic(url); @AT@ 25042 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:row.put("static",isStatic.toString()) @TO@ MethodInvocation:row.put("static",Boolean.toString(isStatic)) @AT@ 25442 @LENGTH@ 39
------UPD MethodInvocation@@row.put("static",isStatic.toString()) @TO@ row.put("static",Boolean.toString(isStatic)) @AT@ 25442 @LENGTH@ 38
---------UPD SimpleName@@MethodName:put:["static", isStatic.toString()] @TO@ MethodName:put:["static", Boolean.toString(isStatic)] @AT@ 25446 @LENGTH@ 34
------------UPD MethodInvocation@@isStatic.toString() @TO@ Boolean.toString(isStatic) @AT@ 25460 @LENGTH@ 19
---------------UPD SimpleName@@Name:isStatic @TO@ Name:Boolean @AT@ 25460 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:toString:[isStatic] @AT@ 25469 @LENGTH@ 10
------------------INS SimpleName@@isStatic @TO@ SimpleName@@MethodName:toString:[] @AT@ 25477 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:row.put("dynamic",isDynamic.toString()) @TO@ MethodInvocation:row.put("dynamic",Boolean.toString(isDynamic)) @AT@ 25502 @LENGTH@ 41
------UPD MethodInvocation@@row.put("dynamic",isDynamic.toString()) @TO@ row.put("dynamic",Boolean.toString(isDynamic)) @AT@ 25502 @LENGTH@ 40
---------UPD SimpleName@@MethodName:put:["dynamic", isDynamic.toString()] @TO@ MethodName:put:["dynamic", Boolean.toString(isDynamic)] @AT@ 25506 @LENGTH@ 36
------------UPD MethodInvocation@@isDynamic.toString() @TO@ Boolean.toString(isDynamic) @AT@ 25521 @LENGTH@ 20
---------------UPD SimpleName@@Name:isDynamic @TO@ Name:Boolean @AT@ 25521 @LENGTH@ 9
---------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:toString:[isDynamic] @AT@ 25531 @LENGTH@ 10
------------------INS SimpleName@@isDynamic @TO@ SimpleName@@MethodName:toString:[] @AT@ 25545 @LENGTH@ 9


UPD ForStatement@@for (int h=0; h < pStrings.length; h++) {  status=fs.listStatus(new Path(TEST_WAREHOUSE_DIR + "/" + (TableExtended.MMTBLPART).toString().toLowerCase()+ pStrings[h]),FileUtils.STAGING_DIR_PATH_FILTER);  Arrays.sort(status);  Assert.assertEquals(2,status.length);  for (int i=0; i < status.length; i++) {    String dirName=status[i].getPath().getName();    if (dirName.matches("delta_.*")) {      deltaCount++;    } else {      sawBase=true;      baseDirs[h]=dirName;      Assert.assertTrue(baseDirs[i].matches("base_.*"));    }  }  Assert.assertEquals(1,deltaCount);  Assert.assertTrue(sawBase);  deltaCount=0;  sawBase=false;} @TO@ for (int h=0; h < pStrings.length; h++) {  status=fs.listStatus(new Path(TEST_WAREHOUSE_DIR + "/" + (TableExtended.MMTBLPART).toString().toLowerCase()+ pStrings[h]),FileUtils.STAGING_DIR_PATH_FILTER);  Assert.assertEquals(2,status.length);  for (int i=0; i < status.length; i++) {    String dirName=status[i].getPath().getName();    if (dirName.matches("delta_.*")) {      deltaCount++;    } else {      sawBase=true;      baseDirs[h]=dirName;      Assert.assertTrue(baseDirs[h].matches("base_.*"));    }  }  Assert.assertEquals(1,deltaCount);  Assert.assertTrue(sawBase);  deltaCount=0;  sawBase=false;} @AT@ 9156 @LENGTH@ 813
---DEL ExpressionStatement@@MethodInvocation:Arrays.sort(status) @AT@ 9381 @LENGTH@ 20
------DEL MethodInvocation@@Arrays.sort(status) @AT@ 9381 @LENGTH@ 19
---------DEL SimpleName@@Name:Arrays @AT@ 9381 @LENGTH@ 6
---------DEL SimpleName@@MethodName:sort:[status] @AT@ 9388 @LENGTH@ 12
------------DEL SimpleName@@status @AT@ 9393 @LENGTH@ 6
---UPD ForStatement@@for (int i=0; i < status.length; i++) {  String dirName=status[i].getPath().getName();  if (dirName.matches("delta_.*")) {    deltaCount++;  } else {    sawBase=true;    baseDirs[h]=dirName;    Assert.assertTrue(baseDirs[i].matches("base_.*"));  }} @TO@ for (int i=0; i < status.length; i++) {  String dirName=status[i].getPath().getName();  if (dirName.matches("delta_.*")) {    deltaCount++;  } else {    sawBase=true;    baseDirs[h]=dirName;    Assert.assertTrue(baseDirs[h].matches("base_.*"));  }} @AT@ 9523 @LENGTH@ 319
------UPD IfStatement@@if (dirName.matches("delta_.*")) {  deltaCount++;} else {  sawBase=true;  baseDirs[h]=dirName;  Assert.assertTrue(baseDirs[i].matches("base_.*"));} @TO@ if (dirName.matches("delta_.*")) {  deltaCount++;} else {  sawBase=true;  baseDirs[h]=dirName;  Assert.assertTrue(baseDirs[h].matches("base_.*"));} @AT@ 9629 @LENGTH@ 205
---------UPD Block@@ElseBody:{  sawBase=true;  baseDirs[h]=dirName;  Assert.assertTrue(baseDirs[i].matches("base_.*"));} @TO@ ElseBody:{  sawBase=true;  baseDirs[h]=dirName;  Assert.assertTrue(baseDirs[h].matches("base_.*"));} @AT@ 9703 @LENGTH@ 131
------------UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(baseDirs[i].matches("base_.*")) @TO@ MethodInvocation:Assert.assertTrue(baseDirs[h].matches("base_.*")) @AT@ 9774 @LENGTH@ 50
---------------UPD MethodInvocation@@Assert.assertTrue(baseDirs[i].matches("base_.*")) @TO@ Assert.assertTrue(baseDirs[h].matches("base_.*")) @AT@ 9774 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:assertTrue:[baseDirs[i].matches("base_.*")] @TO@ MethodName:assertTrue:[baseDirs[h].matches("base_.*")] @AT@ 9781 @LENGTH@ 42
---------------------UPD MethodInvocation@@baseDirs[i].matches("base_.*") @TO@ baseDirs[h].matches("base_.*") @AT@ 9792 @LENGTH@ 30
------------------------UPD ArrayAccess@@baseDirs[i] @TO@ baseDirs[h] @AT@ 9792 @LENGTH@ 11
---------------------------UPD SimpleName@@i @TO@ h @AT@ 9801 @LENGTH@ 1


INS FieldDeclaration@@ThingRepository, [thingRepository] @TO@ TypeDeclaration@@[@ContextConfiguration(classes=GalaxyContextConfiguration.class), @RunWith(SpringRunner.class), @Transactional, public]QueryReturnTypesTests,  @AT@ 2152 @LENGTH@ 32
---INS SimpleType@@ThingRepository @TO@ FieldDeclaration@@ThingRepository, [thingRepository] @AT@ 2152 @LENGTH@ 15
---INS VariableDeclarationFragment@@thingRepository @TO@ FieldDeclaration@@ThingRepository, [thingRepository] @AT@ 2168 @LENGTH@ 15
------INS SimpleName@@thingRepository @TO@ VariableDeclarationFragment@@thingRepository @AT@ 2168 @LENGTH@ 15


UPD IfStatement@@if (configuration != null) {  boxConnection=BoxConnectionHelper.createConnection(configuration);} else {  throw new IllegalArgumentException("Unable to connect, Box component configuration is missing");} @TO@ if (getConfiguration() != null) {  boxConnection=BoxConnectionHelper.createConnection(getConfiguration());} else {  throw new IllegalArgumentException("Unable to connect, Box component configuration is missing");} @AT@ 3008 @LENGTH@ 261
---UPD InfixExpression@@configuration != null @TO@ getConfiguration() != null @AT@ 3012 @LENGTH@ 21
------DEL SimpleName@@configuration @AT@ 3012 @LENGTH@ 13
------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ InfixExpression@@configuration != null @AT@ 3051 @LENGTH@ 18
---UPD Block@@ThenBody:{  boxConnection=BoxConnectionHelper.createConnection(configuration);} @TO@ ThenBody:{  boxConnection=BoxConnectionHelper.createConnection(getConfiguration());} @AT@ 3035 @LENGTH@ 100
------UPD ExpressionStatement@@Assignment:boxConnection=BoxConnectionHelper.createConnection(configuration) @TO@ Assignment:boxConnection=BoxConnectionHelper.createConnection(getConfiguration()) @AT@ 3053 @LENGTH@ 68
---------UPD Assignment@@boxConnection=BoxConnectionHelper.createConnection(configuration) @TO@ boxConnection=BoxConnectionHelper.createConnection(getConfiguration()) @AT@ 3053 @LENGTH@ 67
------------UPD MethodInvocation@@BoxConnectionHelper.createConnection(configuration) @TO@ BoxConnectionHelper.createConnection(getConfiguration()) @AT@ 3069 @LENGTH@ 51
---------------UPD SimpleName@@MethodName:createConnection:[configuration] @TO@ MethodName:createConnection:[getConfiguration()] @AT@ 3089 @LENGTH@ 31
------------------DEL SimpleName@@configuration @AT@ 3106 @LENGTH@ 13
------------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ SimpleName@@MethodName:createConnection:[configuration] @AT@ 3150 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoLineTokenizerWasProvided,  @TO@ TypeDeclaration@@[public]FlatFileItemReaderBuilderTests,  @AT@ 16721 @LENGTH@ 376
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoLineTokenizerWasProvided,  @AT@ 16721 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoLineTokenizerWasProvided,  @AT@ 16728 @LENGTH@ 4
---INS SimpleName@@MethodName:testErrorMessageWhenNoLineTokenizerWasProvided @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoLineTokenizerWasProvided,  @AT@ 16733 @LENGTH@ 46
---INS TryStatement@@try {  new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build();} catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  assertEquals("No LineTokenizer implementation was provided.",exceptionMessage);} @TO@ MethodDeclaration@@public, void, MethodName:testErrorMessageWhenNoLineTokenizerWasProvided,  @AT@ 16786 @LENGTH@ 308
------INS ExpressionStatement@@MethodInvocation:new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build() @TO@ TryStatement@@try {  new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build();} catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  assertEquals("No LineTokenizer implementation was provided.",exceptionMessage);} @AT@ 16795 @LENGTH@ 112
---------INS MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build() @TO@ ExpressionStatement@@MethodInvocation:new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build() @AT@ 16795 @LENGTH@ 111
------------INS MethodInvocation@@MethodName:resource:[getResource("1;2;3")] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build() @AT@ 16795 @LENGTH@ 97
---------------INS MethodInvocation@@getResource("1;2;3") @TO@ MethodInvocation@@MethodName:resource:[getResource("1;2;3")] @AT@ 16871 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getResource:["1;2;3"] @TO@ MethodInvocation@@getResource("1;2;3") @AT@ 16871 @LENGTH@ 20
---------------------INS StringLiteral@@"1;2;3" @TO@ SimpleName@@MethodName:getResource:["1;2;3"] @AT@ 16883 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:name:["fooReader"] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build() @AT@ 16795 @LENGTH@ 60
---------------INS StringLiteral@@"fooReader" @TO@ MethodInvocation@@MethodName:name:["fooReader"] @AT@ 16843 @LENGTH@ 11
------------INS ClassInstanceCreation@@FlatFileItemReaderBuilder<Foo>[] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build() @AT@ 16795 @LENGTH@ 36
---------------INS New@@new @TO@ ClassInstanceCreation@@FlatFileItemReaderBuilder<Foo>[] @AT@ 16795 @LENGTH@ 3
---------------INS ParameterizedType@@FlatFileItemReaderBuilder<Foo> @TO@ ClassInstanceCreation@@FlatFileItemReaderBuilder<Foo>[] @AT@ 16799 @LENGTH@ 30
------------------INS SimpleType@@FlatFileItemReaderBuilder @TO@ ParameterizedType@@FlatFileItemReaderBuilder<Foo> @AT@ 16799 @LENGTH@ 25
------------------INS SimpleType@@Foo @TO@ ParameterizedType@@FlatFileItemReaderBuilder<Foo> @AT@ 16825 @LENGTH@ 3
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build() @AT@ 16899 @LENGTH@ 7
------INS CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  assertEquals("No LineTokenizer implementation was provided.",exceptionMessage);} @TO@ TryStatement@@try {  new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1;2;3")).build();} catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  assertEquals("No LineTokenizer implementation was provided.",exceptionMessage);} @AT@ 16912 @LENGTH@ 182
---------INS SingleVariableDeclaration@@IllegalStateException exception @TO@ CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  assertEquals("No LineTokenizer implementation was provided.",exceptionMessage);} @AT@ 16919 @LENGTH@ 31
------------INS SimpleType@@IllegalStateException @TO@ SingleVariableDeclaration@@IllegalStateException exception @AT@ 16919 @LENGTH@ 21
------------INS SimpleName@@exception @TO@ SingleVariableDeclaration@@IllegalStateException exception @AT@ 16941 @LENGTH@ 9
---------INS VariableDeclarationStatement@@String exceptionMessage=exception.getMessage(); @TO@ CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  assertEquals("No LineTokenizer implementation was provided.",exceptionMessage);} @AT@ 16957 @LENGTH@ 49
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String exceptionMessage=exception.getMessage(); @AT@ 16957 @LENGTH@ 6
------------INS VariableDeclarationFragment@@exceptionMessage=exception.getMessage() @TO@ VariableDeclarationStatement@@String exceptionMessage=exception.getMessage(); @AT@ 16964 @LENGTH@ 41
---------------INS SimpleName@@exceptionMessage @TO@ VariableDeclarationFragment@@exceptionMessage=exception.getMessage() @AT@ 16964 @LENGTH@ 16
---------------INS MethodInvocation@@exception.getMessage() @TO@ VariableDeclarationFragment@@exceptionMessage=exception.getMessage() @AT@ 16983 @LENGTH@ 22
------------------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.getMessage() @AT@ 16983 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exception.getMessage() @AT@ 16993 @LENGTH@ 12
---------INS ExpressionStatement@@MethodInvocation:assertEquals("No LineTokenizer implementation was provided.",exceptionMessage) @TO@ CatchClause@@catch (IllegalStateException exception) {  String exceptionMessage=exception.getMessage();  assertEquals("No LineTokenizer implementation was provided.",exceptionMessage);} @AT@ 17010 @LENGTH@ 80
------------INS MethodInvocation@@assertEquals("No LineTokenizer implementation was provided.",exceptionMessage) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("No LineTokenizer implementation was provided.",exceptionMessage) @AT@ 17010 @LENGTH@ 79
---------------INS SimpleName@@MethodName:assertEquals:["No LineTokenizer implementation was provided.", exceptionMessage] @TO@ MethodInvocation@@assertEquals("No LineTokenizer implementation was provided.",exceptionMessage) @AT@ 17010 @LENGTH@ 79
------------------INS StringLiteral@@"No LineTokenizer implementation was provided." @TO@ SimpleName@@MethodName:assertEquals:["No LineTokenizer implementation was provided.", exceptionMessage] @AT@ 17023 @LENGTH@ 47
------------------INS SimpleName@@exceptionMessage @TO@ SimpleName@@MethodName:assertEquals:["No LineTokenizer implementation was provided.", exceptionMessage] @AT@ 17072 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:http.authorizeExchange().pathMatchers("/**/message/**").hasAnyAuthority("SCOPE_message:read").and().oauth2ResourceServer().authenticationManagerResolver(authenticationManagerResolver()) @TO@ MethodInvocation:http.authorizeExchange().pathMatchers("/*/message/**").hasAnyAuthority("SCOPE_message:read").and().oauth2ResourceServer().authenticationManagerResolver(authenticationManagerResolver()) @AT@ 24731 @LENGTH@ 214
---UPD MethodInvocation@@http.authorizeExchange().pathMatchers("/**/message/**").hasAnyAuthority("SCOPE_message:read").and().oauth2ResourceServer().authenticationManagerResolver(authenticationManagerResolver()) @TO@ http.authorizeExchange().pathMatchers("/*/message/**").hasAnyAuthority("SCOPE_message:read").and().oauth2ResourceServer().authenticationManagerResolver(authenticationManagerResolver()) @AT@ 24731 @LENGTH@ 213
------UPD MethodInvocation@@MethodName:pathMatchers:["/**/message/**"] @TO@ MethodName:pathMatchers:["/*/message/**"] @AT@ 24731 @LENGTH@ 66
---------UPD StringLiteral@@"/**/message/**" @TO@ "/*/message/**" @AT@ 24780 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @TO@ TypeDeclaration@@[public]OAuth2ErrorHttpMessageConverterTests,  @AT@ 3162 @LENGTH@ 846
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3162 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3169 @LENGTH@ 4
---INS SimpleName@@MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3174 @LENGTH@ 58
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3242 @LENGTH@ 9
---INS VariableDeclarationStatement@@String errorResponse="{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n"; @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3256 @LENGTH@ 277
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String errorResponse="{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n"; @AT@ 3256 @LENGTH@ 6
------INS VariableDeclarationFragment@@errorResponse="{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @TO@ VariableDeclarationStatement@@String errorResponse="{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n"; @AT@ 3263 @LENGTH@ 269
---------INS SimpleName@@errorResponse @TO@ VariableDeclarationFragment@@errorResponse="{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3263 @LENGTH@ 13
---------INS InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @TO@ VariableDeclarationFragment@@errorResponse="{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3279 @LENGTH@ 253
------------INS StringLiteral@@"{\n" @TO@ InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3279 @LENGTH@ 5
------------INS Operator@@+ @TO@ InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3284 @LENGTH@ 1
------------INS StringLiteral@@"	\"error\": \"unauthorized_client\",\n" @TO@ InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3291 @LENGTH@ 40
------------INS StringLiteral@@"   \"error_description\": \"The client is not authorized\",\n" @TO@ InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3338 @LENGTH@ 63
------------INS StringLiteral@@"   \"error_codes\": [65001],\n" @TO@ InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3408 @LENGTH@ 32
------------INS StringLiteral@@"   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n" @TO@ InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3447 @LENGTH@ 73
------------INS StringLiteral@@"}\n" @TO@ InfixExpression@@"{\n" + "	\"error\": \"unauthorized_client\",\n" + "   \"error_description\": \"The client is not authorized\",\n"+ "   \"error_codes\": [65001],\n"+ "   \"error_uri\": \"https://tools.ietf.org/html/rfc6749#section-5.2\"\n"+ "}\n" @AT@ 3527 @LENGTH@ 5
---INS VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(errorResponse.getBytes(),HttpStatus.BAD_REQUEST); @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3537 @LENGTH@ 116
------INS SimpleType@@MockClientHttpResponse @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(errorResponse.getBytes(),HttpStatus.BAD_REQUEST); @AT@ 3537 @LENGTH@ 22
------INS VariableDeclarationFragment@@response=new MockClientHttpResponse(errorResponse.getBytes(),HttpStatus.BAD_REQUEST) @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(errorResponse.getBytes(),HttpStatus.BAD_REQUEST); @AT@ 3560 @LENGTH@ 92
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(errorResponse.getBytes(),HttpStatus.BAD_REQUEST) @AT@ 3560 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockClientHttpResponse[errorResponse.getBytes(), HttpStatus.BAD_REQUEST] @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(errorResponse.getBytes(),HttpStatus.BAD_REQUEST) @AT@ 3571 @LENGTH@ 81
------------INS New@@new @TO@ ClassInstanceCreation@@MockClientHttpResponse[errorResponse.getBytes(), HttpStatus.BAD_REQUEST] @AT@ 3571 @LENGTH@ 3
------------INS SimpleType@@MockClientHttpResponse @TO@ ClassInstanceCreation@@MockClientHttpResponse[errorResponse.getBytes(), HttpStatus.BAD_REQUEST] @AT@ 3575 @LENGTH@ 22
------------INS MethodInvocation@@errorResponse.getBytes() @TO@ ClassInstanceCreation@@MockClientHttpResponse[errorResponse.getBytes(), HttpStatus.BAD_REQUEST] @AT@ 3603 @LENGTH@ 24
---------------INS SimpleName@@Name:errorResponse @TO@ MethodInvocation@@errorResponse.getBytes() @AT@ 3603 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@errorResponse.getBytes() @AT@ 3617 @LENGTH@ 10
------------INS QualifiedName@@HttpStatus.BAD_REQUEST @TO@ ClassInstanceCreation@@MockClientHttpResponse[errorResponse.getBytes(), HttpStatus.BAD_REQUEST] @AT@ 3629 @LENGTH@ 22
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 3629 @LENGTH@ 10
---------------INS SimpleName@@BAD_REQUEST @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 3640 @LENGTH@ 11
---INS VariableDeclarationStatement@@OAuth2Error oauth2Error=this.messageConverter.readInternal(OAuth2Error.class,response); @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3657 @LENGTH@ 90
------INS SimpleType@@OAuth2Error @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=this.messageConverter.readInternal(OAuth2Error.class,response); @AT@ 3657 @LENGTH@ 11
------INS VariableDeclarationFragment@@oauth2Error=this.messageConverter.readInternal(OAuth2Error.class,response) @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=this.messageConverter.readInternal(OAuth2Error.class,response); @AT@ 3669 @LENGTH@ 77
---------INS SimpleName@@oauth2Error @TO@ VariableDeclarationFragment@@oauth2Error=this.messageConverter.readInternal(OAuth2Error.class,response) @AT@ 3669 @LENGTH@ 11
---------INS MethodInvocation@@this.messageConverter.readInternal(OAuth2Error.class,response) @TO@ VariableDeclarationFragment@@oauth2Error=this.messageConverter.readInternal(OAuth2Error.class,response) @AT@ 3683 @LENGTH@ 63
------------INS FieldAccess@@this.messageConverter @TO@ MethodInvocation@@this.messageConverter.readInternal(OAuth2Error.class,response) @AT@ 3683 @LENGTH@ 21
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.messageConverter @AT@ 3683 @LENGTH@ 4
---------------INS SimpleName@@messageConverter @TO@ FieldAccess@@this.messageConverter @AT@ 3688 @LENGTH@ 16
------------INS SimpleName@@MethodName:readInternal:[OAuth2Error.class, response] @TO@ MethodInvocation@@this.messageConverter.readInternal(OAuth2Error.class,response) @AT@ 3705 @LENGTH@ 41
---------------INS TypeLiteral@@OAuth2Error.class @TO@ SimpleName@@MethodName:readInternal:[OAuth2Error.class, response] @AT@ 3718 @LENGTH@ 17
---------------INS SimpleName@@response @TO@ SimpleName@@MethodName:readInternal:[OAuth2Error.class, response] @AT@ 3737 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(oauth2Error.getErrorCode()).isEqualTo("unauthorized_client") @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3750 @LENGTH@ 72
------INS MethodInvocation@@assertThat(oauth2Error.getErrorCode()).isEqualTo("unauthorized_client") @TO@ ExpressionStatement@@MethodInvocation:assertThat(oauth2Error.getErrorCode()).isEqualTo("unauthorized_client") @AT@ 3750 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:assertThat:[oauth2Error.getErrorCode()] @TO@ MethodInvocation@@assertThat(oauth2Error.getErrorCode()).isEqualTo("unauthorized_client") @AT@ 3750 @LENGTH@ 38
------------INS MethodInvocation@@oauth2Error.getErrorCode() @TO@ MethodInvocation@@MethodName:assertThat:[oauth2Error.getErrorCode()] @AT@ 3761 @LENGTH@ 26
---------------INS SimpleName@@Name:oauth2Error @TO@ MethodInvocation@@oauth2Error.getErrorCode() @AT@ 3761 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@oauth2Error.getErrorCode() @AT@ 3773 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:["unauthorized_client"] @TO@ MethodInvocation@@assertThat(oauth2Error.getErrorCode()).isEqualTo("unauthorized_client") @AT@ 3789 @LENGTH@ 32
------------INS StringLiteral@@"unauthorized_client" @TO@ SimpleName@@MethodName:isEqualTo:["unauthorized_client"] @AT@ 3799 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(oauth2Error.getDescription()).isEqualTo("The client is not authorized") @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3825 @LENGTH@ 83
------INS MethodInvocation@@assertThat(oauth2Error.getDescription()).isEqualTo("The client is not authorized") @TO@ ExpressionStatement@@MethodInvocation:assertThat(oauth2Error.getDescription()).isEqualTo("The client is not authorized") @AT@ 3825 @LENGTH@ 82
---------INS MethodInvocation@@MethodName:assertThat:[oauth2Error.getDescription()] @TO@ MethodInvocation@@assertThat(oauth2Error.getDescription()).isEqualTo("The client is not authorized") @AT@ 3825 @LENGTH@ 40
------------INS MethodInvocation@@oauth2Error.getDescription() @TO@ MethodInvocation@@MethodName:assertThat:[oauth2Error.getDescription()] @AT@ 3836 @LENGTH@ 28
---------------INS SimpleName@@Name:oauth2Error @TO@ MethodInvocation@@oauth2Error.getDescription() @AT@ 3836 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getDescription:[] @TO@ MethodInvocation@@oauth2Error.getDescription() @AT@ 3848 @LENGTH@ 16
---------INS SimpleName@@MethodName:isEqualTo:["The client is not authorized"] @TO@ MethodInvocation@@assertThat(oauth2Error.getDescription()).isEqualTo("The client is not authorized") @AT@ 3866 @LENGTH@ 41
------------INS StringLiteral@@"The client is not authorized" @TO@ SimpleName@@MethodName:isEqualTo:["The client is not authorized"] @AT@ 3876 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertThat(oauth2Error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6749#section-5.2") @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenErrorResponseWithObjectThenReadOAuth2Error, Exception,  @AT@ 3911 @LENGTH@ 94
------INS MethodInvocation@@assertThat(oauth2Error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6749#section-5.2") @TO@ ExpressionStatement@@MethodInvocation:assertThat(oauth2Error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6749#section-5.2") @AT@ 3911 @LENGTH@ 93
---------INS MethodInvocation@@MethodName:assertThat:[oauth2Error.getUri()] @TO@ MethodInvocation@@assertThat(oauth2Error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6749#section-5.2") @AT@ 3911 @LENGTH@ 32
------------INS MethodInvocation@@oauth2Error.getUri() @TO@ MethodInvocation@@MethodName:assertThat:[oauth2Error.getUri()] @AT@ 3922 @LENGTH@ 20
---------------INS SimpleName@@Name:oauth2Error @TO@ MethodInvocation@@oauth2Error.getUri() @AT@ 3922 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getUri:[] @TO@ MethodInvocation@@oauth2Error.getUri() @AT@ 3934 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEqualTo:["https://tools.ietf.org/html/rfc6749#section-5.2"] @TO@ MethodInvocation@@assertThat(oauth2Error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6749#section-5.2") @AT@ 3944 @LENGTH@ 60
------------INS StringLiteral@@"https://tools.ietf.org/html/rfc6749#section-5.2" @TO@ SimpleName@@MethodName:isEqualTo:["https://tools.ietf.org/html/rfc6749#section-5.2"] @AT@ 3954 @LENGTH@ 49


UPD ForStatement@@for (int i=0; i < POOL; i++) {  final Integer idx=i;  executors.execute(new Runnable(){    public void run(){      try {        for (int j=0; j < SIZE / POOL; j++) {          producer.sendBody("jms:queue:inbox","Message " + idx.intValue() * j + j);        }      }  finally {        latch.countDown();      }    }  });} @TO@ for (int i=0; i < POOL; i++) {  final int idx=i;  executors.execute(new Runnable(){    public void run(){      try {        for (int j=0; j < SIZE / POOL; j++) {          producer.sendBody("jms:queue:inbox","Message " + idx * j + j);        }      }  finally {        latch.countDown();      }    }  });} @AT@ 2286 @LENGTH@ 510
---UPD VariableDeclarationStatement@@final Integer idx=i; @TO@ final int idx=i; @AT@ 2331 @LENGTH@ 22
------DEL SimpleType@@Integer @AT@ 2337 @LENGTH@ 7
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final Integer idx=i; @AT@ 2337 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:executors.execute(new Runnable(){
  public void run(){
    try {
      for (int j=0; j < SIZE / POOL; j++) {
        producer.sendBody("jms:queue:inbox","Message " + idx.intValue() * j + j);
      }
    }
  finally {
      latch.countDown();
    }
  }
}
) @TO@ MethodInvocation:executors.execute(new Runnable(){
  public void run(){
    try {
      for (int j=0; j < SIZE / POOL; j++) {
        producer.sendBody("jms:queue:inbox","Message " + idx * j + j);
      }
    }
  finally {
      latch.countDown();
    }
  }
}
) @AT@ 2366 @LENGTH@ 420
------UPD MethodInvocation@@executors.execute(new Runnable(){
  public void run(){
    try {
      for (int j=0; j < SIZE / POOL; j++) {
        producer.sendBody("jms:queue:inbox","Message " + idx.intValue() * j + j);
      }
    }
  finally {
      latch.countDown();
    }
  }
}
) @TO@ executors.execute(new Runnable(){
  public void run(){
    try {
      for (int j=0; j < SIZE / POOL; j++) {
        producer.sendBody("jms:queue:inbox","Message " + idx * j + j);
      }
    }
  finally {
      latch.countDown();
    }
  }
}
) @AT@ 2366 @LENGTH@ 419
---------UPD SimpleName@@MethodName:execute:[new Runnable(){
  public void run(){
    try {
      for (int j=0; j < SIZE / POOL; j++) {
        producer.sendBody("jms:queue:inbox","Message " + idx.intValue() * j + j);
      }
    }
  finally {
      latch.countDown();
    }
  }
}
] @TO@ MethodName:execute:[new Runnable(){
  public void run(){
    try {
      for (int j=0; j < SIZE / POOL; j++) {
        producer.sendBody("jms:queue:inbox","Message " + idx * j + j);
      }
    }
  finally {
      latch.countDown();
    }
  }
}
] @AT@ 2376 @LENGTH@ 409


UPD MethodDeclaration@@static, Saml2X509Credential, MethodName:signingCredential,  @TO@ public, static, Saml2X509Credential, MethodName:signingCredential,  @AT@ 1456 @LENGTH@ 141
---INS Modifier@@public @TO@ MethodDeclaration@@static, Saml2X509Credential, MethodName:signingCredential,  @AT@ 1463 @LENGTH@ 6


MOV FieldDeclaration@@private, final, Deque<Route>, [routes=new ArrayDeque<>(8)] @TO@ TypeDeclaration@@[public]DefaultUnitOfWork, [UnitOfWork, Service] @AT@ 2549 @LENGTH@ 56


UPD TypeDeclaration@@[public, abstract]SessionIdChangedEvent, ApplicationEvent @TO@ [public, abstract]SessionIdChangedEvent, AbstractSessionEvent @AT@ 727 @LENGTH@ 228
---UPD SimpleType@@ApplicationEvent @TO@ AbstractSessionEvent @AT@ 779 @LENGTH@ 16


UPD TypeDeclaration@@[public]SimpleBuilder, [Predicate, Expression, ExpressionResultTypeAware] @TO@ [public]SimpleBuilder, [Predicate, Expression, ExpressionResultTypeAware, GeneratedPropertyConfigurer] @AT@ 1515 @LENGTH@ 3961
---INS SimpleType@@GeneratedPropertyConfigurer @TO@ TypeDeclaration@@[public]SimpleBuilder, [Predicate, Expression, ExpressionResultTypeAware] @AT@ 1767 @LENGTH@ 27


UPD TypeDeclaration@@[public]OAuth2TokenValidator,  @TO@ [@FunctionalInterface, public]OAuth2TokenValidator,  @AT@ 911 @LENGTH@ 334
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]OAuth2TokenValidator,  @AT@ 911 @LENGTH@ 20


UPD TypeDeclaration@@[public]ReactiveJwtDecoderFactory,  @TO@ [@FunctionalInterface, public]ReactiveJwtDecoderFactory,  @AT@ 1053 @LENGTH@ 296
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveJwtDecoderFactory,  @AT@ 1053 @LENGTH@ 20


INS MethodDeclaration@@void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @TO@ TypeDeclaration@@[public]RouteContext, [RuntimeConfiguration, EndpointAware] @AT@ 7473 @LENGTH@ 49
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 7468 @LENGTH@ 4
---INS SimpleName@@MethodName:removeErrorHandlers @TO@ MethodDeclaration@@void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 7473 @LENGTH@ 19
---INS SingleVariableDeclaration@@ErrorHandlerFactory factory @TO@ MethodDeclaration@@void, MethodName:removeErrorHandlers, ErrorHandlerFactory factory,  @AT@ 7493 @LENGTH@ 27
------INS SimpleType@@ErrorHandlerFactory @TO@ SingleVariableDeclaration@@ErrorHandlerFactory factory @AT@ 7493 @LENGTH@ 19
------INS SimpleName@@factory @TO@ SingleVariableDeclaration@@ErrorHandlerFactory factory @AT@ 7513 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Number of bits must be greater than or equal to 8: " + numberOfBits) @TO@ ClassInstanceCreation:new IllegalArgumentException("Number of bits must be greater than 0: " + numberOfBits) @AT@ 12004 @LENGTH@ 105
---UPD ClassInstanceCreation@@IllegalArgumentException["Number of bits must be greater than or equal to 8: " + numberOfBits] @TO@ IllegalArgumentException["Number of bits must be greater than 0: " + numberOfBits] @AT@ 12010 @LENGTH@ 98
------UPD InfixExpression@@"Number of bits must be greater than or equal to 8: " + numberOfBits @TO@ "Number of bits must be greater than 0: " + numberOfBits @AT@ 12039 @LENGTH@ 68
---------UPD StringLiteral@@"Number of bits must be greater than or equal to 8: " @TO@ "Number of bits must be greater than 0: " @AT@ 12039 @LENGTH@ 53


UPD IfStatement@@if (path == null) {  path=new Path();  paths.add(path);} @TO@ if (path == null) {  path=new Path();} @AT@ 11764 @LENGTH@ 101
---UPD Block@@ThenBody:{  path=new Path();  paths.add(path);} @TO@ ThenBody:{  path=new Path();} @AT@ 11782 @LENGTH@ 83
------DEL ExpressionStatement@@MethodInvocation:paths.add(path) @AT@ 11835 @LENGTH@ 16
---------DEL MethodInvocation@@paths.add(path) @AT@ 11835 @LENGTH@ 15
------------DEL SimpleName@@Name:paths @AT@ 11835 @LENGTH@ 5
------------DEL SimpleName@@MethodName:add:[path] @AT@ 11841 @LENGTH@ 9
---------------DEL SimpleName@@path @AT@ 11845 @LENGTH@ 4


UPD MethodDeclaration@@private, PersistentPropertyPath<MongoPersistentProperty>, MethodName:getPath, String pathExpression, MongoPersistentProperty sourceProperty,  @TO@ private, PersistentPropertyPath<MongoPersistentProperty>, MethodName:getPath, String pathExpression, @Nullable MongoPersistentProperty sourceProperty,  @AT@ 32240 @LENGTH@ 1300
---UPD SingleVariableDeclaration@@MongoPersistentProperty sourceProperty @TO@ @Nullable MongoPersistentProperty sourceProperty @AT@ 32331 @LENGTH@ 38


UPD MethodDeclaration@@public, static, AWS2CamelS3InternalClient, MethodName:getAWSS3Client, AWS2S3Configuration configuration, int maxConnections,  @TO@ public, static, AWS2CamelS3InternalClient, MethodName:getAWSS3Client, AWS2S3Configuration configuration,  @AT@ 1616 @LENGTH@ 297
---DEL SingleVariableDeclaration@@int maxConnections @AT@ 1706 @LENGTH@ 18
------DEL PrimitiveType@@int @AT@ 1706 @LENGTH@ 3
------DEL SimpleName@@maxConnections @AT@ 1710 @LENGTH@ 14
---UPD ReturnStatement@@ConditionalExpression:configuration.isUseIAMCredentials() ? new AWS2S3ClientIAMOptimizedImpl(configuration,maxConnections) : new AWS2S3ClientStandardImpl(configuration,maxConnections) @TO@ ConditionalExpression:configuration.isUseIAMCredentials() ? new AWS2S3ClientIAMOptimizedImpl(configuration) : new AWS2S3ClientStandardImpl(configuration) @AT@ 1736 @LENGTH@ 171
------UPD ConditionalExpression@@configuration.isUseIAMCredentials() ? new AWS2S3ClientIAMOptimizedImpl(configuration,maxConnections) : new AWS2S3ClientStandardImpl(configuration,maxConnections) @TO@ configuration.isUseIAMCredentials() ? new AWS2S3ClientIAMOptimizedImpl(configuration) : new AWS2S3ClientStandardImpl(configuration) @AT@ 1743 @LENGTH@ 163
---------UPD ClassInstanceCreation@@AWS2S3ClientIAMOptimizedImpl[configuration, maxConnections] @TO@ AWS2S3ClientIAMOptimizedImpl[configuration] @AT@ 1781 @LENGTH@ 63
------------DEL SimpleName@@maxConnections @AT@ 1829 @LENGTH@ 14
---------UPD ClassInstanceCreation@@AWS2S3ClientStandardImpl[configuration, maxConnections] @TO@ AWS2S3ClientStandardImpl[configuration] @AT@ 1847 @LENGTH@ 59
------------DEL SimpleName@@maxConnections @AT@ 1891 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ MethodDeclaration@@public, void, MethodName:testCacheConsumers, Exception,  @AT@ 11195 @LENGTH@ 87
---INS MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11195 @LENGTH@ 86
------INS MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11195 @LENGTH@ 35
---------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 11210 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[1, TimeUnit.SECONDS] @AT@ 11213 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 11213 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 11222 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11195 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @TO@ MethodInvocation@@await().atMost(1,TimeUnit.SECONDS).until(() -> template.getCurrentCacheSize() == 500) @AT@ 11231 @LENGTH@ 50
---------INS LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @TO@ SimpleName@@MethodName:until:[() -> template.getCurrentCacheSize() == 500] @AT@ 11237 @LENGTH@ 43
------------INS InfixExpression@@template.getCurrentCacheSize() == 500 @TO@ LambdaExpression@@() -> template.getCurrentCacheSize() == 500 @AT@ 11243 @LENGTH@ 37
---------------INS MethodInvocation@@template.getCurrentCacheSize() @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 11243 @LENGTH@ 30
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 11243 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getCurrentCacheSize:[] @TO@ MethodInvocation@@template.getCurrentCacheSize() @AT@ 11252 @LENGTH@ 21
---------------INS Operator@@== @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 11273 @LENGTH@ 2
---------------INS NumberLiteral@@500 @TO@ InfixExpression@@template.getCurrentCacheSize() == 500 @AT@ 11277 @LENGTH@ 3


UPD MethodDeclaration@@private, synchronized, QueuedTask, MethodName:findForcedTask,  @TO@ private, QueuedTask, MethodName:findForcedTask,  @AT@ 14736 @LENGTH@ 645
---DEL Modifier@@synchronized @AT@ 14744 @LENGTH@ 12
---UPD VariableDeclarationStatement@@QueuedTask task=null; @TO@ QueuedTask _ret=null; @AT@ 14795 @LENGTH@ 23
------UPD VariableDeclarationFragment@@task=null @TO@ _ret=null @AT@ 14806 @LENGTH@ 11
---------UPD SimpleName@@task @TO@ _ret @AT@ 14806 @LENGTH@ 4
---INS VariableDeclarationStatement@@QueuedTask task; @TO@ MethodDeclaration@@private, synchronized, QueuedTask, MethodName:findForcedTask,  @AT@ 14814 @LENGTH@ 16
------INS SimpleType@@QueuedTask @TO@ VariableDeclarationStatement@@QueuedTask task; @AT@ 14814 @LENGTH@ 10
------INS VariableDeclarationFragment@@task @TO@ VariableDeclarationStatement@@QueuedTask task; @AT@ 14825 @LENGTH@ 4
---------INS SimpleName@@task @TO@ VariableDeclarationFragment@@task @AT@ 14825 @LENGTH@ 4
---UPD WhileStatement@@while (task == null && !taskQueue.isEmpty()) {  QueuedTask tmp=taskQueue.poll();  if (tmp.forceRun) {    task=tmp;  } else {    storage.add(tmp);  }} @TO@ while ((task=taskQueue.poll()) != null) {  if (task.forceRun) {    _ret=task;  } else {    storage.add(task);  }} @AT@ 14881 @LENGTH@ 231
------UPD InfixExpression@@task == null && !taskQueue.isEmpty() @TO@ (task=taskQueue.poll()) != null @AT@ 14888 @LENGTH@ 36
---------DEL InfixExpression@@task == null @AT@ 14888 @LENGTH@ 12
------------DEL SimpleName@@task @AT@ 14888 @LENGTH@ 4
------------DEL Operator@@== @AT@ 14892 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 14896 @LENGTH@ 4
---------INS ParenthesizedExpression@@(task=taskQueue.poll()) @TO@ InfixExpression@@task == null && !taskQueue.isEmpty() @AT@ 14900 @LENGTH@ 25
------------INS Assignment@@task=taskQueue.poll() @TO@ ParenthesizedExpression@@(task=taskQueue.poll()) @AT@ 14901 @LENGTH@ 23
---------------INS SimpleName@@task @TO@ Assignment@@task=taskQueue.poll() @AT@ 14901 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@task=taskQueue.poll() @AT@ 14905 @LENGTH@ 1
---------------INS MethodInvocation@@taskQueue.poll() @TO@ Assignment@@task=taskQueue.poll() @AT@ 14908 @LENGTH@ 16
------------------MOV SimpleName@@Name:taskQueue @TO@ MethodInvocation@@taskQueue.poll() @AT@ 14905 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@taskQueue.poll() @AT@ 14915 @LENGTH@ 9
---------DEL Operator@@&& @AT@ 14900 @LENGTH@ 2
---------DEL PrefixExpression@@!taskQueue.isEmpty() @AT@ 14904 @LENGTH@ 20
------------DEL Operator@@! @AT@ 14904 @LENGTH@ 1
------------DEL MethodInvocation@@taskQueue.isEmpty() @AT@ 14905 @LENGTH@ 19
---------INS Operator@@!= @TO@ InfixExpression@@task == null && !taskQueue.isEmpty() @AT@ 14925 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@task == null && !taskQueue.isEmpty() @AT@ 14929 @LENGTH@ 4
------UPD Block@@WhileBody:{  QueuedTask tmp=taskQueue.poll();  if (tmp.forceRun) {    task=tmp;  } else {    storage.add(tmp);  }} @TO@ WhileBody:{  if (task.forceRun) {    _ret=task;  } else {    storage.add(task);  }} @AT@ 14926 @LENGTH@ 186
---------DEL VariableDeclarationStatement@@QueuedTask tmp=taskQueue.poll(); @AT@ 14940 @LENGTH@ 34
------------DEL SimpleType@@QueuedTask @AT@ 14940 @LENGTH@ 10
------------DEL VariableDeclarationFragment@@tmp=taskQueue.poll() @AT@ 14951 @LENGTH@ 22
---------------DEL SimpleName@@tmp @AT@ 14951 @LENGTH@ 3
---------------DEL MethodInvocation@@taskQueue.poll() @AT@ 14957 @LENGTH@ 16
------------------DEL SimpleName@@Name:taskQueue @AT@ 14957 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:poll:[] @AT@ 14967 @LENGTH@ 6
---------UPD IfStatement@@if (tmp.forceRun) {  task=tmp;} else {  storage.add(tmp);} @TO@ if (task.forceRun) {  _ret=task;} else {  storage.add(task);} @AT@ 14987 @LENGTH@ 115
------------UPD QualifiedName@@tmp.forceRun @TO@ task.forceRun @AT@ 14990 @LENGTH@ 12
---------------UPD SimpleName@@tmp @TO@ task @AT@ 14990 @LENGTH@ 3
------------UPD Block@@ThenBody:{  task=tmp;} @TO@ ThenBody:{  _ret=task;} @AT@ 15004 @LENGTH@ 43
---------------UPD ExpressionStatement@@Assignment:task=tmp @TO@ Assignment:_ret=task @AT@ 15022 @LENGTH@ 11
------------------UPD Assignment@@task=tmp @TO@ _ret=task @AT@ 15022 @LENGTH@ 10
---------------------UPD SimpleName@@task @TO@ _ret @AT@ 15022 @LENGTH@ 4
---------------------UPD SimpleName@@tmp @TO@ task @AT@ 15029 @LENGTH@ 3
------------UPD Block@@ElseBody:{  storage.add(tmp);} @TO@ ElseBody:{  storage.add(task);} @AT@ 15053 @LENGTH@ 49
---------------UPD ExpressionStatement@@MethodInvocation:storage.add(tmp) @TO@ MethodInvocation:storage.add(task) @AT@ 15071 @LENGTH@ 17
------------------UPD MethodInvocation@@storage.add(tmp) @TO@ storage.add(task) @AT@ 15071 @LENGTH@ 16
---------------------UPD SimpleName@@MethodName:add:[tmp] @TO@ MethodName:add:[task] @AT@ 15079 @LENGTH@ 8
------------------------UPD SimpleName@@tmp @TO@ task @AT@ 15083 @LENGTH@ 3
---UPD ReturnStatement@@SimpleName:task @TO@ SimpleName:_ret @AT@ 15363 @LENGTH@ 12
------UPD SimpleName@@task @TO@ _ret @AT@ 15370 @LENGTH@ 4


INS MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @TO@ TypeDeclaration@@[public]EndpointProducerBuilder, [EndpointProducerResolver] @AT@ 1786 @LENGTH@ 82
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1781 @LENGTH@ 4
---INS SimpleName@@MethodName:doSetMultiValueProperties @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1786 @LENGTH@ 25
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1812 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 1812 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 1819 @LENGTH@ 4
---INS SingleVariableDeclaration@@String prefix @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1825 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String prefix @AT@ 1825 @LENGTH@ 6
------INS SimpleName@@prefix @TO@ SingleVariableDeclaration@@String prefix @AT@ 1832 @LENGTH@ 6
---INS SingleVariableDeclaration@@Map<String,Object> values @TO@ MethodDeclaration@@void, MethodName:doSetMultiValueProperties, String name, String prefix, Map<String,Object> values,  @AT@ 1840 @LENGTH@ 26
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> values @AT@ 1840 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1840 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1844 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1852 @LENGTH@ 6
------INS SimpleName@@values @TO@ SingleVariableDeclaration@@Map<String,Object> values @AT@ 1860 @LENGTH@ 6


INS FieldDeclaration@@protected, final, Neo4jQueryType, [queryType] @TO@ TypeDeclaration@@[abstract]Neo4jQuerySupport,  @AT@ 2252 @LENGTH@ 41
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, final, Neo4jQueryType, [queryType] @AT@ 2252 @LENGTH@ 9
---INS Modifier@@final @TO@ FieldDeclaration@@protected, final, Neo4jQueryType, [queryType] @AT@ 2262 @LENGTH@ 5
---INS SimpleType@@Neo4jQueryType @TO@ FieldDeclaration@@protected, final, Neo4jQueryType, [queryType] @AT@ 2268 @LENGTH@ 14
---INS VariableDeclarationFragment@@queryType @TO@ FieldDeclaration@@protected, final, Neo4jQueryType, [queryType] @AT@ 2283 @LENGTH@ 9
------INS SimpleName@@queryType @TO@ VariableDeclarationFragment@@queryType @AT@ 2283 @LENGTH@ 9


UPD ThrowStatement@@ClassInstanceCreation:new NoSuchObjectException("Partition with partition values " + (pvals != null ? Arrays.toString(pvals.toArray()) : "null") + " for table "+ tableName+ " in database "+ dbName+ "and for user "+ userName+ " and group names "+ (groupNames != null ? Arrays.toString(groupNames.toArray()) : "null")+ " is not found.") @TO@ ClassInstanceCreation:new NoSuchObjectException("Partition with partition values " + (pvals != null ? Arrays.toString(pvals.toArray()) : "null") + " for table "+ tableName+ " in database "+ dbName+ " and for user "+ userName+ " and group names "+ (groupNames != null ? Arrays.toString(groupNames.toArray()) : "null")+ " is not found.") @AT@ 50451 @LENGTH@ 383
---UPD ClassInstanceCreation@@NoSuchObjectException["Partition with partition values " + (pvals != null ? Arrays.toString(pvals.toArray()) : "null") + " for table "+ tableName+ " in database "+ dbName+ "and for user "+ userName+ " and group names "+ (groupNames != null ? Arrays.toString(groupNames.toArray()) : "null")+ " is not found."] @TO@ NoSuchObjectException["Partition with partition values " + (pvals != null ? Arrays.toString(pvals.toArray()) : "null") + " for table "+ tableName+ " in database "+ dbName+ " and for user "+ userName+ " and group names "+ (groupNames != null ? Arrays.toString(groupNames.toArray()) : "null")+ " is not found."] @AT@ 50457 @LENGTH@ 376
------UPD InfixExpression@@"Partition with partition values " + (pvals != null ? Arrays.toString(pvals.toArray()) : "null") + " for table "+ tableName+ " in database "+ dbName+ "and for user "+ userName+ " and group names "+ (groupNames != null ? Arrays.toString(groupNames.toArray()) : "null")+ " is not found." @TO@ "Partition with partition values " + (pvals != null ? Arrays.toString(pvals.toArray()) : "null") + " for table "+ tableName+ " in database "+ dbName+ " and for user "+ userName+ " and group names "+ (groupNames != null ? Arrays.toString(groupNames.toArray()) : "null")+ " is not found." @AT@ 50483 @LENGTH@ 349
---------UPD StringLiteral@@"and for user " @TO@ " and for user " @AT@ 50665 @LENGTH@ 15


INS FieldDeclaration@@String, [RELYING_PARTY_REGISTRATION_NOT_FOUND="relying_party_registration_not_found"] @TO@ TypeDeclaration@@[public]Saml2ErrorCodes,  @AT@ 3856 @LENGTH@ 85
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [RELYING_PARTY_REGISTRATION_NOT_FOUND="relying_party_registration_not_found"] @AT@ 3856 @LENGTH@ 6
---INS VariableDeclarationFragment@@RELYING_PARTY_REGISTRATION_NOT_FOUND="relying_party_registration_not_found" @TO@ FieldDeclaration@@String, [RELYING_PARTY_REGISTRATION_NOT_FOUND="relying_party_registration_not_found"] @AT@ 3863 @LENGTH@ 77
------INS SimpleName@@RELYING_PARTY_REGISTRATION_NOT_FOUND @TO@ VariableDeclarationFragment@@RELYING_PARTY_REGISTRATION_NOT_FOUND="relying_party_registration_not_found" @AT@ 3863 @LENGTH@ 36
------INS StringLiteral@@"relying_party_registration_not_found" @TO@ VariableDeclarationFragment@@RELYING_PARTY_REGISTRATION_NOT_FOUND="relying_party_registration_not_found" @AT@ 3902 @LENGTH@ 38


INS MethodDeclaration@@void, MethodName:gh200,  @TO@ TypeDeclaration@@[@Nested]Issues,  @AT@ 80477 @LENGTH@ 294
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:gh200,  @AT@ 80472 @LENGTH@ 4
---INS SimpleName@@MethodName:gh200 @TO@ MethodDeclaration@@void, MethodName:gh200,  @AT@ 80477 @LENGTH@ 5
---INS VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @TO@ MethodDeclaration@@void, MethodName:gh200,  @AT@ 80490 @LENGTH@ 41
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @AT@ 80490 @LENGTH@ 5
------INS SimpleType@@Node @TO@ VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @AT@ 80496 @LENGTH@ 4
------INS VariableDeclarationFragment@@r=node("Resume").named("r") @TO@ VariableDeclarationStatement@@final Node r=node("Resume").named("r"); @AT@ 80501 @LENGTH@ 29
---------INS SimpleName@@r @TO@ VariableDeclarationFragment@@r=node("Resume").named("r") @AT@ 80501 @LENGTH@ 1
---------INS MethodInvocation@@node("Resume").named("r") @TO@ VariableDeclarationFragment@@r=node("Resume").named("r") @AT@ 80505 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:node:["Resume"] @TO@ MethodInvocation@@node("Resume").named("r") @AT@ 80505 @LENGTH@ 14
---------------INS StringLiteral@@"Resume" @TO@ MethodInvocation@@MethodName:node:["Resume"] @AT@ 80510 @LENGTH@ 8
------------INS SimpleName@@MethodName:named:["r"] @TO@ MethodInvocation@@node("Resume").named("r") @AT@ 80520 @LENGTH@ 10
---------------INS StringLiteral@@"r" @TO@ SimpleName@@MethodName:named:["r"] @AT@ 80526 @LENGTH@ 3
---INS VariableDeclarationStatement@@Statement s=match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build(); @TO@ MethodDeclaration@@void, MethodName:gh200,  @AT@ 80536 @LENGTH@ 127
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@Statement s=match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build(); @AT@ 80536 @LENGTH@ 9
------INS VariableDeclarationFragment@@s=match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @TO@ VariableDeclarationStatement@@Statement s=match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build(); @AT@ 80546 @LENGTH@ 116
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @AT@ 80546 @LENGTH@ 1
---------INS MethodInvocation@@match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @TO@ VariableDeclarationFragment@@s=match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @AT@ 80550 @LENGTH@ 112
------------INS MethodInvocation@@MethodName:returningDistinct:[r.getRequiredSymbolicName()] @TO@ MethodInvocation@@match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @AT@ 80550 @LENGTH@ 99
---------------INS MethodInvocation@@r.getRequiredSymbolicName() @TO@ MethodInvocation@@MethodName:returningDistinct:[r.getRequiredSymbolicName()] @AT@ 80621 @LENGTH@ 27
------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.getRequiredSymbolicName() @AT@ 80621 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getRequiredSymbolicName:[] @TO@ MethodInvocation@@r.getRequiredSymbolicName() @AT@ 80623 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:with:[r.getRequiredSymbolicName()] @TO@ MethodInvocation@@match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @AT@ 80550 @LENGTH@ 47
---------------INS MethodInvocation@@r.getRequiredSymbolicName() @TO@ MethodInvocation@@MethodName:with:[r.getRequiredSymbolicName()] @AT@ 80569 @LENGTH@ 27
------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.getRequiredSymbolicName() @AT@ 80569 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getRequiredSymbolicName:[] @TO@ MethodInvocation@@r.getRequiredSymbolicName() @AT@ 80571 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:match:[r] @TO@ MethodInvocation@@match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @AT@ 80550 @LENGTH@ 8
---------------INS SimpleName@@r @TO@ MethodInvocation@@MethodName:match:[r] @AT@ 80556 @LENGTH@ 1
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@match(r).with(r.getRequiredSymbolicName()).returningDistinct(r.getRequiredSymbolicName()).build() @AT@ 80655 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`) WITH r RETURN DISTINCT r") @TO@ MethodDeclaration@@void, MethodName:gh200,  @AT@ 80668 @LENGTH@ 99
------INS MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`) WITH r RETURN DISTINCT r") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`) WITH r RETURN DISTINCT r") @AT@ 80668 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(s)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`) WITH r RETURN DISTINCT r") @AT@ 80668 @LENGTH@ 36
------------INS MethodInvocation@@cypherRenderer.render(s) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(s)] @AT@ 80679 @LENGTH@ 24
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(s) @AT@ 80679 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[s] @TO@ MethodInvocation@@cypherRenderer.render(s) @AT@ 80694 @LENGTH@ 9
------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:render:[s] @AT@ 80701 @LENGTH@ 1
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (r:`Resume`) WITH r RETURN DISTINCT r"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(s)).isEqualTo("MATCH (r:`Resume`) WITH r RETURN DISTINCT r") @AT@ 80710 @LENGTH@ 56
------------INS StringLiteral@@"MATCH (r:`Resume`) WITH r RETURN DISTINCT r" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (r:`Resume`) WITH r RETURN DISTINCT r"] @AT@ 80720 @LENGTH@ 45


UPD ExpressionStatement@@MethodInvocation:this.authorizationRequest.attributes(Collections.emptyMap()) @TO@ MethodInvocation:this.authorizationRequest.attributes(Map::clear) @AT@ 4227 @LENGTH@ 61
---UPD MethodInvocation@@this.authorizationRequest.attributes(Collections.emptyMap()) @TO@ this.authorizationRequest.attributes(Map::clear) @AT@ 4227 @LENGTH@ 60
------UPD SimpleName@@MethodName:attributes:[Collections.emptyMap()] @TO@ MethodName:attributes:[Map::clear] @AT@ 4253 @LENGTH@ 34
---------DEL MethodInvocation@@Collections.emptyMap() @AT@ 4264 @LENGTH@ 22
------------DEL SimpleName@@Name:Collections @AT@ 4264 @LENGTH@ 11
------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 4276 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:nullCharSequencec, Exception,  @TO@ public, void, MethodName:nullCharSequence, Exception,  @AT@ 4291 @LENGTH@ 207
---UPD SimpleName@@MethodName:nullCharSequencec @TO@ MethodName:nullCharSequence @AT@ 4303 @LENGTH@ 17


UPD IfStatement@@if (this.lineTokenizer != null && this.fieldSetMapper != null) {  lineMapper.setLineTokenizer(this.lineTokenizer);} else if (this.fixedLengthBuilder != null) {  lineMapper.setLineTokenizer(this.fixedLengthBuilder.build());} else if (this.delimitedBuilder != null) {  lineMapper.setLineTokenizer(this.delimitedBuilder.build());} else {  throw new IllegalStateException("No LineTokenizer implementation was provided.");} @TO@ if (this.lineTokenizer != null) {  lineMapper.setLineTokenizer(this.lineTokenizer);} else if (this.fixedLengthBuilder != null) {  lineMapper.setLineTokenizer(this.fixedLengthBuilder.build());} else if (this.delimitedBuilder != null) {  lineMapper.setLineTokenizer(this.delimitedBuilder.build());} else {  throw new IllegalStateException("No LineTokenizer implementation was provided.");} @AT@ 15275 @LENGTH@ 452
---DEL InfixExpression@@this.lineTokenizer != null && this.fieldSetMapper != null @AT@ 15278 @LENGTH@ 57
------DEL Operator@@&& @AT@ 15304 @LENGTH@ 2
------DEL InfixExpression@@this.fieldSetMapper != null @AT@ 15308 @LENGTH@ 27
---------DEL FieldAccess@@this.fieldSetMapper @AT@ 15308 @LENGTH@ 19
------------DEL ThisExpression@@this @AT@ 15308 @LENGTH@ 4
------------DEL SimpleName@@fieldSetMapper @AT@ 15313 @LENGTH@ 14
---------DEL Operator@@!= @AT@ 15327 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 15331 @LENGTH@ 4
---MOV InfixExpression@@this.lineTokenizer != null @TO@ IfStatement@@if (this.lineTokenizer != null && this.fieldSetMapper != null) {  lineMapper.setLineTokenizer(this.lineTokenizer);} else if (this.fixedLengthBuilder != null) {  lineMapper.setLineTokenizer(this.fixedLengthBuilder.build());} else if (this.delimitedBuilder != null) {  lineMapper.setLineTokenizer(this.delimitedBuilder.build());} else {  throw new IllegalStateException("No LineTokenizer implementation was provided.");} @AT@ 15278 @LENGTH@ 26


UPD IfStatement@@if (recipient != null) {  ExtendedCamelContext ecc=(ExtendedCamelContext)exchange.getContext();  String uri;  if (recipient instanceof String) {    uri=(String)recipient;  } else {    uri=ecc.getTypeConverter().mandatoryConvertTo(String.class,exchange,recipient);  }  return ecc.normalizeUri(uri);} @TO@ if (recipient != null) {  ExtendedCamelContext ecc=(ExtendedCamelContext)exchange.getContext();  String uri;  if (recipient instanceof String) {    uri=(String)recipient;  } else {    uri=ecc.getTypeConverter().mandatoryConvertTo(String.class,exchange,recipient);  }  int colon=uri.indexOf(':');  if (colon == -1 || colon == uri.length() - 1) {    throw new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path");  }  return ecc.normalizeUri(uri);} @AT@ 10423 @LENGTH@ 517
---UPD Block@@ThenBody:{  ExtendedCamelContext ecc=(ExtendedCamelContext)exchange.getContext();  String uri;  if (recipient instanceof String) {    uri=(String)recipient;  } else {    uri=ecc.getTypeConverter().mandatoryConvertTo(String.class,exchange,recipient);  }  return ecc.normalizeUri(uri);} @TO@ ThenBody:{  ExtendedCamelContext ecc=(ExtendedCamelContext)exchange.getContext();  String uri;  if (recipient instanceof String) {    uri=(String)recipient;  } else {    uri=ecc.getTypeConverter().mandatoryConvertTo(String.class,exchange,recipient);  }  int colon=uri.indexOf(':');  if (colon == -1 || colon == uri.length() - 1) {    throw new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path");  }  return ecc.normalizeUri(uri);} @AT@ 10446 @LENGTH@ 494
------INS VariableDeclarationStatement@@int colon=uri.indexOf(':'); @TO@ Block@@ThenBody:{  ExtendedCamelContext ecc=(ExtendedCamelContext)exchange.getContext();  String uri;  if (recipient instanceof String) {    uri=(String)recipient;  } else {    uri=ecc.getTypeConverter().mandatoryConvertTo(String.class,exchange,recipient);  }  return ecc.normalizeUri(uri);} @AT@ 10948 @LENGTH@ 29
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int colon=uri.indexOf(':'); @AT@ 10948 @LENGTH@ 3
---------INS VariableDeclarationFragment@@colon=uri.indexOf(':') @TO@ VariableDeclarationStatement@@int colon=uri.indexOf(':'); @AT@ 10952 @LENGTH@ 24
------------INS SimpleName@@colon @TO@ VariableDeclarationFragment@@colon=uri.indexOf(':') @AT@ 10952 @LENGTH@ 5
------------INS MethodInvocation@@uri.indexOf(':') @TO@ VariableDeclarationFragment@@colon=uri.indexOf(':') @AT@ 10960 @LENGTH@ 16
---------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.indexOf(':') @AT@ 10960 @LENGTH@ 3
---------------INS SimpleName@@MethodName:indexOf:[':'] @TO@ MethodInvocation@@uri.indexOf(':') @AT@ 10964 @LENGTH@ 12
------------------INS CharacterLiteral@@':' @TO@ SimpleName@@MethodName:indexOf:[':'] @AT@ 10972 @LENGTH@ 3
------INS IfStatement@@if (colon == -1 || colon == uri.length() - 1) {  throw new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path");} @TO@ Block@@ThenBody:{  ExtendedCamelContext ecc=(ExtendedCamelContext)exchange.getContext();  String uri;  if (recipient instanceof String) {    uri=(String)recipient;  } else {    uri=ecc.getTypeConverter().mandatoryConvertTo(String.class,exchange,recipient);  }  return ecc.normalizeUri(uri);} @AT@ 10990 @LENGTH@ 163
---------INS InfixExpression@@colon == -1 || colon == uri.length() - 1 @TO@ IfStatement@@if (colon == -1 || colon == uri.length() - 1) {  throw new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path");} @AT@ 10994 @LENGTH@ 40
------------INS InfixExpression@@colon == -1 @TO@ InfixExpression@@colon == -1 || colon == uri.length() - 1 @AT@ 10994 @LENGTH@ 11
---------------INS SimpleName@@colon @TO@ InfixExpression@@colon == -1 @AT@ 10994 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@colon == -1 @AT@ 10999 @LENGTH@ 2
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@colon == -1 @AT@ 11003 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 11003 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 11004 @LENGTH@ 1
------------INS Operator@@|| @TO@ InfixExpression@@colon == -1 || colon == uri.length() - 1 @AT@ 11005 @LENGTH@ 2
------------INS InfixExpression@@colon == uri.length() - 1 @TO@ InfixExpression@@colon == -1 || colon == uri.length() - 1 @AT@ 11009 @LENGTH@ 25
---------------INS SimpleName@@colon @TO@ InfixExpression@@colon == uri.length() - 1 @AT@ 11009 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@colon == uri.length() - 1 @AT@ 11014 @LENGTH@ 2
---------------INS InfixExpression@@uri.length() - 1 @TO@ InfixExpression@@colon == uri.length() - 1 @AT@ 11018 @LENGTH@ 16
------------------INS MethodInvocation@@uri.length() @TO@ InfixExpression@@uri.length() - 1 @AT@ 11018 @LENGTH@ 12
---------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.length() @AT@ 11018 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@uri.length() @AT@ 11022 @LENGTH@ 8
------------------INS Operator@@- @TO@ InfixExpression@@uri.length() - 1 @AT@ 11030 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@uri.length() - 1 @AT@ 11033 @LENGTH@ 1
---------INS Block@@ThenBody:{  throw new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path");} @TO@ IfStatement@@if (colon == -1 || colon == uri.length() - 1) {  throw new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path");} @AT@ 11036 @LENGTH@ 117
------------INS ThrowStatement@@ClassInstanceCreation:new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path") @TO@ Block@@ThenBody:{  throw new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path");} @AT@ 11054 @LENGTH@ 85
---------------INS ClassInstanceCreation@@ResolveEndpointFailedException[uri, "Endpoint should include scheme:path"] @TO@ ThrowStatement@@ClassInstanceCreation:new ResolveEndpointFailedException(uri,"Endpoint should include scheme:path") @AT@ 11060 @LENGTH@ 78
------------------INS New@@new @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "Endpoint should include scheme:path"] @AT@ 11060 @LENGTH@ 3
------------------INS SimpleType@@ResolveEndpointFailedException @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "Endpoint should include scheme:path"] @AT@ 11064 @LENGTH@ 30
------------------INS SimpleName@@uri @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "Endpoint should include scheme:path"] @AT@ 11095 @LENGTH@ 3
------------------INS StringLiteral@@"Endpoint should include scheme:path" @TO@ ClassInstanceCreation@@ResolveEndpointFailedException[uri, "Endpoint should include scheme:path"] @AT@ 11100 @LENGTH@ 37


UPD TryStatement@@try (final BoundedReader mr=new BoundedReader(sr,3)){  final char[] cbuf=new char[4];  for (int i=0; i < cbuf.length; i++) {    cbuf[i]='X';  }  final int read=mr.read(cbuf,0,4);  assertEquals(3,read);  assertEquals('0',cbuf[0]);  assertEquals('1',cbuf[1]);  assertEquals('2',cbuf[2]);  assertEquals('X',cbuf[3]);}  @TO@ try (final BoundedReader mr=new BoundedReader(sr,3)){  final char[] cbuf=new char[4];  Arrays.fill(cbuf,'X');  final int read=mr.read(cbuf,0,4);  assertEquals(3,read);  assertEquals('0',cbuf[0]);  assertEquals('1',cbuf[1]);  assertEquals('2',cbuf[2]);  assertEquals('X',cbuf[3]);}  @AT@ 2362 @LENGTH@ 454
---DEL ForStatement@@for (int i=0; i < cbuf.length; i++) {  cbuf[i]='X';} @AT@ 2477 @LENGTH@ 84
------DEL VariableDeclarationExpression@@int i=0 @AT@ 2482 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 2482 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 2486 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 2486 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 2490 @LENGTH@ 1
------DEL InfixExpression@@i < cbuf.length @AT@ 2493 @LENGTH@ 15
---------DEL SimpleName@@i @AT@ 2493 @LENGTH@ 1
---------DEL Operator@@< @AT@ 2494 @LENGTH@ 1
---------DEL QualifiedName@@cbuf.length @AT@ 2497 @LENGTH@ 11
------------DEL SimpleName@@cbuf @AT@ 2497 @LENGTH@ 4
------------DEL SimpleName@@length @AT@ 2502 @LENGTH@ 6
------DEL PostfixExpression@@i++ @AT@ 2510 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 2510 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 2512 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:cbuf[i]='X' @AT@ 2533 @LENGTH@ 14
---------DEL Assignment@@cbuf[i]='X' @AT@ 2533 @LENGTH@ 13
------------DEL ArrayAccess@@cbuf[i] @AT@ 2533 @LENGTH@ 7
---------------DEL SimpleName@@cbuf @AT@ 2533 @LENGTH@ 4
---------------DEL SimpleName@@i @AT@ 2538 @LENGTH@ 1
------------DEL Operator@@= @AT@ 2540 @LENGTH@ 1
------------DEL CharacterLiteral@@'X' @AT@ 2543 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:Arrays.fill(cbuf,'X') @TO@ TryStatement@@try (final BoundedReader mr=new BoundedReader(sr,3)){  final char[] cbuf=new char[4];  for (int i=0; i < cbuf.length; i++) {    cbuf[i]='X';  }  final int read=mr.read(cbuf,0,4);  assertEquals(3,read);  assertEquals('0',cbuf[0]);  assertEquals('1',cbuf[1]);  assertEquals('2',cbuf[2]);  assertEquals('X',cbuf[3]);}  @AT@ 2502 @LENGTH@ 23
------INS MethodInvocation@@Arrays.fill(cbuf,'X') @TO@ ExpressionStatement@@MethodInvocation:Arrays.fill(cbuf,'X') @AT@ 2502 @LENGTH@ 22
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.fill(cbuf,'X') @AT@ 2502 @LENGTH@ 6
---------INS SimpleName@@MethodName:fill:[cbuf, 'X'] @TO@ MethodInvocation@@Arrays.fill(cbuf,'X') @AT@ 2509 @LENGTH@ 15
------------INS SimpleName@@cbuf @TO@ SimpleName@@MethodName:fill:[cbuf, 'X'] @AT@ 2514 @LENGTH@ 4
------------INS CharacterLiteral@@'X' @TO@ SimpleName@@MethodName:fill:[cbuf, 'X'] @AT@ 2520 @LENGTH@ 3


UPD VariableDeclarationStatement@@OAuth2AuthorizationRequest expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(null).attributes(null).build(); @TO@ OAuth2AuthorizationRequest expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build(); @AT@ 5062 @LENGTH@ 207
---UPD VariableDeclarationFragment@@expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(null).attributes(null).build() @TO@ expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @AT@ 5089 @LENGTH@ 179
------UPD MethodInvocation@@this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(null).attributes(null).build() @TO@ this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @AT@ 5124 @LENGTH@ 144
---------UPD MethodInvocation@@MethodName:attributes:[null] @TO@ MethodName:attributes:[Collections.emptyMap()] @AT@ 5124 @LENGTH@ 129
------------DEL NullLiteral@@null @AT@ 5248 @LENGTH@ 4
------------INS MethodInvocation@@Collections.emptyMap() @TO@ MethodInvocation@@MethodName:attributes:[null] @AT@ 5332 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 5332 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 5344 @LENGTH@ 10
---------UPD MethodInvocation@@MethodName:additionalParameters:[null] @TO@ MethodName:additionalParameters:[Collections.emptyMap()] @AT@ 5124 @LENGTH@ 105
------------DEL NullLiteral@@null @AT@ 5224 @LENGTH@ 4
------------INS MethodInvocation@@Collections.emptyMap() @TO@ MethodInvocation@@MethodName:additionalParameters:[null] @AT@ 5290 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 5290 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 5302 @LENGTH@ 10


UPD VariableDeclarationStatement@@FlatFileItemReader<Foo> reader=new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1,2,3\n4,5,6")).delimited().names("first","second","third").targetType(Foo.class).build(); @TO@ FlatFileItemReader<Foo> reader=new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1,2,3\n4,5,6\n#this is a default comment")).delimited().names("first","second","third").targetType(Foo.class).build(); @AT@ 9412 @LENGTH@ 232
---UPD VariableDeclarationFragment@@reader=new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1,2,3\n4,5,6")).delimited().names("first","second","third").targetType(Foo.class).build() @TO@ reader=new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1,2,3\n4,5,6\n#this is a default comment")).delimited().names("first","second","third").targetType(Foo.class).build() @AT@ 9436 @LENGTH@ 207
------UPD MethodInvocation@@new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1,2,3\n4,5,6")).delimited().names("first","second","third").targetType(Foo.class).build() @TO@ new FlatFileItemReaderBuilder<Foo>().name("fooReader").resource(getResource("1,2,3\n4,5,6\n#this is a default comment")).delimited().names("first","second","third").targetType(Foo.class).build() @AT@ 9445 @LENGTH@ 198
---------UPD MethodInvocation@@MethodName:resource:[getResource("1,2,3\n4,5,6")] @TO@ MethodName:resource:[getResource("1,2,3\n4,5,6\n#this is a default comment")] @AT@ 9445 @LENGTH@ 102
------------UPD MethodInvocation@@getResource("1,2,3\n4,5,6") @TO@ getResource("1,2,3\n4,5,6\n#this is a default comment") @AT@ 9519 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:getResource:["1,2,3\n4,5,6"] @TO@ MethodName:getResource:["1,2,3\n4,5,6\n#this is a default comment"] @AT@ 9519 @LENGTH@ 27
------------------UPD StringLiteral@@"1,2,3\n4,5,6" @TO@ "1,2,3\n4,5,6\n#this is a default comment" @AT@ 9531 @LENGTH@ 14


UPD CatchClause@@catch (Exception ex) {  assertTrue("Expect FailedToCreateRouteException",ex instanceof FailedToCreateRouteException);  assertTrue("Get a wrong reason",ex.getCause() instanceof IllegalArgumentException);} @TO@ catch (Exception ex) {  assertTrue("Expect FailedToCreateRouteException",ex instanceof FailedToCreateRouteException);} @AT@ 2776 @LENGTH@ 236
---DEL ExpressionStatement@@MethodInvocation:assertTrue("Get a wrong reason",ex.getCause() instanceof IllegalArgumentException) @AT@ 2918 @LENGTH@ 84
------DEL MethodInvocation@@assertTrue("Get a wrong reason",ex.getCause() instanceof IllegalArgumentException) @AT@ 2918 @LENGTH@ 83
---------DEL SimpleName@@MethodName:assertTrue:["Get a wrong reason", ex.getCause() instanceof IllegalArgumentException] @AT@ 2918 @LENGTH@ 83
------------DEL StringLiteral@@"Get a wrong reason" @AT@ 2929 @LENGTH@ 20
------------DEL InstanceofExpression@@ex.getCause() instanceof IllegalArgumentException @AT@ 2951 @LENGTH@ 49
---------------DEL MethodInvocation@@ex.getCause() @AT@ 2951 @LENGTH@ 13
------------------DEL SimpleName@@Name:ex @AT@ 2951 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:getCause:[] @AT@ 2954 @LENGTH@ 10
---------------DEL Instanceof@@instanceof @AT@ 2965 @LENGTH@ 10
---------------DEL SimpleType@@IllegalArgumentException @AT@ 2976 @LENGTH@ 24


UPD Block@@FinallyBody:{  final HttpClient httpClient=getConfiguration().getHttpClient();  if (httpClient != null && getComponent().getConfig().getHttpClient() != httpClient) {    final String endpointUri=getEndpointUri();    LOG.debug("Stopping http client for {} ...",endpointUri);    httpClient.stop();    LOG.debug("Stopped http client for {}",endpointUri);  }} @TO@ FinallyBody:{  HttpClient httpClient=getConfiguration().getHttpClient();  if (httpClient == null) {    httpClient=getComponent().getHttpClient();  }  if (httpClient != null && getComponent().getHttpClient() != httpClient) {    final String endpointUri=getEndpointUri();    LOG.debug("Stopping http client for {} ...",endpointUri);    httpClient.stop();    LOG.debug("Stopped http client for {}",endpointUri);  }} @AT@ 6156 @LENGTH@ 544
---UPD VariableDeclarationStatement@@final HttpClient httpClient=getConfiguration().getHttpClient(); @TO@ HttpClient httpClient=getConfiguration().getHttpClient(); @AT@ 6272 @LENGTH@ 65
------DEL Modifier@@final @AT@ 6272 @LENGTH@ 5
---UPD IfStatement@@if (httpClient != null && getComponent().getConfig().getHttpClient() != httpClient) {  final String endpointUri=getEndpointUri();  LOG.debug("Stopping http client for {} ...",endpointUri);  httpClient.stop();  LOG.debug("Stopped http client for {}",endpointUri);} @TO@ if (httpClient != null && getComponent().getHttpClient() != httpClient) {  final String endpointUri=getEndpointUri();  LOG.debug("Stopping http client for {} ...",endpointUri);  httpClient.stop();  LOG.debug("Stopped http client for {}",endpointUri);} @AT@ 6350 @LENGTH@ 340
------UPD InfixExpression@@httpClient != null && getComponent().getConfig().getHttpClient() != httpClient @TO@ httpClient != null && getComponent().getHttpClient() != httpClient @AT@ 6354 @LENGTH@ 78
---------UPD InfixExpression@@getComponent().getConfig().getHttpClient() != httpClient @TO@ getComponent().getHttpClient() != httpClient @AT@ 6376 @LENGTH@ 56
------------UPD MethodInvocation@@getComponent().getConfig().getHttpClient() @TO@ getComponent().getHttpClient() @AT@ 6376 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getConfig:[] @AT@ 6376 @LENGTH@ 26
---INS IfStatement@@if (httpClient == null) {  httpClient=getComponent().getHttpClient();} @TO@ Block@@FinallyBody:{  final HttpClient httpClient=getConfiguration().getHttpClient();  if (httpClient != null && getComponent().getConfig().getHttpClient() != httpClient) {    final String endpointUri=getEndpointUri();    LOG.debug("Stopping http client for {} ...",endpointUri);    httpClient.stop();    LOG.debug("Stopped http client for {}",endpointUri);  }} @AT@ 6409 @LENGTH@ 100
------INS InfixExpression@@httpClient == null @TO@ IfStatement@@if (httpClient == null) {  httpClient=getComponent().getHttpClient();} @AT@ 6413 @LENGTH@ 18
---------INS SimpleName@@httpClient @TO@ InfixExpression@@httpClient == null @AT@ 6413 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@httpClient == null @AT@ 6423 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@httpClient == null @AT@ 6427 @LENGTH@ 4
------INS Block@@ThenBody:{  httpClient=getComponent().getHttpClient();} @TO@ IfStatement@@if (httpClient == null) {  httpClient=getComponent().getHttpClient();} @AT@ 6433 @LENGTH@ 76
---------INS ExpressionStatement@@Assignment:httpClient=getComponent().getHttpClient() @TO@ Block@@ThenBody:{  httpClient=getComponent().getHttpClient();} @AT@ 6451 @LENGTH@ 44
------------INS Assignment@@httpClient=getComponent().getHttpClient() @TO@ ExpressionStatement@@Assignment:httpClient=getComponent().getHttpClient() @AT@ 6451 @LENGTH@ 43
---------------INS SimpleName@@httpClient @TO@ Assignment@@httpClient=getComponent().getHttpClient() @AT@ 6451 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@httpClient=getComponent().getHttpClient() @AT@ 6461 @LENGTH@ 1
---------------INS MethodInvocation@@getComponent().getHttpClient() @TO@ Assignment@@httpClient=getComponent().getHttpClient() @AT@ 6464 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:getComponent:[] @TO@ MethodInvocation@@getComponent().getHttpClient() @AT@ 6464 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getHttpClient:[] @TO@ MethodInvocation@@getComponent().getHttpClient() @AT@ 6479 @LENGTH@ 15


UPD LambdaExpression@@() -> {
  RequestEntity<Void> request=RequestEntity.get(uri).build();
  Map<String,Object> configuration=rest.exchange(request,typeReference).getBody();
  OIDCProviderMetadata metadata=parse(configuration,OIDCProviderMetadata::parse);
  return withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());
}
 @TO@ () -> {
  RequestEntity<Void> request=RequestEntity.get(uri).build();
  Map<String,Object> configuration=rest.exchange(request,typeReference).getBody();
  OIDCProviderMetadata metadata=parse(configuration,OIDCProviderMetadata::parse);
  ClientRegistration.Builder builder=withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString());
  if (metadata.getUserInfoEndpointURI() != null) {
    builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());
  }
  return builder;
}
 @AT@ 6315 @LENGTH@ 447
---UPD ReturnStatement@@MethodInvocation:withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @TO@ SimpleName:builder @AT@ 6565 @LENGTH@ 193
------UPD MethodInvocation@@withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @TO@ builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @AT@ 6572 @LENGTH@ 185
------INS SimpleName@@builder @TO@ ReturnStatement@@MethodInvocation:withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @AT@ 6863 @LENGTH@ 7
---INS VariableDeclarationStatement@@ClientRegistration.Builder builder=withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()); @TO@ LambdaExpression@@() -> {
  RequestEntity<Void> request=RequestEntity.get(uri).build();
  Map<String,Object> configuration=rest.exchange(request,typeReference).getBody();
  OIDCProviderMetadata metadata=parse(configuration,OIDCProviderMetadata::parse);
  return withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());
}
 @AT@ 6565 @LENGTH@ 154
------INS SimpleType@@ClientRegistration.Builder @TO@ VariableDeclarationStatement@@ClientRegistration.Builder builder=withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()); @AT@ 6565 @LENGTH@ 26
------INS VariableDeclarationFragment@@builder=withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()) @TO@ VariableDeclarationStatement@@ClientRegistration.Builder builder=withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()); @AT@ 6592 @LENGTH@ 126
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()) @AT@ 6592 @LENGTH@ 7
---------INS MethodInvocation@@withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()) @TO@ VariableDeclarationFragment@@builder=withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()) @AT@ 6602 @LENGTH@ 116
------------MOV MethodInvocation@@MethodName:withProviderConfiguration:[metadata, issuer.toASCIIString()] @TO@ MethodInvocation@@withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()) @AT@ 6572 @LENGTH@ 59
------------INS SimpleName@@MethodName:jwkSetUri:[metadata.getJWKSetURI().toASCIIString()] @TO@ MethodInvocation@@withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()) @AT@ 6668 @LENGTH@ 50
---------------INS MethodInvocation@@metadata.getJWKSetURI().toASCIIString() @TO@ SimpleName@@MethodName:jwkSetUri:[metadata.getJWKSetURI().toASCIIString()] @AT@ 6678 @LENGTH@ 39
------------------INS MethodInvocation@@MethodName:getJWKSetURI:[] @TO@ MethodInvocation@@metadata.getJWKSetURI().toASCIIString() @AT@ 6678 @LENGTH@ 23
------------------INS SimpleName@@Name:metadata @TO@ MethodInvocation@@metadata.getJWKSetURI().toASCIIString() @AT@ 6678 @LENGTH@ 8
------------------INS SimpleName@@MethodName:toASCIIString:[] @TO@ MethodInvocation@@metadata.getJWKSetURI().toASCIIString() @AT@ 6702 @LENGTH@ 15
---INS IfStatement@@if (metadata.getUserInfoEndpointURI() != null) {  builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());} @TO@ LambdaExpression@@() -> {
  RequestEntity<Void> request=RequestEntity.get(uri).build();
  Map<String,Object> configuration=rest.exchange(request,typeReference).getBody();
  OIDCProviderMetadata metadata=parse(configuration,OIDCProviderMetadata::parse);
  return withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());
}
 @AT@ 6723 @LENGTH@ 129
------INS InfixExpression@@metadata.getUserInfoEndpointURI() != null @TO@ IfStatement@@if (metadata.getUserInfoEndpointURI() != null) {  builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());} @AT@ 6727 @LENGTH@ 41
---------INS MethodInvocation@@metadata.getUserInfoEndpointURI() @TO@ InfixExpression@@metadata.getUserInfoEndpointURI() != null @AT@ 6727 @LENGTH@ 33
------------INS SimpleName@@Name:metadata @TO@ MethodInvocation@@metadata.getUserInfoEndpointURI() @AT@ 6727 @LENGTH@ 8
------------INS SimpleName@@MethodName:getUserInfoEndpointURI:[] @TO@ MethodInvocation@@metadata.getUserInfoEndpointURI() @AT@ 6736 @LENGTH@ 24
---------INS Operator@@!= @TO@ InfixExpression@@metadata.getUserInfoEndpointURI() != null @AT@ 6760 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@metadata.getUserInfoEndpointURI() != null @AT@ 6764 @LENGTH@ 4
------INS Block@@ThenBody:{  builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());} @TO@ IfStatement@@if (metadata.getUserInfoEndpointURI() != null) {  builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());} @AT@ 6770 @LENGTH@ 82
---------INS ExpressionStatement@@MethodInvocation:builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @TO@ Block@@ThenBody:{  builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString());} @AT@ 6776 @LENGTH@ 71
------------MOV MethodInvocation@@withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @TO@ ExpressionStatement@@MethodInvocation:builder.userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @AT@ 6572 @LENGTH@ 185
---------------DEL MethodInvocation@@MethodName:jwkSetUri:[metadata.getJWKSetURI().toASCIIString()] @AT@ 6572 @LENGTH@ 116
------------------DEL MethodInvocation@@metadata.getJWKSetURI().toASCIIString() @AT@ 6648 @LENGTH@ 39
---------------------DEL MethodInvocation@@MethodName:getJWKSetURI:[] @AT@ 6648 @LENGTH@ 23
---------------------DEL SimpleName@@MethodName:toASCIIString:[] @AT@ 6672 @LENGTH@ 15
---------------MOV SimpleName@@Name:metadata @TO@ MethodInvocation@@withProviderConfiguration(metadata,issuer.toASCIIString()).jwkSetUri(metadata.getJWKSetURI().toASCIIString()).userInfoUri(metadata.getUserInfoEndpointURI().toASCIIString()) @AT@ 6648 @LENGTH@ 8


UPD TryStatement@@try {  writeManifest(analyzer,outputFile,niceManifest,exportScr,scrLocation,buildContext,getLog());} catch (Exception e) {  throw new MojoExecutionException("Error trying to write Manifest to file " + outputFile,e);} finally {  try {    analyzer.close();  } catch (  IOException e) {    throw new MojoExecutionException("Error trying to write Manifest to file " + outputFile,e);  }} @TO@ try {  writeManifest(analyzer,outputFile,niceManifest,exportScr,scrLocation,buildContext,getLog());  if (supportIncrementalBuild) {    writeIncrementalInfo(project);  }} catch (Exception e) {  throw new MojoExecutionException("Error trying to write Manifest to file " + outputFile,e);} finally {  try {    analyzer.close();  } catch (  IOException e) {    throw new MojoExecutionException("Error trying to write Manifest to file " + outputFile,e);  }} @AT@ 4887 @LENGTH@ 496
---MOV IfStatement@@if (supportIncrementalBuild) {  writeIncrementalInfo(project);} @TO@ TryStatement@@try {  writeManifest(analyzer,outputFile,niceManifest,exportScr,scrLocation,buildContext,getLog());} catch (Exception e) {  throw new MojoExecutionException("Error trying to write Manifest to file " + outputFile,e);} finally {  try {    analyzer.close();  } catch (  IOException e) {    throw new MojoExecutionException("Error trying to write Manifest to file " + outputFile,e);  }} @AT@ 4035 @LENGTH@ 91


INS MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameIsNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizeRequestTests,  @AT@ 2803 @LENGTH@ 353
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameIsNullThenThrowIllegalArgumentException,  @AT@ 2803 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameIsNullThenThrowIllegalArgumentException,  @AT@ 2810 @LENGTH@ 4
---INS SimpleName@@MethodName:withClientRegistrationIdWhenPrincipalNameIsNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameIsNullThenThrowIllegalArgumentException,  @AT@ 2815 @LENGTH@ 80
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()).isInstanceOf(IllegalArgumentException.class).hasMessage("principalName cannot be empty") @TO@ MethodDeclaration@@public, void, MethodName:withClientRegistrationIdWhenPrincipalNameIsNullThenThrowIllegalArgumentException,  @AT@ 2902 @LENGTH@ 251
------INS MethodInvocation@@assertThatThrownBy(() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()).isInstanceOf(IllegalArgumentException.class).hasMessage("principalName cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()).isInstanceOf(IllegalArgumentException.class).hasMessage("principalName cannot be empty") @AT@ 2902 @LENGTH@ 250
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()).isInstanceOf(IllegalArgumentException.class).hasMessage("principalName cannot be empty") @AT@ 2902 @LENGTH@ 201
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3072 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()] @TO@ MethodInvocation@@assertThatThrownBy(() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()).isInstanceOf(IllegalArgumentException.class).hasMessage("principalName cannot be empty") @AT@ 2902 @LENGTH@ 151
------------INS LambdaExpression@@() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build() @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()] @AT@ 2921 @LENGTH@ 131
---------------INS MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build() @TO@ LambdaExpression@@() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build() @AT@ 2927 @LENGTH@ 125
------------------INS MethodInvocation@@MethodName:principal:[(String)null] @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build() @AT@ 2927 @LENGTH@ 117
---------------------INS CastExpression@@(String)null @TO@ MethodInvocation@@MethodName:principal:[(String)null] @AT@ 3030 @LENGTH@ 13
------------------------INS SimpleType@@String @TO@ CastExpression@@(String)null @AT@ 3031 @LENGTH@ 6
------------------------INS NullLiteral@@null @TO@ CastExpression@@(String)null @AT@ 3039 @LENGTH@ 4
------------------INS MethodInvocation@@MethodName:withClientRegistrationId:[this.clientRegistration.getRegistrationId()] @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build() @AT@ 2927 @LENGTH@ 92
---------------------INS MethodInvocation@@this.clientRegistration.getRegistrationId() @TO@ MethodInvocation@@MethodName:withClientRegistrationId:[this.clientRegistration.getRegistrationId()] @AT@ 2975 @LENGTH@ 43
------------------------INS FieldAccess@@this.clientRegistration @TO@ MethodInvocation@@this.clientRegistration.getRegistrationId() @AT@ 2975 @LENGTH@ 23
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 2975 @LENGTH@ 4
---------------------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 2980 @LENGTH@ 18
------------------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@this.clientRegistration.getRegistrationId() @AT@ 2999 @LENGTH@ 19
------------------INS SimpleName@@Name:OAuth2AuthorizeRequest @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build() @AT@ 2927 @LENGTH@ 22
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build() @AT@ 3045 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasMessage:["principalName cannot be empty"] @TO@ MethodInvocation@@assertThatThrownBy(() -> OAuth2AuthorizeRequest.withClientRegistrationId(this.clientRegistration.getRegistrationId()).principal((String)null).build()).isInstanceOf(IllegalArgumentException.class).hasMessage("principalName cannot be empty") @AT@ 3109 @LENGTH@ 43
------------INS StringLiteral@@"principalName cannot be empty" @TO@ SimpleName@@MethodName:hasMessage:["principalName cannot be empty"] @AT@ 3120 @LENGTH@ 31


UPD MethodDeclaration@@private, OAuth2AuthenticationException, MethodName:onError, JwtException e,  @TO@ private, AuthenticationException, MethodName:onError, JwtException e,  @AT@ 3075 @LENGTH@ 127
---UPD SimpleType@@OAuth2AuthenticationException @TO@ AuthenticationException @AT@ 3083 @LENGTH@ 29
---INS IfStatement@@if (e instanceof BadJwtException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @TO@ MethodDeclaration@@private, OAuth2AuthenticationException, MethodName:onError, JwtException e,  @AT@ 3269 @LENGTH@ 177
------INS InstanceofExpression@@e instanceof BadJwtException @TO@ IfStatement@@if (e instanceof BadJwtException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 3273 @LENGTH@ 28
---------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof BadJwtException @AT@ 3273 @LENGTH@ 1
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof BadJwtException @AT@ 3275 @LENGTH@ 10
---------INS SimpleType@@BadJwtException @TO@ InstanceofExpression@@e instanceof BadJwtException @AT@ 3286 @LENGTH@ 15
------INS Block@@ThenBody:{  return new InvalidBearerTokenException(e.getMessage(),e);} @TO@ IfStatement@@if (e instanceof BadJwtException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 3303 @LENGTH@ 67
---------MOV ReturnStatement@@ClassInstanceCreation:new InvalidBearerTokenException(e.getMessage(),e) @TO@ Block@@ThenBody:{  return new InvalidBearerTokenException(e.getMessage(),e);} @AT@ 3141 @LENGTH@ 58
------INS Block@@ElseBody:{  return new AuthenticationServiceException(e.getMessage(),e);} @TO@ IfStatement@@if (e instanceof BadJwtException) {  return new InvalidBearerTokenException(e.getMessage(),e);} else {  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 3376 @LENGTH@ 70
---------INS ReturnStatement@@ClassInstanceCreation:new AuthenticationServiceException(e.getMessage(),e) @TO@ Block@@ElseBody:{  return new AuthenticationServiceException(e.getMessage(),e);} @AT@ 3381 @LENGTH@ 61
------------INS ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @TO@ ReturnStatement@@ClassInstanceCreation:new AuthenticationServiceException(e.getMessage(),e) @AT@ 3388 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 3388 @LENGTH@ 3
---------------INS SimpleType@@AuthenticationServiceException @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 3392 @LENGTH@ 30
---------------INS MethodInvocation@@e.getMessage() @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 3423 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 3423 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 3425 @LENGTH@ 12
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@AuthenticationServiceException[e.getMessage(), e] @AT@ 3439 @LENGTH@ 1


UPD TryStatement@@try {  for (int i=0; i < messageCount; i++) {    final OutboundEvent.Builder eventBuilder=new OutboundEvent.Builder();    eventBuilder.id(UUID.randomUUID().toString());    eventBuilder.data(SoroushMessage.class,getSoroushMessage(i,withFile));    eventBuilder.mediaType(MediaType.APPLICATION_JSON_TYPE);    final OutboundEvent event=eventBuilder.build();    sink.send(event);    Thread.sleep(delay);  }  if (token.toLowerCase().contains("close")) {    sink.close();  }} catch (InterruptedException e) {  e.printStackTrace();} @TO@ try {  for (int i=0; i < messageCount; i++) {    final OutboundEvent.Builder eventBuilder=new OutboundEvent.Builder();    eventBuilder.id(UUID.randomUUID().toString());    eventBuilder.data(SoroushMessage.class,getSoroushMessage(i,withFile));    eventBuilder.mediaType(MediaType.APPLICATION_JSON_TYPE);    final OutboundEvent event=eventBuilder.build();    if (!sink.isClosed()) {      sink.send(event);    }    Thread.sleep(delay);  }  if (token.toLowerCase().contains("close")) {    sink.close();  }} catch (InterruptedException e) {} @AT@ 3466 @LENGTH@ 845
---UPD ForStatement@@for (int i=0; i < messageCount; i++) {  final OutboundEvent.Builder eventBuilder=new OutboundEvent.Builder();  eventBuilder.id(UUID.randomUUID().toString());  eventBuilder.data(SoroushMessage.class,getSoroushMessage(i,withFile));  eventBuilder.mediaType(MediaType.APPLICATION_JSON_TYPE);  final OutboundEvent event=eventBuilder.build();  sink.send(event);  Thread.sleep(delay);} @TO@ for (int i=0; i < messageCount; i++) {  final OutboundEvent.Builder eventBuilder=new OutboundEvent.Builder();  eventBuilder.id(UUID.randomUUID().toString());  eventBuilder.data(SoroushMessage.class,getSoroushMessage(i,withFile));  eventBuilder.mediaType(MediaType.APPLICATION_JSON_TYPE);  final OutboundEvent event=eventBuilder.build();  if (!sink.isClosed()) {    sink.send(event);  }  Thread.sleep(delay);} @AT@ 3488 @LENGTH@ 612
------INS IfStatement@@if (!sink.isClosed()) {  sink.send(event);} @TO@ ForStatement@@for (int i=0; i < messageCount; i++) {  final OutboundEvent.Builder eventBuilder=new OutboundEvent.Builder();  eventBuilder.id(UUID.randomUUID().toString());  eventBuilder.data(SoroushMessage.class,getSoroushMessage(i,withFile));  eventBuilder.mediaType(MediaType.APPLICATION_JSON_TYPE);  final OutboundEvent event=eventBuilder.build();  sink.send(event);  Thread.sleep(delay);} @AT@ 3976 @LENGTH@ 87
---------INS PrefixExpression@@!sink.isClosed() @TO@ IfStatement@@if (!sink.isClosed()) {  sink.send(event);} @AT@ 3980 @LENGTH@ 16
------------INS Operator@@! @TO@ PrefixExpression@@!sink.isClosed() @AT@ 3980 @LENGTH@ 1
------------INS MethodInvocation@@sink.isClosed() @TO@ PrefixExpression@@!sink.isClosed() @AT@ 3981 @LENGTH@ 15
---------------INS SimpleName@@Name:sink @TO@ MethodInvocation@@sink.isClosed() @AT@ 3981 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isClosed:[] @TO@ MethodInvocation@@sink.isClosed() @AT@ 3986 @LENGTH@ 10
---------INS Block@@ThenBody:{  sink.send(event);} @TO@ IfStatement@@if (!sink.isClosed()) {  sink.send(event);} @AT@ 3998 @LENGTH@ 65
------------MOV ExpressionStatement@@MethodInvocation:sink.send(event) @TO@ Block@@ThenBody:{  sink.send(event);} @AT@ 3976 @LENGTH@ 17
---UPD CatchClause@@catch (InterruptedException e) {  e.printStackTrace();} @TO@ catch (InterruptedException e) {} @AT@ 4228 @LENGTH@ 83
------DEL ExpressionStatement@@MethodInvocation:e.printStackTrace() @AT@ 4277 @LENGTH@ 20
---------DEL MethodInvocation@@e.printStackTrace() @AT@ 4277 @LENGTH@ 19
------------DEL SimpleName@@Name:e @AT@ 4277 @LENGTH@ 1
------------DEL SimpleName@@MethodName:printStackTrace:[] @AT@ 4279 @LENGTH@ 17


INS MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @TO@ TypeDeclaration@@[public, final]RestComponentHelper,  @AT@ 4248 @LENGTH@ 302
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4248 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4255 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4262 @LENGTH@ 6
---INS SimpleName@@MethodName:createRestConsumerUrl @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4269 @LENGTH@ 21
---INS SingleVariableDeclaration@@String componentName @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4291 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String componentName @AT@ 4291 @LENGTH@ 6
------INS SimpleName@@componentName @TO@ SingleVariableDeclaration@@String componentName @AT@ 4298 @LENGTH@ 13
---INS SingleVariableDeclaration@@String verb @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4313 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String verb @AT@ 4313 @LENGTH@ 6
------INS SimpleName@@verb @TO@ SingleVariableDeclaration@@String verb @AT@ 4320 @LENGTH@ 4
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4326 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 4326 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 4333 @LENGTH@ 4
---INS SingleVariableDeclaration@@Map<String,Object> queryMap @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4339 @LENGTH@ 28
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> queryMap @AT@ 4339 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 4339 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 4343 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 4351 @LENGTH@ 6
------INS SimpleName@@queryMap @TO@ SingleVariableDeclaration@@Map<String,Object> queryMap @AT@ 4359 @LENGTH@ 8
---INS SimpleType@@URISyntaxException @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4376 @LENGTH@ 18
---INS VariableDeclarationStatement@@String query=URISupport.createQueryString(queryMap); @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4406 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String query=URISupport.createQueryString(queryMap); @AT@ 4406 @LENGTH@ 6
------INS VariableDeclarationFragment@@query=URISupport.createQueryString(queryMap) @TO@ VariableDeclarationStatement@@String query=URISupport.createQueryString(queryMap); @AT@ 4413 @LENGTH@ 46
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=URISupport.createQueryString(queryMap) @AT@ 4413 @LENGTH@ 5
---------INS MethodInvocation@@URISupport.createQueryString(queryMap) @TO@ VariableDeclarationFragment@@query=URISupport.createQueryString(queryMap) @AT@ 4421 @LENGTH@ 38
------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.createQueryString(queryMap) @AT@ 4421 @LENGTH@ 10
------------INS SimpleName@@MethodName:createQueryString:[queryMap] @TO@ MethodInvocation@@URISupport.createQueryString(queryMap) @AT@ 4432 @LENGTH@ 27
---------------INS SimpleName@@queryMap @TO@ SimpleName@@MethodName:createQueryString:[queryMap] @AT@ 4450 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:applyFormatAndQuery("%s:%s:%s",query,componentName,verb,path) @TO@ MethodDeclaration@@public, static, String, MethodName:createRestConsumerUrl, String componentName, String verb, String path, Map<String,Object> queryMap, URISyntaxException,  @AT@ 4470 @LENGTH@ 73
------INS MethodInvocation@@applyFormatAndQuery("%s:%s:%s",query,componentName,verb,path) @TO@ ReturnStatement@@MethodInvocation:applyFormatAndQuery("%s:%s:%s",query,componentName,verb,path) @AT@ 4477 @LENGTH@ 65
---------INS SimpleName@@MethodName:applyFormatAndQuery:["%s:%s:%s", query, componentName, verb, path] @TO@ MethodInvocation@@applyFormatAndQuery("%s:%s:%s",query,componentName,verb,path) @AT@ 4477 @LENGTH@ 65
------------INS StringLiteral@@"%s:%s:%s" @TO@ SimpleName@@MethodName:applyFormatAndQuery:["%s:%s:%s", query, componentName, verb, path] @AT@ 4497 @LENGTH@ 10
------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applyFormatAndQuery:["%s:%s:%s", query, componentName, verb, path] @AT@ 4509 @LENGTH@ 5
------------INS SimpleName@@componentName @TO@ SimpleName@@MethodName:applyFormatAndQuery:["%s:%s:%s", query, componentName, verb, path] @AT@ 4516 @LENGTH@ 13
------------INS SimpleName@@verb @TO@ SimpleName@@MethodName:applyFormatAndQuery:["%s:%s:%s", query, componentName, verb, path] @AT@ 4531 @LENGTH@ 4
------------INS SimpleName@@path @TO@ SimpleName@@MethodName:applyFormatAndQuery:["%s:%s:%s", query, componentName, verb, path] @AT@ 4537 @LENGTH@ 4


INS IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("Enricher {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 14191 @LENGTH@ 443
---INS InfixExpression@@producerCache == null @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("Enricher {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 14195 @LENGTH@ 21
------INS SimpleName@@producerCache @TO@ InfixExpression@@producerCache == null @AT@ 14195 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@producerCache == null @AT@ 14208 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@producerCache == null @AT@ 14212 @LENGTH@ 4
---INS Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("Enricher {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @TO@ IfStatement@@if (producerCache == null) {  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("Enricher {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 14218 @LENGTH@ 416
------MOV IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ Block@@ThenBody:{  if (cacheSize < 0) {    producerCache=new EmptyProducerCache(this,camelContext);    LOG.debug("Enricher {} is not using ProducerCache",this);  } else {    producerCache=new DefaultProducerCache(this,camelContext,cacheSize);    LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize);  }} @AT@ 14135 @LENGTH@ 234
---------DEL InfixExpression@@producerCache == null @AT@ 14139 @LENGTH@ 21
------------DEL SimpleName@@producerCache @AT@ 14139 @LENGTH@ 13
------------DEL Operator@@== @AT@ 14152 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 14156 @LENGTH@ 4
---------UPD Block@@ThenBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ ElseBody:{  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 14162 @LENGTH@ 207
------------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ MethodInvocation:LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 14261 @LENGTH@ 98
---------------UPD MethodInvocation@@LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity()) @TO@ LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,cacheSize) @AT@ 14261 @LENGTH@ 97
------------------UPD SimpleName@@MethodName:debug:["Enricher {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @TO@ MethodName:debug:["Enricher {} using ProducerCache with cacheSize={}", this, cacheSize] @AT@ 14265 @LENGTH@ 93
---------------------DEL MethodInvocation@@producerCache.getCapacity() @AT@ 14330 @LENGTH@ 27
------------------------DEL SimpleName@@Name:producerCache @AT@ 14330 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:getCapacity:[] @AT@ 14344 @LENGTH@ 13
---------------------INS SimpleName@@cacheSize @TO@ SimpleName@@MethodName:debug:["Enricher {} using ProducerCache with cacheSize={}", this, producerCache.getCapacity()] @AT@ 14599 @LENGTH@ 9
---------INS InfixExpression@@cacheSize < 0 @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 14236 @LENGTH@ 13
------------INS SimpleName@@cacheSize @TO@ InfixExpression@@cacheSize < 0 @AT@ 14236 @LENGTH@ 9
------------INS Operator@@< @TO@ InfixExpression@@cacheSize < 0 @AT@ 14245 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@cacheSize < 0 @AT@ 14248 @LENGTH@ 1
---------INS Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("Enricher {} is not using ProducerCache",this);} @TO@ IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("Enricher {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @AT@ 14251 @LENGTH@ 166
------------INS ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("Enricher {} is not using ProducerCache",this);} @AT@ 14269 @LENGTH@ 59
---------------INS Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @TO@ ExpressionStatement@@Assignment:producerCache=new EmptyProducerCache(this,camelContext) @AT@ 14269 @LENGTH@ 58
------------------INS SimpleName@@producerCache @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 14269 @LENGTH@ 13
------------------INS Operator@@= @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 14282 @LENGTH@ 1
------------------INS ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @TO@ Assignment@@producerCache=new EmptyProducerCache(this,camelContext) @AT@ 14285 @LENGTH@ 42
---------------------INS New@@new @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 14285 @LENGTH@ 3
---------------------INS SimpleType@@EmptyProducerCache @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 14289 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 14308 @LENGTH@ 4
---------------------INS SimpleName@@camelContext @TO@ ClassInstanceCreation@@EmptyProducerCache[this, camelContext] @AT@ 14314 @LENGTH@ 12
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Enricher {} is not using ProducerCache",this) @TO@ Block@@ThenBody:{  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("Enricher {} is not using ProducerCache",this);} @AT@ 14345 @LENGTH@ 58
---------------INS MethodInvocation@@LOG.debug("Enricher {} is not using ProducerCache",this) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Enricher {} is not using ProducerCache",this) @AT@ 14345 @LENGTH@ 57
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Enricher {} is not using ProducerCache",this) @AT@ 14345 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["Enricher {} is not using ProducerCache", this] @TO@ MethodInvocation@@LOG.debug("Enricher {} is not using ProducerCache",this) @AT@ 14349 @LENGTH@ 53
---------------------INS StringLiteral@@"Enricher {} is not using ProducerCache" @TO@ SimpleName@@MethodName:debug:["Enricher {} is not using ProducerCache", this] @AT@ 14355 @LENGTH@ 40
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:debug:["Enricher {} is not using ProducerCache", this] @AT@ 14397 @LENGTH@ 4


UPD CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @TO@ catch (RestClientException ex) {  int statusCode=500;  if (ex instanceof RestClientResponseException) {    statusCode=((RestClientResponseException)ex).getRawStatusCode();  }  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error);  throw new ClientAuthorizationException(oauth2Error,passwordGrantRequest.getClientRegistration().getRegistrationId(),message,ex);} @AT@ 3736 @LENGTH@ 294
---INS VariableDeclarationStatement@@int statusCode=500; @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3841 @LENGTH@ 21
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3841 @LENGTH@ 3
------INS VariableDeclarationFragment@@statusCode=500 @TO@ VariableDeclarationStatement@@int statusCode=500; @AT@ 3845 @LENGTH@ 16
---------INS SimpleName@@statusCode @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3845 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ VariableDeclarationFragment@@statusCode=500 @AT@ 3858 @LENGTH@ 3
---INS IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 3866 @LENGTH@ 125
------INS InstanceofExpression@@ex instanceof RestClientResponseException @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3870 @LENGTH@ 41
---------INS SimpleName@@ex @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3870 @LENGTH@ 2
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3873 @LENGTH@ 10
---------INS SimpleType@@RestClientResponseException @TO@ InstanceofExpression@@ex instanceof RestClientResponseException @AT@ 3884 @LENGTH@ 27
------INS Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @TO@ IfStatement@@if (ex instanceof RestClientResponseException) {  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3913 @LENGTH@ 78
---------INS ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ Block@@ThenBody:{  statusCode=((RestClientResponseException)ex).getRawStatusCode();} @AT@ 3919 @LENGTH@ 67
------------INS Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @TO@ ExpressionStatement@@Assignment:statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3919 @LENGTH@ 66
---------------INS SimpleName@@statusCode @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3919 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3929 @LENGTH@ 1
---------------INS MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @TO@ Assignment@@statusCode=((RestClientResponseException)ex).getRawStatusCode() @AT@ 3932 @LENGTH@ 53
------------------INS ParenthesizedExpression@@((RestClientResponseException)ex) @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 3932 @LENGTH@ 34
---------------------INS CastExpression@@(RestClientResponseException)ex @TO@ ParenthesizedExpression@@((RestClientResponseException)ex) @AT@ 3933 @LENGTH@ 32
------------------------INS SimpleType@@RestClientResponseException @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 3934 @LENGTH@ 27
------------------------INS SimpleName@@ex @TO@ CastExpression@@(RestClientResponseException)ex @AT@ 3963 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getRawStatusCode:[] @TO@ MethodInvocation@@((RestClientResponseException)ex).getRawStatusCode() @AT@ 3967 @LENGTH@ 18
---UPD ThrowStatement@@ClassInstanceCreation:new OAuth2AuthorizationException(oauth2Error,ex) @TO@ ClassInstanceCreation:new ClientAuthorizationException(oauth2Error,passwordGrantRequest.getClientRegistration().getRegistrationId(),message,ex) @AT@ 3970 @LENGTH@ 56
------UPD ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @TO@ ClientAuthorizationException[oauth2Error, passwordGrantRequest.getClientRegistration().getRegistrationId(), message, ex] @AT@ 3976 @LENGTH@ 49
---------UPD SimpleType@@OAuth2AuthorizationException @TO@ ClientAuthorizationException @AT@ 3980 @LENGTH@ 28
---------INS MethodInvocation@@passwordGrantRequest.getClientRegistration().getRegistrationId() @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4406 @LENGTH@ 64
------------INS MethodInvocation@@MethodName:getClientRegistration:[] @TO@ MethodInvocation@@passwordGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4406 @LENGTH@ 44
------------INS SimpleName@@Name:passwordGrantRequest @TO@ MethodInvocation@@passwordGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4406 @LENGTH@ 20
------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@passwordGrantRequest.getClientRegistration().getRegistrationId() @AT@ 4451 @LENGTH@ 19
---------INS SimpleName@@message @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error, ex] @AT@ 4477 @LENGTH@ 7
---INS VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @TO@ CatchClause@@catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_TOKEN_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: " + ex.getMessage(),null);  throw new OAuth2AuthorizationException(oauth2Error,ex);} @AT@ 4204 @LENGTH@ 135
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4204 @LENGTH@ 6
------INS VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationStatement@@String message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error); @AT@ 4211 @LENGTH@ 127
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4211 @LENGTH@ 7
---------INS MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @TO@ VariableDeclarationFragment@@message=String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4221 @LENGTH@ 117
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4221 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @TO@ MethodInvocation@@String.format("Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s",statusCode,oauth2Error) @AT@ 4228 @LENGTH@ 110
---------------INS StringLiteral@@"Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s" @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4235 @LENGTH@ 67
---------------INS SimpleName@@statusCode @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4309 @LENGTH@ 10
---------------INS SimpleName@@oauth2Error @TO@ SimpleName@@MethodName:format:["Error retrieving OAuth 2.0 Access Token (HTTP Status Code: %s) %s", statusCode, oauth2Error] @AT@ 4326 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:fail("Should have thown NoSuchElementException") @TO@ MethodInvocation:fail("Should have thrown NoSuchElementException") @AT@ 3433 @LENGTH@ 49
---UPD MethodInvocation@@fail("Should have thown NoSuchElementException") @TO@ fail("Should have thrown NoSuchElementException") @AT@ 3433 @LENGTH@ 48
------UPD SimpleName@@MethodName:fail:["Should have thown NoSuchElementException"] @TO@ MethodName:fail:["Should have thrown NoSuchElementException"] @AT@ 3433 @LENGTH@ 48
---------UPD StringLiteral@@"Should have thown NoSuchElementException" @TO@ "Should have thrown NoSuchElementException" @AT@ 3438 @LENGTH@ 42


DEL MethodDeclaration@@public, void, MethodName:doStartShouldNotCreateTheSmppSession, Exception,  @AT@ 2272 @LENGTH@ 394
---DEL Modifier@@public @AT@ 2272 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2279 @LENGTH@ 4
---DEL SimpleName@@MethodName:doStartShouldNotCreateTheSmppSession @AT@ 2284 @LENGTH@ 36
---DEL SimpleType@@Exception @AT@ 2330 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:when(endpoint.getConnectionString()).thenReturn("smpp://smppclient@localhost:2775") @AT@ 2350 @LENGTH@ 84
------DEL MethodInvocation@@when(endpoint.getConnectionString()).thenReturn("smpp://smppclient@localhost:2775") @AT@ 2350 @LENGTH@ 83
---------DEL MethodInvocation@@MethodName:when:[endpoint.getConnectionString()] @AT@ 2350 @LENGTH@ 36
------------DEL MethodInvocation@@endpoint.getConnectionString() @AT@ 2355 @LENGTH@ 30
---------------DEL SimpleName@@Name:endpoint @AT@ 2355 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getConnectionString:[] @AT@ 2364 @LENGTH@ 21
---------DEL SimpleName@@MethodName:thenReturn:["smpp://smppclient@localhost:2775"] @AT@ 2387 @LENGTH@ 46
------------DEL StringLiteral@@"smpp://smppclient@localhost:2775" @AT@ 2398 @LENGTH@ 34
---DEL ExpressionStatement@@MethodInvocation:when(endpoint.isSingleton()).thenReturn(true) @AT@ 2443 @LENGTH@ 46
------DEL MethodInvocation@@when(endpoint.isSingleton()).thenReturn(true) @AT@ 2443 @LENGTH@ 45
---------DEL MethodInvocation@@MethodName:when:[endpoint.isSingleton()] @AT@ 2443 @LENGTH@ 28
------------DEL MethodInvocation@@endpoint.isSingleton() @AT@ 2448 @LENGTH@ 22
---------------DEL SimpleName@@Name:endpoint @AT@ 2448 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:isSingleton:[] @AT@ 2457 @LENGTH@ 13
---------DEL SimpleName@@MethodName:thenReturn:[true] @AT@ 2472 @LENGTH@ 16
------------DEL BooleanLiteral@@true @AT@ 2483 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:producer.doStart() @AT@ 2499 @LENGTH@ 19
------DEL MethodInvocation@@producer.doStart() @AT@ 2499 @LENGTH@ 18
---------DEL SimpleName@@Name:producer @AT@ 2499 @LENGTH@ 8
---------DEL SimpleName@@MethodName:doStart:[] @AT@ 2508 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:verify(endpoint).getConnectionString() @AT@ 2528 @LENGTH@ 39
------DEL MethodInvocation@@verify(endpoint).getConnectionString() @AT@ 2528 @LENGTH@ 38
---------DEL MethodInvocation@@MethodName:verify:[endpoint] @AT@ 2528 @LENGTH@ 16
------------DEL SimpleName@@endpoint @AT@ 2535 @LENGTH@ 8
---------DEL SimpleName@@MethodName:getConnectionString:[] @AT@ 2545 @LENGTH@ 21
---DEL ExpressionStatement@@MethodInvocation:verify(endpoint).isSingleton() @AT@ 2576 @LENGTH@ 31
------DEL MethodInvocation@@verify(endpoint).isSingleton() @AT@ 2576 @LENGTH@ 30
---------DEL MethodInvocation@@MethodName:verify:[endpoint] @AT@ 2576 @LENGTH@ 16
------------DEL SimpleName@@endpoint @AT@ 2583 @LENGTH@ 8
---------DEL SimpleName@@MethodName:isSingleton:[] @AT@ 2593 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:verifyNoMoreInteractions(endpoint,session) @AT@ 2616 @LENGTH@ 44
------DEL MethodInvocation@@verifyNoMoreInteractions(endpoint,session) @AT@ 2616 @LENGTH@ 43
---------DEL SimpleName@@MethodName:verifyNoMoreInteractions:[endpoint, session] @AT@ 2616 @LENGTH@ 43
------------DEL SimpleName@@endpoint @AT@ 2641 @LENGTH@ 8
------------DEL SimpleName@@session @AT@ 2651 @LENGTH@ 7


UPD TryStatement@@try {  jwt=this.jwtDecoder.decode(bearer.getToken());} catch (JwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);} @TO@ try {  jwt=this.jwtDecoder.decode(bearer.getToken());} catch (BadJwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);}catch (JwtException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @AT@ 3421 @LENGTH@ 166
---UPD CatchClause@@catch (JwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);} @TO@ catch (BadJwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);} @AT@ 3483 @LENGTH@ 104
------UPD SingleVariableDeclaration@@JwtException failed @TO@ BadJwtException failed @AT@ 3490 @LENGTH@ 19
---------UPD SimpleType@@JwtException @TO@ BadJwtException @AT@ 3490 @LENGTH@ 12
---INS CatchClause@@catch (JwtException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @TO@ TryStatement@@try {  jwt=this.jwtDecoder.decode(bearer.getToken());} catch (JwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);} @AT@ 3738 @LENGTH@ 107
------INS SingleVariableDeclaration@@JwtException failed @TO@ CatchClause@@catch (JwtException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @AT@ 3745 @LENGTH@ 19
---------INS SimpleType@@JwtException @TO@ SingleVariableDeclaration@@JwtException failed @AT@ 3745 @LENGTH@ 12
---------INS SimpleName@@failed @TO@ SingleVariableDeclaration@@JwtException failed @AT@ 3758 @LENGTH@ 6
------INS ThrowStatement@@ClassInstanceCreation:new AuthenticationServiceException(failed.getMessage(),failed) @TO@ CatchClause@@catch (JwtException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @AT@ 3771 @LENGTH@ 70
---------INS ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage(), failed] @TO@ ThrowStatement@@ClassInstanceCreation:new AuthenticationServiceException(failed.getMessage(),failed) @AT@ 3777 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage(), failed] @AT@ 3777 @LENGTH@ 3
------------INS SimpleType@@AuthenticationServiceException @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage(), failed] @AT@ 3781 @LENGTH@ 30
------------INS MethodInvocation@@failed.getMessage() @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage(), failed] @AT@ 3812 @LENGTH@ 19
---------------INS SimpleName@@Name:failed @TO@ MethodInvocation@@failed.getMessage() @AT@ 3812 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@failed.getMessage() @AT@ 3819 @LENGTH@ 12
------------INS SimpleName@@failed @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage(), failed] @AT@ 3833 @LENGTH@ 6


UPD TryStatement@@try (final BoundedReader mr=new BoundedReader(sr,3)){  final char[] cbuf=new char[4];  for (int i=0; i < cbuf.length; i++) {    cbuf[i]='X';  }  final int read=mr.read(cbuf,1,2);  assertEquals(2,read);  assertEquals('X',cbuf[0]);  assertEquals('0',cbuf[1]);  assertEquals('1',cbuf[2]);  assertEquals('X',cbuf[3]);}  @TO@ try (final BoundedReader mr=new BoundedReader(sr,3)){  final char[] cbuf=new char[4];  Arrays.fill(cbuf,'X');  final int read=mr.read(cbuf,1,2);  assertEquals(2,read);  assertEquals('X',cbuf[0]);  assertEquals('0',cbuf[1]);  assertEquals('1',cbuf[2]);  assertEquals('X',cbuf[3]);}  @AT@ 2901 @LENGTH@ 454
---INS ExpressionStatement@@MethodInvocation:Arrays.fill(cbuf,'X') @TO@ TryStatement@@try (final BoundedReader mr=new BoundedReader(sr,3)){  final char[] cbuf=new char[4];  for (int i=0; i < cbuf.length; i++) {    cbuf[i]='X';  }  final int read=mr.read(cbuf,1,2);  assertEquals(2,read);  assertEquals('X',cbuf[0]);  assertEquals('0',cbuf[1]);  assertEquals('1',cbuf[2]);  assertEquals('X',cbuf[3]);}  @AT@ 2980 @LENGTH@ 23
------INS MethodInvocation@@Arrays.fill(cbuf,'X') @TO@ ExpressionStatement@@MethodInvocation:Arrays.fill(cbuf,'X') @AT@ 2980 @LENGTH@ 22
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.fill(cbuf,'X') @AT@ 2980 @LENGTH@ 6
---------INS SimpleName@@MethodName:fill:[cbuf, 'X'] @TO@ MethodInvocation@@Arrays.fill(cbuf,'X') @AT@ 2987 @LENGTH@ 15
------------INS SimpleName@@cbuf @TO@ SimpleName@@MethodName:fill:[cbuf, 'X'] @AT@ 2992 @LENGTH@ 4
------------INS CharacterLiteral@@'X' @TO@ SimpleName@@MethodName:fill:[cbuf, 'X'] @AT@ 2998 @LENGTH@ 3
---DEL ForStatement@@for (int i=0; i < cbuf.length; i++) {  cbuf[i]='X';} @AT@ 3016 @LENGTH@ 84
------DEL VariableDeclarationExpression@@int i=0 @AT@ 3021 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 3021 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 3025 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 3025 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 3029 @LENGTH@ 1
------DEL InfixExpression@@i < cbuf.length @AT@ 3032 @LENGTH@ 15
---------DEL SimpleName@@i @AT@ 3032 @LENGTH@ 1
---------DEL Operator@@< @AT@ 3033 @LENGTH@ 1
---------DEL QualifiedName@@cbuf.length @AT@ 3036 @LENGTH@ 11
------------DEL SimpleName@@cbuf @AT@ 3036 @LENGTH@ 4
------------DEL SimpleName@@length @AT@ 3041 @LENGTH@ 6
------DEL PostfixExpression@@i++ @AT@ 3049 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 3049 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 3051 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:cbuf[i]='X' @AT@ 3072 @LENGTH@ 14
---------DEL Assignment@@cbuf[i]='X' @AT@ 3072 @LENGTH@ 13
------------DEL ArrayAccess@@cbuf[i] @AT@ 3072 @LENGTH@ 7
---------------DEL SimpleName@@cbuf @AT@ 3072 @LENGTH@ 4
---------------DEL SimpleName@@i @AT@ 3077 @LENGTH@ 1
------------DEL Operator@@= @AT@ 3079 @LENGTH@ 1
------------DEL CharacterLiteral@@'X' @AT@ 3082 @LENGTH@ 3


DEL IfStatement@@if (configuration.getTranslateClient() == null && (configuration.getAccessKey() == null || configuration.getSecretKey() == null)) {  throw new IllegalArgumentException("Amazon translate client or accessKey and secretKey must be specified");} @AT@ 2410 @LENGTH@ 261
---DEL InfixExpression@@configuration.getTranslateClient() == null && (configuration.getAccessKey() == null || configuration.getSecretKey() == null) @AT@ 2414 @LENGTH@ 124
------DEL InfixExpression@@configuration.getTranslateClient() == null @AT@ 2414 @LENGTH@ 42
---------DEL MethodInvocation@@configuration.getTranslateClient() @AT@ 2414 @LENGTH@ 34
------------DEL SimpleName@@Name:configuration @AT@ 2414 @LENGTH@ 13
------------DEL SimpleName@@MethodName:getTranslateClient:[] @AT@ 2428 @LENGTH@ 20
---------DEL Operator@@== @AT@ 2448 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2452 @LENGTH@ 4
------DEL Operator@@&& @AT@ 2456 @LENGTH@ 2
------DEL ParenthesizedExpression@@(configuration.getAccessKey() == null || configuration.getSecretKey() == null) @AT@ 2460 @LENGTH@ 78
---------DEL InfixExpression@@configuration.getAccessKey() == null || configuration.getSecretKey() == null @AT@ 2461 @LENGTH@ 76
------------DEL InfixExpression@@configuration.getAccessKey() == null @AT@ 2461 @LENGTH@ 36
---------------DEL MethodInvocation@@configuration.getAccessKey() @AT@ 2461 @LENGTH@ 28
------------------DEL SimpleName@@Name:configuration @AT@ 2461 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:getAccessKey:[] @AT@ 2475 @LENGTH@ 14
---------------DEL Operator@@== @AT@ 2489 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 2493 @LENGTH@ 4
------------DEL Operator@@|| @AT@ 2497 @LENGTH@ 2
------------DEL InfixExpression@@configuration.getSecretKey() == null @AT@ 2501 @LENGTH@ 36
---------------DEL MethodInvocation@@configuration.getSecretKey() @AT@ 2501 @LENGTH@ 28
------------------DEL SimpleName@@Name:configuration @AT@ 2501 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:getSecretKey:[] @AT@ 2515 @LENGTH@ 14
---------------DEL Operator@@== @AT@ 2529 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 2533 @LENGTH@ 4
---DEL Block@@ThenBody:{  throw new IllegalArgumentException("Amazon translate client or accessKey and secretKey must be specified");} @AT@ 2540 @LENGTH@ 131
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Amazon translate client or accessKey and secretKey must be specified") @AT@ 2554 @LENGTH@ 107
---------DEL ClassInstanceCreation@@IllegalArgumentException["Amazon translate client or accessKey and secretKey must be specified"] @AT@ 2560 @LENGTH@ 100
------------DEL New@@new @AT@ 2560 @LENGTH@ 3
------------DEL SimpleType@@IllegalArgumentException @AT@ 2564 @LENGTH@ 24
------------DEL StringLiteral@@"Amazon translate client or accessKey and secretKey must be specified" @AT@ 2589 @LENGTH@ 70


INS ExpressionStatement@@MethodInvocation:context.getInflightRepository().setInflightBrowseEnabled(true) @TO@ MethodDeclaration@@public, voidMethodName:AbstractLocalCamelControllerTest, Exception,  @AT@ 1800 @LENGTH@ 63
---INS MethodInvocation@@context.getInflightRepository().setInflightBrowseEnabled(true) @TO@ ExpressionStatement@@MethodInvocation:context.getInflightRepository().setInflightBrowseEnabled(true) @AT@ 1800 @LENGTH@ 62
------INS MethodInvocation@@MethodName:getInflightRepository:[] @TO@ MethodInvocation@@context.getInflightRepository().setInflightBrowseEnabled(true) @AT@ 1800 @LENGTH@ 31
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getInflightRepository().setInflightBrowseEnabled(true) @AT@ 1800 @LENGTH@ 7
------INS SimpleName@@MethodName:setInflightBrowseEnabled:[true] @TO@ MethodInvocation@@context.getInflightRepository().setInflightBrowseEnabled(true) @AT@ 1832 @LENGTH@ 30
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setInflightBrowseEnabled:[true] @AT@ 1857 @LENGTH@ 4


INS VariableDeclarationStatement@@RequestCache requestCache=builder.getSharedObject(RequestCache.class); @TO@ MethodDeclaration@@private, OAuth2AuthorizationCodeGrantFilter, MethodName:createAuthorizationCodeGrantFilter, B builder,  @AT@ 11917 @LENGTH@ 72
---INS SimpleType@@RequestCache @TO@ VariableDeclarationStatement@@RequestCache requestCache=builder.getSharedObject(RequestCache.class); @AT@ 11917 @LENGTH@ 12
---INS VariableDeclarationFragment@@requestCache=builder.getSharedObject(RequestCache.class) @TO@ VariableDeclarationStatement@@RequestCache requestCache=builder.getSharedObject(RequestCache.class); @AT@ 11930 @LENGTH@ 58
------INS SimpleName@@requestCache @TO@ VariableDeclarationFragment@@requestCache=builder.getSharedObject(RequestCache.class) @AT@ 11930 @LENGTH@ 12
------INS MethodInvocation@@builder.getSharedObject(RequestCache.class) @TO@ VariableDeclarationFragment@@requestCache=builder.getSharedObject(RequestCache.class) @AT@ 11945 @LENGTH@ 43
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getSharedObject(RequestCache.class) @AT@ 11945 @LENGTH@ 7
---------INS SimpleName@@MethodName:getSharedObject:[RequestCache.class] @TO@ MethodInvocation@@builder.getSharedObject(RequestCache.class) @AT@ 11953 @LENGTH@ 35
------------INS TypeLiteral@@RequestCache.class @TO@ SimpleName@@MethodName:getSharedObject:[RequestCache.class] @AT@ 11969 @LENGTH@ 18


INS MethodDeclaration@@void, MethodName:bindSpelExpressionInArrayCorrectly,  @TO@ TypeDeclaration@@ParameterBindingJsonReaderUnitTests,  @AT@ 8300 @LENGTH@ 307
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:bindSpelExpressionInArrayCorrectly,  @AT@ 8295 @LENGTH@ 4
---INS SimpleName@@MethodName:bindSpelExpressionInArrayCorrectly @TO@ MethodDeclaration@@void, MethodName:bindSpelExpressionInArrayCorrectly,  @AT@ 8300 @LENGTH@ 34
---INS VariableDeclarationStatement@@Document target=parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1); @TO@ MethodDeclaration@@void, MethodName:bindSpelExpressionInArrayCorrectly,  @AT@ 8397 @LENGTH@ 116
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document target=parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1); @AT@ 8397 @LENGTH@ 8
------INS VariableDeclarationFragment@@target=parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1) @TO@ VariableDeclarationStatement@@Document target=parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1); @AT@ 8406 @LENGTH@ 106
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1) @AT@ 8406 @LENGTH@ 6
---------INS MethodInvocation@@parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1) @TO@ VariableDeclarationFragment@@target=parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1) @AT@ 8415 @LENGTH@ 97
------------INS SimpleName@@MethodName:parse:["{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}", 1] @TO@ MethodInvocation@@parse("{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}",1) @AT@ 8415 @LENGTH@ 97
---------------INS StringLiteral@@"{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}" @TO@ SimpleName@@MethodName:parse:["{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}", 1] @AT@ 8421 @LENGTH@ 87
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:parse:["{ $and : [?#{ [0] == null  ? { '$where' : 'true' } : { 'v1' : { '$in' : {[0]} } } }]}", 1] @AT@ 8510 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}")) @TO@ MethodDeclaration@@void, MethodName:bindSpelExpressionInArrayCorrectly,  @AT@ 8517 @LENGTH@ 87
------INS MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}")) @AT@ 8517 @LENGTH@ 86
---------INS MethodInvocation@@MethodName:assertThat:[target] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}")) @AT@ 8517 @LENGTH@ 18
------------INS SimpleName@@target @TO@ MethodInvocation@@MethodName:assertThat:[target] @AT@ 8528 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}")] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}")) @AT@ 8536 @LENGTH@ 67
------------INS MethodInvocation@@Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}") @TO@ SimpleName@@MethodName:isEqualTo:[Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}")] @AT@ 8546 @LENGTH@ 56
---------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}") @AT@ 8546 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parse:["{\"$and\": [{\"v1\": {\"$in\": [1]}}]}"] @TO@ MethodInvocation@@Document.parse("{\"$and\": [{\"v1\": {\"$in\": [1]}}]}") @AT@ 8555 @LENGTH@ 47
------------------INS StringLiteral@@"{\"$and\": [{\"v1\": {\"$in\": [1]}}]}" @TO@ SimpleName@@MethodName:parse:["{\"$and\": [{\"v1\": {\"$in\": [1]}}]}"] @AT@ 8561 @LENGTH@ 40


UPD MethodDeclaration@@public, void, MethodName:write, final char cbuf[], final int off, final int len, IOException,  @TO@ public, void, MethodName:write, final char[] cbuf, final int off, final int len, IOException,  @AT@ 5922 @LENGTH@ 578
---UPD SingleVariableDeclaration@@final char cbuf[] @TO@ final char[] cbuf @AT@ 5940 @LENGTH@ 17
------INS ArrayType@@char[] @TO@ SingleVariableDeclaration@@final char cbuf[] @AT@ 5946 @LENGTH@ 6
---------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 5946 @LENGTH@ 4
------DEL PrimitiveType@@char @AT@ 5946 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(LambdaOperations.getAlias.toString(),"listAliases") @TO@ MethodInvocation:assertEquals(LambdaOperations.listAliases.toString(),"listAliases") @AT@ 4379 @LENGTH@ 66
---UPD MethodInvocation@@assertEquals(LambdaOperations.getAlias.toString(),"listAliases") @TO@ assertEquals(LambdaOperations.listAliases.toString(),"listAliases") @AT@ 4379 @LENGTH@ 65
------UPD SimpleName@@MethodName:assertEquals:[LambdaOperations.getAlias.toString(), "listAliases"] @TO@ MethodName:assertEquals:[LambdaOperations.listAliases.toString(), "listAliases"] @AT@ 4379 @LENGTH@ 65
---------UPD MethodInvocation@@LambdaOperations.getAlias.toString() @TO@ LambdaOperations.listAliases.toString() @AT@ 4392 @LENGTH@ 36
------------UPD QualifiedName@@Name:LambdaOperations.getAlias @TO@ Name:LambdaOperations.listAliases @AT@ 4392 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(new Integer(5),config.getCorePoolSize()) @TO@ MethodInvocation:Assert.assertEquals("5",config.getCorePoolSize()) @AT@ 2731 @LENGTH@ 62
---UPD MethodInvocation@@Assert.assertEquals(new Integer(5),config.getCorePoolSize()) @TO@ Assert.assertEquals("5",config.getCorePoolSize()) @AT@ 2731 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertEquals:[new Integer(5), config.getCorePoolSize()] @TO@ MethodName:assertEquals:["5", config.getCorePoolSize()] @AT@ 2738 @LENGTH@ 54
---------DEL ClassInstanceCreation@@Integer[5] @AT@ 2751 @LENGTH@ 14
------------DEL New@@new @AT@ 2751 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2755 @LENGTH@ 7
------------DEL NumberLiteral@@5 @AT@ 2763 @LENGTH@ 1
---------INS StringLiteral@@"5" @TO@ SimpleName@@MethodName:assertEquals:[new Integer(5), config.getCorePoolSize()] @AT@ 2751 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove") @TO@ MethodInvocation:this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=sso)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove") @AT@ 2381 @LENGTH@ 280
---UPD MethodInvocation@@this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove") @TO@ this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=sso)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=other:remove") @AT@ 2381 @LENGTH@ 266
------UPD MethodInvocation@@MethodName:setup:["/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)"] @TO@ MethodName:setup:["/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=sso)"] @AT@ 2381 @LENGTH@ 158
---------UPD StringLiteral@@"/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=web)" @TO@ "/subsystem=distributable-web/hotrod-single-sign-on-management=other:add(remote-cache-container=sso)" @AT@ 2437 @LENGTH@ 101


UPD ExpressionStatement@@MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @AT@ 2473 @LENGTH@ 679
---UPD MethodInvocation@@from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @AT@ 2473 @LENGTH@ 678
------UPD MethodInvocation@@MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder"] @AT@ 2473 @LENGTH@ 97
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2478 @LENGTH@ 91
------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2517 @LENGTH@ 52


UPD ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/").with(bearerToken("token"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token [token] isn't active"))) @TO@ MethodInvocation:this.mvc.perform(get("/").with(bearerToken("token"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token isn't active"))) @AT@ 43132 @LENGTH@ 224
---UPD MethodInvocation@@this.mvc.perform(get("/").with(bearerToken("token"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token [token] isn't active"))) @TO@ this.mvc.perform(get("/").with(bearerToken("token"))).andExpect(status().isUnauthorized()).andExpect(header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token isn't active"))) @AT@ 43132 @LENGTH@ 223
------UPD SimpleName@@MethodName:andExpect:[header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token [token] isn't active"))] @TO@ MethodName:andExpect:[header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token isn't active"))] @AT@ 43238 @LENGTH@ 117
---------UPD MethodInvocation@@header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token [token] isn't active")) @TO@ header().string(HttpHeaders.WWW_AUTHENTICATE,containsString("Provided token isn't active")) @AT@ 43248 @LENGTH@ 106
------------UPD SimpleName@@MethodName:string:[HttpHeaders.WWW_AUTHENTICATE, containsString("Provided token [token] isn't active")] @TO@ MethodName:string:[HttpHeaders.WWW_AUTHENTICATE, containsString("Provided token isn't active")] @AT@ 43257 @LENGTH@ 97
---------------UPD MethodInvocation@@containsString("Provided token [token] isn't active") @TO@ containsString("Provided token isn't active") @AT@ 43300 @LENGTH@ 53
------------------UPD SimpleName@@MethodName:containsString:["Provided token [token] isn't active"] @TO@ MethodName:containsString:["Provided token isn't active"] @AT@ 43300 @LENGTH@ 53
---------------------UPD StringLiteral@@"Provided token [token] isn't active" @TO@ "Provided token isn't active" @AT@ 43315 @LENGTH@ 37


UPD Block@@ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2738 @LENGTH@ 204
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2738 @LENGTH@ 204
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 2948 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2962 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 2968 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2968 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2972 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2989 @LENGTH@ 72
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2738 @LENGTH@ 204
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  DetectedObjects result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 2948 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2962 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 2968 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2968 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2972 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 2989 @LENGTH@ 72


UPD VariableDeclarationStatement@@OAuth2AuthorizationRequest expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build(); @TO@ OAuth2AuthorizationRequest expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Map::clear).attributes(Map::clear).build(); @AT@ 5128 @LENGTH@ 243
---UPD VariableDeclarationFragment@@expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @TO@ expectedAuthorizationRequest=this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Map::clear).attributes(Map::clear).build() @AT@ 5155 @LENGTH@ 215
------UPD MethodInvocation@@this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Collections.emptyMap()).attributes(Collections.emptyMap()).build() @TO@ this.authorizationRequestBuilder.scopes(null).state(null).additionalParameters(Map::clear).attributes(Map::clear).build() @AT@ 5190 @LENGTH@ 180
---------UPD MethodInvocation@@MethodName:attributes:[Collections.emptyMap()] @TO@ MethodName:attributes:[Map::clear] @AT@ 5190 @LENGTH@ 165
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5332 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5332 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5344 @LENGTH@ 10
---------UPD MethodInvocation@@MethodName:additionalParameters:[Collections.emptyMap()] @TO@ MethodName:additionalParameters:[Map::clear] @AT@ 5190 @LENGTH@ 123
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5290 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5290 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5302 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @TO@ TypeDeclaration@@[public]OAuth2BodyExtractorsTests,  @AT@ 3628 @LENGTH@ 530
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @AT@ 3628 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @AT@ 3635 @LENGTH@ 4
---INS SimpleName@@MethodName:oauth2AccessTokenResponseWhenEmptyThenException @TO@ MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @AT@ 3640 @LENGTH@ 47
---INS VariableDeclarationStatement@@BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage> extractor=OAuth2BodyExtractors.oauth2AccessTokenResponse(); @TO@ MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @AT@ 3694 @LENGTH@ 139
------INS ParameterizedType@@BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage> @TO@ VariableDeclarationStatement@@BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage> extractor=OAuth2BodyExtractors.oauth2AccessTokenResponse(); @AT@ 3694 @LENGTH@ 72
---------INS SimpleType@@BodyExtractor @TO@ ParameterizedType@@BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage> @AT@ 3694 @LENGTH@ 13
---------INS ParameterizedType@@Mono<OAuth2AccessTokenResponse> @TO@ ParameterizedType@@BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage> @AT@ 3708 @LENGTH@ 31
------------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<OAuth2AccessTokenResponse> @AT@ 3708 @LENGTH@ 4
------------INS SimpleType@@OAuth2AccessTokenResponse @TO@ ParameterizedType@@Mono<OAuth2AccessTokenResponse> @AT@ 3713 @LENGTH@ 25
---------INS SimpleType@@ReactiveHttpInputMessage @TO@ ParameterizedType@@BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage> @AT@ 3741 @LENGTH@ 24
------INS VariableDeclarationFragment@@extractor=OAuth2BodyExtractors.oauth2AccessTokenResponse() @TO@ VariableDeclarationStatement@@BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage> extractor=OAuth2BodyExtractors.oauth2AccessTokenResponse(); @AT@ 3767 @LENGTH@ 65
---------INS SimpleName@@extractor @TO@ VariableDeclarationFragment@@extractor=OAuth2BodyExtractors.oauth2AccessTokenResponse() @AT@ 3767 @LENGTH@ 9
---------INS MethodInvocation@@OAuth2BodyExtractors.oauth2AccessTokenResponse() @TO@ VariableDeclarationFragment@@extractor=OAuth2BodyExtractors.oauth2AccessTokenResponse() @AT@ 3779 @LENGTH@ 53
------------INS SimpleName@@Name:OAuth2BodyExtractors @TO@ MethodInvocation@@OAuth2BodyExtractors.oauth2AccessTokenResponse() @AT@ 3779 @LENGTH@ 20
------------INS SimpleName@@MethodName:oauth2AccessTokenResponse:[] @TO@ MethodInvocation@@OAuth2BodyExtractors.oauth2AccessTokenResponse() @AT@ 3805 @LENGTH@ 27
---INS VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(HttpStatus.OK); @TO@ MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @AT@ 3837 @LENGTH@ 76
------INS SimpleType@@MockClientHttpResponse @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(HttpStatus.OK); @AT@ 3837 @LENGTH@ 22
------INS VariableDeclarationFragment@@response=new MockClientHttpResponse(HttpStatus.OK) @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(HttpStatus.OK); @AT@ 3860 @LENGTH@ 52
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(HttpStatus.OK) @AT@ 3860 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockClientHttpResponse[HttpStatus.OK] @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(HttpStatus.OK) @AT@ 3871 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@MockClientHttpResponse[HttpStatus.OK] @AT@ 3871 @LENGTH@ 3
------------INS SimpleType@@MockClientHttpResponse @TO@ ClassInstanceCreation@@MockClientHttpResponse[HttpStatus.OK] @AT@ 3875 @LENGTH@ 22
------------INS QualifiedName@@HttpStatus.OK @TO@ ClassInstanceCreation@@MockClientHttpResponse[HttpStatus.OK] @AT@ 3898 @LENGTH@ 13
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.OK @AT@ 3898 @LENGTH@ 10
---------------INS SimpleName@@OK @TO@ QualifiedName@@HttpStatus.OK @AT@ 3909 @LENGTH@ 2
---INS VariableDeclarationStatement@@Mono<OAuth2AccessTokenResponse> result=extractor.extract(response,this.context); @TO@ MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @AT@ 3917 @LENGTH@ 83
------INS ParameterizedType@@Mono<OAuth2AccessTokenResponse> @TO@ VariableDeclarationStatement@@Mono<OAuth2AccessTokenResponse> result=extractor.extract(response,this.context); @AT@ 3917 @LENGTH@ 31
---------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<OAuth2AccessTokenResponse> @AT@ 3917 @LENGTH@ 4
---------INS SimpleType@@OAuth2AccessTokenResponse @TO@ ParameterizedType@@Mono<OAuth2AccessTokenResponse> @AT@ 3922 @LENGTH@ 25
------INS VariableDeclarationFragment@@result=extractor.extract(response,this.context) @TO@ VariableDeclarationStatement@@Mono<OAuth2AccessTokenResponse> result=extractor.extract(response,this.context); @AT@ 3949 @LENGTH@ 50
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=extractor.extract(response,this.context) @AT@ 3949 @LENGTH@ 6
---------INS MethodInvocation@@extractor.extract(response,this.context) @TO@ VariableDeclarationFragment@@result=extractor.extract(response,this.context) @AT@ 3958 @LENGTH@ 41
------------INS SimpleName@@Name:extractor @TO@ MethodInvocation@@extractor.extract(response,this.context) @AT@ 3958 @LENGTH@ 9
------------INS SimpleName@@MethodName:extract:[response, this.context] @TO@ MethodInvocation@@extractor.extract(response,this.context) @AT@ 3968 @LENGTH@ 31
---------------INS SimpleName@@response @TO@ SimpleName@@MethodName:extract:[response, this.context] @AT@ 3976 @LENGTH@ 8
---------------INS FieldAccess@@this.context @TO@ SimpleName@@MethodName:extract:[response, this.context] @AT@ 3986 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 3986 @LENGTH@ 4
------------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 3991 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("Empty OAuth 2.0 Access Token Response") @TO@ MethodDeclaration@@public, void, MethodName:oauth2AccessTokenResponseWhenEmptyThenException,  @AT@ 4004 @LENGTH@ 151
------INS MethodInvocation@@assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("Empty OAuth 2.0 Access Token Response") @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("Empty OAuth 2.0 Access Token Response") @AT@ 4004 @LENGTH@ 150
---------INS MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @TO@ MethodInvocation@@assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("Empty OAuth 2.0 Access Token Response") @AT@ 4004 @LENGTH@ 83
------------INS TypeLiteral@@OAuth2AuthorizationException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthorizationException.class] @AT@ 4052 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:assertThatCode:[result::block] @TO@ MethodInvocation@@assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("Empty OAuth 2.0 Access Token Response") @AT@ 4004 @LENGTH@ 29
---------INS SimpleName@@MethodName:hasMessageContaining:["Empty OAuth 2.0 Access Token Response"] @TO@ MethodInvocation@@assertThatCode(result::block).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("Empty OAuth 2.0 Access Token Response") @AT@ 4093 @LENGTH@ 61
------------INS StringLiteral@@"Empty OAuth 2.0 Access Token Response" @TO@ SimpleName@@MethodName:hasMessageContaining:["Empty OAuth 2.0 Access Token Response"] @AT@ 4114 @LENGTH@ 39


INS FieldDeclaration@@private, static, final, List<Class<?>>, [CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class)] @TO@ TypeDeclaration@@[public, abstract]Jsr310Converters,  @AT@ 1790 @LENGTH@ 177
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, List<Class<?>>, [CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class)] @AT@ 1790 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, List<Class<?>>, [CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class)] @AT@ 1798 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, List<Class<?>>, [CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class)] @AT@ 1805 @LENGTH@ 5
---INS ParameterizedType@@List<Class<?>> @TO@ FieldDeclaration@@private, static, final, List<Class<?>>, [CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class)] @AT@ 1811 @LENGTH@ 14
------INS SimpleType@@List @TO@ ParameterizedType@@List<Class<?>> @AT@ 1811 @LENGTH@ 4
------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@List<Class<?>> @AT@ 1816 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1816 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1822 @LENGTH@ 1
---INS VariableDeclarationFragment@@CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class) @TO@ FieldDeclaration@@private, static, final, List<Class<?>>, [CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class)] @AT@ 1826 @LENGTH@ 140
------INS SimpleName@@CLASSES @TO@ VariableDeclarationFragment@@CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class) @AT@ 1826 @LENGTH@ 7
------INS MethodInvocation@@Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class) @TO@ VariableDeclarationFragment@@CLASSES=Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class) @AT@ 1836 @LENGTH@ 130
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class) @AT@ 1836 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @TO@ MethodInvocation@@Arrays.asList(LocalDateTime.class,LocalDate.class,LocalTime.class,Instant.class,ZoneId.class,Duration.class,Period.class) @AT@ 1843 @LENGTH@ 123
------------INS TypeLiteral@@LocalDateTime.class @TO@ SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @AT@ 1850 @LENGTH@ 19
------------INS TypeLiteral@@LocalDate.class @TO@ SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @AT@ 1871 @LENGTH@ 15
------------INS TypeLiteral@@LocalTime.class @TO@ SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @AT@ 1888 @LENGTH@ 15
------------INS TypeLiteral@@Instant.class @TO@ SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @AT@ 1908 @LENGTH@ 13
------------INS TypeLiteral@@ZoneId.class @TO@ SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @AT@ 1923 @LENGTH@ 12
------------INS TypeLiteral@@Duration.class @TO@ SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @AT@ 1937 @LENGTH@ 14
------------INS TypeLiteral@@Period.class @TO@ SimpleName@@MethodName:asList:[LocalDateTime.class, LocalDate.class, LocalTime.class, Instant.class, ZoneId.class, Duration.class, Period.class] @AT@ 1953 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2491 @LENGTH@ 697
---UPD MethodInvocation@@from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2491 @LENGTH@ 696
------UPD MethodInvocation@@MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder"] @AT@ 2491 @LENGTH@ 97
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2496 @LENGTH@ 91
------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2535 @LENGTH@ 52


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unsupported algorithm of " + header.getAlgorithm()) @TO@ ClassInstanceCreation:new BadJwtException("Unsupported algorithm of " + header.getAlgorithm()) @AT@ 1715 @LENGTH@ 88
---UPD ClassInstanceCreation@@IllegalArgumentException["Unsupported algorithm of " + header.getAlgorithm()] @TO@ BadJwtException["Unsupported algorithm of " + header.getAlgorithm()] @AT@ 1721 @LENGTH@ 81
------UPD SimpleType@@IllegalArgumentException @TO@ BadJwtException @AT@ 1725 @LENGTH@ 24


UPD ExpressionStatement@@Assignment:compositeClient=new DefaultCompositeApiClient(configuration,format,apiVersion,session,httpClient) @TO@ Assignment:compositeClient=new DefaultCompositeApiClient(configuration,format,apiVersion,session,httpClient,loginConfig) @AT@ 3063 @LENGTH@ 104
---UPD Assignment@@compositeClient=new DefaultCompositeApiClient(configuration,format,apiVersion,session,httpClient) @TO@ compositeClient=new DefaultCompositeApiClient(configuration,format,apiVersion,session,httpClient,loginConfig) @AT@ 3063 @LENGTH@ 103
------UPD ClassInstanceCreation@@DefaultCompositeApiClient[configuration, format, apiVersion, session, httpClient] @TO@ DefaultCompositeApiClient[configuration, format, apiVersion, session, httpClient, loginConfig] @AT@ 3081 @LENGTH@ 85
---------INS SimpleName@@loginConfig @TO@ ClassInstanceCreation@@DefaultCompositeApiClient[configuration, format, apiVersion, session, httpClient] @AT@ 3167 @LENGTH@ 11


UPD VariableDeclarationStatement@@String tokenValue=new String(Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey())); @TO@ String tokenValue=new String(Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey())); @AT@ 12148 @LENGTH@ 96
---UPD VariableDeclarationFragment@@tokenValue=new String(Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey())) @TO@ tokenValue=new String(Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey())) @AT@ 12155 @LENGTH@ 88
------UPD ClassInstanceCreation@@String[Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey())] @TO@ String[Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey())] @AT@ 12168 @LENGTH@ 75
---------UPD MethodInvocation@@Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey()) @TO@ Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey()) @AT@ 12179 @LENGTH@ 63
------------UPD SimpleName@@MethodName:encodeBase64:[DEFAULT_TOKEN_GENERATOR.generateKey()] @TO@ MethodName:encodeBase64URLSafe:[DEFAULT_TOKEN_GENERATOR.generateKey()] @AT@ 12186 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:concreteNodeDescription.doWithAssociations(populateFrom(queryResult,propertyAccessor,relationships,knownObjects)) @TO@ MethodInvocation:concreteNodeDescription.doWithAssociations(populateFrom(queryResult,propertyAccessor,isConstructorParameter,relationships,knownObjects)) @AT@ 10440 @LENGTH@ 122
---UPD MethodInvocation@@concreteNodeDescription.doWithAssociations(populateFrom(queryResult,propertyAccessor,relationships,knownObjects)) @TO@ concreteNodeDescription.doWithAssociations(populateFrom(queryResult,propertyAccessor,isConstructorParameter,relationships,knownObjects)) @AT@ 10440 @LENGTH@ 121
------UPD SimpleName@@MethodName:doWithAssociations:[populateFrom(queryResult,propertyAccessor,relationships,knownObjects)] @TO@ MethodName:doWithAssociations:[populateFrom(queryResult,propertyAccessor,isConstructorParameter,relationships,knownObjects)] @AT@ 10464 @LENGTH@ 97
---------UPD MethodInvocation@@populateFrom(queryResult,propertyAccessor,relationships,knownObjects) @TO@ populateFrom(queryResult,propertyAccessor,isConstructorParameter,relationships,knownObjects) @AT@ 10488 @LENGTH@ 72
------------UPD SimpleName@@MethodName:populateFrom:[queryResult, propertyAccessor, relationships, knownObjects] @TO@ MethodName:populateFrom:[queryResult, propertyAccessor, isConstructorParameter, relationships, knownObjects] @AT@ 10488 @LENGTH@ 72
---------------INS SimpleName@@isConstructorParameter @TO@ SimpleName@@MethodName:populateFrom:[queryResult, propertyAccessor, relationships, knownObjects] @AT@ 10532 @LENGTH@ 22


UPD TypeDeclaration@@[public, abstract]SessionDestroyedEvent, ApplicationEvent @TO@ [public, abstract]SessionDestroyedEvent, AbstractSessionEvent @AT@ 995 @LENGTH@ 623
---UPD SimpleType@@ApplicationEvent @TO@ AbstractSessionEvent @AT@ 1047 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:chainedNestedOrsInSameDocument,  @TO@ TypeDeclaration@@[@ExtendWith(MockitoExtension.class), public]SpringDataMongodbSerializerUnitTests,  @AT@ 7268 @LENGTH@ 418
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:chainedNestedOrsInSameDocument,  @AT@ 7268 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:chainedNestedOrsInSameDocument,  @AT@ 7275 @LENGTH@ 4
---INS SimpleName@@MethodName:chainedNestedOrsInSameDocument @TO@ MethodDeclaration@@public, void, MethodName:chainedNestedOrsInSameDocument,  @AT@ 7280 @LENGTH@ 30
---INS VariableDeclarationStatement@@Predicate predicate=QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")); @TO@ MethodDeclaration@@public, void, MethodName:chainedNestedOrsInSameDocument,  @AT@ 7318 @LENGTH@ 170
------INS SimpleType@@Predicate @TO@ VariableDeclarationStatement@@Predicate predicate=QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")); @AT@ 7318 @LENGTH@ 9
------INS VariableDeclarationFragment@@predicate=QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @TO@ VariableDeclarationStatement@@Predicate predicate=QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")); @AT@ 7328 @LENGTH@ 159
---------INS SimpleName@@predicate @TO@ VariableDeclarationFragment@@predicate=QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @AT@ 7328 @LENGTH@ 9
---------INS MethodInvocation@@QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @TO@ VariableDeclarationFragment@@predicate=QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @AT@ 7340 @LENGTH@ 147
------------INS MethodInvocation@@MethodName:or:[QPerson.person.lastname.eq("lastname_value")] @TO@ MethodInvocation@@QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @AT@ 7340 @LENGTH@ 100
---------------INS MethodInvocation@@QPerson.person.lastname.eq("lastname_value") @TO@ MethodInvocation@@MethodName:or:[QPerson.person.lastname.eq("lastname_value")] @AT@ 7395 @LENGTH@ 44
------------------INS QualifiedName@@Name:QPerson.person.lastname @TO@ MethodInvocation@@QPerson.person.lastname.eq("lastname_value") @AT@ 7395 @LENGTH@ 23
------------------INS SimpleName@@MethodName:eq:["lastname_value"] @TO@ MethodInvocation@@QPerson.person.lastname.eq("lastname_value") @AT@ 7419 @LENGTH@ 20
---------------------INS StringLiteral@@"lastname_value" @TO@ SimpleName@@MethodName:eq:["lastname_value"] @AT@ 7422 @LENGTH@ 16
------------INS MethodInvocation@@MethodName:eq:["firstname_value"] @TO@ MethodInvocation@@QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @AT@ 7340 @LENGTH@ 46
---------------INS StringLiteral@@"firstname_value" @TO@ MethodInvocation@@MethodName:eq:["firstname_value"] @AT@ 7368 @LENGTH@ 17
------------INS QualifiedName@@Name:QPerson.person.firstname @TO@ MethodInvocation@@QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @AT@ 7340 @LENGTH@ 24
------------INS SimpleName@@MethodName:or:[QPerson.person.address.street.eq("spring")] @TO@ MethodInvocation@@QPerson.person.firstname.eq("firstname_value").or(QPerson.person.lastname.eq("lastname_value")).or(QPerson.person.address.street.eq("spring")) @AT@ 7441 @LENGTH@ 46
---------------INS MethodInvocation@@QPerson.person.address.street.eq("spring") @TO@ SimpleName@@MethodName:or:[QPerson.person.address.street.eq("spring")] @AT@ 7444 @LENGTH@ 42
------------------INS QualifiedName@@Name:QPerson.person.address.street @TO@ MethodInvocation@@QPerson.person.address.street.eq("spring") @AT@ 7444 @LENGTH@ 29
------------------INS SimpleName@@MethodName:eq:["spring"] @TO@ MethodInvocation@@QPerson.person.address.street.eq("spring") @AT@ 7474 @LENGTH@ 12
---------------------INS StringLiteral@@"spring" @TO@ SimpleName@@MethodName:eq:["spring"] @AT@ 7477 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(serializer.handle(predicate)).isEqualTo(Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}")) @TO@ MethodDeclaration@@public, void, MethodName:chainedNestedOrsInSameDocument,  @AT@ 7492 @LENGTH@ 191
------INS MethodInvocation@@assertThat(serializer.handle(predicate)).isEqualTo(Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(serializer.handle(predicate)).isEqualTo(Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}")) @AT@ 7492 @LENGTH@ 190
---------INS MethodInvocation@@MethodName:assertThat:[serializer.handle(predicate)] @TO@ MethodInvocation@@assertThat(serializer.handle(predicate)).isEqualTo(Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}")) @AT@ 7492 @LENGTH@ 40
------------INS MethodInvocation@@serializer.handle(predicate) @TO@ MethodInvocation@@MethodName:assertThat:[serializer.handle(predicate)] @AT@ 7503 @LENGTH@ 28
---------------INS SimpleName@@Name:serializer @TO@ MethodInvocation@@serializer.handle(predicate) @AT@ 7503 @LENGTH@ 10
---------------INS SimpleName@@MethodName:handle:[predicate] @TO@ MethodInvocation@@serializer.handle(predicate) @AT@ 7514 @LENGTH@ 17
------------------INS SimpleName@@predicate @TO@ SimpleName@@MethodName:handle:[predicate] @AT@ 7521 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:[Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}")] @TO@ MethodInvocation@@assertThat(serializer.handle(predicate)).isEqualTo(Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}")) @AT@ 7533 @LENGTH@ 149
------------INS MethodInvocation@@Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}") @TO@ SimpleName@@MethodName:isEqualTo:[Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}")] @AT@ 7543 @LENGTH@ 138
---------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}") @AT@ 7543 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parse:["{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}"] @TO@ MethodInvocation@@Document.parse("{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}") @AT@ 7552 @LENGTH@ 129
------------------INS StringLiteral@@"{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}" @TO@ SimpleName@@MethodName:parse:["{\"$or\": [{\"firstname\": \"firstname_value\"}, {\"lastname\": \"lastname_value\"}, {\"add.street\": \"spring\"}]}"] @AT@ 7563 @LENGTH@ 117


UPD MethodDeclaration@@T, T extends TerminalExposesSkip & TerminalExposesLimit & BuildableStatement, MethodName:orderBy, SortItem... sortItem,  @TO@ OngoingMatchAndReturnWithOrder, MethodName:orderBy, SortItem... sortItem,  @AT@ 10931 @LENGTH@ 30
---UPD SimpleType@@T @TO@ OngoingMatchAndReturnWithOrder @AT@ 10929 @LENGTH@ 1


UPD Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey);  }  if (factoryClass.isAssignableFrom(type)) {    T answer=factoryClass.cast(context.getInjector().newInstance(type,false));    LOG.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer);    return Optional.of(answer);  } else {    throw new IllegalArgumentException("Type is not a " + factoryClass.getSimpleName() + " implementation. Found: "+ type.getName());  }} @TO@ ThenBody:{  if (log.isDebugEnabled()) {    log.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey);  }  if (factoryClass.isAssignableFrom(type)) {    T answer=factoryClass.cast(context.getInjector().newInstance(type,false));    log.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer);    return Optional.of(answer);  } else {    throw new IllegalArgumentException("Type is not a " + factoryClass.getSimpleName() + " implementation. Found: "+ type.getName());  }} @AT@ 1848 @LENGTH@ 673
---UPD IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey);} @TO@ if (log.isDebugEnabled()) {  log.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey);} @AT@ 1862 @LENGTH@ 180
------UPD MethodInvocation@@LOG.isDebugEnabled() @TO@ log.isDebugEnabled() @AT@ 1866 @LENGTH@ 20
---------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 1866 @LENGTH@ 3
------UPD Block@@ThenBody:{  LOG.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey);} @TO@ ThenBody:{  log.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey);} @AT@ 1888 @LENGTH@ 154
---------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey) @TO@ MethodInvocation:log.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey) @AT@ 1906 @LENGTH@ 122
------------UPD MethodInvocation@@LOG.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey) @TO@ log.debug("Found {}: {} via: {}{}",factoryClass.getSimpleName(),type.getName(),FactoryFinder.DEFAULT_PATH,factoryKey) @AT@ 1906 @LENGTH@ 121
---------------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 1906 @LENGTH@ 3
---UPD IfStatement@@if (factoryClass.isAssignableFrom(type)) {  T answer=factoryClass.cast(context.getInjector().newInstance(type,false));  LOG.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer);  return Optional.of(answer);} else {  throw new IllegalArgumentException("Type is not a " + factoryClass.getSimpleName() + " implementation. Found: "+ type.getName());} @TO@ if (factoryClass.isAssignableFrom(type)) {  T answer=factoryClass.cast(context.getInjector().newInstance(type,false));  log.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer);  return Optional.of(answer);} else {  throw new IllegalArgumentException("Type is not a " + factoryClass.getSimpleName() + " implementation. Found: "+ type.getName());} @AT@ 2055 @LENGTH@ 456
------UPD Block@@ThenBody:{  T answer=factoryClass.cast(context.getInjector().newInstance(type,false));  LOG.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer);  return Optional.of(answer);} @TO@ ThenBody:{  T answer=factoryClass.cast(context.getInjector().newInstance(type,false));  log.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer);  return Optional.of(answer);} @AT@ 2096 @LENGTH@ 247
---------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer) @TO@ MethodInvocation:log.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer) @AT@ 2208 @LENGTH@ 77
------------UPD MethodInvocation@@LOG.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer) @TO@ log.debug("Detected and using {}: {}",factoryClass.getSimpleName(),answer) @AT@ 2208 @LENGTH@ 76
---------------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 2208 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:vars.put("scope",OAuth2Utils.formatParameterList(accessToken.getScope())) @TO@ MethodInvocation:vars.put(OAuth2Utils.SCOPE,OAuth2Utils.formatParameterList(accessToken.getScope())) @AT@ 19378 @LENGTH@ 75
---UPD MethodInvocation@@vars.put("scope",OAuth2Utils.formatParameterList(accessToken.getScope())) @TO@ vars.put(OAuth2Utils.SCOPE,OAuth2Utils.formatParameterList(accessToken.getScope())) @AT@ 19378 @LENGTH@ 74
------UPD SimpleName@@MethodName:put:["scope", OAuth2Utils.formatParameterList(accessToken.getScope())] @TO@ MethodName:put:[OAuth2Utils.SCOPE, OAuth2Utils.formatParameterList(accessToken.getScope())] @AT@ 19383 @LENGTH@ 69
---------INS QualifiedName@@OAuth2Utils.SCOPE @TO@ SimpleName@@MethodName:put:["scope", OAuth2Utils.formatParameterList(accessToken.getScope())] @AT@ 19387 @LENGTH@ 17
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.SCOPE @AT@ 19387 @LENGTH@ 11
------------INS SimpleName@@SCOPE @TO@ QualifiedName@@OAuth2Utils.SCOPE @AT@ 19399 @LENGTH@ 5
---------DEL StringLiteral@@"scope" @AT@ 19387 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(null).build()).doesNotThrowAnyException() @TO@ MethodInvocation:assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build()).doesNotThrowAnyException() @AT@ 3681 @LENGTH@ 292
---UPD MethodInvocation@@assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(null).build()).doesNotThrowAnyException() @TO@ assertThatCode(() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build()).doesNotThrowAnyException() @AT@ 3681 @LENGTH@ 291
------UPD MethodInvocation@@MethodName:assertThatCode:[() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(null).build()] @TO@ MethodName:assertThatCode:[() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build()] @AT@ 3681 @LENGTH@ 259
---------UPD LambdaExpression@@() -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(null).build() @TO@ () -> OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build() @AT@ 3696 @LENGTH@ 243
------------UPD MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters(null).build() @TO@ OAuth2AuthorizationRequest.authorizationCode().authorizationUri(AUTHORIZATION_URI).clientId(CLIENT_ID).redirectUri(REDIRECT_URI).scopes(SCOPES).state(STATE).additionalParameters((Map)null).build() @AT@ 3706 @LENGTH@ 233
---------------UPD MethodInvocation@@MethodName:additionalParameters:[null] @TO@ MethodName:additionalParameters:[(Map)null] @AT@ 3706 @LENGTH@ 219
------------------DEL NullLiteral@@null @AT@ 3920 @LENGTH@ 4
------------------INS CastExpression@@(Map)null @TO@ MethodInvocation@@MethodName:additionalParameters:[null] @AT@ 4078 @LENGTH@ 10
---------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)null @AT@ 4079 @LENGTH@ 3
---------------------INS NullLiteral@@null @TO@ CastExpression@@(Map)null @AT@ 4084 @LENGTH@ 4


UPD IfStatement@@if (nonSharedLockedTables == null) {  return true;} @TO@ if (nonSharedLockedTables.isEmpty()) {  return true;} @AT@ 3486 @LENGTH@ 81
---DEL InfixExpression@@nonSharedLockedTables == null @AT@ 3490 @LENGTH@ 29
------DEL SimpleName@@nonSharedLockedTables @AT@ 3490 @LENGTH@ 21
------DEL Operator@@== @AT@ 3511 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 3515 @LENGTH@ 4
---INS MethodInvocation@@nonSharedLockedTables.isEmpty() @TO@ IfStatement@@if (nonSharedLockedTables == null) {  return true;} @AT@ 3520 @LENGTH@ 31
------INS SimpleName@@Name:nonSharedLockedTables @TO@ MethodInvocation@@nonSharedLockedTables.isEmpty() @AT@ 3520 @LENGTH@ 21
------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@nonSharedLockedTables.isEmpty() @AT@ 3542 @LENGTH@ 9


INS MethodDeclaration@@void, MethodName:distinctAppliesFilterQuery,  @TO@ TypeDeclaration@@[@ExtendWith(MongoTemplateExtension.class)]ExecutableFindOperationSupportTests,  @AT@ 17275 @LENGTH@ 257
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:distinctAppliesFilterQuery,  @AT@ 17270 @LENGTH@ 4
---INS SimpleName@@MethodName:distinctAppliesFilterQuery @TO@ MethodDeclaration@@void, MethodName:distinctAppliesFilterQuery,  @AT@ 17275 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:assertThat(template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all()).containsExactlyInAnyOrder("luke") @TO@ MethodDeclaration@@void, MethodName:distinctAppliesFilterQuery,  @AT@ 17309 @LENGTH@ 220
------INS MethodInvocation@@assertThat(template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all()).containsExactlyInAnyOrder("luke") @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all()).containsExactlyInAnyOrder("luke") @AT@ 17309 @LENGTH@ 219
---------INS MethodInvocation@@MethodName:assertThat:[template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all()] @TO@ MethodInvocation@@assertThat(template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all()).containsExactlyInAnyOrder("luke") @AT@ 17309 @LENGTH@ 185
------------INS MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @TO@ MethodInvocation@@MethodName:assertThat:[template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all()] @AT@ 17320 @LENGTH@ 167
---------------INS MethodInvocation@@MethodName:as:[String.class] @TO@ MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @AT@ 17320 @LENGTH@ 153
------------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:as:[String.class] @AT@ 17460 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:matching:[where("lastname").is(luke.lastname)] @TO@ MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @AT@ 17320 @LENGTH@ 128
------------------INS MethodInvocation@@where("lastname").is(luke.lastname) @TO@ MethodInvocation@@MethodName:matching:[where("lastname").is(luke.lastname)] @AT@ 17412 @LENGTH@ 35
---------------------INS MethodInvocation@@MethodName:where:["lastname"] @TO@ MethodInvocation@@where("lastname").is(luke.lastname) @AT@ 17412 @LENGTH@ 17
------------------------INS StringLiteral@@"lastname" @TO@ MethodInvocation@@MethodName:where:["lastname"] @AT@ 17418 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:is:[luke.lastname] @TO@ MethodInvocation@@where("lastname").is(luke.lastname) @AT@ 17430 @LENGTH@ 17
------------------------INS QualifiedName@@luke.lastname @TO@ SimpleName@@MethodName:is:[luke.lastname] @AT@ 17433 @LENGTH@ 13
---------------------------INS SimpleName@@luke @TO@ QualifiedName@@luke.lastname @AT@ 17433 @LENGTH@ 4
---------------------------INS SimpleName@@lastname @TO@ QualifiedName@@luke.lastname @AT@ 17438 @LENGTH@ 8
---------------INS MethodInvocation@@MethodName:distinct:["firstname"] @TO@ MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @AT@ 17320 @LENGTH@ 74
------------------INS StringLiteral@@"firstname" @TO@ MethodInvocation@@MethodName:distinct:["firstname"] @AT@ 17382 @LENGTH@ 11
---------------INS MethodInvocation@@MethodName:inCollection:[STAR_WARS] @TO@ MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @AT@ 17320 @LENGTH@ 52
------------------INS SimpleName@@STAR_WARS @TO@ MethodInvocation@@MethodName:inCollection:[STAR_WARS] @AT@ 17362 @LENGTH@ 9
---------------INS MethodInvocation@@MethodName:query:[Person.class] @TO@ MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @AT@ 17320 @LENGTH@ 28
------------------INS TypeLiteral@@Person.class @TO@ MethodInvocation@@MethodName:query:[Person.class] @AT@ 17335 @LENGTH@ 12
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @AT@ 17320 @LENGTH@ 8
---------------INS SimpleName@@MethodName:all:[] @TO@ MethodInvocation@@template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all() @AT@ 17482 @LENGTH@ 5
---------INS SimpleName@@MethodName:containsExactlyInAnyOrder:["luke"] @TO@ MethodInvocation@@assertThat(template.query(Person.class).inCollection(STAR_WARS).distinct("firstname").matching(where("lastname").is(luke.lastname)).as(String.class).all()).containsExactlyInAnyOrder("luke") @AT@ 17495 @LENGTH@ 33
------------INS StringLiteral@@"luke" @TO@ SimpleName@@MethodName:containsExactlyInAnyOrder:["luke"] @AT@ 17521 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:AWS2S3ClientStandardImpl, AWS2S3Configuration configuration, int maxConnections,  @TO@ public, voidMethodName:AWS2S3ClientStandardImpl, AWS2S3Configuration configuration,  @AT@ 2007 @LENGTH@ 259
---DEL SingleVariableDeclaration@@int maxConnections @AT@ 2074 @LENGTH@ 18
------DEL PrimitiveType@@int @AT@ 2074 @LENGTH@ 3
------DEL SimpleName@@maxConnections @AT@ 2078 @LENGTH@ 14
---DEL ExpressionStatement@@Assignment:this.maxConnections=maxConnections @AT@ 2223 @LENGTH@ 37
------DEL Assignment@@this.maxConnections=maxConnections @AT@ 2223 @LENGTH@ 36
---------DEL FieldAccess@@this.maxConnections @AT@ 2223 @LENGTH@ 19
------------DEL ThisExpression@@this @AT@ 2223 @LENGTH@ 4
------------DEL SimpleName@@maxConnections @AT@ 2228 @LENGTH@ 14
---------DEL Operator@@= @AT@ 2242 @LENGTH@ 1
---------DEL SimpleName@@maxConnections @AT@ 2245 @LENGTH@ 14


DEL VariableDeclarationStatement@@@SuppressWarnings("resource") final ByteArrayOutputStream output=new ByteArrayOutputStream(size); @AT@ 5021 @LENGTH@ 107
---DEL Modifier@@final @AT@ 5059 @LENGTH@ 5
---DEL SimpleType@@ByteArrayOutputStream @AT@ 5065 @LENGTH@ 21


UPD VariableDeclarationStatement@@ConverterConfiguration config=new ConverterConfiguration(StoreConversions.NONE,Collections.emptyList(),Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class))); @TO@ ConverterConfiguration config=new ConverterConfiguration(StoreConversions.NONE,Collections.emptyList(),Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate()); @AT@ 9569 @LENGTH@ 198
---UPD VariableDeclarationFragment@@config=new ConverterConfiguration(StoreConversions.NONE,Collections.emptyList(),Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class))) @TO@ config=new ConverterConfiguration(StoreConversions.NONE,Collections.emptyList(),Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate()) @AT@ 9592 @LENGTH@ 174
------UPD ClassInstanceCreation@@ConverterConfiguration[StoreConversions.NONE, Collections.emptyList(), Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class))] @TO@ ConverterConfiguration[StoreConversions.NONE, Collections.emptyList(), Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate()] @AT@ 9601 @LENGTH@ 165
---------UPD MethodInvocation@@Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)) @TO@ Predicate.<ConvertiblePair>isEqual(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)).negate() @AT@ 9680 @LENGTH@ 85
------------UPD SimpleName@@Name:Collections @TO@ Name:Predicate @AT@ 9680 @LENGTH@ 11
------------DEL SimpleName@@MethodName:singleton:[new ConvertiblePair(java.time.LocalDateTime.class,Date.class)] @AT@ 9692 @LENGTH@ 73
---------------DEL ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 9702 @LENGTH@ 62
------------INS MethodInvocation@@MethodName:isEqual:[new ConvertiblePair(java.time.LocalDateTime.class,Date.class)] @TO@ MethodInvocation@@Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)) @AT@ 9717 @LENGTH@ 99
---------------INS ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @TO@ MethodInvocation@@MethodName:isEqual:[new ConvertiblePair(java.time.LocalDateTime.class,Date.class)] @AT@ 9753 @LENGTH@ 62
------------------MOV New@@new @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 9702 @LENGTH@ 3
------------------MOV SimpleType@@ConvertiblePair @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 9706 @LENGTH@ 15
------------------MOV TypeLiteral@@java.time.LocalDateTime.class @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 9722 @LENGTH@ 29
------------------MOV TypeLiteral@@Date.class @TO@ ClassInstanceCreation@@ConvertiblePair[java.time.LocalDateTime.class, Date.class] @AT@ 9753 @LENGTH@ 10
------------INS SimpleName@@MethodName:negate:[] @TO@ MethodInvocation@@Collections.singleton(new ConvertiblePair(java.time.LocalDateTime.class,Date.class)) @AT@ 9817 @LENGTH@ 8


UPD VariableDeclarationStatement@@final Long jobId=BeanstalkExchangeHelper.getJobID(exchange); @TO@ final long jobId=BeanstalkExchangeHelper.getJobID(exchange); @AT@ 1567 @LENGTH@ 62
---DEL SimpleType@@Long @AT@ 1573 @LENGTH@ 4
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@final Long jobId=BeanstalkExchangeHelper.getJobID(exchange); @AT@ 1573 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:forward.addCode("    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n") @TO@ MethodInvocation:forward.addCode("    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n") @AT@ 3884 @LENGTH@ 122
---UPD MethodInvocation@@forward.addCode("    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n") @TO@ forward.addCode("    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n") @AT@ 3884 @LENGTH@ 121
------UPD SimpleName@@MethodName:addCode:["    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n"] @TO@ MethodName:addCode:["    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n"] @AT@ 3892 @LENGTH@ 113
---------UPD StringLiteral@@"    request.getServletContext().getRequestDispatcher(\"/camel/\" + path).forward(request, response);\n" @TO@ "    request.getServletContext().getRequestDispatcher(camelPrefix + path).forward(request, response);\n" @AT@ 3900 @LENGTH@ 104


INS FieldDeclaration@@String, [INVALID_TOKEN="invalid_token"] @TO@ TypeDeclaration@@[public]OAuth2ErrorCodes,  @AT@ 2714 @LENGTH@ 39
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [INVALID_TOKEN="invalid_token"] @AT@ 2714 @LENGTH@ 6
---INS VariableDeclarationFragment@@INVALID_TOKEN="invalid_token" @TO@ FieldDeclaration@@String, [INVALID_TOKEN="invalid_token"] @AT@ 2721 @LENGTH@ 31
------INS SimpleName@@INVALID_TOKEN @TO@ VariableDeclarationFragment@@INVALID_TOKEN="invalid_token" @AT@ 2721 @LENGTH@ 13
------INS StringLiteral@@"invalid_token" @TO@ VariableDeclarationFragment@@INVALID_TOKEN="invalid_token" @AT@ 2737 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:ts.setBucketingVersion(tsd.getTableMetadata().getBucketingVersion()) @TO@ MethodDeclaration@@OpAttr, MethodName:visit, HiveTableScan scanRel,  @AT@ 4495 @LENGTH@ 69
---INS MethodInvocation@@ts.setBucketingVersion(tsd.getTableMetadata().getBucketingVersion()) @TO@ ExpressionStatement@@MethodInvocation:ts.setBucketingVersion(tsd.getTableMetadata().getBucketingVersion()) @AT@ 4495 @LENGTH@ 68
------INS SimpleName@@Name:ts @TO@ MethodInvocation@@ts.setBucketingVersion(tsd.getTableMetadata().getBucketingVersion()) @AT@ 4495 @LENGTH@ 2
------INS SimpleName@@MethodName:setBucketingVersion:[tsd.getTableMetadata().getBucketingVersion()] @TO@ MethodInvocation@@ts.setBucketingVersion(tsd.getTableMetadata().getBucketingVersion()) @AT@ 4498 @LENGTH@ 65
---------INS MethodInvocation@@tsd.getTableMetadata().getBucketingVersion() @TO@ SimpleName@@MethodName:setBucketingVersion:[tsd.getTableMetadata().getBucketingVersion()] @AT@ 4518 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getTableMetadata:[] @TO@ MethodInvocation@@tsd.getTableMetadata().getBucketingVersion() @AT@ 4518 @LENGTH@ 22
------------INS SimpleName@@Name:tsd @TO@ MethodInvocation@@tsd.getTableMetadata().getBucketingVersion() @AT@ 4518 @LENGTH@ 3
------------INS SimpleName@@MethodName:getBucketingVersion:[] @TO@ MethodInvocation@@tsd.getTableMetadata().getBucketingVersion() @AT@ 4541 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:form.set("grant_type","authorization_code") @TO@ MethodInvocation:form.set(OAuth2Utils.GRANT_TYPE,"authorization_code") @AT@ 10015 @LENGTH@ 45
---UPD MethodInvocation@@form.set("grant_type","authorization_code") @TO@ form.set(OAuth2Utils.GRANT_TYPE,"authorization_code") @AT@ 10015 @LENGTH@ 44
------UPD SimpleName@@MethodName:set:["grant_type", "authorization_code"] @TO@ MethodName:set:[OAuth2Utils.GRANT_TYPE, "authorization_code"] @AT@ 10020 @LENGTH@ 39
---------DEL StringLiteral@@"grant_type" @AT@ 10024 @LENGTH@ 12
---------INS QualifiedName@@OAuth2Utils.GRANT_TYPE @TO@ SimpleName@@MethodName:set:["grant_type", "authorization_code"] @AT@ 10034 @LENGTH@ 22
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 10034 @LENGTH@ 11
------------INS SimpleName@@GRANT_TYPE @TO@ QualifiedName@@OAuth2Utils.GRANT_TYPE @AT@ 10046 @LENGTH@ 10


UPD MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @TO@ private, String, MethodName:readFileContents, File file, Exception,  @AT@ 7720 @LENGTH@ 834
---DEL PrimitiveType@@void @AT@ 7715 @LENGTH@ 4
---UPD SimpleName@@MethodName:waitForMarkerFile @TO@ MethodName:readFileContents @AT@ 7720 @LENGTH@ 17
---UPD SingleVariableDeclaration@@String expected @TO@ File file @AT@ 7738 @LENGTH@ 15
------UPD SimpleType@@String @TO@ File @AT@ 7738 @LENGTH@ 6
------UPD SimpleName@@expected @TO@ file @AT@ 7745 @LENGTH@ 8
---UPD WhileStatement@@while (!Files.exists(file.toPath()) && System.currentTimeMillis() < end) {  Thread.sleep(100);} @TO@ while (System.currentTimeMillis() < end) {  Thread.sleep(100);  if (Files.exists(file.toPath())) {    contents=readFileContents(file);  }  if (contents != null) {    break;  }} @AT@ 7893 @LENGTH@ 115
---DEL VariableDeclarationStatement@@File marker=getMarkerFile(); @AT@ 8139 @LENGTH@ 30
------DEL SimpleType@@File @AT@ 8139 @LENGTH@ 4
------DEL VariableDeclarationFragment@@marker=getMarkerFile() @AT@ 8144 @LENGTH@ 24
---------DEL SimpleName@@marker @AT@ 8144 @LENGTH@ 6
---------DEL MethodInvocation@@MethodName:getMarkerFile:[] @AT@ 8153 @LENGTH@ 15
---UPD TryStatement@@try (BufferedReader reader=new BufferedReader(new FileReader(marker))){  StringBuilder sb=new StringBuilder();  String line=reader.readLine();  while (line != null) {    sb.append(line + "\n");    line=reader.readLine();  }  Assert.assertEquals(expected,sb.toString());}  @TO@ try (BufferedReader reader=new BufferedReader(new FileReader(file))){  StringBuilder sb=new StringBuilder();  String line=reader.readLine();  while (line != null) {    sb.append(line + "\n");    line=reader.readLine();  }  if (sb.length() == 0) {    return null;  }  return sb.toString();}  @AT@ 8178 @LENGTH@ 370
------UPD VariableDeclarationExpression@@BufferedReader reader=new BufferedReader(new FileReader(marker)) @TO@ BufferedReader reader=new BufferedReader(new FileReader(file)) @AT@ 8183 @LENGTH@ 66
---------UPD VariableDeclarationFragment@@reader=new BufferedReader(new FileReader(marker)) @TO@ reader=new BufferedReader(new FileReader(file)) @AT@ 8198 @LENGTH@ 51
------------UPD ClassInstanceCreation@@BufferedReader[new FileReader(marker)] @TO@ BufferedReader[new FileReader(file)] @AT@ 8207 @LENGTH@ 42
---------------UPD ClassInstanceCreation@@FileReader[marker] @TO@ FileReader[file] @AT@ 8226 @LENGTH@ 22
------------------UPD SimpleName@@marker @TO@ file @AT@ 8241 @LENGTH@ 6
------DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals(expected,sb.toString()) @AT@ 8493 @LENGTH@ 45
---------DEL MethodInvocation@@Assert.assertEquals(expected,sb.toString()) @AT@ 8493 @LENGTH@ 44
------------DEL SimpleName@@MethodName:assertEquals:[expected, sb.toString()] @AT@ 8500 @LENGTH@ 37
---------------DEL SimpleName@@expected @AT@ 8513 @LENGTH@ 8
---------------DEL MethodInvocation@@sb.toString() @AT@ 8523 @LENGTH@ 13
------INS IfStatement@@if (sb.length() == 0) {  return null;} @TO@ TryStatement@@try (BufferedReader reader=new BufferedReader(new FileReader(marker))){  StringBuilder sb=new StringBuilder();  String line=reader.readLine();  while (line != null) {    sb.append(line + "\n");    line=reader.readLine();  }  Assert.assertEquals(expected,sb.toString());}  @AT@ 8760 @LENGTH@ 66
---------INS InfixExpression@@sb.length() == 0 @TO@ IfStatement@@if (sb.length() == 0) {  return null;} @AT@ 8764 @LENGTH@ 16
------------INS MethodInvocation@@sb.length() @TO@ InfixExpression@@sb.length() == 0 @AT@ 8764 @LENGTH@ 11
---------------MOV SimpleName@@Name:Assert @TO@ MethodInvocation@@sb.length() @AT@ 8493 @LENGTH@ 6
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@sb.length() @AT@ 8767 @LENGTH@ 8
------------INS Operator@@== @TO@ InfixExpression@@sb.length() == 0 @AT@ 8775 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@sb.length() == 0 @AT@ 8779 @LENGTH@ 1
---------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (sb.length() == 0) {  return null;} @AT@ 8782 @LENGTH@ 44
------------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 8800 @LENGTH@ 12
---------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8807 @LENGTH@ 4
------INS ReturnStatement@@MethodInvocation:sb.toString() @TO@ TryStatement@@try (BufferedReader reader=new BufferedReader(new FileReader(marker))){  StringBuilder sb=new StringBuilder();  String line=reader.readLine();  while (line != null) {    sb.append(line + "\n");    line=reader.readLine();  }  Assert.assertEquals(expected,sb.toString());}  @AT@ 8839 @LENGTH@ 21
---------INS MethodInvocation@@sb.toString() @TO@ ReturnStatement@@MethodInvocation:sb.toString() @AT@ 8846 @LENGTH@ 13
------------MOV SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 8523 @LENGTH@ 2
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 8526 @LENGTH@ 10
---INS Modifier@@private @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 8376 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@void, MethodName:waitForMarkerFile, String expected, Exception,  @AT@ 8384 @LENGTH@ 6


UPD VariableDeclarationStatement@@Session session=Session.getDefaultInstance(System.getProperties()); @TO@ Session session=Session.getDefaultInstance(System.getProperties(),new DefaultAuthenticator("camel","localhost")); @AT@ 2229 @LENGTH@ 69
---UPD VariableDeclarationFragment@@session=Session.getDefaultInstance(System.getProperties()) @TO@ session=Session.getDefaultInstance(System.getProperties(),new DefaultAuthenticator("camel","localhost")) @AT@ 2237 @LENGTH@ 60
------UPD MethodInvocation@@Session.getDefaultInstance(System.getProperties()) @TO@ Session.getDefaultInstance(System.getProperties(),new DefaultAuthenticator("camel","localhost")) @AT@ 2247 @LENGTH@ 50
---------UPD SimpleName@@MethodName:getDefaultInstance:[System.getProperties()] @TO@ MethodName:getDefaultInstance:[System.getProperties(), new DefaultAuthenticator("camel","localhost")] @AT@ 2255 @LENGTH@ 42
------------INS ClassInstanceCreation@@DefaultAuthenticator["camel", "localhost"] @TO@ SimpleName@@MethodName:getDefaultInstance:[System.getProperties()] @AT@ 2299 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultAuthenticator["camel", "localhost"] @AT@ 2299 @LENGTH@ 3
---------------INS SimpleType@@DefaultAuthenticator @TO@ ClassInstanceCreation@@DefaultAuthenticator["camel", "localhost"] @AT@ 2303 @LENGTH@ 20
---------------INS StringLiteral@@"camel" @TO@ ClassInstanceCreation@@DefaultAuthenticator["camel", "localhost"] @AT@ 2324 @LENGTH@ 7
---------------INS StringLiteral@@"localhost" @TO@ ClassInstanceCreation@@DefaultAuthenticator["camel", "localhost"] @AT@ 2333 @LENGTH@ 11


DEL MethodDeclaration@@public, void, MethodName:testToString,  @AT@ 2605 @LENGTH@ 366
---DEL Modifier@@public @AT@ 2605 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2612 @LENGTH@ 4
---DEL SimpleName@@MethodName:testToString @AT@ 2617 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:assertEquals("jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.srvpgm?connectionPool=%23mockPool&" + "fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true" + "&outputFieldsIdx=1%2C2&procedureName=someProcedure",endpoint.toString()) @AT@ 2642 @LENGTH@ 323
------DEL MethodInvocation@@assertEquals("jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.srvpgm?connectionPool=%23mockPool&" + "fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true" + "&outputFieldsIdx=1%2C2&procedureName=someProcedure",endpoint.toString()) @AT@ 2642 @LENGTH@ 322
---------DEL SimpleName@@MethodName:assertEquals:["jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.srvpgm?connectionPool=%23mockPool&" + "fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true" + "&outputFieldsIdx=1%2C2&procedureName=someProcedure", endpoint.toString()] @AT@ 2642 @LENGTH@ 322
------------DEL InfixExpression@@"jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.srvpgm?connectionPool=%23mockPool&" + "fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true" + "&outputFieldsIdx=1%2C2&procedureName=someProcedure" @AT@ 2672 @LENGTH@ 254
---------------DEL StringLiteral@@"jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.srvpgm?connectionPool=%23mockPool&" @AT@ 2672 @LENGTH@ 87
---------------DEL Operator@@+ @AT@ 2759 @LENGTH@ 1
---------------DEL StringLiteral@@"fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true" @AT@ 2786 @LENGTH@ 61
---------------DEL StringLiteral@@"&outputFieldsIdx=1%2C2&procedureName=someProcedure" @AT@ 2874 @LENGTH@ 52
------------DEL MethodInvocation@@endpoint.toString() @AT@ 2944 @LENGTH@ 19
---------------DEL SimpleName@@Name:endpoint @AT@ 2944 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 2953 @LENGTH@ 10


UPD MethodDeclaration@@private, Collection<? extends GrantedAuthority>, MethodName:getAuthorities, Map<String,?> map,  @TO@ protected, Collection<? extends GrantedAuthority>, MethodName:getAuthorities, Map<String,?> map,  @AT@ 3945 @LENGTH@ 614
---UPD Modifier@@private @TO@ protected @AT@ 3945 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  Lambda2Component component=context.getComponent("aws2-lambda",Lambda2Component.class);
  component.createEndpoint("aws2-lambda://myFunction");
}
) @TO@ MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  component.createEndpoint("aws2-lambda://myFunction");
}
) @AT@ 2189 @LENGTH@ 229
---UPD MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  Lambda2Component component=context.getComponent("aws2-lambda",Lambda2Component.class);
  component.createEndpoint("aws2-lambda://myFunction");
}
) @TO@ assertThrows(IllegalArgumentException.class,() -> {
  component.createEndpoint("aws2-lambda://myFunction");
}
) @AT@ 2189 @LENGTH@ 228
------UPD SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  Lambda2Component component=context.getComponent("aws2-lambda",Lambda2Component.class);
  component.createEndpoint("aws2-lambda://myFunction");
}
] @TO@ MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  component.createEndpoint("aws2-lambda://myFunction");
}
] @AT@ 2189 @LENGTH@ 228
---------UPD LambdaExpression@@() -> {
  Lambda2Component component=context.getComponent("aws2-lambda",Lambda2Component.class);
  component.createEndpoint("aws2-lambda://myFunction");
}
 @TO@ () -> {
  component.createEndpoint("aws2-lambda://myFunction");
}
 @AT@ 2234 @LENGTH@ 182


INS FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build()] @TO@ TypeDeclaration@@[public, abstract]AbstractHandlerDefinition, TransformerResourceDefinition @AT@ 3205 @LENGTH@ 413
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build()] @AT@ 3205 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build()] @AT@ 3212 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build()] @AT@ 3219 @LENGTH@ 5
---INS SimpleType@@PropertyAttributeDefinition @TO@ FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build()] @AT@ 3225 @LENGTH@ 27
---INS VariableDeclarationFragment@@FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @TO@ FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build()] @AT@ 3253 @LENGTH@ 364
------INS SimpleName@@FILTER_SPEC @TO@ VariableDeclarationFragment@@FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3253 @LENGTH@ 11
------INS MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @TO@ VariableDeclarationFragment@@FILTER_SPEC=PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3267 @LENGTH@ 350
---------INS MethodInvocation@@MethodName:setCapabilityReference:[Capabilities.HANDLER_FILTER_REFERENCE_RECORDER] @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3267 @LENGTH@ 329
------------INS QualifiedName@@Capabilities.HANDLER_FILTER_REFERENCE_RECORDER @TO@ MethodInvocation@@MethodName:setCapabilityReference:[Capabilities.HANDLER_FILTER_REFERENCE_RECORDER] @AT@ 3549 @LENGTH@ 46
---------------INS SimpleName@@Capabilities @TO@ QualifiedName@@Capabilities.HANDLER_FILTER_REFERENCE_RECORDER @AT@ 3549 @LENGTH@ 12
---------------INS SimpleName@@HANDLER_FILTER_REFERENCE_RECORDER @TO@ QualifiedName@@Capabilities.HANDLER_FILTER_REFERENCE_RECORDER @AT@ 3562 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:setAttributeMarshaller:[ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER] @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3267 @LENGTH@ 245
------------INS QualifiedName@@ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER @TO@ MethodInvocation@@MethodName:setAttributeMarshaller:[ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER] @AT@ 3458 @LENGTH@ 53
---------------INS SimpleName@@ElementAttributeMarshaller @TO@ QualifiedName@@ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER @AT@ 3458 @LENGTH@ 26
---------------INS SimpleName@@VALUE_ATTRIBUTE_MARSHALLER @TO@ QualifiedName@@ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER @AT@ 3485 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3267 @LENGTH@ 154
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 3416 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:addAlternatives:["filter"] @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3267 @LENGTH@ 116
------------INS StringLiteral@@"filter" @TO@ MethodInvocation@@MethodName:addAlternatives:["filter"] @AT@ 3374 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:of:["filter-spec", ModelType.STRING, true] @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3267 @LENGTH@ 77
------------INS StringLiteral@@"filter-spec" @TO@ MethodInvocation@@MethodName:of:["filter-spec", ModelType.STRING, true] @AT@ 3306 @LENGTH@ 13
------------INS QualifiedName@@ModelType.STRING @TO@ MethodInvocation@@MethodName:of:["filter-spec", ModelType.STRING, true] @AT@ 3321 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 3321 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 3331 @LENGTH@ 6
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:of:["filter-spec", ModelType.STRING, true] @AT@ 3339 @LENGTH@ 4
---------INS QualifiedName@@Name:PropertyAttributeDefinition.Builder @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3267 @LENGTH@ 35
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("filter-spec",ModelType.STRING,true).addAlternatives("filter").setAllowExpression(true).setAttributeMarshaller(ElementAttributeMarshaller.VALUE_ATTRIBUTE_MARSHALLER).setCapabilityReference(Capabilities.HANDLER_FILTER_REFERENCE_RECORDER).build() @AT@ 3610 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:this.bulkClient=new DefaultBulkApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient) @TO@ Assignment:this.bulkClient=new DefaultBulkApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient,loginConfig) @AT@ 2567 @LENGTH@ 133
---UPD Assignment@@this.bulkClient=new DefaultBulkApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient) @TO@ this.bulkClient=new DefaultBulkApiClient((String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION),session,httpClient,loginConfig) @AT@ 2567 @LENGTH@ 132
------UPD ClassInstanceCreation@@DefaultBulkApiClient[(String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION), session, httpClient] @TO@ DefaultBulkApiClient[(String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION), session, httpClient, loginConfig] @AT@ 2585 @LENGTH@ 114
---------INS SimpleName@@loginConfig @TO@ ClassInstanceCreation@@DefaultBulkApiClient[(String)endpointConfigMap.get(SalesforceEndpointConfig.API_VERSION), session, httpClient] @AT@ 2700 @LENGTH@ 11


UPD FieldDeclaration@@static, BooleanLiteral, [TRUE=new BooleanLiteral(true)] @TO@ static, final, BooleanLiteral, [TRUE=new BooleanLiteral(true)] @AT@ 1040 @LENGTH@ 54
---INS Modifier@@final @TO@ FieldDeclaration@@static, BooleanLiteral, [TRUE=new BooleanLiteral(true)] @AT@ 1047 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:template.sendBody("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ MethodInvocation:template.sendBody("netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder",message) @AT@ 2577 @LENGTH@ 110
---UPD MethodInvocation@@template.sendBody("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ template.sendBody("netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder",message) @AT@ 2577 @LENGTH@ 109
------UPD SimpleName@@MethodName:sendBody:["netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder", message] @TO@ MethodName:sendBody:["netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder", message] @AT@ 2586 @LENGTH@ 100
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2595 @LENGTH@ 81
------------UPD StringLiteral@@"?decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2634 @LENGTH@ 42


UPD TryStatement@@try {  PGReplicationStream stream=getStream();  if (stream == null) {    return;  }  stream.setAppliedLSN(stream.getLastReceiveLSN());  stream.setFlushedLSN(stream.getLastReceiveLSN());  stream.forceUpdateStatus();  this.payload=null;} catch (SQLException e) {  getExceptionHandler().handleException("Exception while sending feedback to PostgreSQL.",exchange,e);} @TO@ try {  this.payload=null;  PGReplicationStream stream=getStream();  if (stream == null) {    return;  }  stream.setAppliedLSN(stream.getLastReceiveLSN());  stream.setFlushedLSN(stream.getLastReceiveLSN());  stream.forceUpdateStatus();} catch (SQLException e) {  getExceptionHandler().handleException("Exception while sending feedback to PostgreSQL.",exchange,e);} @AT@ 5600 @LENGTH@ 491
---MOV ExpressionStatement@@Assignment:this.payload=null @TO@ TryStatement@@try {  PGReplicationStream stream=getStream();  if (stream == null) {    return;  }  stream.setAppliedLSN(stream.getLastReceiveLSN());  stream.setFlushedLSN(stream.getLastReceiveLSN());  stream.forceUpdateStatus();  this.payload=null;} catch (SQLException e) {  getExceptionHandler().handleException("Exception while sending feedback to PostgreSQL.",exchange,e);} @AT@ 5911 @LENGTH@ 20


UPD TypeDeclaration@@[public]OAuth2UserService,  @TO@ [@FunctionalInterface, public]OAuth2UserService,  @AT@ 1494 @LENGTH@ 493
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]OAuth2UserService,  @AT@ 1494 @LENGTH@ 20


DEL MethodDeclaration@@public, Expression, MethodName:createExpression,  @AT@ 1499 @LENGTH@ 542
---DEL Modifier@@public @AT@ 1499 @LENGTH@ 6
---DEL SimpleType@@Expression @AT@ 1506 @LENGTH@ 10
---DEL SimpleName@@MethodName:createExpression @AT@ 1517 @LENGTH@ 16
---DEL VariableDeclarationStatement@@Language lan=camelContext.resolveLanguage("bean"); @AT@ 1619 @LENGTH@ 52
------DEL SimpleType@@Language @AT@ 1619 @LENGTH@ 8
------DEL VariableDeclarationFragment@@lan=camelContext.resolveLanguage("bean") @AT@ 1628 @LENGTH@ 42
---------DEL SimpleName@@lan @AT@ 1628 @LENGTH@ 3
---------DEL MethodInvocation@@camelContext.resolveLanguage("bean") @AT@ 1634 @LENGTH@ 36
------------DEL SimpleName@@Name:camelContext @AT@ 1634 @LENGTH@ 12
------------DEL SimpleName@@MethodName:resolveLanguage:["bean"] @AT@ 1647 @LENGTH@ 23
---------------DEL StringLiteral@@"bean" @AT@ 1663 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:configureLanguage(lan) @AT@ 1680 @LENGTH@ 23
------DEL MethodInvocation@@configureLanguage(lan) @AT@ 1680 @LENGTH@ 22
---------DEL SimpleName@@MethodName:configureLanguage:[lan] @AT@ 1680 @LENGTH@ 22
------------DEL SimpleName@@lan @AT@ 1698 @LENGTH@ 3
---DEL VariableDeclarationStatement@@Expression exp=lan.createExpression(null); @AT@ 1819 @LENGTH@ 44
------DEL SimpleType@@Expression @AT@ 1819 @LENGTH@ 10
------DEL VariableDeclarationFragment@@exp=lan.createExpression(null) @AT@ 1830 @LENGTH@ 32
---------DEL SimpleName@@exp @AT@ 1830 @LENGTH@ 3
---------DEL MethodInvocation@@lan.createExpression(null) @AT@ 1836 @LENGTH@ 26
------------DEL SimpleName@@Name:lan @AT@ 1836 @LENGTH@ 3
------------DEL SimpleName@@MethodName:createExpression:[null] @AT@ 1840 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 1857 @LENGTH@ 4
---DEL IfStatement@@if (exp instanceof AfterPropertiesConfigured) {  ((AfterPropertiesConfigured)exp).afterPropertiesConfigured(camelContext);} @AT@ 1872 @LENGTH@ 143
------DEL InstanceofExpression@@exp instanceof AfterPropertiesConfigured @AT@ 1876 @LENGTH@ 40
---------DEL SimpleName@@exp @AT@ 1876 @LENGTH@ 3
---------DEL Instanceof@@instanceof @AT@ 1880 @LENGTH@ 10
---------DEL SimpleType@@AfterPropertiesConfigured @AT@ 1891 @LENGTH@ 25
------DEL Block@@ThenBody:{  ((AfterPropertiesConfigured)exp).afterPropertiesConfigured(camelContext);} @AT@ 1918 @LENGTH@ 97
---------DEL ExpressionStatement@@MethodInvocation:((AfterPropertiesConfigured)exp).afterPropertiesConfigured(camelContext) @AT@ 1932 @LENGTH@ 73
------------DEL MethodInvocation@@((AfterPropertiesConfigured)exp).afterPropertiesConfigured(camelContext) @AT@ 1932 @LENGTH@ 72
---------------DEL ParenthesizedExpression@@((AfterPropertiesConfigured)exp) @AT@ 1932 @LENGTH@ 32
------------------DEL CastExpression@@(AfterPropertiesConfigured)exp @AT@ 1933 @LENGTH@ 30
---------------------DEL SimpleType@@AfterPropertiesConfigured @AT@ 1934 @LENGTH@ 25
---------------------DEL SimpleName@@exp @AT@ 1960 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:afterPropertiesConfigured:[camelContext] @AT@ 1965 @LENGTH@ 39
------------------DEL SimpleName@@camelContext @AT@ 1991 @LENGTH@ 12
---DEL ReturnStatement@@SimpleName:exp @AT@ 2024 @LENGTH@ 11
------DEL SimpleName@@exp @AT@ 2031 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:testProduer, Exception,  @TO@ public, void, MethodName:testProducer, Exception,  @AT@ 1295 @LENGTH@ 613
---UPD SimpleName@@MethodName:testProduer @TO@ MethodName:testProducer @AT@ 1307 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @TO@ TypeDeclaration@@[public]OAuth2AccessTokenResponseHttpMessageConverterTests,  @AT@ 5771 @LENGTH@ 1127
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 5771 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 5778 @LENGTH@ 4
---INS SimpleName@@MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 5783 @LENGTH@ 85
---INS VariableDeclarationStatement@@String tokenResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n"; @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 5875 @LENGTH@ 254
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String tokenResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n"; @AT@ 5875 @LENGTH@ 6
------INS VariableDeclarationFragment@@tokenResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @TO@ VariableDeclarationStatement@@String tokenResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n"; @AT@ 5882 @LENGTH@ 246
---------INS SimpleName@@tokenResponse @TO@ VariableDeclarationFragment@@tokenResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 5882 @LENGTH@ 13
---------INS InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @TO@ VariableDeclarationFragment@@tokenResponse="{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 5898 @LENGTH@ 230
------------INS StringLiteral@@"{\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 5898 @LENGTH@ 5
------------INS Operator@@+ @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 5903 @LENGTH@ 1
------------INS StringLiteral@@"	\"access_token\": \"access-token-1234\",\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 5910 @LENGTH@ 45
------------INS StringLiteral@@"   \"token_type\": \"bearer\",\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 5962 @LENGTH@ 34
------------INS StringLiteral@@"   \"expires_in\": 3600,\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 6003 @LENGTH@ 28
------------INS StringLiteral@@"   \"scope\": null,\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 6038 @LENGTH@ 23
------------INS StringLiteral@@"   \"refresh_token\": \"refresh-token-1234\"\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 6068 @LENGTH@ 48
------------INS StringLiteral@@"}\n" @TO@ InfixExpression@@"{\n" + "	\"access_token\": \"access-token-1234\",\n" + "   \"token_type\": \"bearer\",\n"+ "   \"expires_in\": 3600,\n"+ "   \"scope\": null,\n"+ "   \"refresh_token\": \"refresh-token-1234\"\n"+ "}\n" @AT@ 6123 @LENGTH@ 5
---INS VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(tokenResponse.getBytes(),HttpStatus.OK); @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 6133 @LENGTH@ 107
------INS SimpleType@@MockClientHttpResponse @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(tokenResponse.getBytes(),HttpStatus.OK); @AT@ 6133 @LENGTH@ 22
------INS VariableDeclarationFragment@@response=new MockClientHttpResponse(tokenResponse.getBytes(),HttpStatus.OK) @TO@ VariableDeclarationStatement@@MockClientHttpResponse response=new MockClientHttpResponse(tokenResponse.getBytes(),HttpStatus.OK); @AT@ 6156 @LENGTH@ 83
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(tokenResponse.getBytes(),HttpStatus.OK) @AT@ 6156 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockClientHttpResponse[tokenResponse.getBytes(), HttpStatus.OK] @TO@ VariableDeclarationFragment@@response=new MockClientHttpResponse(tokenResponse.getBytes(),HttpStatus.OK) @AT@ 6167 @LENGTH@ 72
------------INS New@@new @TO@ ClassInstanceCreation@@MockClientHttpResponse[tokenResponse.getBytes(), HttpStatus.OK] @AT@ 6167 @LENGTH@ 3
------------INS SimpleType@@MockClientHttpResponse @TO@ ClassInstanceCreation@@MockClientHttpResponse[tokenResponse.getBytes(), HttpStatus.OK] @AT@ 6171 @LENGTH@ 22
------------INS MethodInvocation@@tokenResponse.getBytes() @TO@ ClassInstanceCreation@@MockClientHttpResponse[tokenResponse.getBytes(), HttpStatus.OK] @AT@ 6199 @LENGTH@ 24
---------------INS SimpleName@@Name:tokenResponse @TO@ MethodInvocation@@tokenResponse.getBytes() @AT@ 6199 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@tokenResponse.getBytes() @AT@ 6213 @LENGTH@ 10
------------INS QualifiedName@@HttpStatus.OK @TO@ ClassInstanceCreation@@MockClientHttpResponse[tokenResponse.getBytes(), HttpStatus.OK] @AT@ 6225 @LENGTH@ 13
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.OK @AT@ 6225 @LENGTH@ 10
---------------INS SimpleName@@OK @TO@ QualifiedName@@HttpStatus.OK @AT@ 6236 @LENGTH@ 2
---INS VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response); @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 6244 @LENGTH@ 131
------INS SimpleType@@OAuth2AccessTokenResponse @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response); @AT@ 6244 @LENGTH@ 25
------INS VariableDeclarationFragment@@accessTokenResponse=this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response) @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response); @AT@ 6270 @LENGTH@ 104
---------INS SimpleName@@accessTokenResponse @TO@ VariableDeclarationFragment@@accessTokenResponse=this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response) @AT@ 6270 @LENGTH@ 19
---------INS MethodInvocation@@this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response) @TO@ VariableDeclarationFragment@@accessTokenResponse=this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response) @AT@ 6292 @LENGTH@ 82
------------INS FieldAccess@@this.messageConverter @TO@ MethodInvocation@@this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response) @AT@ 6292 @LENGTH@ 21
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.messageConverter @AT@ 6292 @LENGTH@ 4
---------------INS SimpleName@@messageConverter @TO@ FieldAccess@@this.messageConverter @AT@ 6297 @LENGTH@ 16
------------INS SimpleName@@MethodName:readInternal:[OAuth2AccessTokenResponse.class, response] @TO@ MethodInvocation@@this.messageConverter.readInternal(OAuth2AccessTokenResponse.class,response) @AT@ 6314 @LENGTH@ 60
---------------INS TypeLiteral@@OAuth2AccessTokenResponse.class @TO@ SimpleName@@MethodName:readInternal:[OAuth2AccessTokenResponse.class, response] @AT@ 6332 @LENGTH@ 31
---------------INS SimpleName@@response @TO@ SimpleName@@MethodName:readInternal:[OAuth2AccessTokenResponse.class, response] @AT@ 6365 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getTokenValue()).isEqualTo("access-token-1234") @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 6379 @LENGTH@ 96
------INS MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getTokenValue()).isEqualTo("access-token-1234") @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getTokenValue()).isEqualTo("access-token-1234") @AT@ 6379 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getTokenValue()] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getTokenValue()).isEqualTo("access-token-1234") @AT@ 6379 @LENGTH@ 64
------------INS MethodInvocation@@accessTokenResponse.getAccessToken().getTokenValue() @TO@ MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getTokenValue()] @AT@ 6390 @LENGTH@ 52
---------------INS MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getTokenValue() @AT@ 6390 @LENGTH@ 36
---------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getTokenValue() @AT@ 6390 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getTokenValue() @AT@ 6427 @LENGTH@ 15
---------INS SimpleName@@MethodName:isEqualTo:["access-token-1234"] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getTokenValue()).isEqualTo("access-token-1234") @AT@ 6444 @LENGTH@ 30
------------INS StringLiteral@@"access-token-1234" @TO@ SimpleName@@MethodName:isEqualTo:["access-token-1234"] @AT@ 6454 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getTokenType()).isEqualTo(OAuth2AccessToken.TokenType.BEARER) @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 6478 @LENGTH@ 110
------INS MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getTokenType()).isEqualTo(OAuth2AccessToken.TokenType.BEARER) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getTokenType()).isEqualTo(OAuth2AccessToken.TokenType.BEARER) @AT@ 6478 @LENGTH@ 109
---------INS MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getTokenType()] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getTokenType()).isEqualTo(OAuth2AccessToken.TokenType.BEARER) @AT@ 6478 @LENGTH@ 63
------------INS MethodInvocation@@accessTokenResponse.getAccessToken().getTokenType() @TO@ MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getTokenType()] @AT@ 6489 @LENGTH@ 51
---------------INS MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getTokenType() @AT@ 6489 @LENGTH@ 36
---------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getTokenType() @AT@ 6489 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getTokenType:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getTokenType() @AT@ 6526 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:[OAuth2AccessToken.TokenType.BEARER] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getTokenType()).isEqualTo(OAuth2AccessToken.TokenType.BEARER) @AT@ 6542 @LENGTH@ 45
------------INS QualifiedName@@OAuth2AccessToken.TokenType.BEARER @TO@ SimpleName@@MethodName:isEqualTo:[OAuth2AccessToken.TokenType.BEARER] @AT@ 6552 @LENGTH@ 34
---------------INS QualifiedName@@OAuth2AccessToken.TokenType @TO@ QualifiedName@@OAuth2AccessToken.TokenType.BEARER @AT@ 6552 @LENGTH@ 27
------------------INS SimpleName@@OAuth2AccessToken @TO@ QualifiedName@@OAuth2AccessToken.TokenType @AT@ 6552 @LENGTH@ 17
------------------INS SimpleName@@TokenType @TO@ QualifiedName@@OAuth2AccessToken.TokenType @AT@ 6570 @LENGTH@ 9
---------------INS SimpleName@@BEARER @TO@ QualifiedName@@OAuth2AccessToken.TokenType.BEARER @AT@ 6580 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getExpiresAt()).isBeforeOrEqualTo(Instant.now().plusSeconds(3600)) @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 6591 @LENGTH@ 115
------INS MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getExpiresAt()).isBeforeOrEqualTo(Instant.now().plusSeconds(3600)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getExpiresAt()).isBeforeOrEqualTo(Instant.now().plusSeconds(3600)) @AT@ 6591 @LENGTH@ 114
---------INS MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getExpiresAt()] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getExpiresAt()).isBeforeOrEqualTo(Instant.now().plusSeconds(3600)) @AT@ 6591 @LENGTH@ 63
------------INS MethodInvocation@@accessTokenResponse.getAccessToken().getExpiresAt() @TO@ MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getExpiresAt()] @AT@ 6602 @LENGTH@ 51
---------------INS MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getExpiresAt() @AT@ 6602 @LENGTH@ 36
---------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getExpiresAt() @AT@ 6602 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getExpiresAt:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getExpiresAt() @AT@ 6639 @LENGTH@ 14
---------INS SimpleName@@MethodName:isBeforeOrEqualTo:[Instant.now().plusSeconds(3600)] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getExpiresAt()).isBeforeOrEqualTo(Instant.now().plusSeconds(3600)) @AT@ 6655 @LENGTH@ 50
------------INS MethodInvocation@@Instant.now().plusSeconds(3600) @TO@ SimpleName@@MethodName:isBeforeOrEqualTo:[Instant.now().plusSeconds(3600)] @AT@ 6673 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:now:[] @TO@ MethodInvocation@@Instant.now().plusSeconds(3600) @AT@ 6673 @LENGTH@ 13
---------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.now().plusSeconds(3600) @AT@ 6673 @LENGTH@ 7
---------------INS SimpleName@@MethodName:plusSeconds:[3600] @TO@ MethodInvocation@@Instant.now().plusSeconds(3600) @AT@ 6687 @LENGTH@ 17
------------------INS NumberLiteral@@3600 @TO@ SimpleName@@MethodName:plusSeconds:[3600] @AT@ 6699 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getScopes()).containsExactly("null") @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 6709 @LENGTH@ 85
------INS MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getScopes()).containsExactly("null") @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getAccessToken().getScopes()).containsExactly("null") @AT@ 6709 @LENGTH@ 84
---------INS MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getScopes()] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getScopes()).containsExactly("null") @AT@ 6709 @LENGTH@ 60
------------INS MethodInvocation@@accessTokenResponse.getAccessToken().getScopes() @TO@ MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getAccessToken().getScopes()] @AT@ 6720 @LENGTH@ 48
---------------INS MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getScopes() @AT@ 6720 @LENGTH@ 36
---------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getScopes() @AT@ 6720 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getScopes:[] @TO@ MethodInvocation@@accessTokenResponse.getAccessToken().getScopes() @AT@ 6757 @LENGTH@ 11
---------INS SimpleName@@MethodName:containsExactly:["null"] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getAccessToken().getScopes()).containsExactly("null") @AT@ 6770 @LENGTH@ 23
------------INS StringLiteral@@"null" @TO@ SimpleName@@MethodName:containsExactly:["null"] @AT@ 6786 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @TO@ MethodDeclaration@@public, void, MethodName:readInternalWhenSuccessfulTokenResponseWithNullValueThenReadOAuth2AccessTokenResponse,  @AT@ 6797 @LENGTH@ 98
------INS MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @TO@ ExpressionStatement@@MethodInvocation:assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 6797 @LENGTH@ 97
---------INS MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getRefreshToken().getTokenValue()] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 6797 @LENGTH@ 65
------------INS MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @TO@ MethodInvocation@@MethodName:assertThat:[accessTokenResponse.getRefreshToken().getTokenValue()] @AT@ 6808 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 6808 @LENGTH@ 37
---------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 6808 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@accessTokenResponse.getRefreshToken().getTokenValue() @AT@ 6846 @LENGTH@ 15
---------INS SimpleName@@MethodName:isEqualTo:["refresh-token-1234"] @TO@ MethodInvocation@@assertThat(accessTokenResponse.getRefreshToken().getTokenValue()).isEqualTo("refresh-token-1234") @AT@ 6863 @LENGTH@ 31
------------INS StringLiteral@@"refresh-token-1234" @TO@ SimpleName@@MethodName:isEqualTo:["refresh-token-1234"] @AT@ 6873 @LENGTH@ 20


UPD MethodDeclaration@@protected, void, MethodName:verifyUnderlyingComponent, Scope scope, ResultBuilder builder, Map<String,Object> parameters,  @TO@ protected, void, MethodName:verifyUnderlyingComponent, Scope scope, ResultBuilder builder, Map<String,Object> map,  @AT@ 3165 @LENGTH@ 3074
---UPD SingleVariableDeclaration@@Map<String,Object> parameters @TO@ Map<String,Object> map @AT@ 3242 @LENGTH@ 30
------UPD SimpleName@@parameters @TO@ map @AT@ 3262 @LENGTH@ 10
---UPD VariableDeclarationStatement@@String componentName=(String)parameters.get("componentName"); @TO@ String componentName=(String)map.get("componentName"); @AT@ 3424 @LENGTH@ 63
------UPD VariableDeclarationFragment@@componentName=(String)parameters.get("componentName") @TO@ componentName=(String)map.get("componentName") @AT@ 3431 @LENGTH@ 55
---------UPD CastExpression@@(String)parameters.get("componentName") @TO@ (String)map.get("componentName") @AT@ 3447 @LENGTH@ 39
------------UPD MethodInvocation@@parameters.get("componentName") @TO@ map.get("componentName") @AT@ 3455 @LENGTH@ 31
---------------UPD SimpleName@@Name:parameters @TO@ Name:map @AT@ 3455 @LENGTH@ 10
---UPD IfStatement@@if (ObjectHelper.isNotEmpty(componentName)) {  try {    final Component component=getTransportComponent(componentName);    final Optional<ComponentVerifierExtension> extension=component.getExtension(ComponentVerifierExtension.class);    if (extension.isPresent()) {      final ComponentVerifierExtension verifier=extension.get();      final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);      final String json=catalog.componentJSonSchema("rest");      final ComponentModel model=JsonMapper.generateComponentModel(json);      final Map<String,Object> restParameters=new HashMap<>(parameters);      Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {        String name=o.getName();        Object val=restParameters.remove(name);        if (val != null) {          restParameters.put("rest." + name,parameters.get(name));        }      });      Result result=verifier.verify(scope,restParameters);      for (      VerificationError error : result.getErrors()) {        builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());      }    } else {      builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());    }  } catch (  Exception e) {    builder.error(ResultErrorBuilder.withException(e).build());  }} else {  builder.error(ResultErrorBuilder.withMissingOption("componentName").build());} @TO@ if (ObjectHelper.isNotEmpty(componentName)) {  final Map<String,Object> parameters=new HashMap<>(map);  try {    final Component component=getTransportComponent(componentName);    final Optional<ComponentVerifierExtension> extension=component.getExtension(ComponentVerifierExtension.class);    if (extension.isPresent()) {      final ComponentVerifierExtension verifier=extension.get();      final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);      final String json=catalog.componentJSonSchema("rest");      final ComponentModel model=JsonMapper.generateComponentModel(json);      model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName()));      final Map<String,Object> restParameters=new HashMap<>(parameters);      Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {        String name=o.getName();        Object val=restParameters.remove(name);        if (val != null) {          restParameters.put("rest." + name,parameters.get(name));        }      });      if (scope == Scope.CONNECTIVITY) {        model.getEndpointPathOptions().forEach(o -> {          String name=o.getName();          Object val=map.get(name);          if (val != null) {            restParameters.put("rest." + name,val);          }        });      }      Result result=verifier.verify(scope,restParameters);      for (      VerificationError error : result.getErrors()) {        builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());      }    } else {      builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());    }  } catch (  Exception e) {    builder.error(ResultErrorBuilder.withException(e).build());  }} else {  builder.error(ResultErrorBuilder.withMissingOption("componentName").build());} @AT@ 3496 @LENGTH@ 2737
------UPD Block@@ThenBody:{  try {    final Component component=getTransportComponent(componentName);    final Optional<ComponentVerifierExtension> extension=component.getExtension(ComponentVerifierExtension.class);    if (extension.isPresent()) {      final ComponentVerifierExtension verifier=extension.get();      final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);      final String json=catalog.componentJSonSchema("rest");      final ComponentModel model=JsonMapper.generateComponentModel(json);      final Map<String,Object> restParameters=new HashMap<>(parameters);      Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {        String name=o.getName();        Object val=restParameters.remove(name);        if (val != null) {          restParameters.put("rest." + name,parameters.get(name));        }      });      Result result=verifier.verify(scope,restParameters);      for (      VerificationError error : result.getErrors()) {        builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());      }    } else {      builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());    }  } catch (  Exception e) {    builder.error(ResultErrorBuilder.withException(e).build());  }} @TO@ ThenBody:{  final Map<String,Object> parameters=new HashMap<>(map);  try {    final Component component=getTransportComponent(componentName);    final Optional<ComponentVerifierExtension> extension=component.getExtension(ComponentVerifierExtension.class);    if (extension.isPresent()) {      final ComponentVerifierExtension verifier=extension.get();      final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);      final String json=catalog.componentJSonSchema("rest");      final ComponentModel model=JsonMapper.generateComponentModel(json);      model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName()));      final Map<String,Object> restParameters=new HashMap<>(parameters);      Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {        String name=o.getName();        Object val=restParameters.remove(name);        if (val != null) {          restParameters.put("rest." + name,parameters.get(name));        }      });      if (scope == Scope.CONNECTIVITY) {        model.getEndpointPathOptions().forEach(o -> {          String name=o.getName();          Object val=map.get(name);          if (val != null) {            restParameters.put("rest." + name,val);          }        });      }      Result result=verifier.verify(scope,restParameters);      for (      VerificationError error : result.getErrors()) {        builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());      }    } else {      builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());    }  } catch (  Exception e) {    builder.error(ResultErrorBuilder.withException(e).build());  }} @AT@ 3540 @LENGTH@ 2586
---------UPD TryStatement@@try {  final Component component=getTransportComponent(componentName);  final Optional<ComponentVerifierExtension> extension=component.getExtension(ComponentVerifierExtension.class);  if (extension.isPresent()) {    final ComponentVerifierExtension verifier=extension.get();    final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);    final String json=catalog.componentJSonSchema("rest");    final ComponentModel model=JsonMapper.generateComponentModel(json);    final Map<String,Object> restParameters=new HashMap<>(parameters);    Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {      String name=o.getName();      Object val=restParameters.remove(name);      if (val != null) {        restParameters.put("rest." + name,parameters.get(name));      }    });    Result result=verifier.verify(scope,restParameters);    for (    VerificationError error : result.getErrors()) {      builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());    }  } else {    builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());  }} catch (Exception e) {  builder.error(ResultErrorBuilder.withException(e).build());} @TO@ try {  final Component component=getTransportComponent(componentName);  final Optional<ComponentVerifierExtension> extension=component.getExtension(ComponentVerifierExtension.class);  if (extension.isPresent()) {    final ComponentVerifierExtension verifier=extension.get();    final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);    final String json=catalog.componentJSonSchema("rest");    final ComponentModel model=JsonMapper.generateComponentModel(json);    model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName()));    final Map<String,Object> restParameters=new HashMap<>(parameters);    Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {      String name=o.getName();      Object val=restParameters.remove(name);      if (val != null) {        restParameters.put("rest." + name,parameters.get(name));      }    });    if (scope == Scope.CONNECTIVITY) {      model.getEndpointPathOptions().forEach(o -> {        String name=o.getName();        Object val=map.get(name);        if (val != null) {          restParameters.put("rest." + name,val);        }      });    }    Result result=verifier.verify(scope,restParameters);    for (    VerificationError error : result.getErrors()) {      builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());    }  } else {    builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());  }} catch (Exception e) {  builder.error(ResultErrorBuilder.withException(e).build());} @AT@ 3554 @LENGTH@ 2562
------------UPD IfStatement@@if (extension.isPresent()) {  final ComponentVerifierExtension verifier=extension.get();  final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);  final String json=catalog.componentJSonSchema("rest");  final ComponentModel model=JsonMapper.generateComponentModel(json);  final Map<String,Object> restParameters=new HashMap<>(parameters);  Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {    String name=o.getName();    Object val=restParameters.remove(name);    if (val != null) {      restParameters.put("rest." + name,parameters.get(name));    }  });  Result result=verifier.verify(scope,restParameters);  for (  VerificationError error : result.getErrors()) {    builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());  }} else {  builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());} @TO@ if (extension.isPresent()) {  final ComponentVerifierExtension verifier=extension.get();  final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);  final String json=catalog.componentJSonSchema("rest");  final ComponentModel model=JsonMapper.generateComponentModel(json);  model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName()));  final Map<String,Object> restParameters=new HashMap<>(parameters);  Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {    String name=o.getName();    Object val=restParameters.remove(name);    if (val != null) {      restParameters.put("rest." + name,parameters.get(name));    }  });  if (scope == Scope.CONNECTIVITY) {    model.getEndpointPathOptions().forEach(o -> {      String name=o.getName();      Object val=map.get(name);      if (val != null) {        restParameters.put("rest." + name,val);      }    });  }  Result result=verifier.verify(scope,restParameters);  for (  VerificationError error : result.getErrors()) {    builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());  }} else {  builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());} @AT@ 3788 @LENGTH@ 2164
---------------UPD Block@@ThenBody:{  final ComponentVerifierExtension verifier=extension.get();  final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);  final String json=catalog.componentJSonSchema("rest");  final ComponentModel model=JsonMapper.generateComponentModel(json);  final Map<String,Object> restParameters=new HashMap<>(parameters);  Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {    String name=o.getName();    Object val=restParameters.remove(name);    if (val != null) {      restParameters.put("rest." + name,parameters.get(name));    }  });  Result result=verifier.verify(scope,restParameters);  for (  VerificationError error : result.getErrors()) {    builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());  }} @TO@ ThenBody:{  final ComponentVerifierExtension verifier=extension.get();  final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);  final String json=catalog.componentJSonSchema("rest");  final ComponentModel model=JsonMapper.generateComponentModel(json);  model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName()));  final Map<String,Object> restParameters=new HashMap<>(parameters);  Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {    String name=o.getName();    Object val=restParameters.remove(name);    if (val != null) {      restParameters.put("rest." + name,parameters.get(name));    }  });  if (scope == Scope.CONNECTIVITY) {    model.getEndpointPathOptions().forEach(o -> {      String name=o.getName();      Object val=map.get(name);      if (val != null) {        restParameters.put("rest." + name,val);      }    });  }  Result result=verifier.verify(scope,restParameters);  for (  VerificationError error : result.getErrors()) {    builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());  }} @AT@ 3815 @LENGTH@ 1963
------------------INS ExpressionStatement@@MethodInvocation:model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @TO@ Block@@ThenBody:{  final ComponentVerifierExtension verifier=extension.get();  final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);  final String json=catalog.componentJSonSchema("rest");  final ComponentModel model=JsonMapper.generateComponentModel(json);  final Map<String,Object> restParameters=new HashMap<>(parameters);  Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {    String name=o.getName();    Object val=restParameters.remove(name);    if (val != null) {      restParameters.put("rest." + name,parameters.get(name));    }  });  Result result=verifier.verify(scope,restParameters);  for (  VerificationError error : result.getErrors()) {    builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());  }} @AT@ 4440 @LENGTH@ 154
---------------------INS MethodInvocation@@model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @TO@ ExpressionStatement@@MethodInvocation:model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @AT@ 4440 @LENGTH@ 153
------------------------INS MethodInvocation@@MethodName:filter:[o -> o.getKind().equals("path")] @TO@ MethodInvocation@@model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @AT@ 4440 @LENGTH@ 108
---------------------------INS LambdaExpression@@o -> o.getKind().equals("path") @TO@ MethodInvocation@@MethodName:filter:[o -> o.getKind().equals("path")] @AT@ 4516 @LENGTH@ 31
------------------------------INS VariableDeclarationFragment@@o @TO@ LambdaExpression@@o -> o.getKind().equals("path") @AT@ 4516 @LENGTH@ 1
---------------------------------INS SimpleName@@o @TO@ VariableDeclarationFragment@@o @AT@ 4516 @LENGTH@ 1
------------------------------INS MethodInvocation@@o.getKind().equals("path") @TO@ LambdaExpression@@o -> o.getKind().equals("path") @AT@ 4521 @LENGTH@ 26
---------------------------------INS MethodInvocation@@MethodName:getKind:[] @TO@ MethodInvocation@@o.getKind().equals("path") @AT@ 4521 @LENGTH@ 11
---------------------------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getKind().equals("path") @AT@ 4521 @LENGTH@ 1
---------------------------------INS SimpleName@@MethodName:equals:["path"] @TO@ MethodInvocation@@o.getKind().equals("path") @AT@ 4533 @LENGTH@ 14
------------------------------------INS StringLiteral@@"path" @TO@ SimpleName@@MethodName:equals:["path"] @AT@ 4540 @LENGTH@ 6
------------------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @AT@ 4440 @LENGTH@ 39
------------------------INS MethodInvocation@@MethodName:getEndpointPathOptions:[] @TO@ MethodInvocation@@model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @AT@ 4440 @LENGTH@ 30
------------------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @AT@ 4440 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:forEach:[o -> parameters.remove(o.getName())] @TO@ MethodInvocation@@model.getEndpointPathOptions().stream().filter(o -> o.getKind().equals("path")).forEach(o -> parameters.remove(o.getName())) @AT@ 4549 @LENGTH@ 44
---------------------------INS LambdaExpression@@o -> parameters.remove(o.getName()) @TO@ SimpleName@@MethodName:forEach:[o -> parameters.remove(o.getName())] @AT@ 4557 @LENGTH@ 35
------------------------------INS VariableDeclarationFragment@@o @TO@ LambdaExpression@@o -> parameters.remove(o.getName()) @AT@ 4557 @LENGTH@ 1
---------------------------------INS SimpleName@@o @TO@ VariableDeclarationFragment@@o @AT@ 4557 @LENGTH@ 1
------------------------------INS MethodInvocation@@parameters.remove(o.getName()) @TO@ LambdaExpression@@o -> parameters.remove(o.getName()) @AT@ 4562 @LENGTH@ 30
---------------------------------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.remove(o.getName()) @AT@ 4562 @LENGTH@ 10
---------------------------------INS SimpleName@@MethodName:remove:[o.getName()] @TO@ MethodInvocation@@parameters.remove(o.getName()) @AT@ 4573 @LENGTH@ 19
------------------------------------INS MethodInvocation@@o.getName() @TO@ SimpleName@@MethodName:remove:[o.getName()] @AT@ 4580 @LENGTH@ 11
---------------------------------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getName() @AT@ 4580 @LENGTH@ 1
---------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@o.getName() @AT@ 4582 @LENGTH@ 9
------------------INS IfStatement@@if (scope == Scope.CONNECTIVITY) {  model.getEndpointPathOptions().forEach(o -> {    String name=o.getName();    Object val=map.get(name);    if (val != null) {      restParameters.put("rest." + name,val);    }  });} @TO@ Block@@ThenBody:{  final ComponentVerifierExtension verifier=extension.get();  final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);  final String json=catalog.componentJSonSchema("rest");  final ComponentModel model=JsonMapper.generateComponentModel(json);  final Map<String,Object> restParameters=new HashMap<>(parameters);  Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {    String name=o.getName();    Object val=restParameters.remove(name);    if (val != null) {      restParameters.put("rest." + name,parameters.get(name));    }  });  Result result=verifier.verify(scope,restParameters);  for (  VerificationError error : result.getErrors()) {    builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());  }} @AT@ 5382 @LENGTH@ 767
---------------------INS InfixExpression@@scope == Scope.CONNECTIVITY @TO@ IfStatement@@if (scope == Scope.CONNECTIVITY) {  model.getEndpointPathOptions().forEach(o -> {    String name=o.getName();    Object val=map.get(name);    if (val != null) {      restParameters.put("rest." + name,val);    }  });} @AT@ 5386 @LENGTH@ 27
------------------------INS SimpleName@@scope @TO@ InfixExpression@@scope == Scope.CONNECTIVITY @AT@ 5386 @LENGTH@ 5
------------------------INS Operator@@== @TO@ InfixExpression@@scope == Scope.CONNECTIVITY @AT@ 5391 @LENGTH@ 2
------------------------INS QualifiedName@@Scope.CONNECTIVITY @TO@ InfixExpression@@scope == Scope.CONNECTIVITY @AT@ 5395 @LENGTH@ 18
---------------------------INS SimpleName@@Scope @TO@ QualifiedName@@Scope.CONNECTIVITY @AT@ 5395 @LENGTH@ 5
---------------------------INS SimpleName@@CONNECTIVITY @TO@ QualifiedName@@Scope.CONNECTIVITY @AT@ 5401 @LENGTH@ 12
---------------------INS Block@@ThenBody:{  model.getEndpointPathOptions().forEach(o -> {    String name=o.getName();    Object val=map.get(name);    if (val != null) {      restParameters.put("rest." + name,val);    }  });} @TO@ IfStatement@@if (scope == Scope.CONNECTIVITY) {  model.getEndpointPathOptions().forEach(o -> {    String name=o.getName();    Object val=map.get(name);    if (val != null) {      restParameters.put("rest." + name,val);    }  });} @AT@ 5415 @LENGTH@ 734
------------------------INS ExpressionStatement@@MethodInvocation:model.getEndpointPathOptions().forEach(o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
) @TO@ Block@@ThenBody:{  model.getEndpointPathOptions().forEach(o -> {    String name=o.getName();    Object val=map.get(name);    if (val != null) {      restParameters.put("rest." + name,val);    }  });} @AT@ 5552 @LENGTH@ 575
---------------------------INS MethodInvocation@@model.getEndpointPathOptions().forEach(o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:model.getEndpointPathOptions().forEach(o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
) @AT@ 5552 @LENGTH@ 574
------------------------------INS MethodInvocation@@MethodName:getEndpointPathOptions:[] @TO@ MethodInvocation@@model.getEndpointPathOptions().forEach(o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
) @AT@ 5552 @LENGTH@ 30
------------------------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getEndpointPathOptions().forEach(o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
) @AT@ 5552 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:forEach:[o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
] @TO@ MethodInvocation@@model.getEndpointPathOptions().forEach(o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
) @AT@ 5583 @LENGTH@ 543
---------------------------------INS LambdaExpression@@o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
 @TO@ SimpleName@@MethodName:forEach:[o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
] @AT@ 5591 @LENGTH@ 534
------------------------------------INS VariableDeclarationFragment@@o @TO@ LambdaExpression@@o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
 @AT@ 5591 @LENGTH@ 1
---------------------------------------INS SimpleName@@o @TO@ VariableDeclarationFragment@@o @AT@ 5591 @LENGTH@ 1
------------------------------------INS VariableDeclarationStatement@@String name=o.getName(); @TO@ LambdaExpression@@o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
 @AT@ 5626 @LENGTH@ 26
---------------------------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=o.getName(); @AT@ 5626 @LENGTH@ 6
---------------------------------------INS VariableDeclarationFragment@@name=o.getName() @TO@ VariableDeclarationStatement@@String name=o.getName(); @AT@ 5633 @LENGTH@ 18
------------------------------------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=o.getName() @AT@ 5633 @LENGTH@ 4
------------------------------------------INS MethodInvocation@@o.getName() @TO@ VariableDeclarationFragment@@name=o.getName() @AT@ 5640 @LENGTH@ 11
---------------------------------------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getName() @AT@ 5640 @LENGTH@ 1
---------------------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@o.getName() @AT@ 5642 @LENGTH@ 9
------------------------------------INS VariableDeclarationStatement@@Object val=map.get(name); @TO@ LambdaExpression@@o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
 @AT@ 5681 @LENGTH@ 27
---------------------------------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object val=map.get(name); @AT@ 5681 @LENGTH@ 6
---------------------------------------INS VariableDeclarationFragment@@val=map.get(name) @TO@ VariableDeclarationStatement@@Object val=map.get(name); @AT@ 5688 @LENGTH@ 19
------------------------------------------INS SimpleName@@val @TO@ VariableDeclarationFragment@@val=map.get(name) @AT@ 5688 @LENGTH@ 3
------------------------------------------INS MethodInvocation@@map.get(name) @TO@ VariableDeclarationFragment@@val=map.get(name) @AT@ 5694 @LENGTH@ 13
---------------------------------------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.get(name) @AT@ 5694 @LENGTH@ 3
---------------------------------------------INS SimpleName@@MethodName:get:[name] @TO@ MethodInvocation@@map.get(name) @AT@ 5698 @LENGTH@ 9
------------------------------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:get:[name] @AT@ 5702 @LENGTH@ 4
------------------------------------INS IfStatement@@if (val != null) {  restParameters.put("rest." + name,val);} @TO@ LambdaExpression@@o -> {
  String name=o.getName();
  Object val=map.get(name);
  if (val != null) {
    restParameters.put("rest." + name,val);
  }
}
 @AT@ 5737 @LENGTH@ 362
---------------------------------------INS InfixExpression@@val != null @TO@ IfStatement@@if (val != null) {  restParameters.put("rest." + name,val);} @AT@ 5741 @LENGTH@ 11
------------------------------------------INS SimpleName@@val @TO@ InfixExpression@@val != null @AT@ 5741 @LENGTH@ 3
------------------------------------------INS Operator@@!= @TO@ InfixExpression@@val != null @AT@ 5744 @LENGTH@ 2
------------------------------------------INS NullLiteral@@null @TO@ InfixExpression@@val != null @AT@ 5748 @LENGTH@ 4
---------------------------------------INS Block@@ThenBody:{  restParameters.put("rest." + name,val);} @TO@ IfStatement@@if (val != null) {  restParameters.put("rest." + name,val);} @AT@ 5754 @LENGTH@ 345
------------------------------------------INS ExpressionStatement@@MethodInvocation:restParameters.put("rest." + name,val) @TO@ Block@@ThenBody:{  restParameters.put("rest." + name,val);} @AT@ 6029 @LENGTH@ 40
---------------------------------------------INS MethodInvocation@@restParameters.put("rest." + name,val) @TO@ ExpressionStatement@@MethodInvocation:restParameters.put("rest." + name,val) @AT@ 6029 @LENGTH@ 39
------------------------------------------------INS SimpleName@@Name:restParameters @TO@ MethodInvocation@@restParameters.put("rest." + name,val) @AT@ 6029 @LENGTH@ 14
------------------------------------------------INS SimpleName@@MethodName:put:["rest." + name, val] @TO@ MethodInvocation@@restParameters.put("rest." + name,val) @AT@ 6044 @LENGTH@ 24
---------------------------------------------------INS InfixExpression@@"rest." + name @TO@ SimpleName@@MethodName:put:["rest." + name, val] @AT@ 6048 @LENGTH@ 14
------------------------------------------------------INS StringLiteral@@"rest." @TO@ InfixExpression@@"rest." + name @AT@ 6048 @LENGTH@ 7
------------------------------------------------------INS Operator@@+ @TO@ InfixExpression@@"rest." + name @AT@ 6055 @LENGTH@ 1
------------------------------------------------------INS SimpleName@@name @TO@ InfixExpression@@"rest." + name @AT@ 6058 @LENGTH@ 4
---------------------------------------------------INS SimpleName@@val @TO@ SimpleName@@MethodName:put:["rest." + name, val] @AT@ 6064 @LENGTH@ 3
---------INS VariableDeclarationStatement@@final Map<String,Object> parameters=new HashMap<>(map); @TO@ Block@@ThenBody:{  try {    final Component component=getTransportComponent(componentName);    final Optional<ComponentVerifierExtension> extension=component.getExtension(ComponentVerifierExtension.class);    if (extension.isPresent()) {      final ComponentVerifierExtension verifier=extension.get();      final RuntimeCamelCatalog catalog=getCamelContext().getExtension(RuntimeCamelCatalog.class);      final String json=catalog.componentJSonSchema("rest");      final ComponentModel model=JsonMapper.generateComponentModel(json);      final Map<String,Object> restParameters=new HashMap<>(parameters);      Stream.concat(model.getComponentOptions().stream(),model.getOptions().stream()).forEach(o -> {        String name=o.getName();        Object val=restParameters.remove(name);        if (val != null) {          restParameters.put("rest." + name,parameters.get(name));        }      });      Result result=verifier.verify(scope,restParameters);      for (      VerificationError error : result.getErrors()) {        builder.error(ResultErrorBuilder.fromError(error).detail("component",componentName).build());      }    } else {      builder.error(ResultErrorBuilder.withUnsupportedComponent(componentName).build());    }  } catch (  Exception e) {    builder.error(ResultErrorBuilder.withException(e).build());  }} @AT@ 3619 @LENGTH@ 58
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Map<String,Object> parameters=new HashMap<>(map); @AT@ 3619 @LENGTH@ 5
------------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@final Map<String,Object> parameters=new HashMap<>(map); @AT@ 3625 @LENGTH@ 19
---------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 3625 @LENGTH@ 3
---------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 3629 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 3637 @LENGTH@ 6
------------INS VariableDeclarationFragment@@parameters=new HashMap<>(map) @TO@ VariableDeclarationStatement@@final Map<String,Object> parameters=new HashMap<>(map); @AT@ 3645 @LENGTH@ 31
---------------INS SimpleName@@parameters @TO@ VariableDeclarationFragment@@parameters=new HashMap<>(map) @AT@ 3645 @LENGTH@ 10
---------------INS ClassInstanceCreation@@HashMap<>[map] @TO@ VariableDeclarationFragment@@parameters=new HashMap<>(map) @AT@ 3658 @LENGTH@ 18
------------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[map] @AT@ 3658 @LENGTH@ 3
------------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[map] @AT@ 3662 @LENGTH@ 9
---------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 3662 @LENGTH@ 7
------------------INS SimpleName@@map @TO@ ClassInstanceCreation@@HashMap<>[map] @AT@ 3672 @LENGTH@ 3


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 6783 @LENGTH@ 525
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 6798 @LENGTH@ 7
---UPD VariableDeclarationStatement@@final CamelContext context=getCamelContext(); @TO@ CamelContext context=getCamelContext(); @AT@ 6835 @LENGTH@ 47
------DEL Modifier@@final @AT@ 6835 @LENGTH@ 5


UPD MethodDeclaration@@private, AssociationHandler<Neo4jPersistentProperty>, MethodName:populateFrom, MapAccessor queryResult, PersistentPropertyAccessor<?> propertyAccessor, Collection<RelationshipDescription> relationships, KnownObjects knownObjects,  @TO@ private, AssociationHandler<Neo4jPersistentProperty>, MethodName:populateFrom, MapAccessor queryResult, PersistentPropertyAccessor<?> propertyAccessor, Predicate<Neo4jPersistentProperty> isConstructorParameter, Collection<RelationshipDescription> relationships, KnownObjects knownObjects,  @AT@ 12559 @LENGTH@ 515
---INS SingleVariableDeclaration@@Predicate<Neo4jPersistentProperty> isConstructorParameter @TO@ MethodDeclaration@@private, AssociationHandler<Neo4jPersistentProperty>, MethodName:populateFrom, MapAccessor queryResult, PersistentPropertyAccessor<?> propertyAccessor, Collection<RelationshipDescription> relationships, KnownObjects knownObjects,  @AT@ 12728 @LENGTH@ 57
------INS ParameterizedType@@Predicate<Neo4jPersistentProperty> @TO@ SingleVariableDeclaration@@Predicate<Neo4jPersistentProperty> isConstructorParameter @AT@ 12728 @LENGTH@ 34
---------INS SimpleType@@Predicate @TO@ ParameterizedType@@Predicate<Neo4jPersistentProperty> @AT@ 12728 @LENGTH@ 9
---------INS SimpleType@@Neo4jPersistentProperty @TO@ ParameterizedType@@Predicate<Neo4jPersistentProperty> @AT@ 12738 @LENGTH@ 23
------INS SimpleName@@isConstructorParameter @TO@ SingleVariableDeclaration@@Predicate<Neo4jPersistentProperty> isConstructorParameter @AT@ 12763 @LENGTH@ 22
---UPD ReturnStatement@@LambdaExpression:association -> {
  Neo4jPersistentProperty persistentProperty=association.getInverse();
  createInstanceOfRelationships(persistentProperty,queryResult,knownObjects,relationships).ifPresent(value -> propertyAccessor.setProperty(persistentProperty,value));
}
 @TO@ LambdaExpression:association -> {
  Neo4jPersistentProperty persistentProperty=association.getInverse();
  if (isConstructorParameter.test(persistentProperty)) {
    return;
  }
  createInstanceOfRelationships(persistentProperty,queryResult,knownObjects,relationships).ifPresent(value -> propertyAccessor.setProperty(persistentProperty,value));
}
 @AT@ 12790 @LENGTH@ 281
------UPD LambdaExpression@@association -> {
  Neo4jPersistentProperty persistentProperty=association.getInverse();
  createInstanceOfRelationships(persistentProperty,queryResult,knownObjects,relationships).ifPresent(value -> propertyAccessor.setProperty(persistentProperty,value));
}
 @TO@ association -> {
  Neo4jPersistentProperty persistentProperty=association.getInverse();
  if (isConstructorParameter.test(persistentProperty)) {
    return;
  }
  createInstanceOfRelationships(persistentProperty,queryResult,knownObjects,relationships).ifPresent(value -> propertyAccessor.setProperty(persistentProperty,value));
}
 @AT@ 12797 @LENGTH@ 273
---------INS IfStatement@@if (isConstructorParameter.test(persistentProperty)) {  return;} @TO@ LambdaExpression@@association -> {
  Neo4jPersistentProperty persistentProperty=association.getInverse();
  createInstanceOfRelationships(persistentProperty,queryResult,knownObjects,relationships).ifPresent(value -> propertyAccessor.setProperty(persistentProperty,value));
}
 @AT@ 12977 @LENGTH@ 71
------------INS MethodInvocation@@isConstructorParameter.test(persistentProperty) @TO@ IfStatement@@if (isConstructorParameter.test(persistentProperty)) {  return;} @AT@ 12981 @LENGTH@ 47
---------------INS SimpleName@@Name:isConstructorParameter @TO@ MethodInvocation@@isConstructorParameter.test(persistentProperty) @AT@ 12981 @LENGTH@ 22
---------------INS SimpleName@@MethodName:test:[persistentProperty] @TO@ MethodInvocation@@isConstructorParameter.test(persistentProperty) @AT@ 13004 @LENGTH@ 24
------------------INS SimpleName@@persistentProperty @TO@ SimpleName@@MethodName:test:[persistentProperty] @AT@ 13009 @LENGTH@ 18
------------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (isConstructorParameter.test(persistentProperty)) {  return;} @AT@ 13030 @LENGTH@ 18
---------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 13036 @LENGTH@ 7


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(GenericFileEndpoint.class)] @TO@ TypeDeclaration@@[public, abstract]GenericFileEndpoint, ScheduledPollEndpoint[BrowsableEndpoint] @AT@ 2492 @LENGTH@ 85


UPD ReturnStatement@@ClassInstanceCreation:new AntPathRequestMatcher(pattern,null,true,new UrlPathHelper()) @TO@ ClassInstanceCreation:new AntPathRequestMatcher(pattern,"POST",true,new UrlPathHelper()) @AT@ 21861 @LENGTH@ 75
---UPD ClassInstanceCreation@@AntPathRequestMatcher[pattern, null, true, new UrlPathHelper()] @TO@ AntPathRequestMatcher[pattern, "POST", true, new UrlPathHelper()] @AT@ 21868 @LENGTH@ 67
------INS StringLiteral@@"POST" @TO@ ClassInstanceCreation@@AntPathRequestMatcher[pattern, null, true, new UrlPathHelper()] @AT@ 21903 @LENGTH@ 6
------DEL NullLiteral@@null @AT@ 21903 @LENGTH@ 4


UPD FieldDeclaration@@public, static, SupportLevel, [DEFAULT=Stable] @TO@ public, static, SupportLevel, [baseStability=Stable] @AT@ 1596 @LENGTH@ 44
---UPD VariableDeclarationFragment@@DEFAULT=Stable @TO@ baseStability=Stable @AT@ 1623 @LENGTH@ 16
------UPD SimpleName@@DEFAULT @TO@ baseStability @AT@ 1623 @LENGTH@ 7


UPD TypeDeclaration@@LdapCacheService, [Service] @TO@ LdapCacheService, [Service<LdapSearcherCache<R,K>>] @AT@ 2222 @LENGTH@ 19322
---DEL SimpleType@@Service @AT@ 2256 @LENGTH@ 7
---INS ParameterizedType@@Service<LdapSearcherCache<R,K>> @TO@ TypeDeclaration@@LdapCacheService, [Service] @AT@ 2264 @LENGTH@ 32
------INS SimpleType@@Service @TO@ ParameterizedType@@Service<LdapSearcherCache<R,K>> @AT@ 2264 @LENGTH@ 7
------INS ParameterizedType@@LdapSearcherCache<R,K> @TO@ ParameterizedType@@Service<LdapSearcherCache<R,K>> @AT@ 2272 @LENGTH@ 23
---------INS SimpleType@@LdapSearcherCache @TO@ ParameterizedType@@LdapSearcherCache<R,K> @AT@ 2272 @LENGTH@ 17
---------INS SimpleType@@R @TO@ ParameterizedType@@LdapSearcherCache<R,K> @AT@ 2290 @LENGTH@ 1
---------INS SimpleType@@K @TO@ ParameterizedType@@LdapSearcherCache<R,K> @AT@ 2293 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:this.authorizationSuccessHandler=(authorizedClient,principal,attributes) -> authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,(ServerWebExchange)attributes.get(ServerWebExchange.class.getName())) @TO@ Assignment:this.authorizationSuccessHandler=(authorizedClient,principal,attributes) -> authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,null) @AT@ 27637 @LENGTH@ 240
---UPD Assignment@@this.authorizationSuccessHandler=(authorizedClient,principal,attributes) -> authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,(ServerWebExchange)attributes.get(ServerWebExchange.class.getName())) @TO@ this.authorizationSuccessHandler=(authorizedClient,principal,attributes) -> authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,null) @AT@ 27637 @LENGTH@ 239
------UPD LambdaExpression@@(authorizedClient,principal,attributes) -> authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,(ServerWebExchange)attributes.get(ServerWebExchange.class.getName())) @TO@ (authorizedClient,principal,attributes) -> authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,null) @AT@ 27672 @LENGTH@ 204
---------UPD MethodInvocation@@authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,(ServerWebExchange)attributes.get(ServerWebExchange.class.getName())) @TO@ authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,null) @AT@ 27722 @LENGTH@ 154
------------UPD SimpleName@@MethodName:saveAuthorizedClient:[authorizedClient, principal, (ServerWebExchange)attributes.get(ServerWebExchange.class.getName())] @TO@ MethodName:saveAuthorizedClient:[authorizedClient, principal, null] @AT@ 27749 @LENGTH@ 127
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:saveAuthorizedClient:[authorizedClient, principal, (ServerWebExchange)attributes.get(ServerWebExchange.class.getName())] @AT@ 27799 @LENGTH@ 4
---------------DEL CastExpression@@(ServerWebExchange)attributes.get(ServerWebExchange.class.getName()) @AT@ 27806 @LENGTH@ 69
------------------DEL SimpleType@@ServerWebExchange @AT@ 27807 @LENGTH@ 17
------------------DEL MethodInvocation@@attributes.get(ServerWebExchange.class.getName()) @AT@ 27826 @LENGTH@ 49
---------------------DEL SimpleName@@Name:attributes @AT@ 27826 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:get:[ServerWebExchange.class.getName()] @AT@ 27837 @LENGTH@ 38
------------------------DEL MethodInvocation@@ServerWebExchange.class.getName() @AT@ 27841 @LENGTH@ 33
---------------------------DEL TypeLiteral@@ServerWebExchange.class @AT@ 27841 @LENGTH@ 23
---------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 27865 @LENGTH@ 9


UPD ReturnStatement@@CastExpression:(int)Math.floorMod(function.apply(buffers.get(buffer),funcCount++),shape.getNumberOfBits()) @TO@ CastExpression:(int)Math.floorMod(function.apply(buffers.get(buffer),funcCount++),(long)shape.getNumberOfBits()) @AT@ 3488 @LENGTH@ 122
---UPD CastExpression@@(int)Math.floorMod(function.apply(buffers.get(buffer),funcCount++),shape.getNumberOfBits()) @TO@ (int)Math.floorMod(function.apply(buffers.get(buffer),funcCount++),(long)shape.getNumberOfBits()) @AT@ 3495 @LENGTH@ 114
------UPD MethodInvocation@@Math.floorMod(function.apply(buffers.get(buffer),funcCount++),shape.getNumberOfBits()) @TO@ Math.floorMod(function.apply(buffers.get(buffer),funcCount++),(long)shape.getNumberOfBits()) @AT@ 3501 @LENGTH@ 108
---------UPD SimpleName@@MethodName:floorMod:[function.apply(buffers.get(buffer),funcCount++), shape.getNumberOfBits()] @TO@ MethodName:floorMod:[function.apply(buffers.get(buffer),funcCount++), (long)shape.getNumberOfBits()] @AT@ 3506 @LENGTH@ 103
------------DEL MethodInvocation@@shape.getNumberOfBits() @AT@ 3585 @LENGTH@ 23
------------INS CastExpression@@(long)shape.getNumberOfBits() @TO@ SimpleName@@MethodName:floorMod:[function.apply(buffers.get(buffer),funcCount++), shape.getNumberOfBits()] @AT@ 3661 @LENGTH@ 30
---------------INS PrimitiveType@@long @TO@ CastExpression@@(long)shape.getNumberOfBits() @AT@ 3662 @LENGTH@ 4
---------------INS MethodInvocation@@shape.getNumberOfBits() @TO@ CastExpression@@(long)shape.getNumberOfBits() @AT@ 3668 @LENGTH@ 23
------------------MOV SimpleName@@Name:shape @TO@ MethodInvocation@@shape.getNumberOfBits() @AT@ 3585 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getNumberOfBits:[] @TO@ MethodInvocation@@shape.getNumberOfBits() @AT@ 3591 @LENGTH@ 17


INS IfStatement@@if (this.authenticationFailureHandler == null) {  this.authenticationFailureHandler=new RedirectServerAuthenticationFailureHandler(loginPage + "?error");} @TO@ MethodDeclaration@@public, FormLoginSpec, MethodName:loginPage, String loginPage,  @AT@ 118454 @LENGTH@ 163
---INS InfixExpression@@this.authenticationFailureHandler == null @TO@ IfStatement@@if (this.authenticationFailureHandler == null) {  this.authenticationFailureHandler=new RedirectServerAuthenticationFailureHandler(loginPage + "?error");} @AT@ 118458 @LENGTH@ 41
------INS FieldAccess@@this.authenticationFailureHandler @TO@ InfixExpression@@this.authenticationFailureHandler == null @AT@ 118458 @LENGTH@ 33
---------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationFailureHandler @AT@ 118458 @LENGTH@ 4
---------INS SimpleName@@authenticationFailureHandler @TO@ FieldAccess@@this.authenticationFailureHandler @AT@ 118463 @LENGTH@ 28
------INS Operator@@== @TO@ InfixExpression@@this.authenticationFailureHandler == null @AT@ 118491 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@this.authenticationFailureHandler == null @AT@ 118495 @LENGTH@ 4
---INS Block@@ThenBody:{  this.authenticationFailureHandler=new RedirectServerAuthenticationFailureHandler(loginPage + "?error");} @TO@ IfStatement@@if (this.authenticationFailureHandler == null) {  this.authenticationFailureHandler=new RedirectServerAuthenticationFailureHandler(loginPage + "?error");} @AT@ 118501 @LENGTH@ 116
------MOV ExpressionStatement@@Assignment:this.authenticationFailureHandler=new RedirectServerAuthenticationFailureHandler(loginPage + "?error") @TO@ Block@@ThenBody:{  this.authenticationFailureHandler=new RedirectServerAuthenticationFailureHandler(loginPage + "?error");} @AT@ 118454 @LENGTH@ 105


UPD IfStatement@@if (producerCache == null) {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,producerCache.getCapacity());} @TO@ if (cacheSize < 0) {  producerCache=new EmptyProducerCache(this,camelContext);  LOG.debug("DynamicSendTo {} is not using ProducerCache",this);} else {  producerCache=new DefaultProducerCache(this,camelContext,cacheSize);  LOG.debug("DynamicSendTo {} using ProducerCache with cacheSize={}",this,cacheSize);} @AT@ 10257 @LENGTH@ 239


UPD ExpressionStatement@@Assignment:proxy=Mockito.spy(proxy) @TO@ Assignment:proxy=Mockito.mock(AopTestUtils.getUltimateTargetObject(proxy).getClass(),AdditionalAnswers.delegatesTo(proxy)) @AT@ 3136 @LENGTH@ 27
---UPD Assignment@@proxy=Mockito.spy(proxy) @TO@ proxy=Mockito.mock(AopTestUtils.getUltimateTargetObject(proxy).getClass(),AdditionalAnswers.delegatesTo(proxy)) @AT@ 3136 @LENGTH@ 26
------UPD MethodInvocation@@Mockito.spy(proxy) @TO@ Mockito.mock(AopTestUtils.getUltimateTargetObject(proxy).getClass(),AdditionalAnswers.delegatesTo(proxy)) @AT@ 3144 @LENGTH@ 18
---------UPD SimpleName@@MethodName:spy:[proxy] @TO@ MethodName:delegatesTo:[proxy] @AT@ 3152 @LENGTH@ 10
---------INS SimpleName@@MethodName:mock:[AopTestUtils.getUltimateTargetObject(proxy).getClass(), AdditionalAnswers.delegatesTo(proxy)] @TO@ MethodInvocation@@Mockito.spy(proxy) @AT@ 3271 @LENGTH@ 104
------------INS MethodInvocation@@AopTestUtils.getUltimateTargetObject(proxy).getClass() @TO@ SimpleName@@MethodName:mock:[AopTestUtils.getUltimateTargetObject(proxy).getClass(), AdditionalAnswers.delegatesTo(proxy)] @AT@ 3276 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getUltimateTargetObject:[proxy] @TO@ MethodInvocation@@AopTestUtils.getUltimateTargetObject(proxy).getClass() @AT@ 3276 @LENGTH@ 43
------------------INS SimpleName@@proxy @TO@ MethodInvocation@@MethodName:getUltimateTargetObject:[proxy] @AT@ 3313 @LENGTH@ 5
---------------INS SimpleName@@Name:AopTestUtils @TO@ MethodInvocation@@AopTestUtils.getUltimateTargetObject(proxy).getClass() @AT@ 3276 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@AopTestUtils.getUltimateTargetObject(proxy).getClass() @AT@ 3320 @LENGTH@ 10
------------INS MethodInvocation@@AdditionalAnswers.delegatesTo(proxy) @TO@ SimpleName@@MethodName:mock:[AopTestUtils.getUltimateTargetObject(proxy).getClass(), AdditionalAnswers.delegatesTo(proxy)] @AT@ 3338 @LENGTH@ 36
---------------MOV SimpleName@@MethodName:spy:[proxy] @TO@ MethodInvocation@@AdditionalAnswers.delegatesTo(proxy) @AT@ 3152 @LENGTH@ 10
---------------INS SimpleName@@Name:AdditionalAnswers @TO@ MethodInvocation@@AdditionalAnswers.delegatesTo(proxy) @AT@ 3338 @LENGTH@ 17


UPD MethodDeclaration@@public, O, MethodName:objectPostProcessor, ObjectPostProcessor<Object> objectPostProcessor,  @TO@ public, B, MethodName:objectPostProcessor, ObjectPostProcessor<Object> objectPostProcessor,  @AT@ 9888 @LENGTH@ 228
---UPD SimpleType@@O @TO@ B @AT@ 9895 @LENGTH@ 1
---UPD ReturnStatement@@CastExpression:(O)this @TO@ CastExpression:(B)this @AT@ 10097 @LENGTH@ 16
------UPD CastExpression@@(O)this @TO@ (B)this @AT@ 10104 @LENGTH@ 8
---------UPD SimpleType@@O @TO@ B @AT@ 10105 @LENGTH@ 1


UPD FieldDeclaration@@private, boolean, [useImmutableContext=false] @TO@ private, boolean, [useImmutableContext] @AT@ 1872 @LENGTH@ 44
---UPD VariableDeclarationFragment@@useImmutableContext=false @TO@ useImmutableContext @AT@ 1888 @LENGTH@ 27
------DEL BooleanLiteral@@false @AT@ 1910 @LENGTH@ 5


INS MethodDeclaration@@private, voidMethodName:JsonMapper,  @TO@ TypeDeclaration@@[public]JsonMapper,  @AT@ 1742 @LENGTH@ 28
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:JsonMapper,  @AT@ 1742 @LENGTH@ 7
---INS SimpleName@@MethodName:JsonMapper @TO@ MethodDeclaration@@private, voidMethodName:JsonMapper,  @AT@ 1750 @LENGTH@ 10


UPD FieldDeclaration@@private, final, byte, [inbuf[]] @TO@ private, final, byte[], [inbuf] @AT@ 4184 @LENGTH@ 27
---INS ArrayType@@byte[] @TO@ FieldDeclaration@@private, final, byte, [inbuf[]] @AT@ 4198 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4198 @LENGTH@ 4
---DEL PrimitiveType@@byte @AT@ 4198 @LENGTH@ 4
---UPD VariableDeclarationFragment@@inbuf[] @TO@ inbuf @AT@ 4203 @LENGTH@ 7


MOV ExpressionStatement@@MethodInvocation:parseQueryParams(options) @TO@ MethodDeclaration@@public, void, MethodName:configureProperties, Map<String,Object> options,  @AT@ 4966 @LENGTH@ 26


UPD FieldDeclaration@@private, static, final, double, [DENOMINATOR=Math.log(1.0 / Math.pow(2.0,LOG_OF_2))] @TO@ private, static, final, double, [DENOMINATOR=-LOG_OF_2 * LOG_OF_2] @AT@ 2367 @LENGTH@ 82
---UPD VariableDeclarationFragment@@DENOMINATOR=Math.log(1.0 / Math.pow(2.0,LOG_OF_2)) @TO@ DENOMINATOR=-LOG_OF_2 * LOG_OF_2 @AT@ 2395 @LENGTH@ 53
------DEL MethodInvocation@@Math.log(1.0 / Math.pow(2.0,LOG_OF_2)) @AT@ 2409 @LENGTH@ 39
---------DEL SimpleName@@Name:Math @AT@ 2409 @LENGTH@ 4
---------DEL SimpleName@@MethodName:log:[1.0 / Math.pow(2.0,LOG_OF_2)] @AT@ 2414 @LENGTH@ 34
------------DEL InfixExpression@@1.0 / Math.pow(2.0,LOG_OF_2) @AT@ 2418 @LENGTH@ 29
---------------DEL NumberLiteral@@1.0 @AT@ 2418 @LENGTH@ 3
---------------DEL Operator@@/ @AT@ 2421 @LENGTH@ 1
---------------DEL MethodInvocation@@Math.pow(2.0,LOG_OF_2) @AT@ 2424 @LENGTH@ 23
------------------DEL SimpleName@@Name:Math @AT@ 2424 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:pow:[2.0, LOG_OF_2] @AT@ 2429 @LENGTH@ 18
---------------------DEL NumberLiteral@@2.0 @AT@ 2433 @LENGTH@ 3
---------------------DEL SimpleName@@LOG_OF_2 @AT@ 2438 @LENGTH@ 8
------INS InfixExpression@@-LOG_OF_2 * LOG_OF_2 @TO@ VariableDeclarationFragment@@DENOMINATOR=Math.log(1.0 / Math.pow(2.0,LOG_OF_2)) @AT@ 2515 @LENGTH@ 20
---------INS PrefixExpression@@-LOG_OF_2 @TO@ InfixExpression@@-LOG_OF_2 * LOG_OF_2 @AT@ 2515 @LENGTH@ 9
------------INS Operator@@- @TO@ PrefixExpression@@-LOG_OF_2 @AT@ 2515 @LENGTH@ 1
------------INS SimpleName@@LOG_OF_2 @TO@ PrefixExpression@@-LOG_OF_2 @AT@ 2516 @LENGTH@ 8
---------INS Operator@@* @TO@ InfixExpression@@-LOG_OF_2 * LOG_OF_2 @AT@ 2524 @LENGTH@ 1
---------INS SimpleName@@LOG_OF_2 @TO@ InfixExpression@@-LOG_OF_2 * LOG_OF_2 @AT@ 2527 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:ReversedLinesFileReader, final Path file, final int blockSize, final String encoding, IOException,  @TO@ public, voidMethodName:ReversedLinesFileReader, final Path file, final int blockSize, final String charsetName, IOException,  @AT@ 8979 @LENGTH@ 179
---UPD SingleVariableDeclaration@@final String encoding @TO@ final String charsetName @AT@ 9048 @LENGTH@ 21
------UPD SimpleName@@encoding @TO@ charsetName @AT@ 9061 @LENGTH@ 8
---UPD ConstructorInvocation@@this(file,blockSize,Charsets.toCharset(encoding)); @TO@ this(file,blockSize,Charsets.toCharset(charsetName)); @AT@ 9100 @LENGTH@ 52
------UPD MethodInvocation@@Charsets.toCharset(encoding) @TO@ Charsets.toCharset(charsetName) @AT@ 9122 @LENGTH@ 28
---------UPD SimpleName@@MethodName:toCharset:[encoding] @TO@ MethodName:toCharset:[charsetName] @AT@ 9131 @LENGTH@ 19
------------UPD SimpleName@@encoding @TO@ charsetName @AT@ 9141 @LENGTH@ 8


UPD TryStatement@@try {  container=startZooKeeper(port,dataDir);  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();  assertTrue(groupCondition.waitForConnected(5,TimeUnit.SECONDS));  assertFalse(group.isMaster());  group.update(new NodeState("foo"));  assertTrue(groupCondition.waitForMaster(5,TimeUnit.SECONDS));  group.close();  curator.close();}  finally {  if (container != null) {    container.stop();  }  FileUtils.deleteDirectory(dataDir.toFile());} @TO@ try {  container=startZooKeeper(port,dataDir);  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();  assertTrue(groupCondition.waitForConnected(5,TimeUnit.SECONDS));  assertFalse(group.isMaster());  group.update(new NodeState("foo"));  assertTrue(groupCondition.waitForMaster(5,TimeUnit.SECONDS));  group.close();  curator.close();}  finally {  if (container != null) {    container.stop();  }  try {    FileUtils.deleteDirectory(dataDir.toFile());  } catch (  Throwable e) {  }} @AT@ 7333 @LENGTH@ 612
---UPD Block@@FinallyBody:{  if (container != null) {    container.stop();  }  FileUtils.deleteDirectory(dataDir.toFile());} @TO@ FinallyBody:{  if (container != null) {    container.stop();  }  try {    FileUtils.deleteDirectory(dataDir.toFile());  } catch (  Throwable e) {  }} @AT@ 7791 @LENGTH@ 154
------INS TryStatement@@try {  FileUtils.deleteDirectory(dataDir.toFile());} catch (Throwable e) {} @TO@ Block@@FinallyBody:{  if (container != null) {    container.stop();  }  FileUtils.deleteDirectory(dataDir.toFile());} @AT@ 7891 @LENGTH@ 142
---------MOV ExpressionStatement@@MethodInvocation:FileUtils.deleteDirectory(dataDir.toFile()) @TO@ TryStatement@@try {  FileUtils.deleteDirectory(dataDir.toFile());} catch (Throwable e) {} @AT@ 7891 @LENGTH@ 44
---------INS CatchClause@@catch (Throwable e) {} @TO@ TryStatement@@try {  FileUtils.deleteDirectory(dataDir.toFile());} catch (Throwable e) {} @AT@ 7972 @LENGTH@ 61
------------INS SingleVariableDeclaration@@Throwable e @TO@ CatchClause@@catch (Throwable e) {} @AT@ 7979 @LENGTH@ 11
---------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable e @AT@ 7979 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Throwable e @AT@ 7989 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, Pattern, [SSH_PUB_KEY=Pattern.compile("ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) (.*)")] @TO@ private, static, final, Pattern, [SSH_PUB_KEY=Pattern.compile("ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) ?(.*)")] @AT@ 3921 @LENGTH@ 100
---UPD VariableDeclarationFragment@@SSH_PUB_KEY=Pattern.compile("ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) (.*)") @TO@ SSH_PUB_KEY=Pattern.compile("ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) ?(.*)") @AT@ 3950 @LENGTH@ 70
------UPD MethodInvocation@@Pattern.compile("ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) (.*)") @TO@ Pattern.compile("ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) ?(.*)") @AT@ 3964 @LENGTH@ 56
---------UPD SimpleName@@MethodName:compile:["ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) (.*)"] @TO@ MethodName:compile:["ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) ?(.*)"] @AT@ 3972 @LENGTH@ 48
------------UPD StringLiteral@@"ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) (.*)" @TO@ "ssh-(rsa|dsa) ([A-Za-z0-9/+]+=*) ?(.*)" @AT@ 3980 @LENGTH@ 39


UPD IfStatement@@if (readOptions.getBlock() != null && readOptions.getBlock() > 0) {  return new CommandResponse<>(command,connection.executeDedicated(cmd -> doRead(command,readOptions,cmd)));} @TO@ if (readOptions.isBlocking()) {  return new CommandResponse<>(command,connection.executeDedicated(cmd -> doRead(command,readOptions,cmd)));} @AT@ 12976 @LENGTH@ 186
---DEL InfixExpression@@readOptions.getBlock() != null && readOptions.getBlock() > 0 @AT@ 12980 @LENGTH@ 60
------DEL InfixExpression@@readOptions.getBlock() != null @AT@ 12980 @LENGTH@ 30
---------DEL MethodInvocation@@readOptions.getBlock() @AT@ 12980 @LENGTH@ 22
---------DEL Operator@@!= @AT@ 13002 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 13006 @LENGTH@ 4
------DEL Operator@@&& @AT@ 13010 @LENGTH@ 2
------DEL InfixExpression@@readOptions.getBlock() > 0 @AT@ 13014 @LENGTH@ 26
---------DEL MethodInvocation@@readOptions.getBlock() @AT@ 13014 @LENGTH@ 22
------------DEL SimpleName@@Name:readOptions @AT@ 13014 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getBlock:[] @AT@ 13026 @LENGTH@ 10
---------DEL Operator@@> @AT@ 13036 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 13039 @LENGTH@ 1
---INS MethodInvocation@@readOptions.isBlocking() @TO@ IfStatement@@if (readOptions.getBlock() != null && readOptions.getBlock() > 0) {  return new CommandResponse<>(command,connection.executeDedicated(cmd -> doRead(command,readOptions,cmd)));} @AT@ 12980 @LENGTH@ 24
------MOV SimpleName@@Name:readOptions @TO@ MethodInvocation@@readOptions.isBlocking() @AT@ 12980 @LENGTH@ 11
------MOV SimpleName@@MethodName:getBlock:[] @TO@ MethodInvocation@@readOptions.isBlocking() @AT@ 12992 @LENGTH@ 10


UPD MethodDeclaration@@private, void, MethodName:succesfulRun, final FileWriterWithEncoding fw21, Exception,  @TO@ private, void, MethodName:successfulRun, final FileWriterWithEncoding fw21, Exception,  @AT@ 3765 @LENGTH@ 517
---UPD SimpleName@@MethodName:succesfulRun @TO@ MethodName:successfulRun @AT@ 3778 @LENGTH@ 12


UPD Block@@ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ ElseBody:if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2830 @LENGTH@ 207
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2830 @LENGTH@ 207
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 3043 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 3057 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 3063 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 3063 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 3067 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 3084 @LENGTH@ 72
---UPD IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @TO@ if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} else {  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 2830 @LENGTH@ 207
------INS Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @TO@ IfStatement@@if (exchange.getIn().getBody() instanceof InputStream) {  Map<String,Float> result=classify(exchange.getIn().getBody(InputStream.class));  exchange.getIn().setBody(result);} @AT@ 3043 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @TO@ Block@@ElseBody:{  throw new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File");} @AT@ 3057 @LENGTH@ 101
------------INS ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Data type is not supported. Body should be byte[], InputStream or File") @AT@ 3063 @LENGTH@ 94
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 3063 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 3067 @LENGTH@ 16
---------------INS StringLiteral@@"Data type is not supported. Body should be byte[], InputStream or File" @TO@ ClassInstanceCreation@@RuntimeException["Data type is not supported. Body should be byte[], InputStream or File"] @AT@ 3084 @LENGTH@ 72


INS MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @WebAppConfiguration, public]SecurityMockMvcRequestPostProcessorsOidcLoginTests,  @AT@ 5403 @LENGTH@ 587
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5403 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5410 @LENGTH@ 4
---INS SimpleName@@MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence @TO@ MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5415 @LENGTH@ 59
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5484 @LENGTH@ 9
---INS VariableDeclarationStatement@@OidcUser oidcUser=new DefaultOidcUser(AuthorityUtils.createAuthorityList("SCOPE_user"),idToken().build()); @TO@ MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5498 @LENGTH@ 114
------INS SimpleType@@OidcUser @TO@ VariableDeclarationStatement@@OidcUser oidcUser=new DefaultOidcUser(AuthorityUtils.createAuthorityList("SCOPE_user"),idToken().build()); @AT@ 5498 @LENGTH@ 8
------INS VariableDeclarationFragment@@oidcUser=new DefaultOidcUser(AuthorityUtils.createAuthorityList("SCOPE_user"),idToken().build()) @TO@ VariableDeclarationStatement@@OidcUser oidcUser=new DefaultOidcUser(AuthorityUtils.createAuthorityList("SCOPE_user"),idToken().build()); @AT@ 5507 @LENGTH@ 104
---------INS SimpleName@@oidcUser @TO@ VariableDeclarationFragment@@oidcUser=new DefaultOidcUser(AuthorityUtils.createAuthorityList("SCOPE_user"),idToken().build()) @AT@ 5507 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultOidcUser[AuthorityUtils.createAuthorityList("SCOPE_user"), idToken().build()] @TO@ VariableDeclarationFragment@@oidcUser=new DefaultOidcUser(AuthorityUtils.createAuthorityList("SCOPE_user"),idToken().build()) @AT@ 5518 @LENGTH@ 93
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOidcUser[AuthorityUtils.createAuthorityList("SCOPE_user"), idToken().build()] @AT@ 5518 @LENGTH@ 3
------------INS SimpleType@@DefaultOidcUser @TO@ ClassInstanceCreation@@DefaultOidcUser[AuthorityUtils.createAuthorityList("SCOPE_user"), idToken().build()] @AT@ 5522 @LENGTH@ 15
------------INS MethodInvocation@@AuthorityUtils.createAuthorityList("SCOPE_user") @TO@ ClassInstanceCreation@@DefaultOidcUser[AuthorityUtils.createAuthorityList("SCOPE_user"), idToken().build()] @AT@ 5543 @LENGTH@ 48
---------------INS SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("SCOPE_user") @AT@ 5543 @LENGTH@ 14
---------------INS SimpleName@@MethodName:createAuthorityList:["SCOPE_user"] @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("SCOPE_user") @AT@ 5558 @LENGTH@ 33
------------------INS StringLiteral@@"SCOPE_user" @TO@ SimpleName@@MethodName:createAuthorityList:["SCOPE_user"] @AT@ 5578 @LENGTH@ 12
------------INS MethodInvocation@@idToken().build() @TO@ ClassInstanceCreation@@DefaultOidcUser[AuthorityUtils.createAuthorityList("SCOPE_user"), idToken().build()] @AT@ 5593 @LENGTH@ 17
---------------INS MethodInvocation@@MethodName:idToken:[] @TO@ MethodInvocation@@idToken().build() @AT@ 5593 @LENGTH@ 9
---------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@idToken().build() @AT@ 5603 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))).andExpect(status().isOk()).andExpect(content().string("subject")) @TO@ MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5616 @LENGTH@ 202
------INS MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))).andExpect(status().isOk()).andExpect(content().string("subject")) @TO@ ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))).andExpect(status().isOk()).andExpect(content().string("subject")) @AT@ 5616 @LENGTH@ 201
---------INS MethodInvocation@@MethodName:andExpect:[status().isOk()] @TO@ MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))).andExpect(status().isOk()).andExpect(content().string("subject")) @AT@ 5616 @LENGTH@ 157
------------INS MethodInvocation@@status().isOk() @TO@ MethodInvocation@@MethodName:andExpect:[status().isOk()] @AT@ 5757 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isOk() @AT@ 5757 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isOk:[] @TO@ MethodInvocation@@status().isOk() @AT@ 5766 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:perform:[get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))] @TO@ MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))).andExpect(status().isOk()).andExpect(content().string("subject")) @AT@ 5616 @LENGTH@ 125
------------INS MethodInvocation@@get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser)) @TO@ MethodInvocation@@MethodName:perform:[get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))] @AT@ 5633 @LENGTH@ 107
---------------INS MethodInvocation@@MethodName:get:["/id-token/sub"] @TO@ MethodInvocation@@get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser)) @AT@ 5633 @LENGTH@ 20
------------------INS StringLiteral@@"/id-token/sub" @TO@ MethodInvocation@@MethodName:get:["/id-token/sub"] @AT@ 5637 @LENGTH@ 15
---------------INS SimpleName@@MethodName:with:[oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser)] @TO@ MethodInvocation@@get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser)) @AT@ 5659 @LENGTH@ 81
------------------INS MethodInvocation@@oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser) @TO@ SimpleName@@MethodName:with:[oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser)] @AT@ 5664 @LENGTH@ 75
---------------------INS MethodInvocation@@MethodName:idToken:[i -> i.subject("foo")] @TO@ MethodInvocation@@oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser) @AT@ 5664 @LENGTH@ 49
------------------------INS LambdaExpression@@i -> i.subject("foo") @TO@ MethodInvocation@@MethodName:idToken:[i -> i.subject("foo")] @AT@ 5691 @LENGTH@ 21
---------------------------INS VariableDeclarationFragment@@i @TO@ LambdaExpression@@i -> i.subject("foo") @AT@ 5691 @LENGTH@ 1
------------------------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i @AT@ 5691 @LENGTH@ 1
---------------------------INS MethodInvocation@@i.subject("foo") @TO@ LambdaExpression@@i -> i.subject("foo") @AT@ 5696 @LENGTH@ 16
------------------------------INS SimpleName@@Name:i @TO@ MethodInvocation@@i.subject("foo") @AT@ 5696 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:subject:["foo"] @TO@ MethodInvocation@@i.subject("foo") @AT@ 5698 @LENGTH@ 14
---------------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:subject:["foo"] @AT@ 5706 @LENGTH@ 5
---------------------INS MethodInvocation@@MethodName:oidcLogin:[] @TO@ MethodInvocation@@oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser) @AT@ 5664 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:oidcUser:[oidcUser] @TO@ MethodInvocation@@oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser) @AT@ 5721 @LENGTH@ 18
------------------------INS SimpleName@@oidcUser @TO@ SimpleName@@MethodName:oidcUser:[oidcUser] @AT@ 5730 @LENGTH@ 8
---------INS FieldAccess@@this.mvc @TO@ MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))).andExpect(status().isOk()).andExpect(content().string("subject")) @AT@ 5616 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mvc @AT@ 5616 @LENGTH@ 4
------------INS SimpleName@@mvc @TO@ FieldAccess@@this.mvc @AT@ 5621 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[content().string("subject")] @TO@ MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().idToken(i -> i.subject("foo")).oidcUser(oidcUser))).andExpect(status().isOk()).andExpect(content().string("subject")) @AT@ 5779 @LENGTH@ 38
------------INS MethodInvocation@@content().string("subject") @TO@ SimpleName@@MethodName:andExpect:[content().string("subject")] @AT@ 5789 @LENGTH@ 27
---------------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@content().string("subject") @AT@ 5789 @LENGTH@ 9
---------------INS SimpleName@@MethodName:string:["subject"] @TO@ MethodInvocation@@content().string("subject") @AT@ 5799 @LENGTH@ 17
------------------INS StringLiteral@@"subject" @TO@ SimpleName@@MethodName:string:["subject"] @AT@ 5806 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))).andExpect(content().string("bar")) @TO@ MethodDeclaration@@public, void, MethodName:oidcLoginWhenOidcUserSpecifiedThenLastCalledTakesPrecedence, Exception,  @AT@ 5821 @LENGTH@ 166
------INS MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))).andExpect(content().string("bar")) @TO@ ExpressionStatement@@MethodInvocation:this.mvc.perform(get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))).andExpect(content().string("bar")) @AT@ 5821 @LENGTH@ 165
---------INS MethodInvocation@@MethodName:perform:[get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))] @TO@ MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))).andExpect(content().string("bar")) @AT@ 5821 @LENGTH@ 125
------------INS MethodInvocation@@get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar"))) @TO@ MethodInvocation@@MethodName:perform:[get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))] @AT@ 5838 @LENGTH@ 107
---------------INS MethodInvocation@@MethodName:get:["/id-token/sub"] @TO@ MethodInvocation@@get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar"))) @AT@ 5838 @LENGTH@ 20
------------------INS StringLiteral@@"/id-token/sub" @TO@ MethodInvocation@@MethodName:get:["/id-token/sub"] @AT@ 5842 @LENGTH@ 15
---------------INS SimpleName@@MethodName:with:[oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar"))] @TO@ MethodInvocation@@get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar"))) @AT@ 5864 @LENGTH@ 81
------------------INS MethodInvocation@@oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")) @TO@ SimpleName@@MethodName:with:[oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar"))] @AT@ 5869 @LENGTH@ 75
---------------------INS MethodInvocation@@MethodName:oidcUser:[oidcUser] @TO@ MethodInvocation@@oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")) @AT@ 5869 @LENGTH@ 37
------------------------INS SimpleName@@oidcUser @TO@ MethodInvocation@@MethodName:oidcUser:[oidcUser] @AT@ 5897 @LENGTH@ 8
---------------------INS MethodInvocation@@MethodName:oidcLogin:[] @TO@ MethodInvocation@@oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")) @AT@ 5869 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:idToken:[i -> i.subject("bar")] @TO@ MethodInvocation@@oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")) @AT@ 5914 @LENGTH@ 30
------------------------INS LambdaExpression@@i -> i.subject("bar") @TO@ SimpleName@@MethodName:idToken:[i -> i.subject("bar")] @AT@ 5922 @LENGTH@ 21
---------------------------INS VariableDeclarationFragment@@i @TO@ LambdaExpression@@i -> i.subject("bar") @AT@ 5922 @LENGTH@ 1
------------------------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i @AT@ 5922 @LENGTH@ 1
---------------------------INS MethodInvocation@@i.subject("bar") @TO@ LambdaExpression@@i -> i.subject("bar") @AT@ 5927 @LENGTH@ 16
------------------------------INS SimpleName@@Name:i @TO@ MethodInvocation@@i.subject("bar") @AT@ 5927 @LENGTH@ 1
------------------------------INS SimpleName@@MethodName:subject:["bar"] @TO@ MethodInvocation@@i.subject("bar") @AT@ 5929 @LENGTH@ 14
---------------------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:subject:["bar"] @AT@ 5937 @LENGTH@ 5
---------INS FieldAccess@@this.mvc @TO@ MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))).andExpect(content().string("bar")) @AT@ 5821 @LENGTH@ 8
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mvc @AT@ 5821 @LENGTH@ 4
------------INS SimpleName@@mvc @TO@ FieldAccess@@this.mvc @AT@ 5826 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[content().string("bar")] @TO@ MethodInvocation@@this.mvc.perform(get("/id-token/sub").with(oidcLogin().oidcUser(oidcUser).idToken(i -> i.subject("bar")))).andExpect(content().string("bar")) @AT@ 5952 @LENGTH@ 34
------------INS MethodInvocation@@content().string("bar") @TO@ SimpleName@@MethodName:andExpect:[content().string("bar")] @AT@ 5962 @LENGTH@ 23
---------------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@content().string("bar") @AT@ 5962 @LENGTH@ 9
---------------INS SimpleName@@MethodName:string:["bar"] @TO@ MethodInvocation@@content().string("bar") @AT@ 5972 @LENGTH@ 13
------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:string:["bar"] @AT@ 5979 @LENGTH@ 5


MOV ExpressionStatement@@MethodInvocation:Security.addProvider(new XMLDSigRI()) @TO@ MethodDeclaration@@public, Boolean, MethodName:run,  @AT@ 2993 @LENGTH@ 38


UPD ExpressionStatement@@Assignment:restClient=new DefaultRestClient(httpClient,version,PayloadFormat.JSON,session) @TO@ Assignment:restClient=new DefaultRestClient(httpClient,version,PayloadFormat.JSON,session,new SalesforceLoginConfig()) @AT@ 6835 @LENGTH@ 85
---UPD Assignment@@restClient=new DefaultRestClient(httpClient,version,PayloadFormat.JSON,session) @TO@ restClient=new DefaultRestClient(httpClient,version,PayloadFormat.JSON,session,new SalesforceLoginConfig()) @AT@ 6835 @LENGTH@ 84
------UPD ClassInstanceCreation@@DefaultRestClient[httpClient, version, PayloadFormat.JSON, session] @TO@ DefaultRestClient[httpClient, version, PayloadFormat.JSON, session, new SalesforceLoginConfig()] @AT@ 6848 @LENGTH@ 71
---------INS ClassInstanceCreation@@SalesforceLoginConfig[] @TO@ ClassInstanceCreation@@DefaultRestClient[httpClient, version, PayloadFormat.JSON, session] @AT@ 6920 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@SalesforceLoginConfig[] @AT@ 6920 @LENGTH@ 3
------------INS SimpleType@@SalesforceLoginConfig @TO@ ClassInstanceCreation@@SalesforceLoginConfig[] @AT@ 6924 @LENGTH@ 21


UPD TypeDeclaration@@[@Configuration, @Neo4jIntegrationTest(domainPackages="org.springframework.data.neo4j.queries.ogmgh551"), @ComponentScan("org.springframework.data.neo4j.queries.ogmgh551"), static]ContextConfig,  @TO@ [@Configuration, @Neo4jIntegrationTest(repositoryPackages="org.springframework.data.neo4j.queries.ogmgh551",domainPackages="org.springframework.data.neo4j.queries.ogmgh551"), static]ContextConfig,  @AT@ 2792 @LENGTH@ 205
---UPD NormalAnnotation@@@Neo4jIntegrationTest(domainPackages="org.springframework.data.neo4j.queries.ogmgh551") @TO@ @Neo4jIntegrationTest(repositoryPackages="org.springframework.data.neo4j.queries.ogmgh551",domainPackages="org.springframework.data.neo4j.queries.ogmgh551") @AT@ 2808 @LENGTH@ 89
---DEL SingleMemberAnnotation@@@ComponentScan("org.springframework.data.neo4j.queries.ogmgh551") @AT@ 2899 @LENGTH@ 65


UPD ReturnStatement@@ClassInstanceCreation:new DefaultRestClient(httpClient,version,format,session) @TO@ ClassInstanceCreation:new DefaultRestClient(httpClient,version,format,session,loginConfig) @AT@ 28001 @LENGTH@ 67
---UPD ClassInstanceCreation@@DefaultRestClient[httpClient, version, format, session] @TO@ DefaultRestClient[httpClient, version, format, session, loginConfig] @AT@ 28008 @LENGTH@ 59
------INS SimpleName@@loginConfig @TO@ ClassInstanceCreation@@DefaultRestClient[httpClient, version, format, session] @AT@ 28068 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @TO@ TypeDeclaration@@[public]OAuth2AuthorizationCodeAuthenticationProviderTests,  @AT@ 6464 @LENGTH@ 1005
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6464 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6471 @LENGTH@ 4
---INS SimpleName@@MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6476 @LENGTH@ 76
---INS VariableDeclarationStatement@@Map<String,Object> additionalParameters=new HashMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6559 @LENGTH@ 59
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=new HashMap<>(); @AT@ 6559 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 6559 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 6563 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 6571 @LENGTH@ 6
------INS VariableDeclarationFragment@@additionalParameters=new HashMap<>() @TO@ VariableDeclarationStatement@@Map<String,Object> additionalParameters=new HashMap<>(); @AT@ 6579 @LENGTH@ 38
---------INS SimpleName@@additionalParameters @TO@ VariableDeclarationFragment@@additionalParameters=new HashMap<>() @AT@ 6579 @LENGTH@ 20
---------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@additionalParameters=new HashMap<>() @AT@ 6602 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 6602 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 6606 @LENGTH@ 9
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 6606 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:additionalParameters.put("param1","value1") @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6621 @LENGTH@ 45
------INS MethodInvocation@@additionalParameters.put("param1","value1") @TO@ ExpressionStatement@@MethodInvocation:additionalParameters.put("param1","value1") @AT@ 6621 @LENGTH@ 44
---------INS SimpleName@@Name:additionalParameters @TO@ MethodInvocation@@additionalParameters.put("param1","value1") @AT@ 6621 @LENGTH@ 20
---------INS SimpleName@@MethodName:put:["param1", "value1"] @TO@ MethodInvocation@@additionalParameters.put("param1","value1") @AT@ 6642 @LENGTH@ 23
------------INS StringLiteral@@"param1" @TO@ SimpleName@@MethodName:put:["param1", "value1"] @AT@ 6646 @LENGTH@ 8
------------INS StringLiteral@@"value1" @TO@ SimpleName@@MethodName:put:["param1", "value1"] @AT@ 6656 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:additionalParameters.put("param2","value2") @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6669 @LENGTH@ 45
------INS MethodInvocation@@additionalParameters.put("param2","value2") @TO@ ExpressionStatement@@MethodInvocation:additionalParameters.put("param2","value2") @AT@ 6669 @LENGTH@ 44
---------INS SimpleName@@Name:additionalParameters @TO@ MethodInvocation@@additionalParameters.put("param2","value2") @AT@ 6669 @LENGTH@ 20
---------INS SimpleName@@MethodName:put:["param2", "value2"] @TO@ MethodInvocation@@additionalParameters.put("param2","value2") @AT@ 6690 @LENGTH@ 23
------------INS StringLiteral@@"param2" @TO@ SimpleName@@MethodName:put:["param2", "value2"] @AT@ 6694 @LENGTH@ 8
------------INS StringLiteral@@"value2" @TO@ SimpleName@@MethodName:put:["param2", "value2"] @AT@ 6704 @LENGTH@ 8
---INS VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=accessTokenResponse().additionalParameters(additionalParameters).build(); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6718 @LENGTH@ 126
------INS SimpleType@@OAuth2AccessTokenResponse @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=accessTokenResponse().additionalParameters(additionalParameters).build(); @AT@ 6718 @LENGTH@ 25
------INS VariableDeclarationFragment@@accessTokenResponse=accessTokenResponse().additionalParameters(additionalParameters).build() @TO@ VariableDeclarationStatement@@OAuth2AccessTokenResponse accessTokenResponse=accessTokenResponse().additionalParameters(additionalParameters).build(); @AT@ 6744 @LENGTH@ 99
---------INS SimpleName@@accessTokenResponse @TO@ VariableDeclarationFragment@@accessTokenResponse=accessTokenResponse().additionalParameters(additionalParameters).build() @AT@ 6744 @LENGTH@ 19
---------INS MethodInvocation@@accessTokenResponse().additionalParameters(additionalParameters).build() @TO@ VariableDeclarationFragment@@accessTokenResponse=accessTokenResponse().additionalParameters(additionalParameters).build() @AT@ 6766 @LENGTH@ 77
------------INS MethodInvocation@@MethodName:additionalParameters:[additionalParameters] @TO@ MethodInvocation@@accessTokenResponse().additionalParameters(additionalParameters).build() @AT@ 6766 @LENGTH@ 64
---------------INS SimpleName@@additionalParameters @TO@ MethodInvocation@@MethodName:additionalParameters:[additionalParameters] @AT@ 6809 @LENGTH@ 20
------------INS MethodInvocation@@MethodName:accessTokenResponse:[] @TO@ MethodInvocation@@accessTokenResponse().additionalParameters(additionalParameters).build() @AT@ 6766 @LENGTH@ 21
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@accessTokenResponse().additionalParameters(additionalParameters).build() @AT@ 6836 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(accessTokenResponse) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6847 @LENGTH@ 93
------INS MethodInvocation@@when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(accessTokenResponse) @TO@ ExpressionStatement@@MethodInvocation:when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(accessTokenResponse) @AT@ 6847 @LENGTH@ 92
---------INS MethodInvocation@@MethodName:when:[this.accessTokenResponseClient.getTokenResponse(any())] @TO@ MethodInvocation@@when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(accessTokenResponse) @AT@ 6847 @LENGTH@ 60
------------INS MethodInvocation@@this.accessTokenResponseClient.getTokenResponse(any()) @TO@ MethodInvocation@@MethodName:when:[this.accessTokenResponseClient.getTokenResponse(any())] @AT@ 6852 @LENGTH@ 54
---------------INS FieldAccess@@this.accessTokenResponseClient @TO@ MethodInvocation@@this.accessTokenResponseClient.getTokenResponse(any()) @AT@ 6852 @LENGTH@ 30
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.accessTokenResponseClient @AT@ 6852 @LENGTH@ 4
------------------INS SimpleName@@accessTokenResponseClient @TO@ FieldAccess@@this.accessTokenResponseClient @AT@ 6857 @LENGTH@ 25
---------------INS SimpleName@@MethodName:getTokenResponse:[any()] @TO@ MethodInvocation@@this.accessTokenResponseClient.getTokenResponse(any()) @AT@ 6883 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:getTokenResponse:[any()] @AT@ 6900 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenReturn:[accessTokenResponse] @TO@ MethodInvocation@@when(this.accessTokenResponseClient.getTokenResponse(any())).thenReturn(accessTokenResponse) @AT@ 6908 @LENGTH@ 31
------------INS SimpleName@@accessTokenResponse @TO@ SimpleName@@MethodName:thenReturn:[accessTokenResponse] @AT@ 6919 @LENGTH@ 19
---INS VariableDeclarationStatement@@OAuth2AuthorizationExchange authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,success().build()); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 6944 @LENGTH@ 134
------INS SimpleType@@OAuth2AuthorizationExchange @TO@ VariableDeclarationStatement@@OAuth2AuthorizationExchange authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,success().build()); @AT@ 6944 @LENGTH@ 27
------INS VariableDeclarationFragment@@authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,success().build()) @TO@ VariableDeclarationStatement@@OAuth2AuthorizationExchange authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,success().build()); @AT@ 6972 @LENGTH@ 105
---------INS SimpleName@@authorizationExchange @TO@ VariableDeclarationFragment@@authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,success().build()) @AT@ 6972 @LENGTH@ 21
---------INS ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, success().build()] @TO@ VariableDeclarationFragment@@authorizationExchange=new OAuth2AuthorizationExchange(this.authorizationRequest,success().build()) @AT@ 6996 @LENGTH@ 81
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, success().build()] @AT@ 6996 @LENGTH@ 3
------------INS SimpleType@@OAuth2AuthorizationExchange @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, success().build()] @AT@ 7000 @LENGTH@ 27
------------INS FieldAccess@@this.authorizationRequest @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, success().build()] @AT@ 7028 @LENGTH@ 25
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationRequest @AT@ 7028 @LENGTH@ 4
---------------INS SimpleName@@authorizationRequest @TO@ FieldAccess@@this.authorizationRequest @AT@ 7033 @LENGTH@ 20
------------INS MethodInvocation@@success().build() @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[this.authorizationRequest, success().build()] @AT@ 7059 @LENGTH@ 17
---------------INS MethodInvocation@@MethodName:success:[] @TO@ MethodInvocation@@success().build() @AT@ 7059 @LENGTH@ 9
---------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@success().build() @AT@ 7069 @LENGTH@ 7
---INS VariableDeclarationStatement@@OAuth2AuthorizationCodeAuthenticationToken authentication=(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 7082 @LENGTH@ 254
------INS SimpleType@@OAuth2AuthorizationCodeAuthenticationToken @TO@ VariableDeclarationStatement@@OAuth2AuthorizationCodeAuthenticationToken authentication=(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)); @AT@ 7082 @LENGTH@ 42
------INS VariableDeclarationFragment@@authentication=(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @TO@ VariableDeclarationStatement@@OAuth2AuthorizationCodeAuthenticationToken authentication=(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)); @AT@ 7125 @LENGTH@ 210
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7125 @LENGTH@ 14
---------INS CastExpression@@(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @TO@ VariableDeclarationFragment@@authentication=(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7142 @LENGTH@ 193
------------INS SimpleType@@OAuth2AuthorizationCodeAuthenticationToken @TO@ CastExpression@@(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7143 @LENGTH@ 42
------------INS MethodInvocation@@this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @TO@ CastExpression@@(OAuth2AuthorizationCodeAuthenticationToken)this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7187 @LENGTH@ 148
---------------INS FieldAccess@@this.authenticationProvider @TO@ MethodInvocation@@this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7187 @LENGTH@ 27
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationProvider @AT@ 7187 @LENGTH@ 4
------------------INS SimpleName@@authenticationProvider @TO@ FieldAccess@@this.authenticationProvider @AT@ 7192 @LENGTH@ 22
---------------INS SimpleName@@MethodName:authenticate:[new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)] @TO@ MethodInvocation@@this.authenticationProvider.authenticate(new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)) @AT@ 7220 @LENGTH@ 115
------------------INS ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[this.clientRegistration, authorizationExchange] @TO@ SimpleName@@MethodName:authenticate:[new OAuth2AuthorizationCodeAuthenticationToken(this.clientRegistration,authorizationExchange)] @AT@ 7240 @LENGTH@ 94
---------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[this.clientRegistration, authorizationExchange] @AT@ 7240 @LENGTH@ 3
---------------------INS SimpleType@@OAuth2AuthorizationCodeAuthenticationToken @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[this.clientRegistration, authorizationExchange] @AT@ 7244 @LENGTH@ 42
---------------------INS FieldAccess@@this.clientRegistration @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[this.clientRegistration, authorizationExchange] @AT@ 7287 @LENGTH@ 23
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 7287 @LENGTH@ 4
------------------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 7292 @LENGTH@ 18
---------------------INS SimpleName@@authorizationExchange @TO@ ClassInstanceCreation@@OAuth2AuthorizationCodeAuthenticationToken[this.clientRegistration, authorizationExchange] @AT@ 7312 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(authentication.getAdditionalParameters()).containsAllEntriesOf(accessTokenResponse.getAdditionalParameters()) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAuthorizationSuccessResponseThenAdditionalParametersIncluded,  @AT@ 7340 @LENGTH@ 126
------INS MethodInvocation@@assertThat(authentication.getAdditionalParameters()).containsAllEntriesOf(accessTokenResponse.getAdditionalParameters()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(authentication.getAdditionalParameters()).containsAllEntriesOf(accessTokenResponse.getAdditionalParameters()) @AT@ 7340 @LENGTH@ 125
---------INS MethodInvocation@@MethodName:assertThat:[authentication.getAdditionalParameters()] @TO@ MethodInvocation@@assertThat(authentication.getAdditionalParameters()).containsAllEntriesOf(accessTokenResponse.getAdditionalParameters()) @AT@ 7340 @LENGTH@ 52
------------INS MethodInvocation@@authentication.getAdditionalParameters() @TO@ MethodInvocation@@MethodName:assertThat:[authentication.getAdditionalParameters()] @AT@ 7351 @LENGTH@ 40
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getAdditionalParameters() @AT@ 7351 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getAdditionalParameters:[] @TO@ MethodInvocation@@authentication.getAdditionalParameters() @AT@ 7366 @LENGTH@ 25
---------INS SimpleName@@MethodName:containsAllEntriesOf:[accessTokenResponse.getAdditionalParameters()] @TO@ MethodInvocation@@assertThat(authentication.getAdditionalParameters()).containsAllEntriesOf(accessTokenResponse.getAdditionalParameters()) @AT@ 7398 @LENGTH@ 67
------------INS MethodInvocation@@accessTokenResponse.getAdditionalParameters() @TO@ SimpleName@@MethodName:containsAllEntriesOf:[accessTokenResponse.getAdditionalParameters()] @AT@ 7419 @LENGTH@ 45
---------------INS SimpleName@@Name:accessTokenResponse @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 7419 @LENGTH@ 19
---------------INS SimpleName@@MethodName:getAdditionalParameters:[] @TO@ MethodInvocation@@accessTokenResponse.getAdditionalParameters() @AT@ 7439 @LENGTH@ 25


UPD VariableDeclarationStatement@@Document agg=Aggregation.newAggregation(project().and("color").as("chroma"),project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").thenValueOf("bright").otherwise("dark"))).toDocument("foo",Aggregation.DEFAULT_CONTEXT); @TO@ Document agg=Aggregation.newAggregation(project().and("color").as("chroma"),project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").then("bright").otherwise("dark"))).toDocument("foo",Aggregation.DEFAULT_CONTEXT); @AT@ 15657 @LENGTH@ 308
---UPD VariableDeclarationFragment@@agg=Aggregation.newAggregation(project().and("color").as("chroma"),project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").thenValueOf("bright").otherwise("dark"))).toDocument("foo",Aggregation.DEFAULT_CONTEXT) @TO@ agg=Aggregation.newAggregation(project().and("color").as("chroma"),project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").then("bright").otherwise("dark"))).toDocument("foo",Aggregation.DEFAULT_CONTEXT) @AT@ 15666 @LENGTH@ 298
------UPD MethodInvocation@@Aggregation.newAggregation(project().and("color").as("chroma"),project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").thenValueOf("bright").otherwise("dark"))).toDocument("foo",Aggregation.DEFAULT_CONTEXT) @TO@ Aggregation.newAggregation(project().and("color").as("chroma"),project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").then("bright").otherwise("dark"))).toDocument("foo",Aggregation.DEFAULT_CONTEXT) @AT@ 15672 @LENGTH@ 292
---------UPD MethodInvocation@@MethodName:newAggregation:[project().and("color").as("chroma"), project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").thenValueOf("bright").otherwise("dark"))] @TO@ MethodName:newAggregation:[project().and("color").as("chroma"), project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").then("bright").otherwise("dark"))] @AT@ 15672 @LENGTH@ 237
------------UPD MethodInvocation@@project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").thenValueOf("bright").otherwise("dark")) @TO@ project().and("luminosity").applyCondition(ConditionalOperators.when("chroma").then("bright").otherwise("dark")) @AT@ 15743 @LENGTH@ 165
---------------UPD SimpleName@@MethodName:applyCondition:[ConditionalOperators.when("chroma").thenValueOf("bright").otherwise("dark")] @TO@ MethodName:applyCondition:[ConditionalOperators.when("chroma").then("bright").otherwise("dark")] @AT@ 15781 @LENGTH@ 127
------------------UPD MethodInvocation@@ConditionalOperators.when("chroma").thenValueOf("bright").otherwise("dark") @TO@ ConditionalOperators.when("chroma").then("bright").otherwise("dark") @AT@ 15796 @LENGTH@ 111
---------------------UPD MethodInvocation@@MethodName:thenValueOf:["bright"] @TO@ MethodName:then:["bright"] @AT@ 15796 @LENGTH@ 81


UPD TryStatement@@try {  startService(endpoint);  Consumer consumer=endpoint.createConsumer(new BeanProcessor(service,context));  context.addService(consumer,true,true);} catch (Exception cause) {  throw new FailedToCreateConsumerException(endpoint,cause);} @TO@ try {  initService(endpoint);  Consumer consumer=endpoint.createConsumer(new BeanProcessor(service,context));  context.addService(consumer,true,false);} catch (Exception cause) {  throw new FailedToCreateConsumerException(endpoint,cause);} @AT@ 3227 @LENGTH@ 441
---UPD ExpressionStatement@@MethodInvocation:startService(endpoint) @TO@ MethodInvocation:initService(endpoint) @AT@ 3317 @LENGTH@ 23
------UPD MethodInvocation@@startService(endpoint) @TO@ initService(endpoint) @AT@ 3317 @LENGTH@ 22
---------UPD SimpleName@@MethodName:startService:[endpoint] @TO@ MethodName:initService:[endpoint] @AT@ 3317 @LENGTH@ 22
---UPD ExpressionStatement@@MethodInvocation:context.addService(consumer,true,true) @TO@ MethodInvocation:context.addService(consumer,true,false) @AT@ 3497 @LENGTH@ 41
------UPD MethodInvocation@@context.addService(consumer,true,true) @TO@ context.addService(consumer,true,false) @AT@ 3497 @LENGTH@ 40
---------UPD SimpleName@@MethodName:addService:[consumer, true, true] @TO@ MethodName:addService:[consumer, true, false] @AT@ 3505 @LENGTH@ 32
------------UPD BooleanLiteral@@true @TO@ false @AT@ 3532 @LENGTH@ 4


INS MethodDeclaration@@ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @TO@ TypeDeclaration@@[public]ErrorHandlerFactory,  @AT@ 1770 @LENGTH@ 58
---INS SimpleType@@ErrorHandlerFactory @TO@ MethodDeclaration@@ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1750 @LENGTH@ 19
---INS SimpleName@@MethodName:getOrLookupErrorHandlerFactory @TO@ MethodDeclaration@@ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1770 @LENGTH@ 30
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@ErrorHandlerFactory, MethodName:getOrLookupErrorHandlerFactory, RouteContext routeContext,  @AT@ 1801 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 1801 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 1814 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=web)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:remove") @TO@ MethodInvocation:this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=sso)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:remove") @AT@ 2333 @LENGTH@ 294
---UPD MethodInvocation@@this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=web)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:remove") @TO@ this.builder.node(TWO_NODES).setup("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=sso)").teardown("/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:remove") @AT@ 2333 @LENGTH@ 280
------UPD MethodInvocation@@MethodName:setup:["/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=web)"] @TO@ MethodName:setup:["/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=sso)"] @AT@ 2333 @LENGTH@ 165
---------UPD StringLiteral@@"/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=web)" @TO@ "/subsystem=distributable-web/hotrod-single-sign-on-management=default-host:add(remote-cache-container=sso)" @AT@ 2389 @LENGTH@ 108


UPD Block@@ThenBody:{  getContext().setLoadTypeConverters(CamelContextHelper.parseBoolean(getContext(),getLoadTypeConverters()));} @TO@ ThenBody:{  String s=getContext().resolvePropertyPlaceholders(getLoadTypeConverters());  getContext().setLoadTypeConverters(Boolean.parseBoolean(s));} @AT@ 8858 @LENGTH@ 131
---UPD ExpressionStatement@@MethodInvocation:getContext().setLoadTypeConverters(CamelContextHelper.parseBoolean(getContext(),getLoadTypeConverters())) @TO@ MethodInvocation:getContext().setLoadTypeConverters(Boolean.parseBoolean(s)) @AT@ 8872 @LENGTH@ 107
------UPD MethodInvocation@@getContext().setLoadTypeConverters(CamelContextHelper.parseBoolean(getContext(),getLoadTypeConverters())) @TO@ getContext().setLoadTypeConverters(Boolean.parseBoolean(s)) @AT@ 8872 @LENGTH@ 106
---------UPD SimpleName@@MethodName:setLoadTypeConverters:[CamelContextHelper.parseBoolean(getContext(),getLoadTypeConverters())] @TO@ MethodName:setLoadTypeConverters:[Boolean.parseBoolean(s)] @AT@ 8885 @LENGTH@ 93
------------UPD MethodInvocation@@CamelContextHelper.parseBoolean(getContext(),getLoadTypeConverters()) @TO@ Boolean.parseBoolean(s) @AT@ 8907 @LENGTH@ 70
---------------UPD SimpleName@@Name:CamelContextHelper @TO@ Name:Boolean @AT@ 8907 @LENGTH@ 18
---------------UPD SimpleName@@MethodName:parseBoolean:[getContext(), getLoadTypeConverters()] @TO@ MethodName:parseBoolean:[s] @AT@ 8926 @LENGTH@ 51
------------------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 8939 @LENGTH@ 12
------------------DEL MethodInvocation@@MethodName:getLoadTypeConverters:[] @AT@ 8953 @LENGTH@ 23
------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:parseBoolean:[getContext(), getLoadTypeConverters()] @AT@ 9018 @LENGTH@ 1
---INS VariableDeclarationStatement@@String s=getContext().resolvePropertyPlaceholders(getLoadTypeConverters()); @TO@ Block@@ThenBody:{  getContext().setLoadTypeConverters(CamelContextHelper.parseBoolean(getContext(),getLoadTypeConverters()));} @AT@ 8872 @LENGTH@ 77
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=getContext().resolvePropertyPlaceholders(getLoadTypeConverters()); @AT@ 8872 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=getContext().resolvePropertyPlaceholders(getLoadTypeConverters()) @TO@ VariableDeclarationStatement@@String s=getContext().resolvePropertyPlaceholders(getLoadTypeConverters()); @AT@ 8879 @LENGTH@ 69
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=getContext().resolvePropertyPlaceholders(getLoadTypeConverters()) @AT@ 8879 @LENGTH@ 1
---------INS MethodInvocation@@getContext().resolvePropertyPlaceholders(getLoadTypeConverters()) @TO@ VariableDeclarationFragment@@s=getContext().resolvePropertyPlaceholders(getLoadTypeConverters()) @AT@ 8883 @LENGTH@ 65
------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@getContext().resolvePropertyPlaceholders(getLoadTypeConverters()) @AT@ 8883 @LENGTH@ 12
------------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[getLoadTypeConverters()] @TO@ MethodInvocation@@getContext().resolvePropertyPlaceholders(getLoadTypeConverters()) @AT@ 8896 @LENGTH@ 52
---------------INS MethodInvocation@@MethodName:getLoadTypeConverters:[] @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[getLoadTypeConverters()] @AT@ 8924 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:parser.addMethod().setSignature("    protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException").setBody("switch (key) {\n" + model.stream().filter(root::isAssignableFrom).filter(cl -> cl.getAnnotation(XmlRootElement.class) != null).map(cl -> {
  String en=cl.getAnnotation(XmlRootElement.class).name();
  if ("##default".equals(en)) {
    en=lowercase(cl.getSimpleName());
  }
  String tn=cl.getSimpleName();
  return "    case \"" + en + "\": return doParse"+ tn+ "();\n";
}
).collect(Collectors.joining()) + "    default: return null;\n"+ "}") @TO@ MethodInvocation:parser.addMethod().setSignature("protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException").setBody("switch (key) {\n" + model.stream().filter(root::isAssignableFrom).filter(cl -> cl.getAnnotation(XmlRootElement.class) != null).map(cl -> {
  String en=cl.getAnnotation(XmlRootElement.class).name();
  if ("##default".equals(en)) {
    en=lowercase(cl.getSimpleName());
  }
  String tn=cl.getSimpleName();
  return "    case \"" + en + "\": return doParse"+ tn+ "();\n";
}
).collect(Collectors.joining()) + "    default: return null;\n"+ "}") @AT@ 29079 @LENGTH@ 790
---UPD MethodInvocation@@parser.addMethod().setSignature("    protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException").setBody("switch (key) {\n" + model.stream().filter(root::isAssignableFrom).filter(cl -> cl.getAnnotation(XmlRootElement.class) != null).map(cl -> {
  String en=cl.getAnnotation(XmlRootElement.class).name();
  if ("##default".equals(en)) {
    en=lowercase(cl.getSimpleName());
  }
  String tn=cl.getSimpleName();
  return "    case \"" + en + "\": return doParse"+ tn+ "();\n";
}
).collect(Collectors.joining()) + "    default: return null;\n"+ "}") @TO@ parser.addMethod().setSignature("protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException").setBody("switch (key) {\n" + model.stream().filter(root::isAssignableFrom).filter(cl -> cl.getAnnotation(XmlRootElement.class) != null).map(cl -> {
  String en=cl.getAnnotation(XmlRootElement.class).name();
  if ("##default".equals(en)) {
    en=lowercase(cl.getSimpleName());
  }
  String tn=cl.getSimpleName();
  return "    case \"" + en + "\": return doParse"+ tn+ "();\n";
}
).collect(Collectors.joining()) + "    default: return null;\n"+ "}") @AT@ 29079 @LENGTH@ 789
------UPD MethodInvocation@@MethodName:setSignature:["    protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException"] @TO@ MethodName:setSignature:["protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException"] @AT@ 29079 @LENGTH@ 188
---------UPD InfixExpression@@"    protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException" @TO@ "protected " + root.getSimpleName() + " doParse"+ root.getSimpleName()+ "Ref(String key) throws IOException, XmlPullParserException" @AT@ 29128 @LENGTH@ 138
------------UPD StringLiteral@@"    protected " @TO@ "protected " @AT@ 29128 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:responseAttrs.put("attr1","value1") @TO@ MethodDeclaration@@public, void, MethodName:loadAuthenticationWhenIntrospectionResponseMissingActiveAttributeThenReturnAuthentication, Exception,  @AT@ 5158 @LENGTH@ 37
---INS MethodInvocation@@responseAttrs.put("attr1","value1") @TO@ ExpressionStatement@@MethodInvocation:responseAttrs.put("attr1","value1") @AT@ 5158 @LENGTH@ 36
------INS SimpleName@@Name:responseAttrs @TO@ MethodInvocation@@responseAttrs.put("attr1","value1") @AT@ 5158 @LENGTH@ 13
------INS SimpleName@@MethodName:put:["attr1", "value1"] @TO@ MethodInvocation@@responseAttrs.put("attr1","value1") @AT@ 5172 @LENGTH@ 22
---------INS StringLiteral@@"attr1" @TO@ SimpleName@@MethodName:put:["attr1", "value1"] @AT@ 5176 @LENGTH@ 7
---------INS StringLiteral@@"value1" @TO@ SimpleName@@MethodName:put:["attr1", "value1"] @AT@ 5185 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token")).block()).isInstanceOf(OAuth2AuthenticationException.class).extracting("error.description").isEqualTo("Invalid token") @TO@ MethodInvocation:assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token")).block()).isInstanceOf(AuthenticationServiceException.class) @AT@ 6008 @LENGTH@ 221
---UPD MethodInvocation@@assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token")).block()).isInstanceOf(OAuth2AuthenticationException.class).extracting("error.description").isEqualTo("Invalid token") @TO@ assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token")).block()).isInstanceOf(AuthenticationServiceException.class) @AT@ 6008 @LENGTH@ 220
------DEL MethodInvocation@@MethodName:extracting:["error.description"] @AT@ 6008 @LENGTH@ 188
---------DEL StringLiteral@@"error.description" @AT@ 6176 @LENGTH@ 19
------DEL MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @AT@ 6008 @LENGTH@ 151
---------DEL TypeLiteral@@OAuth2AuthenticationException.class @AT@ 6123 @LENGTH@ 35
------INS SimpleName@@MethodName:isInstanceOf:[AuthenticationServiceException.class] @TO@ MethodInvocation@@assertThatCode(() -> provider.authenticate(new BearerTokenAuthenticationToken("token")).block()).isInstanceOf(OAuth2AuthenticationException.class).extracting("error.description").isEqualTo("Invalid token") @AT@ 6114 @LENGTH@ 50
---------INS TypeLiteral@@AuthenticationServiceException.class @TO@ SimpleName@@MethodName:isInstanceOf:[AuthenticationServiceException.class] @AT@ 6127 @LENGTH@ 36
------DEL SimpleName@@MethodName:isEqualTo:["Invalid token"] @AT@ 6202 @LENGTH@ 26
---------DEL StringLiteral@@"Invalid token" @AT@ 6212 @LENGTH@ 15


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HystrixEventStreamService.class)] @TO@ TypeDeclaration@@[@ManagedResource(description="Managed Hystrix EventStreamService"), public]HystrixEventStreamService, ServiceSupport[StaticService, HystrixMetricsPoller.MetricsAsJsonPollerListener] @AT@ 1899 @LENGTH@ 91


UPD VariableDeclarationStatement@@CloudWatchClient cloudWatchClient=mock(CloudWatchClient.class); @TO@ CloudWatchClient cloudWatchClient=new CloudWatchClientMock(); @AT@ 1433 @LENGTH@ 65
---UPD VariableDeclarationFragment@@cloudWatchClient=mock(CloudWatchClient.class) @TO@ cloudWatchClient=new CloudWatchClientMock() @AT@ 1450 @LENGTH@ 47
------INS ClassInstanceCreation@@CloudWatchClientMock[] @TO@ VariableDeclarationFragment@@cloudWatchClient=mock(CloudWatchClient.class) @AT@ 1423 @LENGTH@ 26
---------INS New@@new @TO@ ClassInstanceCreation@@CloudWatchClientMock[] @AT@ 1423 @LENGTH@ 3
---------INS SimpleType@@CloudWatchClientMock @TO@ ClassInstanceCreation@@CloudWatchClientMock[] @AT@ 1427 @LENGTH@ 20
------DEL MethodInvocation@@mock(CloudWatchClient.class) @AT@ 1469 @LENGTH@ 28
---------DEL SimpleName@@MethodName:mock:[CloudWatchClient.class] @AT@ 1469 @LENGTH@ 28
------------DEL TypeLiteral@@CloudWatchClient.class @AT@ 1474 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:conf.setVar(ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY,"/tmp/hive/_resultscache_" + ProcessUtils.getPid()) @TO@ MethodDeclaration@@public, voidMethodName:QTestUtil, QTestArguments testArgs, Exception,  @AT@ 8519 @LENGTH@ 109
---INS MethodInvocation@@conf.setVar(ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY,"/tmp/hive/_resultscache_" + ProcessUtils.getPid()) @TO@ ExpressionStatement@@MethodInvocation:conf.setVar(ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY,"/tmp/hive/_resultscache_" + ProcessUtils.getPid()) @AT@ 8519 @LENGTH@ 108
------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.setVar(ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY,"/tmp/hive/_resultscache_" + ProcessUtils.getPid()) @AT@ 8519 @LENGTH@ 4
------INS SimpleName@@MethodName:setVar:[ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY, "/tmp/hive/_resultscache_" + ProcessUtils.getPid()] @TO@ MethodInvocation@@conf.setVar(ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY,"/tmp/hive/_resultscache_" + ProcessUtils.getPid()) @AT@ 8524 @LENGTH@ 103
---------INS QualifiedName@@ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY @TO@ SimpleName@@MethodName:setVar:[ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY, "/tmp/hive/_resultscache_" + ProcessUtils.getPid()] @AT@ 8531 @LENGTH@ 43
------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY @AT@ 8531 @LENGTH@ 8
------------INS SimpleName@@HIVE_QUERY_RESULTS_CACHE_DIRECTORY @TO@ QualifiedName@@ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY @AT@ 8540 @LENGTH@ 34
---------INS InfixExpression@@"/tmp/hive/_resultscache_" + ProcessUtils.getPid() @TO@ SimpleName@@MethodName:setVar:[ConfVars.HIVE_QUERY_RESULTS_CACHE_DIRECTORY, "/tmp/hive/_resultscache_" + ProcessUtils.getPid()] @AT@ 8576 @LENGTH@ 50
------------INS StringLiteral@@"/tmp/hive/_resultscache_" @TO@ InfixExpression@@"/tmp/hive/_resultscache_" + ProcessUtils.getPid() @AT@ 8576 @LENGTH@ 26
------------INS Operator@@+ @TO@ InfixExpression@@"/tmp/hive/_resultscache_" + ProcessUtils.getPid() @AT@ 8602 @LENGTH@ 1
------------INS MethodInvocation@@ProcessUtils.getPid() @TO@ InfixExpression@@"/tmp/hive/_resultscache_" + ProcessUtils.getPid() @AT@ 8605 @LENGTH@ 21
---------------INS SimpleName@@Name:ProcessUtils @TO@ MethodInvocation@@ProcessUtils.getPid() @AT@ 8605 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getPid:[] @TO@ MethodInvocation@@ProcessUtils.getPid() @AT@ 8618 @LENGTH@ 8


INS MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @TO@ TypeDeclaration@@[@Neo4jIntegrationTest, @Tag(NEEDS_REACTIVE_SUPPORT)]ReactiveRepositoryIT,  @AT@ 25553 @LENGTH@ 169
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @AT@ 25548 @LENGTH@ 4
---INS SimpleName@@MethodName:countBySimplePropertiesOred @TO@ MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @AT@ 25553 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @TO@ MethodDeclaration@@void, MethodName:countBySimplePropertiesOred,  @AT@ 25588 @LENGTH@ 131
------INS MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @AT@ 25588 @LENGTH@ 130
---------INS MethodInvocation@@MethodName:expectNext:[2L] @TO@ MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @AT@ 25588 @LENGTH@ 113
------------INS NumberLiteral@@2L @TO@ MethodInvocation@@MethodName:expectNext:[2L] @AT@ 25698 @LENGTH@ 2
---------INS MethodInvocation@@MethodName:as:[StepVerifier::create] @TO@ MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @AT@ 25588 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:countAllByNameOrName:[TEST_PERSON1_NAME, TEST_PERSON2_NAME] @TO@ MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @AT@ 25588 @LENGTH@ 69
------------INS SimpleName@@TEST_PERSON1_NAME @TO@ MethodInvocation@@MethodName:countAllByNameOrName:[TEST_PERSON1_NAME, TEST_PERSON2_NAME] @AT@ 25620 @LENGTH@ 17
------------INS SimpleName@@TEST_PERSON2_NAME @TO@ MethodInvocation@@MethodName:countAllByNameOrName:[TEST_PERSON1_NAME, TEST_PERSON2_NAME] @AT@ 25639 @LENGTH@ 17
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @AT@ 25588 @LENGTH@ 10
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@repository.countAllByNameOrName(TEST_PERSON1_NAME,TEST_PERSON2_NAME).as(StepVerifier::create).expectNext(2L).verifyComplete() @AT@ 25702 @LENGTH@ 16


UPD VariableDeclarationStatement@@String tokenValue=new String(Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey())); @TO@ String tokenValue=new String(Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey())); @AT@ 12585 @LENGTH@ 96
---UPD VariableDeclarationFragment@@tokenValue=new String(Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey())) @TO@ tokenValue=new String(Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey())) @AT@ 12592 @LENGTH@ 88
------UPD ClassInstanceCreation@@String[Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey())] @TO@ String[Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey())] @AT@ 12605 @LENGTH@ 75
---------UPD MethodInvocation@@Base64.encodeBase64(DEFAULT_TOKEN_GENERATOR.generateKey()) @TO@ Base64.encodeBase64URLSafe(DEFAULT_TOKEN_GENERATOR.generateKey()) @AT@ 12616 @LENGTH@ 63
------------UPD SimpleName@@MethodName:encodeBase64:[DEFAULT_TOKEN_GENERATOR.generateKey()] @TO@ MethodName:encodeBase64URLSafe:[DEFAULT_TOKEN_GENERATOR.generateKey()] @AT@ 12623 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @AT@ 2108 @LENGTH@ 392
---UPD MethodInvocation@@from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @AT@ 2108 @LENGTH@ 391
------UPD MethodInvocation@@MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder"] @AT@ 2108 @LENGTH@ 97
---------UPD InfixExpression@@"netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2113 @LENGTH@ 91
------------UPD StringLiteral@@"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "?sync=true&decoders=#hl7decoder&encoders=#hl7encoder" @AT@ 2152 @LENGTH@ 52


UPD FieldDeclaration@@private, final, Map<Class<?>,ResourceMetadata>, [cache=new ConcurrentHashMap<>()] @TO@ private, final, Map<Class<?>,ResourceMetadata>, [cache=new ConcurrentReferenceHashMap<>()] @AT@ 1600 @LENGTH@ 80
---UPD VariableDeclarationFragment@@cache=new ConcurrentHashMap<>() @TO@ cache=new ConcurrentReferenceHashMap<>() @AT@ 1646 @LENGTH@ 33
------UPD ClassInstanceCreation@@ConcurrentHashMap<>[] @TO@ ConcurrentReferenceHashMap<>[] @AT@ 1654 @LENGTH@ 25
---------UPD ParameterizedType@@ConcurrentHashMap<> @TO@ ConcurrentReferenceHashMap<> @AT@ 1658 @LENGTH@ 19
------------UPD SimpleType@@ConcurrentHashMap @TO@ ConcurrentReferenceHashMap @AT@ 1658 @LENGTH@ 17


UPD IfStatement@@if (parent == null && providers.isEmpty()) {  throw new IllegalArgumentException("A parent AuthenticationManager or a list " + "of AuthenticationProviders is required");} @TO@ if (parent == null && providers.isEmpty()) {  throw new IllegalArgumentException("A parent AuthenticationManager or a list " + "of AuthenticationProviders is required");} else if (providers.contains(null)) {  throw new IllegalArgumentException("providers list cannot contain null values");} @AT@ 5663 @LENGTH@ 188
---INS Block@@ElseBody:if (providers.contains(null)) {  throw new IllegalArgumentException("providers list cannot contain null values");} @TO@ IfStatement@@if (parent == null && providers.isEmpty()) {  throw new IllegalArgumentException("A parent AuthenticationManager or a list " + "of AuthenticationProviders is required");} @AT@ 5989 @LENGTH@ 125
------INS IfStatement@@if (providers.contains(null)) {  throw new IllegalArgumentException("providers list cannot contain null values");} @TO@ Block@@ElseBody:if (providers.contains(null)) {  throw new IllegalArgumentException("providers list cannot contain null values");} @AT@ 5989 @LENGTH@ 125
---------INS MethodInvocation@@providers.contains(null) @TO@ IfStatement@@if (providers.contains(null)) {  throw new IllegalArgumentException("providers list cannot contain null values");} @AT@ 5993 @LENGTH@ 24
------------INS SimpleName@@Name:providers @TO@ MethodInvocation@@providers.contains(null) @AT@ 5993 @LENGTH@ 9
------------INS SimpleName@@MethodName:contains:[null] @TO@ MethodInvocation@@providers.contains(null) @AT@ 6003 @LENGTH@ 14
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:contains:[null] @AT@ 6012 @LENGTH@ 4
---------INS Block@@ThenBody:{  throw new IllegalArgumentException("providers list cannot contain null values");} @TO@ IfStatement@@if (providers.contains(null)) {  throw new IllegalArgumentException("providers list cannot contain null values");} @AT@ 6019 @LENGTH@ 95
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("providers list cannot contain null values") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("providers list cannot contain null values");} @AT@ 6024 @LENGTH@ 86
---------------INS ClassInstanceCreation@@IllegalArgumentException["providers list cannot contain null values"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("providers list cannot contain null values") @AT@ 6030 @LENGTH@ 79
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["providers list cannot contain null values"] @AT@ 6030 @LENGTH@ 3
------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["providers list cannot contain null values"] @AT@ 6034 @LENGTH@ 24
------------------INS StringLiteral@@"providers list cannot contain null values" @TO@ ClassInstanceCreation@@IllegalArgumentException["providers list cannot contain null values"] @AT@ 6065 @LENGTH@ 43


UPD TypeDeclaration@@[@Converter(generateLoader=true), public]GridFsConverter,  @TO@ [@Converter(generateLoader=true), public, final]GridFsConverter,  @AT@ 993 @LENGTH@ 366
---INS Modifier@@final @TO@ TypeDeclaration@@[@Converter(generateLoader=true), public]GridFsConverter,  @AT@ 1034 @LENGTH@ 5


UPD MethodDeclaration@@KubernetesPersistentVolumesEndpointBuilder, MethodName:kubernetesPersistentVolumes, String path,  @TO@ static, KubernetesPersistentVolumesEndpointBuilder, MethodName:kubernetesPersistentVolumes, String path,  @AT@ 15860 @LENGTH@ 502
---INS Modifier@@static @TO@ MethodDeclaration@@KubernetesPersistentVolumesEndpointBuilder, MethodName:kubernetesPersistentVolumes, String path,  @AT@ 15817 @LENGTH@ 6

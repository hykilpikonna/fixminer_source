MOV MethodDeclaration@@private, static, boolean, MethodName:initWindowsOs,  @TO@ TypeDeclaration@@[public, final]FileUtil,  @AT@ 2374 @LENGTH@ 171
---UPD ReturnStatement@@InfixExpression:osName.indexOf("windows") > -1 @TO@ MethodInvocation:osName.contains("windows") @AT@ 2501 @LENGTH@ 38
------INS MethodInvocation@@osName.contains("windows") @TO@ ReturnStatement@@InfixExpression:osName.indexOf("windows") > -1 @AT@ 2005 @LENGTH@ 26
---------MOV SimpleName@@Name:osName @TO@ MethodInvocation@@osName.contains("windows") @AT@ 2508 @LENGTH@ 6
---------MOV SimpleName@@MethodName:indexOf:["windows"] @TO@ MethodInvocation@@osName.contains("windows") @AT@ 2515 @LENGTH@ 18
------DEL InfixExpression@@osName.indexOf("windows") > -1 @AT@ 2508 @LENGTH@ 30
---------DEL MethodInvocation@@osName.indexOf("windows") @AT@ 2508 @LENGTH@ 25
---------DEL Operator@@> @AT@ 2533 @LENGTH@ 1
---------DEL PrefixExpression@@-1 @AT@ 2536 @LENGTH@ 2
------------DEL Operator@@- @AT@ 2536 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 2537 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:builder.getRawBeanDefinition().setDependsOn(StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.BEAN_NAME_DELIMITERS)) @TO@ MethodInvocation:builder.getRawBeanDefinition().setDependsOn(StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS)) @AT@ 2106 @LENGTH@ 139
---UPD MethodInvocation@@builder.getRawBeanDefinition().setDependsOn(StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.BEAN_NAME_DELIMITERS)) @TO@ builder.getRawBeanDefinition().setDependsOn(StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS)) @AT@ 2106 @LENGTH@ 138
------UPD SimpleName@@MethodName:setDependsOn:[StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.BEAN_NAME_DELIMITERS)] @TO@ MethodName:setDependsOn:[StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS)] @AT@ 2137 @LENGTH@ 107
---------UPD MethodInvocation@@StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.BEAN_NAME_DELIMITERS) @TO@ StringUtils.tokenizeToStringArray(depends,BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS) @AT@ 2150 @LENGTH@ 93
------------UPD SimpleName@@MethodName:tokenizeToStringArray:[depends, BeanDefinitionParserDelegate.BEAN_NAME_DELIMITERS] @TO@ MethodName:tokenizeToStringArray:[depends, BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS] @AT@ 2162 @LENGTH@ 81
---------------UPD QualifiedName@@BeanDefinitionParserDelegate.BEAN_NAME_DELIMITERS @TO@ BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS @AT@ 2193 @LENGTH@ 49
------------------UPD SimpleName@@BEAN_NAME_DELIMITERS @TO@ MULTI_VALUE_ATTRIBUTE_DELIMITERS @AT@ 2222 @LENGTH@ 20


UPD SwitchStatement@@switch (attribute) {case BINDING:  TransactionSubsystemRootResourceDefinition.BINDING.parseAndSetParameter(value,operation,reader);break;case STATUS_BINDING:TransactionSubsystemRootResourceDefinition.STATUS_BINDING.parseAndSetParameter(value,operation,reader);break;case RECOVERY_LISTENER:TransactionSubsystemRootResourceDefinition.RECOVERY_LISTENER.parseAndSetParameter(value,operation,reader);break;default :unexpectedAttribute(reader,i);} @TO@ switch (attribute) {case BINDING:  TransactionSubsystemRootResourceDefinition.BINDING.parseAndSetParameter(value,operation,reader);break;case STATUS_BINDING:TransactionSubsystemRootResourceDefinition.STATUS_BINDING.parseAndSetParameter(value,operation,reader);break;case RECOVERY_LISTENER:TransactionSubsystemRootResourceDefinition.RECOVERY_LISTENER.parseAndSetParameter(value,operation,reader);break;default :throw unexpectedAttribute(reader,i);} @AT@ 19173 @LENGTH@ 673
---INS ThrowStatement@@MethodInvocation:unexpectedAttribute(reader,i) @TO@ SwitchStatement@@switch (attribute) {case BINDING:  TransactionSubsystemRootResourceDefinition.BINDING.parseAndSetParameter(value,operation,reader);break;case STATUS_BINDING:TransactionSubsystemRootResourceDefinition.STATUS_BINDING.parseAndSetParameter(value,operation,reader);break;case RECOVERY_LISTENER:TransactionSubsystemRootResourceDefinition.RECOVERY_LISTENER.parseAndSetParameter(value,operation,reader);break;default :unexpectedAttribute(reader,i);} @AT@ 19801 @LENGTH@ 37
------MOV MethodInvocation@@unexpectedAttribute(reader,i) @TO@ ThrowStatement@@MethodInvocation:unexpectedAttribute(reader,i) @AT@ 19801 @LENGTH@ 30
---DEL ExpressionStatement@@MethodInvocation:unexpectedAttribute(reader,i) @AT@ 19801 @LENGTH@ 31


UPD VariableDeclarationStatement@@boolean found=true; @TO@ boolean found=false; @AT@ 5852 @LENGTH@ 21
---UPD VariableDeclarationFragment@@found=true @TO@ found=false @AT@ 5860 @LENGTH@ 12
------UPD BooleanLiteral@@true @TO@ false @AT@ 5868 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ContainerStartupTest, FabricTestSupport @AT@ 3916 @LENGTH@ 544
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 3916 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 3923 @LENGTH@ 4
---INS SimpleName@@MethodName:testLocalFabricWithMissignProfile @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 3928 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 3971 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:System.out.println(executeCommand("fabric:create -n -p missing")) @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 3991 @LENGTH@ 66
------INS MethodInvocation@@System.out.println(executeCommand("fabric:create -n -p missing")) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(executeCommand("fabric:create -n -p missing")) @AT@ 3991 @LENGTH@ 65
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(executeCommand("fabric:create -n -p missing")) @AT@ 3991 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:[executeCommand("fabric:create -n -p missing")] @TO@ MethodInvocation@@System.out.println(executeCommand("fabric:create -n -p missing")) @AT@ 4002 @LENGTH@ 54
------------INS MethodInvocation@@executeCommand("fabric:create -n -p missing") @TO@ SimpleName@@MethodName:println:[executeCommand("fabric:create -n -p missing")] @AT@ 4010 @LENGTH@ 45
---------------INS SimpleName@@MethodName:executeCommand:["fabric:create -n -p missing"] @TO@ MethodInvocation@@executeCommand("fabric:create -n -p missing") @AT@ 4010 @LENGTH@ 45
------------------INS StringLiteral@@"fabric:create -n -p missing" @TO@ SimpleName@@MethodName:executeCommand:["fabric:create -n -p missing"] @AT@ 4025 @LENGTH@ 29
---INS VariableDeclarationStatement@@String response=executeCommand("fabric:container-list"); @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 4067 @LENGTH@ 58
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String response=executeCommand("fabric:container-list"); @AT@ 4067 @LENGTH@ 6
------INS VariableDeclarationFragment@@response=executeCommand("fabric:container-list") @TO@ VariableDeclarationStatement@@String response=executeCommand("fabric:container-list"); @AT@ 4074 @LENGTH@ 50
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=executeCommand("fabric:container-list") @AT@ 4074 @LENGTH@ 8
---------INS MethodInvocation@@executeCommand("fabric:container-list") @TO@ VariableDeclarationFragment@@response=executeCommand("fabric:container-list") @AT@ 4085 @LENGTH@ 39
------------INS SimpleName@@MethodName:executeCommand:["fabric:container-list"] @TO@ MethodInvocation@@executeCommand("fabric:container-list") @AT@ 4085 @LENGTH@ 39
---------------INS StringLiteral@@"fabric:container-list" @TO@ SimpleName@@MethodName:executeCommand:["fabric:container-list"] @AT@ 4100 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertTrue(response.contains("The following profiles are assigned but not found: missing.")) @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 4134 @LENGTH@ 93
------INS MethodInvocation@@assertTrue(response.contains("The following profiles are assigned but not found: missing.")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.contains("The following profiles are assigned but not found: missing.")) @AT@ 4134 @LENGTH@ 92
---------INS SimpleName@@MethodName:assertTrue:[response.contains("The following profiles are assigned but not found: missing.")] @TO@ MethodInvocation@@assertTrue(response.contains("The following profiles are assigned but not found: missing.")) @AT@ 4134 @LENGTH@ 92
------------INS MethodInvocation@@response.contains("The following profiles are assigned but not found: missing.") @TO@ SimpleName@@MethodName:assertTrue:[response.contains("The following profiles are assigned but not found: missing.")] @AT@ 4145 @LENGTH@ 80
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.contains("The following profiles are assigned but not found: missing.") @AT@ 4145 @LENGTH@ 8
---------------INS SimpleName@@MethodName:contains:["The following profiles are assigned but not found: missing."] @TO@ MethodInvocation@@response.contains("The following profiles are assigned but not found: missing.") @AT@ 4154 @LENGTH@ 71
------------------INS StringLiteral@@"The following profiles are assigned but not found: missing." @TO@ SimpleName@@MethodName:contains:["The following profiles are assigned but not found: missing."] @AT@ 4163 @LENGTH@ 61
---INS ExpressionStatement@@MethodInvocation:executeCommand("fabric:container-remove-profile root missing") @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 4236 @LENGTH@ 63
------INS MethodInvocation@@executeCommand("fabric:container-remove-profile root missing") @TO@ ExpressionStatement@@MethodInvocation:executeCommand("fabric:container-remove-profile root missing") @AT@ 4236 @LENGTH@ 62
---------INS SimpleName@@MethodName:executeCommand:["fabric:container-remove-profile root missing"] @TO@ MethodInvocation@@executeCommand("fabric:container-remove-profile root missing") @AT@ 4236 @LENGTH@ 62
------------INS StringLiteral@@"fabric:container-remove-profile root missing" @TO@ SimpleName@@MethodName:executeCommand:["fabric:container-remove-profile root missing"] @AT@ 4251 @LENGTH@ 46
---INS ExpressionStatement@@Assignment:response=executeCommand("fabric:container-list") @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 4308 @LENGTH@ 51
------INS Assignment@@response=executeCommand("fabric:container-list") @TO@ ExpressionStatement@@Assignment:response=executeCommand("fabric:container-list") @AT@ 4308 @LENGTH@ 50
---------INS SimpleName@@response @TO@ Assignment@@response=executeCommand("fabric:container-list") @AT@ 4308 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@response=executeCommand("fabric:container-list") @AT@ 4316 @LENGTH@ 1
---------INS MethodInvocation@@executeCommand("fabric:container-list") @TO@ Assignment@@response=executeCommand("fabric:container-list") @AT@ 4319 @LENGTH@ 39
------------INS SimpleName@@MethodName:executeCommand:["fabric:container-list"] @TO@ MethodInvocation@@executeCommand("fabric:container-list") @AT@ 4319 @LENGTH@ 39
---------------INS StringLiteral@@"fabric:container-list" @TO@ SimpleName@@MethodName:executeCommand:["fabric:container-list"] @AT@ 4334 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertFalse(response.contains("The following profiles are assigned but not found:")) @TO@ MethodDeclaration@@public, void, MethodName:testLocalFabricWithMissignProfile, Exception,  @AT@ 4368 @LENGTH@ 85
------INS MethodInvocation@@assertFalse(response.contains("The following profiles are assigned but not found:")) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(response.contains("The following profiles are assigned but not found:")) @AT@ 4368 @LENGTH@ 84
---------INS SimpleName@@MethodName:assertFalse:[response.contains("The following profiles are assigned but not found:")] @TO@ MethodInvocation@@assertFalse(response.contains("The following profiles are assigned but not found:")) @AT@ 4368 @LENGTH@ 84
------------INS MethodInvocation@@response.contains("The following profiles are assigned but not found:") @TO@ SimpleName@@MethodName:assertFalse:[response.contains("The following profiles are assigned but not found:")] @AT@ 4380 @LENGTH@ 71
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.contains("The following profiles are assigned but not found:") @AT@ 4380 @LENGTH@ 8
---------------INS SimpleName@@MethodName:contains:["The following profiles are assigned but not found:"] @TO@ MethodInvocation@@response.contains("The following profiles are assigned but not found:") @AT@ 4389 @LENGTH@ 62
------------------INS StringLiteral@@"The following profiles are assigned but not found:" @TO@ SimpleName@@MethodName:contains:["The following profiles are assigned but not found:"] @AT@ 4398 @LENGTH@ 52


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]DefaultResourceLocalizerTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, @DirtiesContext(classMode=ClassMode.AFTER_CLASS), public]DefaultResourceLocalizerTests,  @AT@ 1975 @LENGTH@ 9244
---INS NormalAnnotation@@@DirtiesContext(classMode=ClassMode.AFTER_CLASS) @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]DefaultResourceLocalizerTests,  @AT@ 2229 @LENGTH@ 48


INS MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @TO@ TypeDeclaration@@[public]YarnUtils,  @AT@ 4901 @LENGTH@ 372
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 4901 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 4908 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 4915 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 4922 @LENGTH@ 8
---INS SingleVariableDeclaration@@Configuration conf @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 4931 @LENGTH@ 18
------INS SimpleType@@Configuration @TO@ SingleVariableDeclaration@@Configuration conf @AT@ 4931 @LENGTH@ 13
------INS SimpleName@@conf @TO@ SingleVariableDeclaration@@Configuration conf @AT@ 4945 @LENGTH@ 4
---INS VariableDeclarationStatement@@StringBuilder buf=new StringBuilder(); @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 4955 @LENGTH@ 40
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@StringBuilder buf=new StringBuilder(); @AT@ 4955 @LENGTH@ 13
------INS VariableDeclarationFragment@@buf=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder buf=new StringBuilder(); @AT@ 4969 @LENGTH@ 25
---------INS SimpleName@@buf @TO@ VariableDeclarationFragment@@buf=new StringBuilder() @AT@ 4969 @LENGTH@ 3
---------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@buf=new StringBuilder() @AT@ 4975 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4975 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4979 @LENGTH@ 13
---INS IfStatement@@if (conf != null) {  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} else {  buf.append("null");} @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 4998 @LENGTH@ 247
------INS InfixExpression@@conf != null @TO@ IfStatement@@if (conf != null) {  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} else {  buf.append("null");} @AT@ 5002 @LENGTH@ 12
---------INS SimpleName@@conf @TO@ InfixExpression@@conf != null @AT@ 5002 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@conf != null @AT@ 5006 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@conf != null @AT@ 5010 @LENGTH@ 4
------INS Block@@ThenBody:{  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} @TO@ IfStatement@@if (conf != null) {  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} else {  buf.append("null");} @AT@ 5016 @LENGTH@ 195
---------INS ExpressionStatement@@MethodInvocation:buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS")) @TO@ Block@@ThenBody:{  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} @AT@ 5021 @LENGTH@ 56
------------INS MethodInvocation@@buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS")) @TO@ ExpressionStatement@@MethodInvocation:buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS")) @AT@ 5021 @LENGTH@ 55
---------------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS")) @AT@ 5021 @LENGTH@ 3
---------------INS SimpleName@@MethodName:append:[" fs.defaultFS=" + conf.get("fs.defaultFS")] @TO@ MethodInvocation@@buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS")) @AT@ 5025 @LENGTH@ 51
------------------INS InfixExpression@@" fs.defaultFS=" + conf.get("fs.defaultFS") @TO@ SimpleName@@MethodName:append:[" fs.defaultFS=" + conf.get("fs.defaultFS")] @AT@ 5032 @LENGTH@ 43
---------------------INS StringLiteral@@" fs.defaultFS=" @TO@ InfixExpression@@" fs.defaultFS=" + conf.get("fs.defaultFS") @AT@ 5032 @LENGTH@ 16
---------------------INS Operator@@+ @TO@ InfixExpression@@" fs.defaultFS=" + conf.get("fs.defaultFS") @AT@ 5048 @LENGTH@ 1
---------------------INS MethodInvocation@@conf.get("fs.defaultFS") @TO@ InfixExpression@@" fs.defaultFS=" + conf.get("fs.defaultFS") @AT@ 5051 @LENGTH@ 24
------------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.get("fs.defaultFS") @AT@ 5051 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:get:["fs.defaultFS"] @TO@ MethodInvocation@@conf.get("fs.defaultFS") @AT@ 5056 @LENGTH@ 19
---------------------------INS StringLiteral@@"fs.defaultFS" @TO@ SimpleName@@MethodName:get:["fs.defaultFS"] @AT@ 5060 @LENGTH@ 14
---------INS ExpressionStatement@@MethodInvocation:buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address")) @TO@ Block@@ThenBody:{  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} @AT@ 5081 @LENGTH@ 88
------------INS MethodInvocation@@buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address")) @TO@ ExpressionStatement@@MethodInvocation:buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address")) @AT@ 5081 @LENGTH@ 87
---------------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address")) @AT@ 5081 @LENGTH@ 3
---------------INS SimpleName@@MethodName:append:[" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address")] @TO@ MethodInvocation@@buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address")) @AT@ 5085 @LENGTH@ 83
------------------INS InfixExpression@@" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address") @TO@ SimpleName@@MethodName:append:[" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address")] @AT@ 5092 @LENGTH@ 75
---------------------INS StringLiteral@@" yarn.resourcemanager.address=" @TO@ InfixExpression@@" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address") @AT@ 5092 @LENGTH@ 32
---------------------INS Operator@@+ @TO@ InfixExpression@@" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address") @AT@ 5124 @LENGTH@ 1
---------------------INS MethodInvocation@@conf.get("yarn.resourcemanager.address") @TO@ InfixExpression@@" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address") @AT@ 5127 @LENGTH@ 40
------------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.get("yarn.resourcemanager.address") @AT@ 5127 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:get:["yarn.resourcemanager.address"] @TO@ MethodInvocation@@conf.get("yarn.resourcemanager.address") @AT@ 5132 @LENGTH@ 35
---------------------------INS StringLiteral@@"yarn.resourcemanager.address" @TO@ SimpleName@@MethodName:get:["yarn.resourcemanager.address"] @AT@ 5136 @LENGTH@ 30
---------INS ExpressionStatement@@MethodInvocation:buf.append(" " + conf.toString()) @TO@ Block@@ThenBody:{  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} @AT@ 5173 @LENGTH@ 34
------------INS MethodInvocation@@buf.append(" " + conf.toString()) @TO@ ExpressionStatement@@MethodInvocation:buf.append(" " + conf.toString()) @AT@ 5173 @LENGTH@ 33
---------------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.append(" " + conf.toString()) @AT@ 5173 @LENGTH@ 3
---------------INS SimpleName@@MethodName:append:[" " + conf.toString()] @TO@ MethodInvocation@@buf.append(" " + conf.toString()) @AT@ 5177 @LENGTH@ 29
------------------INS InfixExpression@@" " + conf.toString() @TO@ SimpleName@@MethodName:append:[" " + conf.toString()] @AT@ 5184 @LENGTH@ 21
---------------------INS StringLiteral@@" " @TO@ InfixExpression@@" " + conf.toString() @AT@ 5184 @LENGTH@ 3
---------------------INS Operator@@+ @TO@ InfixExpression@@" " + conf.toString() @AT@ 5187 @LENGTH@ 1
---------------------INS MethodInvocation@@conf.toString() @TO@ InfixExpression@@" " + conf.toString() @AT@ 5190 @LENGTH@ 15
------------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.toString() @AT@ 5190 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@conf.toString() @AT@ 5195 @LENGTH@ 10
------INS Block@@ElseBody:{  buf.append("null");} @TO@ IfStatement@@if (conf != null) {  buf.append(" fs.defaultFS=" + conf.get("fs.defaultFS"));  buf.append(" yarn.resourcemanager.address=" + conf.get("yarn.resourcemanager.address"));  buf.append(" " + conf.toString());} else {  buf.append("null");} @AT@ 5217 @LENGTH@ 28
---------INS ExpressionStatement@@MethodInvocation:buf.append("null") @TO@ Block@@ElseBody:{  buf.append("null");} @AT@ 5222 @LENGTH@ 19
------------INS MethodInvocation@@buf.append("null") @TO@ ExpressionStatement@@MethodInvocation:buf.append("null") @AT@ 5222 @LENGTH@ 18
---------------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.append("null") @AT@ 5222 @LENGTH@ 3
---------------INS SimpleName@@MethodName:append:["null"] @TO@ MethodInvocation@@buf.append("null") @AT@ 5226 @LENGTH@ 14
------------------INS StringLiteral@@"null" @TO@ SimpleName@@MethodName:append:["null"] @AT@ 5233 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:buf.toString() @TO@ MethodDeclaration@@public, static, String, MethodName:toString, Configuration conf,  @AT@ 5248 @LENGTH@ 22
------INS MethodInvocation@@buf.toString() @TO@ ReturnStatement@@MethodInvocation:buf.toString() @AT@ 5255 @LENGTH@ 14
---------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.toString() @AT@ 5255 @LENGTH@ 3
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@buf.toString() @AT@ 5259 @LENGTH@ 10


UPD TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build();  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ try {  Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build();  try {    for (    Container container : containers) {      System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));      System.out.flush();    }    Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);    System.out.println(executeCommand("fabric:container-list"));    for (    Container container : containers) {      System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));      System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));      System.out.flush();    }  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 2814 @LENGTH@ 1042
---INS VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build();  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 2785 @LENGTH@ 150
------INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build(); @AT@ 2785 @LENGTH@ 19
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 2785 @LENGTH@ 3
---------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 2789 @LENGTH@ 14
------INS VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build() @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build(); @AT@ 2805 @LENGTH@ 129
---------INS SimpleName@@containers @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build() @AT@ 2805 @LENGTH@ 10
---------MOV MethodInvocation@@ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build() @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build() @AT@ 2845 @LENGTH@ 116
---DEL ExpressionStatement@@Assignment:containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build() @AT@ 2832 @LENGTH@ 130
------DEL Assignment@@containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build() @AT@ 2832 @LENGTH@ 129
---------DEL SimpleName@@containers @AT@ 2832 @LENGTH@ 10
---------DEL Operator@@= @AT@ 2842 @LENGTH@ 1
---INS TryStatement@@try {  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build();  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 2948 @LENGTH@ 974
------MOV EnhancedForStatement@@for (Container container : containers) {  System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));  System.out.flush();} @TO@ TryStatement@@try {  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3037 @LENGTH@ 186
------MOV ExpressionStatement@@MethodInvocation:Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @TO@ TryStatement@@try {  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3233 @LENGTH@ 61
------MOV ExpressionStatement@@MethodInvocation:System.out.println(executeCommand("fabric:container-list")) @TO@ TryStatement@@try {  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3304 @LENGTH@ 60
------MOV EnhancedForStatement@@for (Container container : containers) {  System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));  System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));  System.out.flush();} @TO@ TryStatement@@try {  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3375 @LENGTH@ 380
------MOV Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ TryStatement@@try {  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3768 @LENGTH@ 88
---UPD Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ FinallyBody:{  ContainerBuilder.destroy(containers);} @AT@ 3768 @LENGTH@ 88
---INS Block@@FinallyBody:{  fabricProxy.close();} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("cnt").withProfiles("test-profile").assertProvisioningResult().build();  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-upgrade 1.1 " + container.getId()));    System.out.flush();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.out.println(executeCommand("fabric:container-list"));  for (  Container container : containers) {    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    System.out.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " config:proplist --pid org.ops4j.pax.url.mvn"));    System.out.flush();  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 3935 @LENGTH@ 38
------MOV ExpressionStatement@@MethodInvocation:fabricProxy.close() @TO@ Block@@FinallyBody:{  fabricProxy.close();} @AT@ 3832 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @TO@ TypeDeclaration@@[public]RepositoryRestMvConfigurationIntegrationTests,  @AT@ 2990 @LENGTH@ 637
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 2990 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 2997 @LENGTH@ 4
---INS SimpleName@@MethodName:assetConsidersPaginationCustomization @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3002 @LENGTH@ 37
---INS VariableDeclarationStatement@@HateoasPageableHandlerMethodArgumentResolver resolver=context.getBean(HateoasPageableHandlerMethodArgumentResolver.class); @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3047 @LENGTH@ 129
------INS SimpleType@@HateoasPageableHandlerMethodArgumentResolver @TO@ VariableDeclarationStatement@@HateoasPageableHandlerMethodArgumentResolver resolver=context.getBean(HateoasPageableHandlerMethodArgumentResolver.class); @AT@ 3047 @LENGTH@ 44
------INS VariableDeclarationFragment@@resolver=context.getBean(HateoasPageableHandlerMethodArgumentResolver.class) @TO@ VariableDeclarationStatement@@HateoasPageableHandlerMethodArgumentResolver resolver=context.getBean(HateoasPageableHandlerMethodArgumentResolver.class); @AT@ 3092 @LENGTH@ 83
---------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@resolver=context.getBean(HateoasPageableHandlerMethodArgumentResolver.class) @AT@ 3092 @LENGTH@ 8
---------INS MethodInvocation@@context.getBean(HateoasPageableHandlerMethodArgumentResolver.class) @TO@ VariableDeclarationFragment@@resolver=context.getBean(HateoasPageableHandlerMethodArgumentResolver.class) @AT@ 3103 @LENGTH@ 72
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getBean(HateoasPageableHandlerMethodArgumentResolver.class) @AT@ 3103 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBean:[HateoasPageableHandlerMethodArgumentResolver.class] @TO@ MethodInvocation@@context.getBean(HateoasPageableHandlerMethodArgumentResolver.class) @AT@ 3116 @LENGTH@ 59
---------------INS TypeLiteral@@HateoasPageableHandlerMethodArgumentResolver.class @TO@ SimpleName@@MethodName:getBean:[HateoasPageableHandlerMethodArgumentResolver.class] @AT@ 3124 @LENGTH@ 50
---INS VariableDeclarationStatement@@UriComponentsBuilder builder=UriComponentsBuilder.newInstance(); @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3180 @LENGTH@ 66
------INS SimpleType@@UriComponentsBuilder @TO@ VariableDeclarationStatement@@UriComponentsBuilder builder=UriComponentsBuilder.newInstance(); @AT@ 3180 @LENGTH@ 20
------INS VariableDeclarationFragment@@builder=UriComponentsBuilder.newInstance() @TO@ VariableDeclarationStatement@@UriComponentsBuilder builder=UriComponentsBuilder.newInstance(); @AT@ 3201 @LENGTH@ 44
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=UriComponentsBuilder.newInstance() @AT@ 3201 @LENGTH@ 7
---------INS MethodInvocation@@UriComponentsBuilder.newInstance() @TO@ VariableDeclarationFragment@@builder=UriComponentsBuilder.newInstance() @AT@ 3211 @LENGTH@ 34
------------INS SimpleName@@Name:UriComponentsBuilder @TO@ MethodInvocation@@UriComponentsBuilder.newInstance() @AT@ 3211 @LENGTH@ 20
------------INS SimpleName@@MethodName:newInstance:[] @TO@ MethodInvocation@@UriComponentsBuilder.newInstance() @AT@ 3232 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:resolver.enhance(builder,null,new PageRequest(0,9000,Direction.ASC,"firstname")) @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3249 @LENGTH@ 86
------INS MethodInvocation@@resolver.enhance(builder,null,new PageRequest(0,9000,Direction.ASC,"firstname")) @TO@ ExpressionStatement@@MethodInvocation:resolver.enhance(builder,null,new PageRequest(0,9000,Direction.ASC,"firstname")) @AT@ 3249 @LENGTH@ 85
---------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.enhance(builder,null,new PageRequest(0,9000,Direction.ASC,"firstname")) @AT@ 3249 @LENGTH@ 8
---------INS SimpleName@@MethodName:enhance:[builder, null, new PageRequest(0,9000,Direction.ASC,"firstname")] @TO@ MethodInvocation@@resolver.enhance(builder,null,new PageRequest(0,9000,Direction.ASC,"firstname")) @AT@ 3258 @LENGTH@ 76
------------INS SimpleName@@builder @TO@ SimpleName@@MethodName:enhance:[builder, null, new PageRequest(0,9000,Direction.ASC,"firstname")] @AT@ 3266 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:enhance:[builder, null, new PageRequest(0,9000,Direction.ASC,"firstname")] @AT@ 3275 @LENGTH@ 4
------------INS ClassInstanceCreation@@PageRequest[0, 9000, Direction.ASC, "firstname"] @TO@ SimpleName@@MethodName:enhance:[builder, null, new PageRequest(0,9000,Direction.ASC,"firstname")] @AT@ 3281 @LENGTH@ 52
---------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 9000, Direction.ASC, "firstname"] @AT@ 3281 @LENGTH@ 3
---------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 9000, Direction.ASC, "firstname"] @AT@ 3285 @LENGTH@ 11
---------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 9000, Direction.ASC, "firstname"] @AT@ 3297 @LENGTH@ 1
---------------INS NumberLiteral@@9000 @TO@ ClassInstanceCreation@@PageRequest[0, 9000, Direction.ASC, "firstname"] @AT@ 3300 @LENGTH@ 4
---------------INS QualifiedName@@Direction.ASC @TO@ ClassInstanceCreation@@PageRequest[0, 9000, Direction.ASC, "firstname"] @AT@ 3306 @LENGTH@ 13
------------------INS SimpleName@@Direction @TO@ QualifiedName@@Direction.ASC @AT@ 3306 @LENGTH@ 9
------------------INS SimpleName@@ASC @TO@ QualifiedName@@Direction.ASC @AT@ 3316 @LENGTH@ 3
---------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@PageRequest[0, 9000, Direction.ASC, "firstname"] @AT@ 3321 @LENGTH@ 11
---INS VariableDeclarationStatement@@MultiValueMap<String,String> params=builder.build().getQueryParams(); @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3339 @LENGTH@ 72
------INS ParameterizedType@@MultiValueMap<String,String> @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> params=builder.build().getQueryParams(); @AT@ 3339 @LENGTH@ 29
---------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 3339 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 3353 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 3361 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=builder.build().getQueryParams() @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> params=builder.build().getQueryParams(); @AT@ 3369 @LENGTH@ 41
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=builder.build().getQueryParams() @AT@ 3369 @LENGTH@ 6
---------INS MethodInvocation@@builder.build().getQueryParams() @TO@ VariableDeclarationFragment@@params=builder.build().getQueryParams() @AT@ 3378 @LENGTH@ 32
------------INS MethodInvocation@@MethodName:build:[] @TO@ MethodInvocation@@builder.build().getQueryParams() @AT@ 3378 @LENGTH@ 15
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.build().getQueryParams() @AT@ 3378 @LENGTH@ 7
------------INS SimpleName@@MethodName:getQueryParams:[] @TO@ MethodInvocation@@builder.build().getQueryParams() @AT@ 3394 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(params.containsKey("myPage"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3415 @LENGTH@ 51
------INS MethodInvocation@@assertThat(params.containsKey("myPage"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(params.containsKey("myPage"),is(true)) @AT@ 3415 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertThat:[params.containsKey("myPage"), is(true)] @TO@ MethodInvocation@@assertThat(params.containsKey("myPage"),is(true)) @AT@ 3415 @LENGTH@ 50
------------INS MethodInvocation@@params.containsKey("myPage") @TO@ SimpleName@@MethodName:assertThat:[params.containsKey("myPage"), is(true)] @AT@ 3426 @LENGTH@ 28
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.containsKey("myPage") @AT@ 3426 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsKey:["myPage"] @TO@ MethodInvocation@@params.containsKey("myPage") @AT@ 3433 @LENGTH@ 21
------------------INS StringLiteral@@"myPage" @TO@ SimpleName@@MethodName:containsKey:["myPage"] @AT@ 3445 @LENGTH@ 8
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[params.containsKey("myPage"), is(true)] @AT@ 3456 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3456 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3459 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3456 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3459 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(params.containsKey("mySort"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3469 @LENGTH@ 51
------INS MethodInvocation@@assertThat(params.containsKey("mySort"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(params.containsKey("mySort"),is(true)) @AT@ 3469 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertThat:[params.containsKey("mySort"), is(true)] @TO@ MethodInvocation@@assertThat(params.containsKey("mySort"),is(true)) @AT@ 3469 @LENGTH@ 50
------------INS MethodInvocation@@params.containsKey("mySort") @TO@ SimpleName@@MethodName:assertThat:[params.containsKey("mySort"), is(true)] @AT@ 3480 @LENGTH@ 28
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.containsKey("mySort") @AT@ 3480 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsKey:["mySort"] @TO@ MethodInvocation@@params.containsKey("mySort") @AT@ 3487 @LENGTH@ 21
------------------INS StringLiteral@@"mySort" @TO@ SimpleName@@MethodName:containsKey:["mySort"] @AT@ 3499 @LENGTH@ 8
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[params.containsKey("mySort"), is(true)] @AT@ 3510 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3510 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3513 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3510 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3513 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(params.get("mySize"),hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3524 @LENGTH@ 45
------INS MethodInvocation@@assertThat(params.get("mySize"),hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(params.get("mySize"),hasSize(1)) @AT@ 3524 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertThat:[params.get("mySize"), hasSize(1)] @TO@ MethodInvocation@@assertThat(params.get("mySize"),hasSize(1)) @AT@ 3524 @LENGTH@ 44
------------INS MethodInvocation@@params.get("mySize") @TO@ SimpleName@@MethodName:assertThat:[params.get("mySize"), hasSize(1)] @AT@ 3535 @LENGTH@ 20
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("mySize") @AT@ 3535 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["mySize"] @TO@ MethodInvocation@@params.get("mySize") @AT@ 3542 @LENGTH@ 13
------------------INS StringLiteral@@"mySize" @TO@ SimpleName@@MethodName:get:["mySize"] @AT@ 3546 @LENGTH@ 8
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[params.get("mySize"), hasSize(1)] @AT@ 3557 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 3557 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 3565 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 3557 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 3565 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(params.get("mySize").get(0),is("7000")) @TO@ MethodDeclaration@@public, void, MethodName:assetConsidersPaginationCustomization,  @AT@ 3572 @LENGTH@ 52
------INS MethodInvocation@@assertThat(params.get("mySize").get(0),is("7000")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(params.get("mySize").get(0),is("7000")) @AT@ 3572 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[params.get("mySize").get(0), is("7000")] @TO@ MethodInvocation@@assertThat(params.get("mySize").get(0),is("7000")) @AT@ 3572 @LENGTH@ 51
------------INS MethodInvocation@@params.get("mySize").get(0) @TO@ SimpleName@@MethodName:assertThat:[params.get("mySize").get(0), is("7000")] @AT@ 3583 @LENGTH@ 27
---------------INS MethodInvocation@@MethodName:get:["mySize"] @TO@ MethodInvocation@@params.get("mySize").get(0) @AT@ 3583 @LENGTH@ 20
------------------INS StringLiteral@@"mySize" @TO@ MethodInvocation@@MethodName:get:["mySize"] @AT@ 3594 @LENGTH@ 8
---------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.get("mySize").get(0) @AT@ 3583 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@params.get("mySize").get(0) @AT@ 3604 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 3608 @LENGTH@ 1
------------INS MethodInvocation@@is("7000") @TO@ SimpleName@@MethodName:assertThat:[params.get("mySize").get(0), is("7000")] @AT@ 3612 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:["7000"] @TO@ MethodInvocation@@is("7000") @AT@ 3612 @LENGTH@ 10
------------------INS StringLiteral@@"7000" @TO@ SimpleName@@MethodName:is:["7000"] @AT@ 3615 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:["7000"] @TO@ MethodInvocation@@is("7000") @AT@ 3612 @LENGTH@ 10
------------------INS StringLiteral@@"7000" @TO@ SimpleName@@MethodName:is:["7000"] @AT@ 3615 @LENGTH@ 6


INS ExpressionStatement@@SuperMethodInvocation:super.rollbackRuntime(context,operation,model,controllers) @TO@ MethodDeclaration@@protected, void, MethodName:rollbackRuntime, OperationContext context, ModelNode operation, ModelNode model, List<ServiceController<?>> controllers,  @AT@ 4774 @LENGTH@ 62
---INS SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @TO@ ExpressionStatement@@SuperMethodInvocation:super.rollbackRuntime(context,operation,model,controllers) @AT@ 4774 @LENGTH@ 61
------INS SimpleName@@MethodName:rollbackRuntime:[context, operation, model, controllers] @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4780 @LENGTH@ 15
------INS SimpleName@@context @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4796 @LENGTH@ 7
------INS SimpleName@@operation @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4805 @LENGTH@ 9
------INS SimpleName@@model @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4816 @LENGTH@ 5
------INS SimpleName@@controllers @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4823 @LENGTH@ 11


UPD VariableDeclarationStatement@@String expectedDir=warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/"); @TO@ String expectedDir=fixPath(warehouseDir).replaceFirst("pfile:///","pfile:/"); @AT@ 4773 @LENGTH@ 95
---UPD VariableDeclarationFragment@@expectedDir=warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/") @TO@ expectedDir=fixPath(warehouseDir).replaceFirst("pfile:///","pfile:/") @AT@ 4780 @LENGTH@ 87
------UPD MethodInvocation@@warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/") @TO@ fixPath(warehouseDir).replaceFirst("pfile:///","pfile:/") @AT@ 4794 @LENGTH@ 73
---------DEL MethodInvocation@@MethodName:replaceAll:["\\\\", "/"] @AT@ 4794 @LENGTH@ 36
------------DEL StringLiteral@@"\\\\" @AT@ 4818 @LENGTH@ 6
------------DEL StringLiteral@@"/" @AT@ 4826 @LENGTH@ 3
---------UPD SimpleName@@Name:warehouseDir @TO@ warehouseDir @AT@ 4794 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:fixPath:[warehouseDir] @TO@ MethodInvocation@@warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/") @AT@ 5095 @LENGTH@ 21
------------MOV SimpleName@@Name:warehouseDir @TO@ MethodInvocation@@MethodName:fixPath:[warehouseDir] @AT@ 4794 @LENGTH@ 12


UPD CatchClause@@catch (Exception e) {  Thread.currentThread().getThreadGroup().uncaughtException(Thread.currentThread(),e);} @TO@ catch (Exception e) {  getLog().error("*************************************");  getLog().error("Error occurred while running main from: " + mainClass);  getLog().error(e);  getLog().error("*************************************");  Thread.currentThread().getThreadGroup().uncaughtException(Thread.currentThread(),e);} @AT@ 12972 @LENGTH@ 164
---INS ExpressionStatement@@MethodInvocation:getLog().error("*************************************") @TO@ CatchClause@@catch (Exception e) {  Thread.currentThread().getThreadGroup().uncaughtException(Thread.currentThread(),e);} @AT@ 13166 @LENGTH@ 56
------INS MethodInvocation@@getLog().error("*************************************") @TO@ ExpressionStatement@@MethodInvocation:getLog().error("*************************************") @AT@ 13166 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:getLog:[] @TO@ MethodInvocation@@getLog().error("*************************************") @AT@ 13166 @LENGTH@ 8
---------INS SimpleName@@MethodName:error:["*************************************"] @TO@ MethodInvocation@@getLog().error("*************************************") @AT@ 13175 @LENGTH@ 46
------------INS StringLiteral@@"*************************************" @TO@ SimpleName@@MethodName:error:["*************************************"] @AT@ 13181 @LENGTH@ 39
---INS ExpressionStatement@@MethodInvocation:getLog().error("Error occurred while running main from: " + mainClass) @TO@ CatchClause@@catch (Exception e) {  Thread.currentThread().getThreadGroup().uncaughtException(Thread.currentThread(),e);} @AT@ 13243 @LENGTH@ 71
------INS MethodInvocation@@getLog().error("Error occurred while running main from: " + mainClass) @TO@ ExpressionStatement@@MethodInvocation:getLog().error("Error occurred while running main from: " + mainClass) @AT@ 13243 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:getLog:[] @TO@ MethodInvocation@@getLog().error("Error occurred while running main from: " + mainClass) @AT@ 13243 @LENGTH@ 8
---------INS SimpleName@@MethodName:error:["Error occurred while running main from: " + mainClass] @TO@ MethodInvocation@@getLog().error("Error occurred while running main from: " + mainClass) @AT@ 13252 @LENGTH@ 61
------------INS InfixExpression@@"Error occurred while running main from: " + mainClass @TO@ SimpleName@@MethodName:error:["Error occurred while running main from: " + mainClass] @AT@ 13258 @LENGTH@ 54
---------------INS StringLiteral@@"Error occurred while running main from: " @TO@ InfixExpression@@"Error occurred while running main from: " + mainClass @AT@ 13258 @LENGTH@ 42
---------------INS Operator@@+ @TO@ InfixExpression@@"Error occurred while running main from: " + mainClass @AT@ 13300 @LENGTH@ 1
---------------INS SimpleName@@mainClass @TO@ InfixExpression@@"Error occurred while running main from: " + mainClass @AT@ 13303 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getLog().error(e) @TO@ CatchClause@@catch (Exception e) {  Thread.currentThread().getThreadGroup().uncaughtException(Thread.currentThread(),e);} @AT@ 13335 @LENGTH@ 18
------INS MethodInvocation@@getLog().error(e) @TO@ ExpressionStatement@@MethodInvocation:getLog().error(e) @AT@ 13335 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:getLog:[] @TO@ MethodInvocation@@getLog().error(e) @AT@ 13335 @LENGTH@ 8
---------INS SimpleName@@MethodName:error:[e] @TO@ MethodInvocation@@getLog().error(e) @AT@ 13344 @LENGTH@ 8
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:error:[e] @AT@ 13350 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:getLog().error("*************************************") @TO@ CatchClause@@catch (Exception e) {  Thread.currentThread().getThreadGroup().uncaughtException(Thread.currentThread(),e);} @AT@ 13374 @LENGTH@ 56
------INS MethodInvocation@@getLog().error("*************************************") @TO@ ExpressionStatement@@MethodInvocation:getLog().error("*************************************") @AT@ 13374 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:getLog:[] @TO@ MethodInvocation@@getLog().error("*************************************") @AT@ 13374 @LENGTH@ 8
---------INS SimpleName@@MethodName:error:["*************************************"] @TO@ MethodInvocation@@getLog().error("*************************************") @AT@ 13383 @LENGTH@ 46
------------INS StringLiteral@@"*************************************" @TO@ SimpleName@@MethodName:error:["*************************************"] @AT@ 13389 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 21413 @LENGTH@ 460
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21413 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21420 @LENGTH@ 4
---INS SimpleName@@MethodName:findUsingAnnotatedQueryOnDBRef @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21425 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21463 @LENGTH@ 87
------INS MethodInvocation@@operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @TO@ ExpressionStatement@@MethodInvocation:operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @AT@ 21463 @LENGTH@ 86
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @AT@ 21463 @LENGTH@ 10
---------INS SimpleName@@MethodName:remove:[new org.springframework.data.mongodb.core.query.Query(), User.class] @TO@ MethodInvocation@@operations.remove(new org.springframework.data.mongodb.core.query.Query(),User.class) @AT@ 21474 @LENGTH@ 75
------------INS ClassInstanceCreation@@org.springframework.data.mongodb.core.query.Query[] @TO@ SimpleName@@MethodName:remove:[new org.springframework.data.mongodb.core.query.Query(), User.class] @AT@ 21481 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@org.springframework.data.mongodb.core.query.Query[] @AT@ 21481 @LENGTH@ 3
---------------INS SimpleType@@org.springframework.data.mongodb.core.query.Query @TO@ ClassInstanceCreation@@org.springframework.data.mongodb.core.query.Query[] @AT@ 21485 @LENGTH@ 49
------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:remove:[new org.springframework.data.mongodb.core.query.Query(), User.class] @AT@ 21538 @LENGTH@ 10
---INS VariableDeclarationStatement@@User user=new User(); @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21554 @LENGTH@ 23
------INS SimpleType@@User @TO@ VariableDeclarationStatement@@User user=new User(); @AT@ 21554 @LENGTH@ 4
------INS VariableDeclarationFragment@@user=new User() @TO@ VariableDeclarationStatement@@User user=new User(); @AT@ 21559 @LENGTH@ 17
---------INS SimpleName@@user @TO@ VariableDeclarationFragment@@user=new User() @AT@ 21559 @LENGTH@ 4
---------INS ClassInstanceCreation@@User[] @TO@ VariableDeclarationFragment@@user=new User() @AT@ 21566 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@User[] @AT@ 21566 @LENGTH@ 3
------------INS SimpleType@@User @TO@ ClassInstanceCreation@@User[] @AT@ 21570 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:user.username="Terria" @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21580 @LENGTH@ 25
------INS Assignment@@user.username="Terria" @TO@ ExpressionStatement@@Assignment:user.username="Terria" @AT@ 21580 @LENGTH@ 24
---------INS QualifiedName@@user.username @TO@ Assignment@@user.username="Terria" @AT@ 21580 @LENGTH@ 13
------------INS SimpleName@@user @TO@ QualifiedName@@user.username @AT@ 21580 @LENGTH@ 4
------------INS SimpleName@@username @TO@ QualifiedName@@user.username @AT@ 21585 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@user.username="Terria" @AT@ 21593 @LENGTH@ 1
---------INS StringLiteral@@"Terria" @TO@ Assignment@@user.username="Terria" @AT@ 21596 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:operations.save(user) @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21608 @LENGTH@ 22
------INS MethodInvocation@@operations.save(user) @TO@ ExpressionStatement@@MethodInvocation:operations.save(user) @AT@ 21608 @LENGTH@ 21
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.save(user) @AT@ 21608 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[user] @TO@ MethodInvocation@@operations.save(user) @AT@ 21619 @LENGTH@ 10
------------INS SimpleName@@user @TO@ SimpleName@@MethodName:save:[user] @AT@ 21624 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:alicia.creator=user @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21634 @LENGTH@ 22
------INS Assignment@@alicia.creator=user @TO@ ExpressionStatement@@Assignment:alicia.creator=user @AT@ 21634 @LENGTH@ 21
---------INS QualifiedName@@alicia.creator @TO@ Assignment@@alicia.creator=user @AT@ 21634 @LENGTH@ 14
------------INS SimpleName@@alicia @TO@ QualifiedName@@alicia.creator @AT@ 21634 @LENGTH@ 6
------------INS SimpleName@@creator @TO@ QualifiedName@@alicia.creator @AT@ 21641 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@alicia.creator=user @AT@ 21648 @LENGTH@ 1
---------INS SimpleName@@user @TO@ Assignment@@alicia.creator=user @AT@ 21651 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:repository.save(alicia) @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21659 @LENGTH@ 24
------INS MethodInvocation@@repository.save(alicia) @TO@ ExpressionStatement@@MethodInvocation:repository.save(alicia) @AT@ 21659 @LENGTH@ 23
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(alicia) @AT@ 21659 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[alicia] @TO@ MethodInvocation@@repository.save(alicia) @AT@ 21670 @LENGTH@ 12
------------INS SimpleName@@alicia @TO@ SimpleName@@MethodName:save:[alicia] @AT@ 21675 @LENGTH@ 6
---INS VariableDeclarationStatement@@Page<Person> result=repository.findByHavingCreator(new PageRequest(0,100)); @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21687 @LENGTH@ 78
------INS ParameterizedType@@Page<Person> @TO@ VariableDeclarationStatement@@Page<Person> result=repository.findByHavingCreator(new PageRequest(0,100)); @AT@ 21687 @LENGTH@ 12
---------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 21687 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 21692 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=repository.findByHavingCreator(new PageRequest(0,100)) @TO@ VariableDeclarationStatement@@Page<Person> result=repository.findByHavingCreator(new PageRequest(0,100)); @AT@ 21700 @LENGTH@ 64
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByHavingCreator(new PageRequest(0,100)) @AT@ 21700 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByHavingCreator(new PageRequest(0,100)) @TO@ VariableDeclarationFragment@@result=repository.findByHavingCreator(new PageRequest(0,100)) @AT@ 21709 @LENGTH@ 55
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByHavingCreator(new PageRequest(0,100)) @AT@ 21709 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByHavingCreator:[new PageRequest(0,100)] @TO@ MethodInvocation@@repository.findByHavingCreator(new PageRequest(0,100)) @AT@ 21720 @LENGTH@ 44
---------------INS ClassInstanceCreation@@PageRequest[0, 100] @TO@ SimpleName@@MethodName:findByHavingCreator:[new PageRequest(0,100)] @AT@ 21740 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 100] @AT@ 21740 @LENGTH@ 3
------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 100] @AT@ 21744 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 100] @AT@ 21756 @LENGTH@ 1
------------------INS NumberLiteral@@100 @TO@ ClassInstanceCreation@@PageRequest[0, 100] @AT@ 21759 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getNumberOfElements(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21768 @LENGTH@ 48
------INS MethodInvocation@@assertThat(result.getNumberOfElements(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getNumberOfElements(),is(1)) @AT@ 21768 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertThat:[result.getNumberOfElements(), is(1)] @TO@ MethodInvocation@@assertThat(result.getNumberOfElements(),is(1)) @AT@ 21768 @LENGTH@ 47
------------INS MethodInvocation@@result.getNumberOfElements() @TO@ SimpleName@@MethodName:assertThat:[result.getNumberOfElements(), is(1)] @AT@ 21779 @LENGTH@ 28
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getNumberOfElements() @AT@ 21779 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getNumberOfElements:[] @TO@ MethodInvocation@@result.getNumberOfElements() @AT@ 21786 @LENGTH@ 21
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[result.getNumberOfElements(), is(1)] @AT@ 21809 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 21809 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 21812 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 21809 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 21812 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getContent().get(0),is(alicia)) @TO@ MethodDeclaration@@public, void, MethodName:findUsingAnnotatedQueryOnDBRef,  @AT@ 21819 @LENGTH@ 51
------INS MethodInvocation@@assertThat(result.getContent().get(0),is(alicia)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getContent().get(0),is(alicia)) @AT@ 21819 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertThat:[result.getContent().get(0), is(alicia)] @TO@ MethodInvocation@@assertThat(result.getContent().get(0),is(alicia)) @AT@ 21819 @LENGTH@ 50
------------INS MethodInvocation@@result.getContent().get(0) @TO@ SimpleName@@MethodName:assertThat:[result.getContent().get(0), is(alicia)] @AT@ 21830 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getContent:[] @TO@ MethodInvocation@@result.getContent().get(0) @AT@ 21830 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getContent().get(0) @AT@ 21830 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@result.getContent().get(0) @AT@ 21850 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 21854 @LENGTH@ 1
------------INS MethodInvocation@@is(alicia) @TO@ SimpleName@@MethodName:assertThat:[result.getContent().get(0), is(alicia)] @AT@ 21858 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[alicia] @TO@ MethodInvocation@@is(alicia) @AT@ 21858 @LENGTH@ 10
------------------INS SimpleName@@alicia @TO@ SimpleName@@MethodName:is:[alicia] @AT@ 21861 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:os.write(content.getBytes(Charset.forName("UTF-8"))) @TO@ MethodInvocation:os.write(content.getBytes(StandardCharsets.UTF_8)) @AT@ 6923 @LENGTH@ 53
---UPD MethodInvocation@@os.write(content.getBytes(Charset.forName("UTF-8"))) @TO@ os.write(content.getBytes(StandardCharsets.UTF_8)) @AT@ 6923 @LENGTH@ 52
------UPD SimpleName@@MethodName:write:[content.getBytes(Charset.forName("UTF-8"))] @TO@ MethodName:write:[content.getBytes(StandardCharsets.UTF_8)] @AT@ 6926 @LENGTH@ 49
---------UPD MethodInvocation@@content.getBytes(Charset.forName("UTF-8")) @TO@ content.getBytes(StandardCharsets.UTF_8) @AT@ 6932 @LENGTH@ 42
------------UPD SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 6940 @LENGTH@ 34
---------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 6949 @LENGTH@ 24
------------------DEL SimpleName@@Name:Charset @AT@ 6949 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 6957 @LENGTH@ 16
---------------------DEL StringLiteral@@"UTF-8" @AT@ 6965 @LENGTH@ 7
---------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @AT@ 6958 @LENGTH@ 22
------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6958 @LENGTH@ 16
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6975 @LENGTH@ 5


INS MethodDeclaration@@public, RepositoryRelProvider, MethodName:repositoryRelProvider, ObjectFactory<ResourceMappings> resourceMappings,  @TO@ TypeDeclaration@@[@Configuration, @ComponentScan(basePackageClasses=RepositoryRestController.class,includeFilters=@Filter(RepositoryRestController.class),useDefaultFilters=false), @ImportResource("classpath*:META-INF/spring-data-rest/**/*.xml"), public]RepositoryRestMvcConfiguration, HateoasAwareSpringDataWebConfiguration @AT@ 7595 @LENGTH@ 159
---INS Modifier@@public @TO@ MethodDeclaration@@public, RepositoryRelProvider, MethodName:repositoryRelProvider, ObjectFactory<ResourceMappings> resourceMappings,  @AT@ 7595 @LENGTH@ 6
---INS SimpleType@@RepositoryRelProvider @TO@ MethodDeclaration@@public, RepositoryRelProvider, MethodName:repositoryRelProvider, ObjectFactory<ResourceMappings> resourceMappings,  @AT@ 7602 @LENGTH@ 21
---INS SimpleName@@MethodName:repositoryRelProvider @TO@ MethodDeclaration@@public, RepositoryRelProvider, MethodName:repositoryRelProvider, ObjectFactory<ResourceMappings> resourceMappings,  @AT@ 7624 @LENGTH@ 21
---INS SingleVariableDeclaration@@ObjectFactory<ResourceMappings> resourceMappings @TO@ MethodDeclaration@@public, RepositoryRelProvider, MethodName:repositoryRelProvider, ObjectFactory<ResourceMappings> resourceMappings,  @AT@ 7646 @LENGTH@ 48
------INS ParameterizedType@@ObjectFactory<ResourceMappings> @TO@ SingleVariableDeclaration@@ObjectFactory<ResourceMappings> resourceMappings @AT@ 7646 @LENGTH@ 31
---------INS SimpleType@@ObjectFactory @TO@ ParameterizedType@@ObjectFactory<ResourceMappings> @AT@ 7646 @LENGTH@ 13
---------INS SimpleType@@ResourceMappings @TO@ ParameterizedType@@ObjectFactory<ResourceMappings> @AT@ 7660 @LENGTH@ 16
------INS SimpleName@@resourceMappings @TO@ SingleVariableDeclaration@@ObjectFactory<ResourceMappings> resourceMappings @AT@ 7678 @LENGTH@ 16
---INS ReturnStatement@@ClassInstanceCreation:new RepositoryRelProvider(resourceMappings) @TO@ MethodDeclaration@@public, RepositoryRelProvider, MethodName:repositoryRelProvider, ObjectFactory<ResourceMappings> resourceMappings,  @AT@ 7700 @LENGTH@ 51
------INS ClassInstanceCreation@@RepositoryRelProvider[resourceMappings] @TO@ ReturnStatement@@ClassInstanceCreation:new RepositoryRelProvider(resourceMappings) @AT@ 7707 @LENGTH@ 43
---------INS New@@new @TO@ ClassInstanceCreation@@RepositoryRelProvider[resourceMappings] @AT@ 7707 @LENGTH@ 3
---------INS SimpleType@@RepositoryRelProvider @TO@ ClassInstanceCreation@@RepositoryRelProvider[resourceMappings] @AT@ 7711 @LENGTH@ 21
---------INS SimpleName@@resourceMappings @TO@ ClassInstanceCreation@@RepositoryRelProvider[resourceMappings] @AT@ 7733 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:this.id.hashCode() @TO@ InfixExpression:this.id.hashCode() ^ this.attribute.hashCode() @AT@ 1634 @LENGTH@ 26
---INS InfixExpression@@this.id.hashCode() ^ this.attribute.hashCode() @TO@ ReturnStatement@@MethodInvocation:this.id.hashCode() @AT@ 1641 @LENGTH@ 46
------MOV MethodInvocation@@this.id.hashCode() @TO@ InfixExpression@@this.id.hashCode() ^ this.attribute.hashCode() @AT@ 1641 @LENGTH@ 18
------INS Operator@@^ @TO@ InfixExpression@@this.id.hashCode() ^ this.attribute.hashCode() @AT@ 1659 @LENGTH@ 1
------INS MethodInvocation@@this.attribute.hashCode() @TO@ InfixExpression@@this.id.hashCode() ^ this.attribute.hashCode() @AT@ 1662 @LENGTH@ 25
---------INS FieldAccess@@this.attribute @TO@ MethodInvocation@@this.attribute.hashCode() @AT@ 1662 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.attribute @AT@ 1662 @LENGTH@ 4
------------INS SimpleName@@attribute @TO@ FieldAccess@@this.attribute @AT@ 1667 @LENGTH@ 9
---------INS SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@this.attribute.hashCode() @AT@ 1677 @LENGTH@ 10


UPD VariableDeclarationStatement@@Map<String,MappedServices> mappingRules=httpGateway.getMappingRules(); @TO@ Map<String,MappedServices> mappingRules=httpGateway.getMappedServices(); @AT@ 2382 @LENGTH@ 73
---UPD VariableDeclarationFragment@@mappingRules=httpGateway.getMappingRules() @TO@ mappingRules=httpGateway.getMappedServices() @AT@ 2410 @LENGTH@ 44
------UPD MethodInvocation@@httpGateway.getMappingRules() @TO@ httpGateway.getMappedServices() @AT@ 2425 @LENGTH@ 29
---------UPD SimpleName@@MethodName:getMappingRules:[] @TO@ MethodName:getMappedServices:[] @AT@ 2437 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:ServerLogger.AS_ROOT_LOGGER.debugf("Connection to Host Controller closed") @TO@ MethodDeclaration@@public, ProtocolConnectionManager.ConnectTask, MethodName:connectionClosed,  @AT@ 13417 @LENGTH@ 75
---INS MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.debugf("Connection to Host Controller closed") @TO@ ExpressionStatement@@MethodInvocation:ServerLogger.AS_ROOT_LOGGER.debugf("Connection to Host Controller closed") @AT@ 13417 @LENGTH@ 74
------INS QualifiedName@@Name:ServerLogger.AS_ROOT_LOGGER @TO@ MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.debugf("Connection to Host Controller closed") @AT@ 13417 @LENGTH@ 27
------INS SimpleName@@MethodName:debugf:["Connection to Host Controller closed"] @TO@ MethodInvocation@@ServerLogger.AS_ROOT_LOGGER.debugf("Connection to Host Controller closed") @AT@ 13445 @LENGTH@ 46
---------INS StringLiteral@@"Connection to Host Controller closed" @TO@ SimpleName@@MethodName:debugf:["Connection to Host Controller closed"] @AT@ 13452 @LENGTH@ 38


UPD IfStatement@@if (mergedMetaData.getDefaultEncoding() != null) {  deploymentInfo.setDefaultEncoding(mergedMetaData.getDefaultEncoding());} else if (servletContainer.getDefaultEncoding() != null) {  deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding());} @TO@ if (mergedMetaData.getDefaultEncoding() != null) {  d.setDefaultEncoding(mergedMetaData.getDefaultEncoding());} else if (servletContainer.getDefaultEncoding() != null) {  d.setDefaultEncoding(servletContainer.getDefaultEncoding());} @AT@ 39594 @LENGTH@ 307
---UPD Block@@ThenBody:{  deploymentInfo.setDefaultEncoding(mergedMetaData.getDefaultEncoding());} @TO@ ThenBody:{  d.setDefaultEncoding(mergedMetaData.getDefaultEncoding());} @AT@ 39640 @LENGTH@ 103
------UPD ExpressionStatement@@MethodInvocation:deploymentInfo.setDefaultEncoding(mergedMetaData.getDefaultEncoding()) @TO@ MethodInvocation:d.setDefaultEncoding(mergedMetaData.getDefaultEncoding()) @AT@ 39658 @LENGTH@ 71
---------UPD MethodInvocation@@deploymentInfo.setDefaultEncoding(mergedMetaData.getDefaultEncoding()) @TO@ d.setDefaultEncoding(mergedMetaData.getDefaultEncoding()) @AT@ 39658 @LENGTH@ 70
------------UPD SimpleName@@Name:deploymentInfo @TO@ Name:d @AT@ 39658 @LENGTH@ 14
---UPD Block@@ElseBody:if (servletContainer.getDefaultEncoding() != null) {  deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding());} @TO@ ElseBody:if (servletContainer.getDefaultEncoding() != null) {  d.setDefaultEncoding(servletContainer.getDefaultEncoding());} @AT@ 39748 @LENGTH@ 153
------UPD IfStatement@@if (servletContainer.getDefaultEncoding() != null) {  deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding());} @TO@ if (servletContainer.getDefaultEncoding() != null) {  d.setDefaultEncoding(servletContainer.getDefaultEncoding());} @AT@ 39748 @LENGTH@ 153
---------UPD Block@@ThenBody:{  deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding());} @TO@ ThenBody:{  d.setDefaultEncoding(servletContainer.getDefaultEncoding());} @AT@ 39796 @LENGTH@ 105
------------UPD ExpressionStatement@@MethodInvocation:deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding()) @TO@ MethodInvocation:d.setDefaultEncoding(servletContainer.getDefaultEncoding()) @AT@ 39814 @LENGTH@ 73
---------------UPD MethodInvocation@@deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding()) @TO@ d.setDefaultEncoding(servletContainer.getDefaultEncoding()) @AT@ 39814 @LENGTH@ 72
------------------UPD SimpleName@@Name:deploymentInfo @TO@ Name:d @AT@ 39814 @LENGTH@ 14


UPD TypeDeclaration@@[public]LinkedProperties, ManagedProperties @TO@ [@SuppressWarnings("serial"), public]LinkedProperties, ManagedProperties @AT@ 1046 @LENGTH@ 1441
---INS SingleMemberAnnotation@@@SuppressWarnings("serial") @TO@ TypeDeclaration@@[public]LinkedProperties, ManagedProperties @AT@ 1042 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode()) @TO@ MethodInvocation:Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode()) @AT@ 2830 @LENGTH@ 147
---UPD MethodInvocation@@Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode()) @TO@ Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode()) @AT@ 2830 @LENGTH@ 146
------UPD SimpleName@@MethodName:assertEquals:[0, driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode()] @TO@ MethodName:assertEquals:[0, driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode()] @AT@ 2837 @LENGTH@ 139
---------UPD MethodInvocation@@driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode() @TO@ driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode() @AT@ 2853 @LENGTH@ 122
------------UPD MethodInvocation@@MethodName:run:["load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName] @TO@ MethodName:run:["load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName] @AT@ 2853 @LENGTH@ 104
---------------UPD InfixExpression@@"load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName @TO@ "load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName @AT@ 2864 @LENGTH@ 92
------------------UPD MethodInvocation@@dataDir.getAbsolutePath() @TO@ dataDir.getPath().replaceAll("\\\\","/") @AT@ 2899 @LENGTH@ 25
---------------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@dataDir.getAbsolutePath() @AT@ 2899 @LENGTH@ 17
---------------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:replaceAll:["\\\\", "/"] @AT@ 2907 @LENGTH@ 17
------------------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2928 @LENGTH@ 6
------------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2936 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertTrue(serviceLatch.await(60,TimeUnit.SECONDS)) @TO@ MethodInvocation:assertTrue(serviceLatch.await(20,TimeUnit.SECONDS)) @AT@ 3255 @LENGTH@ 53
---UPD MethodInvocation@@assertTrue(serviceLatch.await(60,TimeUnit.SECONDS)) @TO@ assertTrue(serviceLatch.await(20,TimeUnit.SECONDS)) @AT@ 3255 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertTrue:[serviceLatch.await(60,TimeUnit.SECONDS)] @TO@ MethodName:assertTrue:[serviceLatch.await(20,TimeUnit.SECONDS)] @AT@ 3255 @LENGTH@ 52
---------UPD MethodInvocation@@serviceLatch.await(60,TimeUnit.SECONDS) @TO@ serviceLatch.await(20,TimeUnit.SECONDS) @AT@ 3266 @LENGTH@ 40
------------UPD SimpleName@@MethodName:await:[60, TimeUnit.SECONDS] @TO@ MethodName:await:[20, TimeUnit.SECONDS] @AT@ 3279 @LENGTH@ 27
---------------UPD NumberLiteral@@60 @TO@ 20 @AT@ 3285 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testWatcher, Exception,  @AT@ 1963 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 1963 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 1963 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 1970 @LENGTH@ 11
---------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 1976 @LENGTH@ 4


INS MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @TO@ TypeDeclaration@@[public, final]JmsMessageHelper,  @AT@ 6887 @LENGTH@ 247
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @AT@ 6887 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @AT@ 6894 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @AT@ 6901 @LENGTH@ 7
---INS SimpleName@@MethodName:isTopicPrefix @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @AT@ 6909 @LENGTH@ 13
---INS SingleVariableDeclaration@@String destination @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @AT@ 6923 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String destination @AT@ 6923 @LENGTH@ 6
------INS SimpleName@@destination @TO@ SingleVariableDeclaration@@String destination @AT@ 6930 @LENGTH@ 11
---INS IfStatement@@if (ObjectHelper.isEmpty(destination)) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @AT@ 6953 @LENGTH@ 76
------INS MethodInvocation@@ObjectHelper.isEmpty(destination) @TO@ IfStatement@@if (ObjectHelper.isEmpty(destination)) {  return false;} @AT@ 6957 @LENGTH@ 33
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(destination) @AT@ 6957 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[destination] @TO@ MethodInvocation@@ObjectHelper.isEmpty(destination) @AT@ 6970 @LENGTH@ 20
------------INS SimpleName@@destination @TO@ SimpleName@@MethodName:isEmpty:[destination] @AT@ 6978 @LENGTH@ 11
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (ObjectHelper.isEmpty(destination)) {  return false;} @AT@ 6992 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 7006 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 7013 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX) @TO@ MethodDeclaration@@public, static, boolean, MethodName:isTopicPrefix, String destination,  @AT@ 7039 @LENGTH@ 89
------INS InfixExpression@@destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX) @TO@ ReturnStatement@@InfixExpression:destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX) @AT@ 7046 @LENGTH@ 81
---------INS MethodInvocation@@destination.startsWith(TOPIC_PREFIX) @TO@ InfixExpression@@destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX) @AT@ 7046 @LENGTH@ 36
------------INS SimpleName@@Name:destination @TO@ MethodInvocation@@destination.startsWith(TOPIC_PREFIX) @AT@ 7046 @LENGTH@ 11
------------INS SimpleName@@MethodName:startsWith:[TOPIC_PREFIX] @TO@ MethodInvocation@@destination.startsWith(TOPIC_PREFIX) @AT@ 7058 @LENGTH@ 24
---------------INS SimpleName@@TOPIC_PREFIX @TO@ SimpleName@@MethodName:startsWith:[TOPIC_PREFIX] @AT@ 7069 @LENGTH@ 12
---------INS Operator@@|| @TO@ InfixExpression@@destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX) @AT@ 7082 @LENGTH@ 2
---------INS MethodInvocation@@destination.startsWith(TEMP_TOPIC_PREFIX) @TO@ InfixExpression@@destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX) @AT@ 7086 @LENGTH@ 41
------------INS SimpleName@@Name:destination @TO@ MethodInvocation@@destination.startsWith(TEMP_TOPIC_PREFIX) @AT@ 7086 @LENGTH@ 11
------------INS SimpleName@@MethodName:startsWith:[TEMP_TOPIC_PREFIX] @TO@ MethodInvocation@@destination.startsWith(TEMP_TOPIC_PREFIX) @AT@ 7098 @LENGTH@ 29
---------------INS SimpleName@@TEMP_TOPIC_PREFIX @TO@ SimpleName@@MethodName:startsWith:[TEMP_TOPIC_PREFIX] @AT@ 7109 @LENGTH@ 17


UPD TypeDeclaration@@[private, static]Column,  @TO@ [private]Column,  @AT@ 5188 @LENGTH@ 133
---DEL Modifier@@static @AT@ 5196 @LENGTH@ 6


UPD IfStatement@@if (principal == null) {  unauthenticatedIdentity=getUnauthenticatedIdentity();  subjectInfo.addIdentity(unauthenticatedIdentity);  auditPrincipal=unauthenticatedIdentity.asPrincipal();  subject.getPrincipals().add(auditPrincipal);  authenticated=true;} @TO@ if (principal == null) {  unauthenticatedIdentity=getUnauthenticatedIdentity();  subjectInfo.addIdentity(unauthenticatedIdentity);  auditPrincipal=unauthenticatedIdentity.asPrincipal();  subject.getPrincipals().add(auditPrincipal);  authenticated=true;} else {  subject.getPrincipals().add(principal);} @AT@ 17373 @LENGTH@ 323
---INS Block@@ElseBody:{  subject.getPrincipals().add(principal);} @TO@ IfStatement@@if (principal == null) {  unauthenticatedIdentity=getUnauthenticatedIdentity();  subjectInfo.addIdentity(unauthenticatedIdentity);  auditPrincipal=unauthenticatedIdentity.asPrincipal();  subject.getPrincipals().add(auditPrincipal);  authenticated=true;} @AT@ 17702 @LENGTH@ 63
------INS ExpressionStatement@@MethodInvocation:subject.getPrincipals().add(principal) @TO@ Block@@ElseBody:{  subject.getPrincipals().add(principal);} @AT@ 17716 @LENGTH@ 39
---------INS MethodInvocation@@subject.getPrincipals().add(principal) @TO@ ExpressionStatement@@MethodInvocation:subject.getPrincipals().add(principal) @AT@ 17716 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:getPrincipals:[] @TO@ MethodInvocation@@subject.getPrincipals().add(principal) @AT@ 17716 @LENGTH@ 23
------------INS SimpleName@@Name:subject @TO@ MethodInvocation@@subject.getPrincipals().add(principal) @AT@ 17716 @LENGTH@ 7
------------INS SimpleName@@MethodName:add:[principal] @TO@ MethodInvocation@@subject.getPrincipals().add(principal) @AT@ 17740 @LENGTH@ 14
---------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:add:[principal] @AT@ 17744 @LENGTH@ 9


UPD FieldDeclaration@@private, PagingAndSortingRepository<T,?>, [repository] @TO@ private, PagingAndSortingRepository<?,?>, [repository] @AT@ 2715 @LENGTH@ 52
---UPD ParameterizedType@@PagingAndSortingRepository<T,?> @TO@ PagingAndSortingRepository<?,?> @AT@ 2723 @LENGTH@ 32
------DEL SimpleType@@T @AT@ 2750 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@PagingAndSortingRepository<T,?> @AT@ 2753 @LENGTH@ 1


UPD ReturnStatement@@InfixExpression:super.hashCode() + (isResolvedCompletely() ? this.type.hashCode() : 0) @TO@ ConditionalExpression:isResolvedCompletely() ? this.type.hashCode() : super.hashCode() @AT@ 4984 @LENGTH@ 78
---DEL InfixExpression@@super.hashCode() + (isResolvedCompletely() ? this.type.hashCode() : 0) @AT@ 4991 @LENGTH@ 70
------DEL SuperMethodInvocation@@super.hashCode() @AT@ 4991 @LENGTH@ 16
---------DEL SimpleName@@MethodName:hashCode:[] @AT@ 4997 @LENGTH@ 8
------DEL Operator@@+ @AT@ 5007 @LENGTH@ 1
------DEL ParenthesizedExpression@@(isResolvedCompletely() ? this.type.hashCode() : 0) @AT@ 5010 @LENGTH@ 51
---MOV ConditionalExpression@@isResolvedCompletely() ? this.type.hashCode() : 0 @TO@ ReturnStatement@@InfixExpression:super.hashCode() + (isResolvedCompletely() ? this.type.hashCode() : 0) @AT@ 5011 @LENGTH@ 49
------INS SuperMethodInvocation@@super.hashCode() @TO@ ConditionalExpression@@isResolvedCompletely() ? this.type.hashCode() : 0 @AT@ 5039 @LENGTH@ 16
---------INS SimpleName@@MethodName:hashCode:[] @TO@ SuperMethodInvocation@@super.hashCode() @AT@ 5045 @LENGTH@ 8
------DEL NumberLiteral@@0 @AT@ 5059 @LENGTH@ 1


UPD FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @TO@ protected, static, final, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1584 @LENGTH@ 60
---INS Modifier@@static @TO@ FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1546 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1553 @LENGTH@ 5


DEL VariableDeclarationStatement@@HTableInterface unboundTable=HbaseSynchronizationManager.unbindResource(tableName); @AT@ 4854 @LENGTH@ 85
---DEL SimpleType@@HTableInterface @AT@ 4854 @LENGTH@ 15
---DEL VariableDeclarationFragment@@unboundTable=HbaseSynchronizationManager.unbindResource(tableName) @AT@ 4870 @LENGTH@ 68
------DEL SimpleName@@unboundTable @AT@ 4870 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:builder.append("\\)?") @TO@ Initializer@@Initializer @AT@ 4512 @LENGTH@ 23
---INS MethodInvocation@@builder.append("\\)?") @TO@ ExpressionStatement@@MethodInvocation:builder.append("\\)?") @AT@ 4512 @LENGTH@ 22
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append("\\)?") @AT@ 4512 @LENGTH@ 7
------INS SimpleName@@MethodName:append:["\\)?"] @TO@ MethodInvocation@@builder.append("\\)?") @AT@ 4520 @LENGTH@ 14
---------INS StringLiteral@@"\\)?" @TO@ SimpleName@@MethodName:append:["\\)?"] @AT@ 4527 @LENGTH@ 6


INS MethodDeclaration@@int, MethodName:getWeight,  @TO@ TypeDeclaration@@[public]ContainerAutoScaler,  @AT@ 1055 @LENGTH@ 12
---INS PrimitiveType@@int @TO@ MethodDeclaration@@int, MethodName:getWeight,  @AT@ 1051 @LENGTH@ 3
---INS SimpleName@@MethodName:getWeight @TO@ MethodDeclaration@@int, MethodName:getWeight,  @AT@ 1055 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,name1) @TO@ MethodDeclaration@@public, void, MethodName:testCp, Exception,  @AT@ 4049 @LENGTH@ 32
---MOV MethodInvocation@@TestUtils.writeToFS(cfg,name1) @TO@ ExpressionStatement@@MethodInvocation:TestUtils.writeToFS(cfg,name1) @AT@ 4070 @LENGTH@ 31


UPD TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Provision.instanceStarted(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  Provision.containersStatus(Arrays.asList(child1,child2),"success",PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:ensemble-add --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @TO@ try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Provision.instanceStarted(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  String response="";  for (int i=0; i < 10 && !response.contains("true"); i++) {    response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);    Thread.sleep(1000);  }  response="";  for (int i=0; i < 10 && !response.contains("true"); i++) {    response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);    Thread.sleep(1000);  }  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  Provision.containersStatus(Arrays.asList(child1,child2),"success",PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:ensemble-add --force --migration-timeout 240000 child1 child2",240000L,false));  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force --migration-timeout 240000 child1 child2",240000L,false));  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @AT@ 2732 @LENGTH@ 2122
---INS VariableDeclarationStatement@@String response=""; @TO@ TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Provision.instanceStarted(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  Provision.containersStatus(Arrays.asList(child1,child2),"success",PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:ensemble-add --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @AT@ 3125 @LENGTH@ 21
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String response=""; @AT@ 3125 @LENGTH@ 6
------INS VariableDeclarationFragment@@response="" @TO@ VariableDeclarationStatement@@String response=""; @AT@ 3132 @LENGTH@ 13
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response="" @AT@ 3132 @LENGTH@ 8
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@response="" @AT@ 3143 @LENGTH@ 2
---INS ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @TO@ TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Provision.instanceStarted(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  Provision.containersStatus(Arrays.asList(child1,child2),"success",PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:ensemble-add --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @AT@ 3159 @LENGTH@ 272
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3164 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3164 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3168 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 3168 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 3172 @LENGTH@ 1
------INS InfixExpression@@i < 10 && !response.contains("true") @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3175 @LENGTH@ 36
---------INS InfixExpression@@i < 10 @TO@ InfixExpression@@i < 10 && !response.contains("true") @AT@ 3175 @LENGTH@ 6
------------INS SimpleName@@i @TO@ InfixExpression@@i < 10 @AT@ 3175 @LENGTH@ 1
------------INS Operator@@< @TO@ InfixExpression@@i < 10 @AT@ 3176 @LENGTH@ 1
------------INS NumberLiteral@@10 @TO@ InfixExpression@@i < 10 @AT@ 3179 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@i < 10 && !response.contains("true") @AT@ 3181 @LENGTH@ 2
---------INS PrefixExpression@@!response.contains("true") @TO@ InfixExpression@@i < 10 && !response.contains("true") @AT@ 3185 @LENGTH@ 26
------------INS Operator@@! @TO@ PrefixExpression@@!response.contains("true") @AT@ 3185 @LENGTH@ 1
------------INS MethodInvocation@@response.contains("true") @TO@ PrefixExpression@@!response.contains("true") @AT@ 3186 @LENGTH@ 25
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.contains("true") @AT@ 3186 @LENGTH@ 8
---------------INS SimpleName@@MethodName:contains:["true"] @TO@ MethodInvocation@@response.contains("true") @AT@ 3195 @LENGTH@ 16
------------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:contains:["true"] @AT@ 3204 @LENGTH@ 6
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE)) @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3178 @LENGTH@ 154
---------INS Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @TO@ ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE)) @AT@ 3236 @LENGTH@ 144
------------MOV MethodInvocation@@executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @TO@ Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3197 @LENGTH@ 133
------------INS SimpleName@@response @TO@ Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3236 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3244 @LENGTH@ 1
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3213 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 3213 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 3215 @LENGTH@ 2
------INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3398 @LENGTH@ 19
---------MOV MethodInvocation@@Thread.sleep(5000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 4258 @LENGTH@ 18
---UPD ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE)) @TO@ Assignment:response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3178 @LENGTH@ 154
---INS ExpressionStatement@@Assignment:response="" @TO@ TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Provision.instanceStarted(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  Provision.containersStatus(Arrays.asList(child1,child2),"success",PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:ensemble-add --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @AT@ 3444 @LENGTH@ 14
------INS Assignment@@response="" @TO@ ExpressionStatement@@Assignment:response="" @AT@ 3444 @LENGTH@ 13
---------INS SimpleName@@response @TO@ Assignment@@response="" @AT@ 3444 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@response="" @AT@ 3452 @LENGTH@ 1
---------INS StringLiteral@@"" @TO@ Assignment@@response="" @AT@ 3455 @LENGTH@ 2
---INS ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @TO@ TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Provision.instanceStarted(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE));  System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  Provision.containersStatus(Arrays.asList(child1,child2),"success",PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:ensemble-add --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force --migration-timeout 240000 child1 child2",240000L,false));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @AT@ 3471 @LENGTH@ 272
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3476 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3476 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3480 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 3480 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 3484 @LENGTH@ 1
------INS InfixExpression@@i < 10 && !response.contains("true") @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3487 @LENGTH@ 36
---------INS InfixExpression@@i < 10 @TO@ InfixExpression@@i < 10 && !response.contains("true") @AT@ 3487 @LENGTH@ 6
------------INS SimpleName@@i @TO@ InfixExpression@@i < 10 @AT@ 3487 @LENGTH@ 1
------------INS Operator@@< @TO@ InfixExpression@@i < 10 @AT@ 3488 @LENGTH@ 1
------------INS NumberLiteral@@10 @TO@ InfixExpression@@i < 10 @AT@ 3491 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@i < 10 && !response.contains("true") @AT@ 3493 @LENGTH@ 2
---------INS PrefixExpression@@!response.contains("true") @TO@ InfixExpression@@i < 10 && !response.contains("true") @AT@ 3497 @LENGTH@ 26
------------INS Operator@@! @TO@ PrefixExpression@@!response.contains("true") @AT@ 3497 @LENGTH@ 1
------------INS MethodInvocation@@response.contains("true") @TO@ PrefixExpression@@!response.contains("true") @AT@ 3498 @LENGTH@ 25
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.contains("true") @AT@ 3498 @LENGTH@ 8
---------------INS SimpleName@@MethodName:contains:["true"] @TO@ MethodInvocation@@response.contains("true") @AT@ 3507 @LENGTH@ 16
------------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:contains:["true"] @AT@ 3516 @LENGTH@ 6
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE)) @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3502 @LENGTH@ 154
---------INS Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @TO@ ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE)) @AT@ 3548 @LENGTH@ 144
------------MOV MethodInvocation@@executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @TO@ Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3521 @LENGTH@ 133
------------INS SimpleName@@response @TO@ Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3548 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3556 @LENGTH@ 1
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3525 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 3525 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 3527 @LENGTH@ 2
------INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ ForStatement@@for (int i=0; i < 10 && !response.contains("true"); i++) {  response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE);  Thread.sleep(1000);} @AT@ 3710 @LENGTH@ 19
---------MOV MethodInvocation@@Thread.sleep(5000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 4554 @LENGTH@ 18
---UPD ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE)) @TO@ Assignment:response=executeCommand("ssh -l admin -P admin -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ WAIT_FOR_JOIN_SERVICE) @AT@ 3502 @LENGTH@ 154
---DEL ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @AT@ 4258 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @AT@ 4554 @LENGTH@ 19


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 4170 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4173 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4173 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4173 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4180 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4200 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4204 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4210 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 4371 @LENGTH@ 53


UPD FieldDeclaration@@private, final, Authentication<String>, [authentication=mock(Authentication.class)] @TO@ private, final, String, [authentication="auth"] @AT@ 1624 @LENGTH@ 81
---INS SimpleType@@String @TO@ FieldDeclaration@@private, final, Authentication<String>, [authentication=mock(Authentication.class)] @AT@ 1584 @LENGTH@ 6
---DEL ParameterizedType@@Authentication<String> @AT@ 1638 @LENGTH@ 22
------DEL SimpleType@@Authentication @AT@ 1638 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 1653 @LENGTH@ 6
---UPD VariableDeclarationFragment@@authentication=mock(Authentication.class) @TO@ authentication="auth" @AT@ 1661 @LENGTH@ 43
------INS StringLiteral@@"auth" @TO@ VariableDeclarationFragment@@authentication=mock(Authentication.class) @AT@ 1608 @LENGTH@ 6
------DEL MethodInvocation@@mock(Authentication.class) @AT@ 1678 @LENGTH@ 26
---------DEL SimpleName@@MethodName:mock:[Authentication.class] @AT@ 1678 @LENGTH@ 26
------------DEL TypeLiteral@@Authentication.class @AT@ 1683 @LENGTH@ 20


UPD TryStatement@@try {  JsonPath.read(response.getContentAsString(),path);  fail(path + " should have failed");} catch (InvalidPathException e) {} @TO@ try {  Object result=JsonPath.read(response.getContentAsString(),path);  if (result != null) {    fail("Was expecting to find no value for path " + path + " but got "+ result.toString());  }} catch (InvalidPathException e) {} @AT@ 9651 @LENGTH@ 137
---DEL ExpressionStatement@@MethodInvocation:JsonPath.read(response.getContentAsString(),path) @AT@ 9660 @LENGTH@ 51
---INS VariableDeclarationStatement@@Object result=JsonPath.read(response.getContentAsString(),path); @TO@ TryStatement@@try {  JsonPath.read(response.getContentAsString(),path);  fail(path + " should have failed");} catch (InvalidPathException e) {} @AT@ 9661 @LENGTH@ 67
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=JsonPath.read(response.getContentAsString(),path); @AT@ 9661 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=JsonPath.read(response.getContentAsString(),path) @TO@ VariableDeclarationStatement@@Object result=JsonPath.read(response.getContentAsString(),path); @AT@ 9668 @LENGTH@ 59
---------MOV MethodInvocation@@JsonPath.read(response.getContentAsString(),path) @TO@ VariableDeclarationFragment@@result=JsonPath.read(response.getContentAsString(),path) @AT@ 9660 @LENGTH@ 50
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=JsonPath.read(response.getContentAsString(),path) @AT@ 9668 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:fail(path + " should have failed") @AT@ 9715 @LENGTH@ 35
---INS IfStatement@@if (result != null) {  fail("Was expecting to find no value for path " + path + " but got "+ result.toString());} @TO@ TryStatement@@try {  JsonPath.read(response.getContentAsString(),path);  fail(path + " should have failed");} catch (InvalidPathException e) {} @AT@ 9733 @LENGTH@ 121
------INS InfixExpression@@result != null @TO@ IfStatement@@if (result != null) {  fail("Was expecting to find no value for path " + path + " but got "+ result.toString());} @AT@ 9737 @LENGTH@ 14
---------INS SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 9737 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@result != null @AT@ 9743 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 9747 @LENGTH@ 4
------INS Block@@ThenBody:{  fail("Was expecting to find no value for path " + path + " but got "+ result.toString());} @TO@ IfStatement@@if (result != null) {  fail("Was expecting to find no value for path " + path + " but got "+ result.toString());} @AT@ 9753 @LENGTH@ 101
---------INS ExpressionStatement@@MethodInvocation:fail("Was expecting to find no value for path " + path + " but got "+ result.toString()) @TO@ Block@@ThenBody:{  fail("Was expecting to find no value for path " + path + " but got "+ result.toString());} @AT@ 9759 @LENGTH@ 90
------------MOV MethodInvocation@@fail(path + " should have failed") @TO@ ExpressionStatement@@MethodInvocation:fail("Was expecting to find no value for path " + path + " but got "+ result.toString()) @AT@ 9715 @LENGTH@ 34
---------------UPD SimpleName@@MethodName:fail:[path + " should have failed"] @TO@ MethodName:fail:["Was expecting to find no value for path " + path + " but got "+ result.toString()] @AT@ 9715 @LENGTH@ 34
------------------UPD InfixExpression@@path + " should have failed" @TO@ "Was expecting to find no value for path " + path + " but got "+ result.toString() @AT@ 9720 @LENGTH@ 28
---------------------DEL Operator@@+ @AT@ 9724 @LENGTH@ 1
---------------------UPD StringLiteral@@" should have failed" @TO@ " but got " @AT@ 9727 @LENGTH@ 21
---------------------INS StringLiteral@@"Was expecting to find no value for path " @TO@ InfixExpression@@path + " should have failed" @AT@ 9764 @LENGTH@ 42
---------------------INS Operator@@+ @TO@ InfixExpression@@path + " should have failed" @AT@ 9806 @LENGTH@ 1
---------------------INS MethodInvocation@@result.toString() @TO@ InfixExpression@@path + " should have failed" @AT@ 9830 @LENGTH@ 17
------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.toString() @AT@ 9830 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@result.toString() @AT@ 9837 @LENGTH@ 10


UPD VariableDeclarationStatement@@Map<String,MappedServices> mappingRules=httpGateway.getMappingRules(); @TO@ Map<String,MappedServices> mappingRules=httpGateway.getMappedServices(); @AT@ 3532 @LENGTH@ 73
---UPD VariableDeclarationFragment@@mappingRules=httpGateway.getMappingRules() @TO@ mappingRules=httpGateway.getMappedServices() @AT@ 3560 @LENGTH@ 44
------UPD MethodInvocation@@httpGateway.getMappingRules() @TO@ httpGateway.getMappedServices() @AT@ 3575 @LENGTH@ 29
---------UPD SimpleName@@MethodName:getMappingRules:[] @TO@ MethodName:getMappedServices:[] @AT@ 3587 @LENGTH@ 17


UPD Block@@ThenBody:{  baseTypeElement=findTypeElement(roundEnv,superclass.toString());} @TO@ ThenBody:{  String superClassName=canonicalClassName(superclass.toString());  baseTypeElement=findTypeElement(roundEnv,superClassName);} @AT@ 11321 @LENGTH@ 99
---UPD ExpressionStatement@@Assignment:baseTypeElement=findTypeElement(roundEnv,superclass.toString()) @TO@ Assignment:baseTypeElement=findTypeElement(roundEnv,superClassName) @AT@ 11339 @LENGTH@ 67
------UPD Assignment@@baseTypeElement=findTypeElement(roundEnv,superclass.toString()) @TO@ baseTypeElement=findTypeElement(roundEnv,superClassName) @AT@ 11339 @LENGTH@ 66
---------UPD MethodInvocation@@findTypeElement(roundEnv,superclass.toString()) @TO@ findTypeElement(roundEnv,superClassName) @AT@ 11357 @LENGTH@ 48
------------UPD SimpleName@@MethodName:findTypeElement:[roundEnv, superclass.toString()] @TO@ MethodName:findTypeElement:[roundEnv, superClassName] @AT@ 11357 @LENGTH@ 48
---------------DEL MethodInvocation@@superclass.toString() @AT@ 11383 @LENGTH@ 21
------------------DEL SimpleName@@Name:superclass @AT@ 11383 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 11394 @LENGTH@ 10
---------------INS SimpleName@@superClassName @TO@ SimpleName@@MethodName:findTypeElement:[roundEnv, superclass.toString()] @AT@ 11541 @LENGTH@ 14
---INS VariableDeclarationStatement@@String superClassName=canonicalClassName(superclass.toString()); @TO@ Block@@ThenBody:{  baseTypeElement=findTypeElement(roundEnv,superclass.toString());} @AT@ 11414 @LENGTH@ 66
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String superClassName=canonicalClassName(superclass.toString()); @AT@ 11414 @LENGTH@ 6
------INS VariableDeclarationFragment@@superClassName=canonicalClassName(superclass.toString()) @TO@ VariableDeclarationStatement@@String superClassName=canonicalClassName(superclass.toString()); @AT@ 11421 @LENGTH@ 58
---------INS SimpleName@@superClassName @TO@ VariableDeclarationFragment@@superClassName=canonicalClassName(superclass.toString()) @AT@ 11421 @LENGTH@ 14
---------INS MethodInvocation@@canonicalClassName(superclass.toString()) @TO@ VariableDeclarationFragment@@superClassName=canonicalClassName(superclass.toString()) @AT@ 11438 @LENGTH@ 41
------------INS SimpleName@@MethodName:canonicalClassName:[superclass.toString()] @TO@ MethodInvocation@@canonicalClassName(superclass.toString()) @AT@ 11438 @LENGTH@ 41
---------------INS MethodInvocation@@superclass.toString() @TO@ SimpleName@@MethodName:canonicalClassName:[superclass.toString()] @AT@ 11457 @LENGTH@ 21
------------------INS SimpleName@@Name:superclass @TO@ MethodInvocation@@superclass.toString() @AT@ 11457 @LENGTH@ 10
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@superclass.toString() @AT@ 11468 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:resolver.setMaxPageSize(config().getMaxPageSize()) @TO@ MethodDeclaration@@public, HateoasPageableHandlerMethodArgumentResolver, MethodName:pageableResolver,  @AT@ 19875 @LENGTH@ 51
---INS MethodInvocation@@resolver.setMaxPageSize(config().getMaxPageSize()) @TO@ ExpressionStatement@@MethodInvocation:resolver.setMaxPageSize(config().getMaxPageSize()) @AT@ 19875 @LENGTH@ 50
------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.setMaxPageSize(config().getMaxPageSize()) @AT@ 19875 @LENGTH@ 8
------INS SimpleName@@MethodName:setMaxPageSize:[config().getMaxPageSize()] @TO@ MethodInvocation@@resolver.setMaxPageSize(config().getMaxPageSize()) @AT@ 19884 @LENGTH@ 41
---------INS MethodInvocation@@config().getMaxPageSize() @TO@ SimpleName@@MethodName:setMaxPageSize:[config().getMaxPageSize()] @AT@ 19899 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:config:[] @TO@ MethodInvocation@@config().getMaxPageSize() @AT@ 19899 @LENGTH@ 8
------------INS SimpleName@@MethodName:getMaxPageSize:[] @TO@ MethodInvocation@@config().getMaxPageSize() @AT@ 19908 @LENGTH@ 16


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 1535 @LENGTH@ 7046
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1535 @LENGTH@ 39


INS ExpressionStatement@@MethodInvocation:parameters.put(OAuth2Utils.SCOPE,"read write") @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationRequestPreserved,  @AT@ 6454 @LENGTH@ 48
---INS MethodInvocation@@parameters.put(OAuth2Utils.SCOPE,"read write") @TO@ ExpressionStatement@@MethodInvocation:parameters.put(OAuth2Utils.SCOPE,"read write") @AT@ 6454 @LENGTH@ 47
------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.put(OAuth2Utils.SCOPE,"read write") @AT@ 6454 @LENGTH@ 10
------INS SimpleName@@MethodName:put:[OAuth2Utils.SCOPE, "read write"] @TO@ MethodInvocation@@parameters.put(OAuth2Utils.SCOPE,"read write") @AT@ 6465 @LENGTH@ 36
---------INS QualifiedName@@OAuth2Utils.SCOPE @TO@ SimpleName@@MethodName:put:[OAuth2Utils.SCOPE, "read write"] @AT@ 6469 @LENGTH@ 17
------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.SCOPE @AT@ 6469 @LENGTH@ 11
------------INS SimpleName@@SCOPE @TO@ QualifiedName@@OAuth2Utils.SCOPE @AT@ 6481 @LENGTH@ 5
---------INS StringLiteral@@"read write" @TO@ SimpleName@@MethodName:put:[OAuth2Utils.SCOPE, "read write"] @AT@ 6488 @LENGTH@ 12


UPD TryStatement@@try {  CompoundSecMech secMech=CSIv2Util.getMatchingSecurityMech(ri,codec,(short)(EstablishTrustInClient.value + IdentityAssertion.value),(short)0);  if (secMech == null) {    return;  }  if (JacORBLogger.ROOT_LOGGER.isTraceEnabled()) {    StringBuilder tmp=new StringBuilder();    CSIv2Util.toString(secMech,tmp);    JacORBLogger.ROOT_LOGGER.trace(tmp);  }  IdentityToken identityToken=absentIdentityToken;  byte[] encodedAuthenticationToken=noAuthenticationToken;  if ((secMech.sas_context_mech.target_supports & IdentityAssertion.value) != 0) {    RunAs runAs=SecurityActions.peekRunAsIdentity();    Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal();    if (p != null) {      String name=p.getName();      if (name.indexOf('@') < 0) {        name+="@default";      }      byte[] principalName=name.getBytes("UTF-8");      byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);      Any any=ORB.init().create_any();      byte[] encapsulatedEncodedName;      GSS_NT_ExportedNameHelper.insert(any,encodedName);      try {        encapsulatedEncodedName=codec.encode_value(any);      } catch (      InvalidTypeForEncoding e) {        throw JacORBMessages.MESSAGES.unexpectedException(e);      }      identityToken=new IdentityToken();      identityToken.principal_name(encapsulatedEncodedName);    } else     if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {      identityToken=new IdentityToken();      identityToken.anonymous(true);    }  }  if ((secMech.as_context_mech.target_requires & EstablishTrustInClient.value) != 0) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=serverUsername;    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,"UTF-8");      name+="@" + targetName;    }    byte[] username=name.getBytes("UTF-8");    byte[] password=serverPassword.getBytes("UTF-8");    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  }  if (identityToken != absentIdentityToken || encodedAuthenticationToken != noAuthenticationToken) {    EstablishContext message=new EstablishContext(0,noAuthorizationToken,identityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} catch (java.io.UnsupportedEncodingException e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);}catch (InvalidTypeForEncoding e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);} @TO@ try {  CompoundSecMech secMech=CSIv2Util.getMatchingSecurityMech(ri,codec,(short)(EstablishTrustInClient.value + IdentityAssertion.value),(short)0);  if (secMech == null) {    return;  }  if (JacORBLogger.ROOT_LOGGER.isTraceEnabled()) {    StringBuilder tmp=new StringBuilder();    CSIv2Util.toString(secMech,tmp);    JacORBLogger.ROOT_LOGGER.trace(tmp);  }  IdentityToken identityToken=absentIdentityToken;  byte[] encodedAuthenticationToken=noAuthenticationToken;  if ((secMech.sas_context_mech.target_supports & IdentityAssertion.value) != 0) {    RunAs runAs=SecurityActions.peekRunAsIdentity();    Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal();    if (p != null) {      String name=p.getName();      if (name.indexOf('@') < 0) {        name+="@default";      }      byte[] principalName=name.getBytes(StandardCharsets.UTF_8);      byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);      Any any=ORB.init().create_any();      byte[] encapsulatedEncodedName;      GSS_NT_ExportedNameHelper.insert(any,encodedName);      try {        encapsulatedEncodedName=codec.encode_value(any);      } catch (      InvalidTypeForEncoding e) {        throw JacORBMessages.MESSAGES.unexpectedException(e);      }      identityToken=new IdentityToken();      identityToken.principal_name(encapsulatedEncodedName);    } else     if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {      identityToken=new IdentityToken();      identityToken.anonymous(true);    }  }  if ((secMech.as_context_mech.target_requires & EstablishTrustInClient.value) != 0) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=serverUsername;    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);      name+="@" + targetName;    }    byte[] username=name.getBytes(StandardCharsets.UTF_8);    byte[] password=serverPassword.getBytes(StandardCharsets.UTF_8);    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  }  if (identityToken != absentIdentityToken || encodedAuthenticationToken != noAuthenticationToken) {    EstablishContext message=new EstablishContext(0,noAuthorizationToken,identityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} catch (InvalidTypeForEncoding e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);} @AT@ 4037 @LENGTH@ 5104
---UPD IfStatement@@if ((secMech.sas_context_mech.target_supports & IdentityAssertion.value) != 0) {  RunAs runAs=SecurityActions.peekRunAsIdentity();  Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal();  if (p != null) {    String name=p.getName();    if (name.indexOf('@') < 0) {      name+="@default";    }    byte[] principalName=name.getBytes("UTF-8");    byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);    Any any=ORB.init().create_any();    byte[] encapsulatedEncodedName;    GSS_NT_ExportedNameHelper.insert(any,encodedName);    try {      encapsulatedEncodedName=codec.encode_value(any);    } catch (    InvalidTypeForEncoding e) {      throw JacORBMessages.MESSAGES.unexpectedException(e);    }    identityToken=new IdentityToken();    identityToken.principal_name(encapsulatedEncodedName);  } else   if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {    identityToken=new IdentityToken();    identityToken.anonymous(true);  }} @TO@ if ((secMech.sas_context_mech.target_supports & IdentityAssertion.value) != 0) {  RunAs runAs=SecurityActions.peekRunAsIdentity();  Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal();  if (p != null) {    String name=p.getName();    if (name.indexOf('@') < 0) {      name+="@default";    }    byte[] principalName=name.getBytes(StandardCharsets.UTF_8);    byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);    Any any=ORB.init().create_any();    byte[] encapsulatedEncodedName;    GSS_NT_ExportedNameHelper.insert(any,encodedName);    try {      encapsulatedEncodedName=codec.encode_value(any);    } catch (    InvalidTypeForEncoding e) {      throw JacORBMessages.MESSAGES.unexpectedException(e);    }    identityToken=new IdentityToken();    identityToken.principal_name(encapsulatedEncodedName);  } else   if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {    identityToken=new IdentityToken();    identityToken.anonymous(true);  }} @AT@ 4868 @LENGTH@ 1832
------UPD Block@@ThenBody:{  RunAs runAs=SecurityActions.peekRunAsIdentity();  Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal();  if (p != null) {    String name=p.getName();    if (name.indexOf('@') < 0) {      name+="@default";    }    byte[] principalName=name.getBytes("UTF-8");    byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);    Any any=ORB.init().create_any();    byte[] encapsulatedEncodedName;    GSS_NT_ExportedNameHelper.insert(any,encodedName);    try {      encapsulatedEncodedName=codec.encode_value(any);    } catch (    InvalidTypeForEncoding e) {      throw JacORBMessages.MESSAGES.unexpectedException(e);    }    identityToken=new IdentityToken();    identityToken.principal_name(encapsulatedEncodedName);  } else   if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {    identityToken=new IdentityToken();    identityToken.anonymous(true);  }} @TO@ ThenBody:{  RunAs runAs=SecurityActions.peekRunAsIdentity();  Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal();  if (p != null) {    String name=p.getName();    if (name.indexOf('@') < 0) {      name+="@default";    }    byte[] principalName=name.getBytes(StandardCharsets.UTF_8);    byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);    Any any=ORB.init().create_any();    byte[] encapsulatedEncodedName;    GSS_NT_ExportedNameHelper.insert(any,encodedName);    try {      encapsulatedEncodedName=codec.encode_value(any);    } catch (    InvalidTypeForEncoding e) {      throw JacORBMessages.MESSAGES.unexpectedException(e);    }    identityToken=new IdentityToken();    identityToken.principal_name(encapsulatedEncodedName);  } else   if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {    identityToken=new IdentityToken();    identityToken.anonymous(true);  }} @AT@ 4947 @LENGTH@ 1753
---------UPD IfStatement@@if (p != null) {  String name=p.getName();  if (name.indexOf('@') < 0) {    name+="@default";  }  byte[] principalName=name.getBytes("UTF-8");  byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);  Any any=ORB.init().create_any();  byte[] encapsulatedEncodedName;  GSS_NT_ExportedNameHelper.insert(any,encodedName);  try {    encapsulatedEncodedName=codec.encode_value(any);  } catch (  InvalidTypeForEncoding e) {    throw JacORBMessages.MESSAGES.unexpectedException(e);  }  identityToken=new IdentityToken();  identityToken.principal_name(encapsulatedEncodedName);} else if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {  identityToken=new IdentityToken();  identityToken.anonymous(true);} @TO@ if (p != null) {  String name=p.getName();  if (name.indexOf('@') < 0) {    name+="@default";  }  byte[] principalName=name.getBytes(StandardCharsets.UTF_8);  byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);  Any any=ORB.init().create_any();  byte[] encapsulatedEncodedName;  GSS_NT_ExportedNameHelper.insert(any,encodedName);  try {    encapsulatedEncodedName=codec.encode_value(any);  } catch (  InvalidTypeForEncoding e) {    throw JacORBMessages.MESSAGES.unexpectedException(e);  }  identityToken=new IdentityToken();  identityToken.principal_name(encapsulatedEncodedName);} else if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {  identityToken=new IdentityToken();  identityToken.anonymous(true);} @AT@ 5168 @LENGTH@ 1518
------------UPD Block@@ThenBody:{  String name=p.getName();  if (name.indexOf('@') < 0) {    name+="@default";  }  byte[] principalName=name.getBytes("UTF-8");  byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);  Any any=ORB.init().create_any();  byte[] encapsulatedEncodedName;  GSS_NT_ExportedNameHelper.insert(any,encodedName);  try {    encapsulatedEncodedName=codec.encode_value(any);  } catch (  InvalidTypeForEncoding e) {    throw JacORBMessages.MESSAGES.unexpectedException(e);  }  identityToken=new IdentityToken();  identityToken.principal_name(encapsulatedEncodedName);} @TO@ ThenBody:{  String name=p.getName();  if (name.indexOf('@') < 0) {    name+="@default";  }  byte[] principalName=name.getBytes(StandardCharsets.UTF_8);  byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);  Any any=ORB.init().create_any();  byte[] encapsulatedEncodedName;  GSS_NT_ExportedNameHelper.insert(any,encodedName);  try {    encapsulatedEncodedName=codec.encode_value(any);  } catch (  InvalidTypeForEncoding e) {    throw JacORBMessages.MESSAGES.unexpectedException(e);  }  identityToken=new IdentityToken();  identityToken.principal_name(encapsulatedEncodedName);} @AT@ 5183 @LENGTH@ 1169
---------------UPD VariableDeclarationStatement@@byte[] principalName=name.getBytes("UTF-8"); @TO@ byte[] principalName=name.getBytes(StandardCharsets.UTF_8); @AT@ 5455 @LENGTH@ 46
------------------UPD VariableDeclarationFragment@@principalName=name.getBytes("UTF-8") @TO@ principalName=name.getBytes(StandardCharsets.UTF_8) @AT@ 5462 @LENGTH@ 38
---------------------UPD MethodInvocation@@name.getBytes("UTF-8") @TO@ name.getBytes(StandardCharsets.UTF_8) @AT@ 5478 @LENGTH@ 22
------------------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 5483 @LENGTH@ 17
---------------------------DEL StringLiteral@@"UTF-8" @AT@ 5492 @LENGTH@ 7
---------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 5534 @LENGTH@ 22
------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5534 @LENGTH@ 16
------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5551 @LENGTH@ 5
---UPD IfStatement@@if ((secMech.as_context_mech.target_requires & EstablishTrustInClient.value) != 0) {  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=serverUsername;  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  byte[] password=serverPassword.getBytes("UTF-8");  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);} @TO@ if ((secMech.as_context_mech.target_requires & EstablishTrustInClient.value) != 0) {  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=serverUsername;  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);    name+="@" + targetName;  }  byte[] username=name.getBytes(StandardCharsets.UTF_8);  byte[] password=serverPassword.getBytes(StandardCharsets.UTF_8);  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);} @AT@ 6714 @LENGTH@ 1219
------UPD Block@@ThenBody:{  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=serverUsername;  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  byte[] password=serverPassword.getBytes("UTF-8");  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);} @TO@ ThenBody:{  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=serverUsername;  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);    name+="@" + targetName;  }  byte[] username=name.getBytes(StandardCharsets.UTF_8);  byte[] password=serverPassword.getBytes(StandardCharsets.UTF_8);  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);} @AT@ 6797 @LENGTH@ 1136
---------UPD IfStatement@@if (name.indexOf('@') < 0) {  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,"UTF-8");  name+="@" + targetName;} @TO@ if (name.indexOf('@') < 0) {  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);  name+="@" + targetName;} @AT@ 7049 @LENGTH@ 313
------------UPD Block@@ThenBody:{  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,"UTF-8");  name+="@" + targetName;} @TO@ ThenBody:{  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);  name+="@" + targetName;} @AT@ 7076 @LENGTH@ 286
---------------UPD VariableDeclarationStatement@@String targetName=new String(decodedTargetName,"UTF-8"); @TO@ String targetName=new String(decodedTargetName,StandardCharsets.UTF_8); @AT@ 7225 @LENGTH@ 59
------------------UPD VariableDeclarationFragment@@targetName=new String(decodedTargetName,"UTF-8") @TO@ targetName=new String(decodedTargetName,StandardCharsets.UTF_8) @AT@ 7232 @LENGTH@ 51
---------------------UPD ClassInstanceCreation@@String[decodedTargetName, "UTF-8"] @TO@ String[decodedTargetName, StandardCharsets.UTF_8] @AT@ 7245 @LENGTH@ 38
------------------------DEL StringLiteral@@"UTF-8" @AT@ 7275 @LENGTH@ 7
------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[decodedTargetName, "UTF-8"] @AT@ 7332 @LENGTH@ 22
---------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7332 @LENGTH@ 16
---------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7349 @LENGTH@ 5
---------UPD VariableDeclarationStatement@@byte[] username=name.getBytes("UTF-8"); @TO@ byte[] username=name.getBytes(StandardCharsets.UTF_8); @AT@ 7379 @LENGTH@ 41
------------UPD VariableDeclarationFragment@@username=name.getBytes("UTF-8") @TO@ username=name.getBytes(StandardCharsets.UTF_8) @AT@ 7386 @LENGTH@ 33
---------------UPD MethodInvocation@@name.getBytes("UTF-8") @TO@ name.getBytes(StandardCharsets.UTF_8) @AT@ 7397 @LENGTH@ 22
------------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 7402 @LENGTH@ 17
---------------------DEL StringLiteral@@"UTF-8" @AT@ 7411 @LENGTH@ 7
---------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 7483 @LENGTH@ 22
------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7483 @LENGTH@ 16
------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7500 @LENGTH@ 5
---------UPD VariableDeclarationStatement@@byte[] password=serverPassword.getBytes("UTF-8"); @TO@ byte[] password=serverPassword.getBytes(StandardCharsets.UTF_8); @AT@ 7528 @LENGTH@ 51
------------UPD VariableDeclarationFragment@@password=serverPassword.getBytes("UTF-8") @TO@ password=serverPassword.getBytes(StandardCharsets.UTF_8) @AT@ 7535 @LENGTH@ 43
---------------UPD MethodInvocation@@serverPassword.getBytes("UTF-8") @TO@ serverPassword.getBytes(StandardCharsets.UTF_8) @AT@ 7546 @LENGTH@ 32
------------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 7561 @LENGTH@ 17
---------------------DEL StringLiteral@@"UTF-8" @AT@ 7570 @LENGTH@ 7
---------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 7657 @LENGTH@ 22
------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7657 @LENGTH@ 16
------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7674 @LENGTH@ 5
---DEL CatchClause@@catch (java.io.UnsupportedEncodingException e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);} @AT@ 8906 @LENGTH@ 124
------DEL SingleVariableDeclaration@@java.io.UnsupportedEncodingException e @AT@ 8913 @LENGTH@ 38
---------DEL SimpleType@@java.io.UnsupportedEncodingException @AT@ 8913 @LENGTH@ 36
---------DEL SimpleName@@e @AT@ 8950 @LENGTH@ 1
------DEL ThrowStatement@@MethodInvocation:JacORBMessages.MESSAGES.unexpectedException(e) @AT@ 8967 @LENGTH@ 53
---------DEL MethodInvocation@@JacORBMessages.MESSAGES.unexpectedException(e) @AT@ 8973 @LENGTH@ 46
------------DEL QualifiedName@@Name:JacORBMessages.MESSAGES @AT@ 8973 @LENGTH@ 23
------------DEL SimpleName@@MethodName:unexpectedException:[e] @AT@ 8997 @LENGTH@ 22
---------------DEL SimpleName@@e @AT@ 9017 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]LettuceConnectionIntegrationTests, AbstractConnectionIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration, public]LettuceConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2136 @LENGTH@ 8061
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 2136 @LENGTH@ 39


UPD IfStatement@@if (stripesAtLastFlush != stripes.size()) {  int metaLength=writeMetadata(rawWriter.getPos());  int footLength=writeFooter(rawWriter.getPos() - metaLength);  rawWriter.writeByte(writePostScript(footLength,metaLength));  stripesAtLastFlush=stripes.size();  OrcInputFormat.SHIMS.hflush(rawWriter);} @TO@ if (stripesAtLastFlush != stripes.size()) {  if (callback != null) {    callback.preFooterWrite(callbackContext);  }  int metaLength=writeMetadata(rawWriter.getPos());  int footLength=writeFooter(rawWriter.getPos() - metaLength);  rawWriter.writeByte(writePostScript(footLength,metaLength));  stripesAtLastFlush=stripes.size();  OrcInputFormat.SHIMS.hflush(rawWriter);} @AT@ 73455 @LENGTH@ 333
---UPD Block@@ThenBody:{  int metaLength=writeMetadata(rawWriter.getPos());  int footLength=writeFooter(rawWriter.getPos() - metaLength);  rawWriter.writeByte(writePostScript(footLength,metaLength));  stripesAtLastFlush=stripes.size();  OrcInputFormat.SHIMS.hflush(rawWriter);} @TO@ ThenBody:{  if (callback != null) {    callback.preFooterWrite(callbackContext);  }  int metaLength=writeMetadata(rawWriter.getPos());  int footLength=writeFooter(rawWriter.getPos() - metaLength);  rawWriter.writeByte(writePostScript(footLength,metaLength));  stripesAtLastFlush=stripes.size();  OrcInputFormat.SHIMS.hflush(rawWriter);} @AT@ 73497 @LENGTH@ 291
------INS IfStatement@@if (callback != null) {  callback.preFooterWrite(callbackContext);} @TO@ Block@@ThenBody:{  int metaLength=writeMetadata(rawWriter.getPos());  int footLength=writeFooter(rawWriter.getPos() - metaLength);  rawWriter.writeByte(writePostScript(footLength,metaLength));  stripesAtLastFlush=stripes.size();  OrcInputFormat.SHIMS.hflush(rawWriter);} @AT@ 73505 @LENGTH@ 81
---------INS InfixExpression@@callback != null @TO@ IfStatement@@if (callback != null) {  callback.preFooterWrite(callbackContext);} @AT@ 73509 @LENGTH@ 16
------------INS SimpleName@@callback @TO@ InfixExpression@@callback != null @AT@ 73509 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@callback != null @AT@ 73517 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@callback != null @AT@ 73521 @LENGTH@ 4
---------INS Block@@ThenBody:{  callback.preFooterWrite(callbackContext);} @TO@ IfStatement@@if (callback != null) {  callback.preFooterWrite(callbackContext);} @AT@ 73527 @LENGTH@ 59
------------INS ExpressionStatement@@MethodInvocation:callback.preFooterWrite(callbackContext) @TO@ Block@@ThenBody:{  callback.preFooterWrite(callbackContext);} @AT@ 73537 @LENGTH@ 41
---------------INS MethodInvocation@@callback.preFooterWrite(callbackContext) @TO@ ExpressionStatement@@MethodInvocation:callback.preFooterWrite(callbackContext) @AT@ 73537 @LENGTH@ 40
------------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.preFooterWrite(callbackContext) @AT@ 73537 @LENGTH@ 8
------------------INS SimpleName@@MethodName:preFooterWrite:[callbackContext] @TO@ MethodInvocation@@callback.preFooterWrite(callbackContext) @AT@ 73546 @LENGTH@ 31
---------------------INS SimpleName@@callbackContext @TO@ SimpleName@@MethodName:preFooterWrite:[callbackContext] @AT@ 73561 @LENGTH@ 15


MOV MethodDeclaration@@public, voidMethodName:FileComponent, CamelContext context,  @TO@ TypeDeclaration@@[public]FileComponent, GenericFileComponent<File>[EndpointCompleter] @AT@ 1424 @LENGTH@ 120


UPD MethodDeclaration@@Map<String,String>, MethodName:putIn, final Map<String,String> map,  @TO@ M, M extends Map<String,String>, MethodName:putIn, final M map,  @AT@ 5722 @LENGTH@ 220
---DEL ParameterizedType@@Map<String,String> @AT@ 5702 @LENGTH@ 19
------DEL SimpleType@@Map @AT@ 5702 @LENGTH@ 3
------DEL SimpleType@@String @AT@ 5706 @LENGTH@ 6
------DEL SimpleType@@String @AT@ 5714 @LENGTH@ 6
---UPD SingleVariableDeclaration@@final Map<String,String> map @TO@ final M map @AT@ 5728 @LENGTH@ 29
------DEL ParameterizedType@@Map<String,String> @AT@ 5734 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 5734 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 5738 @LENGTH@ 6
---------DEL SimpleType@@String @AT@ 5746 @LENGTH@ 6
------INS SimpleType@@M @TO@ SingleVariableDeclaration@@final Map<String,String> map @AT@ 5748 @LENGTH@ 1
---INS SimpleType@@M @TO@ MethodDeclaration@@Map<String,String>, MethodName:putIn, final Map<String,String> map,  @AT@ 5734 @LENGTH@ 1


UPD EnhancedForStatement@@for (T record : records) {  GenericRecordBuilder builder=new GenericRecordBuilder(schema);  BeanWrapper beanWrapper=PropertyAccessorFactory.forBeanPropertyAccess(record);  PropertyDescriptor[] props=beanWrapper.getPropertyDescriptors();  for (  Schema.Field f : schema.getFields()) {    if (beanWrapper.isReadableProperty(f.name())) {      Schema fieldSchema=f.schema();      if (f.schema().getType().equals(Schema.Type.UNION)) {        for (        Schema s : f.schema().getTypes()) {          if (!s.getName().equals("null")) {            fieldSchema=s;          }        }      }      if (fieldSchema.getType().equals(Schema.Type.RECORD)) {        Object value=beanWrapper.getPropertyValue(f.name());        throw new StoreException("Unsupported object type: " + value.getClass().getName() + " for field: "+ f.name());      } else {        builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));      }    }  }  writer.write(builder.build());} @TO@ for (T record : records) {  GenericRecordBuilder builder=new GenericRecordBuilder(schema);  BeanWrapper beanWrapper=PropertyAccessorFactory.forBeanPropertyAccess(record);  for (  Schema.Field f : schema.getFields()) {    if (beanWrapper.isReadableProperty(f.name())) {      Schema fieldSchema=f.schema();      if (f.schema().getType().equals(Schema.Type.UNION)) {        for (        Schema s : f.schema().getTypes()) {          if (!s.getName().equals("null")) {            fieldSchema=s;          }        }      }      if (fieldSchema.getType().equals(Schema.Type.RECORD)) {        Object value=beanWrapper.getPropertyValue(f.name());        throw new StoreException("Unsupported object type: " + value.getClass().getName() + " for field: "+ f.name());      } else {        builder.set(f.name(),beanWrapper.getPropertyValue(f.name()));      }    }  }  writer.write(builder.build());} @AT@ 5696 @LENGTH@ 1143
---DEL VariableDeclarationStatement@@PropertyDescriptor[] props=beanWrapper.getPropertyDescriptors(); @AT@ 5881 @LENGTH@ 66
------DEL ArrayType@@PropertyDescriptor[] @AT@ 5881 @LENGTH@ 20
---------DEL SimpleType@@PropertyDescriptor @AT@ 5881 @LENGTH@ 18
------DEL VariableDeclarationFragment@@props=beanWrapper.getPropertyDescriptors() @AT@ 5902 @LENGTH@ 44
---------DEL SimpleName@@props @AT@ 5902 @LENGTH@ 5
---------DEL MethodInvocation@@beanWrapper.getPropertyDescriptors() @AT@ 5910 @LENGTH@ 36
------------DEL SimpleName@@Name:beanWrapper @AT@ 5910 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getPropertyDescriptors:[] @AT@ 5922 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:config.setImage(TEST_IMAGE) @TO@ MethodInvocation:config.setImage(testImage) @AT@ 2867 @LENGTH@ 28
---UPD MethodInvocation@@config.setImage(TEST_IMAGE) @TO@ config.setImage(testImage) @AT@ 2867 @LENGTH@ 27
------UPD SimpleName@@MethodName:setImage:[TEST_IMAGE] @TO@ MethodName:setImage:[testImage] @AT@ 2874 @LENGTH@ 20
---------UPD SimpleName@@TEST_IMAGE @TO@ testImage @AT@ 2883 @LENGTH@ 10


INS ExpressionStatement@@Assignment:uri=StringUtils.hasText(uri) ? uri : "/" @TO@ MethodDeclaration@@protected, HandlerMethod, MethodName:lookupHandlerMethod, String lookupPath, HttpServletRequest origRequest, Exception,  @AT@ 4211 @LENGTH@ 43
---INS Assignment@@uri=StringUtils.hasText(uri) ? uri : "/" @TO@ ExpressionStatement@@Assignment:uri=StringUtils.hasText(uri) ? uri : "/" @AT@ 4211 @LENGTH@ 42
------INS SimpleName@@uri @TO@ Assignment@@uri=StringUtils.hasText(uri) ? uri : "/" @AT@ 4211 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@uri=StringUtils.hasText(uri) ? uri : "/" @AT@ 4214 @LENGTH@ 1
------INS ConditionalExpression@@StringUtils.hasText(uri) ? uri : "/" @TO@ Assignment@@uri=StringUtils.hasText(uri) ? uri : "/" @AT@ 4217 @LENGTH@ 36
---------INS SimpleName@@uri @TO@ ConditionalExpression@@StringUtils.hasText(uri) ? uri : "/" @AT@ 4244 @LENGTH@ 3
---------INS StringLiteral@@"/" @TO@ ConditionalExpression@@StringUtils.hasText(uri) ? uri : "/" @AT@ 4250 @LENGTH@ 3
---------MOV MethodInvocation@@StringUtils.hasText(uri) @TO@ ConditionalExpression@@StringUtils.hasText(uri) ? uri : "/" @AT@ 4337 @LENGTH@ 24


UPD FieldDeclaration@@private, final, InjectedValue<SSOManagerFactory<Account,String>>, [manager=new InjectedValue<>()] @TO@ private, final, InjectedValue<SSOManagerFactory<AuthenticatedSession,String>>, [manager=new InjectedValue<>()] @AT@ 2388 @LENGTH@ 96
---UPD ParameterizedType@@InjectedValue<SSOManagerFactory<Account,String>> @TO@ InjectedValue<SSOManagerFactory<AuthenticatedSession,String>> @AT@ 2402 @LENGTH@ 49
------UPD ParameterizedType@@SSOManagerFactory<Account,String> @TO@ SSOManagerFactory<AuthenticatedSession,String> @AT@ 2416 @LENGTH@ 34
---------UPD SimpleType@@Account @TO@ AuthenticatedSession @AT@ 2434 @LENGTH@ 7


INS MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @TO@ TypeDeclaration@@[public]BaseHierarchicalConfiguration, AbstractHierarchicalConfiguration<ImmutableNode>[Serializable, Cloneable] @AT@ 25059 @LENGTH@ 521
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25059 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25067 @LENGTH@ 6
---INS SimpleType@@ImmutableNode @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25074 @LENGTH@ 13
---INS SimpleName@@MethodName:obtainRootNode @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25088 @LENGTH@ 14
---INS SingleVariableDeclaration@@HierarchicalConfiguration<ImmutableNode> c @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25116 @LENGTH@ 42
------INS ParameterizedType@@HierarchicalConfiguration<ImmutableNode> @TO@ SingleVariableDeclaration@@HierarchicalConfiguration<ImmutableNode> c @AT@ 25116 @LENGTH@ 40
---------INS SimpleType@@HierarchicalConfiguration @TO@ ParameterizedType@@HierarchicalConfiguration<ImmutableNode> @AT@ 25116 @LENGTH@ 25
---------INS SimpleType@@ImmutableNode @TO@ ParameterizedType@@HierarchicalConfiguration<ImmutableNode> @AT@ 25142 @LENGTH@ 13
------INS SimpleName@@c @TO@ SingleVariableDeclaration@@HierarchicalConfiguration<ImmutableNode> c @AT@ 25157 @LENGTH@ 1
---INS VariableDeclarationStatement@@boolean needSynchronization=c instanceof AbstractConfiguration; @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25174 @LENGTH@ 65
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean needSynchronization=c instanceof AbstractConfiguration; @AT@ 25174 @LENGTH@ 7
------INS VariableDeclarationFragment@@needSynchronization=c instanceof AbstractConfiguration @TO@ VariableDeclarationStatement@@boolean needSynchronization=c instanceof AbstractConfiguration; @AT@ 25182 @LENGTH@ 56
---------INS SimpleName@@needSynchronization @TO@ VariableDeclarationFragment@@needSynchronization=c instanceof AbstractConfiguration @AT@ 25182 @LENGTH@ 19
---------INS InstanceofExpression@@c instanceof AbstractConfiguration @TO@ VariableDeclarationFragment@@needSynchronization=c instanceof AbstractConfiguration @AT@ 25204 @LENGTH@ 34
------------INS SimpleName@@c @TO@ InstanceofExpression@@c instanceof AbstractConfiguration @AT@ 25204 @LENGTH@ 1
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@c instanceof AbstractConfiguration @AT@ 25206 @LENGTH@ 10
------------INS SimpleType@@AbstractConfiguration @TO@ InstanceofExpression@@c instanceof AbstractConfiguration @AT@ 25217 @LENGTH@ 21
---INS IfStatement@@if (needSynchronization) {  ((AbstractConfiguration)c).beginRead(false);} @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25248 @LENGTH@ 102
------INS SimpleName@@needSynchronization @TO@ IfStatement@@if (needSynchronization) {  ((AbstractConfiguration)c).beginRead(false);} @AT@ 25252 @LENGTH@ 19
------INS Block@@ThenBody:{  ((AbstractConfiguration)c).beginRead(false);} @TO@ IfStatement@@if (needSynchronization) {  ((AbstractConfiguration)c).beginRead(false);} @AT@ 25281 @LENGTH@ 69
---------INS ExpressionStatement@@MethodInvocation:((AbstractConfiguration)c).beginRead(false) @TO@ Block@@ThenBody:{  ((AbstractConfiguration)c).beginRead(false);} @AT@ 25295 @LENGTH@ 45
------------INS MethodInvocation@@((AbstractConfiguration)c).beginRead(false) @TO@ ExpressionStatement@@MethodInvocation:((AbstractConfiguration)c).beginRead(false) @AT@ 25295 @LENGTH@ 44
---------------INS ParenthesizedExpression@@((AbstractConfiguration)c) @TO@ MethodInvocation@@((AbstractConfiguration)c).beginRead(false) @AT@ 25295 @LENGTH@ 27
------------------INS CastExpression@@(AbstractConfiguration)c @TO@ ParenthesizedExpression@@((AbstractConfiguration)c) @AT@ 25296 @LENGTH@ 25
---------------------INS SimpleType@@AbstractConfiguration @TO@ CastExpression@@(AbstractConfiguration)c @AT@ 25297 @LENGTH@ 21
---------------------INS SimpleName@@c @TO@ CastExpression@@(AbstractConfiguration)c @AT@ 25320 @LENGTH@ 1
---------------INS SimpleName@@MethodName:beginRead:[false] @TO@ MethodInvocation@@((AbstractConfiguration)c).beginRead(false) @AT@ 25323 @LENGTH@ 16
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:beginRead:[false] @AT@ 25333 @LENGTH@ 5
---INS TryStatement@@try {  return c.getRootNode();}  finally {  if (needSynchronization) {    ((AbstractConfiguration)c).endRead();  }} @TO@ MethodDeclaration@@private, static, ImmutableNode, MethodName:obtainRootNode, HierarchicalConfiguration<ImmutableNode> c,  @AT@ 25359 @LENGTH@ 215
------INS ReturnStatement@@MethodInvocation:c.getRootNode() @TO@ TryStatement@@try {  return c.getRootNode();}  finally {  if (needSynchronization) {    ((AbstractConfiguration)c).endRead();  }} @AT@ 25385 @LENGTH@ 23
---------INS MethodInvocation@@c.getRootNode() @TO@ ReturnStatement@@MethodInvocation:c.getRootNode() @AT@ 25392 @LENGTH@ 15
------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.getRootNode() @AT@ 25392 @LENGTH@ 1
------------INS SimpleName@@MethodName:getRootNode:[] @TO@ MethodInvocation@@c.getRootNode() @AT@ 25394 @LENGTH@ 13
------INS Block@@FinallyBody:{  if (needSynchronization) {    ((AbstractConfiguration)c).endRead();  }} @TO@ TryStatement@@try {  return c.getRootNode();}  finally {  if (needSynchronization) {    ((AbstractConfiguration)c).endRead();  }} @AT@ 25443 @LENGTH@ 131
---------INS IfStatement@@if (needSynchronization) {  ((AbstractConfiguration)c).endRead();} @TO@ Block@@FinallyBody:{  if (needSynchronization) {    ((AbstractConfiguration)c).endRead();  }} @AT@ 25457 @LENGTH@ 107
------------INS SimpleName@@needSynchronization @TO@ IfStatement@@if (needSynchronization) {  ((AbstractConfiguration)c).endRead();} @AT@ 25461 @LENGTH@ 19
------------INS Block@@ThenBody:{  ((AbstractConfiguration)c).endRead();} @TO@ IfStatement@@if (needSynchronization) {  ((AbstractConfiguration)c).endRead();} @AT@ 25494 @LENGTH@ 70
---------------INS ExpressionStatement@@MethodInvocation:((AbstractConfiguration)c).endRead() @TO@ Block@@ThenBody:{  ((AbstractConfiguration)c).endRead();} @AT@ 25512 @LENGTH@ 38
------------------INS MethodInvocation@@((AbstractConfiguration)c).endRead() @TO@ ExpressionStatement@@MethodInvocation:((AbstractConfiguration)c).endRead() @AT@ 25512 @LENGTH@ 37
---------------------INS ParenthesizedExpression@@((AbstractConfiguration)c) @TO@ MethodInvocation@@((AbstractConfiguration)c).endRead() @AT@ 25512 @LENGTH@ 27
------------------------INS CastExpression@@(AbstractConfiguration)c @TO@ ParenthesizedExpression@@((AbstractConfiguration)c) @AT@ 25513 @LENGTH@ 25
---------------------------INS SimpleType@@AbstractConfiguration @TO@ CastExpression@@(AbstractConfiguration)c @AT@ 25514 @LENGTH@ 21
---------------------------INS SimpleName@@c @TO@ CastExpression@@(AbstractConfiguration)c @AT@ 25537 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:endRead:[] @TO@ MethodInvocation@@((AbstractConfiguration)c).endRead() @AT@ 25540 @LENGTH@ 9


UPD MethodDeclaration@@protected, void, MethodName:addPropertyDirect, String key, Object obj,  @TO@ protected, void, MethodName:addPropertyInternal, String key, Object obj,  @AT@ 13181 @LENGTH@ 149
---UPD SimpleName@@MethodName:addPropertyDirect @TO@ MethodName:addPropertyInternal @AT@ 13196 @LENGTH@ 17


INS ReturnStatement@@MethodInvocation:currentServiceContainer() @TO@ MethodDeclaration@@public, ServiceRegistry, MethodName:getServiceRegistry,  @AT@ 5227 @LENGTH@ 33
---INS MethodInvocation@@MethodName:currentServiceContainer:[] @TO@ ReturnStatement@@MethodInvocation:currentServiceContainer() @AT@ 5234 @LENGTH@ 25


UPD MethodDeclaration@@PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, Exception,  @TO@ PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, List<String> useridParts, Exception,  @AT@ 1784 @LENGTH@ 61
---INS SingleVariableDeclaration@@List<String> useridParts @TO@ MethodDeclaration@@PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, Exception,  @AT@ 2279 @LENGTH@ 24
------INS ParameterizedType@@List<String> @TO@ SingleVariableDeclaration@@List<String> useridParts @AT@ 2279 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2279 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2284 @LENGTH@ 6
------INS SimpleName@@useridParts @TO@ SingleVariableDeclaration@@List<String> useridParts @AT@ 2292 @LENGTH@ 11


UPD VariableDeclarationStatement@@String expectedDir=warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/"); @TO@ String expectedDir=org.apache.hive.hcatalog.api.TestHCatClient.fixPath(warehouseDir).replaceFirst("pfile:///","pfile:/"); @AT@ 5037 @LENGTH@ 95
---UPD VariableDeclarationFragment@@expectedDir=warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/") @TO@ expectedDir=org.apache.hive.hcatalog.api.TestHCatClient.fixPath(warehouseDir).replaceFirst("pfile:///","pfile:/") @AT@ 5044 @LENGTH@ 87
------UPD MethodInvocation@@warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/") @TO@ org.apache.hive.hcatalog.api.TestHCatClient.fixPath(warehouseDir).replaceFirst("pfile:///","pfile:/") @AT@ 5058 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:fixPath:[warehouseDir] @TO@ MethodInvocation@@warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/") @AT@ 5058 @LENGTH@ 65
------------MOV SimpleName@@Name:warehouseDir @TO@ MethodInvocation@@MethodName:fixPath:[warehouseDir] @AT@ 5058 @LENGTH@ 12
---------INS QualifiedName@@Name:org.apache.hive.hcatalog.api.TestHCatClient @TO@ MethodInvocation@@warehouseDir.replaceAll("\\\\","/").replaceFirst("pfile:///","pfile:/") @AT@ 5058 @LENGTH@ 43
---------DEL MethodInvocation@@MethodName:replaceAll:["\\\\", "/"] @AT@ 5058 @LENGTH@ 36
------------DEL StringLiteral@@"\\\\" @AT@ 5082 @LENGTH@ 6
------------DEL StringLiteral@@"/" @AT@ 5090 @LENGTH@ 3
---------UPD SimpleName@@Name:warehouseDir @TO@ warehouseDir @AT@ 5058 @LENGTH@ 12


INS TryStatement@@try {  if (it instanceof Scanner) {    Scanner scanner=(Scanner)it;    scanner.close();    IOException ioException=scanner.ioException();    if (ioException != null) {      throw ioException;    }  } else   if (it instanceof Closeable) {    IOHelper.closeWithException((Closeable)it);  }}  finally {  bos.close();  closed=true;} @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 2665 @LENGTH@ 653
---INS IfStatement@@if (it instanceof Scanner) {  Scanner scanner=(Scanner)it;  scanner.close();  IOException ioException=scanner.ioException();  if (ioException != null) {    throw ioException;  }} else if (it instanceof Closeable) {  IOHelper.closeWithException((Closeable)it);} @TO@ TryStatement@@try {  if (it instanceof Scanner) {    Scanner scanner=(Scanner)it;    scanner.close();    IOException ioException=scanner.ioException();    if (ioException != null) {      throw ioException;    }  } else   if (it instanceof Closeable) {    IOHelper.closeWithException((Closeable)it);  }}  finally {  bos.close();  closed=true;} @AT@ 2683 @LENGTH@ 480
------MOV InstanceofExpression@@it instanceof Closeable @TO@ IfStatement@@if (it instanceof Scanner) {  Scanner scanner=(Scanner)it;  scanner.close();  IOException ioException=scanner.ioException();  if (ioException != null) {    throw ioException;  }} else if (it instanceof Closeable) {  IOHelper.closeWithException((Closeable)it);} @AT@ 2669 @LENGTH@ 23
---------UPD SimpleType@@Closeable @TO@ Scanner @AT@ 2683 @LENGTH@ 9
------MOV Block@@ThenBody:{  IOHelper.close((Closeable)it);} @TO@ IfStatement@@if (it instanceof Scanner) {  Scanner scanner=(Scanner)it;  scanner.close();  IOException ioException=scanner.ioException();  if (ioException != null) {    throw ioException;  }} else if (it instanceof Closeable) {  IOHelper.closeWithException((Closeable)it);} @AT@ 2694 @LENGTH@ 55
---------INS VariableDeclarationStatement@@Scanner scanner=(Scanner)it; @TO@ Block@@ThenBody:{  IOHelper.close((Closeable)it);} @AT@ 2809 @LENGTH@ 31
------------INS SimpleType@@Scanner @TO@ VariableDeclarationStatement@@Scanner scanner=(Scanner)it; @AT@ 2809 @LENGTH@ 7
------------INS VariableDeclarationFragment@@scanner=(Scanner)it @TO@ VariableDeclarationStatement@@Scanner scanner=(Scanner)it; @AT@ 2817 @LENGTH@ 22
---------------INS SimpleName@@scanner @TO@ VariableDeclarationFragment@@scanner=(Scanner)it @AT@ 2817 @LENGTH@ 7
---------------INS CastExpression@@(Scanner)it @TO@ VariableDeclarationFragment@@scanner=(Scanner)it @AT@ 2827 @LENGTH@ 12
------------------INS SimpleType@@Scanner @TO@ CastExpression@@(Scanner)it @AT@ 2828 @LENGTH@ 7
------------------INS SimpleName@@it @TO@ CastExpression@@(Scanner)it @AT@ 2837 @LENGTH@ 2
---------INS VariableDeclarationStatement@@IOException ioException=scanner.ioException(); @TO@ Block@@ThenBody:{  IOHelper.close((Closeable)it);} @AT@ 2890 @LENGTH@ 48
------------INS SimpleType@@IOException @TO@ VariableDeclarationStatement@@IOException ioException=scanner.ioException(); @AT@ 2890 @LENGTH@ 11
------------INS VariableDeclarationFragment@@ioException=scanner.ioException() @TO@ VariableDeclarationStatement@@IOException ioException=scanner.ioException(); @AT@ 2902 @LENGTH@ 35
---------------INS SimpleName@@ioException @TO@ VariableDeclarationFragment@@ioException=scanner.ioException() @AT@ 2902 @LENGTH@ 11
---------------INS MethodInvocation@@scanner.ioException() @TO@ VariableDeclarationFragment@@ioException=scanner.ioException() @AT@ 2916 @LENGTH@ 21
------------------INS SimpleName@@Name:scanner @TO@ MethodInvocation@@scanner.ioException() @AT@ 2916 @LENGTH@ 7
------------------INS SimpleName@@MethodName:ioException:[] @TO@ MethodInvocation@@scanner.ioException() @AT@ 2924 @LENGTH@ 13
---------INS IfStatement@@if (ioException != null) {  throw ioException;} @TO@ Block@@ThenBody:{  IOHelper.close((Closeable)it);} @AT@ 2955 @LENGTH@ 83
------------INS InfixExpression@@ioException != null @TO@ IfStatement@@if (ioException != null) {  throw ioException;} @AT@ 2959 @LENGTH@ 19
---------------INS SimpleName@@ioException @TO@ InfixExpression@@ioException != null @AT@ 2959 @LENGTH@ 11
---------------INS Operator@@!= @TO@ InfixExpression@@ioException != null @AT@ 2970 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@ioException != null @AT@ 2974 @LENGTH@ 4
------------INS Block@@ThenBody:{  throw ioException;} @TO@ IfStatement@@if (ioException != null) {  throw ioException;} @AT@ 2980 @LENGTH@ 58
---------------INS ThrowStatement@@SimpleName:ioException @TO@ Block@@ThenBody:{  throw ioException;} @AT@ 3002 @LENGTH@ 18
------------------INS SimpleName@@ioException @TO@ ThrowStatement@@SimpleName:ioException @AT@ 3008 @LENGTH@ 11
------MOV Block@@ElseBody:if (it instanceof Scanner) {  ((Scanner)it).close();} @TO@ IfStatement@@if (it instanceof Scanner) {  Scanner scanner=(Scanner)it;  scanner.close();  IOException ioException=scanner.ioException();  if (ioException != null) {    throw ioException;  }} else if (it instanceof Closeable) {  IOHelper.closeWithException((Closeable)it);} @AT@ 2755 @LENGTH@ 144
---INS Block@@FinallyBody:{  bos.close();  closed=true;} @TO@ TryStatement@@try {  if (it instanceof Scanner) {    Scanner scanner=(Scanner)it;    scanner.close();    IOException ioException=scanner.ioException();    if (ioException != null) {      throw ioException;    }  } else   if (it instanceof Closeable) {    IOHelper.closeWithException((Closeable)it);  }}  finally {  bos.close();  closed=true;} @AT@ 3182 @LENGTH@ 136
------MOV ExpressionStatement@@MethodInvocation:bos.close() @TO@ Block@@FinallyBody:{  bos.close();  closed=true;} @AT@ 2944 @LENGTH@ 12
------MOV ExpressionStatement@@Assignment:closed=true @TO@ Block@@FinallyBody:{  bos.close();  closed=true;} @AT@ 2994 @LENGTH@ 14


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Status,  @TO@ [@Data, public]Status, AbstractDockerDTO @AT@ 811 @LENGTH@ 108
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Status,  @AT@ 765 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 817 @LENGTH@ 47


INS ExpressionStatement@@MethodInvocation:buf.flip() @TO@ MethodDeclaration@@public, static, ByteBuffer, MethodName:toByteBuffer, String value, Exchange exchange,  @AT@ 3452 @LENGTH@ 11
---INS MethodInvocation@@buf.flip() @TO@ ExpressionStatement@@MethodInvocation:buf.flip() @AT@ 3452 @LENGTH@ 10
------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.flip() @AT@ 3452 @LENGTH@ 3
------INS SimpleName@@MethodName:flip:[] @TO@ MethodInvocation@@buf.flip() @AT@ 3456 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 34262 @LENGTH@ 407
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34269 @LENGTH@ 4
---INS SimpleName@@MethodName:findByElementCollectionAttribute @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34274 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:firstUser.getAttributes().add("cool") @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34316 @LENGTH@ 38
------INS MethodInvocation@@firstUser.getAttributes().add("cool") @TO@ ExpressionStatement@@MethodInvocation:firstUser.getAttributes().add("cool") @AT@ 34316 @LENGTH@ 37
---------INS MethodInvocation@@MethodName:getAttributes:[] @TO@ MethodInvocation@@firstUser.getAttributes().add("cool") @AT@ 34316 @LENGTH@ 25
---------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.getAttributes().add("cool") @AT@ 34316 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:["cool"] @TO@ MethodInvocation@@firstUser.getAttributes().add("cool") @AT@ 34342 @LENGTH@ 11
------------INS StringLiteral@@"cool" @TO@ SimpleName@@MethodName:add:["cool"] @AT@ 34346 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:secondUser.getAttributes().add("hip") @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34358 @LENGTH@ 38
------INS MethodInvocation@@secondUser.getAttributes().add("hip") @TO@ ExpressionStatement@@MethodInvocation:secondUser.getAttributes().add("hip") @AT@ 34358 @LENGTH@ 37
---------INS MethodInvocation@@MethodName:getAttributes:[] @TO@ MethodInvocation@@secondUser.getAttributes().add("hip") @AT@ 34358 @LENGTH@ 26
---------INS SimpleName@@Name:secondUser @TO@ MethodInvocation@@secondUser.getAttributes().add("hip") @AT@ 34358 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:["hip"] @TO@ MethodInvocation@@secondUser.getAttributes().add("hip") @AT@ 34385 @LENGTH@ 10
------------INS StringLiteral@@"hip" @TO@ SimpleName@@MethodName:add:["hip"] @AT@ 34389 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:thirdUser.getAttributes().add("rockstar") @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34400 @LENGTH@ 42
------INS MethodInvocation@@thirdUser.getAttributes().add("rockstar") @TO@ ExpressionStatement@@MethodInvocation:thirdUser.getAttributes().add("rockstar") @AT@ 34400 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:getAttributes:[] @TO@ MethodInvocation@@thirdUser.getAttributes().add("rockstar") @AT@ 34400 @LENGTH@ 25
---------INS SimpleName@@Name:thirdUser @TO@ MethodInvocation@@thirdUser.getAttributes().add("rockstar") @AT@ 34400 @LENGTH@ 9
---------INS SimpleName@@MethodName:add:["rockstar"] @TO@ MethodInvocation@@thirdUser.getAttributes().add("rockstar") @AT@ 34426 @LENGTH@ 15
------------INS StringLiteral@@"rockstar" @TO@ SimpleName@@MethodName:add:["rockstar"] @AT@ 34430 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34448 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 34448 @LENGTH@ 16
---INS VariableDeclarationStatement@@List<User> result=repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))); @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34471 @LENGTH@ 101
------INS ParameterizedType@@List<User> @TO@ VariableDeclarationStatement@@List<User> result=repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))); @AT@ 34471 @LENGTH@ 10
---------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 34471 @LENGTH@ 4
---------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 34476 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))) @TO@ VariableDeclarationStatement@@List<User> result=repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))); @AT@ 34482 @LENGTH@ 89
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))) @AT@ 34482 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))) @TO@ VariableDeclarationFragment@@result=repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))) @AT@ 34491 @LENGTH@ 80
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))) @AT@ 34491 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByAttributesIn:[new HashSet<String>(Arrays.asList("cool","hip"))] @TO@ MethodInvocation@@repository.findByAttributesIn(new HashSet<String>(Arrays.asList("cool","hip"))) @AT@ 34502 @LENGTH@ 69
---------------INS ClassInstanceCreation@@HashSet<String>[Arrays.asList("cool","hip")] @TO@ SimpleName@@MethodName:findByAttributesIn:[new HashSet<String>(Arrays.asList("cool","hip"))] @AT@ 34521 @LENGTH@ 49
------------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("cool","hip")] @AT@ 34521 @LENGTH@ 3
------------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("cool","hip")] @AT@ 34525 @LENGTH@ 15
---------------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 34525 @LENGTH@ 7
---------------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 34533 @LENGTH@ 6
------------------INS MethodInvocation@@Arrays.asList("cool","hip") @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("cool","hip")] @AT@ 34541 @LENGTH@ 28
---------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("cool","hip") @AT@ 34541 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:asList:["cool", "hip"] @TO@ MethodInvocation@@Arrays.asList("cool","hip") @AT@ 34548 @LENGTH@ 21
------------------------INS StringLiteral@@"cool" @TO@ SimpleName@@MethodName:asList:["cool", "hip"] @AT@ 34555 @LENGTH@ 6
------------------------INS StringLiteral@@"hip" @TO@ SimpleName@@MethodName:asList:["cool", "hip"] @AT@ 34563 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34578 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result,hasSize(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @AT@ 34578 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertThat:[result, hasSize(2)] @TO@ MethodInvocation@@assertThat(result,hasSize(2)) @AT@ 34578 @LENGTH@ 30
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 34589 @LENGTH@ 6
------------INS MethodInvocation@@hasSize(2) @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 34597 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 34597 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 34605 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 34597 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 34605 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 34613 @LENGTH@ 52
------INS MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @AT@ 34613 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @TO@ MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @AT@ 34613 @LENGTH@ 51
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 34624 @LENGTH@ 6
------------INS MethodInvocation@@hasItems(firstUser,secondUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 34632 @LENGTH@ 31
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 34632 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 34641 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 34652 @LENGTH@ 10


INS IfStatement@@if (!DataFormat.CXF_MESSAGE.equals(dataFormat)) {  for (  Map.Entry<String,DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) {    if (attachments == null) {      attachments=new HashSet<Attachment>();    }    AttachmentImpl attachment=new AttachmentImpl(entry.getKey(),entry.getValue());    attachment.setXOP(isXop);    attachments.add(attachment);  }} @TO@ MethodDeclaration@@public, void, MethodName:populateCxfRequestFromExchange, org.apache.cxf.message.Exchange cxfExchange, Exchange camelExchange, Map<String,Object> requestContext,  @AT@ 5458 @LENGTH@ 489
---INS PrefixExpression@@!DataFormat.CXF_MESSAGE.equals(dataFormat) @TO@ IfStatement@@if (!DataFormat.CXF_MESSAGE.equals(dataFormat)) {  for (  Map.Entry<String,DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) {    if (attachments == null) {      attachments=new HashSet<Attachment>();    }    AttachmentImpl attachment=new AttachmentImpl(entry.getKey(),entry.getValue());    attachment.setXOP(isXop);    attachments.add(attachment);  }} @AT@ 5462 @LENGTH@ 42
------INS Operator@@! @TO@ PrefixExpression@@!DataFormat.CXF_MESSAGE.equals(dataFormat) @AT@ 5462 @LENGTH@ 1
------INS MethodInvocation@@DataFormat.CXF_MESSAGE.equals(dataFormat) @TO@ PrefixExpression@@!DataFormat.CXF_MESSAGE.equals(dataFormat) @AT@ 5463 @LENGTH@ 41
---------INS QualifiedName@@Name:DataFormat.CXF_MESSAGE @TO@ MethodInvocation@@DataFormat.CXF_MESSAGE.equals(dataFormat) @AT@ 5463 @LENGTH@ 22
---------INS SimpleName@@MethodName:equals:[dataFormat] @TO@ MethodInvocation@@DataFormat.CXF_MESSAGE.equals(dataFormat) @AT@ 5486 @LENGTH@ 18
------------INS SimpleName@@dataFormat @TO@ SimpleName@@MethodName:equals:[dataFormat] @AT@ 5493 @LENGTH@ 10
---INS Block@@ThenBody:{  for (  Map.Entry<String,DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) {    if (attachments == null) {      attachments=new HashSet<Attachment>();    }    AttachmentImpl attachment=new AttachmentImpl(entry.getKey(),entry.getValue());    attachment.setXOP(isXop);    attachments.add(attachment);  }} @TO@ IfStatement@@if (!DataFormat.CXF_MESSAGE.equals(dataFormat)) {  for (  Map.Entry<String,DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) {    if (attachments == null) {      attachments=new HashSet<Attachment>();    }    AttachmentImpl attachment=new AttachmentImpl(entry.getKey(),entry.getValue());    attachment.setXOP(isXop);    attachments.add(attachment);  }} @AT@ 5506 @LENGTH@ 441
------MOV EnhancedForStatement@@for (Map.Entry<String,DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) {  if (attachments == null) {    attachments=new HashSet<Attachment>();  }  AttachmentImpl attachment=new AttachmentImpl(entry.getKey(),entry.getValue());  attachment.setXOP(isXop);  attachments.add(attachment);} @TO@ Block@@ThenBody:{  for (  Map.Entry<String,DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) {    if (attachments == null) {      attachments=new HashSet<Attachment>();    }    AttachmentImpl attachment=new AttachmentImpl(entry.getKey(),entry.getValue());    attachment.setXOP(isXop);    attachments.add(attachment);  }} @AT@ 5129 @LENGTH@ 389


UPD ExpressionStatement@@MethodInvocation:AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addAliases(RouteLocatorService.getCacheServiceName(deploymentServiceName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addAliases(RouteLocatorService.getCacheServiceName(deploymentServiceName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).addDependency(GlobalComponentRegistryService.getServiceName(containerName)).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 4314 @LENGTH@ 455
---UPD MethodInvocation@@AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addAliases(RouteLocatorService.getCacheServiceName(deploymentServiceName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addAliases(RouteLocatorService.getCacheServiceName(deploymentServiceName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).addDependency(GlobalComponentRegistryService.getServiceName(containerName)).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 4314 @LENGTH@ 445
------INS MethodInvocation@@MethodName:addDependency:[GlobalComponentRegistryService.getServiceName(containerName)] @TO@ MethodInvocation@@AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addAliases(RouteLocatorService.getCacheServiceName(deploymentServiceName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 4398 @LENGTH@ 445
---------INS MethodInvocation@@GlobalComponentRegistryService.getServiceName(containerName) @TO@ MethodInvocation@@MethodName:addDependency:[GlobalComponentRegistryService.getServiceName(containerName)] @AT@ 4782 @LENGTH@ 60
------------INS SimpleName@@Name:GlobalComponentRegistryService @TO@ MethodInvocation@@GlobalComponentRegistryService.getServiceName(containerName) @AT@ 4782 @LENGTH@ 30
------------INS SimpleName@@MethodName:getServiceName:[containerName] @TO@ MethodInvocation@@GlobalComponentRegistryService.getServiceName(containerName) @AT@ 4813 @LENGTH@ 29
---------------INS SimpleName@@containerName @TO@ SimpleName@@MethodName:getServiceName:[containerName] @AT@ 4828 @LENGTH@ 13


UPD FieldDeclaration@@private, URI, [baseUri=null] @TO@ private, URI, [baseUri=URI.create("")] @AT@ 1041 @LENGTH@ 27
---UPD VariableDeclarationFragment@@baseUri=null @TO@ baseUri=URI.create("") @AT@ 1053 @LENGTH@ 14
------INS MethodInvocation@@URI.create("") @TO@ VariableDeclarationFragment@@baseUri=null @AT@ 1063 @LENGTH@ 14
---------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create("") @AT@ 1063 @LENGTH@ 3
---------INS SimpleName@@MethodName:create:[""] @TO@ MethodInvocation@@URI.create("") @AT@ 1067 @LENGTH@ 10
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:create:[""] @AT@ 1074 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1063 @LENGTH@ 4


UPD VariableDeclarationStatement@@SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()); @TO@ SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)); @AT@ 6587 @LENGTH@ 143
---UPD VariableDeclarationFragment@@transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 6619 @LENGTH@ 110
------UPD MethodInvocation@@SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 6631 @LENGTH@ 98
---------UPD SimpleName@@MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase()] @TO@ MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)] @AT@ 6663 @LENGTH@ 66
------------UPD MethodInvocation@@protocolAddress.getLastElement().getValue().toUpperCase() @TO@ protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH) @AT@ 6671 @LENGTH@ 57
---------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 6715 @LENGTH@ 13
------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 6766 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 6766 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 6773 @LENGTH@ 7


INS MethodDeclaration@@public, voidMethodName:IdClassExampleEmployeePK, long empId, long department,  @TO@ TypeDeclaration@@[public]IdClassExampleEmployeePK, [Serializable] @AT@ 942 @LENGTH@ 119
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:IdClassExampleEmployeePK, long empId, long department,  @AT@ 942 @LENGTH@ 6
---INS SimpleName@@MethodName:IdClassExampleEmployeePK @TO@ MethodDeclaration@@public, voidMethodName:IdClassExampleEmployeePK, long empId, long department,  @AT@ 949 @LENGTH@ 24
---INS SingleVariableDeclaration@@long empId @TO@ MethodDeclaration@@public, voidMethodName:IdClassExampleEmployeePK, long empId, long department,  @AT@ 974 @LENGTH@ 10
------INS PrimitiveType@@long @TO@ SingleVariableDeclaration@@long empId @AT@ 974 @LENGTH@ 4
------INS SimpleName@@empId @TO@ SingleVariableDeclaration@@long empId @AT@ 979 @LENGTH@ 5
---INS SingleVariableDeclaration@@long department @TO@ MethodDeclaration@@public, voidMethodName:IdClassExampleEmployeePK, long empId, long department,  @AT@ 986 @LENGTH@ 15
------INS PrimitiveType@@long @TO@ SingleVariableDeclaration@@long department @AT@ 986 @LENGTH@ 4
------INS SimpleName@@department @TO@ SingleVariableDeclaration@@long department @AT@ 991 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:this.empId=empId @TO@ MethodDeclaration@@public, voidMethodName:IdClassExampleEmployeePK, long empId, long department,  @AT@ 1007 @LENGTH@ 19
------INS Assignment@@this.empId=empId @TO@ ExpressionStatement@@Assignment:this.empId=empId @AT@ 1007 @LENGTH@ 18
---------INS FieldAccess@@this.empId @TO@ Assignment@@this.empId=empId @AT@ 1007 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.empId @AT@ 1007 @LENGTH@ 4
------------INS SimpleName@@empId @TO@ FieldAccess@@this.empId @AT@ 1012 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@this.empId=empId @AT@ 1017 @LENGTH@ 1
---------INS SimpleName@@empId @TO@ Assignment@@this.empId=empId @AT@ 1020 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:this.department=department @TO@ MethodDeclaration@@public, voidMethodName:IdClassExampleEmployeePK, long empId, long department,  @AT@ 1029 @LENGTH@ 29
------INS Assignment@@this.department=department @TO@ ExpressionStatement@@Assignment:this.department=department @AT@ 1029 @LENGTH@ 28
---------INS FieldAccess@@this.department @TO@ Assignment@@this.department=department @AT@ 1029 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.department @AT@ 1029 @LENGTH@ 4
------------INS SimpleName@@department @TO@ FieldAccess@@this.department @AT@ 1034 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.department=department @AT@ 1044 @LENGTH@ 1
---------INS SimpleName@@department @TO@ Assignment@@this.department=department @AT@ 1047 @LENGTH@ 10


INS IfStatement@@if (roleGroup == null) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:isCallerInRole, final Object incommingMappedRoles, final Map<String,Collection<String>> roleLinks, final String... roleNames,  @AT@ 9319 @LENGTH@ 60
---INS InfixExpression@@roleGroup == null @TO@ IfStatement@@if (roleGroup == null) {  return false;} @AT@ 9323 @LENGTH@ 17
------INS SimpleName@@roleGroup @TO@ InfixExpression@@roleGroup == null @AT@ 9323 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@roleGroup == null @AT@ 9332 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@roleGroup == null @AT@ 9336 @LENGTH@ 4
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (roleGroup == null) {  return false;} @AT@ 9342 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 9356 @LENGTH@ 13
---------MOV BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 11127 @LENGTH@ 5


INS TryStatement@@try {  return webSecurity.build();} catch (AlreadyBuiltException e) {  return webSecurity.getObject();} @TO@ MethodDeclaration@@public, Filter, MethodName:springSecurityFilterChain, Exception,  @AT@ 4071 @LENGTH@ 143
---INS ReturnStatement@@MethodInvocation:webSecurity.build() @TO@ TryStatement@@try {  return webSecurity.build();} catch (AlreadyBuiltException e) {  return webSecurity.getObject();} @AT@ 4089 @LENGTH@ 27
------MOV MethodInvocation@@webSecurity.getOrBuild() @TO@ ReturnStatement@@MethodInvocation:webSecurity.build() @AT@ 4001 @LENGTH@ 24
---------UPD SimpleName@@MethodName:getOrBuild:[] @TO@ MethodName:build:[] @AT@ 4013 @LENGTH@ 12
---INS CatchClause@@catch (AlreadyBuiltException e) {  return webSecurity.getObject();} @TO@ TryStatement@@try {  return webSecurity.build();} catch (AlreadyBuiltException e) {  return webSecurity.getObject();} @AT@ 4127 @LENGTH@ 87
------INS SingleVariableDeclaration@@AlreadyBuiltException e @TO@ CatchClause@@catch (AlreadyBuiltException e) {  return webSecurity.getObject();} @AT@ 4134 @LENGTH@ 23
---------INS SimpleType@@AlreadyBuiltException @TO@ SingleVariableDeclaration@@AlreadyBuiltException e @AT@ 4134 @LENGTH@ 21
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@AlreadyBuiltException e @AT@ 4156 @LENGTH@ 1
------INS ReturnStatement@@MethodInvocation:webSecurity.getObject() @TO@ CatchClause@@catch (AlreadyBuiltException e) {  return webSecurity.getObject();} @AT@ 4173 @LENGTH@ 31
---------INS MethodInvocation@@webSecurity.getObject() @TO@ ReturnStatement@@MethodInvocation:webSecurity.getObject() @AT@ 4180 @LENGTH@ 23
------------INS SimpleName@@Name:webSecurity @TO@ MethodInvocation@@webSecurity.getObject() @AT@ 4180 @LENGTH@ 11
------------INS SimpleName@@MethodName:getObject:[] @TO@ MethodInvocation@@webSecurity.getObject() @AT@ 4192 @LENGTH@ 11


UPD VariableDeclarationStatement@@final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase()); @TO@ final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)); @AT@ 9947 @LENGTH@ 142
---UPD VariableDeclarationFragment@@transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase()) @TO@ transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 9985 @LENGTH@ 103
------UPD MethodInvocation@@SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase()) @TO@ SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 9997 @LENGTH@ 91
---------UPD SimpleName@@MethodName:valueOf:[protocol.getPathElement().getValue().toUpperCase()] @TO@ MethodName:valueOf:[protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)] @AT@ 10029 @LENGTH@ 59
------------UPD MethodInvocation@@protocol.getPathElement().getValue().toUpperCase() @TO@ protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH) @AT@ 10037 @LENGTH@ 50
---------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 10074 @LENGTH@ 13
------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 10111 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 10111 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 10118 @LENGTH@ 7


DEL VariableDeclarationStatement@@Set<ContainerProxy> containers=null; @AT@ 1603 @LENGTH@ 38
---DEL ParameterizedType@@Set<ContainerProxy> @AT@ 1603 @LENGTH@ 19
------DEL SimpleType@@Set @AT@ 1603 @LENGTH@ 3
------DEL SimpleType@@ContainerProxy @AT@ 1607 @LENGTH@ 14
---DEL VariableDeclarationFragment@@containers=null @AT@ 1623 @LENGTH@ 17
------DEL SimpleName@@containers @AT@ 1623 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 1636 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2954 @LENGTH@ 109
---UPD Assignment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2954 @LENGTH@ 108
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 2959 @LENGTH@ 103
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 2978 @LENGTH@ 83
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3036 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 3036 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3044 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 3052 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @AT@ 3044 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3044 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3061 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:testTwoOptionsSameEmptyKey,  @TO@ public, void, MethodName:testDisallowTwoOptionsSameEmptyKeyIfNotNextToEachOther,  @AT@ 2258 @LENGTH@ 69
---UPD SimpleName@@MethodName:testTwoOptionsSameEmptyKey @TO@ MethodName:testDisallowTwoOptionsSameEmptyKeyIfNotNextToEachOther @AT@ 2270 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:tokenize("bar buzz") @TO@ MethodInvocation:tokenize("bar --foo wizz buzz") @AT@ 2303 @LENGTH@ 21
------INS MethodInvocation@@tokenize("bar --foo wizz buzz") @TO@ ExpressionStatement@@MethodInvocation:tokenize("bar buzz") @AT@ 2940 @LENGTH@ 31
---------INS SimpleName@@MethodName:tokenize:["bar --foo wizz buzz"] @TO@ MethodInvocation@@tokenize("bar --foo wizz buzz") @AT@ 2940 @LENGTH@ 31
------------INS StringLiteral@@"bar --foo wizz buzz" @TO@ SimpleName@@MethodName:tokenize:["bar --foo wizz buzz"] @AT@ 2949 @LENGTH@ 21


UPD VariableDeclarationStatement@@String testDir=System.getProperty("test.tmp.dir","./"); @TO@ File workDir=handleWorkDir(); @AT@ 3324 @LENGTH@ 58
---UPD SimpleType@@String @TO@ File @AT@ 3324 @LENGTH@ 6
---UPD VariableDeclarationFragment@@testDir=System.getProperty("test.tmp.dir","./") @TO@ workDir=handleWorkDir() @AT@ 3331 @LENGTH@ 50
------UPD SimpleName@@testDir @TO@ workDir @AT@ 3331 @LENGTH@ 7
------UPD MethodInvocation@@System.getProperty("test.tmp.dir","./") @TO@ MethodName:handleWorkDir:[] @AT@ 3341 @LENGTH@ 40
---------DEL SimpleName@@Name:System @AT@ 3341 @LENGTH@ 6
---------DEL SimpleName@@MethodName:getProperty:["test.tmp.dir", "./"] @AT@ 3348 @LENGTH@ 33
------------DEL StringLiteral@@"test.tmp.dir" @AT@ 3360 @LENGTH@ 14
------------DEL StringLiteral@@"./" @AT@ 3376 @LENGTH@ 4


INS IfStatement@@if (uri.contains("&&")) {  Pattern pattern=Pattern.compile("RAW(.*&&.*)");  Matcher m=pattern.matcher(uri);  if (!m.find()) {    throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");  }} @TO@ MethodDeclaration@@protected, void, MethodName:validateURI, String uri, String path, Map<String,Object> parameters,  @AT@ 9070 @LENGTH@ 413
---MOV MethodInvocation@@uri.contains("&&") @TO@ IfStatement@@if (uri.contains("&&")) {  Pattern pattern=Pattern.compile("RAW(.*&&.*)");  Matcher m=pattern.matcher(uri);  if (!m.find()) {    throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");  }} @AT@ 8987 @LENGTH@ 18
---INS Block@@ThenBody:{  Pattern pattern=Pattern.compile("RAW(.*&&.*)");  Matcher m=pattern.matcher(uri);  if (!m.find()) {    throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");  }} @TO@ IfStatement@@if (uri.contains("&&")) {  Pattern pattern=Pattern.compile("RAW(.*&&.*)");  Matcher m=pattern.matcher(uri);  if (!m.find()) {    throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");  }} @AT@ 9094 @LENGTH@ 389
------MOV IfStatement@@if (uri.contains("&&")) {  throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");} @TO@ Block@@ThenBody:{  Pattern pattern=Pattern.compile("RAW(.*&&.*)");  Matcher m=pattern.matcher(uri);  if (!m.find()) {    throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");  }} @AT@ 8983 @LENGTH@ 211
---------INS PrefixExpression@@!m.find() @TO@ IfStatement@@if (uri.contains("&&")) {  throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");} @AT@ 9263 @LENGTH@ 9
------------INS Operator@@! @TO@ PrefixExpression@@!m.find() @AT@ 9263 @LENGTH@ 1
------------INS MethodInvocation@@m.find() @TO@ PrefixExpression@@!m.find() @AT@ 9264 @LENGTH@ 8
---------------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.find() @AT@ 9264 @LENGTH@ 1
---------------INS SimpleName@@MethodName:find:[] @TO@ MethodInvocation@@m.find() @AT@ 9266 @LENGTH@ 6
------INS VariableDeclarationStatement@@Pattern pattern=Pattern.compile("RAW(.*&&.*)"); @TO@ Block@@ThenBody:{  Pattern pattern=Pattern.compile("RAW(.*&&.*)");  Matcher m=pattern.matcher(uri);  if (!m.find()) {    throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");  }} @AT@ 9108 @LENGTH@ 49
---------INS SimpleType@@Pattern @TO@ VariableDeclarationStatement@@Pattern pattern=Pattern.compile("RAW(.*&&.*)"); @AT@ 9108 @LENGTH@ 7
---------INS VariableDeclarationFragment@@pattern=Pattern.compile("RAW(.*&&.*)") @TO@ VariableDeclarationStatement@@Pattern pattern=Pattern.compile("RAW(.*&&.*)"); @AT@ 9116 @LENGTH@ 40
------------INS SimpleName@@pattern @TO@ VariableDeclarationFragment@@pattern=Pattern.compile("RAW(.*&&.*)") @AT@ 9116 @LENGTH@ 7
------------INS MethodInvocation@@Pattern.compile("RAW(.*&&.*)") @TO@ VariableDeclarationFragment@@pattern=Pattern.compile("RAW(.*&&.*)") @AT@ 9126 @LENGTH@ 30
---------------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile("RAW(.*&&.*)") @AT@ 9126 @LENGTH@ 7
---------------INS SimpleName@@MethodName:compile:["RAW(.*&&.*)"] @TO@ MethodInvocation@@Pattern.compile("RAW(.*&&.*)") @AT@ 9134 @LENGTH@ 22
------------------INS StringLiteral@@"RAW(.*&&.*)" @TO@ SimpleName@@MethodName:compile:["RAW(.*&&.*)"] @AT@ 9142 @LENGTH@ 13
------INS VariableDeclarationStatement@@Matcher m=pattern.matcher(uri); @TO@ Block@@ThenBody:{  Pattern pattern=Pattern.compile("RAW(.*&&.*)");  Matcher m=pattern.matcher(uri);  if (!m.find()) {    throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");  }} @AT@ 9170 @LENGTH@ 33
---------INS SimpleType@@Matcher @TO@ VariableDeclarationStatement@@Matcher m=pattern.matcher(uri); @AT@ 9170 @LENGTH@ 7
---------INS VariableDeclarationFragment@@m=pattern.matcher(uri) @TO@ VariableDeclarationStatement@@Matcher m=pattern.matcher(uri); @AT@ 9178 @LENGTH@ 24
------------INS SimpleName@@m @TO@ VariableDeclarationFragment@@m=pattern.matcher(uri) @AT@ 9178 @LENGTH@ 1
------------INS MethodInvocation@@pattern.matcher(uri) @TO@ VariableDeclarationFragment@@m=pattern.matcher(uri) @AT@ 9182 @LENGTH@ 20
---------------INS SimpleName@@Name:pattern @TO@ MethodInvocation@@pattern.matcher(uri) @AT@ 9182 @LENGTH@ 7
---------------INS SimpleName@@MethodName:matcher:[uri] @TO@ MethodInvocation@@pattern.matcher(uri) @AT@ 9190 @LENGTH@ 12
------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:matcher:[uri] @AT@ 9198 @LENGTH@ 3


UPD VariableDeclarationStatement@@Object valueToUse=convertArrayToCollectionIfNecessary(value); @TO@ Object valueToUse=value; @AT@ 3617 @LENGTH@ 63
---UPD VariableDeclarationFragment@@valueToUse=convertArrayToCollectionIfNecessary(value) @TO@ valueToUse=value @AT@ 3624 @LENGTH@ 55
------INS SimpleName@@value @TO@ VariableDeclarationFragment@@valueToUse=convertArrayToCollectionIfNecessary(value) @AT@ 3503 @LENGTH@ 5
------DEL MethodInvocation@@convertArrayToCollectionIfNecessary(value) @AT@ 3637 @LENGTH@ 42
---------DEL SimpleName@@MethodName:convertArrayToCollectionIfNecessary:[value] @AT@ 3637 @LENGTH@ 42
------------DEL SimpleName@@value @AT@ 3673 @LENGTH@ 5


DEL MethodDeclaration@@private, static, String, MethodName:camelCaseToHyphenated, String camelCase,  @AT@ 4596 @LENGTH@ 516
---DEL Modifier@@private @AT@ 4596 @LENGTH@ 7
---DEL Modifier@@static @AT@ 4604 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 4611 @LENGTH@ 6
---DEL SimpleName@@MethodName:camelCaseToHyphenated @AT@ 4618 @LENGTH@ 21
---DEL SingleVariableDeclaration@@String camelCase @AT@ 4640 @LENGTH@ 16
------DEL SimpleType@@String @AT@ 4640 @LENGTH@ 6
------DEL SimpleName@@camelCase @AT@ 4647 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:Assert.notNull(camelCase,"'attributeName' must not be null") @AT@ 4662 @LENGTH@ 62
------DEL MethodInvocation@@Assert.notNull(camelCase,"'attributeName' must not be null") @AT@ 4662 @LENGTH@ 61
---------DEL SimpleName@@Name:Assert @AT@ 4662 @LENGTH@ 6
---------DEL SimpleName@@MethodName:notNull:[camelCase, "'attributeName' must not be null"] @AT@ 4669 @LENGTH@ 54
------------DEL SimpleName@@camelCase @AT@ 4677 @LENGTH@ 9
------------DEL StringLiteral@@"'attributeName' must not be null" @AT@ 4688 @LENGTH@ 34
---DEL VariableDeclarationStatement@@char[] chars=camelCase.toCharArray(); @AT@ 4727 @LENGTH@ 39
------DEL ArrayType@@char[] @AT@ 4727 @LENGTH@ 6
---------DEL PrimitiveType@@char @AT@ 4727 @LENGTH@ 4
------DEL VariableDeclarationFragment@@chars=camelCase.toCharArray() @AT@ 4734 @LENGTH@ 31
---------DEL SimpleName@@chars @AT@ 4734 @LENGTH@ 5
---------DEL MethodInvocation@@camelCase.toCharArray() @AT@ 4742 @LENGTH@ 23
------------DEL SimpleName@@Name:camelCase @AT@ 4742 @LENGTH@ 9
------------DEL SimpleName@@MethodName:toCharArray:[] @AT@ 4752 @LENGTH@ 13
---DEL VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(chars.length + 2); @AT@ 4769 @LENGTH@ 55
------DEL SimpleType@@StringBuilder @AT@ 4769 @LENGTH@ 13
------DEL VariableDeclarationFragment@@sb=new StringBuilder(chars.length + 2) @AT@ 4783 @LENGTH@ 40
---------DEL SimpleName@@sb @AT@ 4783 @LENGTH@ 2
---------DEL ClassInstanceCreation@@StringBuilder[chars.length + 2] @AT@ 4788 @LENGTH@ 35
------------DEL New@@new @AT@ 4788 @LENGTH@ 3
------------DEL SimpleType@@StringBuilder @AT@ 4792 @LENGTH@ 13
------------DEL InfixExpression@@chars.length + 2 @AT@ 4806 @LENGTH@ 16
---------------DEL QualifiedName@@chars.length @AT@ 4806 @LENGTH@ 12
------------------DEL SimpleName@@chars @AT@ 4806 @LENGTH@ 5
------------------DEL SimpleName@@length @AT@ 4812 @LENGTH@ 6
---------------DEL Operator@@+ @AT@ 4818 @LENGTH@ 1
---------------DEL NumberLiteral@@2 @AT@ 4821 @LENGTH@ 1
---DEL VariableDeclarationStatement@@boolean upperCase=false; @AT@ 4827 @LENGTH@ 26
------DEL PrimitiveType@@boolean @AT@ 4827 @LENGTH@ 7
------DEL VariableDeclarationFragment@@upperCase=false @AT@ 4835 @LENGTH@ 17
---------DEL SimpleName@@upperCase @AT@ 4835 @LENGTH@ 9
---------DEL BooleanLiteral@@false @AT@ 4847 @LENGTH@ 5
---DEL EnhancedForStatement@@for (char c : chars) {  if (Character.isUpperCase(c)) {    if (!upperCase) {      sb.append("-");      c=Character.toLowerCase(c);      upperCase=true;    }  } else {    upperCase=false;  }  sb.append(c);} @AT@ 4856 @LENGTH@ 228
------DEL SingleVariableDeclaration@@char c @AT@ 4861 @LENGTH@ 6
---------DEL PrimitiveType@@char @AT@ 4861 @LENGTH@ 4
---------DEL SimpleName@@c @AT@ 4866 @LENGTH@ 1
------DEL SimpleName@@chars @AT@ 4870 @LENGTH@ 5
------DEL IfStatement@@if (Character.isUpperCase(c)) {  if (!upperCase) {    sb.append("-");    c=Character.toLowerCase(c);    upperCase=true;  }} else {  upperCase=false;} @AT@ 4882 @LENGTH@ 181
---------DEL MethodInvocation@@Character.isUpperCase(c) @AT@ 4886 @LENGTH@ 24
------------DEL SimpleName@@Name:Character @AT@ 4886 @LENGTH@ 9
------------DEL SimpleName@@MethodName:isUpperCase:[c] @AT@ 4896 @LENGTH@ 14
---------------DEL SimpleName@@c @AT@ 4908 @LENGTH@ 1
---------DEL Block@@ThenBody:{  if (!upperCase) {    sb.append("-");    c=Character.toLowerCase(c);    upperCase=true;  }} @AT@ 4912 @LENGTH@ 113
------------DEL IfStatement@@if (!upperCase) {  sb.append("-");  c=Character.toLowerCase(c);  upperCase=true;} @AT@ 4918 @LENGTH@ 102
---------------DEL PrefixExpression@@!upperCase @AT@ 4922 @LENGTH@ 10
------------------DEL Operator@@! @AT@ 4922 @LENGTH@ 1
------------------DEL SimpleName@@upperCase @AT@ 4923 @LENGTH@ 9
---------------DEL Block@@ThenBody:{  sb.append("-");  c=Character.toLowerCase(c);  upperCase=true;} @AT@ 4934 @LENGTH@ 86
------------------DEL ExpressionStatement@@MethodInvocation:sb.append("-") @AT@ 4941 @LENGTH@ 15
---------------------DEL MethodInvocation@@sb.append("-") @AT@ 4941 @LENGTH@ 14
------------------------DEL SimpleName@@Name:sb @AT@ 4941 @LENGTH@ 2
------------------------DEL SimpleName@@MethodName:append:["-"] @AT@ 4944 @LENGTH@ 11
---------------------------DEL StringLiteral@@"-" @AT@ 4951 @LENGTH@ 3
------------------DEL ExpressionStatement@@Assignment:c=Character.toLowerCase(c) @AT@ 4962 @LENGTH@ 29
---------------------DEL Assignment@@c=Character.toLowerCase(c) @AT@ 4962 @LENGTH@ 28
------------------------DEL SimpleName@@c @AT@ 4962 @LENGTH@ 1
------------------------DEL Operator@@= @AT@ 4963 @LENGTH@ 1
------------------------DEL MethodInvocation@@Character.toLowerCase(c) @AT@ 4966 @LENGTH@ 24
---------------------------DEL SimpleName@@Name:Character @AT@ 4966 @LENGTH@ 9
---------------------------DEL SimpleName@@MethodName:toLowerCase:[c] @AT@ 4976 @LENGTH@ 14
------------------------------DEL SimpleName@@c @AT@ 4988 @LENGTH@ 1
------------------DEL ExpressionStatement@@Assignment:upperCase=true @AT@ 4997 @LENGTH@ 17
---------------------DEL Assignment@@upperCase=true @AT@ 4997 @LENGTH@ 16
------------------------DEL SimpleName@@upperCase @AT@ 4997 @LENGTH@ 9
------------------------DEL Operator@@= @AT@ 5006 @LENGTH@ 1
------------------------DEL BooleanLiteral@@true @AT@ 5009 @LENGTH@ 4
---------DEL Block@@ElseBody:{  upperCase=false;} @AT@ 5034 @LENGTH@ 29
------------DEL ExpressionStatement@@Assignment:upperCase=false @AT@ 5040 @LENGTH@ 18
---------------DEL Assignment@@upperCase=false @AT@ 5040 @LENGTH@ 17
------------------DEL SimpleName@@upperCase @AT@ 5040 @LENGTH@ 9
------------------DEL Operator@@= @AT@ 5049 @LENGTH@ 1
------------------DEL BooleanLiteral@@false @AT@ 5052 @LENGTH@ 5
------DEL ExpressionStatement@@MethodInvocation:sb.append(c) @AT@ 5067 @LENGTH@ 13
---------DEL MethodInvocation@@sb.append(c) @AT@ 5067 @LENGTH@ 12
------------DEL SimpleName@@Name:sb @AT@ 5067 @LENGTH@ 2
------------DEL SimpleName@@MethodName:append:[c] @AT@ 5070 @LENGTH@ 9
---------------DEL SimpleName@@c @AT@ 5077 @LENGTH@ 1
---DEL ReturnStatement@@ClassInstanceCreation:new String(sb) @AT@ 5087 @LENGTH@ 22
------DEL ClassInstanceCreation@@String[sb] @AT@ 5094 @LENGTH@ 14
---------DEL New@@new @AT@ 5094 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 5098 @LENGTH@ 6
---------DEL SimpleName@@sb @AT@ 5105 @LENGTH@ 2


INS MethodDeclaration@@List<User>, MethodName:findByFirstname, String firstname,  @TO@ TypeDeclaration@@[public]UserRepository, [CrudRepository<User,BigInteger>] @AT@ 905 @LENGTH@ 34
---INS ParameterizedType@@List<User> @TO@ MethodDeclaration@@List<User>, MethodName:findByFirstname, String firstname,  @AT@ 894 @LENGTH@ 10
------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 894 @LENGTH@ 4
------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 899 @LENGTH@ 4
---INS SimpleName@@MethodName:findByFirstname @TO@ MethodDeclaration@@List<User>, MethodName:findByFirstname, String firstname,  @AT@ 905 @LENGTH@ 15
---INS SingleVariableDeclaration@@String firstname @TO@ MethodDeclaration@@List<User>, MethodName:findByFirstname, String firstname,  @AT@ 921 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String firstname @AT@ 921 @LENGTH@ 6
------INS SimpleName@@firstname @TO@ SingleVariableDeclaration@@String firstname @AT@ 928 @LENGTH@ 9


INS FieldDeclaration@@String, [TRY_ROUTE_BLOCK="TryRouteBlock"] @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 11397 @LENGTH@ 47
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [TRY_ROUTE_BLOCK="TryRouteBlock"] @AT@ 11397 @LENGTH@ 6
---INS VariableDeclarationFragment@@TRY_ROUTE_BLOCK="TryRouteBlock" @TO@ FieldDeclaration@@String, [TRY_ROUTE_BLOCK="TryRouteBlock"] @AT@ 11404 @LENGTH@ 39
------INS SimpleName@@TRY_ROUTE_BLOCK @TO@ VariableDeclarationFragment@@TRY_ROUTE_BLOCK="TryRouteBlock" @AT@ 11404 @LENGTH@ 15
------INS StringLiteral@@"TryRouteBlock" @TO@ VariableDeclarationFragment@@TRY_ROUTE_BLOCK="TryRouteBlock" @AT@ 11428 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:context.executeAsync(new ManagementRequestContext.AsyncTask<Void>(){
  @Override public void execute(  ManagementRequestContext<Void> voidManagementRequestContext) throws Exception {
    if (param == DomainServerProtocol.PARAM_OK) {
      resultHandler.done(Boolean.TRUE);
    }
 else {
      resultHandler.done(Boolean.FALSE);
    }
  }
}
) @TO@ MethodInvocation:context.executeAsync(new ManagementRequestContext.AsyncTask<Void>(){
  @Override public void execute(  ManagementRequestContext<Void> voidManagementRequestContext) throws Exception {
    if (param == DomainServerProtocol.PARAM_OK) {
      resultHandler.done(Boolean.TRUE);
    }
 else {
      resultHandler.done(Boolean.FALSE);
    }
  }
}
,false) @AT@ 11290 @LENGTH@ 592
---UPD MethodInvocation@@context.executeAsync(new ManagementRequestContext.AsyncTask<Void>(){
  @Override public void execute(  ManagementRequestContext<Void> voidManagementRequestContext) throws Exception {
    if (param == DomainServerProtocol.PARAM_OK) {
      resultHandler.done(Boolean.TRUE);
    }
 else {
      resultHandler.done(Boolean.FALSE);
    }
  }
}
) @TO@ context.executeAsync(new ManagementRequestContext.AsyncTask<Void>(){
  @Override public void execute(  ManagementRequestContext<Void> voidManagementRequestContext) throws Exception {
    if (param == DomainServerProtocol.PARAM_OK) {
      resultHandler.done(Boolean.TRUE);
    }
 else {
      resultHandler.done(Boolean.FALSE);
    }
  }
}
,false) @AT@ 11290 @LENGTH@ 591
------UPD SimpleName@@MethodName:executeAsync:[new ManagementRequestContext.AsyncTask<Void>(){
  @Override public void execute(  ManagementRequestContext<Void> voidManagementRequestContext) throws Exception {
    if (param == DomainServerProtocol.PARAM_OK) {
      resultHandler.done(Boolean.TRUE);
    }
 else {
      resultHandler.done(Boolean.FALSE);
    }
  }
}
] @TO@ MethodName:executeAsync:[new ManagementRequestContext.AsyncTask<Void>(){
  @Override public void execute(  ManagementRequestContext<Void> voidManagementRequestContext) throws Exception {
    if (param == DomainServerProtocol.PARAM_OK) {
      resultHandler.done(Boolean.TRUE);
    }
 else {
      resultHandler.done(Boolean.FALSE);
    }
  }
}
, false] @AT@ 11298 @LENGTH@ 583
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:executeAsync:[new ManagementRequestContext.AsyncTask<Void>(){
  @Override public void execute(  ManagementRequestContext<Void> voidManagementRequestContext) throws Exception {
    if (param == DomainServerProtocol.PARAM_OK) {
      resultHandler.done(Boolean.TRUE);
    }
 else {
      resultHandler.done(Boolean.FALSE);
    }
  }
}
] @AT@ 11882 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 11449 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 11456 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 11473 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 11486 @LENGTH@ 202
------------DEL New@@new @AT@ 11486 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 11490 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 11490 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 11507 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 11527 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 11563 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 11563 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 11570 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 11587 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 11573 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 11573 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 11597 @LENGTH@ 10


UPD VariableDeclarationStatement@@OAuth2AccessToken token=retrieveToken(getParametersForTokenRequest(resource,request),getHeadersForTokenRequest(request),resource); @TO@ OAuth2AccessToken token=retrieveToken(request,resource,getParametersForTokenRequest(resource,request),getHeadersForTokenRequest(request)); @AT@ 3396 @LENGTH@ 140
---UPD VariableDeclarationFragment@@token=retrieveToken(getParametersForTokenRequest(resource,request),getHeadersForTokenRequest(request),resource) @TO@ token=retrieveToken(request,resource,getParametersForTokenRequest(resource,request),getHeadersForTokenRequest(request)) @AT@ 3414 @LENGTH@ 121
------UPD MethodInvocation@@retrieveToken(getParametersForTokenRequest(resource,request),getHeadersForTokenRequest(request),resource) @TO@ retrieveToken(request,resource,getParametersForTokenRequest(resource,request),getHeadersForTokenRequest(request)) @AT@ 3422 @LENGTH@ 113
---------UPD SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource,request), getHeadersForTokenRequest(request), resource] @TO@ MethodName:retrieveToken:[request, resource, getParametersForTokenRequest(resource,request), getHeadersForTokenRequest(request)] @AT@ 3422 @LENGTH@ 113
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource,request), getHeadersForTokenRequest(request), resource] @AT@ 3436 @LENGTH@ 7
------------MOV SimpleName@@resource @TO@ SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource,request), getHeadersForTokenRequest(request), resource] @AT@ 3526 @LENGTH@ 8


UPD SwitchStatement@@switch (ParameterBindingType.of(typeSource)) {case LIKE:  Type likeType=LikeParameterBinding.getLikeTypeFrom(matcher.group(2));String replacement=matcher.group(3);if (parameterIndex != null) {checkAndRegister(new LikeParameterBinding(parameterIndex,likeType),bindings);} else {checkAndRegister(new LikeParameterBinding(parameterName,likeType),bindings);replacement=matcher.group(5);}result=StringUtils.replace(result,matcher.group(2),replacement);break;case IN:if (parameterIndex != null) {checkAndRegister(new InParameterBinding(parameterIndex),bindings);} else {checkAndRegister(new InParameterBinding(parameterName),bindings);}result=query;break;case AS_IS:default :bindings.add(parameterIndex != null ? new ParameterBinding(parameterIndex) : new ParameterBinding(parameterName));result=query;} @TO@ switch (ParameterBindingType.of(typeSource)) {case LIKE:  Type likeType=LikeParameterBinding.getLikeTypeFrom(matcher.group(2));String replacement=matcher.group(3);if (parameterIndex != null) {checkAndRegister(new LikeParameterBinding(parameterIndex,likeType),bindings);} else {checkAndRegister(new LikeParameterBinding(parameterName,likeType),bindings);replacement=matcher.group(5);}result=StringUtils.replace(result,matcher.group(2),replacement);break;case IN:if (parameterIndex != null) {checkAndRegister(new InParameterBinding(parameterIndex),bindings);} else {checkAndRegister(new InParameterBinding(parameterName),bindings);}result=query;break;case AS_IS:default :bindings.add(parameterIndex != null ? new ParameterBinding(parameterIndex) : new ParameterBinding(parameterName));} @AT@ 5279 @LENGTH@ 1082
---DEL ExpressionStatement@@Assignment:result=query @AT@ 6340 @LENGTH@ 15
------DEL Assignment@@result=query @AT@ 6340 @LENGTH@ 14
---------DEL SimpleName@@result @AT@ 6340 @LENGTH@ 6
---------DEL Operator@@= @AT@ 6346 @LENGTH@ 1
---------DEL SimpleName@@query @AT@ 6349 @LENGTH@ 5


UPD WhileStatement@@while (true) {  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0 && partitionDataQueue.isEmpty()) {    break;  }} @TO@ while (true) {synchronized (partitionDataQueue) {    while (!partitionDataQueue.isEmpty()) {      analyzer.analyzeCollectorData(partitionDataQueue.remove());    }    processFinishedPartitions(tasks,result);    if (tasks.size() == 0) {      break;    }  }} @AT@ 5962 @LENGTH@ 250
---INS Block@@WhileBody:{synchronized (partitionDataQueue) {    while (!partitionDataQueue.isEmpty()) {      analyzer.analyzeCollectorData(partitionDataQueue.remove());    }    processFinishedPartitions(tasks,result);    if (tasks.size() == 0) {      break;    }  }} @TO@ WhileStatement@@while (true) {  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0 && partitionDataQueue.isEmpty()) {    break;  }} @AT@ 5974 @LENGTH@ 257
------INS SynchronizedStatement@@synchronized (partitionDataQueue) {  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0) {    break;  }} @TO@ Block@@WhileBody:{synchronized (partitionDataQueue) {    while (!partitionDataQueue.isEmpty()) {      analyzer.analyzeCollectorData(partitionDataQueue.remove());    }    processFinishedPartitions(tasks,result);    if (tasks.size() == 0) {      break;    }  }} @AT@ 5979 @LENGTH@ 248
---------MOV Block@@WhileBody:{  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0 && partitionDataQueue.isEmpty()) {    break;  }} @TO@ SynchronizedStatement@@synchronized (partitionDataQueue) {  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0) {    break;  }} @AT@ 5974 @LENGTH@ 238
------------UPD IfStatement@@if (tasks.size() == 0 && partitionDataQueue.isEmpty()) {  break;} @TO@ if (tasks.size() == 0) {  break;} @AT@ 6137 @LENGTH@ 71
---------------DEL InfixExpression@@tasks.size() == 0 && partitionDataQueue.isEmpty() @AT@ 6140 @LENGTH@ 49
------------------DEL Operator@@&& @AT@ 6157 @LENGTH@ 2
------------------DEL MethodInvocation@@partitionDataQueue.isEmpty() @AT@ 6161 @LENGTH@ 28
---------------------DEL SimpleName@@Name:partitionDataQueue @AT@ 6161 @LENGTH@ 18
---------------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 6180 @LENGTH@ 9
---------------MOV InfixExpression@@tasks.size() == 0 @TO@ IfStatement@@if (tasks.size() == 0 && partitionDataQueue.isEmpty()) {  break;} @AT@ 6140 @LENGTH@ 17
---------INS SimpleName@@partitionDataQueue @TO@ SynchronizedStatement@@synchronized (partitionDataQueue) {  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0) {    break;  }} @AT@ 5993 @LENGTH@ 18
---UPD Block@@WhileBody:{  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0 && partitionDataQueue.isEmpty()) {    break;  }} @TO@ SyncBody:{  while (!partitionDataQueue.isEmpty()) {    analyzer.analyzeCollectorData(partitionDataQueue.remove());  }  processFinishedPartitions(tasks,result);  if (tasks.size() == 0) {    break;  }} @AT@ 5974 @LENGTH@ 238


UPD IfStatement@@if (metadata.isSuccess()) {  Container parent=containerOptions.getParent() != null ? getContainer(containerOptions.getParent()) : null;  if (!containerOptions.isEnsembleServer()) {    getDataStore().createContainerConfig(metadata);  }  ContainerImpl container=new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this);  metadata.setContainer(container);  container.setMetadata(metadata);  LOGGER.info("The container " + metadata.getContainerName() + " has been successfully created");} else {  LOGGER.info("The creation of the container " + metadata.getContainerName() + " has failed",metadata.getFailure());} @TO@ if (metadata.isSuccess()) {  Container parent=containerOptions.getParent() != null ? getContainer(containerOptions.getParent()) : null;  if (!containerOptions.isEnsembleServer()) {    getDataStore().createContainerConfig(metadata);  }  ContainerImpl container=new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this);  metadata.setContainer(container);  LOGGER.info("The container " + metadata.getContainerName() + " has been successfully created");} else {  LOGGER.info("The creation of the container " + metadata.getContainerName() + " has failed",metadata.getFailure());} @AT@ 17907 @LENGTH@ 1307
---UPD Block@@ThenBody:{  Container parent=containerOptions.getParent() != null ? getContainer(containerOptions.getParent()) : null;  if (!containerOptions.isEnsembleServer()) {    getDataStore().createContainerConfig(metadata);  }  ContainerImpl container=new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this);  metadata.setContainer(container);  container.setMetadata(metadata);  LOGGER.info("The container " + metadata.getContainerName() + " has been successfully created");} @TO@ ThenBody:{  Container parent=containerOptions.getParent() != null ? getContainer(containerOptions.getParent()) : null;  if (!containerOptions.isEnsembleServer()) {    getDataStore().createContainerConfig(metadata);  }  ContainerImpl container=new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this);  metadata.setContainer(container);  LOGGER.info("The container " + metadata.getContainerName() + " has been successfully created");} @AT@ 17933 @LENGTH@ 1096
------DEL ExpressionStatement@@MethodInvocation:container.setMetadata(metadata) @AT@ 18839 @LENGTH@ 32
---------DEL MethodInvocation@@container.setMetadata(metadata) @AT@ 18839 @LENGTH@ 31
------------DEL SimpleName@@Name:container @AT@ 18839 @LENGTH@ 9
------------DEL SimpleName@@MethodName:setMetadata:[metadata] @AT@ 18849 @LENGTH@ 21
---------------DEL SimpleName@@metadata @AT@ 18861 @LENGTH@ 8


UPD VariableDeclarationStatement@@SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()); @TO@ SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)); @AT@ 6587 @LENGTH@ 143
---UPD VariableDeclarationFragment@@transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 6619 @LENGTH@ 110
------UPD MethodInvocation@@SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 6631 @LENGTH@ 98
---------UPD SimpleName@@MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase()] @TO@ MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)] @AT@ 6663 @LENGTH@ 66
------------UPD MethodInvocation@@protocolAddress.getLastElement().getValue().toUpperCase() @TO@ protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH) @AT@ 6671 @LENGTH@ 57
---------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 6715 @LENGTH@ 13
------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 6766 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 6766 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 6773 @LENGTH@ 7


UPD TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();  Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",fabricService)),PROVISION_TIMEOUT);  Container[] containers=fabricService.getContainers();  Assert.assertNotNull(containers);  Assert.assertEquals("Expected to find 1 container",1,containers.length);  Assert.assertEquals("Expected to find the root container","root",containers[0].getId());}  finally {  fabricProxy.close();  curatorProxy.close();} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=fabricService.adapt(CuratorFramework.class);  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();  Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",fabricService)),PROVISION_TIMEOUT);  Container[] containers=fabricService.getContainers();  Assert.assertNotNull(containers);  Assert.assertEquals("Expected to find 1 container",1,containers.length);  Assert.assertEquals("Expected to find the root container","root",containers[0].getId());}  finally {  fabricProxy.close();} @AT@ 2747 @LENGTH@ 745
---UPD VariableDeclarationStatement@@CuratorFramework curator=curatorProxy.getService(); @TO@ CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 2833 @LENGTH@ 53
------UPD VariableDeclarationFragment@@curator=curatorProxy.getService() @TO@ curator=fabricService.adapt(CuratorFramework.class) @AT@ 2850 @LENGTH@ 35
---------UPD MethodInvocation@@curatorProxy.getService() @TO@ fabricService.adapt(CuratorFramework.class) @AT@ 2860 @LENGTH@ 25
------------UPD SimpleName@@Name:curatorProxy @TO@ Name:fabricService @AT@ 2860 @LENGTH@ 12
------------UPD SimpleName@@MethodName:getService:[] @TO@ MethodName:adapt:[CuratorFramework.class] @AT@ 2873 @LENGTH@ 12
---------------INS TypeLiteral@@CuratorFramework.class @TO@ SimpleName@@MethodName:getService:[] @AT@ 2754 @LENGTH@ 22
---UPD Block@@FinallyBody:{  fabricProxy.close();  curatorProxy.close();} @TO@ FinallyBody:{  fabricProxy.close();} @AT@ 3414 @LENGTH@ 78
------DEL ExpressionStatement@@MethodInvocation:curatorProxy.close() @AT@ 3461 @LENGTH@ 21
---------DEL MethodInvocation@@curatorProxy.close() @AT@ 3461 @LENGTH@ 20
------------DEL SimpleName@@Name:curatorProxy @AT@ 3461 @LENGTH@ 12
------------DEL SimpleName@@MethodName:close:[] @AT@ 3474 @LENGTH@ 7


UPD IfStatement@@if (initialContextModule == null) {  initialContextClass=Class.forName(initialContextClassName);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);} else {  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule));  loader=module.getClassLoader();  initialContextClass=Class.forName(initialContextClassName,true,module.getClassLoader());  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);} @TO@ if (initialContextModule == null) {  initialContextClass=Class.forName(initialContextClassName);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);} else {  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule));  loader=module.getClassLoader();  final ClassLoader currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();  try {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);    initialContextClass=Class.forName(initialContextClassName,true,loader);    Constructor ctor=initialContextClass.getConstructor(Hashtable.class);    context=(Context)ctor.newInstance(newEnvironment);  }  finally {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);  }} @AT@ 3133 @LENGTH@ 707
---UPD Block@@ElseBody:{  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule));  loader=module.getClassLoader();  initialContextClass=Class.forName(initialContextClassName,true,module.getClassLoader());  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);} @TO@ ElseBody:{  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule));  loader=module.getClassLoader();  final ClassLoader currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();  try {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);    initialContextClass=Class.forName(initialContextClassName,true,loader);    Constructor ctor=initialContextClass.getConstructor(Hashtable.class);    context=(Context)ctor.newInstance(newEnvironment);  }  finally {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);  }} @AT@ 3408 @LENGTH@ 432
------INS VariableDeclarationStatement@@final ClassLoader currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged(); @TO@ Block@@ElseBody:{  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule));  loader=module.getClassLoader();  initialContextClass=Class.forName(initialContextClassName,true,module.getClassLoader());  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);} @AT@ 3588 @LENGTH@ 103
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ClassLoader currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged(); @AT@ 3588 @LENGTH@ 5
---------INS SimpleType@@ClassLoader @TO@ VariableDeclarationStatement@@final ClassLoader currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged(); @AT@ 3594 @LENGTH@ 11
---------INS VariableDeclarationFragment@@currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @TO@ VariableDeclarationStatement@@final ClassLoader currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged(); @AT@ 3606 @LENGTH@ 84
------------INS SimpleName@@currentClassLoader @TO@ VariableDeclarationFragment@@currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 3606 @LENGTH@ 18
------------INS MethodInvocation@@WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @TO@ VariableDeclarationFragment@@currentClassLoader=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 3627 @LENGTH@ 63
---------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 3627 @LENGTH@ 22
---------------INS SimpleName@@MethodName:getCurrentContextClassLoaderPrivileged:[] @TO@ MethodInvocation@@WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 3650 @LENGTH@ 40
------DEL ExpressionStatement@@Assignment:initialContextClass=Class.forName(initialContextClassName,true,module.getClassLoader()) @AT@ 3588 @LENGTH@ 92
------INS TryStatement@@try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);  initialContextClass=Class.forName(initialContextClassName,true,loader);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @TO@ Block@@ElseBody:{  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule));  loader=module.getClassLoader();  initialContextClass=Class.forName(initialContextClassName,true,module.getClassLoader());  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);} @AT@ 3704 @LENGTH@ 479
---------MOV VariableDeclarationStatement@@Constructor ctor=initialContextClass.getConstructor(Hashtable.class); @TO@ TryStatement@@try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);  initialContextClass=Class.forName(initialContextClassName,true,loader);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @AT@ 3693 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader) @TO@ TryStatement@@try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);  initialContextClass=Class.forName(initialContextClassName,true,loader);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @AT@ 3726 @LENGTH@ 70
------------INS MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader) @TO@ ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader) @AT@ 3726 @LENGTH@ 69
---------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader) @AT@ 3726 @LENGTH@ 22
---------------INS SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[loader] @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader) @AT@ 3749 @LENGTH@ 46
------------------INS SimpleName@@loader @TO@ SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[loader] @AT@ 3788 @LENGTH@ 6
---------MOV ExpressionStatement@@Assignment:context=(Context)ctor.newInstance(newEnvironment) @TO@ TryStatement@@try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);  initialContextClass=Class.forName(initialContextClassName,true,loader);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @AT@ 3777 @LENGTH@ 53
---------INS ExpressionStatement@@Assignment:initialContextClass=Class.forName(initialContextClassName,true,loader) @TO@ TryStatement@@try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);  initialContextClass=Class.forName(initialContextClassName,true,loader);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @AT@ 3813 @LENGTH@ 75
------------MOV Assignment@@initialContextClass=Class.forName(initialContextClassName,true,module.getClassLoader()) @TO@ ExpressionStatement@@Assignment:initialContextClass=Class.forName(initialContextClassName,true,loader) @AT@ 3588 @LENGTH@ 91
---------------UPD MethodInvocation@@Class.forName(initialContextClassName,true,module.getClassLoader()) @TO@ Class.forName(initialContextClassName,true,loader) @AT@ 3610 @LENGTH@ 69
------------------UPD SimpleName@@MethodName:forName:[initialContextClassName, true, module.getClassLoader()] @TO@ MethodName:forName:[initialContextClassName, true, loader] @AT@ 3616 @LENGTH@ 63
---------------------DEL MethodInvocation@@module.getClassLoader() @AT@ 3655 @LENGTH@ 23
------------------------DEL SimpleName@@Name:module @AT@ 3655 @LENGTH@ 6
------------------------DEL SimpleName@@MethodName:getClassLoader:[] @AT@ 3662 @LENGTH@ 16
---------------------INS SimpleName@@loader @TO@ SimpleName@@MethodName:forName:[initialContextClassName, true, module.getClassLoader()] @AT@ 3880 @LENGTH@ 6
---------INS Block@@FinallyBody:{  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @TO@ TryStatement@@try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader);  initialContextClass=Class.forName(initialContextClassName,true,loader);  Constructor ctor=initialContextClass.getConstructor(Hashtable.class);  context=(Context)ctor.newInstance(newEnvironment);}  finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @AT@ 4069 @LENGTH@ 114
------------INS ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader) @TO@ Block@@FinallyBody:{  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader);} @AT@ 4087 @LENGTH@ 82
---------------INS MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader) @TO@ ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader) @AT@ 4087 @LENGTH@ 81
------------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader) @AT@ 4087 @LENGTH@ 22
------------------INS SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[currentClassLoader] @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(currentClassLoader) @AT@ 4110 @LENGTH@ 58
---------------------INS SimpleName@@currentClassLoader @TO@ SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[currentClassLoader] @AT@ 4149 @LENGTH@ 18


UPD IfStatement@@if (encode) {  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} else {  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @TO@ if (encode) {  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} else {  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @AT@ 3153 @LENGTH@ 1612
---UPD Block@@ThenBody:{  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} @TO@ ThenBody:{  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} @AT@ 3164 @LENGTH@ 805
------UPD TryStatement@@try {  ModelNode response=new ModelNode();  response.set(msg);  ByteArrayOutputStream bout=new ByteArrayOutputStream();  response.writeBase64(bout);  byte[] bytes=bout.toByteArray();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);} catch (IOException e) {  sendError(exchange,false,msg);} @TO@ try {  ModelNode response=new ModelNode();  response.set(msg);  ByteArrayOutputStream bout=new ByteArrayOutputStream();  response.writeBase64(bout);  byte[] bytes=bout.toByteArray();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);} catch (IOException e) {  sendError(exchange,false,msg);} @AT@ 3179 @LENGTH@ 779
---------UPD ExpressionStatement@@MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8) @TO@ MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8) @AT@ 3461 @LENGTH@ 94
------------UPD MethodInvocation@@exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8) @TO@ exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8) @AT@ 3461 @LENGTH@ 93
---------------UPD SimpleName@@MethodName:put:[Headers.CONTENT_TYPE, APPLICATION_DMR_ENCODED + ";" + UTF_8] @TO@ MethodName:put:[Headers.CONTENT_TYPE, APPLICATION_DMR_ENCODED + "; charset=" + UTF_8] @AT@ 3491 @LENGTH@ 63
------------------UPD InfixExpression@@APPLICATION_DMR_ENCODED + ";" + UTF_8 @TO@ APPLICATION_DMR_ENCODED + "; charset=" + UTF_8 @AT@ 3517 @LENGTH@ 36
---------------------UPD StringLiteral@@";" @TO@ "; charset=" @AT@ 3542 @LENGTH@ 3
---UPD Block@@ElseBody:{  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @TO@ ElseBody:{  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @AT@ 3983 @LENGTH@ 782
------UPD ExpressionStatement@@MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8) @TO@ MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8) @AT@ 4439 @LENGTH@ 82
---------UPD MethodInvocation@@exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8) @TO@ exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8) @AT@ 4439 @LENGTH@ 81
------------UPD SimpleName@@MethodName:put:[Headers.CONTENT_TYPE, TEXT_PLAIN + ";" + UTF_8] @TO@ MethodName:put:[Headers.CONTENT_TYPE, TEXT_PLAIN + "; charset=" + UTF_8] @AT@ 4469 @LENGTH@ 51
---------------UPD InfixExpression@@TEXT_PLAIN + ";" + UTF_8 @TO@ TEXT_PLAIN + "; charset=" + UTF_8 @AT@ 4495 @LENGTH@ 24
------------------UPD StringLiteral@@";" @TO@ "; charset=" @AT@ 4508 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertTrue("Did not find DOCTYPE",out.toString().indexOf(DOCTYPE + "testconfig" + DOCTYPE_DECL) >= 0) @TO@ MethodInvocation:assertThat("Did not find DOCTYPE",out.toString(),containsString(DOCTYPE + "testconfig" + DOCTYPE_DECL)) @AT@ 33836 @LENGTH@ 120
---UPD MethodInvocation@@assertTrue("Did not find DOCTYPE",out.toString().indexOf(DOCTYPE + "testconfig" + DOCTYPE_DECL) >= 0) @TO@ assertThat("Did not find DOCTYPE",out.toString(),containsString(DOCTYPE + "testconfig" + DOCTYPE_DECL)) @AT@ 33836 @LENGTH@ 119
------UPD SimpleName@@MethodName:assertTrue:["Did not find DOCTYPE", out.toString().indexOf(DOCTYPE + "testconfig" + DOCTYPE_DECL) >= 0] @TO@ MethodName:assertThat:["Did not find DOCTYPE", out.toString(), containsString(DOCTYPE + "testconfig" + DOCTYPE_DECL)] @AT@ 33836 @LENGTH@ 119
---------DEL InfixExpression@@out.toString().indexOf(DOCTYPE + "testconfig" + DOCTYPE_DECL) >= 0 @AT@ 33871 @LENGTH@ 83
------------DEL MethodInvocation@@out.toString().indexOf(DOCTYPE + "testconfig" + DOCTYPE_DECL) @AT@ 33871 @LENGTH@ 78
---------------DEL MethodInvocation@@MethodName:toString:[] @AT@ 33871 @LENGTH@ 14
------------DEL Operator@@>= @AT@ 33949 @LENGTH@ 2
------------DEL NumberLiteral@@0 @AT@ 33953 @LENGTH@ 1
---------INS MethodInvocation@@out.toString() @TO@ SimpleName@@MethodName:assertTrue:["Did not find DOCTYPE", out.toString().indexOf(DOCTYPE + "testconfig" + DOCTYPE_DECL) >= 0] @AT@ 33970 @LENGTH@ 14
------------MOV SimpleName@@Name:out @TO@ MethodInvocation@@out.toString() @AT@ 33871 @LENGTH@ 3
------------MOV SimpleName@@Name:out @TO@ MethodInvocation@@out.toString() @AT@ 33871 @LENGTH@ 3
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@out.toString() @AT@ 33974 @LENGTH@ 10
---------INS MethodInvocation@@containsString(DOCTYPE + "testconfig" + DOCTYPE_DECL) @TO@ SimpleName@@MethodName:assertTrue:["Did not find DOCTYPE", out.toString().indexOf(DOCTYPE + "testconfig" + DOCTYPE_DECL) >= 0] @AT@ 33986 @LENGTH@ 70
------------MOV SimpleName@@MethodName:indexOf:[DOCTYPE + "testconfig" + DOCTYPE_DECL] @TO@ MethodInvocation@@containsString(DOCTYPE + "testconfig" + DOCTYPE_DECL) @AT@ 33886 @LENGTH@ 63
------------MOV SimpleName@@MethodName:indexOf:[DOCTYPE + "testconfig" + DOCTYPE_DECL] @TO@ MethodInvocation@@containsString(DOCTYPE + "testconfig" + DOCTYPE_DECL) @AT@ 33886 @LENGTH@ 63


UPD ExpressionStatement@@Assignment:websocket=c.prepareGet("ws://127.0.0.1:" + port + "/pub").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @TO@ Assignment:websocket=c.prepareGet("ws://localhost:" + port + "/pub").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @AT@ 3373 @LENGTH@ 1169
---UPD Assignment@@websocket=c.prepareGet("ws://127.0.0.1:" + port + "/pub").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @TO@ websocket=c.prepareGet("ws://localhost:" + port + "/pub").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @AT@ 3373 @LENGTH@ 1168
------UPD MethodInvocation@@c.prepareGet("ws://127.0.0.1:" + port + "/pub").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @TO@ c.prepareGet("ws://localhost:" + port + "/pub").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @AT@ 3385 @LENGTH@ 1156
---------UPD MethodInvocation@@MethodName:prepareGet:["ws://127.0.0.1:" + port + "/pub"] @TO@ MethodName:prepareGet:["ws://localhost:" + port + "/pub"] @AT@ 3385 @LENGTH@ 47
------------UPD InfixExpression@@"ws://127.0.0.1:" + port + "/pub" @TO@ "ws://localhost:" + port + "/pub" @AT@ 3398 @LENGTH@ 33
---------------UPD StringLiteral@@"ws://127.0.0.1:" @TO@ "ws://localhost:" @AT@ 3398 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:exposesSearchesForRootResources, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @WebAppConfiguration, @ContextConfiguration(classes=RepositoryRestMvcConfiguration.class), public, abstract]AbstractWebIntegrationTests,  @AT@ 8310 @LENGTH@ 316
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:exposesSearchesForRootResources, Exception,  @AT@ 8310 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:exposesSearchesForRootResources, Exception,  @AT@ 8317 @LENGTH@ 4
---INS SimpleName@@MethodName:exposesSearchesForRootResources @TO@ MethodDeclaration@@public, void, MethodName:exposesSearchesForRootResources, Exception,  @AT@ 8322 @LENGTH@ 31
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:exposesSearchesForRootResources, Exception,  @AT@ 8363 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletResponse response=request("/"); @TO@ MethodDeclaration@@public, void, MethodName:exposesSearchesForRootResources, Exception,  @AT@ 8378 @LENGTH@ 48
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=request("/"); @AT@ 8378 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=request("/") @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=request("/"); @AT@ 8402 @LENGTH@ 23
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=request("/") @AT@ 8402 @LENGTH@ 8
---------INS MethodInvocation@@request("/") @TO@ VariableDeclarationFragment@@response=request("/") @AT@ 8413 @LENGTH@ 12
------------INS SimpleName@@MethodName:request:["/"] @TO@ MethodInvocation@@request("/") @AT@ 8413 @LENGTH@ 12
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:request:["/"] @AT@ 8421 @LENGTH@ 3
---INS EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  Link searchLink=assertHasLinkWithRel("search",request(link));  request(searchLink);} @TO@ MethodDeclaration@@public, void, MethodName:exposesSearchesForRootResources, Exception,  @AT@ 8430 @LENGTH@ 193
------INS SingleVariableDeclaration@@String rel @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  Link searchLink=assertHasLinkWithRel("search",request(link));  request(searchLink);} @AT@ 8435 @LENGTH@ 10
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String rel @AT@ 8435 @LENGTH@ 6
---------INS SimpleName@@rel @TO@ SingleVariableDeclaration@@String rel @AT@ 8442 @LENGTH@ 3
------INS MethodInvocation@@MethodName:expectedRootLinkRels:[] @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  Link searchLink=assertHasLinkWithRel("search",request(link));  request(searchLink);} @AT@ 8448 @LENGTH@ 22
------INS VariableDeclarationStatement@@Link link=assertHasLinkWithRel(rel,response); @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  Link searchLink=assertHasLinkWithRel("search",request(link));  request(searchLink);} @AT@ 8478 @LENGTH@ 48
---------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link link=assertHasLinkWithRel(rel,response); @AT@ 8478 @LENGTH@ 4
---------INS VariableDeclarationFragment@@link=assertHasLinkWithRel(rel,response) @TO@ VariableDeclarationStatement@@Link link=assertHasLinkWithRel(rel,response); @AT@ 8483 @LENGTH@ 42
------------INS SimpleName@@link @TO@ VariableDeclarationFragment@@link=assertHasLinkWithRel(rel,response) @AT@ 8483 @LENGTH@ 4
------------INS MethodInvocation@@assertHasLinkWithRel(rel,response) @TO@ VariableDeclarationFragment@@link=assertHasLinkWithRel(rel,response) @AT@ 8490 @LENGTH@ 35
---------------INS SimpleName@@MethodName:assertHasLinkWithRel:[rel, response] @TO@ MethodInvocation@@assertHasLinkWithRel(rel,response) @AT@ 8490 @LENGTH@ 35
------------------INS SimpleName@@rel @TO@ SimpleName@@MethodName:assertHasLinkWithRel:[rel, response] @AT@ 8511 @LENGTH@ 3
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertHasLinkWithRel:[rel, response] @AT@ 8516 @LENGTH@ 8
------INS VariableDeclarationStatement@@Link searchLink=assertHasLinkWithRel("search",request(link)); @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  Link searchLink=assertHasLinkWithRel("search",request(link));  request(searchLink);} @AT@ 8530 @LENGTH@ 64
---------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link searchLink=assertHasLinkWithRel("search",request(link)); @AT@ 8530 @LENGTH@ 4
---------INS VariableDeclarationFragment@@searchLink=assertHasLinkWithRel("search",request(link)) @TO@ VariableDeclarationStatement@@Link searchLink=assertHasLinkWithRel("search",request(link)); @AT@ 8535 @LENGTH@ 58
------------INS SimpleName@@searchLink @TO@ VariableDeclarationFragment@@searchLink=assertHasLinkWithRel("search",request(link)) @AT@ 8535 @LENGTH@ 10
------------INS MethodInvocation@@assertHasLinkWithRel("search",request(link)) @TO@ VariableDeclarationFragment@@searchLink=assertHasLinkWithRel("search",request(link)) @AT@ 8548 @LENGTH@ 45
---------------INS SimpleName@@MethodName:assertHasLinkWithRel:["search", request(link)] @TO@ MethodInvocation@@assertHasLinkWithRel("search",request(link)) @AT@ 8548 @LENGTH@ 45
------------------INS StringLiteral@@"search" @TO@ SimpleName@@MethodName:assertHasLinkWithRel:["search", request(link)] @AT@ 8569 @LENGTH@ 8
------------------INS MethodInvocation@@request(link) @TO@ SimpleName@@MethodName:assertHasLinkWithRel:["search", request(link)] @AT@ 8579 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:request:[link] @TO@ MethodInvocation@@request(link) @AT@ 8579 @LENGTH@ 13
------------------------INS SimpleName@@link @TO@ SimpleName@@MethodName:request:[link] @AT@ 8587 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:request:[link] @TO@ MethodInvocation@@request(link) @AT@ 8579 @LENGTH@ 13
------------------------INS SimpleName@@link @TO@ SimpleName@@MethodName:request:[link] @AT@ 8587 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:request(searchLink) @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  Link searchLink=assertHasLinkWithRel("search",request(link));  request(searchLink);} @AT@ 8599 @LENGTH@ 20
---------INS MethodInvocation@@request(searchLink) @TO@ ExpressionStatement@@MethodInvocation:request(searchLink) @AT@ 8599 @LENGTH@ 19
------------INS SimpleName@@MethodName:request:[searchLink] @TO@ MethodInvocation@@request(searchLink) @AT@ 8599 @LENGTH@ 19
---------------INS SimpleName@@searchLink @TO@ SimpleName@@MethodName:request:[searchLink] @AT@ 8607 @LENGTH@ 10


UPD VariableDeclarationStatement@@int nodeCount=annotationDescriptor.getAnnotationAttributes().getNumber("nodes"); @TO@ int nodeCount=annotationDescriptor.getAnnotationAttributes().getNumber("nodes").intValue(); @AT@ 2162 @LENGTH@ 82
---UPD VariableDeclarationFragment@@nodeCount=annotationDescriptor.getAnnotationAttributes().getNumber("nodes") @TO@ nodeCount=annotationDescriptor.getAnnotationAttributes().getNumber("nodes").intValue() @AT@ 2166 @LENGTH@ 77
------UPD MethodInvocation@@annotationDescriptor.getAnnotationAttributes().getNumber("nodes") @TO@ annotationDescriptor.getAnnotationAttributes().getNumber("nodes").intValue() @AT@ 2178 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:getNumber:["nodes"] @TO@ MethodInvocation@@annotationDescriptor.getAnnotationAttributes().getNumber("nodes") @AT@ 2178 @LENGTH@ 65
------------INS StringLiteral@@"nodes" @TO@ MethodInvocation@@MethodName:getNumber:["nodes"] @AT@ 2235 @LENGTH@ 7
---------DEL SimpleName@@MethodName:getNumber:["nodes"] @AT@ 2225 @LENGTH@ 18
------------DEL StringLiteral@@"nodes" @AT@ 2235 @LENGTH@ 7
---------INS SimpleName@@MethodName:intValue:[] @TO@ MethodInvocation@@annotationDescriptor.getAnnotationAttributes().getNumber("nodes") @AT@ 2244 @LENGTH@ 10


UPD MethodDeclaration@@public, voidMethodName:CRC32VerifyingInputStream, final InputStream in, final int size, final long expectedCrc32,  @TO@ public, voidMethodName:CRC32VerifyingInputStream, final InputStream in, final long size, final int expectedCrc32,  @AT@ 1129 @LENGTH@ 157
---UPD SingleVariableDeclaration@@final int size @TO@ final long size @AT@ 1184 @LENGTH@ 14
------UPD PrimitiveType@@int @TO@ long @AT@ 1190 @LENGTH@ 3
---UPD SingleVariableDeclaration@@final long expectedCrc32 @TO@ final int expectedCrc32 @AT@ 1200 @LENGTH@ 24
------UPD PrimitiveType@@long @TO@ int @AT@ 1206 @LENGTH@ 4


UPD IfStatement@@if (initial == null) {  ProtocolMessages.MESSAGES.nullVar("connectTask");} @TO@ if (initial == null) {  throw ProtocolMessages.MESSAGES.nullVar("connectTask");} @AT@ 1656 @LENGTH@ 93
---UPD Block@@ThenBody:{  ProtocolMessages.MESSAGES.nullVar("connectTask");} @TO@ ThenBody:{  throw ProtocolMessages.MESSAGES.nullVar("connectTask");} @AT@ 1676 @LENGTH@ 73
------INS ThrowStatement@@MethodInvocation:ProtocolMessages.MESSAGES.nullVar("connectTask") @TO@ Block@@ThenBody:{  ProtocolMessages.MESSAGES.nullVar("connectTask");} @AT@ 1690 @LENGTH@ 55
---------MOV MethodInvocation@@ProtocolMessages.MESSAGES.nullVar("connectTask") @TO@ ThrowStatement@@MethodInvocation:ProtocolMessages.MESSAGES.nullVar("connectTask") @AT@ 1690 @LENGTH@ 48
------DEL ExpressionStatement@@MethodInvocation:ProtocolMessages.MESSAGES.nullVar("connectTask") @AT@ 1690 @LENGTH@ 49


UPD ExpressionStatement@@MethodInvocation:assertEquals("newPassword",newAuth.getCredentials()) @TO@ MethodInvocation:assertThat(newAuth.getCredentials()).isNull() @AT@ 6806 @LENGTH@ 54
---UPD MethodInvocation@@assertEquals("newPassword",newAuth.getCredentials()) @TO@ assertThat(newAuth.getCredentials()).isNull() @AT@ 6806 @LENGTH@ 53
------INS MethodInvocation@@MethodName:assertThat:[newAuth.getCredentials()] @TO@ MethodInvocation@@assertEquals("newPassword",newAuth.getCredentials()) @AT@ 6806 @LENGTH@ 36
---------INS MethodInvocation@@newAuth.getCredentials() @TO@ MethodInvocation@@MethodName:assertThat:[newAuth.getCredentials()] @AT@ 6817 @LENGTH@ 24
------------MOV SimpleName@@Name:newAuth @TO@ MethodInvocation@@newAuth.getCredentials() @AT@ 6834 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getCredentials:[] @TO@ MethodInvocation@@newAuth.getCredentials() @AT@ 6842 @LENGTH@ 16
------DEL SimpleName@@MethodName:assertEquals:["newPassword", newAuth.getCredentials()] @AT@ 6806 @LENGTH@ 53
---------DEL StringLiteral@@"newPassword" @AT@ 6819 @LENGTH@ 13
---------DEL MethodInvocation@@newAuth.getCredentials() @AT@ 6834 @LENGTH@ 24
------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertEquals("newPassword",newAuth.getCredentials()) @AT@ 6843 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @TO@ TypeDeclaration@@[public]SimpleTest, LanguageTestSupport @AT@ 9285 @LENGTH@ 354
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9285 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9292 @LENGTH@ 4
---INS SimpleName@@MethodName:testOGNLCallReplace @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9297 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9326 @LENGTH@ 9
---INS VariableDeclarationStatement@@Map<String,Object> map=new HashMap<String,Object>(); @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9346 @LENGTH@ 56
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> map=new HashMap<String,Object>(); @AT@ 9346 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 9346 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 9350 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 9358 @LENGTH@ 6
------INS VariableDeclarationFragment@@map=new HashMap<String,Object>() @TO@ VariableDeclarationStatement@@Map<String,Object> map=new HashMap<String,Object>(); @AT@ 9366 @LENGTH@ 35
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=new HashMap<String,Object>() @AT@ 9366 @LENGTH@ 3
---------INS ClassInstanceCreation@@HashMap<String,Object>[] @TO@ VariableDeclarationFragment@@map=new HashMap<String,Object>() @AT@ 9372 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 9372 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 9376 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 9376 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 9384 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 9392 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:map.put("cool","Camel rocks") @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9411 @LENGTH@ 31
------INS MethodInvocation@@map.put("cool","Camel rocks") @TO@ ExpressionStatement@@MethodInvocation:map.put("cool","Camel rocks") @AT@ 9411 @LENGTH@ 30
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("cool","Camel rocks") @AT@ 9411 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["cool", "Camel rocks"] @TO@ MethodInvocation@@map.put("cool","Camel rocks") @AT@ 9415 @LENGTH@ 26
------------INS StringLiteral@@"cool" @TO@ SimpleName@@MethodName:put:["cool", "Camel rocks"] @AT@ 9419 @LENGTH@ 6
------------INS StringLiteral@@"Camel rocks" @TO@ SimpleName@@MethodName:put:["cool", "Camel rocks"] @AT@ 9427 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:map.put("dude","Hey dude") @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9451 @LENGTH@ 28
------INS MethodInvocation@@map.put("dude","Hey dude") @TO@ ExpressionStatement@@MethodInvocation:map.put("dude","Hey dude") @AT@ 9451 @LENGTH@ 27
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("dude","Hey dude") @AT@ 9451 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["dude", "Hey dude"] @TO@ MethodInvocation@@map.put("dude","Hey dude") @AT@ 9455 @LENGTH@ 23
------------INS StringLiteral@@"dude" @TO@ SimpleName@@MethodName:put:["dude", "Hey dude"] @AT@ 9459 @LENGTH@ 6
------------INS StringLiteral@@"Hey dude" @TO@ SimpleName@@MethodName:put:["dude", "Hey dude"] @AT@ 9467 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeaders(map) @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9488 @LENGTH@ 33
------INS MethodInvocation@@exchange.getIn().setHeaders(map) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeaders(map) @AT@ 9488 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeaders(map) @AT@ 9488 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeaders(map) @AT@ 9488 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeaders:[map] @TO@ MethodInvocation@@exchange.getIn().setHeaders(map) @AT@ 9505 @LENGTH@ 15
------------INS SimpleName@@map @TO@ SimpleName@@MethodName:setHeaders:[map] @AT@ 9516 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertExpression("${headers.cool.replaceAll(\"rocks\", \"is so cool\")}","Camel is so cool") @TO@ MethodDeclaration@@public, void, MethodName:testOGNLCallReplace, Exception,  @AT@ 9539 @LENGTH@ 94
------INS MethodInvocation@@assertExpression("${headers.cool.replaceAll(\"rocks\", \"is so cool\")}","Camel is so cool") @TO@ ExpressionStatement@@MethodInvocation:assertExpression("${headers.cool.replaceAll(\"rocks\", \"is so cool\")}","Camel is so cool") @AT@ 9539 @LENGTH@ 93
---------INS SimpleName@@MethodName:assertExpression:["${headers.cool.replaceAll(\"rocks\", \"is so cool\")}", "Camel is so cool"] @TO@ MethodInvocation@@assertExpression("${headers.cool.replaceAll(\"rocks\", \"is so cool\")}","Camel is so cool") @AT@ 9539 @LENGTH@ 93
------------INS StringLiteral@@"${headers.cool.replaceAll(\"rocks\", \"is so cool\")}" @TO@ SimpleName@@MethodName:assertExpression:["${headers.cool.replaceAll(\"rocks\", \"is so cool\")}", "Camel is so cool"] @AT@ 9556 @LENGTH@ 55
------------INS StringLiteral@@"Camel is so cool" @TO@ SimpleName@@MethodName:assertExpression:["${headers.cool.replaceAll(\"rocks\", \"is so cool\")}", "Camel is so cool"] @AT@ 9613 @LENGTH@ 18


UPD ExpressionStatement@@Assignment:clazz=loader.loadClass(name) @TO@ Assignment:clazz=ObjectHelper.loadClass(name,loader) @AT@ 8026 @LENGTH@ 31
---UPD Assignment@@clazz=loader.loadClass(name) @TO@ clazz=ObjectHelper.loadClass(name,loader) @AT@ 8026 @LENGTH@ 30
------UPD MethodInvocation@@loader.loadClass(name) @TO@ ObjectHelper.loadClass(name,loader) @AT@ 8034 @LENGTH@ 22
---------UPD SimpleName@@Name:loader @TO@ Name:ObjectHelper @AT@ 8034 @LENGTH@ 6
---------UPD SimpleName@@MethodName:loadClass:[name] @TO@ MethodName:loadClass:[name, loader] @AT@ 8041 @LENGTH@ 15
------------INS SimpleName@@loader @TO@ SimpleName@@MethodName:loadClass:[name] @AT@ 8063 @LENGTH@ 6


UPD IfStatement@@if (!ServiceModuleLoader.isDynamicModule(identifier)) {  ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX);} @TO@ if (!ServiceModuleLoader.isDynamicModule(identifier)) {  throw ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX);} @AT@ 5721 @LENGTH@ 169
---UPD Block@@ThenBody:{  ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX);} @TO@ ThenBody:{  throw ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX);} @AT@ 5775 @LENGTH@ 115
------INS ThrowStatement@@MethodInvocation:ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX) @TO@ Block@@ThenBody:{  ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX);} @AT@ 5789 @LENGTH@ 97
---------MOV MethodInvocation@@ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX) @TO@ ThrowStatement@@MethodInvocation:ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX) @AT@ 5789 @LENGTH@ 90
------DEL ExpressionStatement@@MethodInvocation:ServerMessages.MESSAGES.missingModulePrefix(identifier,ServiceModuleLoader.MODULE_PREFIX) @AT@ 5789 @LENGTH@ 91


UPD ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),"utf-8")) @TO@ Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 4434 @LENGTH@ 90
---UPD Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),"utf-8")) @TO@ reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 4434 @LENGTH@ 89
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),"utf-8")] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 4443 @LENGTH@ 80
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), "utf-8"] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 4462 @LENGTH@ 60
------------DEL StringLiteral@@"utf-8" @AT@ 4514 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), "utf-8"] @AT@ 4556 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4556 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4573 @LENGTH@ 5


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 4721 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4724 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4724 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4724 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4731 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4751 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4755 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4761 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 4923 @LENGTH@ 53


UPD VariableDeclarationStatement@@final HttpClient client=new HttpClient(); @TO@ HttpClient client=new HttpClient(); @AT@ 2627 @LENGTH@ 43
---DEL Modifier@@final @AT@ 2627 @LENGTH@ 5


UPD TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    FabricService fabricService=fabricProxy.getService();    CuratorFramework curator=curatorProxy.getService();    prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");    prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");    prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");    prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");    prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");    prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");    prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");    prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");    prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");    prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");    prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");    prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");    prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");    prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");    prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");    prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");    prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");    prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");    prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");    prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");    prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");    prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");    prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");    prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");    prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");    prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");    prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");    prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");    prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");    prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");    prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");    prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");    prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");    prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");    prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");    prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");    prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");    prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");    prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");    prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");    prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");    prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");    prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");    prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");    prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");    prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");    prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");    prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");    prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");    prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");    prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");    prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");    prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");    prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");    prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");    prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");    prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");    prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");    prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");    prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");    prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");    prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");    prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");    prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");    prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");    prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");    prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");    prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");    prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");    prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");    prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");    prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");    prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");    prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");    prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");    prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");    prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");    prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");    prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");    prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");    prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");    prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");    prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");    prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");    prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");    assertFeatures(fabricService,curator);  }  finally {    fabricProxy.close();    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=fabricService.adapt(CuratorFramework.class);  Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build();  try {    prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");    prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");    prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");    prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");    prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");    prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");    prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");    prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");    prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");    prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");    prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");    prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");    prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");    prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");    prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");    prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");    prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");    prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");    prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");    prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");    prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");    prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");    prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");    prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");    prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");    prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");    prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");    prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");    prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");    prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");    prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");    prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");    prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");    prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");    prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");    prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");    prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");    prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");    prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");    prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");    prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");    prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");    prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");    prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");    prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");    prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");    prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");    prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");    prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");    prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");    prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");    prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");    prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");    prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");    prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");    prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");    prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");    prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");    prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");    prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");    prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");    prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");    prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");    prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");    prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");    prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");    prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");    prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");    prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");    prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");    prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");    prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");    prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");    prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");    prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");    prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");    prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");    prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");    prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");    prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");    prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");    prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");    prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");    prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");    prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");    assertFeatures(fabricService,curator);  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 1088 @LENGTH@ 11086
---DEL ExpressionStatement@@Assignment:containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build() @AT@ 1106 @LENGTH@ 135
------DEL Assignment@@containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build() @AT@ 1106 @LENGTH@ 134
---------DEL SimpleName@@containers @AT@ 1106 @LENGTH@ 10
---------DEL Operator@@= @AT@ 1116 @LENGTH@ 1
---INS VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    FabricService fabricService=fabricProxy.getService();    CuratorFramework curator=curatorProxy.getService();    prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");    prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");    prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");    prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");    prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");    prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");    prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");    prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");    prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");    prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");    prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");    prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");    prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");    prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");    prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");    prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");    prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");    prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");    prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");    prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");    prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");    prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");    prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");    prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");    prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");    prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");    prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");    prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");    prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");    prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");    prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");    prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");    prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");    prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");    prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");    prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");    prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");    prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");    prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");    prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");    prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");    prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");    prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");    prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");    prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");    prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");    prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");    prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");    prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");    prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");    prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");    prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");    prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");    prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");    prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");    prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");    prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");    prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");    prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");    prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");    prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");    prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");    prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");    prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");    prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");    prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");    prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");    prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");    prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");    prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");    prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");    prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");    prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");    prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");    prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");    prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");    prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");    prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");    prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");    prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");    prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");    prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");    prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");    prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");    prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");    assertFeatures(fabricService,curator);  }  finally {    fabricProxy.close();    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 1179 @LENGTH@ 155
------INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build(); @AT@ 1179 @LENGTH@ 19
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1179 @LENGTH@ 3
---------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1183 @LENGTH@ 14
------INS VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build() @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build(); @AT@ 1199 @LENGTH@ 134
---------MOV MethodInvocation@@ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build() @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build() @AT@ 1119 @LENGTH@ 121
---------INS SimpleName@@containers @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build() @AT@ 1199 @LENGTH@ 10
---UPD VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @TO@ CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 1254 @LENGTH@ 117
------INS SimpleType@@CuratorFramework @TO@ VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @AT@ 1094 @LENGTH@ 16
------DEL ParameterizedType@@ServiceProxy<CuratorFramework> @AT@ 1254 @LENGTH@ 30
---------DEL SimpleType@@ServiceProxy @AT@ 1254 @LENGTH@ 12
---------DEL SimpleType@@CuratorFramework @AT@ 1267 @LENGTH@ 16
------UPD VariableDeclarationFragment@@curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @TO@ curator=fabricService.adapt(CuratorFramework.class) @AT@ 1285 @LENGTH@ 85
---------UPD SimpleName@@curatorProxy @TO@ curator @AT@ 1285 @LENGTH@ 12
---------UPD MethodInvocation@@ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @TO@ fabricService.adapt(CuratorFramework.class) @AT@ 1300 @LENGTH@ 70
------------UPD SimpleName@@Name:ServiceProxy @TO@ Name:fabricService @AT@ 1300 @LENGTH@ 12
------------UPD SimpleName@@MethodName:createServiceProxy:[bundleContext, CuratorFramework.class] @TO@ MethodName:adapt:[CuratorFramework.class] @AT@ 1313 @LENGTH@ 57
---------------DEL SimpleName@@bundleContext @AT@ 1332 @LENGTH@ 13
---UPD TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");  prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");  prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");  prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");  prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");  prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");  prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");  prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");  prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");  prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");  prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");  prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");  prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");  prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");  prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");  prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");  prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");  prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");  prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");  prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");  prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");  prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");  prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");  prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");  prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");  prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");  prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");  prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");  prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");  prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");  prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");  prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");  prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");  prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");  prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");  prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");  prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");  prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");  prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");  prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");  prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");  prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");  prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");  prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");  prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");  prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");  prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");  prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");  prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");  prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");  prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");  prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");  prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");  prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");  prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");  prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");  prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");  prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");  prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");  prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");  prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");  prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");  prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");  prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");  prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");  prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");  prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");  prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");  prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");  prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");  prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");  prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");  prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");  prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");  prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");  prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");  prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");  prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");  prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");  prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");  prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");  prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");  prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");  prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");  prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");  assertFeatures(fabricService,curator);}  finally {  fabricProxy.close();  curatorProxy.close();} @TO@ try {  prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");  prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");  prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");  prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");  prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");  prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");  prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");  prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");  prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");  prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");  prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");  prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");  prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");  prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");  prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");  prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");  prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");  prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");  prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");  prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");  prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");  prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");  prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");  prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");  prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");  prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");  prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");  prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");  prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");  prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");  prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");  prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");  prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");  prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");  prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");  prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");  prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");  prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");  prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");  prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");  prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");  prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");  prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");  prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");  prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");  prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");  prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");  prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");  prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");  prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");  prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");  prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");  prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");  prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");  prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");  prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");  prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");  prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");  prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");  prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");  prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");  prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");  prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");  prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");  prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");  prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");  prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");  prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");  prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");  prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");  prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");  prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");  prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");  prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");  prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");  prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");  prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");  prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");  prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");  prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");  prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");  prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");  prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");  prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");  prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");  assertFeatures(fabricService,curator);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 1384 @LENGTH@ 10710
------DEL VariableDeclarationStatement@@CuratorFramework curator=curatorProxy.getService(); @AT@ 1478 @LENGTH@ 53
---------DEL SimpleType@@CuratorFramework @AT@ 1478 @LENGTH@ 16
---------DEL VariableDeclarationFragment@@curator=curatorProxy.getService() @AT@ 1495 @LENGTH@ 35
------------DEL SimpleName@@curator @AT@ 1495 @LENGTH@ 7
------------DEL MethodInvocation@@curatorProxy.getService() @AT@ 1505 @LENGTH@ 25
------MOV ExpressionStatement@@MethodInvocation:prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http") @TO@ TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");  prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");  prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");  prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");  prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");  prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");  prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");  prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");  prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");  prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");  prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");  prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");  prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");  prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");  prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");  prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");  prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");  prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");  prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");  prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");  prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");  prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");  prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");  prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");  prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");  prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");  prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");  prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");  prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");  prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");  prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");  prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");  prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");  prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");  prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");  prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");  prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");  prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");  prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");  prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");  prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");  prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");  prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");  prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");  prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");  prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");  prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");  prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");  prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");  prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");  prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");  prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");  prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");  prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");  prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");  prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");  prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");  prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");  prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");  prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");  prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");  prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");  prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");  prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");  prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");  prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");  prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");  prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");  prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");  prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");  prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");  prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");  prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");  prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");  prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");  prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");  prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");  prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");  prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");  prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");  prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");  prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");  prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");  prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");  prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");  assertFeatures(fabricService,curator);}  finally {  fabricProxy.close();  curatorProxy.close();} @AT@ 1756 @LENGTH@ 83
------MOV ExpressionStatement@@MethodInvocation:prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http") @TO@ TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");  prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");  prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");  prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");  prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");  prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");  prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");  prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");  prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");  prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");  prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");  prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");  prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");  prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");  prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");  prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");  prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");  prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");  prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");  prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");  prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");  prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");  prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");  prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");  prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");  prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");  prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");  prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");  prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");  prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");  prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");  prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");  prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");  prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");  prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");  prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");  prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");  prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");  prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");  prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");  prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");  prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");  prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");  prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");  prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");  prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");  prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");  prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");  prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");  prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");  prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");  prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");  prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");  prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");  prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");  prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");  prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");  prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");  prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");  prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");  prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");  prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");  prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");  prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");  prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");  prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");  prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");  prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");  prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");  prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");  prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");  prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");  prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");  prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");  prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");  prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");  prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");  prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");  prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");  prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");  prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");  prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");  prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");  prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");  prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");  assertFeatures(fabricService,curator);}  finally {  fabricProxy.close();  curatorProxy.close();} @AT@ 2161 @LENGTH@ 83
------MOV ExpressionStatement@@MethodInvocation:prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql") @TO@ TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");  prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");  prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");  prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");  prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");  prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");  prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");  prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");  prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");  prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");  prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");  prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");  prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");  prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");  prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");  prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");  prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");  prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");  prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");  prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");  prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");  prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");  prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");  prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");  prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");  prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");  prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");  prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");  prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");  prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");  prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");  prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");  prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");  prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");  prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");  prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");  prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");  prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");  prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");  prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");  prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");  prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");  prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");  prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");  prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");  prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");  prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");  prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");  prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");  prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");  prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");  prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");  prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");  prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");  prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");  prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");  prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");  prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");  prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");  prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");  prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");  prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");  prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");  prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");  prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");  prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");  prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");  prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");  prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");  prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");  prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");  prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");  prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");  prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");  prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");  prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");  prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");  prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");  prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");  prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");  prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");  prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");  prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");  prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");  prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");  assertFeatures(fabricService,curator);}  finally {  fabricProxy.close();  curatorProxy.close();} @AT@ 6051 @LENGTH@ 85
------UPD Block@@FinallyBody:{  fabricProxy.close();  curatorProxy.close();} @TO@ FinallyBody:{  fabricProxy.close();} @AT@ 12004 @LENGTH@ 90
------MOV Block@@FinallyBody:{  ContainerBuilder.destroy(containers);} @TO@ TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");  prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");  prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");  prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");  prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");  prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");  prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");  prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");  prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");  prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");  prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");  prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");  prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");  prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");  prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");  prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");  prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");  prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");  prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");  prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");  prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");  prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");  prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");  prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");  prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");  prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");  prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");  prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");  prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");  prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");  prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");  prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");  prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");  prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");  prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");  prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");  prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");  prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");  prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");  prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");  prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");  prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");  prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");  prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");  prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");  prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");  prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");  prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");  prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");  prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");  prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");  prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");  prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");  prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");  prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");  prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");  prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");  prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");  prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");  prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");  prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");  prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");  prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");  prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");  prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");  prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");  prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");  prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");  prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");  prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");  prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");  prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");  prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");  prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");  prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");  prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");  prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");  prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");  prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");  prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");  prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");  prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");  prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");  prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");  prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");  prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");  prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");  prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");  prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");  prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");  assertFeatures(fabricService,curator);}  finally {  fabricProxy.close();  curatorProxy.close();} @AT@ 12113 @LENGTH@ 61
---MOV VariableDeclarationStatement@@FabricService fabricService=fabricProxy.getService(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    FabricService fabricService=fabricProxy.getService();    CuratorFramework curator=curatorProxy.getService();    prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");    prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");    prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");    prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");    prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");    prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");    prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");    prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");    prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");    prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");    prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");    prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");    prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");    prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");    prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");    prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");    prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");    prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");    prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");    prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");    prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");    prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");    prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");    prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");    prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");    prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");    prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");    prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");    prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");    prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");    prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");    prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");    prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");    prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");    prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");    prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");    prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");    prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");    prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");    prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");    prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");    prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");    prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");    prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");    prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");    prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");    prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");    prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");    prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");    prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");    prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");    prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");    prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");    prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");    prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");    prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");    prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");    prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");    prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");    prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");    prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");    prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");    prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");    prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");    prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");    prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");    prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");    prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");    prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");    prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");    prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");    prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");    prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");    prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");    prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");    prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");    prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");    prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");    prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");    prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");    prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");    prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");    prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");    prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");    prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");    assertFeatures(fabricService,curator);  }  finally {    fabricProxy.close();    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 1406 @LENGTH@ 55
---MOV Block@@FinallyBody:{  fabricProxy.close();  curatorProxy.close();} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("feautre-camel").withProfiles("default").assertProvisioningResult().build();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    FabricService fabricService=fabricProxy.getService();    CuratorFramework curator=curatorProxy.getService();    prepareFeaturesForTesting(containers,"camel-blueprint","feautre-camel","camel-blueprint");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-cxf","feautre-camel","camel-cxf");    prepareFeaturesForTesting(containers,"camel-cache","feautre-camel","camel-cache");    prepareFeaturesForTesting(containers,"camel-castor","feautre-camel","camel-castor");    prepareFeaturesForTesting(containers,"camel-http","feautre-camel","camel-http");    prepareFeaturesForTesting(containers,"camel-http4","feautre-camel","camel-http4");    prepareFeaturesForTesting(containers,"camel-mina","feautre-camel","camel-mina");    prepareFeaturesForTesting(containers,"camel-jetty","feautre-camel","camel-jetty");    prepareFeaturesForTesting(containers,"camel-servlet","feautre-camel","camel-servlet");    prepareFeaturesForTesting(containers,"camel-jms","feautre-camel","camel-jms");    prepareFeaturesForTesting(containers,"camel-jmx","feautre-camel","camel-jmx");    prepareFeaturesForTesting(containers,"camel-ahc","feautre-camel","camel-ahc");    prepareFeaturesForTesting(containers,"camel-amqp","feautre-camel","camel-amqp");    prepareFeaturesForTesting(containers,"camel-atom","feautre-camel","camel-atom");    prepareFeaturesForTesting(containers,"camel-aws","feautre-camel","camel-aws");    prepareFeaturesForTesting(containers,"camel-bam","feautre-camel","camel-bam");    prepareFeaturesForTesting(containers,"camel-bean-validator","feautre-camel","camel-bean-validator");    prepareFeaturesForTesting(containers,"camel-bindy","feautre-camel","camel-bindy");    prepareFeaturesForTesting(containers,"camel-cometd","feautre-camel","camel-cometd");    prepareFeaturesForTesting(containers,"camel-csv","feautre-camel","camel-csv");    prepareFeaturesForTesting(containers,"camel-dozer","feautre-camel","camel-dozer");    prepareFeaturesForTesting(containers,"camel-eventadmin","feautre-camel","camel-eventadmin");    prepareFeaturesForTesting(containers,"camel-exec","feautre-camel","camel-exec");    prepareFeaturesForTesting(containers,"camel-flatpack","feautre-camel","camel-flatpack");    prepareFeaturesForTesting(containers,"camel-freemarker","feautre-camel","camel-freemarker");    prepareFeaturesForTesting(containers,"camel-ftp","feautre-camel","camel-ftp");    prepareFeaturesForTesting(containers,"camel-guice","feautre-camel","camel-guice");    prepareFeaturesForTesting(containers,"camel-groovy","feautre-camel","camel-groovy");    prepareFeaturesForTesting(containers,"camel-hazelcast","feautre-camel","camel-hazelcast");    prepareFeaturesForTesting(containers,"camel-hawtdb","feautre-camel","camel-hawtdb");    prepareFeaturesForTesting(containers,"camel-hdfs","feautre-camel","camel-hdfs");    prepareFeaturesForTesting(containers,"camel-hl7","feautre-camel","camel-hl7");    prepareFeaturesForTesting(containers,"camel-ibatis","feautre-camel","camel-ibatis");    prepareFeaturesForTesting(containers,"camel-irc","feautre-camel","camel-irc");    prepareFeaturesForTesting(containers,"camel-jackson","feautre-camel","camel-jackson");    prepareFeaturesForTesting(containers,"camel-jasypt","feautre-camel","camel-jasypt");    prepareFeaturesForTesting(containers,"camel-jaxb","feautre-camel","camel-jaxb");    prepareFeaturesForTesting(containers,"camel-jclouds","feautre-camel","camel-jclouds");    prepareFeaturesForTesting(containers,"camel-jcr","feautre-camel","camel-jcr");    prepareFeaturesForTesting(containers,"camel-jing","feautre-camel","camel-jing");    prepareFeaturesForTesting(containers,"camel-jibx","feautre-camel","camel-jibx");    prepareFeaturesForTesting(containers,"camel-jdbc","feautre-camel","camel-jdbc");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-josql","feautre-camel","camel-josql");    prepareFeaturesForTesting(containers,"camel-jpa","feautre-camel","camel-jpa");    prepareFeaturesForTesting(containers,"camel-jxpath","feautre-camel","camel-jxpath");    prepareFeaturesForTesting(containers,"camel-juel","feautre-camel","camel-juel");    prepareFeaturesForTesting(containers,"camel-kestrel","feautre-camel","camel-kestrel");    prepareFeaturesForTesting(containers,"camel-krati","feautre-camel","camel-krati");    prepareFeaturesForTesting(containers,"camel-ldap","feautre-camel","camel-ldap");    prepareFeaturesForTesting(containers,"camel-lucene","feautre-camel","camel-lucene");    prepareFeaturesForTesting(containers,"camel-mail","feautre-camel","camel-mail");    prepareFeaturesForTesting(containers,"camel-msv","feautre-camel","camel-msv");    prepareFeaturesForTesting(containers,"camel-mvel","feautre-camel","camel-mvel");    prepareFeaturesForTesting(containers,"camel-mybatis","feautre-camel","camel-mybatis");    prepareFeaturesForTesting(containers,"camel-nagios","feautre-camel","camel-nagios");    prepareFeaturesForTesting(containers,"camel-netty","feautre-camel","camel-netty");    prepareFeaturesForTesting(containers,"camel-ognl","feautre-camel","camel-ognl");    prepareFeaturesForTesting(containers,"camel-paxlogging","feautre-camel","camel-paxlogging");    prepareFeaturesForTesting(containers,"camel-printer","feautre-camel","camel-printer");    prepareFeaturesForTesting(containers,"camel-protobuf","feautre-camel","camel-protobuf");    prepareFeaturesForTesting(containers,"camel-quartz","feautre-camel","camel-quartz");    prepareFeaturesForTesting(containers,"camel-quickfix","feautre-camel","camel-quickfix");    prepareFeaturesForTesting(containers,"camel-restlet","feautre-camel","camel-restlet");    prepareFeaturesForTesting(containers,"camel-rmi","feautre-camel","camel-rmi");    prepareFeaturesForTesting(containers,"camel-routebox","feautre-camel","camel-routebox");    prepareFeaturesForTesting(containers,"camel-ruby","feautre-camel","org.jruby.jruby");    prepareFeaturesForTesting(containers,"camel-rss","feautre-camel","camel-rss");    prepareFeaturesForTesting(containers,"camel-saxon","feautre-camel","camel-saxon");    prepareFeaturesForTesting(containers,"camel-scala","feautre-camel","camel-scala");    prepareFeaturesForTesting(containers,"camel-script","feautre-camel","camel-script");    prepareFeaturesForTesting(containers,"camel-sip","feautre-camel","camel-sip");    prepareFeaturesForTesting(containers,"camel-shiro","feautre-camel","camel-shiro");    prepareFeaturesForTesting(containers,"camel-smpp","feautre-camel","camel-smpp");    prepareFeaturesForTesting(containers,"camel-snmp","feautre-camel","camel-snmp");    prepareFeaturesForTesting(containers,"camel-soap","feautre-camel","camel-soap");    prepareFeaturesForTesting(containers,"camel-solr","feautre-camel","camel-solr");    prepareFeaturesForTesting(containers,"camel-spring-integration","feautre-camel","camel-spring-integration");    prepareFeaturesForTesting(containers,"camel-spring-javaconfig","feautre-camel","camel-spring-javaconfig");    prepareFeaturesForTesting(containers,"camel-spring-security","feautre-camel","camel-spring-security");    prepareFeaturesForTesting(containers,"camel-spring-ws","feautre-camel","camel-spring-ws");    prepareFeaturesForTesting(containers,"camel-sql","feautre-camel","camel-sql");    prepareFeaturesForTesting(containers,"camel-stax","feautre-camel","camel-stax");    prepareFeaturesForTesting(containers,"camel-stream","feautre-camel","camel-stream");    prepareFeaturesForTesting(containers,"camel-string-template","feautre-camel","org.apache.servicemix.bundles.stringtemplate");    prepareFeaturesForTesting(containers,"camel-syslog","feautre-camel","camel-syslog");    prepareFeaturesForTesting(containers,"camel-tagsoup","feautre-camel","camel-tagsoup");    prepareFeaturesForTesting(containers,"camel-velocity","feautre-camel","camel-velocity");    prepareFeaturesForTesting(containers,"camel-xmlbeans","feautre-camel","camel-xmlbeans");    prepareFeaturesForTesting(containers,"camel-xmlsecurity","feautre-camel","camel-xmlsecurity");    prepareFeaturesForTesting(containers,"camel-xmpp","feautre-camel","camel-xmpp");    prepareFeaturesForTesting(containers,"camel-xstream","feautre-camel","camel-xstream");    prepareFeaturesForTesting(containers,"camel-zookeeper","feautre-camel","camel-zookeeper");    assertFeatures(fabricService,curator);  }  finally {    fabricProxy.close();    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 12004 @LENGTH@ 90
------DEL ExpressionStatement@@MethodInvocation:curatorProxy.close() @AT@ 12059 @LENGTH@ 21
---------DEL MethodInvocation@@curatorProxy.close() @AT@ 12059 @LENGTH@ 20
------------DEL SimpleName@@Name:curatorProxy @AT@ 12059 @LENGTH@ 12
------------DEL SimpleName@@MethodName:close:[] @AT@ 12072 @LENGTH@ 7


INS FieldDeclaration@@String, [id] @TO@ TypeDeclaration@@[static]Foo,  @AT@ 3121 @LENGTH@ 10
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [id] @AT@ 3121 @LENGTH@ 6
---INS VariableDeclarationFragment@@id @TO@ FieldDeclaration@@String, [id] @AT@ 3128 @LENGTH@ 2
------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id @AT@ 3128 @LENGTH@ 2


INS FieldDeclaration@@List<Model>, [listOfInterface] @TO@ TypeDeclaration@@[static]ParentClass,  @AT@ 13802 @LENGTH@ 28
---INS ParameterizedType@@List<Model> @TO@ FieldDeclaration@@List<Model>, [listOfInterface] @AT@ 13802 @LENGTH@ 11
------INS SimpleType@@List @TO@ ParameterizedType@@List<Model> @AT@ 13802 @LENGTH@ 4
------INS SimpleType@@Model @TO@ ParameterizedType@@List<Model> @AT@ 13807 @LENGTH@ 5
---INS VariableDeclarationFragment@@listOfInterface @TO@ FieldDeclaration@@List<Model>, [listOfInterface] @AT@ 13814 @LENGTH@ 15
------INS SimpleName@@listOfInterface @TO@ VariableDeclarationFragment@@listOfInterface @AT@ 13814 @LENGTH@ 15


UPD VariableDeclarationStatement@@List<ExecJob> jobs=ctx.getBean("pig-scripts",List.class); @TO@ @SuppressWarnings("unchecked") List<ExecJob> jobs=ctx.getBean("pig-scripts",List.class); @AT@ 3571 @LENGTH@ 60


INS MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @TO@ TypeDeclaration@@[public]JwtTokenStoreTests,  @AT@ 4572 @LENGTH@ 404
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4572 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4579 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadRefreshTokenForUnapprovedScope @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4584 @LENGTH@ 38
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4632 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:tokenStore.setApprovalStore(approvalStore) @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4646 @LENGTH@ 43
------INS MethodInvocation@@tokenStore.setApprovalStore(approvalStore) @TO@ ExpressionStatement@@MethodInvocation:tokenStore.setApprovalStore(approvalStore) @AT@ 4646 @LENGTH@ 42
---------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.setApprovalStore(approvalStore) @AT@ 4646 @LENGTH@ 10
---------INS SimpleName@@MethodName:setApprovalStore:[approvalStore] @TO@ MethodInvocation@@tokenStore.setApprovalStore(approvalStore) @AT@ 4657 @LENGTH@ 31
------------INS SimpleName@@approvalStore @TO@ SimpleName@@MethodName:setApprovalStore:[approvalStore] @AT@ 4674 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:approvalStore.addApprovals(Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED))) @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4692 @LENGTH@ 124
------INS MethodInvocation@@approvalStore.addApprovals(Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED))) @TO@ ExpressionStatement@@MethodInvocation:approvalStore.addApprovals(Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED))) @AT@ 4692 @LENGTH@ 123
---------INS SimpleName@@Name:approvalStore @TO@ MethodInvocation@@approvalStore.addApprovals(Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED))) @AT@ 4692 @LENGTH@ 13
---------INS SimpleName@@MethodName:addApprovals:[Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED))] @TO@ MethodInvocation@@approvalStore.addApprovals(Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED))) @AT@ 4706 @LENGTH@ 109
------------INS MethodInvocation@@Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED)) @TO@ SimpleName@@MethodName:addApprovals:[Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED))] @AT@ 4719 @LENGTH@ 95
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED)) @AT@ 4719 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:[new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED)] @TO@ MethodInvocation@@Collections.singleton(new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED)) @AT@ 4731 @LENGTH@ 83
------------------INS ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @TO@ SimpleName@@MethodName:singleton:[new Approval("test","id","write",new Date(),ApprovalStatus.APPROVED)] @AT@ 4741 @LENGTH@ 72
---------------------INS New@@new @TO@ ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @AT@ 4741 @LENGTH@ 3
---------------------INS SimpleType@@Approval @TO@ ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @AT@ 4745 @LENGTH@ 8
---------------------INS StringLiteral@@"test" @TO@ ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @AT@ 4754 @LENGTH@ 6
---------------------INS StringLiteral@@"id" @TO@ ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @AT@ 4762 @LENGTH@ 4
---------------------INS StringLiteral@@"write" @TO@ ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @AT@ 4768 @LENGTH@ 7
---------------------INS ClassInstanceCreation@@Date[] @TO@ ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @AT@ 4777 @LENGTH@ 10
------------------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 4777 @LENGTH@ 3
------------------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 4781 @LENGTH@ 4
---------------------INS QualifiedName@@ApprovalStatus.APPROVED @TO@ ClassInstanceCreation@@Approval["test", "id", "write", new Date(), ApprovalStatus.APPROVED] @AT@ 4789 @LENGTH@ 23
------------------------INS SimpleName@@ApprovalStatus @TO@ QualifiedName@@ApprovalStatus.APPROVED @AT@ 4789 @LENGTH@ 14
------------------------INS SimpleName@@APPROVED @TO@ QualifiedName@@ApprovalStatus.APPROVED @AT@ 4804 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,approvalStore.getApprovals("test","id").size()) @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4819 @LENGTH@ 65
------INS MethodInvocation@@assertEquals(1,approvalStore.getApprovals("test","id").size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,approvalStore.getApprovals("test","id").size()) @AT@ 4819 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertEquals:[1, approvalStore.getApprovals("test","id").size()] @TO@ MethodInvocation@@assertEquals(1,approvalStore.getApprovals("test","id").size()) @AT@ 4819 @LENGTH@ 64
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, approvalStore.getApprovals("test","id").size()] @AT@ 4832 @LENGTH@ 1
------------INS MethodInvocation@@approvalStore.getApprovals("test","id").size() @TO@ SimpleName@@MethodName:assertEquals:[1, approvalStore.getApprovals("test","id").size()] @AT@ 4835 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:getApprovals:["test", "id"] @TO@ MethodInvocation@@approvalStore.getApprovals("test","id").size() @AT@ 4835 @LENGTH@ 40
------------------INS StringLiteral@@"test" @TO@ MethodInvocation@@MethodName:getApprovals:["test", "id"] @AT@ 4862 @LENGTH@ 6
------------------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:getApprovals:["test", "id"] @AT@ 4870 @LENGTH@ 4
---------------INS SimpleName@@Name:approvalStore @TO@ MethodInvocation@@approvalStore.getApprovals("test","id").size() @AT@ 4835 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@approvalStore.getApprovals("test","id").size() @AT@ 4876 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(null,tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue())) @TO@ MethodDeclaration@@public, void, MethodName:testReadRefreshTokenForUnapprovedScope, Exception,  @AT@ 4887 @LENGTH@ 86
------INS MethodInvocation@@assertEquals(null,tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue())) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(null,tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue())) @AT@ 4887 @LENGTH@ 85
---------INS SimpleName@@MethodName:assertEquals:[null, tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue())] @TO@ MethodInvocation@@assertEquals(null,tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue())) @AT@ 4887 @LENGTH@ 85
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:assertEquals:[null, tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue())] @AT@ 4900 @LENGTH@ 4
------------INS MethodInvocation@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) @TO@ SimpleName@@MethodName:assertEquals:[null, tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue())] @AT@ 4906 @LENGTH@ 65
---------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) @AT@ 4906 @LENGTH@ 10
---------------INS SimpleName@@MethodName:readRefreshToken:[expectedOAuth2AccessToken.getValue()] @TO@ MethodInvocation@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) @AT@ 4917 @LENGTH@ 54
------------------INS MethodInvocation@@expectedOAuth2AccessToken.getValue() @TO@ SimpleName@@MethodName:readRefreshToken:[expectedOAuth2AccessToken.getValue()] @AT@ 4934 @LENGTH@ 36
---------------------INS SimpleName@@Name:expectedOAuth2AccessToken @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 4934 @LENGTH@ 25
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 4960 @LENGTH@ 10


DEL TryStatement@@try {  return new ByteArrayInputStream(html.getBytes("UTF-8"));} catch (UnsupportedEncodingException e) {  throw new RuntimeException(e);} @AT@ 6489 @LENGTH@ 210
---DEL ReturnStatement@@ClassInstanceCreation:new ByteArrayInputStream(html.getBytes("UTF-8")) @AT@ 6515 @LENGTH@ 56
---DEL CatchClause@@catch (UnsupportedEncodingException e) {  throw new RuntimeException(e);} @AT@ 6590 @LENGTH@ 109
------DEL SingleVariableDeclaration@@UnsupportedEncodingException e @AT@ 6597 @LENGTH@ 30
---------DEL SimpleType@@UnsupportedEncodingException @AT@ 6597 @LENGTH@ 28
---------DEL SimpleName@@e @AT@ 6626 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 6651 @LENGTH@ 30
---------DEL ClassInstanceCreation@@RuntimeException[e] @AT@ 6657 @LENGTH@ 23
------------DEL New@@new @AT@ 6657 @LENGTH@ 3
------------DEL SimpleType@@RuntimeException @AT@ 6661 @LENGTH@ 16
------------DEL SimpleName@@e @AT@ 6678 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child><c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>") @TO@ MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" + "<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>") @AT@ 5562 @LENGTH@ 247
---UPD MethodInvocation@@template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child><c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>") @TO@ template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" + "<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>") @AT@ 5562 @LENGTH@ 246
------UPD SimpleName@@MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child><c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>"] @TO@ MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" + "<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>"] @AT@ 5571 @LENGTH@ 237
---------DEL StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child><c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>" @AT@ 5608 @LENGTH@ 199
---------INS InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" + "<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child><c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>"] @AT@ 5625 @LENGTH@ 216
------------INS StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" + "<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>" @AT@ 5625 @LENGTH@ 131
------------INS Operator@@+ @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" + "<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>" @AT@ 5756 @LENGTH@ 1
------------INS StringLiteral@@"<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>" @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child xmlns:c='urn:c' some_attr='a' anotherAttr='a'></c:child>" + "<c:child xmlns:c='urn:c' some_attr='b' anotherAttr='b' /></c:parent>" @AT@ 5771 @LENGTH@ 70


UPD ExpressionStatement@@MethodInvocation:http.requestMatchers().antMatchers("/photos/**").and().authorizeRequests().antMatchers("/photos").access("hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("hasRole('ROLE_USER')").antMatchers("/photos/user/**").access("hasRole('ROLE_USER')").antMatchers("/photos/**").access("hasRole('ROLE_USER')") @TO@ MethodInvocation:http.requestMatchers().antMatchers("/photos/**","/me").and().authorizeRequests().antMatchers("/me").access("hasRole('ROLE_USER')").antMatchers("/photos").access("hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("hasRole('ROLE_USER')").antMatchers("/photos/user/**").access("hasRole('ROLE_USER')").antMatchers("/photos/**").access("hasRole('ROLE_USER')") @AT@ 3012 @LENGTH@ 347
---UPD MethodInvocation@@http.requestMatchers().antMatchers("/photos/**").and().authorizeRequests().antMatchers("/photos").access("hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("hasRole('ROLE_USER')").antMatchers("/photos/user/**").access("hasRole('ROLE_USER')").antMatchers("/photos/**").access("hasRole('ROLE_USER')") @TO@ http.requestMatchers().antMatchers("/photos/**","/me").and().authorizeRequests().antMatchers("/me").access("hasRole('ROLE_USER')").antMatchers("/photos").access("hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("hasRole('ROLE_USER')").antMatchers("/photos/user/**").access("hasRole('ROLE_USER')").antMatchers("/photos/**").access("hasRole('ROLE_USER')") @AT@ 3012 @LENGTH@ 346
------INS MethodInvocation@@MethodName:access:["hasRole('ROLE_USER')"] @TO@ MethodInvocation@@http.requestMatchers().antMatchers("/photos/**").and().authorizeRequests().antMatchers("/photos").access("hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("hasRole('ROLE_USER')").antMatchers("/photos/user/**").access("hasRole('ROLE_USER')").antMatchers("/photos/**").access("hasRole('ROLE_USER')") @AT@ 3012 @LENGTH@ 149
---------INS StringLiteral@@"hasRole('ROLE_USER')" @TO@ MethodInvocation@@MethodName:access:["hasRole('ROLE_USER')"] @AT@ 3138 @LENGTH@ 22
------INS MethodInvocation@@MethodName:antMatchers:["/me"] @TO@ MethodInvocation@@http.requestMatchers().antMatchers("/photos/**").and().authorizeRequests().antMatchers("/photos").access("hasRole('ROLE_USER')").antMatchers("/photos/trusted/**").access("hasRole('ROLE_USER')").antMatchers("/photos/user/**").access("hasRole('ROLE_USER')").antMatchers("/photos/**").access("hasRole('ROLE_USER')") @AT@ 3012 @LENGTH@ 118
---------INS StringLiteral@@"/me" @TO@ MethodInvocation@@MethodName:antMatchers:["/me"] @AT@ 3124 @LENGTH@ 5
------UPD MethodInvocation@@MethodName:antMatchers:["/photos/**"] @TO@ MethodName:antMatchers:["/photos/**", "/me"] @AT@ 3012 @LENGTH@ 53
---------INS StringLiteral@@"/me" @TO@ MethodInvocation@@MethodName:antMatchers:["/photos/**"] @AT@ 3065 @LENGTH@ 5


UPD Block@@ThenBody:{  LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile());  InputStream is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile());  if (is == null) {    throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());  }  answer=new Properties();  try {    answer.load(is);  } catch (  IOException e) {    throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);  } finally {    IOHelper.close(is);  }} @TO@ ThenBody:{  LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile());  InputStream is=null;  try {    is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());    answer=new Properties();    answer.load(is);  } catch (  IOException e) {    throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);  } finally {    IOHelper.close(is);  }} @AT@ 18004 @LENGTH@ 709
---UPD VariableDeclarationStatement@@InputStream is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()); @TO@ InputStream is=null; @AT@ 18114 @LENGTH@ 96
------UPD VariableDeclarationFragment@@is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()) @TO@ is=null @AT@ 18126 @LENGTH@ 83
---------DEL MethodInvocation@@getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()) @AT@ 18131 @LENGTH@ 78
------------DEL MethodInvocation@@MethodName:getClassResolver:[] @AT@ 18131 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 18131 @LENGTH@ 17
------------DEL SimpleName@@MethodName:loadResourceAsStream:[getPropertiesFile()] @AT@ 18168 @LENGTH@ 41
---------------DEL MethodInvocation@@MethodName:getPropertiesFile:[] @AT@ 18189 @LENGTH@ 19
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()) @AT@ 18176 @LENGTH@ 4
---INS TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @TO@ Block@@ThenBody:{  LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile());  InputStream is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile());  if (is == null) {    throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());  }  answer=new Properties();  try {    answer.load(is);  } catch (  IOException e) {    throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);  } finally {    IOHelper.close(is);  }} @AT@ 18194 @LENGTH@ 440
------INS ExpressionStatement@@Assignment:is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 18216 @LENGTH@ 117
---------INS Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @TO@ ExpressionStatement@@Assignment:is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 18216 @LENGTH@ 116
------------INS SimpleName@@is @TO@ Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 18216 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 18218 @LENGTH@ 1
------------INS MethodInvocation@@ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @TO@ Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 18221 @LENGTH@ 111
---------------INS SimpleName@@Name:ResourceHelper @TO@ MethodInvocation@@ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 18221 @LENGTH@ 14
---------------INS SimpleName@@MethodName:resolveMandatoryResourceAsInputStream:[getCamelContext().getClassResolver(), getPropertiesFile()] @TO@ MethodInvocation@@ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 18236 @LENGTH@ 96
------------------INS MethodInvocation@@getCamelContext().getClassResolver() @TO@ SimpleName@@MethodName:resolveMandatoryResourceAsInputStream:[getCamelContext().getClassResolver(), getPropertiesFile()] @AT@ 18274 @LENGTH@ 36
---------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().getClassResolver() @AT@ 18274 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getClassResolver:[] @TO@ MethodInvocation@@getCamelContext().getClassResolver() @AT@ 18292 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:getPropertiesFile:[] @TO@ SimpleName@@MethodName:resolveMandatoryResourceAsInputStream:[getCamelContext().getClassResolver(), getPropertiesFile()] @AT@ 18312 @LENGTH@ 19
------MOV ExpressionStatement@@Assignment:answer=new Properties() @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 18386 @LENGTH@ 26
------MOV ExpressionStatement@@MethodInvocation:answer.load(is) @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 18447 @LENGTH@ 16
------MOV CatchClause@@catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);} @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 18478 @LENGTH@ 165
------MOV Block@@FinallyBody:{  IOHelper.close(is);} @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 18652 @LENGTH@ 51
---DEL IfStatement@@if (is == null) {  throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());} @AT@ 18223 @LENGTH@ 150
------DEL InfixExpression@@is == null @AT@ 18227 @LENGTH@ 10
---------DEL SimpleName@@is @AT@ 18227 @LENGTH@ 2
---------DEL Operator@@== @AT@ 18229 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 18233 @LENGTH@ 4
------DEL Block@@ThenBody:{  throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());} @AT@ 18239 @LENGTH@ 134
---------DEL ThrowStatement@@ClassInstanceCreation:new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile()) @AT@ 18257 @LENGTH@ 102
------------DEL ClassInstanceCreation@@SchedulerException["Quartz properties file not found in classpath: " + getPropertiesFile()] @AT@ 18263 @LENGTH@ 95
---------------DEL New@@new @AT@ 18263 @LENGTH@ 3
---------------DEL SimpleType@@SchedulerException @AT@ 18267 @LENGTH@ 18
---------------DEL InfixExpression@@"Quartz properties file not found in classpath: " + getPropertiesFile() @AT@ 18286 @LENGTH@ 71
------------------DEL StringLiteral@@"Quartz properties file not found in classpath: " @AT@ 18286 @LENGTH@ 49
------------------DEL Operator@@+ @AT@ 18335 @LENGTH@ 1
------------------DEL MethodInvocation@@MethodName:getPropertiesFile:[] @AT@ 18338 @LENGTH@ 19
---DEL TryStatement@@try {  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 18425 @LENGTH@ 278


UPD ExpressionStatement@@MethodInvocation:assertEquals("text/html;utf-8",connection.getHeaderField("Content-Type")) @TO@ MethodInvocation:assertEquals("text/html; charset=utf-8",connection.getHeaderField("Content-Type")) @AT@ 4257 @LENGTH@ 75
---UPD MethodInvocation@@assertEquals("text/html;utf-8",connection.getHeaderField("Content-Type")) @TO@ assertEquals("text/html; charset=utf-8",connection.getHeaderField("Content-Type")) @AT@ 4257 @LENGTH@ 74
------UPD SimpleName@@MethodName:assertEquals:["text/html;utf-8", connection.getHeaderField("Content-Type")] @TO@ MethodName:assertEquals:["text/html; charset=utf-8", connection.getHeaderField("Content-Type")] @AT@ 4257 @LENGTH@ 74
---------UPD StringLiteral@@"text/html;utf-8" @TO@ "text/html; charset=utf-8" @AT@ 4270 @LENGTH@ 17


UPD FieldDeclaration@@public, static, final, Resource<?>, [EMPTY_RESOURCE=new Resource<Object>(Collections.emptyList())] @TO@ public, static, final, Resource<?>, [EMPTY_RESOURCE=new Resource<Object>(new Object())] @AT@ 1097 @LENGTH@ 95
---UPD VariableDeclarationFragment@@EMPTY_RESOURCE=new Resource<Object>(Collections.emptyList()) @TO@ EMPTY_RESOURCE=new Resource<Object>(new Object()) @AT@ 1129 @LENGTH@ 62
------UPD ClassInstanceCreation@@Resource<Object>[Collections.emptyList()] @TO@ Resource<Object>[new Object()] @AT@ 1146 @LENGTH@ 45
---------DEL MethodInvocation@@Collections.emptyList() @AT@ 1167 @LENGTH@ 23
------------DEL SimpleName@@Name:Collections @AT@ 1167 @LENGTH@ 11
------------DEL SimpleName@@MethodName:emptyList:[] @AT@ 1179 @LENGTH@ 11
---------INS ClassInstanceCreation@@Object[] @TO@ ClassInstanceCreation@@Resource<Object>[Collections.emptyList()] @AT@ 1167 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Object[] @AT@ 1167 @LENGTH@ 3
------------INS SimpleType@@Object @TO@ ClassInstanceCreation@@Object[] @AT@ 1171 @LENGTH@ 6


UPD TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  final FabricDiscoveryAgent discoveryAgent=new FabricDiscoveryAgent();  discoveryAgent.setCurator(curator);  discoveryAgent.setGroupName(groupName);  discoveryAgent.setDiscoveryListener(new DiscoveryListener(){    @Override public void onServiceAdd(    DiscoveryEvent discoveryEvent){      System.out.println("Service added:" + discoveryEvent.getServiceName());      semaphore.release(1);    }    @Override public void onServiceRemove(    DiscoveryEvent discoveryEvent){    }  });  discoveryAgent.start();  Set<ContainerProxy> containers=setupCluster(fabricProxy,groupName,brokerName);  try {    System.out.println(executeCommand("fabric:container-list"));    for (int i=0; i < 2; i++) {      System.out.println("Waiting for master.");      semaphore.tryAcquire(30,TimeUnit.SECONDS);      semaphore.drainPermits();      System.out.println(executeCommand("fabric:cluster-list | grep -A 1 " + groupName));      FabricDiscoveryAgent.ActiveMQNode master=discoveryAgent.getGroup().master();      Assert.assertNotNull(master);      String masterName=master.getContainer();      Assert.assertNotNull(master.getContainer());      System.out.println("Causing the master: " + masterName + " to failover.");      failOver(fabricService,masterName);      System.out.println("Waiting for failover.");      semaphore.tryAcquire(30,TimeUnit.SECONDS);      semaphore.drainPermits();      System.out.println(executeCommand("fabric:cluster-list | grep -A 1 " + groupName));      master=discoveryAgent.getGroup().master();      masterName=master.getContainer();      Assert.assertNotNull(master.getContainer());      System.out.println("Causing the master: " + masterName + " to failover.");      failOver(fabricService,masterName);    }  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();  curatorProxy.close();} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=fabricService.adapt(CuratorFramework.class);  final FabricDiscoveryAgent discoveryAgent=new FabricDiscoveryAgent();  discoveryAgent.setCurator(curator);  discoveryAgent.setGroupName(groupName);  discoveryAgent.setDiscoveryListener(new DiscoveryListener(){    @Override public void onServiceAdd(    DiscoveryEvent discoveryEvent){      System.out.println("Service added:" + discoveryEvent.getServiceName());      semaphore.release(1);    }    @Override public void onServiceRemove(    DiscoveryEvent discoveryEvent){    }  });  discoveryAgent.start();  Set<ContainerProxy> containers=setupCluster(fabricProxy,groupName,brokerName);  try {    System.out.println(executeCommand("fabric:container-list"));    for (int i=0; i < 2; i++) {      System.out.println("Waiting for master.");      semaphore.tryAcquire(30,TimeUnit.SECONDS);      semaphore.drainPermits();      System.out.println(executeCommand("fabric:cluster-list | grep -A 1 " + groupName));      FabricDiscoveryAgent.ActiveMQNode master=discoveryAgent.getGroup().master();      Assert.assertNotNull(master);      String masterName=master.getContainer();      Assert.assertNotNull(master.getContainer());      System.out.println("Causing the master: " + masterName + " to failover.");      failOver(fabricService,masterName);      System.out.println("Waiting for failover.");      semaphore.tryAcquire(30,TimeUnit.SECONDS);      semaphore.drainPermits();      System.out.println(executeCommand("fabric:cluster-list | grep -A 1 " + groupName));      master=discoveryAgent.getGroup().master();      masterName=master.getContainer();      Assert.assertNotNull(master.getContainer());      System.out.println("Causing the master: " + masterName + " to failover.");      failOver(fabricService,masterName);    }  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 2594 @LENGTH@ 2651
---UPD VariableDeclarationStatement@@CuratorFramework curator=curatorProxy.getService(); @TO@ CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 2680 @LENGTH@ 53
------UPD VariableDeclarationFragment@@curator=curatorProxy.getService() @TO@ curator=fabricService.adapt(CuratorFramework.class) @AT@ 2697 @LENGTH@ 35
---------UPD MethodInvocation@@curatorProxy.getService() @TO@ fabricService.adapt(CuratorFramework.class) @AT@ 2707 @LENGTH@ 25
------------UPD SimpleName@@Name:curatorProxy @TO@ Name:fabricService @AT@ 2707 @LENGTH@ 12
------------UPD SimpleName@@MethodName:getService:[] @TO@ MethodName:adapt:[CuratorFramework.class] @AT@ 2720 @LENGTH@ 12
---------------INS TypeLiteral@@CuratorFramework.class @TO@ SimpleName@@MethodName:getService:[] @AT@ 2601 @LENGTH@ 22
---UPD Block@@FinallyBody:{  fabricProxy.close();  curatorProxy.close();} @TO@ FinallyBody:{  fabricProxy.close();} @AT@ 5167 @LENGTH@ 78
------DEL ExpressionStatement@@MethodInvocation:curatorProxy.close() @AT@ 5214 @LENGTH@ 21
---------DEL MethodInvocation@@curatorProxy.close() @AT@ 5214 @LENGTH@ 20
------------DEL SimpleName@@Name:curatorProxy @AT@ 5214 @LENGTH@ 12
------------DEL SimpleName@@MethodName:close:[] @AT@ 5227 @LENGTH@ 7


INS IfStatement@@if (ObjectHelper.isEmpty(name)) {  return null;} @TO@ MethodDeclaration@@public, Class<?>, MethodName:resolveClass, String name,  @AT@ 1801 @LENGTH@ 68
---INS MethodInvocation@@ObjectHelper.isEmpty(name) @TO@ IfStatement@@if (ObjectHelper.isEmpty(name)) {  return null;} @AT@ 1805 @LENGTH@ 26
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(name) @AT@ 1805 @LENGTH@ 12
------INS SimpleName@@MethodName:isEmpty:[name] @TO@ MethodInvocation@@ObjectHelper.isEmpty(name) @AT@ 1818 @LENGTH@ 13
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:isEmpty:[name] @AT@ 1826 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (ObjectHelper.isEmpty(name)) {  return null;} @AT@ 1833 @LENGTH@ 36
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 1847 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1854 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:setAccessTokenConverter, AccessTokenConverter tokenConverter,  @TO@ TypeDeclaration@@[public]JwtTokenServices, [AuthorizationServerTokenServices, ResourceServerTokenServices, InitializingBean] @AT@ 3815 @LENGTH@ 117
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setAccessTokenConverter, AccessTokenConverter tokenConverter,  @AT@ 3815 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setAccessTokenConverter, AccessTokenConverter tokenConverter,  @AT@ 3822 @LENGTH@ 4
---INS SimpleName@@MethodName:setAccessTokenConverter @TO@ MethodDeclaration@@public, void, MethodName:setAccessTokenConverter, AccessTokenConverter tokenConverter,  @AT@ 3827 @LENGTH@ 23
---INS SingleVariableDeclaration@@AccessTokenConverter tokenConverter @TO@ MethodDeclaration@@public, void, MethodName:setAccessTokenConverter, AccessTokenConverter tokenConverter,  @AT@ 3851 @LENGTH@ 35
------INS SimpleType@@AccessTokenConverter @TO@ SingleVariableDeclaration@@AccessTokenConverter tokenConverter @AT@ 3851 @LENGTH@ 20
------INS SimpleName@@tokenConverter @TO@ SingleVariableDeclaration@@AccessTokenConverter tokenConverter @AT@ 3872 @LENGTH@ 14
---INS ExpressionStatement@@Assignment:this.tokenConverter=tokenConverter @TO@ MethodDeclaration@@public, void, MethodName:setAccessTokenConverter, AccessTokenConverter tokenConverter,  @AT@ 3892 @LENGTH@ 37
------INS Assignment@@this.tokenConverter=tokenConverter @TO@ ExpressionStatement@@Assignment:this.tokenConverter=tokenConverter @AT@ 3892 @LENGTH@ 36
---------INS FieldAccess@@this.tokenConverter @TO@ Assignment@@this.tokenConverter=tokenConverter @AT@ 3892 @LENGTH@ 19
------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenConverter @AT@ 3892 @LENGTH@ 4
------------INS SimpleName@@tokenConverter @TO@ FieldAccess@@this.tokenConverter @AT@ 3897 @LENGTH@ 14
---------INS Operator@@= @TO@ Assignment@@this.tokenConverter=tokenConverter @AT@ 3911 @LENGTH@ 1
---------INS SimpleName@@tokenConverter @TO@ Assignment@@this.tokenConverter=tokenConverter @AT@ 3914 @LENGTH@ 14


UPD IfStatement@@if (!decision && !missingScopes.isEmpty()) {  throw new InsufficientScopeException("Insufficient scope for this resource",missingScopes);} @TO@ if (!decision && !missingScopes.isEmpty()) {  Throwable failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes);  throw new AccessDeniedException(failure.getMessage(),failure);} @AT@ 2482 @LENGTH@ 144
---UPD Block@@ThenBody:{  throw new InsufficientScopeException("Insufficient scope for this resource",missingScopes);} @TO@ ThenBody:{  Throwable failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes);  throw new AccessDeniedException(failure.getMessage(),failure);} @AT@ 2525 @LENGTH@ 101
------INS VariableDeclarationStatement@@Throwable failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes); @TO@ Block@@ThenBody:{  throw new InsufficientScopeException("Insufficient scope for this resource",missingScopes);} @AT@ 2530 @LENGTH@ 106
---------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@Throwable failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes); @AT@ 2530 @LENGTH@ 9
---------INS VariableDeclarationFragment@@failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes) @TO@ VariableDeclarationStatement@@Throwable failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes); @AT@ 2540 @LENGTH@ 95
------------INS SimpleName@@failure @TO@ VariableDeclarationFragment@@failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes) @AT@ 2540 @LENGTH@ 7
------------INS ClassInstanceCreation@@InsufficientScopeException["Insufficient scope for this resource", missingScopes] @TO@ VariableDeclarationFragment@@failure=new InsufficientScopeException("Insufficient scope for this resource",missingScopes) @AT@ 2550 @LENGTH@ 85
---------------MOV New@@new @TO@ ClassInstanceCreation@@InsufficientScopeException["Insufficient scope for this resource", missingScopes] @AT@ 2536 @LENGTH@ 3
---------------MOV SimpleType@@InsufficientScopeException @TO@ ClassInstanceCreation@@InsufficientScopeException["Insufficient scope for this resource", missingScopes] @AT@ 2540 @LENGTH@ 26
---------------MOV StringLiteral@@"Insufficient scope for this resource" @TO@ ClassInstanceCreation@@InsufficientScopeException["Insufficient scope for this resource", missingScopes] @AT@ 2567 @LENGTH@ 38
---------------MOV SimpleName@@missingScopes @TO@ ClassInstanceCreation@@InsufficientScopeException["Insufficient scope for this resource", missingScopes] @AT@ 2607 @LENGTH@ 13
------DEL ThrowStatement@@ClassInstanceCreation:new InsufficientScopeException("Insufficient scope for this resource",missingScopes) @AT@ 2530 @LENGTH@ 92
---------DEL ClassInstanceCreation@@InsufficientScopeException["Insufficient scope for this resource", missingScopes] @AT@ 2536 @LENGTH@ 85
------INS ThrowStatement@@ClassInstanceCreation:new AccessDeniedException(failure.getMessage(),failure) @TO@ Block@@ThenBody:{  throw new InsufficientScopeException("Insufficient scope for this resource",missingScopes);} @AT@ 2640 @LENGTH@ 63
---------INS ClassInstanceCreation@@AccessDeniedException[failure.getMessage(), failure] @TO@ ThrowStatement@@ClassInstanceCreation:new AccessDeniedException(failure.getMessage(),failure) @AT@ 2646 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@AccessDeniedException[failure.getMessage(), failure] @AT@ 2646 @LENGTH@ 3
------------INS SimpleType@@AccessDeniedException @TO@ ClassInstanceCreation@@AccessDeniedException[failure.getMessage(), failure] @AT@ 2650 @LENGTH@ 21
------------INS MethodInvocation@@failure.getMessage() @TO@ ClassInstanceCreation@@AccessDeniedException[failure.getMessage(), failure] @AT@ 2672 @LENGTH@ 20
---------------INS SimpleName@@Name:failure @TO@ MethodInvocation@@failure.getMessage() @AT@ 2672 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@failure.getMessage() @AT@ 2680 @LENGTH@ 12
------------INS SimpleName@@failure @TO@ ClassInstanceCreation@@AccessDeniedException[failure.getMessage(), failure] @AT@ 2694 @LENGTH@ 7


UPD IfStatement@@if (userApprovalHandler == null) {  TokenStoreUserApprovalHandler userApprovalHandler=new TokenStoreUserApprovalHandler();  userApprovalHandler.setTokenStore(tokenStore());  userApprovalHandler.setClientDetailsService(clientDetails());} @TO@ if (userApprovalHandler == null) {  TokenStoreUserApprovalHandler userApprovalHandler=new TokenStoreUserApprovalHandler();  userApprovalHandler.setTokenStore(tokenStore());  userApprovalHandler.setClientDetailsService(clientDetails());  userApprovalHandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService()));  this.userApprovalHandler=userApprovalHandler;} @AT@ 10026 @LENGTH@ 247
---UPD Block@@ThenBody:{  TokenStoreUserApprovalHandler userApprovalHandler=new TokenStoreUserApprovalHandler();  userApprovalHandler.setTokenStore(tokenStore());  userApprovalHandler.setClientDetailsService(clientDetails());} @TO@ ThenBody:{  TokenStoreUserApprovalHandler userApprovalHandler=new TokenStoreUserApprovalHandler();  userApprovalHandler.setTokenStore(tokenStore());  userApprovalHandler.setClientDetailsService(clientDetails());  userApprovalHandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService()));  this.userApprovalHandler=userApprovalHandler;} @AT@ 10059 @LENGTH@ 214
------INS ExpressionStatement@@MethodInvocation:userApprovalHandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService())) @TO@ Block@@ThenBody:{  TokenStoreUserApprovalHandler userApprovalHandler=new TokenStoreUserApprovalHandler();  userApprovalHandler.setTokenStore(tokenStore());  userApprovalHandler.setClientDetailsService(clientDetails());} @AT@ 10273 @LENGTH@ 95
---------INS MethodInvocation@@userApprovalHandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService())) @TO@ ExpressionStatement@@MethodInvocation:userApprovalHandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService())) @AT@ 10273 @LENGTH@ 94
------------INS SimpleName@@Name:userApprovalHandler @TO@ MethodInvocation@@userApprovalHandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService())) @AT@ 10273 @LENGTH@ 19
------------INS SimpleName@@MethodName:setRequestFactory:[new DefaultOAuth2RequestFactory(clientDetailsService())] @TO@ MethodInvocation@@userApprovalHandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService())) @AT@ 10293 @LENGTH@ 74
---------------INS ClassInstanceCreation@@DefaultOAuth2RequestFactory[clientDetailsService()] @TO@ SimpleName@@MethodName:setRequestFactory:[new DefaultOAuth2RequestFactory(clientDetailsService())] @AT@ 10311 @LENGTH@ 55
------------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2RequestFactory[clientDetailsService()] @AT@ 10311 @LENGTH@ 3
------------------INS SimpleType@@DefaultOAuth2RequestFactory @TO@ ClassInstanceCreation@@DefaultOAuth2RequestFactory[clientDetailsService()] @AT@ 10315 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:clientDetailsService:[] @TO@ ClassInstanceCreation@@DefaultOAuth2RequestFactory[clientDetailsService()] @AT@ 10343 @LENGTH@ 22
------INS ExpressionStatement@@Assignment:this.userApprovalHandler=userApprovalHandler @TO@ Block@@ThenBody:{  TokenStoreUserApprovalHandler userApprovalHandler=new TokenStoreUserApprovalHandler();  userApprovalHandler.setTokenStore(tokenStore());  userApprovalHandler.setClientDetailsService(clientDetails());} @AT@ 10372 @LENGTH@ 47
---------INS Assignment@@this.userApprovalHandler=userApprovalHandler @TO@ ExpressionStatement@@Assignment:this.userApprovalHandler=userApprovalHandler @AT@ 10372 @LENGTH@ 46
------------INS FieldAccess@@this.userApprovalHandler @TO@ Assignment@@this.userApprovalHandler=userApprovalHandler @AT@ 10372 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.userApprovalHandler @AT@ 10372 @LENGTH@ 4
---------------INS SimpleName@@userApprovalHandler @TO@ FieldAccess@@this.userApprovalHandler @AT@ 10377 @LENGTH@ 19
------------INS Operator@@= @TO@ Assignment@@this.userApprovalHandler=userApprovalHandler @AT@ 10396 @LENGTH@ 1
------------INS SimpleName@@userApprovalHandler @TO@ Assignment@@this.userApprovalHandler=userApprovalHandler @AT@ 10399 @LENGTH@ 19


UPD IfStatement@@if (usedNamespaces.containsKey(attachmentKey)) {  ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @TO@ if (usedNamespaces.containsKey(attachmentKey)) {  throw ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @AT@ 4618 @LENGTH@ 184
---UPD Block@@ThenBody:{  ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @TO@ ThenBody:{  throw ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @AT@ 4664 @LENGTH@ 138
------INS ThrowStatement@@MethodInvocation:ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @TO@ Block@@ThenBody:{  ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @AT@ 4682 @LENGTH@ 112
---------MOV MethodInvocation@@ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @TO@ ThrowStatement@@MethodInvocation:ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @AT@ 4682 @LENGTH@ 105
------DEL ExpressionStatement@@MethodInvocation:ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @AT@ 4682 @LENGTH@ 106


INS ExpressionStatement@@MethodInvocation:result.setValue(encode(result,authentication)) @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 4698 @LENGTH@ 48
---MOV MethodInvocation@@result.setValue(encode(result,authentication)) @TO@ ExpressionStatement@@MethodInvocation:result.setValue(encode(result,authentication)) @AT@ 4705 @LENGTH@ 47


INS MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @TO@ TypeDeclaration@@[public]HcatTestUtils,  @AT@ 3793 @LENGTH@ 130
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 3793 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 3800 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 3807 @LENGTH@ 6
---INS SimpleName@@MethodName:makePathASafeFileName @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 3814 @LENGTH@ 21
---INS SingleVariableDeclaration@@String filePath @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 3836 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String filePath @AT@ 3836 @LENGTH@ 6
------INS SimpleName@@filePath @TO@ SingleVariableDeclaration@@String filePath @AT@ 3843 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:new File(filePath).getPath().replaceAll("\\\\","/") @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 3859 @LENGTH@ 60
------INS MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @TO@ ReturnStatement@@MethodInvocation:new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 3866 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 3866 @LENGTH@ 28
---------INS ClassInstanceCreation@@File[filePath] @TO@ MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 3866 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@File[filePath] @AT@ 3866 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[filePath] @AT@ 3870 @LENGTH@ 4
------------INS SimpleName@@filePath @TO@ ClassInstanceCreation@@File[filePath] @AT@ 3875 @LENGTH@ 8
---------INS SimpleName@@MethodName:replaceAll:["\\\\", "/"] @TO@ MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 3895 @LENGTH@ 23
------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 3906 @LENGTH@ 6
------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 3914 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @TO@ TypeDeclaration@@[public]SpringSimpleExpressionTest, SpringTestSupport @AT@ 1557 @LENGTH@ 238
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @AT@ 1557 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @AT@ 1564 @LENGTH@ 4
---INS SimpleName@@MethodName:testSimpleOtherwiseString @TO@ MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @AT@ 1569 @LENGTH@ 25
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @AT@ 1604 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("incorrect") @TO@ MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @AT@ 1624 @LENGTH@ 67
------INS MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("incorrect") @TO@ ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("incorrect") @AT@ 1624 @LENGTH@ 66
---------INS MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("incorrect") @AT@ 1624 @LENGTH@ 30
------------INS StringLiteral@@"mock:result" @TO@ MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @AT@ 1640 @LENGTH@ 13
---------INS SimpleName@@MethodName:expectedBodiesReceived:["incorrect"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("incorrect") @AT@ 1655 @LENGTH@ 35
------------INS StringLiteral@@"incorrect" @TO@ SimpleName@@MethodName:expectedBodiesReceived:["incorrect"] @AT@ 1678 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Bye World") @TO@ MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @AT@ 1701 @LENGTH@ 47
------INS MethodInvocation@@template.sendBody("direct:start","Bye World") @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Bye World") @AT@ 1701 @LENGTH@ 46
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start","Bye World") @AT@ 1701 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:start", "Bye World"] @TO@ MethodInvocation@@template.sendBody("direct:start","Bye World") @AT@ 1710 @LENGTH@ 37
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Bye World"] @AT@ 1719 @LENGTH@ 14
------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Bye World"] @AT@ 1735 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testSimpleOtherwiseString, Exception,  @AT@ 1758 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1758 @LENGTH@ 30


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Info,  @TO@ [@Data, public]Info, AbstractDockerDTO @AT@ 879 @LENGTH@ 677
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Info,  @AT@ 784 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 885 @LENGTH@ 47


UPD VariableDeclarationStatement@@BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),Charset.forName("UTF-8"))); @TO@ BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),StandardCharsets.UTF_8)); @AT@ 7262 @LENGTH@ 130
---UPD VariableDeclarationFragment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),StandardCharsets.UTF_8)) @AT@ 7277 @LENGTH@ 114
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(loggingTestLog),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(loggingTestLog),StandardCharsets.UTF_8)] @AT@ 7282 @LENGTH@ 109
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(loggingTestLog), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(loggingTestLog), StandardCharsets.UTF_8] @AT@ 7301 @LENGTH@ 89
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 7365 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 7365 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 7373 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 7381 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(loggingTestLog), Charset.forName("UTF-8")] @AT@ 7371 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7371 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7388 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @TO@ TypeDeclaration@@[public]ValidatingProcessorTest, ContextTestSupport @AT@ 2248 @LENGTH@ 494
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2248 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2255 @LENGTH@ 4
---INS SimpleName@@MethodName:testStringSourceMessage @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2260 @LENGTH@ 23
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2293 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:valid"); @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2313 @LENGTH@ 50
------INS SimpleType@@MockEndpoint @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:valid"); @AT@ 2313 @LENGTH@ 12
------INS VariableDeclarationFragment@@mock=getMockEndpoint("mock:valid") @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:valid"); @AT@ 2326 @LENGTH@ 36
---------INS SimpleName@@mock @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:valid") @AT@ 2326 @LENGTH@ 4
---------INS MethodInvocation@@getMockEndpoint("mock:valid") @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:valid") @AT@ 2333 @LENGTH@ 29
------------INS SimpleName@@MethodName:getMockEndpoint:["mock:valid"] @TO@ MethodInvocation@@getMockEndpoint("mock:valid") @AT@ 2333 @LENGTH@ 29
---------------INS StringLiteral@@"mock:valid" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:valid"] @AT@ 2349 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2372 @LENGTH@ 29
------INS MethodInvocation@@mock.expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @AT@ 2372 @LENGTH@ 28
---------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedMessageCount(1) @AT@ 2372 @LENGTH@ 4
---------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@mock.expectedMessageCount(1) @AT@ 2377 @LENGTH@ 23
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 2398 @LENGTH@ 1
---INS VariableDeclarationStatement@@String xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>"; @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2411 @LENGTH@ 217
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>"; @AT@ 2411 @LENGTH@ 6
------INS VariableDeclarationFragment@@xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @TO@ VariableDeclarationStatement@@String xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>"; @AT@ 2418 @LENGTH@ 209
---------INS SimpleName@@xml @TO@ VariableDeclarationFragment@@xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2418 @LENGTH@ 3
---------INS InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @TO@ VariableDeclarationFragment@@xml="<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2424 @LENGTH@ 203
------------INS StringLiteral@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2424 @LENGTH@ 49
------------INS Operator@@+ @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2473 @LENGTH@ 1
------------INS StringLiteral@@"<user xmlns=\"http://foo.com/bar\">" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2488 @LENGTH@ 37
------------INS StringLiteral@@"  <id>1</id>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2540 @LENGTH@ 14
------------INS StringLiteral@@"  <username>davsclaus</username>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2569 @LENGTH@ 34
------------INS StringLiteral@@"</user>" @TO@ InfixExpression@@"<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + "<user xmlns=\"http://foo.com/bar\">" + "  <id>1</id>"+ "  <username>davsclaus</username>"+ "</user>" @AT@ 2618 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",new StringSource(xml)) @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2638 @LENGTH@ 57
------INS MethodInvocation@@template.sendBody("direct:start",new StringSource(xml)) @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",new StringSource(xml)) @AT@ 2638 @LENGTH@ 56
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start",new StringSource(xml)) @AT@ 2638 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:start", new StringSource(xml)] @TO@ MethodInvocation@@template.sendBody("direct:start",new StringSource(xml)) @AT@ 2647 @LENGTH@ 47
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", new StringSource(xml)] @AT@ 2656 @LENGTH@ 14
------------INS ClassInstanceCreation@@StringSource[xml] @TO@ SimpleName@@MethodName:sendBody:["direct:start", new StringSource(xml)] @AT@ 2672 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@StringSource[xml] @AT@ 2672 @LENGTH@ 3
---------------INS SimpleType@@StringSource @TO@ ClassInstanceCreation@@StringSource[xml] @AT@ 2676 @LENGTH@ 12
---------------INS SimpleName@@xml @TO@ ClassInstanceCreation@@StringSource[xml] @AT@ 2689 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testStringSourceMessage, Exception,  @AT@ 2705 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 2705 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:Validate.configurationDirectoryExists(jbossHome,"bundlePath '" + bundlePath + "' must exist") @TO@ MethodInvocation:Validate.configurationDirectoryExists(bundlePath,"bundlePath '" + bundlePath + "' must exist") @AT@ 3562 @LENGTH@ 95
---UPD MethodInvocation@@Validate.configurationDirectoryExists(jbossHome,"bundlePath '" + bundlePath + "' must exist") @TO@ Validate.configurationDirectoryExists(bundlePath,"bundlePath '" + bundlePath + "' must exist") @AT@ 3562 @LENGTH@ 94
------UPD SimpleName@@MethodName:configurationDirectoryExists:[jbossHome, "bundlePath '" + bundlePath + "' must exist"] @TO@ MethodName:configurationDirectoryExists:[bundlePath, "bundlePath '" + bundlePath + "' must exist"] @AT@ 3571 @LENGTH@ 85
---------UPD SimpleName@@jbossHome @TO@ bundlePath @AT@ 3600 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @TO@ TypeDeclaration@@[public]JsrJobOperatorTests,  @AT@ 17451 @LENGTH@ 796
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17451 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17458 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetRestartJobParametersWithDefaults @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17463 @LENGTH@ 39
---INS VariableDeclarationStatement@@JsrJobOperator jobOperator=(JsrJobOperator)jsrJobOperator; @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17509 @LENGTH@ 61
------INS SimpleType@@JsrJobOperator @TO@ VariableDeclarationStatement@@JsrJobOperator jobOperator=(JsrJobOperator)jsrJobOperator; @AT@ 17509 @LENGTH@ 14
------INS VariableDeclarationFragment@@jobOperator=(JsrJobOperator)jsrJobOperator @TO@ VariableDeclarationStatement@@JsrJobOperator jobOperator=(JsrJobOperator)jsrJobOperator; @AT@ 17524 @LENGTH@ 45
---------INS SimpleName@@jobOperator @TO@ VariableDeclarationFragment@@jobOperator=(JsrJobOperator)jsrJobOperator @AT@ 17524 @LENGTH@ 11
---------INS CastExpression@@(JsrJobOperator)jsrJobOperator @TO@ VariableDeclarationFragment@@jobOperator=(JsrJobOperator)jsrJobOperator @AT@ 17538 @LENGTH@ 31
------------INS SimpleType@@JsrJobOperator @TO@ CastExpression@@(JsrJobOperator)jsrJobOperator @AT@ 17539 @LENGTH@ 14
------------INS SimpleName@@jsrJobOperator @TO@ CastExpression@@(JsrJobOperator)jsrJobOperator @AT@ 17555 @LENGTH@ 14
---INS VariableDeclarationStatement@@JobExecution jobExecution=new JobExecution(1L,new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()); @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17574 @LENGTH@ 167
------INS SimpleType@@JobExecution @TO@ VariableDeclarationStatement@@JobExecution jobExecution=new JobExecution(1L,new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()); @AT@ 17574 @LENGTH@ 12
------INS VariableDeclarationFragment@@jobExecution=new JobExecution(1L,new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()) @TO@ VariableDeclarationStatement@@JobExecution jobExecution=new JobExecution(1L,new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()); @AT@ 17587 @LENGTH@ 153
---------INS SimpleName@@jobExecution @TO@ VariableDeclarationFragment@@jobExecution=new JobExecution(1L,new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()) @AT@ 17587 @LENGTH@ 12
---------INS ClassInstanceCreation@@JobExecution[1L, new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()] @TO@ VariableDeclarationFragment@@jobExecution=new JobExecution(1L,new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()) @AT@ 17602 @LENGTH@ 138
------------INS New@@new @TO@ ClassInstanceCreation@@JobExecution[1L, new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()] @AT@ 17602 @LENGTH@ 3
------------INS SimpleType@@JobExecution @TO@ ClassInstanceCreation@@JobExecution[1L, new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()] @AT@ 17606 @LENGTH@ 12
------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@JobExecution[1L, new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()] @AT@ 17619 @LENGTH@ 2
------------INS MethodInvocation@@new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters() @TO@ ClassInstanceCreation@@JobExecution[1L, new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters()] @AT@ 17627 @LENGTH@ 112
---------------INS MethodInvocation@@MethodName:addString:["prevKey2", "prevVal2"] @TO@ MethodInvocation@@new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters() @AT@ 17627 @LENGTH@ 94
------------------INS StringLiteral@@"prevKey2" @TO@ MethodInvocation@@MethodName:addString:["prevKey2", "prevVal2"] @AT@ 17698 @LENGTH@ 10
------------------INS StringLiteral@@"prevVal2" @TO@ MethodInvocation@@MethodName:addString:["prevKey2", "prevVal2"] @AT@ 17710 @LENGTH@ 10
---------------INS MethodInvocation@@MethodName:addString:["prevKey1", "prevVal1"] @TO@ MethodInvocation@@new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters() @AT@ 17627 @LENGTH@ 60
------------------INS StringLiteral@@"prevKey1" @TO@ MethodInvocation@@MethodName:addString:["prevKey1", "prevVal1"] @AT@ 17664 @LENGTH@ 10
------------------INS StringLiteral@@"prevVal1" @TO@ MethodInvocation@@MethodName:addString:["prevKey1", "prevVal1"] @AT@ 17676 @LENGTH@ 10
---------------INS ClassInstanceCreation@@JobParametersBuilder[] @TO@ MethodInvocation@@new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters() @AT@ 17627 @LENGTH@ 26
------------------INS New@@new @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 17627 @LENGTH@ 3
------------------INS SimpleType@@JobParametersBuilder @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 17631 @LENGTH@ 20
---------------INS SimpleName@@MethodName:toJobParameters:[] @TO@ MethodInvocation@@new JobParametersBuilder().addString("prevKey1","prevVal1").addString("prevKey2","prevVal2").toJobParameters() @AT@ 17722 @LENGTH@ 17
---INS VariableDeclarationStatement@@Properties defaultProperties=new Properties(); @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17745 @LENGTH@ 48
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties defaultProperties=new Properties(); @AT@ 17745 @LENGTH@ 10
------INS VariableDeclarationFragment@@defaultProperties=new Properties() @TO@ VariableDeclarationStatement@@Properties defaultProperties=new Properties(); @AT@ 17756 @LENGTH@ 36
---------INS SimpleName@@defaultProperties @TO@ VariableDeclarationFragment@@defaultProperties=new Properties() @AT@ 17756 @LENGTH@ 17
---------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@defaultProperties=new Properties() @AT@ 17776 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 17776 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 17780 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:defaultProperties.setProperty("prevKey2","not value 2") @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17796 @LENGTH@ 57
------INS MethodInvocation@@defaultProperties.setProperty("prevKey2","not value 2") @TO@ ExpressionStatement@@MethodInvocation:defaultProperties.setProperty("prevKey2","not value 2") @AT@ 17796 @LENGTH@ 56
---------INS SimpleName@@Name:defaultProperties @TO@ MethodInvocation@@defaultProperties.setProperty("prevKey2","not value 2") @AT@ 17796 @LENGTH@ 17
---------INS SimpleName@@MethodName:setProperty:["prevKey2", "not value 2"] @TO@ MethodInvocation@@defaultProperties.setProperty("prevKey2","not value 2") @AT@ 17814 @LENGTH@ 38
------------INS StringLiteral@@"prevKey2" @TO@ SimpleName@@MethodName:setProperty:["prevKey2", "not value 2"] @AT@ 17826 @LENGTH@ 10
------------INS StringLiteral@@"not value 2" @TO@ SimpleName@@MethodName:setProperty:["prevKey2", "not value 2"] @AT@ 17838 @LENGTH@ 13
---INS VariableDeclarationStatement@@Properties userProperties=new Properties(defaultProperties); @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17856 @LENGTH@ 62
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties userProperties=new Properties(defaultProperties); @AT@ 17856 @LENGTH@ 10
------INS VariableDeclarationFragment@@userProperties=new Properties(defaultProperties) @TO@ VariableDeclarationStatement@@Properties userProperties=new Properties(defaultProperties); @AT@ 17867 @LENGTH@ 50
---------INS SimpleName@@userProperties @TO@ VariableDeclarationFragment@@userProperties=new Properties(defaultProperties) @AT@ 17867 @LENGTH@ 14
---------INS ClassInstanceCreation@@Properties[defaultProperties] @TO@ VariableDeclarationFragment@@userProperties=new Properties(defaultProperties) @AT@ 17884 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[defaultProperties] @AT@ 17884 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[defaultProperties] @AT@ 17888 @LENGTH@ 10
------------INS SimpleName@@defaultProperties @TO@ ClassInstanceCreation@@Properties[defaultProperties] @AT@ 17899 @LENGTH@ 17
---INS VariableDeclarationStatement@@Properties properties=jobOperator.getJobRestartProperties(userProperties,jobExecution); @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 17922 @LENGTH@ 90
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties properties=jobOperator.getJobRestartProperties(userProperties,jobExecution); @AT@ 17922 @LENGTH@ 10
------INS VariableDeclarationFragment@@properties=jobOperator.getJobRestartProperties(userProperties,jobExecution) @TO@ VariableDeclarationStatement@@Properties properties=jobOperator.getJobRestartProperties(userProperties,jobExecution); @AT@ 17933 @LENGTH@ 78
---------INS SimpleName@@properties @TO@ VariableDeclarationFragment@@properties=jobOperator.getJobRestartProperties(userProperties,jobExecution) @AT@ 17933 @LENGTH@ 10
---------INS MethodInvocation@@jobOperator.getJobRestartProperties(userProperties,jobExecution) @TO@ VariableDeclarationFragment@@properties=jobOperator.getJobRestartProperties(userProperties,jobExecution) @AT@ 17946 @LENGTH@ 65
------------INS SimpleName@@Name:jobOperator @TO@ MethodInvocation@@jobOperator.getJobRestartProperties(userProperties,jobExecution) @AT@ 17946 @LENGTH@ 11
------------INS SimpleName@@MethodName:getJobRestartProperties:[userProperties, jobExecution] @TO@ MethodInvocation@@jobOperator.getJobRestartProperties(userProperties,jobExecution) @AT@ 17958 @LENGTH@ 53
---------------INS SimpleName@@userProperties @TO@ SimpleName@@MethodName:getJobRestartProperties:[userProperties, jobExecution] @AT@ 17982 @LENGTH@ 14
---------------INS SimpleName@@jobExecution @TO@ SimpleName@@MethodName:getJobRestartProperties:[userProperties, jobExecution] @AT@ 17998 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertTrue(properties.size() == 2) @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 18016 @LENGTH@ 35
------INS MethodInvocation@@assertTrue(properties.size() == 2) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(properties.size() == 2) @AT@ 18016 @LENGTH@ 34
---------INS SimpleName@@MethodName:assertTrue:[properties.size() == 2] @TO@ MethodInvocation@@assertTrue(properties.size() == 2) @AT@ 18016 @LENGTH@ 34
------------INS InfixExpression@@properties.size() == 2 @TO@ SimpleName@@MethodName:assertTrue:[properties.size() == 2] @AT@ 18027 @LENGTH@ 22
---------------INS MethodInvocation@@properties.size() @TO@ InfixExpression@@properties.size() == 2 @AT@ 18027 @LENGTH@ 17
------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.size() @AT@ 18027 @LENGTH@ 10
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@properties.size() @AT@ 18038 @LENGTH@ 6
---------------INS Operator@@== @TO@ InfixExpression@@properties.size() == 2 @AT@ 18044 @LENGTH@ 2
---------------INS NumberLiteral@@2 @TO@ InfixExpression@@properties.size() == 2 @AT@ 18048 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertTrue(properties.getProperty("prevKey1").equals("prevVal1")) @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 18054 @LENGTH@ 66
------INS MethodInvocation@@assertTrue(properties.getProperty("prevKey1").equals("prevVal1")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(properties.getProperty("prevKey1").equals("prevVal1")) @AT@ 18054 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertTrue:[properties.getProperty("prevKey1").equals("prevVal1")] @TO@ MethodInvocation@@assertTrue(properties.getProperty("prevKey1").equals("prevVal1")) @AT@ 18054 @LENGTH@ 65
------------INS MethodInvocation@@properties.getProperty("prevKey1").equals("prevVal1") @TO@ SimpleName@@MethodName:assertTrue:[properties.getProperty("prevKey1").equals("prevVal1")] @AT@ 18065 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getProperty:["prevKey1"] @TO@ MethodInvocation@@properties.getProperty("prevKey1").equals("prevVal1") @AT@ 18065 @LENGTH@ 34
------------------INS StringLiteral@@"prevKey1" @TO@ MethodInvocation@@MethodName:getProperty:["prevKey1"] @AT@ 18088 @LENGTH@ 10
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getProperty("prevKey1").equals("prevVal1") @AT@ 18065 @LENGTH@ 10
---------------INS SimpleName@@MethodName:equals:["prevVal1"] @TO@ MethodInvocation@@properties.getProperty("prevKey1").equals("prevVal1") @AT@ 18100 @LENGTH@ 18
------------------INS StringLiteral@@"prevVal1" @TO@ SimpleName@@MethodName:equals:["prevVal1"] @AT@ 18107 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertTrue("prevKey2 = " + properties.getProperty("prevKey2"),properties.getProperty("prevKey2").equals("not value 2")) @TO@ MethodDeclaration@@public, void, MethodName:testGetRestartJobParametersWithDefaults,  @AT@ 18123 @LENGTH@ 121
------INS MethodInvocation@@assertTrue("prevKey2 = " + properties.getProperty("prevKey2"),properties.getProperty("prevKey2").equals("not value 2")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("prevKey2 = " + properties.getProperty("prevKey2"),properties.getProperty("prevKey2").equals("not value 2")) @AT@ 18123 @LENGTH@ 120
---------INS SimpleName@@MethodName:assertTrue:["prevKey2 = " + properties.getProperty("prevKey2"), properties.getProperty("prevKey2").equals("not value 2")] @TO@ MethodInvocation@@assertTrue("prevKey2 = " + properties.getProperty("prevKey2"),properties.getProperty("prevKey2").equals("not value 2")) @AT@ 18123 @LENGTH@ 120
------------INS InfixExpression@@"prevKey2 = " + properties.getProperty("prevKey2") @TO@ SimpleName@@MethodName:assertTrue:["prevKey2 = " + properties.getProperty("prevKey2"), properties.getProperty("prevKey2").equals("not value 2")] @AT@ 18134 @LENGTH@ 50
---------------INS StringLiteral@@"prevKey2 = " @TO@ InfixExpression@@"prevKey2 = " + properties.getProperty("prevKey2") @AT@ 18134 @LENGTH@ 13
---------------INS Operator@@+ @TO@ InfixExpression@@"prevKey2 = " + properties.getProperty("prevKey2") @AT@ 18147 @LENGTH@ 1
---------------INS MethodInvocation@@properties.getProperty("prevKey2") @TO@ InfixExpression@@"prevKey2 = " + properties.getProperty("prevKey2") @AT@ 18150 @LENGTH@ 34
------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getProperty("prevKey2") @AT@ 18150 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getProperty:["prevKey2"] @TO@ MethodInvocation@@properties.getProperty("prevKey2") @AT@ 18161 @LENGTH@ 23
---------------------INS StringLiteral@@"prevKey2" @TO@ SimpleName@@MethodName:getProperty:["prevKey2"] @AT@ 18173 @LENGTH@ 10
------------INS MethodInvocation@@properties.getProperty("prevKey2").equals("not value 2") @TO@ SimpleName@@MethodName:assertTrue:["prevKey2 = " + properties.getProperty("prevKey2"), properties.getProperty("prevKey2").equals("not value 2")] @AT@ 18186 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:getProperty:["prevKey2"] @TO@ MethodInvocation@@properties.getProperty("prevKey2").equals("not value 2") @AT@ 18186 @LENGTH@ 34
------------------INS StringLiteral@@"prevKey2" @TO@ MethodInvocation@@MethodName:getProperty:["prevKey2"] @AT@ 18209 @LENGTH@ 10
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getProperty("prevKey2").equals("not value 2") @AT@ 18186 @LENGTH@ 10
---------------INS SimpleName@@MethodName:equals:["not value 2"] @TO@ MethodInvocation@@properties.getProperty("prevKey2").equals("not value 2") @AT@ 18221 @LENGTH@ 21
------------------INS StringLiteral@@"not value 2" @TO@ SimpleName@@MethodName:equals:["not value 2"] @AT@ 18228 @LENGTH@ 13


INS ExpressionStatement@@Assignment:refreshToken=accessToken.getRefreshToken() @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:createAccessToken, OAuth2Authentication authentication, AuthenticationException,  @AT@ 4749 @LENGTH@ 45
---INS Assignment@@refreshToken=accessToken.getRefreshToken() @TO@ ExpressionStatement@@Assignment:refreshToken=accessToken.getRefreshToken() @AT@ 4749 @LENGTH@ 44
------INS SimpleName@@refreshToken @TO@ Assignment@@refreshToken=accessToken.getRefreshToken() @AT@ 4749 @LENGTH@ 12
------INS Operator@@= @TO@ Assignment@@refreshToken=accessToken.getRefreshToken() @AT@ 4761 @LENGTH@ 1
------INS MethodInvocation@@accessToken.getRefreshToken() @TO@ Assignment@@refreshToken=accessToken.getRefreshToken() @AT@ 4764 @LENGTH@ 29
---------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 4764 @LENGTH@ 11
---------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 4776 @LENGTH@ 17


UPD TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.getProperties().put(AvailableSettings.JTA_PLATFORM,JBossAppServerJtaPlatform.class);  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());  SessionFactoryImplementor sfi=(SessionFactoryImplementor)sessionFactory;  MetamodelImpl.buildMetamodel(configuration.getClassMappings(),sfi);  sessionFactory.getStatistics().setStatisticsEnabled(true);} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @TO@ try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.getProperties().put(AvailableSettings.JTA_PLATFORM,JBossAppServerJtaPlatform.class);  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  configuration.setProperty("hibernate.listeners.envers.autoRegister","false");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());  SessionFactoryImplementor sfi=(SessionFactoryImplementor)sessionFactory;  MetamodelImpl.buildMetamodel(configuration.getClassMappings(),sfi);  sessionFactory.getStatistics().setStatisticsEnabled(true);} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 2598 @LENGTH@ 1778
---INS ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.getProperties().put(AvailableSettings.JTA_PLATFORM,JBossAppServerJtaPlatform.class);  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());  SessionFactoryImplementor sfi=(SessionFactoryImplementor)sessionFactory;  MetamodelImpl.buildMetamodel(configuration.getClassMappings(),sfi);  sessionFactory.getStatistics().setStatisticsEnabled(true);} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 3101 @LENGTH@ 78
------INS MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 3101 @LENGTH@ 77
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 3101 @LENGTH@ 13
---------INS SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 3115 @LENGTH@ 63
------------INS StringLiteral@@"hibernate.listeners.envers.autoRegister" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 3127 @LENGTH@ 41
------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 3170 @LENGTH@ 7


UPD VariableDeclarationStatement@@final BufferedReader reader=new BufferedReader(new InputStreamReader(stream,"UTF-8")); @TO@ final BufferedReader reader=new BufferedReader(new InputStreamReader(stream,StandardCharsets.UTF_8)); @AT@ 3446 @LENGTH@ 89
---UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(stream,"UTF-8")) @TO@ reader=new BufferedReader(new InputStreamReader(stream,StandardCharsets.UTF_8)) @AT@ 3467 @LENGTH@ 67
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(stream,"UTF-8")] @TO@ BufferedReader[new InputStreamReader(stream,StandardCharsets.UTF_8)] @AT@ 3476 @LENGTH@ 58
---------UPD ClassInstanceCreation@@InputStreamReader[stream, "UTF-8"] @TO@ InputStreamReader[stream, StandardCharsets.UTF_8] @AT@ 3495 @LENGTH@ 38
------------DEL StringLiteral@@"UTF-8" @AT@ 3525 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[stream, "UTF-8"] @AT@ 3567 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3567 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3584 @LENGTH@ 5


UPD TypeDeclaration@@[public]DistributedCacheFactoryBean, [InitializingBean, FactoryBean<DistributedCache>] @TO@ [@SuppressWarnings("deprecation"), public]DistributedCacheFactoryBean, [InitializingBean, FactoryBean<DistributedCache>] @AT@ 1653 @LENGTH@ 6313
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]DistributedCacheFactoryBean, [InitializingBean, FactoryBean<DistributedCache>] @AT@ 1649 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:merger.merge(incoming,existingDomainObject,DomainObjectMerger.MergeNullPolicy.APPLY_NULLS) @TO@ MethodInvocation:merger.merge(incoming,existingDomainObject,APPLY_NULLS) @AT@ 2247 @LENGTH@ 93
---UPD MethodInvocation@@merger.merge(incoming,existingDomainObject,DomainObjectMerger.MergeNullPolicy.APPLY_NULLS) @TO@ merger.merge(incoming,existingDomainObject,APPLY_NULLS) @AT@ 2247 @LENGTH@ 92
------UPD SimpleName@@MethodName:merge:[incoming, existingDomainObject, DomainObjectMerger.MergeNullPolicy.APPLY_NULLS] @TO@ MethodName:merge:[incoming, existingDomainObject, APPLY_NULLS] @AT@ 2254 @LENGTH@ 85
---------DEL QualifiedName@@DomainObjectMerger.MergeNullPolicy.APPLY_NULLS @AT@ 2292 @LENGTH@ 46
------------DEL QualifiedName@@DomainObjectMerger.MergeNullPolicy @AT@ 2292 @LENGTH@ 34
---------------DEL SimpleName@@DomainObjectMerger @AT@ 2292 @LENGTH@ 18
---------------DEL SimpleName@@MergeNullPolicy @AT@ 2311 @LENGTH@ 15
------------DEL SimpleName@@APPLY_NULLS @AT@ 2327 @LENGTH@ 11
---------INS SimpleName@@APPLY_NULLS @TO@ SimpleName@@MethodName:merge:[incoming, existingDomainObject, DomainObjectMerger.MergeNullPolicy.APPLY_NULLS] @AT@ 2390 @LENGTH@ 11


INS ExpressionStatement@@SuperMethodInvocation:super.rollbackRuntime(context,operation,model,controllers) @TO@ MethodDeclaration@@protected, void, MethodName:rollbackRuntime, OperationContext context, ModelNode operation, ModelNode model, List<ServiceController<?>> controllers,  @AT@ 4774 @LENGTH@ 62
---INS SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @TO@ ExpressionStatement@@SuperMethodInvocation:super.rollbackRuntime(context,operation,model,controllers) @AT@ 4774 @LENGTH@ 61
------INS SimpleName@@MethodName:rollbackRuntime:[context, operation, model, controllers] @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4780 @LENGTH@ 15
------INS SimpleName@@context @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4796 @LENGTH@ 7
------INS SimpleName@@operation @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4805 @LENGTH@ 9
------INS SimpleName@@model @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4816 @LENGTH@ 5
------INS SimpleName@@controllers @TO@ SuperMethodInvocation@@super.rollbackRuntime(context,operation,model,controllers) @AT@ 4823 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:warehouseDir=new File(dataDir,"warehouse").getAbsolutePath() @TO@ Assignment:warehouseDir=HCatUtil.makePathASafeFileName(dataDir + File.separator + "warehouse") @AT@ 2781 @LENGTH@ 64
---UPD Assignment@@warehouseDir=new File(dataDir,"warehouse").getAbsolutePath() @TO@ warehouseDir=HCatUtil.makePathASafeFileName(dataDir + File.separator + "warehouse") @AT@ 2781 @LENGTH@ 63
------UPD MethodInvocation@@new File(dataDir,"warehouse").getAbsolutePath() @TO@ HCatUtil.makePathASafeFileName(dataDir + File.separator + "warehouse") @AT@ 2796 @LENGTH@ 48
---------DEL ClassInstanceCreation@@File[dataDir, "warehouse"] @AT@ 2796 @LENGTH@ 30
------------DEL New@@new @AT@ 2796 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 2800 @LENGTH@ 4
------------DEL SimpleName@@dataDir @AT@ 2805 @LENGTH@ 7
------------DEL StringLiteral@@"warehouse" @AT@ 2814 @LENGTH@ 11
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@new File(dataDir,"warehouse").getAbsolutePath() @AT@ 2801 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "warehouse"] @TO@ MethodInvocation@@new File(dataDir,"warehouse").getAbsolutePath() @AT@ 2810 @LENGTH@ 61
------------INS InfixExpression@@dataDir + File.separator + "warehouse" @TO@ SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "warehouse"] @AT@ 2832 @LENGTH@ 38
---------------INS SimpleName@@dataDir @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2832 @LENGTH@ 7
---------------INS Operator@@+ @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2839 @LENGTH@ 1
---------------INS QualifiedName@@File.separator @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2842 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 2842 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 2847 @LENGTH@ 9
---------------INS StringLiteral@@"warehouse" @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2859 @LENGTH@ 11
---------DEL SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2827 @LENGTH@ 17


UPD Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @TO@ ThenBody:{  final Throwable deploymentException=actionResult.getDeploymentException();  if (deploymentException != null) {    throw new RuntimeException(deploymentException);  }} @AT@ 4330 @LENGTH@ 189
---DEL IfStatement@@if (actionResult.getDeploymentException() != null) {  throw new RuntimeException(actionResult.getDeploymentException());} @AT@ 4348 @LENGTH@ 157
------DEL InfixExpression@@actionResult.getDeploymentException() != null @AT@ 4352 @LENGTH@ 45
---------DEL MethodInvocation@@actionResult.getDeploymentException() @AT@ 4352 @LENGTH@ 37
---INS VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @TO@ Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @AT@ 4348 @LENGTH@ 76
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 4348 @LENGTH@ 5
------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 4354 @LENGTH@ 9
------INS VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 4364 @LENGTH@ 59
---------INS SimpleName@@deploymentException @TO@ VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @AT@ 4364 @LENGTH@ 19
---------INS MethodInvocation@@actionResult.getDeploymentException() @TO@ VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @AT@ 4386 @LENGTH@ 37
------------MOV SimpleName@@Name:actionResult @TO@ MethodInvocation@@actionResult.getDeploymentException() @AT@ 4352 @LENGTH@ 12
------------MOV SimpleName@@MethodName:getDeploymentException:[] @TO@ MethodInvocation@@actionResult.getDeploymentException() @AT@ 4365 @LENGTH@ 24
---INS IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @TO@ Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @AT@ 4441 @LENGTH@ 121
------MOV Block@@ThenBody:{  throw new RuntimeException(actionResult.getDeploymentException());} @TO@ IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @AT@ 4399 @LENGTH@ 106
---------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(actionResult.getDeploymentException()) @TO@ ClassInstanceCreation:new RuntimeException(deploymentException) @AT@ 4421 @LENGTH@ 66
------------UPD ClassInstanceCreation@@RuntimeException[actionResult.getDeploymentException()] @TO@ RuntimeException[deploymentException] @AT@ 4427 @LENGTH@ 59
---------------DEL MethodInvocation@@actionResult.getDeploymentException() @AT@ 4448 @LENGTH@ 37
------------------DEL SimpleName@@Name:actionResult @AT@ 4448 @LENGTH@ 12
------------------DEL SimpleName@@MethodName:getDeploymentException:[] @AT@ 4461 @LENGTH@ 24
---------------INS SimpleName@@deploymentException @TO@ ClassInstanceCreation@@RuntimeException[actionResult.getDeploymentException()] @AT@ 4523 @LENGTH@ 19
------INS InfixExpression@@deploymentException != null @TO@ IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @AT@ 4445 @LENGTH@ 27
---------MOV Operator@@!= @TO@ InfixExpression@@deploymentException != null @AT@ 4389 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@deploymentException != null @AT@ 4393 @LENGTH@ 4
---------INS SimpleName@@deploymentException @TO@ InfixExpression@@deploymentException != null @AT@ 4445 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:setUserTokenConverter, UserAuthenticationConverter userTokenConverter,  @TO@ TypeDeclaration@@[public]DefaultAccessTokenConverter, [AccessTokenConverter] @AT@ 1819 @LENGTH@ 134
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setUserTokenConverter, UserAuthenticationConverter userTokenConverter,  @AT@ 1819 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setUserTokenConverter, UserAuthenticationConverter userTokenConverter,  @AT@ 1826 @LENGTH@ 4
---INS SimpleName@@MethodName:setUserTokenConverter @TO@ MethodDeclaration@@public, void, MethodName:setUserTokenConverter, UserAuthenticationConverter userTokenConverter,  @AT@ 1831 @LENGTH@ 21
---INS SingleVariableDeclaration@@UserAuthenticationConverter userTokenConverter @TO@ MethodDeclaration@@public, void, MethodName:setUserTokenConverter, UserAuthenticationConverter userTokenConverter,  @AT@ 1853 @LENGTH@ 46
------INS SimpleType@@UserAuthenticationConverter @TO@ SingleVariableDeclaration@@UserAuthenticationConverter userTokenConverter @AT@ 1853 @LENGTH@ 27
------INS SimpleName@@userTokenConverter @TO@ SingleVariableDeclaration@@UserAuthenticationConverter userTokenConverter @AT@ 1881 @LENGTH@ 18
---INS ExpressionStatement@@Assignment:this.userTokenConverter=userTokenConverter @TO@ MethodDeclaration@@public, void, MethodName:setUserTokenConverter, UserAuthenticationConverter userTokenConverter,  @AT@ 1905 @LENGTH@ 45
------INS Assignment@@this.userTokenConverter=userTokenConverter @TO@ ExpressionStatement@@Assignment:this.userTokenConverter=userTokenConverter @AT@ 1905 @LENGTH@ 44
---------INS FieldAccess@@this.userTokenConverter @TO@ Assignment@@this.userTokenConverter=userTokenConverter @AT@ 1905 @LENGTH@ 23
------------INS ThisExpression@@this @TO@ FieldAccess@@this.userTokenConverter @AT@ 1905 @LENGTH@ 4
------------INS SimpleName@@userTokenConverter @TO@ FieldAccess@@this.userTokenConverter @AT@ 1910 @LENGTH@ 18
---------INS Operator@@= @TO@ Assignment@@this.userTokenConverter=userTokenConverter @AT@ 1928 @LENGTH@ 1
---------INS SimpleName@@userTokenConverter @TO@ Assignment@@this.userTokenConverter=userTokenConverter @AT@ 1931 @LENGTH@ 18


UPD VariableDeclarationStatement@@WebSocket websocket=c.prepareGet("ws://127.0.0.1:" + port + "/bar").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get(); @TO@ WebSocket websocket=c.prepareGet("ws://localhost:" + port + "/bar").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get(); @AT@ 1963 @LENGTH@ 1007
---UPD VariableDeclarationFragment@@websocket=c.prepareGet("ws://127.0.0.1:" + port + "/bar").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @TO@ websocket=c.prepareGet("ws://localhost:" + port + "/bar").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @AT@ 1973 @LENGTH@ 996
------UPD MethodInvocation@@c.prepareGet("ws://127.0.0.1:" + port + "/bar").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @TO@ c.prepareGet("ws://localhost:" + port + "/bar").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @AT@ 1985 @LENGTH@ 984
---------UPD MethodInvocation@@MethodName:prepareGet:["ws://127.0.0.1:" + port + "/bar"] @TO@ MethodName:prepareGet:["ws://localhost:" + port + "/bar"] @AT@ 1985 @LENGTH@ 47
------------UPD InfixExpression@@"ws://127.0.0.1:" + port + "/bar" @TO@ "ws://localhost:" + port + "/bar" @AT@ 1998 @LENGTH@ 33
---------------UPD StringLiteral@@"ws://127.0.0.1:" @TO@ "ws://localhost:" @AT@ 1998 @LENGTH@ 17


UPD FieldDeclaration@@public, static, final, AttachmentKey<List<HandlerWrapper>>, [UNDERTOW_INITIAL_HANDLER_CHAIN_WRAPPERS=AttachmentKey.create(List.class)] @TO@ public, static, final, AttachmentKey<AttachmentList<HandlerWrapper>>, [UNDERTOW_INITIAL_HANDLER_CHAIN_WRAPPERS=AttachmentKey.createList(HandlerWrapper.class)] @AT@ 1494 @LENGTH@ 131
---UPD ParameterizedType@@AttachmentKey<List<HandlerWrapper>> @TO@ AttachmentKey<AttachmentList<HandlerWrapper>> @AT@ 1514 @LENGTH@ 35
------UPD ParameterizedType@@List<HandlerWrapper> @TO@ AttachmentList<HandlerWrapper> @AT@ 1528 @LENGTH@ 20
---------UPD SimpleType@@List @TO@ AttachmentList @AT@ 1528 @LENGTH@ 4
---UPD VariableDeclarationFragment@@UNDERTOW_INITIAL_HANDLER_CHAIN_WRAPPERS=AttachmentKey.create(List.class) @TO@ UNDERTOW_INITIAL_HANDLER_CHAIN_WRAPPERS=AttachmentKey.createList(HandlerWrapper.class) @AT@ 1550 @LENGTH@ 74
------UPD MethodInvocation@@AttachmentKey.create(List.class) @TO@ AttachmentKey.createList(HandlerWrapper.class) @AT@ 1592 @LENGTH@ 32
---------UPD SimpleName@@MethodName:create:[List.class] @TO@ MethodName:createList:[HandlerWrapper.class] @AT@ 1606 @LENGTH@ 18
------------UPD TypeLiteral@@List.class @TO@ HandlerWrapper.class @AT@ 1613 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(converter.createDBRef(dbRef,annotation),is(dbRef)) @TO@ MethodInvocation:assertThat(converter.createDBRef(dbRef,property),is(dbRef)) @AT@ 35690 @LENGTH@ 64
---UPD MethodInvocation@@assertThat(converter.createDBRef(dbRef,annotation),is(dbRef)) @TO@ assertThat(converter.createDBRef(dbRef,property),is(dbRef)) @AT@ 35690 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertThat:[converter.createDBRef(dbRef,annotation), is(dbRef)] @TO@ MethodName:assertThat:[converter.createDBRef(dbRef,property), is(dbRef)] @AT@ 35690 @LENGTH@ 63
---------UPD MethodInvocation@@converter.createDBRef(dbRef,annotation) @TO@ converter.createDBRef(dbRef,property) @AT@ 35701 @LENGTH@ 40
------------UPD SimpleName@@MethodName:createDBRef:[dbRef, annotation] @TO@ MethodName:createDBRef:[dbRef, property] @AT@ 35711 @LENGTH@ 30
---------------UPD SimpleName@@annotation @TO@ property @AT@ 35730 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),"utf-8")) @TO@ Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 4438 @LENGTH@ 90
---UPD Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),"utf-8")) @TO@ reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 4438 @LENGTH@ 89
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),"utf-8")] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 4447 @LENGTH@ 80
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), "utf-8"] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 4466 @LENGTH@ 60
------------DEL StringLiteral@@"utf-8" @AT@ 4518 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), "utf-8"] @AT@ 4560 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4560 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4577 @LENGTH@ 5


UPD IfStatement@@if (value != null) {  if (clazz.isInstance(value)) {    return value;  }  if (clazz == String.class) {    return value.toString();  }  if (clazz == Character.class || clazz == char.class) {    String text=value.toString();    if (text.length() > 0) {      return text.charAt(0);    }  }  String text=value.toString();  if (clazz.isArray()) {    String[] tokens=splitValues(text);    Class<?> componentType=clazz.getComponentType();    Object array=Array.newInstance(componentType,tokens.length);    int index=0;    for (    String token : tokens) {      Object item=convertValue(token,componentType);      if (item != null) {        Array.set(array,index++,item);      }    }    return array;  } else   if (Collection.class.isAssignableFrom(clazz)) {    List list=new ArrayList();    Class<?> componentType=Object.class;    String[] tokens=splitValues(text);    for (    String token : tokens) {      Object item=convertValue(token,componentType);      list.add(item);    }    return list;  }  PropertyEditor editor=PropertyEditorManager.findEditor(clazz);  if (editor != null) {    editor.setAsText(text);    return editor.getValue();  }} @TO@ if (value != null) {  if (clazz.isInstance(value)) {    return value;  }  if (clazz == String.class) {    return value.toString();  }  if (clazz == Character.class || clazz == char.class) {    String text=value.toString();    if (text.length() > 0) {      return text.charAt(0);    }  }  if (clazz == Boolean.class || clazz == boolean.class) {    String text=value.toString();    return Boolean.parseBoolean(text);  }  if (clazz == Integer.class || clazz == int.class) {    String text=value.toString();    return Integer.parseInt(text);  }  String text=value.toString();  if (clazz.isArray()) {    String[] tokens=splitValues(text);    Class<?> componentType=clazz.getComponentType();    Object array=Array.newInstance(componentType,tokens.length);    int index=0;    for (    String token : tokens) {      Object item=convertValue(token,componentType);      if (item != null) {        Array.set(array,index++,item);      }    }    return array;  } else   if (Collection.class.isAssignableFrom(clazz)) {    List list=new ArrayList();    Class<?> componentType=Object.class;    String[] tokens=splitValues(text);    for (    String token : tokens) {      Object item=convertValue(token,componentType);      list.add(item);    }    return list;  }  PropertyEditor editor=PropertyEditorManager.findEditor(clazz);  if (editor != null) {    editor.setAsText(text);    return editor.getValue();  }} @AT@ 1461 @LENGTH@ 1730
---UPD Block@@ThenBody:{  if (clazz.isInstance(value)) {    return value;  }  if (clazz == String.class) {    return value.toString();  }  if (clazz == Character.class || clazz == char.class) {    String text=value.toString();    if (text.length() > 0) {      return text.charAt(0);    }  }  String text=value.toString();  if (clazz.isArray()) {    String[] tokens=splitValues(text);    Class<?> componentType=clazz.getComponentType();    Object array=Array.newInstance(componentType,tokens.length);    int index=0;    for (    String token : tokens) {      Object item=convertValue(token,componentType);      if (item != null) {        Array.set(array,index++,item);      }    }    return array;  } else   if (Collection.class.isAssignableFrom(clazz)) {    List list=new ArrayList();    Class<?> componentType=Object.class;    String[] tokens=splitValues(text);    for (    String token : tokens) {      Object item=convertValue(token,componentType);      list.add(item);    }    return list;  }  PropertyEditor editor=PropertyEditorManager.findEditor(clazz);  if (editor != null) {    editor.setAsText(text);    return editor.getValue();  }} @TO@ ThenBody:{  if (clazz.isInstance(value)) {    return value;  }  if (clazz == String.class) {    return value.toString();  }  if (clazz == Character.class || clazz == char.class) {    String text=value.toString();    if (text.length() > 0) {      return text.charAt(0);    }  }  if (clazz == Boolean.class || clazz == boolean.class) {    String text=value.toString();    return Boolean.parseBoolean(text);  }  if (clazz == Integer.class || clazz == int.class) {    String text=value.toString();    return Integer.parseInt(text);  }  String text=value.toString();  if (clazz.isArray()) {    String[] tokens=splitValues(text);    Class<?> componentType=clazz.getComponentType();    Object array=Array.newInstance(componentType,tokens.length);    int index=0;    for (    String token : tokens) {      Object item=convertValue(token,componentType);      if (item != null) {        Array.set(array,index++,item);      }    }    return array;  } else   if (Collection.class.isAssignableFrom(clazz)) {    List list=new ArrayList();    Class<?> componentType=Object.class;    String[] tokens=splitValues(text);    for (    String token : tokens) {      Object item=convertValue(token,componentType);      list.add(item);    }    return list;  }  PropertyEditor editor=PropertyEditorManager.findEditor(clazz);  if (editor != null) {    editor.setAsText(text);    return editor.getValue();  }} @AT@ 1480 @LENGTH@ 1711
------INS IfStatement@@if (clazz == Boolean.class || clazz == boolean.class) {  String text=value.toString();  return Boolean.parseBoolean(text);} @TO@ Block@@ThenBody:{  if (clazz.isInstance(value)) {    return value;  }  if (clazz == String.class) {    return value.toString();  }  if (clazz == Character.class || clazz == char.class) {    String text=value.toString();    if (text.length() > 0) {      return text.charAt(0);    }  }  String text=value.toString();  if (clazz.isArray()) {    String[] tokens=splitValues(text);    Class<?> componentType=clazz.getComponentType();    Object array=Array.newInstance(componentType,tokens.length);    int index=0;    for (    String token : tokens) {      Object item=convertValue(token,componentType);      if (item != null) {        Array.set(array,index++,item);      }    }    return array;  } else   if (Collection.class.isAssignableFrom(clazz)) {    List list=new ArrayList();    Class<?> componentType=Object.class;    String[] tokens=splitValues(text);    for (    String token : tokens) {      Object item=convertValue(token,componentType);      list.add(item);    }    return list;  }  PropertyEditor editor=PropertyEditorManager.findEditor(clazz);  if (editor != null) {    editor.setAsText(text);    return editor.getValue();  }} @AT@ 1990 @LENGTH@ 168
---------INS InfixExpression@@clazz == Boolean.class || clazz == boolean.class @TO@ IfStatement@@if (clazz == Boolean.class || clazz == boolean.class) {  String text=value.toString();  return Boolean.parseBoolean(text);} @AT@ 1994 @LENGTH@ 48
------------INS InfixExpression@@clazz == Boolean.class @TO@ InfixExpression@@clazz == Boolean.class || clazz == boolean.class @AT@ 1994 @LENGTH@ 22
---------------INS SimpleName@@clazz @TO@ InfixExpression@@clazz == Boolean.class @AT@ 1994 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@clazz == Boolean.class @AT@ 1999 @LENGTH@ 2
---------------INS TypeLiteral@@Boolean.class @TO@ InfixExpression@@clazz == Boolean.class @AT@ 2003 @LENGTH@ 13
------------INS Operator@@|| @TO@ InfixExpression@@clazz == Boolean.class || clazz == boolean.class @AT@ 2016 @LENGTH@ 2
------------INS InfixExpression@@clazz == boolean.class @TO@ InfixExpression@@clazz == Boolean.class || clazz == boolean.class @AT@ 2020 @LENGTH@ 22
---------------INS SimpleName@@clazz @TO@ InfixExpression@@clazz == boolean.class @AT@ 2020 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@clazz == boolean.class @AT@ 2025 @LENGTH@ 2
---------------INS TypeLiteral@@boolean.class @TO@ InfixExpression@@clazz == boolean.class @AT@ 2029 @LENGTH@ 13
---------INS Block@@ThenBody:{  String text=value.toString();  return Boolean.parseBoolean(text);} @TO@ IfStatement@@if (clazz == Boolean.class || clazz == boolean.class) {  String text=value.toString();  return Boolean.parseBoolean(text);} @AT@ 2044 @LENGTH@ 114
------------INS VariableDeclarationStatement@@String text=value.toString(); @TO@ Block@@ThenBody:{  String text=value.toString();  return Boolean.parseBoolean(text);} @AT@ 2062 @LENGTH@ 31
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String text=value.toString(); @AT@ 2062 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@text=value.toString() @TO@ VariableDeclarationStatement@@String text=value.toString(); @AT@ 2069 @LENGTH@ 23
------------------INS SimpleName@@text @TO@ VariableDeclarationFragment@@text=value.toString() @AT@ 2069 @LENGTH@ 4
------------------INS MethodInvocation@@value.toString() @TO@ VariableDeclarationFragment@@text=value.toString() @AT@ 2076 @LENGTH@ 16
---------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString() @AT@ 2076 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString() @AT@ 2082 @LENGTH@ 10
------------INS ReturnStatement@@MethodInvocation:Boolean.parseBoolean(text) @TO@ Block@@ThenBody:{  String text=value.toString();  return Boolean.parseBoolean(text);} @AT@ 2110 @LENGTH@ 34
---------------INS MethodInvocation@@Boolean.parseBoolean(text) @TO@ ReturnStatement@@MethodInvocation:Boolean.parseBoolean(text) @AT@ 2117 @LENGTH@ 26
------------------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.parseBoolean(text) @AT@ 2117 @LENGTH@ 7
------------------INS SimpleName@@MethodName:parseBoolean:[text] @TO@ MethodInvocation@@Boolean.parseBoolean(text) @AT@ 2125 @LENGTH@ 18
---------------------INS SimpleName@@text @TO@ SimpleName@@MethodName:parseBoolean:[text] @AT@ 2138 @LENGTH@ 4
------INS IfStatement@@if (clazz == Integer.class || clazz == int.class) {  String text=value.toString();  return Integer.parseInt(text);} @TO@ Block@@ThenBody:{  if (clazz.isInstance(value)) {    return value;  }  if (clazz == String.class) {    return value.toString();  }  if (clazz == Character.class || clazz == char.class) {    String text=value.toString();    if (text.length() > 0) {      return text.charAt(0);    }  }  String text=value.toString();  if (clazz.isArray()) {    String[] tokens=splitValues(text);    Class<?> componentType=clazz.getComponentType();    Object array=Array.newInstance(componentType,tokens.length);    int index=0;    for (    String token : tokens) {      Object item=convertValue(token,componentType);      if (item != null) {        Array.set(array,index++,item);      }    }    return array;  } else   if (Collection.class.isAssignableFrom(clazz)) {    List list=new ArrayList();    Class<?> componentType=Object.class;    String[] tokens=splitValues(text);    for (    String token : tokens) {      Object item=convertValue(token,componentType);      list.add(item);    }    return list;  }  PropertyEditor editor=PropertyEditorManager.findEditor(clazz);  if (editor != null) {    editor.setAsText(text);    return editor.getValue();  }} @AT@ 2172 @LENGTH@ 160
---------INS InfixExpression@@clazz == Integer.class || clazz == int.class @TO@ IfStatement@@if (clazz == Integer.class || clazz == int.class) {  String text=value.toString();  return Integer.parseInt(text);} @AT@ 2176 @LENGTH@ 44
------------INS InfixExpression@@clazz == Integer.class @TO@ InfixExpression@@clazz == Integer.class || clazz == int.class @AT@ 2176 @LENGTH@ 22
---------------INS SimpleName@@clazz @TO@ InfixExpression@@clazz == Integer.class @AT@ 2176 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@clazz == Integer.class @AT@ 2181 @LENGTH@ 2
---------------INS TypeLiteral@@Integer.class @TO@ InfixExpression@@clazz == Integer.class @AT@ 2185 @LENGTH@ 13
------------INS Operator@@|| @TO@ InfixExpression@@clazz == Integer.class || clazz == int.class @AT@ 2198 @LENGTH@ 2
------------INS InfixExpression@@clazz == int.class @TO@ InfixExpression@@clazz == Integer.class || clazz == int.class @AT@ 2202 @LENGTH@ 18
---------------INS SimpleName@@clazz @TO@ InfixExpression@@clazz == int.class @AT@ 2202 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@clazz == int.class @AT@ 2207 @LENGTH@ 2
---------------INS TypeLiteral@@int.class @TO@ InfixExpression@@clazz == int.class @AT@ 2211 @LENGTH@ 9
---------INS Block@@ThenBody:{  String text=value.toString();  return Integer.parseInt(text);} @TO@ IfStatement@@if (clazz == Integer.class || clazz == int.class) {  String text=value.toString();  return Integer.parseInt(text);} @AT@ 2222 @LENGTH@ 110
------------INS VariableDeclarationStatement@@String text=value.toString(); @TO@ Block@@ThenBody:{  String text=value.toString();  return Integer.parseInt(text);} @AT@ 2240 @LENGTH@ 31
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String text=value.toString(); @AT@ 2240 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@text=value.toString() @TO@ VariableDeclarationStatement@@String text=value.toString(); @AT@ 2247 @LENGTH@ 23
------------------INS SimpleName@@text @TO@ VariableDeclarationFragment@@text=value.toString() @AT@ 2247 @LENGTH@ 4
------------------INS MethodInvocation@@value.toString() @TO@ VariableDeclarationFragment@@text=value.toString() @AT@ 2254 @LENGTH@ 16
---------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString() @AT@ 2254 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString() @AT@ 2260 @LENGTH@ 10
------------INS ReturnStatement@@MethodInvocation:Integer.parseInt(text) @TO@ Block@@ThenBody:{  String text=value.toString();  return Integer.parseInt(text);} @AT@ 2288 @LENGTH@ 30
---------------INS MethodInvocation@@Integer.parseInt(text) @TO@ ReturnStatement@@MethodInvocation:Integer.parseInt(text) @AT@ 2295 @LENGTH@ 22
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.parseInt(text) @AT@ 2295 @LENGTH@ 7
------------------INS SimpleName@@MethodName:parseInt:[text] @TO@ MethodInvocation@@Integer.parseInt(text) @AT@ 2303 @LENGTH@ 14
---------------------INS SimpleName@@text @TO@ SimpleName@@MethodName:parseInt:[text] @AT@ 2312 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertNull("Root node not reset",config.getRootNode()) @TO@ MethodInvocation:checkCombinedRootNotConstructed() @AT@ 26742 @LENGTH@ 56
---INS MethodInvocation@@MethodName:checkCombinedRootNotConstructed:[] @TO@ ExpressionStatement@@MethodInvocation:assertNull("Root node not reset",config.getRootNode()) @AT@ 26654 @LENGTH@ 33
---DEL MethodInvocation@@assertNull("Root node not reset",config.getRootNode()) @AT@ 26742 @LENGTH@ 55
------DEL SimpleName@@MethodName:assertNull:["Root node not reset", config.getRootNode()] @AT@ 26742 @LENGTH@ 55
---------DEL StringLiteral@@"Root node not reset" @AT@ 26753 @LENGTH@ 21
---------DEL MethodInvocation@@config.getRootNode() @AT@ 26776 @LENGTH@ 20
------------DEL SimpleName@@Name:config @AT@ 26776 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getRootNode:[] @AT@ 26783 @LENGTH@ 13


UPD IfStatement@@if (cxfMessage.getAttachments() != null && !(DataFormat.POJO.equals(dataFormat) && !isXop)) {  for (  Attachment attachment : cxfMessage.getAttachments()) {    camelExchange.getOut().addAttachment(attachment.getId(),attachment.getDataHandler());  }} @TO@ if (cxfMessage.getAttachments() != null && !(DataFormat.POJO.equals(dataFormat) && isXop)) {  for (  Attachment attachment : cxfMessage.getAttachments()) {    camelExchange.getOut().addAttachment(attachment.getId(),attachment.getDataHandler());  }} @AT@ 7543 @LENGTH@ 337
---UPD InfixExpression@@cxfMessage.getAttachments() != null && !(DataFormat.POJO.equals(dataFormat) && !isXop) @TO@ cxfMessage.getAttachments() != null && !(DataFormat.POJO.equals(dataFormat) && isXop) @AT@ 7547 @LENGTH@ 86
------UPD PrefixExpression@@!(DataFormat.POJO.equals(dataFormat) && !isXop) @TO@ !(DataFormat.POJO.equals(dataFormat) && isXop) @AT@ 7586 @LENGTH@ 47
---------UPD ParenthesizedExpression@@(DataFormat.POJO.equals(dataFormat) && !isXop) @TO@ (DataFormat.POJO.equals(dataFormat) && isXop) @AT@ 7587 @LENGTH@ 46
------------UPD InfixExpression@@DataFormat.POJO.equals(dataFormat) && !isXop @TO@ DataFormat.POJO.equals(dataFormat) && isXop @AT@ 7588 @LENGTH@ 44
---------------DEL PrefixExpression@@!isXop @AT@ 7626 @LENGTH@ 6
------------------DEL Operator@@! @AT@ 7626 @LENGTH@ 1
------------------DEL SimpleName@@isXop @AT@ 7627 @LENGTH@ 5
---------------INS SimpleName@@isXop @TO@ InfixExpression@@DataFormat.POJO.equals(dataFormat) && !isXop @AT@ 7626 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @TO@ TypeDeclaration@@[public]XmlConverterTest, ContextTestSupport @AT@ 17644 @LENGTH@ 437
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17644 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17651 @LENGTH@ 4
---INS SimpleName@@MethodName:testToInputStreamNonAsciiByDomSource @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17656 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17702 @LENGTH@ 9
---INS VariableDeclarationStatement@@XmlConverter conv=new XmlConverter(); @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17722 @LENGTH@ 39
------INS SimpleType@@XmlConverter @TO@ VariableDeclarationStatement@@XmlConverter conv=new XmlConverter(); @AT@ 17722 @LENGTH@ 12
------INS VariableDeclarationFragment@@conv=new XmlConverter() @TO@ VariableDeclarationStatement@@XmlConverter conv=new XmlConverter(); @AT@ 17735 @LENGTH@ 25
---------INS SimpleName@@conv @TO@ VariableDeclarationFragment@@conv=new XmlConverter() @AT@ 17735 @LENGTH@ 4
---------INS ClassInstanceCreation@@XmlConverter[] @TO@ VariableDeclarationFragment@@conv=new XmlConverter() @AT@ 17742 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@XmlConverter[] @AT@ 17742 @LENGTH@ 3
------------INS SimpleType@@XmlConverter @TO@ ClassInstanceCreation@@XmlConverter[] @AT@ 17746 @LENGTH@ 12
---INS VariableDeclarationStatement@@DOMSource source=conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>"); @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17771 @LENGTH@ 71
------INS SimpleType@@DOMSource @TO@ VariableDeclarationStatement@@DOMSource source=conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>"); @AT@ 17771 @LENGTH@ 9
------INS VariableDeclarationFragment@@source=conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>") @TO@ VariableDeclarationStatement@@DOMSource source=conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>"); @AT@ 17781 @LENGTH@ 60
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 17781 @LENGTH@ 6
---------INS MethodInvocation@@conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>") @TO@ VariableDeclarationFragment@@source=conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 17790 @LENGTH@ 51
------------INS SimpleName@@Name:conv @TO@ MethodInvocation@@conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 17790 @LENGTH@ 4
------------INS SimpleName@@MethodName:toDOMSource:["<foo>\u99f1\u99ddb\u00e4r</foo>"] @TO@ MethodInvocation@@conv.toDOMSource("<foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 17795 @LENGTH@ 46
---------------INS StringLiteral@@"<foo>\u99f1\u99ddb\u00e4r</foo>" @TO@ SimpleName@@MethodName:toDOMSource:["<foo>\u99f1\u99ddb\u00e4r</foo>"] @AT@ 17807 @LENGTH@ 33
---INS VariableDeclarationStatement@@InputStream out=conv.toInputStream(source,null); @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17851 @LENGTH@ 51
------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream out=conv.toInputStream(source,null); @AT@ 17851 @LENGTH@ 11
------INS VariableDeclarationFragment@@out=conv.toInputStream(source,null) @TO@ VariableDeclarationStatement@@InputStream out=conv.toInputStream(source,null); @AT@ 17863 @LENGTH@ 38
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=conv.toInputStream(source,null) @AT@ 17863 @LENGTH@ 3
---------INS MethodInvocation@@conv.toInputStream(source,null) @TO@ VariableDeclarationFragment@@out=conv.toInputStream(source,null) @AT@ 17869 @LENGTH@ 32
------------INS SimpleName@@Name:conv @TO@ MethodInvocation@@conv.toInputStream(source,null) @AT@ 17869 @LENGTH@ 4
------------INS SimpleName@@MethodName:toInputStream:[source, null] @TO@ MethodInvocation@@conv.toInputStream(source,null) @AT@ 17874 @LENGTH@ 27
---------------INS SimpleName@@source @TO@ SimpleName@@MethodName:toInputStream:[source, null] @AT@ 17888 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[source, null] @AT@ 17896 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertNotSame(source,out) @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17911 @LENGTH@ 27
------INS MethodInvocation@@assertNotSame(source,out) @TO@ ExpressionStatement@@MethodInvocation:assertNotSame(source,out) @AT@ 17911 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertNotSame:[source, out] @TO@ MethodInvocation@@assertNotSame(source,out) @AT@ 17911 @LENGTH@ 26
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:assertNotSame:[source, out] @AT@ 17925 @LENGTH@ 6
------------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertNotSame:[source, out] @AT@ 17933 @LENGTH@ 3
---INS VariableDeclarationStatement@@String s=context.getTypeConverter().convertTo(String.class,out); @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 17948 @LENGTH@ 67
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=context.getTypeConverter().convertTo(String.class,out); @AT@ 17948 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=context.getTypeConverter().convertTo(String.class,out) @TO@ VariableDeclarationStatement@@String s=context.getTypeConverter().convertTo(String.class,out); @AT@ 17955 @LENGTH@ 59
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=context.getTypeConverter().convertTo(String.class,out) @AT@ 17955 @LENGTH@ 1
---------INS MethodInvocation@@context.getTypeConverter().convertTo(String.class,out) @TO@ VariableDeclarationFragment@@s=context.getTypeConverter().convertTo(String.class,out) @AT@ 17959 @LENGTH@ 55
------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,out) @AT@ 17959 @LENGTH@ 26
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,out) @AT@ 17959 @LENGTH@ 7
------------INS SimpleName@@MethodName:convertTo:[String.class, out] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,out) @AT@ 17986 @LENGTH@ 28
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:convertTo:[String.class, out] @AT@ 17996 @LENGTH@ 12
---------------INS SimpleName@@out @TO@ SimpleName@@MethodName:convertTo:[String.class, out] @AT@ 18010 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",s) @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiByDomSource, Exception,  @AT@ 18024 @LENGTH@ 51
------INS MethodInvocation@@assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",s) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",s) @AT@ 18024 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertEquals:["<foo>\u99f1\u99ddb\u00e4r</foo>", s] @TO@ MethodInvocation@@assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",s) @AT@ 18024 @LENGTH@ 50
------------INS StringLiteral@@"<foo>\u99f1\u99ddb\u00e4r</foo>" @TO@ SimpleName@@MethodName:assertEquals:["<foo>\u99f1\u99ddb\u00e4r</foo>", s] @AT@ 18037 @LENGTH@ 33
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["<foo>\u99f1\u99ddb\u00e4r</foo>", s] @AT@ 18072 @LENGTH@ 1


UPD VariableDeclarationStatement@@@SuppressWarnings("unused") UnauthorizedClientException result=(UnauthorizedClientException)converter.read(OAuth2Exception.class,inputMessage); @TO@ @SuppressWarnings("unused") UnauthorizedUserException result=(UnauthorizedUserException)converter.read(OAuth2Exception.class,inputMessage); @AT@ 7596 @LENGTH@ 153
---UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 7626 @LENGTH@ 27
---UPD VariableDeclarationFragment@@result=(UnauthorizedClientException)converter.read(OAuth2Exception.class,inputMessage) @TO@ result=(UnauthorizedUserException)converter.read(OAuth2Exception.class,inputMessage) @AT@ 7654 @LENGTH@ 94
------UPD CastExpression@@(UnauthorizedClientException)converter.read(OAuth2Exception.class,inputMessage) @TO@ (UnauthorizedUserException)converter.read(OAuth2Exception.class,inputMessage) @AT@ 7663 @LENGTH@ 85
---------UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 7664 @LENGTH@ 27


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 11444 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 11447 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 11447 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 11447 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 11454 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 11474 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 11478 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 11484 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 11645 @LENGTH@ 53


UPD FieldDeclaration@@private, boolean, [lazyCreateEngines=false] @TO@ private, boolean, [lazyCreateEngines] @AT@ 2155 @LENGTH@ 42
---UPD VariableDeclarationFragment@@lazyCreateEngines=false @TO@ lazyCreateEngines @AT@ 2171 @LENGTH@ 25
------DEL BooleanLiteral@@false @AT@ 2191 @LENGTH@ 5


UPD IfStatement@@if (stream == null && ciphers == null) {  FileInputStream s=new FileInputStream(file);  long len=file.length();  WritableByteChannel out;  if (os instanceof WritableByteChannel) {    out=(WritableByteChannel)os;  } else {    out=Channels.newChannel(os);  }  FileChannel fc=s.getChannel();  long pos=0;  while (pos < len) {    long i=fc.transferTo(pos,len - pos,out);    pos+=i;  }  s.close();} else {  IOHelper.copy(getInputStream(),os);} @TO@ if (stream == null && ciphers == null) {  FileInputStream s=new FileInputStream(file);  long len=file.length();  WritableByteChannel out;  if (os instanceof WritableByteChannel) {    out=(WritableByteChannel)os;  } else {    out=Channels.newChannel(os);  }  FileChannel fc=s.getChannel();  long pos=0;  while (pos < len) {    long i=fc.transferTo(pos,len - pos,out);    pos+=i;  }  s.close();  fc.close();} else {  IOHelper.copy(getInputStream(),os);} @AT@ 2489 @LENGTH@ 659
---UPD Block@@ThenBody:{  FileInputStream s=new FileInputStream(file);  long len=file.length();  WritableByteChannel out;  if (os instanceof WritableByteChannel) {    out=(WritableByteChannel)os;  } else {    out=Channels.newChannel(os);  }  FileChannel fc=s.getChannel();  long pos=0;  while (pos < len) {    long i=fc.transferTo(pos,len - pos,out);    pos+=i;  }  s.close();} @TO@ ThenBody:{  FileInputStream s=new FileInputStream(file);  long len=file.length();  WritableByteChannel out;  if (os instanceof WritableByteChannel) {    out=(WritableByteChannel)os;  } else {    out=Channels.newChannel(os);  }  FileChannel fc=s.getChannel();  long pos=0;  while (pos < len) {    long i=fc.transferTo(pos,len - pos,out);    pos+=i;  }  s.close();  fc.close();} @AT@ 2528 @LENGTH@ 554
------INS ExpressionStatement@@MethodInvocation:fc.close() @TO@ Block@@ThenBody:{  FileInputStream s=new FileInputStream(file);  long len=file.length();  WritableByteChannel out;  if (os instanceof WritableByteChannel) {    out=(WritableByteChannel)os;  } else {    out=Channels.newChannel(os);  }  FileChannel fc=s.getChannel();  long pos=0;  while (pos < len) {    long i=fc.transferTo(pos,len - pos,out);    pos+=i;  }  s.close();} @AT@ 3085 @LENGTH@ 11
---------INS MethodInvocation@@fc.close() @TO@ ExpressionStatement@@MethodInvocation:fc.close() @AT@ 3085 @LENGTH@ 10
------------INS SimpleName@@Name:fc @TO@ MethodInvocation@@fc.close() @AT@ 3085 @LENGTH@ 2
------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@fc.close() @AT@ 3088 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2925 @LENGTH@ 109
---UPD Assignment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2925 @LENGTH@ 108
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 2930 @LENGTH@ 103
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 2949 @LENGTH@ 83
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3007 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 3007 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3015 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 3023 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @AT@ 3015 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3015 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3032 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:os.write((CRLF + BOUNDARY + "--"+ CRLF).getBytes("US-ASCII")) @TO@ MethodInvocation:os.write((CRLF + BOUNDARY + "--"+ CRLF).getBytes(StandardCharsets.US_ASCII)) @AT@ 6348 @LENGTH@ 63
---UPD MethodInvocation@@os.write((CRLF + BOUNDARY + "--"+ CRLF).getBytes("US-ASCII")) @TO@ os.write((CRLF + BOUNDARY + "--"+ CRLF).getBytes(StandardCharsets.US_ASCII)) @AT@ 6348 @LENGTH@ 62
------UPD SimpleName@@MethodName:write:[(CRLF + BOUNDARY + "--"+ CRLF).getBytes("US-ASCII")] @TO@ MethodName:write:[(CRLF + BOUNDARY + "--"+ CRLF).getBytes(StandardCharsets.US_ASCII)] @AT@ 6351 @LENGTH@ 59
---------UPD MethodInvocation@@(CRLF + BOUNDARY + "--"+ CRLF).getBytes("US-ASCII") @TO@ (CRLF + BOUNDARY + "--"+ CRLF).getBytes(StandardCharsets.US_ASCII) @AT@ 6357 @LENGTH@ 52
------------UPD SimpleName@@MethodName:getBytes:["US-ASCII"] @TO@ MethodName:getBytes:[StandardCharsets.US_ASCII] @AT@ 6389 @LENGTH@ 20
---------------DEL StringLiteral@@"US-ASCII" @AT@ 6398 @LENGTH@ 10
---------------INS QualifiedName@@StandardCharsets.US_ASCII @TO@ SimpleName@@MethodName:getBytes:["US-ASCII"] @AT@ 6440 @LENGTH@ 25
------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.US_ASCII @AT@ 6440 @LENGTH@ 16
------------------INS SimpleName@@US_ASCII @TO@ QualifiedName@@StandardCharsets.US_ASCII @AT@ 6457 @LENGTH@ 8


MOV FieldDeclaration@@protected, boolean, [startCamelContext=true] @TO@ TypeDeclaration@@[public]WebsocketCamelRouterTestSupport, CamelTestSupport @AT@ 1536 @LENGTH@ 43


UPD VariableDeclarationStatement@@final ServiceController<?> serviceController=CurrentServiceContainer.getServiceContainer().getService(serviceName); @TO@ final ServiceController<?> serviceController=currentServiceContainer().getService(serviceName); @AT@ 9247 @LENGTH@ 117
---UPD VariableDeclarationFragment@@serviceController=CurrentServiceContainer.getServiceContainer().getService(serviceName) @TO@ serviceController=currentServiceContainer().getService(serviceName) @AT@ 9274 @LENGTH@ 89
------UPD MethodInvocation@@CurrentServiceContainer.getServiceContainer().getService(serviceName) @TO@ currentServiceContainer().getService(serviceName) @AT@ 9294 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:currentServiceContainer:[] @AT@ 9294 @LENGTH@ 45
---------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 9294 @LENGTH@ 23


UPD VariableDeclarationStatement@@BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))); @TO@ BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)); @AT@ 8386 @LENGTH@ 135
---UPD VariableDeclarationFragment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 8401 @LENGTH@ 119
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 8406 @LENGTH@ 114
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 8425 @LENGTH@ 94
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 8494 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 8494 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 8502 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 8510 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @AT@ 8503 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8503 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8520 @LENGTH@ 5


UPD SwitchStatement@@switch (code) {case XMLStreamReader.START_ELEMENT:  depth++;QName name=reader.getName();if (LOG.isTraceEnabled()) {LOG.trace("se={}; depth={}; trackdepth={}",new Object[]{name,depth,trackdepth});}String token=getCurrenText();LOG.trace("token={}",token);if (!backtrack && wrap) {pushSegment(name,token);}pushName(name);if (!wrap) {pushNamespaces(reader);}backtrack=false;if (matches(name,current())) {if (isBottom()) {token=getCurrentToken();backtrack=true;trackdepth=depth;return token;} else {down();}} else if (isDoS()) {} else {readCurrent(false);}break;case XMLStreamReader.END_ELEMENT:depth--;QName endname=reader.getName();LOG.trace("ee={}",endname);popName();if (!wrap) {popNamespaces();}int pc=0;if (backtrack || (trackdepth > 0 && depth == trackdepth - 1)) {backtrack=true;trackdepth--;if (wrap) {while (!endname.equals(peekLog())) {pc++;popLog();}}}if (backtrack) {if (wrap) {for (int i=0; i < pc; i++) {popSegment();}}if ((ancestor() == null && !isTop()) || (ancestor() != null && matches(endname,ancestor()))) {up();}}break;case XMLStreamReader.END_DOCUMENT:LOG.trace("depth={}",depth);break;} @TO@ switch (code) {case XMLStreamReader.START_ELEMENT:  depth++;QName name=reader.getName();if (LOG.isTraceEnabled()) {LOG.trace("se={}; depth={}; trackdepth={}",new Object[]{name,depth,trackdepth});}String token=getCurrenText();LOG.trace("token={}",token);if (!backtrack && wrap) {pushSegment(name,token);}pushName(name);if (!wrap) {pushNamespaces(reader);}backtrack=false;if (matches(name,current())) {if (isBottom()) {token=getCurrentToken();backtrack=true;trackdepth=depth;return token;} else {down();}} else if (isDoS()) {} else {readCurrent(false);}break;case XMLStreamReader.END_ELEMENT:depth--;QName endname=reader.getName();LOG.trace("ee={}",endname);popName();if (!wrap) {popNamespaces();}int pc=0;if (backtrack || (trackdepth > 0 && depth == trackdepth - 1)) {backtrack=true;trackdepth--;if (wrap) {while (!endname.equals(peekLog())) {pc++;popLog();}}}if (backtrack) {if (wrap) {for (int i=0; i < pc; i++) {popSegment();}}if ((ancestor() == null && !isTop()) || (ancestor() != null && matches(endname,ancestor()))) {up();}}break;case XMLStreamReader.END_DOCUMENT:LOG.trace("depth={}",depth);break;default :break;} @AT@ 11359 @LENGTH@ 3065
---INS SwitchCase@@default @TO@ SwitchStatement@@switch (code) {case XMLStreamReader.START_ELEMENT:  depth++;QName name=reader.getName();if (LOG.isTraceEnabled()) {LOG.trace("se={}; depth={}; trackdepth={}",new Object[]{name,depth,trackdepth});}String token=getCurrenText();LOG.trace("token={}",token);if (!backtrack && wrap) {pushSegment(name,token);}pushName(name);if (!wrap) {pushNamespaces(reader);}backtrack=false;if (matches(name,current())) {if (isBottom()) {token=getCurrentToken();backtrack=true;trackdepth=depth;return token;} else {down();}} else if (isDoS()) {} else {readCurrent(false);}break;case XMLStreamReader.END_ELEMENT:depth--;QName endname=reader.getName();LOG.trace("ee={}",endname);popName();if (!wrap) {popNamespaces();}int pc=0;if (backtrack || (trackdepth > 0 && depth == trackdepth - 1)) {backtrack=true;trackdepth--;if (wrap) {while (!endname.equals(peekLog())) {pc++;popLog();}}}if (backtrack) {if (wrap) {for (int i=0; i < pc; i++) {popSegment();}}if ((ancestor() == null && !isTop()) || (ancestor() != null && matches(endname,ancestor()))) {up();}}break;case XMLStreamReader.END_DOCUMENT:LOG.trace("depth={}",depth);break;} @AT@ 15217 @LENGTH@ 8
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (code) {case XMLStreamReader.START_ELEMENT:  depth++;QName name=reader.getName();if (LOG.isTraceEnabled()) {LOG.trace("se={}; depth={}; trackdepth={}",new Object[]{name,depth,trackdepth});}String token=getCurrenText();LOG.trace("token={}",token);if (!backtrack && wrap) {pushSegment(name,token);}pushName(name);if (!wrap) {pushNamespaces(reader);}backtrack=false;if (matches(name,current())) {if (isBottom()) {token=getCurrentToken();backtrack=true;trackdepth=depth;return token;} else {down();}} else if (isDoS()) {} else {readCurrent(false);}break;case XMLStreamReader.END_ELEMENT:depth--;QName endname=reader.getName();LOG.trace("ee={}",endname);popName();if (!wrap) {popNamespaces();}int pc=0;if (backtrack || (trackdepth > 0 && depth == trackdepth - 1)) {backtrack=true;trackdepth--;if (wrap) {while (!endname.equals(peekLog())) {pc++;popLog();}}}if (backtrack) {if (wrap) {for (int i=0; i < pc; i++) {popSegment();}}if ((ancestor() == null && !isTop()) || (ancestor() != null && matches(endname,ancestor()))) {up();}}break;case XMLStreamReader.END_DOCUMENT:LOG.trace("depth={}",depth);break;} @AT@ 15246 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 2271 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 2278 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 2295 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 2308 @LENGTH@ 202
------------DEL New@@new @AT@ 2308 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 2312 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 2312 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 2329 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2349 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 2385 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 2385 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 2392 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 2409 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 2394 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 2394 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 2418 @LENGTH@ 10


INS MethodDeclaration@@Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @TO@ TypeDeclaration@@[public]StringRedisConnection, [RedisConnection] @AT@ 8473 @LENGTH@ 39
---INS ParameterizedType@@Cursor<String> @TO@ MethodDeclaration@@Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 8458 @LENGTH@ 14
------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<String> @AT@ 8458 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Cursor<String> @AT@ 8465 @LENGTH@ 6
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 8473 @LENGTH@ 5
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 8479 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 8479 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 8486 @LENGTH@ 3
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 8491 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 8491 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 8503 @LENGTH@ 7


INS MethodDeclaration@@void, MethodName:cancelledAsyncTaskBeforeRun, String asyncTaskRunner,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYPRT",length=4), public]ProtocolLogger, [BasicLogger] @AT@ 13345 @LENGTH@ 52
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:cancelledAsyncTaskBeforeRun, String asyncTaskRunner,  @AT@ 13340 @LENGTH@ 4
---INS SimpleName@@MethodName:cancelledAsyncTaskBeforeRun @TO@ MethodDeclaration@@void, MethodName:cancelledAsyncTaskBeforeRun, String asyncTaskRunner,  @AT@ 13345 @LENGTH@ 27
---INS SingleVariableDeclaration@@String asyncTaskRunner @TO@ MethodDeclaration@@void, MethodName:cancelledAsyncTaskBeforeRun, String asyncTaskRunner,  @AT@ 13373 @LENGTH@ 22
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String asyncTaskRunner @AT@ 13373 @LENGTH@ 6
------INS SimpleName@@asyncTaskRunner @TO@ SingleVariableDeclaration@@String asyncTaskRunner @AT@ 13380 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertThat(mapper.writeValueAsString(persistentEntityResource),is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}")) @TO@ MethodInvocation:assertThat(mapper.writeValueAsString(persistentEntityResource),is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}")) @AT@ 7571 @LENGTH@ 342
---UPD MethodInvocation@@assertThat(mapper.writeValueAsString(persistentEntityResource),is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}")) @TO@ assertThat(mapper.writeValueAsString(persistentEntityResource),is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}")) @AT@ 7571 @LENGTH@ 341
------UPD SimpleName@@MethodName:assertThat:[mapper.writeValueAsString(persistentEntityResource), is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}")] @TO@ MethodName:assertThat:[mapper.writeValueAsString(persistentEntityResource), is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}")] @AT@ 7571 @LENGTH@ 341
---------UPD MethodInvocation@@is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}") @TO@ is("{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}") @AT@ 7639 @LENGTH@ 272
------------UPD SimpleName@@MethodName:is:["{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}"] @TO@ MethodName:is:["{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}"] @AT@ 7639 @LENGTH@ 272
---------------UPD InfixExpression@@"{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}" @TO@ "{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}" @AT@ 7642 @LENGTH@ 268
------------------UPD StringLiteral@@"{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" @TO@ "{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" @AT@ 7642 @LENGTH@ 89
------------UPD SimpleName@@MethodName:is:["{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}"] @TO@ MethodName:is:["{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}"] @AT@ 7639 @LENGTH@ 272
---------------UPD InfixExpression@@"{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}" @TO@ "{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" + ",\"_links\":{\"creator\":{\"href\":\"http://localhost:8080/orders/1/creator\"}}}]},\"" + "page\":{\"size\":1,\"totalElements\":10,\"totalPages\":10,\"number\":0}}" @AT@ 7642 @LENGTH@ 268
------------------UPD StringLiteral@@"{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}]" @TO@ "{\"_embedded\":{\"orders\":[{\"lineItems\":[{\"name\":\"first\"},{\"name\":\"second\"}],\"price\":2.5" @AT@ 7642 @LENGTH@ 89


UPD IfStatement@@if (channel.getTargetChannel() == mockChannel) {  Consumer rabbitConsumer=TestUtils.getPropertyValue(consumer,"consumer",Consumer.class);  if (cancel) {    rabbitConsumer.handleCancelOk((String)invocation.getArguments()[0]);  } else {    rabbitConsumer.handleConsumeOk("foo");  }  latch.countDown();} @TO@ if (channel != null && channel.getTargetChannel() == mockChannel) {  Consumer rabbitConsumer=TestUtils.getPropertyValue(consumer,"consumer",Consumer.class);  if (cancel) {    rabbitConsumer.handleCancelOk((String)invocation.getArguments()[0]);  } else {    rabbitConsumer.handleConsumeOk("foo");  }  latch.countDown();} @AT@ 21665 @LENGTH@ 350
---INS InfixExpression@@channel != null && channel.getTargetChannel() == mockChannel @TO@ IfStatement@@if (channel.getTargetChannel() == mockChannel) {  Consumer rabbitConsumer=TestUtils.getPropertyValue(consumer,"consumer",Consumer.class);  if (cancel) {    rabbitConsumer.handleCancelOk((String)invocation.getArguments()[0]);  } else {    rabbitConsumer.handleConsumeOk("foo");  }  latch.countDown();} @AT@ 21669 @LENGTH@ 60
------MOV InfixExpression@@channel.getTargetChannel() == mockChannel @TO@ InfixExpression@@channel != null && channel.getTargetChannel() == mockChannel @AT@ 21669 @LENGTH@ 41
------INS InfixExpression@@channel != null @TO@ InfixExpression@@channel != null && channel.getTargetChannel() == mockChannel @AT@ 21669 @LENGTH@ 15
---------INS SimpleName@@channel @TO@ InfixExpression@@channel != null @AT@ 21669 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@channel != null @AT@ 21676 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@channel != null @AT@ 21680 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@channel != null && channel.getTargetChannel() == mockChannel @AT@ 21684 @LENGTH@ 2


UPD TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build();  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container broker=containerList.removeLast();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));    }  }  finally {    curatorProxy.close();  }  Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));      String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");      return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=fabricService.adapt(CuratorFramework.class);  Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build();  try {    LinkedList<Container> containerList=new LinkedList<Container>(containers);    Container broker=containerList.removeLast();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));    }    Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));        String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");        return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");      }    },10000L));  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 2106 @LENGTH@ 2220
---DEL ExpressionStatement@@Assignment:containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build() @AT@ 2124 @LENGTH@ 128
------DEL Assignment@@containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build() @AT@ 2124 @LENGTH@ 127
---------DEL SimpleName@@containers @AT@ 2124 @LENGTH@ 10
---------DEL Operator@@= @AT@ 2134 @LENGTH@ 1
---INS VariableDeclarationStatement@@CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build();  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container broker=containerList.removeLast();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));    }  }  finally {    curatorProxy.close();  }  Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));      String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");      return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 2145 @LENGTH@ 71
------INS SimpleType@@CuratorFramework @TO@ VariableDeclarationStatement@@CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 2145 @LENGTH@ 16
------INS VariableDeclarationFragment@@curator=fabricService.adapt(CuratorFramework.class) @TO@ VariableDeclarationStatement@@CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 2162 @LENGTH@ 53
---------INS SimpleName@@curator @TO@ VariableDeclarationFragment@@curator=fabricService.adapt(CuratorFramework.class) @AT@ 2162 @LENGTH@ 7
---------INS MethodInvocation@@fabricService.adapt(CuratorFramework.class) @TO@ VariableDeclarationFragment@@curator=fabricService.adapt(CuratorFramework.class) @AT@ 2172 @LENGTH@ 43
------------MOV SimpleName@@Name:c @TO@ MethodInvocation@@fabricService.adapt(CuratorFramework.class) @AT@ 3884 @LENGTH@ 1
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@fabricService.adapt(CuratorFramework.class) @AT@ 3886 @LENGTH@ 7
---------------INS TypeLiteral@@CuratorFramework.class @TO@ SimpleName@@MethodName:getId:[] @AT@ 2192 @LENGTH@ 22
---INS VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build();  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container broker=containerList.removeLast();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));    }  }  finally {    curatorProxy.close();  }  Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));      String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");      return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 2230 @LENGTH@ 148
------INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build(); @AT@ 2230 @LENGTH@ 19
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 2230 @LENGTH@ 3
---------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 2234 @LENGTH@ 14
------MOV VariableDeclarationFragment@@output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO") @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build(); @AT@ 3944 @LENGTH@ 122
---------MOV MethodInvocation@@ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build() @TO@ VariableDeclarationFragment@@output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO") @AT@ 2137 @LENGTH@ 114
---------INS SimpleName@@containers @TO@ VariableDeclarationFragment@@output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO") @AT@ 2250 @LENGTH@ 10
---UPD VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @TO@ FabricService fabricService=fabricProxy.getService(); @AT@ 2414 @LENGTH@ 117
------INS SimpleType@@FabricService @TO@ VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @AT@ 2077 @LENGTH@ 13
------DEL ParameterizedType@@ServiceProxy<CuratorFramework> @AT@ 2414 @LENGTH@ 30
---------DEL SimpleType@@ServiceProxy @AT@ 2414 @LENGTH@ 12
---------DEL SimpleType@@CuratorFramework @AT@ 2427 @LENGTH@ 16
------UPD VariableDeclarationFragment@@curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @TO@ fabricService=fabricProxy.getService() @AT@ 2445 @LENGTH@ 85
---------UPD SimpleName@@curatorProxy @TO@ fabricService @AT@ 2445 @LENGTH@ 12
---------UPD MethodInvocation@@ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @TO@ fabricProxy.getService() @AT@ 2460 @LENGTH@ 70
------------UPD SimpleName@@Name:ServiceProxy @TO@ Name:fabricProxy @AT@ 2460 @LENGTH@ 12
------------UPD SimpleName@@MethodName:createServiceProxy:[bundleContext, CuratorFramework.class] @TO@ MethodName:getService:[] @AT@ 2473 @LENGTH@ 57
---------------DEL SimpleName@@bundleContext @AT@ 2492 @LENGTH@ 13
---------------DEL TypeLiteral@@CuratorFramework.class @AT@ 2507 @LENGTH@ 22
---UPD TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @TO@ try {  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container broker=containerList.removeLast();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }  Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));      String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");      return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);} @AT@ 2544 @LENGTH@ 856
------MOV VariableDeclarationStatement@@LinkedList<Container> containerList=new LinkedList<Container>(containers); @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @AT@ 2265 @LENGTH@ 76
------MOV VariableDeclarationStatement@@Container broker=containerList.removeLast(); @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @AT@ 2354 @LENGTH@ 46
------DEL VariableDeclarationStatement@@CuratorFramework curator=curatorProxy.getService(); @AT@ 2566 @LENGTH@ 53
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:cluster-list")) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @AT@ 2971 @LENGTH@ 58
------UPD Block@@FinallyBody:{  curatorProxy.close();} @TO@ FinallyBody:{  ContainerBuilder.destroy(containers);} @AT@ 3347 @LENGTH@ 53
---------UPD ExpressionStatement@@MethodInvocation:curatorProxy.close() @TO@ MethodInvocation:ContainerBuilder.destroy(containers) @AT@ 3365 @LENGTH@ 21
------------UPD MethodInvocation@@curatorProxy.close() @TO@ ContainerBuilder.destroy(containers) @AT@ 3365 @LENGTH@ 20
---------------MOV SimpleName@@Name:ContainerBuilder @TO@ MethodInvocation@@curatorProxy.close() @AT@ 4246 @LENGTH@ 16
---------------MOV SimpleName@@MethodName:destroy:[containers] @TO@ MethodInvocation@@curatorProxy.close() @AT@ 4263 @LENGTH@ 19
------MOV ExpressionStatement@@MethodInvocation:Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @AT@ 3414 @LENGTH@ 64
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:cluster-list")) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @AT@ 3491 @LENGTH@ 58
------MOV ExpressionStatement@@MethodInvocation:Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));
    String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");
    return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");
  }
}
,10000L)) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @AT@ 3563 @LENGTH@ 650
---UPD Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ FinallyBody:{  fabricProxy.close();} @AT@ 4232 @LENGTH@ 94


UPD IfStatement@@if (!containerName.equals(oldName)) {  if (force || permissionToRenameContainer()) {    if (!registerContainer(containerName,zookeeperPassword,profile,force)) {      System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");      return null;    }    runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);    runtimeProperties.setProperty("zookeeper.password",zookeeperPassword);    runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);    File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");    Properties props=new Properties(file);    props.put(SystemProperties.KARAF_NAME,containerName);    props.put("zookeeper.url",zookeeperUrl);    props.put("zookeeper.password",zookeeperPassword);    props.save();    if (!nonManaged) {      installBundles();    }    runtimeProperties.setProperty("karaf.restart","true");    runtimeProperties.setProperty("karaf.restart.clean","false");    bundleContext.getBundle(0).stop();    return null;  } else {    return null;  }} else {  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.println("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  Configuration config=configurationAdmin.getConfiguration(Constants.ZOOKEEPER_CLIENT_PID);  Hashtable<String,Object> properties=new Hashtable<String,Object>();  properties.put("zookeeper.url",zookeeperUrl);  properties.put("zookeeper.password",zookeeperPassword);  config.setBundleLocation(null);  config.update(properties);  if (!nonManaged) {    installBundles();  }  return null;} @TO@ if (!containerName.equals(oldName)) {  if (force || permissionToRenameContainer()) {    if (!registerContainer(containerName,zookeeperPassword,profile,force)) {      System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");      return null;    }    runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);    runtimeProperties.setProperty("zookeeper.password",encodedPassword);    runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);    File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");    Properties props=new Properties(file);    props.put(SystemProperties.KARAF_NAME,containerName);    props.put("zookeeper.url",zookeeperUrl);    props.put("zookeeper.password",encodedPassword);    props.save();    if (!nonManaged) {      installBundles();    }    runtimeProperties.setProperty("karaf.restart","true");    runtimeProperties.setProperty("karaf.restart.clean","false");    bundleContext.getBundle(0).stop();    return null;  } else {    return null;  }} else {  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.println("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  Configuration config=configurationAdmin.getConfiguration(Constants.ZOOKEEPER_CLIENT_PID);  Hashtable<String,Object> properties=new Hashtable<String,Object>();  properties.put("zookeeper.url",zookeeperUrl);  properties.put("zookeeper.password",PasswordEncoder.encode(encodedPassword));  config.setBundleLocation(null);  config.update(properties);  if (!nonManaged) {    installBundles();  }  return null;} @AT@ 5372 @LENGTH@ 2573
---UPD Block@@ThenBody:{  if (force || permissionToRenameContainer()) {    if (!registerContainer(containerName,zookeeperPassword,profile,force)) {      System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");      return null;    }    runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);    runtimeProperties.setProperty("zookeeper.password",zookeeperPassword);    runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);    File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");    Properties props=new Properties(file);    props.put(SystemProperties.KARAF_NAME,containerName);    props.put("zookeeper.url",zookeeperUrl);    props.put("zookeeper.password",zookeeperPassword);    props.save();    if (!nonManaged) {      installBundles();    }    runtimeProperties.setProperty("karaf.restart","true");    runtimeProperties.setProperty("karaf.restart.clean","false");    bundleContext.getBundle(0).stop();    return null;  } else {    return null;  }} @TO@ ThenBody:{  if (force || permissionToRenameContainer()) {    if (!registerContainer(containerName,zookeeperPassword,profile,force)) {      System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");      return null;    }    runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);    runtimeProperties.setProperty("zookeeper.password",encodedPassword);    runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);    File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");    Properties props=new Properties(file);    props.put(SystemProperties.KARAF_NAME,containerName);    props.put("zookeeper.url",zookeeperUrl);    props.put("zookeeper.password",encodedPassword);    props.save();    if (!nonManaged) {      installBundles();    }    runtimeProperties.setProperty("karaf.restart","true");    runtimeProperties.setProperty("karaf.restart.clean","false");    bundleContext.getBundle(0).stop();    return null;  } else {    return null;  }} @AT@ 5408 @LENGTH@ 1715
------UPD IfStatement@@if (force || permissionToRenameContainer()) {  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);  runtimeProperties.setProperty("zookeeper.password",zookeeperPassword);  runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);  File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");  Properties props=new Properties(file);  props.put(SystemProperties.KARAF_NAME,containerName);  props.put("zookeeper.url",zookeeperUrl);  props.put("zookeeper.password",zookeeperPassword);  props.save();  if (!nonManaged) {    installBundles();  }  runtimeProperties.setProperty("karaf.restart","true");  runtimeProperties.setProperty("karaf.restart.clean","false");  bundleContext.getBundle(0).stop();  return null;} else {  return null;} @TO@ if (force || permissionToRenameContainer()) {  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);  runtimeProperties.setProperty("zookeeper.password",encodedPassword);  runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);  File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");  Properties props=new Properties(file);  props.put(SystemProperties.KARAF_NAME,containerName);  props.put("zookeeper.url",zookeeperUrl);  props.put("zookeeper.password",encodedPassword);  props.save();  if (!nonManaged) {    installBundles();  }  runtimeProperties.setProperty("karaf.restart","true");  runtimeProperties.setProperty("karaf.restart.clean","false");  bundleContext.getBundle(0).stop();  return null;} else {  return null;} @AT@ 5422 @LENGTH@ 1691
---------UPD Block@@ThenBody:{  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);  runtimeProperties.setProperty("zookeeper.password",zookeeperPassword);  runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);  File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");  Properties props=new Properties(file);  props.put(SystemProperties.KARAF_NAME,containerName);  props.put("zookeeper.url",zookeeperUrl);  props.put("zookeeper.password",zookeeperPassword);  props.save();  if (!nonManaged) {    installBundles();  }  runtimeProperties.setProperty("karaf.restart","true");  runtimeProperties.setProperty("karaf.restart.clean","false");  bundleContext.getBundle(0).stop();  return null;} @TO@ ThenBody:{  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.print("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  runtimeProperties.setProperty(SystemProperties.KARAF_NAME,containerName);  runtimeProperties.setProperty("zookeeper.password",encodedPassword);  runtimeProperties.setProperty("zookeeper.url",zookeeperUrl);  File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");  Properties props=new Properties(file);  props.put(SystemProperties.KARAF_NAME,containerName);  props.put("zookeeper.url",zookeeperUrl);  props.put("zookeeper.password",encodedPassword);  props.save();  if (!nonManaged) {    installBundles();  }  runtimeProperties.setProperty("karaf.restart","true");  runtimeProperties.setProperty("karaf.restart.clean","false");  bundleContext.getBundle(0).stop();  return null;} @AT@ 5466 @LENGTH@ 1597
------------UPD ExpressionStatement@@MethodInvocation:runtimeProperties.setProperty("zookeeper.password",zookeeperPassword) @TO@ MethodInvocation:runtimeProperties.setProperty("zookeeper.password",encodedPassword) @AT@ 6009 @LENGTH@ 71
---------------UPD MethodInvocation@@runtimeProperties.setProperty("zookeeper.password",zookeeperPassword) @TO@ runtimeProperties.setProperty("zookeeper.password",encodedPassword) @AT@ 6009 @LENGTH@ 70
------------------UPD SimpleName@@MethodName:setProperty:["zookeeper.password", zookeeperPassword] @TO@ MethodName:setProperty:["zookeeper.password", encodedPassword] @AT@ 6027 @LENGTH@ 52
---------------------UPD SimpleName@@zookeeperPassword @TO@ encodedPassword @AT@ 6061 @LENGTH@ 17
------------UPD ExpressionStatement@@MethodInvocation:props.put("zookeeper.password",zookeeperPassword) @TO@ MethodInvocation:props.put("zookeeper.password",encodedPassword) @AT@ 6604 @LENGTH@ 51
---------------UPD MethodInvocation@@props.put("zookeeper.password",zookeeperPassword) @TO@ props.put("zookeeper.password",encodedPassword) @AT@ 6604 @LENGTH@ 50
------------------UPD SimpleName@@MethodName:put:["zookeeper.password", zookeeperPassword] @TO@ MethodName:put:["zookeeper.password", encodedPassword] @AT@ 6610 @LENGTH@ 44
---------------------UPD SimpleName@@zookeeperPassword @TO@ encodedPassword @AT@ 6636 @LENGTH@ 17
---UPD Block@@ElseBody:{  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.println("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  Configuration config=configurationAdmin.getConfiguration(Constants.ZOOKEEPER_CLIENT_PID);  Hashtable<String,Object> properties=new Hashtable<String,Object>();  properties.put("zookeeper.url",zookeeperUrl);  properties.put("zookeeper.password",zookeeperPassword);  config.setBundleLocation(null);  config.update(properties);  if (!nonManaged) {    installBundles();  }  return null;} @TO@ ElseBody:{  if (!registerContainer(containerName,zookeeperPassword,profile,force)) {    System.err.println("A container with the name: " + containerName + " is already member of the cluster. You can specify a different name as an argument.");    return null;  }  Configuration config=configurationAdmin.getConfiguration(Constants.ZOOKEEPER_CLIENT_PID);  Hashtable<String,Object> properties=new Hashtable<String,Object>();  properties.put("zookeeper.url",zookeeperUrl);  properties.put("zookeeper.password",PasswordEncoder.encode(encodedPassword));  config.setBundleLocation(null);  config.update(properties);  if (!nonManaged) {    installBundles();  }  return null;} @AT@ 7129 @LENGTH@ 816
------UPD ExpressionStatement@@MethodInvocation:properties.put("zookeeper.password",zookeeperPassword) @TO@ MethodInvocation:properties.put("zookeeper.password",PasswordEncoder.encode(encodedPassword)) @AT@ 7692 @LENGTH@ 56
---------UPD MethodInvocation@@properties.put("zookeeper.password",zookeeperPassword) @TO@ properties.put("zookeeper.password",PasswordEncoder.encode(encodedPassword)) @AT@ 7692 @LENGTH@ 55
------------UPD SimpleName@@MethodName:put:["zookeeper.password", zookeeperPassword] @TO@ MethodName:put:["zookeeper.password", PasswordEncoder.encode(encodedPassword)] @AT@ 7703 @LENGTH@ 44
---------------UPD SimpleName@@zookeeperPassword @TO@ encodedPassword @AT@ 7729 @LENGTH@ 17
---------------INS MethodInvocation@@PasswordEncoder.encode(encodedPassword) @TO@ SimpleName@@MethodName:put:["zookeeper.password", zookeeperPassword] @AT@ 7842 @LENGTH@ 39
------------------INS SimpleName@@Name:PasswordEncoder @TO@ MethodInvocation@@PasswordEncoder.encode(encodedPassword) @AT@ 7842 @LENGTH@ 15
------------------INS SimpleName@@MethodName:encode:[encodedPassword] @TO@ MethodInvocation@@PasswordEncoder.encode(encodedPassword) @AT@ 7858 @LENGTH@ 23
---------------------MOV SimpleName@@zookeeperPassword @TO@ SimpleName@@MethodName:encode:[encodedPassword] @AT@ 7729 @LENGTH@ 17


INS MethodDeclaration@@public, static, String, MethodName:normalizeDestinationName, String destination,  @TO@ TypeDeclaration@@[public, final]JmsMessageHelper,  @AT@ 6506 @LENGTH@ 221
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:normalizeDestinationName, String destination,  @AT@ 6506 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:normalizeDestinationName, String destination,  @AT@ 6513 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:normalizeDestinationName, String destination,  @AT@ 6520 @LENGTH@ 6
---INS SimpleName@@MethodName:normalizeDestinationName @TO@ MethodDeclaration@@public, static, String, MethodName:normalizeDestinationName, String destination,  @AT@ 6527 @LENGTH@ 24
---INS SingleVariableDeclaration@@String destination @TO@ MethodDeclaration@@public, static, String, MethodName:normalizeDestinationName, String destination,  @AT@ 6552 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String destination @AT@ 6552 @LENGTH@ 6
------INS SimpleName@@destination @TO@ SingleVariableDeclaration@@String destination @AT@ 6559 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:normalizeDestinationName(destination,false) @TO@ MethodDeclaration@@public, static, String, MethodName:normalizeDestinationName, String destination,  @AT@ 6669 @LENGTH@ 52
------INS MethodInvocation@@normalizeDestinationName(destination,false) @TO@ ReturnStatement@@MethodInvocation:normalizeDestinationName(destination,false) @AT@ 6676 @LENGTH@ 44
---------INS SimpleName@@MethodName:normalizeDestinationName:[destination, false] @TO@ MethodInvocation@@normalizeDestinationName(destination,false) @AT@ 6676 @LENGTH@ 44
------------INS SimpleName@@destination @TO@ SimpleName@@MethodName:normalizeDestinationName:[destination, false] @AT@ 6701 @LENGTH@ 11
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:normalizeDestinationName:[destination, false] @AT@ 6714 @LENGTH@ 5


UPD MethodDeclaration@@Collection<AmqpAdmin>, MethodName:getDeclaringAdmins,  @TO@ Collection<?>, MethodName:getDeclaringAdmins,  @AT@ 1326 @LENGTH@ 21
---UPD ParameterizedType@@Collection<AmqpAdmin> @TO@ Collection<?> @AT@ 1304 @LENGTH@ 21
------DEL SimpleType@@AmqpAdmin @AT@ 1315 @LENGTH@ 9
------INS WildcardType@@? @TO@ ParameterizedType@@Collection<AmqpAdmin> @AT@ 1318 @LENGTH@ 1


DEL IfStatement@@if (SpringVersion.getVersion().startsWith("4")) {  assertThat(property.getComponentType(),nullValue());} else {  assertThat(property.getComponentType().getType(),is(Matchers.<Class<?>>equalTo(Object.class)));} @AT@ 4039 @LENGTH@ 222
---DEL MethodInvocation@@SpringVersion.getVersion().startsWith("4") @AT@ 4043 @LENGTH@ 42
------DEL MethodInvocation@@MethodName:getVersion:[] @AT@ 4043 @LENGTH@ 26
------DEL SimpleName@@Name:SpringVersion @AT@ 4043 @LENGTH@ 13
------DEL SimpleName@@MethodName:startsWith:["4"] @AT@ 4070 @LENGTH@ 15
---------DEL StringLiteral@@"4" @AT@ 4081 @LENGTH@ 3
---DEL Block@@ThenBody:{  assertThat(property.getComponentType(),nullValue());} @AT@ 4087 @LENGTH@ 62
------DEL ExpressionStatement@@MethodInvocation:assertThat(property.getComponentType(),nullValue()) @AT@ 4092 @LENGTH@ 53
---------DEL MethodInvocation@@assertThat(property.getComponentType(),nullValue()) @AT@ 4092 @LENGTH@ 52
------------DEL SimpleName@@MethodName:assertThat:[property.getComponentType(), nullValue()] @AT@ 4092 @LENGTH@ 52
---------------DEL MethodInvocation@@property.getComponentType() @AT@ 4103 @LENGTH@ 27
------------------DEL SimpleName@@Name:property @AT@ 4103 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:getComponentType:[] @AT@ 4112 @LENGTH@ 18
---------------DEL MethodInvocation@@MethodName:nullValue:[] @AT@ 4132 @LENGTH@ 11
---DEL Block@@ElseBody:{  assertThat(property.getComponentType().getType(),is(Matchers.<Class<?>>equalTo(Object.class)));} @AT@ 4155 @LENGTH@ 106


INS MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable,  @TO@ TypeDeclaration@@[public]ManagementRequestContext,  @AT@ 2371 @LENGTH@ 59
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable,  @AT@ 2366 @LENGTH@ 4
---INS SimpleName@@MethodName:executeAsync @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable,  @AT@ 2371 @LENGTH@ 12
---INS SingleVariableDeclaration@@final AsyncTask<A> task @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable,  @AT@ 2384 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2384 @LENGTH@ 5
------INS ParameterizedType@@AsyncTask<A> @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2390 @LENGTH@ 12
---------INS SimpleType@@AsyncTask @TO@ ParameterizedType@@AsyncTask<A> @AT@ 2390 @LENGTH@ 9
---------INS SimpleType@@A @TO@ ParameterizedType@@AsyncTask<A> @AT@ 2400 @LENGTH@ 1
------INS SimpleName@@task @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 2403 @LENGTH@ 4
---INS SingleVariableDeclaration@@boolean cancellable @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable,  @AT@ 2409 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean cancellable @AT@ 2409 @LENGTH@ 7
------INS SimpleName@@cancellable @TO@ SingleVariableDeclaration@@boolean cancellable @AT@ 2417 @LENGTH@ 11


UPD IfStatement@@if (!Strings.isNotBlank(newPassword)) {  setData(getCurator(),ZkPath.AUTHENTICATION_CRYPT_PASSWORD.getPath(),newPassword);} @TO@ if (Strings.isNotBlank(newPassword)) {  setData(getCurator(),ZkPath.AUTHENTICATION_CRYPT_PASSWORD.getPath(),newPassword);} @AT@ 1316 @LENGTH@ 146
---DEL PrefixExpression@@!Strings.isNotBlank(newPassword) @AT@ 1320 @LENGTH@ 32
------DEL Operator@@! @AT@ 1320 @LENGTH@ 1
---MOV MethodInvocation@@Strings.isNotBlank(newPassword) @TO@ IfStatement@@if (!Strings.isNotBlank(newPassword)) {  setData(getCurator(),ZkPath.AUTHENTICATION_CRYPT_PASSWORD.getPath(),newPassword);} @AT@ 1321 @LENGTH@ 31


UPD MethodDeclaration@@public, void, MethodName:cleanup,  @TO@ public, void, MethodName:tearDown, Exception,  @AT@ 3802 @LENGTH@ 94
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:cleanup,  @AT@ 3787 @LENGTH@ 9
---UPD SimpleName@@MethodName:cleanup @TO@ MethodName:tearDown @AT@ 3814 @LENGTH@ 7
---INS ExpressionStatement@@SuperMethodInvocation:super.tearDown() @TO@ MethodDeclaration@@public, void, MethodName:cleanup,  @AT@ 3873 @LENGTH@ 17
------INS SuperMethodInvocation@@super.tearDown() @TO@ ExpressionStatement@@SuperMethodInvocation:super.tearDown() @AT@ 3873 @LENGTH@ 16
---------INS SimpleName@@MethodName:tearDown:[] @TO@ SuperMethodInvocation@@super.tearDown() @AT@ 3879 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:ex=new UnauthorizedClientException(errorMessage) @TO@ Assignment:ex=new UnauthorizedUserException(errorMessage) @AT@ 2745 @LENGTH@ 51
---UPD Assignment@@ex=new UnauthorizedClientException(errorMessage) @TO@ ex=new UnauthorizedUserException(errorMessage) @AT@ 2745 @LENGTH@ 50
------UPD ClassInstanceCreation@@UnauthorizedClientException[errorMessage] @TO@ UnauthorizedUserException[errorMessage] @AT@ 2750 @LENGTH@ 45
---------UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 2754 @LENGTH@ 27


UPD MethodDeclaration@@T, MethodName:setDefinitionBuilder, ConfigurationBuilder<? extends HierarchicalConfiguration> builder,  @TO@ T, MethodName:setDefinitionBuilder, ConfigurationBuilder<? extends HierarchicalConfiguration<?>> builder,  @AT@ 2054 @LENGTH@ 101
---UPD SingleVariableDeclaration@@ConfigurationBuilder<? extends HierarchicalConfiguration> builder @TO@ ConfigurationBuilder<? extends HierarchicalConfiguration<?>> builder @AT@ 2088 @LENGTH@ 65
------UPD ParameterizedType@@ConfigurationBuilder<? extends HierarchicalConfiguration> @TO@ ConfigurationBuilder<? extends HierarchicalConfiguration<?>> @AT@ 2088 @LENGTH@ 57


UPD ExpressionStatement@@MethodInvocation:assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,5000L)) @TO@ MethodInvocation:Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,5000L)) @AT@ 3247 @LENGTH@ 907
---UPD MethodInvocation@@assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,5000L)) @TO@ Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,5000L)) @AT@ 3247 @LENGTH@ 906
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,5000L)) @AT@ 3173 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:encoding=options.get(ELEMENT_NAME) @TO@ Assignment:elementName=options.get(ELEMENT_NAME) @AT@ 3743 @LENGTH@ 37
---UPD Assignment@@encoding=options.get(ELEMENT_NAME) @TO@ elementName=options.get(ELEMENT_NAME) @AT@ 3743 @LENGTH@ 36
------UPD SimpleName@@encoding @TO@ elementName @AT@ 3743 @LENGTH@ 8


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 2452 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 2455 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 2455 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 2455 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 2462 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 2482 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 2486 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 2492 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 2653 @LENGTH@ 53


INS ReturnStatement@@ClassInstanceCreation:new ByteArrayInputStream(html.getBytes(StandardCharsets.UTF_8)) @TO@ MethodDeclaration@@public, InputStream, MethodName:openStream,  @AT@ 6486 @LENGTH@ 71
---MOV ClassInstanceCreation@@ByteArrayInputStream[html.getBytes("UTF-8")] @TO@ ReturnStatement@@ClassInstanceCreation:new ByteArrayInputStream(html.getBytes(StandardCharsets.UTF_8)) @AT@ 6522 @LENGTH@ 48


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 4711 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4714 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4714 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4714 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4721 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4741 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4745 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4751 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 4913 @LENGTH@ 53


UPD MethodDeclaration@@private, static, String, MethodName:normalizePropertyName, String name,  @TO@ static, String, MethodName:normalizePropertyName, String name,  @AT@ 6497 @LENGTH@ 628
---DEL Modifier@@private @AT@ 6497 @LENGTH@ 7
---UPD IfStatement@@if (Strings.isNullOrBlank(name)) {  return name;} else if (!name.contains(".")) {  return name;} else {  String[] parts=name.replaceAll(" ","").split(".");  StringBuilder sb=new StringBuilder();  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }  return sb.toString();} @TO@ if (Strings.isNullOrBlank(name)) {  return name;} else if (!name.contains(".")) {  return name;} else {  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @AT@ 6564 @LENGTH@ 555
------UPD Block@@ElseBody:if (!name.contains(".")) {  return name;} else {  String[] parts=name.replaceAll(" ","").split(".");  StringBuilder sb=new StringBuilder();  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }  return sb.toString();} @TO@ ElseBody:if (!name.contains(".")) {  return name;} else {  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @AT@ 6639 @LENGTH@ 480
---------UPD IfStatement@@if (!name.contains(".")) {  return name;} else {  String[] parts=name.replaceAll(" ","").split(".");  StringBuilder sb=new StringBuilder();  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }  return sb.toString();} @TO@ if (!name.contains(".")) {  return name;} else {  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @AT@ 6639 @LENGTH@ 480
------------INS Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @TO@ IfStatement@@if (!name.contains(".")) {  return name;} else {  String[] parts=name.replaceAll(" ","").split(".");  StringBuilder sb=new StringBuilder();  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }  return sb.toString();} @AT@ 6699 @LENGTH@ 485
---------------INS VariableDeclarationStatement@@String[] parts=name.replaceAll(" ","").split("\\."); @TO@ Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @AT@ 6713 @LENGTH@ 55
------------------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] parts=name.replaceAll(" ","").split("\\."); @AT@ 6713 @LENGTH@ 8
---------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 6713 @LENGTH@ 6
------------------INS VariableDeclarationFragment@@parts=name.replaceAll(" ","").split("\\.") @TO@ VariableDeclarationStatement@@String[] parts=name.replaceAll(" ","").split("\\."); @AT@ 6722 @LENGTH@ 45
---------------------INS SimpleName@@parts @TO@ VariableDeclarationFragment@@parts=name.replaceAll(" ","").split("\\.") @AT@ 6722 @LENGTH@ 5
---------------------INS MethodInvocation@@name.replaceAll(" ","").split("\\.") @TO@ VariableDeclarationFragment@@parts=name.replaceAll(" ","").split("\\.") @AT@ 6730 @LENGTH@ 37
------------------------INS MethodInvocation@@MethodName:replaceAll:[" ", ""] @TO@ MethodInvocation@@name.replaceAll(" ","").split("\\.") @AT@ 6730 @LENGTH@ 24
---------------------------INS StringLiteral@@" " @TO@ MethodInvocation@@MethodName:replaceAll:[" ", ""] @AT@ 6746 @LENGTH@ 3
---------------------------INS StringLiteral@@"" @TO@ MethodInvocation@@MethodName:replaceAll:[" ", ""] @AT@ 6751 @LENGTH@ 2
------------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.replaceAll(" ","").split("\\.") @AT@ 6730 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:split:["\\."] @TO@ MethodInvocation@@name.replaceAll(" ","").split("\\.") @AT@ 6755 @LENGTH@ 12
---------------------------INS StringLiteral@@"\\." @TO@ SimpleName@@MethodName:split:["\\."] @AT@ 6761 @LENGTH@ 5
---------------MOV VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @TO@ Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @AT@ 6786 @LENGTH@ 39
---------------INS IfStatement@@if (parts.length > 0) {  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }} @TO@ Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @AT@ 6833 @LENGTH@ 307
------------------MOV Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split(".");  StringBuilder sb=new StringBuilder();  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }  return sb.toString();} @TO@ IfStatement@@if (parts.length > 0) {  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }} @AT@ 6706 @LENGTH@ 413
---------------------DEL VariableDeclarationStatement@@String[] parts=name.replaceAll(" ","").split("."); @AT@ 6720 @LENGTH@ 53
------------------------DEL ArrayType@@String[] @AT@ 6720 @LENGTH@ 8
---------------------------DEL SimpleType@@String @AT@ 6720 @LENGTH@ 6
------------------------DEL VariableDeclarationFragment@@parts=name.replaceAll(" ","").split(".") @AT@ 6729 @LENGTH@ 43
---------------------------DEL SimpleName@@parts @AT@ 6729 @LENGTH@ 5
---------------------------DEL MethodInvocation@@name.replaceAll(" ","").split(".") @AT@ 6737 @LENGTH@ 35
------------------------------DEL MethodInvocation@@MethodName:replaceAll:[" ", ""] @AT@ 6737 @LENGTH@ 24
---------------------------------DEL StringLiteral@@" " @AT@ 6753 @LENGTH@ 3
---------------------------------DEL StringLiteral@@"" @AT@ 6758 @LENGTH@ 2
------------------------------DEL SimpleName@@Name:name @AT@ 6737 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:split:["."] @AT@ 6762 @LENGTH@ 10
---------------------------------DEL StringLiteral@@"." @AT@ 6768 @LENGTH@ 3
------------------MOV Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split(".");  StringBuilder sb=new StringBuilder();  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }  return sb.toString();} @TO@ IfStatement@@if (parts.length > 0) {  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }} @AT@ 6706 @LENGTH@ 413
---------------------DEL VariableDeclarationStatement@@String[] parts=name.replaceAll(" ","").split("."); @AT@ 6720 @LENGTH@ 53
------------------------DEL ArrayType@@String[] @AT@ 6720 @LENGTH@ 8
---------------------------DEL SimpleType@@String @AT@ 6720 @LENGTH@ 6
------------------------DEL VariableDeclarationFragment@@parts=name.replaceAll(" ","").split(".") @AT@ 6729 @LENGTH@ 43
---------------------------DEL SimpleName@@parts @AT@ 6729 @LENGTH@ 5
---------------------------DEL MethodInvocation@@name.replaceAll(" ","").split(".") @AT@ 6737 @LENGTH@ 35
------------------------------DEL MethodInvocation@@MethodName:replaceAll:[" ", ""] @AT@ 6737 @LENGTH@ 24
---------------------------------DEL StringLiteral@@" " @AT@ 6753 @LENGTH@ 3
---------------------------------DEL StringLiteral@@"" @AT@ 6758 @LENGTH@ 2
------------------------------DEL SimpleName@@Name:name @AT@ 6737 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:split:["."] @AT@ 6762 @LENGTH@ 10
---------------------------------DEL StringLiteral@@"." @AT@ 6768 @LENGTH@ 3
------------------INS InfixExpression@@parts.length > 0 @TO@ IfStatement@@if (parts.length > 0) {  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }} @AT@ 6837 @LENGTH@ 16
---------------------INS QualifiedName@@parts.length @TO@ InfixExpression@@parts.length > 0 @AT@ 6837 @LENGTH@ 12
------------------------INS SimpleName@@parts @TO@ QualifiedName@@parts.length @AT@ 6837 @LENGTH@ 5
------------------------INS SimpleName@@length @TO@ QualifiedName@@parts.length @AT@ 6843 @LENGTH@ 6
---------------------INS Operator@@> @TO@ InfixExpression@@parts.length > 0 @AT@ 6849 @LENGTH@ 1
---------------------INS NumberLiteral@@0 @TO@ InfixExpression@@parts.length > 0 @AT@ 6852 @LENGTH@ 1
---------------MOV ReturnStatement@@MethodInvocation:sb.toString() @TO@ Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split("\\.");  StringBuilder sb=new StringBuilder();  if (parts.length > 0) {    sb.append(parts[0]);    for (int i=1; i < parts.length; i++) {      String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";      sb.append(s);    }  }  return sb.toString();} @AT@ 7088 @LENGTH@ 21
------------UPD Block@@ElseBody:{  String[] parts=name.replaceAll(" ","").split(".");  StringBuilder sb=new StringBuilder();  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }  return sb.toString();} @TO@ ThenBody:{  sb.append(parts[0]);  for (int i=1; i < parts.length; i++) {    String s=parts[i].length() > 0 ? parts[i].substring(0,1).toUpperCase() + parts[i].substring(1) : "";    sb.append(s);  }} @AT@ 6706 @LENGTH@ 413


INS MethodDeclaration@@List<User>, MethodName:findByBinaryData, byte[] data,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 8541 @LENGTH@ 30
---INS ParameterizedType@@List<User> @TO@ MethodDeclaration@@List<User>, MethodName:findByBinaryData, byte[] data,  @AT@ 8530 @LENGTH@ 10
------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 8530 @LENGTH@ 4
------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 8535 @LENGTH@ 4
---INS SimpleName@@MethodName:findByBinaryData @TO@ MethodDeclaration@@List<User>, MethodName:findByBinaryData, byte[] data,  @AT@ 8541 @LENGTH@ 16
---INS SingleVariableDeclaration@@byte[] data @TO@ MethodDeclaration@@List<User>, MethodName:findByBinaryData, byte[] data,  @AT@ 8558 @LENGTH@ 11
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] data @AT@ 8558 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 8558 @LENGTH@ 4
------INS SimpleName@@data @TO@ SingleVariableDeclaration@@byte[] data @AT@ 8565 @LENGTH@ 4


UPD FieldDeclaration@@private, ExecuteStreamHandler, [streamHandler] @TO@ private, final, ExecuteStreamHandler, [streamHandler] @AT@ 1546 @LENGTH@ 43
---INS Modifier@@final @TO@ FieldDeclaration@@private, ExecuteStreamHandler, [streamHandler] @AT@ 1554 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:this.mappings=new ResourceMappings(new RepositoryRestConfiguration(),repositories) @TO@ Assignment:this.mappings=new RepositoryResourceMappings(new RepositoryRestConfiguration(),repositories) @AT@ 2185 @LENGTH@ 86
---UPD Assignment@@this.mappings=new ResourceMappings(new RepositoryRestConfiguration(),repositories) @TO@ this.mappings=new RepositoryResourceMappings(new RepositoryRestConfiguration(),repositories) @AT@ 2185 @LENGTH@ 85
------UPD ClassInstanceCreation@@ResourceMappings[new RepositoryRestConfiguration(), repositories] @TO@ RepositoryResourceMappings[new RepositoryRestConfiguration(), repositories] @AT@ 2201 @LENGTH@ 69
---------UPD SimpleType@@ResourceMappings @TO@ RepositoryResourceMappings @AT@ 2205 @LENGTH@ 16


UPD TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build();  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ try {  Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build();  try {    assertTrue("We should create the cxf-server container.",containers.size() == 1);    System.err.println("created the cxf-server container.");    Thread.sleep(2000);    System.err.println(executeCommand("fabric:cluster-list"));    Thread.sleep(2000);    Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);    assertNotNull(proxy);    String result1=proxy.sayHello();    String result2=proxy.sayHello();    assertNotSame("We should get the two different result",result1,result2);  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 2924 @LENGTH@ 970
---INS VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build();  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 2895 @LENGTH@ 151
------INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build(); @AT@ 2895 @LENGTH@ 19
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 2895 @LENGTH@ 3
---------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 2899 @LENGTH@ 14
------INS VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build() @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build(); @AT@ 2915 @LENGTH@ 130
---------INS SimpleName@@containers @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build() @AT@ 2915 @LENGTH@ 10
---------MOV MethodInvocation@@ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build() @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build() @AT@ 2955 @LENGTH@ 117
---DEL ExpressionStatement@@Assignment:containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build() @AT@ 2942 @LENGTH@ 131
------DEL Assignment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build() @AT@ 2942 @LENGTH@ 130
---------DEL SimpleName@@containers @AT@ 2942 @LENGTH@ 10
---------DEL Operator@@= @AT@ 2952 @LENGTH@ 1
---INS TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build();  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 3059 @LENGTH@ 857
------MOV ExpressionStatement@@MethodInvocation:assertTrue("We should create the cxf-server container.",containers.size() == 1) @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3086 @LENGTH@ 80
------MOV ExpressionStatement@@MethodInvocation:System.err.println("created the cxf-server container.") @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3179 @LENGTH@ 56
------MOV ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3285 @LENGTH@ 19
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:cluster-list")) @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3317 @LENGTH@ 58
------MOV ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3425 @LENGTH@ 19
------MOV VariableDeclarationStatement@@Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class); @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3496 @LENGTH@ 70
------MOV ExpressionStatement@@MethodInvocation:assertNotNull(proxy) @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3579 @LENGTH@ 21
------MOV VariableDeclarationStatement@@String result1=proxy.sayHello(); @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3613 @LENGTH@ 34
------MOV VariableDeclarationStatement@@String result2=proxy.sayHello(); @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3660 @LENGTH@ 34
------MOV ExpressionStatement@@MethodInvocation:assertNotSame("We should get the two different result",result1,result2) @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3707 @LENGTH@ 74
------MOV Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ TryStatement@@try {  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3800 @LENGTH@ 94
---UPD Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ FinallyBody:{  ContainerBuilder.destroy(containers);} @AT@ 3800 @LENGTH@ 94
---INS Block@@FinallyBody:{  fabricProxy.close();} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-cxf").assertProvisioningResult().build();  assertTrue("We should create the cxf-server container.",containers.size() == 1);  System.err.println("created the cxf-server container.");  Thread.sleep(2000);  System.err.println(executeCommand("fabric:cluster-list"));  Thread.sleep(2000);  Hello proxy=ServiceLocator.awaitService(bundleContext,Hello.class);  assertNotNull(proxy);  String result1=proxy.sayHello();  String result2=proxy.sayHello();  assertNotSame("We should get the two different result",result1,result2);}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 3935 @LENGTH@ 44
------MOV ExpressionStatement@@MethodInvocation:fabricProxy.close() @TO@ Block@@FinallyBody:{  fabricProxy.close();} @AT@ 3864 @LENGTH@ 20


UPD FieldDeclaration@@private, FlowExecutionStatus, [status] @TO@ protected, FlowExecutionStatus, [status] @AT@ 950 @LENGTH@ 35
---UPD Modifier@@private @TO@ protected @AT@ 950 @LENGTH@ 7


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 8170 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 8173 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 8173 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 8173 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 8180 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 8200 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 8204 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 8210 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 8371 @LENGTH@ 53


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("LettuceConnectionIntegrationTests-context.xml"), public]LettuceConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration("LettuceConnectionIntegrationTests-context.xml"), public]LettuceConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 1822 @LENGTH@ 2525
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1822 @LENGTH@ 39


UPD IfStatement@@if (answer == null && zipInputStream != null) {  try {    zipInputStream.close();  } catch (  IOException ignore) {  } finally {    zipInputStream=null;  }} @TO@ if (answer == null && zipInputStream != null) {  IOHelper.close(zipInputStream);  zipInputStream=null;} @AT@ 4217 @LENGTH@ 282
---DEL Block@@ThenBody:{  try {    zipInputStream.close();  } catch (  IOException ignore) {  } finally {    zipInputStream=null;  }} @AT@ 4263 @LENGTH@ 236
------DEL TryStatement@@try {  zipInputStream.close();} catch (IOException ignore) {} finally {  zipInputStream=null;} @AT@ 4277 @LENGTH@ 200
---------DEL ExpressionStatement@@MethodInvocation:zipInputStream.close() @AT@ 4299 @LENGTH@ 23
------------DEL MethodInvocation@@zipInputStream.close() @AT@ 4299 @LENGTH@ 22
---------------DEL SimpleName@@Name:zipInputStream @AT@ 4299 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:close:[] @AT@ 4314 @LENGTH@ 7
---------DEL CatchClause@@catch (IOException ignore) {} @AT@ 4337 @LENGTH@ 77
------------DEL SingleVariableDeclaration@@IOException ignore @AT@ 4344 @LENGTH@ 18
---------------DEL SimpleType@@IOException @AT@ 4344 @LENGTH@ 11
---------------DEL SimpleName@@ignore @AT@ 4356 @LENGTH@ 6
---MOV Block@@FinallyBody:{  zipInputStream=null;} @TO@ IfStatement@@if (answer == null && zipInputStream != null) {  try {    zipInputStream.close();  } catch (  IOException ignore) {  } finally {    zipInputStream=null;  }} @AT@ 4423 @LENGTH@ 54
------INS ExpressionStatement@@MethodInvocation:IOHelper.close(zipInputStream) @TO@ Block@@FinallyBody:{  zipInputStream=null;} @AT@ 4315 @LENGTH@ 31
---------INS MethodInvocation@@IOHelper.close(zipInputStream) @TO@ ExpressionStatement@@MethodInvocation:IOHelper.close(zipInputStream) @AT@ 4315 @LENGTH@ 30
------------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.close(zipInputStream) @AT@ 4315 @LENGTH@ 8
------------INS SimpleName@@MethodName:close:[zipInputStream] @TO@ MethodInvocation@@IOHelper.close(zipInputStream) @AT@ 4324 @LENGTH@ 21
---------------INS SimpleName@@zipInputStream @TO@ SimpleName@@MethodName:close:[zipInputStream] @AT@ 4330 @LENGTH@ 14


UPD TryStatement@@try {  CompoundSecMech secMech=CSIv2Util.getMatchingSecurityMech(ri,codec,EstablishTrustInClient.value,(short)0);  if (secMech == null) {    return;  }  if ((secMech.as_context_mech.target_supports & EstablishTrustInClient.value) != 0) {    Principal p=SecurityActions.getPrincipal();    if (p != null) {      byte[] encodedTargetName=secMech.as_context_mech.target_name;      String name=p.getName();      if (name.indexOf('@') < 0) {        byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);        String targetName=new String(decodedTargetName,"UTF-8");        name+="@" + targetName;      }      byte[] username=name.getBytes("UTF-8");      Object credential=SecurityActions.getCredential();      byte[] password={};      if (credential instanceof char[]) {        String tmp=new String((char[])credential);        password=tmp.getBytes("UTF-8");      } else       if (credential instanceof byte[])       password=(byte[])credential; else       if (credential != null) {        String tmp=credential.toString();        password=tmp.getBytes("UTF-8");      }      InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);      byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);      EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);      SASContextBody contextBody=new SASContextBody();      contextBody.establish_msg(message);      Any any=ORB.init().create_any();      SASContextBodyHelper.insert(any,contextBody);      ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));      ri.add_request_service_context(sc,true);    }  }} catch (java.io.UnsupportedEncodingException e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);}catch (org.omg.IOP.CodecPackage.InvalidTypeForEncoding e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);} @TO@ try {  CompoundSecMech secMech=CSIv2Util.getMatchingSecurityMech(ri,codec,EstablishTrustInClient.value,(short)0);  if (secMech == null) {    return;  }  if ((secMech.as_context_mech.target_supports & EstablishTrustInClient.value) != 0) {    Principal p=SecurityActions.getPrincipal();    if (p != null) {      byte[] encodedTargetName=secMech.as_context_mech.target_name;      String name=p.getName();      if (name.indexOf('@') < 0) {        byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);        String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);        name+="@" + targetName;      }      byte[] username=name.getBytes(StandardCharsets.UTF_8);      Object credential=SecurityActions.getCredential();      byte[] password={};      if (credential instanceof char[]) {        String tmp=new String((char[])credential);        password=tmp.getBytes(StandardCharsets.UTF_8);      } else       if (credential instanceof byte[])       password=(byte[])credential; else       if (credential != null) {        String tmp=credential.toString();        password=tmp.getBytes(StandardCharsets.UTF_8);      }      InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);      byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);      EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);      SASContextBody contextBody=new SASContextBody();      contextBody.establish_msg(message);      Any any=ORB.init().create_any();      SASContextBodyHelper.insert(any,contextBody);      ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));      ri.add_request_service_context(sc,true);    }  }} catch (org.omg.IOP.CodecPackage.InvalidTypeForEncoding e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);} @AT@ 3409 @LENGTH@ 3370
---UPD IfStatement@@if ((secMech.as_context_mech.target_supports & EstablishTrustInClient.value) != 0) {  Principal p=SecurityActions.getPrincipal();  if (p != null) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=p.getName();    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,"UTF-8");      name+="@" + targetName;    }    byte[] username=name.getBytes("UTF-8");    Object credential=SecurityActions.getCredential();    byte[] password={};    if (credential instanceof char[]) {      String tmp=new String((char[])credential);      password=tmp.getBytes("UTF-8");    } else     if (credential instanceof byte[])     password=(byte[])credential; else     if (credential != null) {      String tmp=credential.toString();      password=tmp.getBytes("UTF-8");    }    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);    EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} @TO@ if ((secMech.as_context_mech.target_supports & EstablishTrustInClient.value) != 0) {  Principal p=SecurityActions.getPrincipal();  if (p != null) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=p.getName();    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);      name+="@" + targetName;    }    byte[] username=name.getBytes(StandardCharsets.UTF_8);    Object credential=SecurityActions.getCredential();    byte[] password={};    if (credential instanceof char[]) {      String tmp=new String((char[])credential);      password=tmp.getBytes(StandardCharsets.UTF_8);    } else     if (credential instanceof byte[])     password=(byte[])credential; else     if (credential != null) {      String tmp=credential.toString();      password=tmp.getBytes(StandardCharsets.UTF_8);    }    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);    EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} @AT@ 3733 @LENGTH@ 2775
------UPD Block@@ThenBody:{  Principal p=SecurityActions.getPrincipal();  if (p != null) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=p.getName();    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,"UTF-8");      name+="@" + targetName;    }    byte[] username=name.getBytes("UTF-8");    Object credential=SecurityActions.getCredential();    byte[] password={};    if (credential instanceof char[]) {      String tmp=new String((char[])credential);      password=tmp.getBytes("UTF-8");    } else     if (credential instanceof byte[])     password=(byte[])credential; else     if (credential != null) {      String tmp=credential.toString();      password=tmp.getBytes("UTF-8");    }    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);    EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} @TO@ ThenBody:{  Principal p=SecurityActions.getPrincipal();  if (p != null) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=p.getName();    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);      name+="@" + targetName;    }    byte[] username=name.getBytes(StandardCharsets.UTF_8);    Object credential=SecurityActions.getCredential();    byte[] password={};    if (credential instanceof char[]) {      String tmp=new String((char[])credential);      password=tmp.getBytes(StandardCharsets.UTF_8);    } else     if (credential instanceof byte[])     password=(byte[])credential; else     if (credential != null) {      String tmp=credential.toString();      password=tmp.getBytes(StandardCharsets.UTF_8);    }    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);    EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} @AT@ 3816 @LENGTH@ 2692
---------UPD IfStatement@@if (p != null) {  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  Object credential=SecurityActions.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes("UTF-8");  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes("UTF-8");  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @TO@ if (p != null) {  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);    name+="@" + targetName;  }  byte[] username=name.getBytes(StandardCharsets.UTF_8);  Object credential=SecurityActions.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes(StandardCharsets.UTF_8);  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes(StandardCharsets.UTF_8);  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @AT@ 3896 @LENGTH@ 2598
------------UPD Block@@ThenBody:{  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  Object credential=SecurityActions.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes("UTF-8");  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes("UTF-8");  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @TO@ ThenBody:{  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);    name+="@" + targetName;  }  byte[] username=name.getBytes(StandardCharsets.UTF_8);  Object credential=SecurityActions.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes(StandardCharsets.UTF_8);  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes(StandardCharsets.UTF_8);  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @AT@ 3911 @LENGTH@ 2583
---------------UPD IfStatement@@if (name.indexOf('@') < 0) {  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,"UTF-8");  name+="@" + targetName;} @TO@ if (name.indexOf('@') < 0) {  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);  name+="@" + targetName;} @AT@ 4129 @LENGTH@ 301
------------------UPD Block@@ThenBody:{  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,"UTF-8");  name+="@" + targetName;} @TO@ ThenBody:{  byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);  String targetName=new String(decodedTargetName,StandardCharsets.UTF_8);  name+="@" + targetName;} @AT@ 4156 @LENGTH@ 274
---------------------UPD VariableDeclarationStatement@@String targetName=new String(decodedTargetName,"UTF-8"); @TO@ String targetName=new String(decodedTargetName,StandardCharsets.UTF_8); @AT@ 4285 @LENGTH@ 59
------------------------UPD VariableDeclarationFragment@@targetName=new String(decodedTargetName,"UTF-8") @TO@ targetName=new String(decodedTargetName,StandardCharsets.UTF_8) @AT@ 4292 @LENGTH@ 51
---------------------------UPD ClassInstanceCreation@@String[decodedTargetName, "UTF-8"] @TO@ String[decodedTargetName, StandardCharsets.UTF_8] @AT@ 4305 @LENGTH@ 38
------------------------------DEL StringLiteral@@"UTF-8" @AT@ 4335 @LENGTH@ 7
------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[decodedTargetName, "UTF-8"] @AT@ 4377 @LENGTH@ 22
---------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4377 @LENGTH@ 16
---------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4394 @LENGTH@ 5
---------------UPD VariableDeclarationStatement@@byte[] username=name.getBytes("UTF-8"); @TO@ byte[] username=name.getBytes(StandardCharsets.UTF_8); @AT@ 4451 @LENGTH@ 41
------------------UPD VariableDeclarationFragment@@username=name.getBytes("UTF-8") @TO@ username=name.getBytes(StandardCharsets.UTF_8) @AT@ 4458 @LENGTH@ 33
---------------------UPD MethodInvocation@@name.getBytes("UTF-8") @TO@ name.getBytes(StandardCharsets.UTF_8) @AT@ 4469 @LENGTH@ 22
------------------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 4474 @LENGTH@ 17
---------------------------DEL StringLiteral@@"UTF-8" @AT@ 4483 @LENGTH@ 7
---------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 4540 @LENGTH@ 22
------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4540 @LENGTH@ 16
------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4557 @LENGTH@ 5
---------------UPD IfStatement@@if (credential instanceof char[]) {  String tmp=new String((char[])credential);  password=tmp.getBytes("UTF-8");} else if (credential instanceof byte[]) password=(byte[])credential; else if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ if (credential instanceof char[]) {  String tmp=new String((char[])credential);  password=tmp.getBytes(StandardCharsets.UTF_8);} else if (credential instanceof byte[]) password=(byte[])credential; else if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 4724 @LENGTH@ 471
------------------UPD Block@@ThenBody:{  String tmp=new String((char[])credential);  password=tmp.getBytes("UTF-8");} @TO@ ThenBody:{  String tmp=new String((char[])credential);  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 4758 @LENGTH@ 151
---------------------UPD ExpressionStatement@@Assignment:password=tmp.getBytes("UTF-8") @TO@ Assignment:password=tmp.getBytes(StandardCharsets.UTF_8) @AT@ 4854 @LENGTH@ 33
------------------------UPD Assignment@@password=tmp.getBytes("UTF-8") @TO@ password=tmp.getBytes(StandardCharsets.UTF_8) @AT@ 4854 @LENGTH@ 32
---------------------------UPD MethodInvocation@@tmp.getBytes("UTF-8") @TO@ tmp.getBytes(StandardCharsets.UTF_8) @AT@ 4865 @LENGTH@ 21
------------------------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 4869 @LENGTH@ 17
---------------------------------DEL StringLiteral@@"UTF-8" @AT@ 4878 @LENGTH@ 7
---------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 4950 @LENGTH@ 22
------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4950 @LENGTH@ 16
------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4967 @LENGTH@ 5
------------------UPD Block@@ElseBody:if (credential instanceof byte[]) password=(byte[])credential; else if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ ElseBody:if (credential instanceof byte[]) password=(byte[])credential; else if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 4915 @LENGTH@ 280
---------------------UPD IfStatement@@if (credential instanceof byte[]) password=(byte[])credential; else if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ if (credential instanceof byte[]) password=(byte[])credential; else if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 4915 @LENGTH@ 280
------------------------UPD Block@@ElseBody:if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ ElseBody:if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 5030 @LENGTH@ 165
---------------------------UPD IfStatement@@if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 5030 @LENGTH@ 165
------------------------------UPD Block@@ThenBody:{  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ ThenBody:{  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 5054 @LENGTH@ 141
---------------------------------UPD ExpressionStatement@@Assignment:password=tmp.getBytes("UTF-8") @TO@ Assignment:password=tmp.getBytes(StandardCharsets.UTF_8) @AT@ 5140 @LENGTH@ 33
------------------------------------UPD Assignment@@password=tmp.getBytes("UTF-8") @TO@ password=tmp.getBytes(StandardCharsets.UTF_8) @AT@ 5140 @LENGTH@ 32
---------------------------------------UPD MethodInvocation@@tmp.getBytes("UTF-8") @TO@ tmp.getBytes(StandardCharsets.UTF_8) @AT@ 5151 @LENGTH@ 21
------------------------------------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 5155 @LENGTH@ 17
---------------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 5164 @LENGTH@ 7
---------------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 5251 @LENGTH@ 22
------------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5251 @LENGTH@ 16
------------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5268 @LENGTH@ 5
---------------------------UPD IfStatement@@if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ if (credential != null) {  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 5030 @LENGTH@ 165
------------------------------UPD Block@@ThenBody:{  String tmp=credential.toString();  password=tmp.getBytes("UTF-8");} @TO@ ThenBody:{  String tmp=credential.toString();  password=tmp.getBytes(StandardCharsets.UTF_8);} @AT@ 5054 @LENGTH@ 141
---------------------------------UPD ExpressionStatement@@Assignment:password=tmp.getBytes("UTF-8") @TO@ Assignment:password=tmp.getBytes(StandardCharsets.UTF_8) @AT@ 5140 @LENGTH@ 33
------------------------------------UPD Assignment@@password=tmp.getBytes("UTF-8") @TO@ password=tmp.getBytes(StandardCharsets.UTF_8) @AT@ 5140 @LENGTH@ 32
---------------------------------------UPD MethodInvocation@@tmp.getBytes("UTF-8") @TO@ tmp.getBytes(StandardCharsets.UTF_8) @AT@ 5151 @LENGTH@ 21
------------------------------------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 5155 @LENGTH@ 17
---------------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 5164 @LENGTH@ 7
---------------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 5251 @LENGTH@ 22
------------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5251 @LENGTH@ 16
------------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5268 @LENGTH@ 5
---DEL CatchClause@@catch (java.io.UnsupportedEncodingException e) {  throw JacORBMessages.MESSAGES.unexpectedException(e);} @AT@ 6519 @LENGTH@ 124
------DEL SingleVariableDeclaration@@java.io.UnsupportedEncodingException e @AT@ 6526 @LENGTH@ 38
---------DEL SimpleType@@java.io.UnsupportedEncodingException @AT@ 6526 @LENGTH@ 36
---------DEL SimpleName@@e @AT@ 6563 @LENGTH@ 1
------DEL ThrowStatement@@MethodInvocation:JacORBMessages.MESSAGES.unexpectedException(e) @AT@ 6580 @LENGTH@ 53
---------DEL MethodInvocation@@JacORBMessages.MESSAGES.unexpectedException(e) @AT@ 6586 @LENGTH@ 46
------------DEL QualifiedName@@Name:JacORBMessages.MESSAGES @AT@ 6586 @LENGTH@ 23
------------DEL SimpleName@@MethodName:unexpectedException:[e] @AT@ 6610 @LENGTH@ 22
---------------DEL SimpleName@@e @AT@ 6630 @LENGTH@ 1


INS MethodDeclaration@@public, boolean, MethodName:isApproved,  @TO@ TypeDeclaration@@[@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL), public]Approval,  @AT@ 3525 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isApproved,  @AT@ 3525 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isApproved,  @AT@ 3532 @LENGTH@ 7
---INS SimpleName@@MethodName:isApproved @TO@ MethodDeclaration@@public, boolean, MethodName:isApproved,  @AT@ 3540 @LENGTH@ 10
---INS ReturnStatement@@InfixExpression:isCurrentlyActive() && status == ApprovalStatus.APPROVED @TO@ MethodDeclaration@@public, boolean, MethodName:isApproved,  @AT@ 3557 @LENGTH@ 62
------INS InfixExpression@@isCurrentlyActive() && status == ApprovalStatus.APPROVED @TO@ ReturnStatement@@InfixExpression:isCurrentlyActive() && status == ApprovalStatus.APPROVED @AT@ 3564 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:isCurrentlyActive:[] @TO@ InfixExpression@@isCurrentlyActive() && status == ApprovalStatus.APPROVED @AT@ 3564 @LENGTH@ 19
---------INS Operator@@&& @TO@ InfixExpression@@isCurrentlyActive() && status == ApprovalStatus.APPROVED @AT@ 3583 @LENGTH@ 2
---------INS InfixExpression@@status == ApprovalStatus.APPROVED @TO@ InfixExpression@@isCurrentlyActive() && status == ApprovalStatus.APPROVED @AT@ 3587 @LENGTH@ 31
------------INS SimpleName@@status @TO@ InfixExpression@@status == ApprovalStatus.APPROVED @AT@ 3587 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@status == ApprovalStatus.APPROVED @AT@ 3593 @LENGTH@ 2
------------INS QualifiedName@@ApprovalStatus.APPROVED @TO@ InfixExpression@@status == ApprovalStatus.APPROVED @AT@ 3595 @LENGTH@ 23
---------------INS SimpleName@@ApprovalStatus @TO@ QualifiedName@@ApprovalStatus.APPROVED @AT@ 3595 @LENGTH@ 14
---------------INS SimpleName@@APPROVED @TO@ QualifiedName@@ApprovalStatus.APPROVED @AT@ 3610 @LENGTH@ 8


INS MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @TO@ TypeDeclaration@@[public]TestHCatClient,  @AT@ 3982 @LENGTH@ 261
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 3982 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 3989 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 3996 @LENGTH@ 6
---INS SimpleName@@MethodName:fixPath @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 4003 @LENGTH@ 7
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 4011 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 4011 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 4018 @LENGTH@ 4
---INS IfStatement@@if (!Shell.WINDOWS) {  return path;} @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 4030 @LENGTH@ 45
------INS PrefixExpression@@!Shell.WINDOWS @TO@ IfStatement@@if (!Shell.WINDOWS) {  return path;} @AT@ 4033 @LENGTH@ 14
---------INS Operator@@! @TO@ PrefixExpression@@!Shell.WINDOWS @AT@ 4033 @LENGTH@ 1
---------INS QualifiedName@@Shell.WINDOWS @TO@ PrefixExpression@@!Shell.WINDOWS @AT@ 4034 @LENGTH@ 13
------------INS SimpleName@@Shell @TO@ QualifiedName@@Shell.WINDOWS @AT@ 4034 @LENGTH@ 5
------------INS SimpleName@@WINDOWS @TO@ QualifiedName@@Shell.WINDOWS @AT@ 4040 @LENGTH@ 7
------INS Block@@ThenBody:{  return path;} @TO@ IfStatement@@if (!Shell.WINDOWS) {  return path;} @AT@ 4049 @LENGTH@ 26
---------INS ReturnStatement@@SimpleName:path @TO@ Block@@ThenBody:{  return path;} @AT@ 4057 @LENGTH@ 12
------------INS SimpleName@@path @TO@ ReturnStatement@@SimpleName:path @AT@ 4064 @LENGTH@ 4
---INS VariableDeclarationStatement@@String expectedDir=path.replaceAll("\\\\","/"); @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 4080 @LENGTH@ 50
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expectedDir=path.replaceAll("\\\\","/"); @AT@ 4080 @LENGTH@ 6
------INS VariableDeclarationFragment@@expectedDir=path.replaceAll("\\\\","/") @TO@ VariableDeclarationStatement@@String expectedDir=path.replaceAll("\\\\","/"); @AT@ 4087 @LENGTH@ 42
---------INS SimpleName@@expectedDir @TO@ VariableDeclarationFragment@@expectedDir=path.replaceAll("\\\\","/") @AT@ 4087 @LENGTH@ 11
---------INS MethodInvocation@@path.replaceAll("\\\\","/") @TO@ VariableDeclarationFragment@@expectedDir=path.replaceAll("\\\\","/") @AT@ 4101 @LENGTH@ 28
------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.replaceAll("\\\\","/") @AT@ 4101 @LENGTH@ 4
------------INS SimpleName@@MethodName:replaceAll:["\\\\", "/"] @TO@ MethodInvocation@@path.replaceAll("\\\\","/") @AT@ 4106 @LENGTH@ 23
---------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 4117 @LENGTH@ 6
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 4125 @LENGTH@ 3
---INS IfStatement@@if (!expectedDir.startsWith("/")) {  expectedDir="/" + expectedDir;} @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 4135 @LENGTH@ 80
------INS PrefixExpression@@!expectedDir.startsWith("/") @TO@ IfStatement@@if (!expectedDir.startsWith("/")) {  expectedDir="/" + expectedDir;} @AT@ 4139 @LENGTH@ 28
---------INS Operator@@! @TO@ PrefixExpression@@!expectedDir.startsWith("/") @AT@ 4139 @LENGTH@ 1
---------INS MethodInvocation@@expectedDir.startsWith("/") @TO@ PrefixExpression@@!expectedDir.startsWith("/") @AT@ 4140 @LENGTH@ 27
------------INS SimpleName@@Name:expectedDir @TO@ MethodInvocation@@expectedDir.startsWith("/") @AT@ 4140 @LENGTH@ 11
------------INS SimpleName@@MethodName:startsWith:["/"] @TO@ MethodInvocation@@expectedDir.startsWith("/") @AT@ 4152 @LENGTH@ 15
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:startsWith:["/"] @AT@ 4163 @LENGTH@ 3
------INS Block@@ThenBody:{  expectedDir="/" + expectedDir;} @TO@ IfStatement@@if (!expectedDir.startsWith("/")) {  expectedDir="/" + expectedDir;} @AT@ 4169 @LENGTH@ 46
---------INS ExpressionStatement@@Assignment:expectedDir="/" + expectedDir @TO@ Block@@ThenBody:{  expectedDir="/" + expectedDir;} @AT@ 4177 @LENGTH@ 32
------------INS Assignment@@expectedDir="/" + expectedDir @TO@ ExpressionStatement@@Assignment:expectedDir="/" + expectedDir @AT@ 4177 @LENGTH@ 31
---------------INS SimpleName@@expectedDir @TO@ Assignment@@expectedDir="/" + expectedDir @AT@ 4177 @LENGTH@ 11
---------------INS Operator@@= @TO@ Assignment@@expectedDir="/" + expectedDir @AT@ 4188 @LENGTH@ 1
---------------INS InfixExpression@@"/" + expectedDir @TO@ Assignment@@expectedDir="/" + expectedDir @AT@ 4191 @LENGTH@ 17
------------------INS StringLiteral@@"/" @TO@ InfixExpression@@"/" + expectedDir @AT@ 4191 @LENGTH@ 3
------------------INS Operator@@+ @TO@ InfixExpression@@"/" + expectedDir @AT@ 4194 @LENGTH@ 1
------------------INS SimpleName@@expectedDir @TO@ InfixExpression@@"/" + expectedDir @AT@ 4197 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:expectedDir @TO@ MethodDeclaration@@public, static, String, MethodName:fixPath, String path,  @AT@ 4220 @LENGTH@ 19
------INS SimpleName@@expectedDir @TO@ ReturnStatement@@SimpleName:expectedDir @AT@ 4227 @LENGTH@ 11


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 4418 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4421 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4421 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4421 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 4428 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4448 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4452 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4458 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 4620 @LENGTH@ 53


MOV ExpressionStatement@@Assignment:this.exceptionHandler=JsfUtils.findFactory(ExceptionHandlerFactory.class).getExceptionHandler() @TO@ MethodDeclaration@@public, voidMethodName:PortletFacesContextImpl, PortletContext portletContext, PortletRequest portletRequest, PortletResponse portletResponse,  @AT@ 4140 @LENGTH@ 98


UPD ExpressionStatement@@Assignment:elementName=options.get(ARRAY_NAME) @TO@ Assignment:arrayName=options.get(ARRAY_NAME) @AT@ 3850 @LENGTH@ 38
---UPD Assignment@@elementName=options.get(ARRAY_NAME) @TO@ arrayName=options.get(ARRAY_NAME) @AT@ 3850 @LENGTH@ 37
------UPD SimpleName@@elementName @TO@ arrayName @AT@ 3850 @LENGTH@ 11


UPD Block@@ThenBody:{  DBObject valueDbo=(DBObject)value;  if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {    String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";    List<Object> ids=new ArrayList<Object>();    for (    Object id : (Iterable<?>)valueDbo.get(inKey)) {      ids.add(convertId(id));    }    valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));  } else   if (valueDbo.containsField("$ne")) {    valueDbo.put("$ne",convertId(valueDbo.get("$ne")));  } else {    return getMappedObject((DBObject)value,null);  }  return valueDbo;} @TO@ ThenBody:{  DBObject valueDbo=(DBObject)value;  DBObject resultDbo=new BasicDBObject(valueDbo.toMap());  if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {    String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";    List<Object> ids=new ArrayList<Object>();    for (    Object id : (Iterable<?>)valueDbo.get(inKey)) {      ids.add(convertId(id));    }    resultDbo.put(inKey,ids.toArray(new Object[ids.size()]));  } else   if (valueDbo.containsField("$ne")) {    resultDbo.put("$ne",convertId(valueDbo.get("$ne")));  } else {    return getMappedObject(resultDbo,null);  }  return resultDbo;} @AT@ 5851 @LENGTH@ 600
---UPD IfStatement@@if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {  String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";  List<Object> ids=new ArrayList<Object>();  for (  Object id : (Iterable<?>)valueDbo.get(inKey)) {    ids.add(convertId(id));  }  valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));} else if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  return getMappedObject((DBObject)value,null);} @TO@ if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {  String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";  List<Object> ids=new ArrayList<Object>();  for (  Object id : (Iterable<?>)valueDbo.get(inKey)) {    ids.add(convertId(id));  }  resultDbo.put(inKey,ids.toArray(new Object[ids.size()]));} else if (valueDbo.containsField("$ne")) {  resultDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  return getMappedObject(resultDbo,null);} @AT@ 5899 @LENGTH@ 524
------UPD Block@@ThenBody:{  String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";  List<Object> ids=new ArrayList<Object>();  for (  Object id : (Iterable<?>)valueDbo.get(inKey)) {    ids.add(convertId(id));  }  valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));} @TO@ ThenBody:{  String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";  List<Object> ids=new ArrayList<Object>();  for (  Object id : (Iterable<?>)valueDbo.get(inKey)) {    ids.add(convertId(id));  }  resultDbo.put(inKey,ids.toArray(new Object[ids.size()]));} @AT@ 5968 @LENGTH@ 283
---------UPD ExpressionStatement@@MethodInvocation:valueDbo.put(inKey,ids.toArray(new Object[ids.size()])) @TO@ MethodInvocation:resultDbo.put(inKey,ids.toArray(new Object[ids.size()])) @AT@ 6188 @LENGTH@ 57
------------UPD MethodInvocation@@valueDbo.put(inKey,ids.toArray(new Object[ids.size()])) @TO@ resultDbo.put(inKey,ids.toArray(new Object[ids.size()])) @AT@ 6188 @LENGTH@ 56
---------------UPD SimpleName@@Name:valueDbo @TO@ Name:resultDbo @AT@ 6188 @LENGTH@ 8
------UPD Block@@ElseBody:if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  return getMappedObject((DBObject)value,null);} @TO@ ElseBody:if (valueDbo.containsField("$ne")) {  resultDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  return getMappedObject(resultDbo,null);} @AT@ 6257 @LENGTH@ 166
---------UPD IfStatement@@if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  return getMappedObject((DBObject)value,null);} @TO@ if (valueDbo.containsField("$ne")) {  resultDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  return getMappedObject(resultDbo,null);} @AT@ 6257 @LENGTH@ 166
------------UPD Block@@ThenBody:{  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} @TO@ ThenBody:{  resultDbo.put("$ne",convertId(valueDbo.get("$ne")));} @AT@ 6292 @LENGTH@ 65
---------------UPD ExpressionStatement@@MethodInvocation:valueDbo.put("$ne",convertId(valueDbo.get("$ne"))) @TO@ MethodInvocation:resultDbo.put("$ne",convertId(valueDbo.get("$ne"))) @AT@ 6299 @LENGTH@ 52
------------------UPD MethodInvocation@@valueDbo.put("$ne",convertId(valueDbo.get("$ne"))) @TO@ resultDbo.put("$ne",convertId(valueDbo.get("$ne"))) @AT@ 6299 @LENGTH@ 51
---------------------UPD SimpleName@@Name:valueDbo @TO@ Name:resultDbo @AT@ 6299 @LENGTH@ 8
------------UPD Block@@ElseBody:{  return getMappedObject((DBObject)value,null);} @TO@ ElseBody:{  return getMappedObject(resultDbo,null);} @AT@ 6363 @LENGTH@ 60
---------------UPD ReturnStatement@@MethodInvocation:getMappedObject((DBObject)value,null) @TO@ MethodInvocation:getMappedObject(resultDbo,null) @AT@ 6370 @LENGTH@ 47
------------------UPD MethodInvocation@@getMappedObject((DBObject)value,null) @TO@ getMappedObject(resultDbo,null) @AT@ 6377 @LENGTH@ 39
---------------------UPD SimpleName@@MethodName:getMappedObject:[(DBObject)value, null] @TO@ MethodName:getMappedObject:[resultDbo, null] @AT@ 6377 @LENGTH@ 39
------------------------DEL CastExpression@@(DBObject)value @AT@ 6393 @LENGTH@ 16
---------------------------DEL SimpleType@@DBObject @AT@ 6394 @LENGTH@ 8
---------------------------DEL SimpleName@@value @AT@ 6404 @LENGTH@ 5
------------------------INS SimpleName@@resultDbo @TO@ SimpleName@@MethodName:getMappedObject:[(DBObject)value, null] @AT@ 6485 @LENGTH@ 9
---------------------UPD SimpleName@@MethodName:getMappedObject:[(DBObject)value, null] @TO@ MethodName:getMappedObject:[resultDbo, null] @AT@ 6377 @LENGTH@ 39
------------------------DEL CastExpression@@(DBObject)value @AT@ 6393 @LENGTH@ 16
---------------------------DEL SimpleType@@DBObject @AT@ 6394 @LENGTH@ 8
---------------------------DEL SimpleName@@value @AT@ 6404 @LENGTH@ 5
------------------------INS SimpleName@@resultDbo @TO@ SimpleName@@MethodName:getMappedObject:[(DBObject)value, null] @AT@ 6485 @LENGTH@ 9
---INS VariableDeclarationStatement@@DBObject resultDbo=new BasicDBObject(valueDbo.toMap()); @TO@ Block@@ThenBody:{  DBObject valueDbo=(DBObject)value;  if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {    String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";    List<Object> ids=new ArrayList<Object>();    for (    Object id : (Iterable<?>)valueDbo.get(inKey)) {      ids.add(convertId(id));    }    valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));  } else   if (valueDbo.containsField("$ne")) {    valueDbo.put("$ne",convertId(valueDbo.get("$ne")));  } else {    return getMappedObject((DBObject)value,null);  }  return valueDbo;} @AT@ 5926 @LENGTH@ 57
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject resultDbo=new BasicDBObject(valueDbo.toMap()); @AT@ 5926 @LENGTH@ 8
------INS VariableDeclarationFragment@@resultDbo=new BasicDBObject(valueDbo.toMap()) @TO@ VariableDeclarationStatement@@DBObject resultDbo=new BasicDBObject(valueDbo.toMap()); @AT@ 5935 @LENGTH@ 47
---------INS SimpleName@@resultDbo @TO@ VariableDeclarationFragment@@resultDbo=new BasicDBObject(valueDbo.toMap()) @AT@ 5935 @LENGTH@ 9
---------INS ClassInstanceCreation@@BasicDBObject[valueDbo.toMap()] @TO@ VariableDeclarationFragment@@resultDbo=new BasicDBObject(valueDbo.toMap()) @AT@ 5947 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject[valueDbo.toMap()] @AT@ 5947 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject[valueDbo.toMap()] @AT@ 5951 @LENGTH@ 13
------------INS MethodInvocation@@valueDbo.toMap() @TO@ ClassInstanceCreation@@BasicDBObject[valueDbo.toMap()] @AT@ 5965 @LENGTH@ 16
---------------INS SimpleName@@Name:valueDbo @TO@ MethodInvocation@@valueDbo.toMap() @AT@ 5965 @LENGTH@ 8
---------------INS SimpleName@@MethodName:toMap:[] @TO@ MethodInvocation@@valueDbo.toMap() @AT@ 5974 @LENGTH@ 7
---UPD ReturnStatement@@SimpleName:valueDbo @TO@ SimpleName:resultDbo @AT@ 6429 @LENGTH@ 16
------UPD SimpleName@@valueDbo @TO@ resultDbo @AT@ 6436 @LENGTH@ 8


UPD MethodDeclaration@@protected, abstract, T, MethodName:build,  @TO@ public, abstract, T, MethodName:build,  @AT@ 9702 @LENGTH@ 29
---UPD Modifier@@protected @TO@ public @AT@ 9702 @LENGTH@ 9


UPD MethodDeclaration@@public, DefaultOAuth2AccessToken, MethodName:setValue, String value,  @TO@ public, void, MethodName:setValue, String value,  @AT@ 1521 @LENGTH@ 172
---DEL SimpleType@@DefaultOAuth2AccessToken @AT@ 1528 @LENGTH@ 24
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, DefaultOAuth2AccessToken, MethodName:setValue, String value,  @AT@ 1528 @LENGTH@ 4
---DEL VariableDeclarationStatement@@DefaultOAuth2AccessToken result=new DefaultOAuth2AccessToken(this); @AT@ 1580 @LENGTH@ 69
------DEL SimpleType@@DefaultOAuth2AccessToken @AT@ 1580 @LENGTH@ 24
------DEL VariableDeclarationFragment@@result=new DefaultOAuth2AccessToken(this) @AT@ 1605 @LENGTH@ 43
---------DEL SimpleName@@result @AT@ 1605 @LENGTH@ 6
---------DEL ClassInstanceCreation@@DefaultOAuth2AccessToken[this] @AT@ 1614 @LENGTH@ 34
------------DEL New@@new @AT@ 1614 @LENGTH@ 3
------------DEL SimpleType@@DefaultOAuth2AccessToken @AT@ 1618 @LENGTH@ 24
------------DEL ThisExpression@@this @AT@ 1643 @LENGTH@ 4
---UPD ExpressionStatement@@Assignment:result.value=value @TO@ Assignment:this.value=value @AT@ 1652 @LENGTH@ 21
------UPD Assignment@@result.value=value @TO@ this.value=value @AT@ 1652 @LENGTH@ 20
---------INS FieldAccess@@this.value @TO@ Assignment@@result.value=value @AT@ 1560 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.value @AT@ 1560 @LENGTH@ 4
------------INS SimpleName@@value @TO@ FieldAccess@@this.value @AT@ 1565 @LENGTH@ 5
---------DEL QualifiedName@@result.value @AT@ 1652 @LENGTH@ 12
------------DEL SimpleName@@result @AT@ 1652 @LENGTH@ 6
------------DEL SimpleName@@value @AT@ 1659 @LENGTH@ 5
---DEL ReturnStatement@@SimpleName:result @AT@ 1676 @LENGTH@ 14
------DEL SimpleName@@result @AT@ 1683 @LENGTH@ 6


UPD MethodDeclaration@@public, FrameworkEndpointHandlerMapping, MethodName:endpointHandlerMapping,  @TO@ public, FrameworkEndpointHandlerMapping, MethodName:oauth2EndpointHandlerMapping,  @AT@ 6495 @LENGTH@ 116
---UPD SimpleName@@MethodName:endpointHandlerMapping @TO@ MethodName:oauth2EndpointHandlerMapping @AT@ 6534 @LENGTH@ 22


INS VariableDeclarationStatement@@Artifact mainPomArtifact=mainJarDependency.getDependency().getArtifact(); @TO@ MethodDeclaration@@public, void, MethodName:unpackJarProcess, ProcessConfig config, int id, File installDir, InstallOptions parameters, Exception,  @AT@ 2770 @LENGTH@ 75
---INS SimpleType@@Artifact @TO@ VariableDeclarationStatement@@Artifact mainPomArtifact=mainJarDependency.getDependency().getArtifact(); @AT@ 2770 @LENGTH@ 8
---INS VariableDeclarationFragment@@mainPomArtifact=mainJarDependency.getDependency().getArtifact() @TO@ VariableDeclarationStatement@@Artifact mainPomArtifact=mainJarDependency.getDependency().getArtifact(); @AT@ 2779 @LENGTH@ 65
------INS SimpleName@@mainPomArtifact @TO@ VariableDeclarationFragment@@mainPomArtifact=mainJarDependency.getDependency().getArtifact() @AT@ 2779 @LENGTH@ 15
------INS MethodInvocation@@mainJarDependency.getDependency().getArtifact() @TO@ VariableDeclarationFragment@@mainPomArtifact=mainJarDependency.getDependency().getArtifact() @AT@ 2797 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getDependency:[] @TO@ MethodInvocation@@mainJarDependency.getDependency().getArtifact() @AT@ 2797 @LENGTH@ 33
---------INS SimpleName@@Name:mainJarDependency @TO@ MethodInvocation@@mainJarDependency.getDependency().getArtifact() @AT@ 2797 @LENGTH@ 17
---------INS SimpleName@@MethodName:getArtifact:[] @TO@ MethodInvocation@@mainJarDependency.getDependency().getArtifact() @AT@ 2831 @LENGTH@ 13


UPD IfStatement@@if (source instanceof StreamSource) {  result=new StreamResult(new StringWriter());} else if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource) {  result=null;} @TO@ if (source instanceof DOMSource) {  result=new DOMResult();} else if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource || source instanceof StreamSource) {  result=null;} @AT@ 5026 @LENGTH@ 296


DEL FieldDeclaration@@private, static, String, [DEFAULT_CONVERTER="org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar.ns.registration"] @AT@ 1249 @LENGTH@ 135
---DEL Modifier@@private @AT@ 1249 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1257 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1264 @LENGTH@ 6
---DEL VariableDeclarationFragment@@DEFAULT_CONVERTER="org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar.ns.registration" @AT@ 1271 @LENGTH@ 112
------DEL SimpleName@@DEFAULT_CONVERTER @AT@ 1271 @LENGTH@ 17
------DEL StringLiteral@@"org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar.ns.registration" @AT@ 1291 @LENGTH@ 92


UPD ExpressionStatement@@Assignment:headerValue=normalizeDestinationName((String)headerValue) @TO@ Assignment:headerValue=normalizeDestinationName((String)headerValue,true) @AT@ 14770 @LENGTH@ 61
---UPD Assignment@@headerValue=normalizeDestinationName((String)headerValue) @TO@ headerValue=normalizeDestinationName((String)headerValue,true) @AT@ 14770 @LENGTH@ 60
------UPD MethodInvocation@@normalizeDestinationName((String)headerValue) @TO@ normalizeDestinationName((String)headerValue,true) @AT@ 14784 @LENGTH@ 46
---------UPD SimpleName@@MethodName:normalizeDestinationName:[(String)headerValue] @TO@ MethodName:normalizeDestinationName:[(String)headerValue, true] @AT@ 14784 @LENGTH@ 46
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:normalizeDestinationName:[(String)headerValue] @AT@ 14968 @LENGTH@ 4
---------UPD SimpleName@@MethodName:normalizeDestinationName:[(String)headerValue] @TO@ MethodName:normalizeDestinationName:[(String)headerValue, true] @AT@ 14784 @LENGTH@ 46
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:normalizeDestinationName:[(String)headerValue] @AT@ 14968 @LENGTH@ 4


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Progress,  @TO@ [@Data, public]Progress, AbstractDockerDTO @AT@ 807 @LENGTH@ 184
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Progress,  @AT@ 763 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 813 @LENGTH@ 47


UPD Block@@ElseBody:if (home && opName.equals("_get_EJBMetaData")) {  retVal=ejbMetaData;} else {  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,"UTF-8").toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @TO@ ElseBody:if (home && opName.equals("_get_EJBMetaData")) {  retVal=ejbMetaData;} else {  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @AT@ 9313 @LENGTH@ 4737
---UPD IfStatement@@if (home && opName.equals("_get_EJBMetaData")) {  retVal=ejbMetaData;} else {  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,"UTF-8").toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @TO@ if (home && opName.equals("_get_EJBMetaData")) {  retVal=ejbMetaData;} else {  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @AT@ 9313 @LENGTH@ 4737
------UPD Block@@ElseBody:{  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,"UTF-8").toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @TO@ ElseBody:{  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @AT@ 9427 @LENGTH@ 4623
---------UPD TryStatement@@try {  SimplePrincipal principal=null;  Object credential=null;  if (sasCurrent != null) {    final byte[] incomingName=sasCurrent.get_incoming_principal_name();    if (incomingName != null && incomingName.length > 0) {      if (incomingName.length > 0) {        String name=new String(incomingName,"UTF-8");        int domainIndex=name.indexOf('@');        if (domainIndex > 0)         name=name.substring(0,domainIndex);        principal=new SimplePrincipal(name);        credential=sasCurrent;      }    } else {      final byte[] username=sasCurrent.get_incoming_username();      final byte[] incomingPassword=sasCurrent.get_incoming_password();      if (username.length > 0) {        String name=new String(username,"UTF-8");        int domainIndex=name.indexOf('@');        if (domainIndex > 0) {          name=name.substring(0,domainIndex);        }        principal=new SimplePrincipal(name);        credential=new String(incomingPassword,"UTF-8").toCharArray();      }    }    if (securityDomain != null) {      sc=SecurityContextFactory.createSecurityContext(securityDomain);      sc.getUtil().createSubjectInfo(principal,credential,null);    }  }  final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);  if (!home && opName.equals("isIdentical") && params.length == 1) {    Object val=params[0];    if (val instanceof org.omg.CORBA.Object) {      retVal=handleIsIdentical((org.omg.CORBA.Object)val);    } else {      retVal=false;    }  } else {    if (sc != null) {      setSecurityContextOnAssociation(sc);    }    try {      final InterceptorContext interceptorContext=new InterceptorContext();      if (sc != null) {        interceptorContext.putPrivateData(SecurityContext.class,sc);      }      prepareInterceptorContext(op,params,interceptorContext);      retVal=componentView.invoke(interceptorContext);    }  finally {      if (sc != null) {        clearSecurityContextOnAssociation();      }    }  }}  finally {  if (tx != null) {    if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {      transactionManager.suspend();    }  }} @TO@ try {  SimplePrincipal principal=null;  Object credential=null;  if (sasCurrent != null) {    final byte[] incomingName=sasCurrent.get_incoming_principal_name();    if (incomingName != null && incomingName.length > 0) {      if (incomingName.length > 0) {        String name=new String(incomingName,StandardCharsets.UTF_8);        int domainIndex=name.indexOf('@');        if (domainIndex > 0)         name=name.substring(0,domainIndex);        principal=new SimplePrincipal(name);        credential=sasCurrent;      }    } else {      final byte[] username=sasCurrent.get_incoming_username();      final byte[] incomingPassword=sasCurrent.get_incoming_password();      if (username.length > 0) {        String name=new String(username,StandardCharsets.UTF_8);        int domainIndex=name.indexOf('@');        if (domainIndex > 0) {          name=name.substring(0,domainIndex);        }        principal=new SimplePrincipal(name);        credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();      }    }    if (securityDomain != null) {      sc=SecurityContextFactory.createSecurityContext(securityDomain);      sc.getUtil().createSubjectInfo(principal,credential,null);    }  }  final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);  if (!home && opName.equals("isIdentical") && params.length == 1) {    Object val=params[0];    if (val instanceof org.omg.CORBA.Object) {      retVal=handleIsIdentical((org.omg.CORBA.Object)val);    } else {      retVal=false;    }  } else {    if (sc != null) {      setSecurityContextOnAssociation(sc);    }    try {      final InterceptorContext interceptorContext=new InterceptorContext();      if (sc != null) {        interceptorContext.putPrivateData(SecurityContext.class,sc);      }      prepareInterceptorContext(op,params,interceptorContext);      retVal=componentView.invoke(interceptorContext);    }  finally {      if (sc != null) {        clearSecurityContextOnAssociation();      }    }  }}  finally {  if (tx != null) {    if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {      transactionManager.suspend();    }  }} @AT@ 9728 @LENGTH@ 4303
------------UPD IfStatement@@if (sasCurrent != null) {  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,"UTF-8").toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @TO@ if (sasCurrent != null) {  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @AT@ 9867 @LENGTH@ 2340
---------------UPD Block@@ThenBody:{  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,"UTF-8").toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @TO@ ThenBody:{  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @AT@ 9891 @LENGTH@ 2316
------------------UPD IfStatement@@if (incomingName != null && incomingName.length > 0) {  if (incomingName.length > 0) {    String name=new String(incomingName,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} else {  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,"UTF-8").toCharArray();  }} @TO@ if (incomingName != null && incomingName.length > 0) {  if (incomingName.length > 0) {    String name=new String(incomingName,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} else {  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();  }} @AT@ 10020 @LENGTH@ 1880
---------------------UPD Block@@ThenBody:{  if (incomingName.length > 0) {    String name=new String(incomingName,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} @TO@ ThenBody:{  if (incomingName.length > 0) {    String name=new String(incomingName,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} @AT@ 10074 @LENGTH@ 915
------------------------UPD IfStatement@@if (incomingName.length > 0) {  String name=new String(incomingName,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @TO@ if (incomingName.length > 0) {  String name=new String(incomingName,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @AT@ 10202 @LENGTH@ 757
---------------------------UPD Block@@ThenBody:{  String name=new String(incomingName,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @TO@ ThenBody:{  String name=new String(incomingName,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @AT@ 10231 @LENGTH@ 728
------------------------------UPD VariableDeclarationStatement@@String name=new String(incomingName,"UTF-8"); @TO@ String name=new String(incomingName,StandardCharsets.UTF_8); @AT@ 10269 @LENGTH@ 48
---------------------------------UPD VariableDeclarationFragment@@name=new String(incomingName,"UTF-8") @TO@ name=new String(incomingName,StandardCharsets.UTF_8) @AT@ 10276 @LENGTH@ 40
------------------------------------UPD ClassInstanceCreation@@String[incomingName, "UTF-8"] @TO@ String[incomingName, StandardCharsets.UTF_8] @AT@ 10283 @LENGTH@ 33
---------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 10308 @LENGTH@ 7
---------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[incomingName, "UTF-8"] @AT@ 10350 @LENGTH@ 22
------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 10350 @LENGTH@ 16
------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 10367 @LENGTH@ 5
---------------------UPD Block@@ElseBody:{  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,"UTF-8").toCharArray();  }} @TO@ ElseBody:{  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();  }} @AT@ 10995 @LENGTH@ 905
------------------------UPD IfStatement@@if (username.length > 0) {  String name=new String(username,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,"UTF-8").toCharArray();} @TO@ if (username.length > 0) {  String name=new String(username,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();} @AT@ 11304 @LENGTH@ 566
---------------------------UPD Block@@ThenBody:{  String name=new String(username,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,"UTF-8").toCharArray();} @TO@ ThenBody:{  String name=new String(username,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();} @AT@ 11328 @LENGTH@ 542
------------------------------UPD VariableDeclarationStatement@@String name=new String(username,"UTF-8"); @TO@ String name=new String(username,StandardCharsets.UTF_8); @AT@ 11366 @LENGTH@ 44
---------------------------------UPD VariableDeclarationFragment@@name=new String(username,"UTF-8") @TO@ name=new String(username,StandardCharsets.UTF_8) @AT@ 11373 @LENGTH@ 36
------------------------------------UPD ClassInstanceCreation@@String[username, "UTF-8"] @TO@ String[username, StandardCharsets.UTF_8] @AT@ 11380 @LENGTH@ 29
---------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 11401 @LENGTH@ 7
---------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[username, "UTF-8"] @AT@ 11458 @LENGTH@ 22
------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11458 @LENGTH@ 16
------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11475 @LENGTH@ 5
------------------------------UPD ExpressionStatement@@Assignment:credential=new String(incomingPassword,"UTF-8").toCharArray() @TO@ Assignment:credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray() @AT@ 11771 @LENGTH@ 65
---------------------------------UPD Assignment@@credential=new String(incomingPassword,"UTF-8").toCharArray() @TO@ credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray() @AT@ 11771 @LENGTH@ 64
------------------------------------UPD MethodInvocation@@new String(incomingPassword,"UTF-8").toCharArray() @TO@ new String(incomingPassword,StandardCharsets.UTF_8).toCharArray() @AT@ 11784 @LENGTH@ 51
---------------------------------------UPD ClassInstanceCreation@@String[incomingPassword, "UTF-8"] @TO@ String[incomingPassword, StandardCharsets.UTF_8] @AT@ 11784 @LENGTH@ 37
------------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 11813 @LENGTH@ 7
------------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[incomingPassword, "UTF-8"] @AT@ 11885 @LENGTH@ 22
---------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11885 @LENGTH@ 16
---------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11902 @LENGTH@ 5
---UPD IfStatement@@if (home && opName.equals("_get_EJBMetaData")) {  retVal=ejbMetaData;} else {  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,"UTF-8").toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @TO@ if (home && opName.equals("_get_EJBMetaData")) {  retVal=ejbMetaData;} else {  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @AT@ 9313 @LENGTH@ 4737
------UPD Block@@ElseBody:{  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,"UTF-8");          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,"UTF-8").toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @TO@ ElseBody:{  Transaction tx=null;  if (inboundTxCurrent != null)   tx=inboundTxCurrent.getCurrentTransaction();  if (tx != null) {    transactionManager.resume(tx);  }  try {    SimplePrincipal principal=null;    Object credential=null;    if (sasCurrent != null) {      final byte[] incomingName=sasCurrent.get_incoming_principal_name();      if (incomingName != null && incomingName.length > 0) {        if (incomingName.length > 0) {          String name=new String(incomingName,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0)           name=name.substring(0,domainIndex);          principal=new SimplePrincipal(name);          credential=sasCurrent;        }      } else {        final byte[] username=sasCurrent.get_incoming_username();        final byte[] incomingPassword=sasCurrent.get_incoming_password();        if (username.length > 0) {          String name=new String(username,StandardCharsets.UTF_8);          int domainIndex=name.indexOf('@');          if (domainIndex > 0) {            name=name.substring(0,domainIndex);          }          principal=new SimplePrincipal(name);          credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();        }      }      if (securityDomain != null) {        sc=SecurityContextFactory.createSecurityContext(securityDomain);        sc.getUtil().createSubjectInfo(principal,credential,null);      }    }    final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);    if (!home && opName.equals("isIdentical") && params.length == 1) {      Object val=params[0];      if (val instanceof org.omg.CORBA.Object) {        retVal=handleIsIdentical((org.omg.CORBA.Object)val);      } else {        retVal=false;      }    } else {      if (sc != null) {        setSecurityContextOnAssociation(sc);      }      try {        final InterceptorContext interceptorContext=new InterceptorContext();        if (sc != null) {          interceptorContext.putPrivateData(SecurityContext.class,sc);        }        prepareInterceptorContext(op,params,interceptorContext);        retVal=componentView.invoke(interceptorContext);      }  finally {        if (sc != null) {          clearSecurityContextOnAssociation();        }      }    }  }  finally {    if (tx != null) {      if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {        transactionManager.suspend();      }    }  }} @AT@ 9427 @LENGTH@ 4623
---------UPD TryStatement@@try {  SimplePrincipal principal=null;  Object credential=null;  if (sasCurrent != null) {    final byte[] incomingName=sasCurrent.get_incoming_principal_name();    if (incomingName != null && incomingName.length > 0) {      if (incomingName.length > 0) {        String name=new String(incomingName,"UTF-8");        int domainIndex=name.indexOf('@');        if (domainIndex > 0)         name=name.substring(0,domainIndex);        principal=new SimplePrincipal(name);        credential=sasCurrent;      }    } else {      final byte[] username=sasCurrent.get_incoming_username();      final byte[] incomingPassword=sasCurrent.get_incoming_password();      if (username.length > 0) {        String name=new String(username,"UTF-8");        int domainIndex=name.indexOf('@');        if (domainIndex > 0) {          name=name.substring(0,domainIndex);        }        principal=new SimplePrincipal(name);        credential=new String(incomingPassword,"UTF-8").toCharArray();      }    }    if (securityDomain != null) {      sc=SecurityContextFactory.createSecurityContext(securityDomain);      sc.getUtil().createSubjectInfo(principal,credential,null);    }  }  final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);  if (!home && opName.equals("isIdentical") && params.length == 1) {    Object val=params[0];    if (val instanceof org.omg.CORBA.Object) {      retVal=handleIsIdentical((org.omg.CORBA.Object)val);    } else {      retVal=false;    }  } else {    if (sc != null) {      setSecurityContextOnAssociation(sc);    }    try {      final InterceptorContext interceptorContext=new InterceptorContext();      if (sc != null) {        interceptorContext.putPrivateData(SecurityContext.class,sc);      }      prepareInterceptorContext(op,params,interceptorContext);      retVal=componentView.invoke(interceptorContext);    }  finally {      if (sc != null) {        clearSecurityContextOnAssociation();      }    }  }}  finally {  if (tx != null) {    if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {      transactionManager.suspend();    }  }} @TO@ try {  SimplePrincipal principal=null;  Object credential=null;  if (sasCurrent != null) {    final byte[] incomingName=sasCurrent.get_incoming_principal_name();    if (incomingName != null && incomingName.length > 0) {      if (incomingName.length > 0) {        String name=new String(incomingName,StandardCharsets.UTF_8);        int domainIndex=name.indexOf('@');        if (domainIndex > 0)         name=name.substring(0,domainIndex);        principal=new SimplePrincipal(name);        credential=sasCurrent;      }    } else {      final byte[] username=sasCurrent.get_incoming_username();      final byte[] incomingPassword=sasCurrent.get_incoming_password();      if (username.length > 0) {        String name=new String(username,StandardCharsets.UTF_8);        int domainIndex=name.indexOf('@');        if (domainIndex > 0) {          name=name.substring(0,domainIndex);        }        principal=new SimplePrincipal(name);        credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();      }    }    if (securityDomain != null) {      sc=SecurityContextFactory.createSecurityContext(securityDomain);      sc.getUtil().createSubjectInfo(principal,credential,null);    }  }  final Object[] params=op.readParams((org.omg.CORBA_2_3.portable.InputStream)in);  if (!home && opName.equals("isIdentical") && params.length == 1) {    Object val=params[0];    if (val instanceof org.omg.CORBA.Object) {      retVal=handleIsIdentical((org.omg.CORBA.Object)val);    } else {      retVal=false;    }  } else {    if (sc != null) {      setSecurityContextOnAssociation(sc);    }    try {      final InterceptorContext interceptorContext=new InterceptorContext();      if (sc != null) {        interceptorContext.putPrivateData(SecurityContext.class,sc);      }      prepareInterceptorContext(op,params,interceptorContext);      retVal=componentView.invoke(interceptorContext);    }  finally {      if (sc != null) {        clearSecurityContextOnAssociation();      }    }  }}  finally {  if (tx != null) {    if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) {      transactionManager.suspend();    }  }} @AT@ 9728 @LENGTH@ 4303
------------UPD IfStatement@@if (sasCurrent != null) {  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,"UTF-8").toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @TO@ if (sasCurrent != null) {  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @AT@ 9867 @LENGTH@ 2340
---------------UPD Block@@ThenBody:{  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,"UTF-8");      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,"UTF-8").toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @TO@ ThenBody:{  final byte[] incomingName=sasCurrent.get_incoming_principal_name();  if (incomingName != null && incomingName.length > 0) {    if (incomingName.length > 0) {      String name=new String(incomingName,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0)       name=name.substring(0,domainIndex);      principal=new SimplePrincipal(name);      credential=sasCurrent;    }  } else {    final byte[] username=sasCurrent.get_incoming_username();    final byte[] incomingPassword=sasCurrent.get_incoming_password();    if (username.length > 0) {      String name=new String(username,StandardCharsets.UTF_8);      int domainIndex=name.indexOf('@');      if (domainIndex > 0) {        name=name.substring(0,domainIndex);      }      principal=new SimplePrincipal(name);      credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();    }  }  if (securityDomain != null) {    sc=SecurityContextFactory.createSecurityContext(securityDomain);    sc.getUtil().createSubjectInfo(principal,credential,null);  }} @AT@ 9891 @LENGTH@ 2316
------------------UPD IfStatement@@if (incomingName != null && incomingName.length > 0) {  if (incomingName.length > 0) {    String name=new String(incomingName,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} else {  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,"UTF-8").toCharArray();  }} @TO@ if (incomingName != null && incomingName.length > 0) {  if (incomingName.length > 0) {    String name=new String(incomingName,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} else {  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();  }} @AT@ 10020 @LENGTH@ 1880
---------------------UPD Block@@ThenBody:{  if (incomingName.length > 0) {    String name=new String(incomingName,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} @TO@ ThenBody:{  if (incomingName.length > 0) {    String name=new String(incomingName,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0)     name=name.substring(0,domainIndex);    principal=new SimplePrincipal(name);    credential=sasCurrent;  }} @AT@ 10074 @LENGTH@ 915
------------------------UPD IfStatement@@if (incomingName.length > 0) {  String name=new String(incomingName,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @TO@ if (incomingName.length > 0) {  String name=new String(incomingName,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @AT@ 10202 @LENGTH@ 757
---------------------------UPD Block@@ThenBody:{  String name=new String(incomingName,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @TO@ ThenBody:{  String name=new String(incomingName,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0)   name=name.substring(0,domainIndex);  principal=new SimplePrincipal(name);  credential=sasCurrent;} @AT@ 10231 @LENGTH@ 728
------------------------------UPD VariableDeclarationStatement@@String name=new String(incomingName,"UTF-8"); @TO@ String name=new String(incomingName,StandardCharsets.UTF_8); @AT@ 10269 @LENGTH@ 48
---------------------------------UPD VariableDeclarationFragment@@name=new String(incomingName,"UTF-8") @TO@ name=new String(incomingName,StandardCharsets.UTF_8) @AT@ 10276 @LENGTH@ 40
------------------------------------UPD ClassInstanceCreation@@String[incomingName, "UTF-8"] @TO@ String[incomingName, StandardCharsets.UTF_8] @AT@ 10283 @LENGTH@ 33
---------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 10308 @LENGTH@ 7
---------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[incomingName, "UTF-8"] @AT@ 10350 @LENGTH@ 22
------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 10350 @LENGTH@ 16
------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 10367 @LENGTH@ 5
---------------------UPD Block@@ElseBody:{  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,"UTF-8");    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,"UTF-8").toCharArray();  }} @TO@ ElseBody:{  final byte[] username=sasCurrent.get_incoming_username();  final byte[] incomingPassword=sasCurrent.get_incoming_password();  if (username.length > 0) {    String name=new String(username,StandardCharsets.UTF_8);    int domainIndex=name.indexOf('@');    if (domainIndex > 0) {      name=name.substring(0,domainIndex);    }    principal=new SimplePrincipal(name);    credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();  }} @AT@ 10995 @LENGTH@ 905
------------------------UPD IfStatement@@if (username.length > 0) {  String name=new String(username,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,"UTF-8").toCharArray();} @TO@ if (username.length > 0) {  String name=new String(username,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();} @AT@ 11304 @LENGTH@ 566
---------------------------UPD Block@@ThenBody:{  String name=new String(username,"UTF-8");  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,"UTF-8").toCharArray();} @TO@ ThenBody:{  String name=new String(username,StandardCharsets.UTF_8);  int domainIndex=name.indexOf('@');  if (domainIndex > 0) {    name=name.substring(0,domainIndex);  }  principal=new SimplePrincipal(name);  credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray();} @AT@ 11328 @LENGTH@ 542
------------------------------UPD VariableDeclarationStatement@@String name=new String(username,"UTF-8"); @TO@ String name=new String(username,StandardCharsets.UTF_8); @AT@ 11366 @LENGTH@ 44
---------------------------------UPD VariableDeclarationFragment@@name=new String(username,"UTF-8") @TO@ name=new String(username,StandardCharsets.UTF_8) @AT@ 11373 @LENGTH@ 36
------------------------------------UPD ClassInstanceCreation@@String[username, "UTF-8"] @TO@ String[username, StandardCharsets.UTF_8] @AT@ 11380 @LENGTH@ 29
---------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 11401 @LENGTH@ 7
---------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[username, "UTF-8"] @AT@ 11458 @LENGTH@ 22
------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11458 @LENGTH@ 16
------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11475 @LENGTH@ 5
------------------------------UPD ExpressionStatement@@Assignment:credential=new String(incomingPassword,"UTF-8").toCharArray() @TO@ Assignment:credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray() @AT@ 11771 @LENGTH@ 65
---------------------------------UPD Assignment@@credential=new String(incomingPassword,"UTF-8").toCharArray() @TO@ credential=new String(incomingPassword,StandardCharsets.UTF_8).toCharArray() @AT@ 11771 @LENGTH@ 64
------------------------------------UPD MethodInvocation@@new String(incomingPassword,"UTF-8").toCharArray() @TO@ new String(incomingPassword,StandardCharsets.UTF_8).toCharArray() @AT@ 11784 @LENGTH@ 51
---------------------------------------UPD ClassInstanceCreation@@String[incomingPassword, "UTF-8"] @TO@ String[incomingPassword, StandardCharsets.UTF_8] @AT@ 11784 @LENGTH@ 37
------------------------------------------DEL StringLiteral@@"UTF-8" @AT@ 11813 @LENGTH@ 7
------------------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[incomingPassword, "UTF-8"] @AT@ 11885 @LENGTH@ 22
---------------------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11885 @LENGTH@ 16
---------------------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 11902 @LENGTH@ 5


UPD TypeDeclaration@@[final]CreateAction, AbstractAction @TO@ [@Command(name="create",scope="fabric",description="Creates a new fabric ensemble (ZooKeeper ensemble) and imports fabric profiles",detailedDescription="classpath:create.txt"), final]CreateAction, AbstractAction @AT@ 1557 @LENGTH@ 17558
---INS NormalAnnotation@@@Command(name="create",scope="fabric",description="Creates a new fabric ensemble (ZooKeeper ensemble) and imports fabric profiles",detailedDescription="classpath:create.txt") @TO@ TypeDeclaration@@[final]CreateAction, AbstractAction @AT@ 1604 @LENGTH@ 185


UPD MethodDeclaration@@public, boolean, MethodName:isSynthetic,  @TO@ public, Object, MethodName:getReferenceValue,  @AT@ 8329 @LENGTH@ 61
---DEL PrimitiveType@@boolean @AT@ 8336 @LENGTH@ 7
---UPD SimpleName@@MethodName:isSynthetic @TO@ MethodName:getReferenceValue @AT@ 8344 @LENGTH@ 11
---UPD ReturnStatement@@QualifiedName:field.synthetic @TO@ ConditionalExpression:field.synthetic && !field.isAliased() ? 1 : toString() @AT@ 8363 @LENGTH@ 23
------DEL QualifiedName@@field.synthetic @AT@ 8370 @LENGTH@ 15
------INS ConditionalExpression@@field.synthetic && !field.isAliased() ? 1 : toString() @TO@ ReturnStatement@@QualifiedName:field.synthetic @AT@ 8840 @LENGTH@ 54
---------INS InfixExpression@@field.synthetic && !field.isAliased() @TO@ ConditionalExpression@@field.synthetic && !field.isAliased() ? 1 : toString() @AT@ 8840 @LENGTH@ 37
------------INS QualifiedName@@field.synthetic @TO@ InfixExpression@@field.synthetic && !field.isAliased() @AT@ 8840 @LENGTH@ 15
---------------MOV SimpleName@@field @TO@ QualifiedName@@field.synthetic @AT@ 8370 @LENGTH@ 5
---------------MOV SimpleName@@synthetic @TO@ QualifiedName@@field.synthetic @AT@ 8376 @LENGTH@ 9
------------INS Operator@@&& @TO@ InfixExpression@@field.synthetic && !field.isAliased() @AT@ 8855 @LENGTH@ 2
------------INS PrefixExpression@@!field.isAliased() @TO@ InfixExpression@@field.synthetic && !field.isAliased() @AT@ 8859 @LENGTH@ 18
---------------INS Operator@@! @TO@ PrefixExpression@@!field.isAliased() @AT@ 8859 @LENGTH@ 1
---------------INS MethodInvocation@@field.isAliased() @TO@ PrefixExpression@@!field.isAliased() @AT@ 8860 @LENGTH@ 17
------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.isAliased() @AT@ 8860 @LENGTH@ 5
------------------INS SimpleName@@MethodName:isAliased:[] @TO@ MethodInvocation@@field.isAliased() @AT@ 8866 @LENGTH@ 11
---------INS NumberLiteral@@1 @TO@ ConditionalExpression@@field.synthetic && !field.isAliased() ? 1 : toString() @AT@ 8880 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:toString:[] @TO@ ConditionalExpression@@field.synthetic && !field.isAliased() ? 1 : toString() @AT@ 8884 @LENGTH@ 10
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, boolean, MethodName:isSynthetic,  @AT@ 8801 @LENGTH@ 6


MOV ForStatement@@for (int i=0; i < count; i++) {  executor.execute(new Runnable(){    @Override public void run(){      Double request=Math.random() * 100;      Object reply=template.convertSendAndReceive(request);      results.put(request,reply);    }  });} @TO@ MethodDeclaration@@public, void, MethodName:testSymmetricalReceiveAndReply, InterruptedException, UnsupportedEncodingException,  @AT@ 34070 @LENGTH@ 264


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQFabricTest, MQTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-683] Fix MQFabricTest"), public]MQFabricTest, MQTestSupport @AT@ 1783 @LENGTH@ 1848
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-683] Fix MQFabricTest") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQFabricTest, MQTestSupport @AT@ 1876 @LENGTH@ 40


DEL FieldDeclaration@@private, static, final, Charset, [UTF_8=Charset.forName("UTF-8")] @AT@ 2808 @LENGTH@ 62
---DEL Modifier@@private @AT@ 2808 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2816 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2823 @LENGTH@ 5
---DEL SimpleType@@Charset @AT@ 2829 @LENGTH@ 7
---DEL VariableDeclarationFragment@@UTF_8=Charset.forName("UTF-8") @AT@ 2837 @LENGTH@ 32
------DEL SimpleName@@UTF_8 @AT@ 2837 @LENGTH@ 5
------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 2845 @LENGTH@ 24
---------DEL SimpleName@@Name:Charset @AT@ 2845 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 2853 @LENGTH@ 16
------------DEL StringLiteral@@"UTF-8" @AT@ 2861 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 9092 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 9099 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 9116 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 9129 @LENGTH@ 202
------------DEL New@@new @AT@ 9129 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 9133 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 9133 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 9150 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 9170 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 9206 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 9206 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 9213 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 9230 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 9216 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 9216 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 9240 @LENGTH@ 10


UPD Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @TO@ ThenBody:{  final Throwable deploymentException=actionResult.getDeploymentException();  if (deploymentException != null) {    throw new RuntimeException(deploymentException);  }} @AT@ 4934 @LENGTH@ 189
---DEL IfStatement@@if (actionResult.getDeploymentException() != null) {  throw new RuntimeException(actionResult.getDeploymentException());} @AT@ 4952 @LENGTH@ 157
------DEL InfixExpression@@actionResult.getDeploymentException() != null @AT@ 4956 @LENGTH@ 45
---------DEL MethodInvocation@@actionResult.getDeploymentException() @AT@ 4956 @LENGTH@ 37
---INS VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @TO@ Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @AT@ 5009 @LENGTH@ 76
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 5009 @LENGTH@ 5
------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 5015 @LENGTH@ 9
------INS VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 5025 @LENGTH@ 59
---------INS SimpleName@@deploymentException @TO@ VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @AT@ 5025 @LENGTH@ 19
---------INS MethodInvocation@@actionResult.getDeploymentException() @TO@ VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @AT@ 5047 @LENGTH@ 37
------------MOV SimpleName@@Name:actionResult @TO@ MethodInvocation@@actionResult.getDeploymentException() @AT@ 4956 @LENGTH@ 12
------------MOV SimpleName@@MethodName:getDeploymentException:[] @TO@ MethodInvocation@@actionResult.getDeploymentException() @AT@ 4969 @LENGTH@ 24
---INS IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @TO@ Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @AT@ 5102 @LENGTH@ 121
------MOV Block@@ThenBody:{  throw new RuntimeException(actionResult.getDeploymentException());} @TO@ IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @AT@ 5003 @LENGTH@ 106
---------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(actionResult.getDeploymentException()) @TO@ ClassInstanceCreation:new RuntimeException(deploymentException) @AT@ 5025 @LENGTH@ 66
------------UPD ClassInstanceCreation@@RuntimeException[actionResult.getDeploymentException()] @TO@ RuntimeException[deploymentException] @AT@ 5031 @LENGTH@ 59
---------------DEL MethodInvocation@@actionResult.getDeploymentException() @AT@ 5052 @LENGTH@ 37
------------------DEL SimpleName@@Name:actionResult @AT@ 5052 @LENGTH@ 12
------------------DEL SimpleName@@MethodName:getDeploymentException:[] @AT@ 5065 @LENGTH@ 24
---------------INS SimpleName@@deploymentException @TO@ ClassInstanceCreation@@RuntimeException[actionResult.getDeploymentException()] @AT@ 5184 @LENGTH@ 19
------INS InfixExpression@@deploymentException != null @TO@ IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @AT@ 5106 @LENGTH@ 27
---------MOV Operator@@!= @TO@ InfixExpression@@deploymentException != null @AT@ 4993 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@deploymentException != null @AT@ 4997 @LENGTH@ 4
---------INS SimpleName@@deploymentException @TO@ InfixExpression@@deploymentException != null @AT@ 5106 @LENGTH@ 19


UPD VariableDeclarationStatement@@ImmutableNode root=(c != null) ? c.getRootNode() : null; @TO@ ImmutableNode root=(c != null) ? obtainRootNode(c) : null; @AT@ 24665 @LENGTH@ 58
---UPD VariableDeclarationFragment@@root=(c != null) ? c.getRootNode() : null @TO@ root=(c != null) ? obtainRootNode(c) : null @AT@ 24679 @LENGTH@ 43
------UPD ConditionalExpression@@(c != null) ? c.getRootNode() : null @TO@ (c != null) ? obtainRootNode(c) : null @AT@ 24686 @LENGTH@ 36
---------UPD MethodInvocation@@c.getRootNode() @TO@ obtainRootNode(c) @AT@ 24700 @LENGTH@ 15
------------DEL SimpleName@@Name:c @AT@ 24700 @LENGTH@ 1
------------UPD SimpleName@@MethodName:getRootNode:[] @TO@ MethodName:obtainRootNode:[c] @AT@ 24702 @LENGTH@ 13
---------------INS SimpleName@@c @TO@ SimpleName@@MethodName:getRootNode:[] @AT@ 24715 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:this.body=MessageHelper.extractBodyAsString(in) @TO@ Assignment:this.body=MessageHelper.extractBodyForLogging(in,"") @AT@ 3179 @LENGTH@ 50
---UPD Assignment@@this.body=MessageHelper.extractBodyAsString(in) @TO@ this.body=MessageHelper.extractBodyForLogging(in,"") @AT@ 3179 @LENGTH@ 49
------UPD MethodInvocation@@MessageHelper.extractBodyAsString(in) @TO@ MessageHelper.extractBodyForLogging(in,"") @AT@ 3191 @LENGTH@ 37
---------UPD SimpleName@@MethodName:extractBodyAsString:[in] @TO@ MethodName:extractBodyForLogging:[in, ""] @AT@ 3205 @LENGTH@ 23
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:extractBodyAsString:[in] @AT@ 3290 @LENGTH@ 2


INS FieldDeclaration@@private, boolean, [reverseHeaders=true] @TO@ TypeDeclaration@@[@Component(name="io.fabric8.gateway.http.mapping",immediate=true,metatype=true,policy=ConfigurationPolicy.REQUIRE,label="Fabric8 HTTP Gateway Mapping Rule",description="Provides a mapping between part of the fabric cluster and a HTTP URI template"), public]HttpMappingRuleConfiguration, AbstractComponent @AT@ 3709 @LENGTH@ 38
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 3709 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 3717 @LENGTH@ 7
---INS VariableDeclarationFragment@@reverseHeaders=true @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 3725 @LENGTH@ 21
------INS SimpleName@@reverseHeaders @TO@ VariableDeclarationFragment@@reverseHeaders=true @AT@ 3725 @LENGTH@ 14
------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@reverseHeaders=true @AT@ 3742 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:builder.append("%?(:(\\w+))%?") @TO@ MethodInvocation:builder.append("%?(:([\\p{L}\\w]+))%?") @AT@ 4653 @LENGTH@ 32
---UPD MethodInvocation@@builder.append("%?(:(\\w+))%?") @TO@ builder.append("%?(:([\\p{L}\\w]+))%?") @AT@ 4653 @LENGTH@ 31
------UPD SimpleName@@MethodName:append:["%?(:(\\w+))%?"] @TO@ MethodName:append:["%?(:([\\p{L}\\w]+))%?"] @AT@ 4661 @LENGTH@ 23
---------UPD StringLiteral@@"%?(:(\\w+))%?" @TO@ "%?(:([\\p{L}\\w]+))%?" @AT@ 4668 @LENGTH@ 15


UPD IfStatement@@if (!transitionElementExists) {  list.addAll(createTransition(FlowExecutionStatus.FAILED,FlowExecutionStatus.FAILED.getName(),null,null,stateDef,parserContext,false));  list.addAll(createTransition(FlowExecutionStatus.UNKNOWN,FlowExecutionStatus.UNKNOWN.getName(),null,null,stateDef,parserContext,false));  if (!hasNextAttribute) {    list.addAll(createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false));  }} else if (hasNextAttribute) {  parserContext.getReaderContext().error("The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element",element);} @TO@ if (!transitionElementExists) {  list.addAll(createTransition(FlowExecutionStatus.FAILED,FlowExecutionStatus.FAILED.getName(),null,null,stateDef,parserContext,false));  list.addAll(createTransition(FlowExecutionStatus.UNKNOWN,FlowExecutionStatus.UNKNOWN.getName(),null,null,stateDef,parserContext,false));  if (!hasNextAttribute) {    list.addAll(createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false));  }} @AT@ 7181 @LENGTH@ 695
---UPD Block@@ThenBody:{  list.addAll(createTransition(FlowExecutionStatus.FAILED,FlowExecutionStatus.FAILED.getName(),null,null,stateDef,parserContext,false));  list.addAll(createTransition(FlowExecutionStatus.UNKNOWN,FlowExecutionStatus.UNKNOWN.getName(),null,null,stateDef,parserContext,false));  if (!hasNextAttribute) {    list.addAll(createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false));  }} @TO@ ThenBody:{  list.addAll(createTransition(FlowExecutionStatus.FAILED,FlowExecutionStatus.FAILED.getName(),null,null,stateDef,parserContext,false));  list.addAll(createTransition(FlowExecutionStatus.UNKNOWN,FlowExecutionStatus.UNKNOWN.getName(),null,null,stateDef,parserContext,false));  if (!hasNextAttribute) {    list.addAll(createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false));  }} @AT@ 7211 @LENGTH@ 460
------UPD IfStatement@@if (!hasNextAttribute) {  list.addAll(createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false));} @TO@ if (!hasNextAttribute) {  list.addAll(createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false));} @AT@ 7516 @LENGTH@ 151
---------UPD Block@@ThenBody:{  list.addAll(createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false));} @TO@ ThenBody:{  list.addAll(createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false));} @AT@ 7539 @LENGTH@ 128
------------UPD ExpressionStatement@@MethodInvocation:list.addAll(createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false)) @TO@ MethodInvocation:list.addAll(createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false)) @AT@ 7545 @LENGTH@ 117
---------------UPD MethodInvocation@@list.addAll(createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false)) @TO@ list.addAll(createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false)) @AT@ 7545 @LENGTH@ 116
------------------UPD SimpleName@@MethodName:addAll:[createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false)] @TO@ MethodName:addAll:[createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false)] @AT@ 7550 @LENGTH@ 111
---------------------UPD MethodInvocation@@createTransition(FlowExecutionStatus.COMPLETED,null,null,null,stateDef,parserContext,false) @TO@ createTransition(FlowExecutionStatus.COMPLETED,FlowExecutionStatus.COMPLETED.getName(),null,null,stateDef,parserContext,false) @AT@ 7557 @LENGTH@ 103
------------------------UPD SimpleName@@MethodName:createTransition:[FlowExecutionStatus.COMPLETED, null, null, null, stateDef, parserContext, false] @TO@ MethodName:createTransition:[FlowExecutionStatus.COMPLETED, FlowExecutionStatus.COMPLETED.getName(), null, null, stateDef, parserContext, false] @AT@ 7557 @LENGTH@ 103
---------------------------DEL NullLiteral@@null @AT@ 7617 @LENGTH@ 4
---------------------------INS MethodInvocation@@FlowExecutionStatus.COMPLETED.getName() @TO@ SimpleName@@MethodName:createTransition:[FlowExecutionStatus.COMPLETED, null, null, null, stateDef, parserContext, false] @AT@ 7736 @LENGTH@ 39
------------------------------INS QualifiedName@@Name:FlowExecutionStatus.COMPLETED @TO@ MethodInvocation@@FlowExecutionStatus.COMPLETED.getName() @AT@ 7736 @LENGTH@ 29
------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@FlowExecutionStatus.COMPLETED.getName() @AT@ 7766 @LENGTH@ 9
---DEL Block@@ElseBody:if (hasNextAttribute) {  parserContext.getReaderContext().error("The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element",element);} @AT@ 7679 @LENGTH@ 197
------DEL IfStatement@@if (hasNextAttribute) {  parserContext.getReaderContext().error("The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element",element);} @AT@ 7679 @LENGTH@ 197
---------DEL SimpleName@@hasNextAttribute @AT@ 7683 @LENGTH@ 16
---------DEL Block@@ThenBody:{  parserContext.getReaderContext().error("The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element",element);} @AT@ 7701 @LENGTH@ 175
------------DEL ExpressionStatement@@MethodInvocation:parserContext.getReaderContext().error("The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element",element) @AT@ 7706 @LENGTH@ 166
---------------DEL MethodInvocation@@parserContext.getReaderContext().error("The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element",element) @AT@ 7706 @LENGTH@ 165
------------------DEL MethodInvocation@@MethodName:getReaderContext:[] @AT@ 7706 @LENGTH@ 32
------------------DEL SimpleName@@Name:parserContext @AT@ 7706 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:error:["The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element", element] @AT@ 7739 @LENGTH@ 132
---------------------DEL InfixExpression@@"The <" + element.getNodeName() + "/> may not contain a 'next"+ "' attribute and a transition element" @AT@ 7751 @LENGTH@ 110
------------------------DEL StringLiteral@@"The <" @AT@ 7751 @LENGTH@ 7
------------------------DEL Operator@@+ @AT@ 7758 @LENGTH@ 1
------------------------DEL MethodInvocation@@element.getNodeName() @AT@ 7761 @LENGTH@ 21
---------------------------DEL SimpleName@@Name:element @AT@ 7761 @LENGTH@ 7
---------------------------DEL SimpleName@@MethodName:getNodeName:[] @AT@ 7769 @LENGTH@ 13
------------------------DEL StringLiteral@@"/> may not contain a 'next" @AT@ 7785 @LENGTH@ 28
------------------------DEL StringLiteral@@"' attribute and a transition element" @AT@ 7823 @LENGTH@ 38
---------------------DEL SimpleName@@element @AT@ 7863 @LENGTH@ 7


UPD TypeDeclaration@@[@Ignore("[FABRIC-623] Fix CamelSpringDozerTest"), public]CamelSpringDozerTest, CamelSpringTestSupport @TO@ [@Ignore("Need update in camel-dozer, eg a new perfectus build number"), public]CamelSpringDozerTest, CamelSpringTestSupport @AT@ 1006 @LENGTH@ 940
---UPD SingleMemberAnnotation@@@Ignore("[FABRIC-623] Fix CamelSpringDozerTest") @TO@ @Ignore("Need update in camel-dozer, eg a new perfectus build number") @AT@ 1006 @LENGTH@ 48


UPD MethodDeclaration@@T, MethodName:apply, S input,  @TO@ T, MethodName:apply, S input, Exception,  @AT@ 771 @LENGTH@ 15
---INS SimpleType@@Exception @TO@ MethodDeclaration@@T, MethodName:apply, S input,  @AT@ 793 @LENGTH@ 9


UPD IfStatement@@if (persistentProperty.isAssociation()) {  if (!resourceMetadata.isManagedResource(persistentProperty)) {    continue;  }  if (mappings.getMappingFor(persistentProperty.getActualType()).isExported()) {    continue;  }  ResourceMapping propertyMapping=resourceMetadata.getMappingFor(persistentProperty);  if (!propertyMapping.isExported()) {    continue;  }} @TO@ if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {  continue;} @AT@ 10727 @LENGTH@ 405
---DEL MethodInvocation@@persistentProperty.isAssociation() @AT@ 10731 @LENGTH@ 34
---INS InfixExpression@@persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty) @TO@ IfStatement@@if (persistentProperty.isAssociation()) {  if (!resourceMetadata.isManagedResource(persistentProperty)) {    continue;  }  if (mappings.getMappingFor(persistentProperty.getActualType()).isExported()) {    continue;  }  ResourceMapping propertyMapping=resourceMetadata.getMappingFor(persistentProperty);  if (!propertyMapping.isExported()) {    continue;  }} @AT@ 10737 @LENGTH@ 85
------INS MethodInvocation@@persistentProperty.isAssociation() @TO@ InfixExpression@@persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty) @AT@ 10737 @LENGTH@ 34
---------MOV SimpleName@@Name:persistentProperty @TO@ MethodInvocation@@persistentProperty.isAssociation() @AT@ 10731 @LENGTH@ 18
---------MOV SimpleName@@MethodName:isAssociation:[] @TO@ MethodInvocation@@persistentProperty.isAssociation() @AT@ 10750 @LENGTH@ 15
------INS Operator@@&& @TO@ InfixExpression@@persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty) @AT@ 10771 @LENGTH@ 2
------INS MethodInvocation@@resourceMetadata.isExported(persistentProperty) @TO@ InfixExpression@@persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty) @AT@ 10775 @LENGTH@ 47
---------MOV SimpleName@@Name:resourceMetadata @TO@ MethodInvocation@@resourceMetadata.isExported(persistentProperty) @AT@ 10780 @LENGTH@ 16
---------MOV SimpleName@@MethodName:isManagedResource:[persistentProperty] @TO@ MethodInvocation@@resourceMetadata.isExported(persistentProperty) @AT@ 10797 @LENGTH@ 37
---DEL Block@@ThenBody:{  if (!resourceMetadata.isManagedResource(persistentProperty)) {    continue;  }  if (mappings.getMappingFor(persistentProperty.getActualType()).isExported()) {    continue;  }  ResourceMapping propertyMapping=resourceMetadata.getMappingFor(persistentProperty);  if (!propertyMapping.isExported()) {    continue;  }} @AT@ 10767 @LENGTH@ 365
------DEL IfStatement@@if (!resourceMetadata.isManagedResource(persistentProperty)) {  continue;} @AT@ 10775 @LENGTH@ 85
---------DEL PrefixExpression@@!resourceMetadata.isManagedResource(persistentProperty) @AT@ 10779 @LENGTH@ 55
------------DEL Operator@@! @AT@ 10779 @LENGTH@ 1
------------DEL MethodInvocation@@resourceMetadata.isManagedResource(persistentProperty) @AT@ 10780 @LENGTH@ 54
------DEL IfStatement@@if (mappings.getMappingFor(persistentProperty.getActualType()).isExported()) {  continue;} @AT@ 10867 @LENGTH@ 101
---------DEL MethodInvocation@@mappings.getMappingFor(persistentProperty.getActualType()).isExported() @AT@ 10871 @LENGTH@ 71
------------DEL MethodInvocation@@MethodName:getMappingFor:[persistentProperty.getActualType()] @AT@ 10871 @LENGTH@ 58
---------------DEL MethodInvocation@@persistentProperty.getActualType() @AT@ 10894 @LENGTH@ 34
------------------DEL SimpleName@@Name:persistentProperty @AT@ 10894 @LENGTH@ 18
------------------DEL SimpleName@@MethodName:getActualType:[] @AT@ 10913 @LENGTH@ 15
------------DEL SimpleName@@Name:mappings @AT@ 10871 @LENGTH@ 8
------------DEL SimpleName@@MethodName:isExported:[] @AT@ 10930 @LENGTH@ 12
---------DEL Block@@ThenBody:{  continue;} @AT@ 10944 @LENGTH@ 24
------------DEL ContinueStatement@@ @AT@ 10952 @LENGTH@ 9
------DEL VariableDeclarationStatement@@ResourceMapping propertyMapping=resourceMetadata.getMappingFor(persistentProperty); @AT@ 10975 @LENGTH@ 85
---------DEL SimpleType@@ResourceMapping @AT@ 10975 @LENGTH@ 15
---------DEL VariableDeclarationFragment@@propertyMapping=resourceMetadata.getMappingFor(persistentProperty) @AT@ 10991 @LENGTH@ 68
------------DEL SimpleName@@propertyMapping @AT@ 10991 @LENGTH@ 15
------------DEL MethodInvocation@@resourceMetadata.getMappingFor(persistentProperty) @AT@ 11009 @LENGTH@ 50
---------------DEL SimpleName@@Name:resourceMetadata @AT@ 11009 @LENGTH@ 16
---------------DEL SimpleName@@MethodName:getMappingFor:[persistentProperty] @AT@ 11026 @LENGTH@ 33
------------------DEL SimpleName@@persistentProperty @AT@ 11040 @LENGTH@ 18
------DEL IfStatement@@if (!propertyMapping.isExported()) {  continue;} @AT@ 11067 @LENGTH@ 59
---------DEL PrefixExpression@@!propertyMapping.isExported() @AT@ 11071 @LENGTH@ 29
------------DEL Operator@@! @AT@ 11071 @LENGTH@ 1
------------DEL MethodInvocation@@propertyMapping.isExported() @AT@ 11072 @LENGTH@ 28
---------------DEL SimpleName@@Name:propertyMapping @AT@ 11072 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:isExported:[] @AT@ 11088 @LENGTH@ 12
---------DEL Block@@ThenBody:{  continue;} @AT@ 11102 @LENGTH@ 24
------------DEL ContinueStatement@@ @AT@ 11110 @LENGTH@ 9
---MOV Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (persistentProperty.isAssociation()) {  if (!resourceMetadata.isManagedResource(persistentProperty)) {    continue;  }  if (mappings.getMappingFor(persistentProperty.getActualType()).isExported()) {    continue;  }  ResourceMapping propertyMapping=resourceMetadata.getMappingFor(persistentProperty);  if (!propertyMapping.isExported()) {    continue;  }} @AT@ 10836 @LENGTH@ 24


INS MethodDeclaration@@Path, MethodName:init, Path path,  @TO@ TypeDeclaration@@[public]FileNamingStrategy,  @AT@ 1719 @LENGTH@ 16
---INS SimpleType@@Path @TO@ MethodDeclaration@@Path, MethodName:init, Path path,  @AT@ 1714 @LENGTH@ 4
---INS SimpleName@@MethodName:init @TO@ MethodDeclaration@@Path, MethodName:init, Path path,  @AT@ 1719 @LENGTH@ 4
---INS SingleVariableDeclaration@@Path path @TO@ MethodDeclaration@@Path, MethodName:init, Path path,  @AT@ 1724 @LENGTH@ 9
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path path @AT@ 1724 @LENGTH@ 4
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@Path path @AT@ 1729 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:retrieveToken(getParametersForTokenRequest(resource),new HttpHeaders(),resource) @TO@ MethodInvocation:retrieveToken(request,resource,getParametersForTokenRequest(resource),new HttpHeaders()) @AT@ 2296 @LENGTH@ 90
---UPD MethodInvocation@@retrieveToken(getParametersForTokenRequest(resource),new HttpHeaders(),resource) @TO@ retrieveToken(request,resource,getParametersForTokenRequest(resource),new HttpHeaders()) @AT@ 2303 @LENGTH@ 82
------UPD SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource), new HttpHeaders(), resource] @TO@ MethodName:retrieveToken:[request, resource, getParametersForTokenRequest(resource), new HttpHeaders()] @AT@ 2303 @LENGTH@ 82
---------INS SimpleName@@request @TO@ SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource), new HttpHeaders(), resource] @AT@ 2326 @LENGTH@ 7
---------INS SimpleName@@resource @TO@ SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource), new HttpHeaders(), resource] @AT@ 2335 @LENGTH@ 8
---------DEL SimpleName@@resource @AT@ 2376 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:warehouseDir=new File(dataDir,"warehouse").getAbsolutePath() @TO@ Assignment:warehouseDir=HCatUtil.makePathASafeFileName(dataDir + File.separator + "warehouse") @AT@ 2710 @LENGTH@ 64
---UPD Assignment@@warehouseDir=new File(dataDir,"warehouse").getAbsolutePath() @TO@ warehouseDir=HCatUtil.makePathASafeFileName(dataDir + File.separator + "warehouse") @AT@ 2710 @LENGTH@ 63
------UPD MethodInvocation@@new File(dataDir,"warehouse").getAbsolutePath() @TO@ HCatUtil.makePathASafeFileName(dataDir + File.separator + "warehouse") @AT@ 2725 @LENGTH@ 48
---------DEL ClassInstanceCreation@@File[dataDir, "warehouse"] @AT@ 2725 @LENGTH@ 30
------------DEL New@@new @AT@ 2725 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 2729 @LENGTH@ 4
------------DEL SimpleName@@dataDir @AT@ 2734 @LENGTH@ 7
------------DEL StringLiteral@@"warehouse" @AT@ 2743 @LENGTH@ 11
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@new File(dataDir,"warehouse").getAbsolutePath() @AT@ 2725 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "warehouse"] @TO@ MethodInvocation@@new File(dataDir,"warehouse").getAbsolutePath() @AT@ 2734 @LENGTH@ 61
------------INS InfixExpression@@dataDir + File.separator + "warehouse" @TO@ SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "warehouse"] @AT@ 2756 @LENGTH@ 38
---------------INS SimpleName@@dataDir @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2756 @LENGTH@ 7
---------------INS Operator@@+ @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2763 @LENGTH@ 1
---------------INS QualifiedName@@File.separator @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2766 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 2766 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 2771 @LENGTH@ 9
---------------INS StringLiteral@@"warehouse" @TO@ InfixExpression@@dataDir + File.separator + "warehouse" @AT@ 2783 @LENGTH@ 11
---------DEL SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2756 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:setOutFilterPattern("((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]|(?i)Content-Type)*") @TO@ MethodInvocation:setOutFilterPattern("((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]*)|(?i)Content-Type") @AT@ 1803 @LENGTH@ 89
---UPD MethodInvocation@@setOutFilterPattern("((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]|(?i)Content-Type)*") @TO@ setOutFilterPattern("((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]*)|(?i)Content-Type") @AT@ 1803 @LENGTH@ 88
------UPD SimpleName@@MethodName:setOutFilterPattern:["((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]|(?i)Content-Type)*"] @TO@ MethodName:setOutFilterPattern:["((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]*)|(?i)Content-Type"] @AT@ 1803 @LENGTH@ 88
---------UPD StringLiteral@@"((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]|(?i)Content-Type)*" @TO@ "((Camel|org\\.apache\\.camel)[\\.|a-z|A-z|0-9]*)|(?i)Content-Type" @AT@ 1823 @LENGTH@ 67


UPD ForStatement@@for (int i=1; i <= number; i++) {  String containerName;  if (orgNumber >= 1) {    containerName=originalName + i;  } else {    containerName=originalName;  }  optionsMap.put("name",containerName);  if (!hasValidDataStoreProperties(optionsMap)) {    optionsMap.put("dataStoreProperties",getDataStore().getDataStoreProperties());  }  Class cl=options.getClass().getClassLoader().loadClass(options.getClass().getName() + "$Builder");  CreateContainerBasicOptions.Builder builder=(CreateContainerBasicOptions.Builder)mapper.readValue(mapper.writeValueAsString(optionsMap),cl);  final CreateContainerOptions containerOptions=builder.build();  final CreationStateListener containerListener=listener;  new Thread("Creating container " + containerName){    public void run(){      try {        getDataStore().createContainerConfig(containerOptions);        CreateContainerMetadata metadata=provider.create(containerOptions,containerListener);        if (metadata.isSuccess()) {          Container parent=containerOptions.getParent() != null ? getContainer(containerOptions.getParent()) : null;          if (!containerOptions.isEnsembleServer()) {            getDataStore().createContainerConfig(metadata);          }          ContainerImpl container=new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this);          metadata.setContainer(container);          LOGGER.info("The container " + metadata.getContainerName() + " has been successfully created");        } else {          LOGGER.info("The creation of the container " + metadata.getContainerName() + " has failed",metadata.getFailure());        }        metadatas.add(metadata);      } catch (      Throwable t) {        CreateContainerBasicMetadata metadata=new CreateContainerBasicMetadata();        metadata.setCreateOptions(containerOptions);        metadata.setFailure(t);        metadatas.add(metadata);        getDataStore().deleteContainer(containerOptions.getName());      } finally {        latch.countDown();      }    }  }.start();} @TO@ for (int i=1; i <= number; i++) {  String containerName;  if (orgNumber >= 1) {    containerName=originalName + i;  } else {    containerName=originalName;  }  optionsMap.put("name",containerName);  if (!hasValidDataStoreProperties(optionsMap)) {    optionsMap.put("dataStoreProperties",getDataStore().getDataStoreProperties());  }  Class cl=options.getClass().getClassLoader().loadClass(options.getClass().getName() + "$Builder");  CreateContainerBasicOptions.Builder builder=(CreateContainerBasicOptions.Builder)mapper.readValue(mapper.writeValueAsString(optionsMap),cl);  builder=(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword()));  final CreateContainerOptions containerOptions=builder.build();  final CreationStateListener containerListener=listener;  new Thread("Creating container " + containerName){    public void run(){      try {        getDataStore().createContainerConfig(containerOptions);        CreateContainerMetadata metadata=provider.create(containerOptions,containerListener);        if (metadata.isSuccess()) {          Container parent=containerOptions.getParent() != null ? getContainer(containerOptions.getParent()) : null;          if (!containerOptions.isEnsembleServer()) {            getDataStore().createContainerConfig(metadata);          }          ContainerImpl container=new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this);          metadata.setContainer(container);          LOGGER.info("The container " + metadata.getContainerName() + " has been successfully created");        } else {          LOGGER.info("The creation of the container " + metadata.getContainerName() + " has failed",metadata.getFailure());        }        metadatas.add(metadata);      } catch (      Throwable t) {        CreateContainerBasicMetadata metadata=new CreateContainerBasicMetadata();        metadata.setCreateOptions(containerOptions);        metadata.setFailure(t);        metadatas.add(metadata);        getDataStore().deleteContainer(containerOptions.getName());      } finally {        latch.countDown();      }    }  }.start();} @AT@ 16537 @LENGTH@ 3296
---INS ExpressionStatement@@Assignment:builder=(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @TO@ ForStatement@@for (int i=1; i <= number; i++) {  String containerName;  if (orgNumber >= 1) {    containerName=originalName + i;  } else {    containerName=originalName;  }  optionsMap.put("name",containerName);  if (!hasValidDataStoreProperties(optionsMap)) {    optionsMap.put("dataStoreProperties",getDataStore().getDataStoreProperties());  }  Class cl=options.getClass().getClassLoader().loadClass(options.getClass().getName() + "$Builder");  CreateContainerBasicOptions.Builder builder=(CreateContainerBasicOptions.Builder)mapper.readValue(mapper.writeValueAsString(optionsMap),cl);  final CreateContainerOptions containerOptions=builder.build();  final CreationStateListener containerListener=listener;  new Thread("Creating container " + containerName){    public void run(){      try {        getDataStore().createContainerConfig(containerOptions);        CreateContainerMetadata metadata=provider.create(containerOptions,containerListener);        if (metadata.isSuccess()) {          Container parent=containerOptions.getParent() != null ? getContainer(containerOptions.getParent()) : null;          if (!containerOptions.isEnsembleServer()) {            getDataStore().createContainerConfig(metadata);          }          ContainerImpl container=new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this);          metadata.setContainer(container);          LOGGER.info("The container " + metadata.getContainerName() + " has been successfully created");        } else {          LOGGER.info("The creation of the container " + metadata.getContainerName() + " has failed",metadata.getFailure());        }        metadatas.add(metadata);      } catch (      Throwable t) {        CreateContainerBasicMetadata metadata=new CreateContainerBasicMetadata();        metadata.setCreateOptions(containerOptions);        metadata.setFailure(t);        metadatas.add(metadata);        getDataStore().deleteContainer(containerOptions.getName());      } finally {        latch.countDown();      }    }  }.start();} @AT@ 17549 @LENGTH@ 122
------INS Assignment@@builder=(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @TO@ ExpressionStatement@@Assignment:builder=(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17549 @LENGTH@ 121
---------INS SimpleName@@builder @TO@ Assignment@@builder=(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17549 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@builder=(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17556 @LENGTH@ 1
---------INS CastExpression@@(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @TO@ Assignment@@builder=(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17559 @LENGTH@ 111
------------INS SimpleType@@CreateContainerBasicOptions.Builder @TO@ CastExpression@@(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17560 @LENGTH@ 35
------------INS MethodInvocation@@builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @TO@ CastExpression@@(CreateContainerBasicOptions.Builder)builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17597 @LENGTH@ 73
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17597 @LENGTH@ 7
---------------INS SimpleName@@MethodName:zookeeperPassword:[PasswordEncoder.encode(getZookeeperPassword())] @TO@ MethodInvocation@@builder.zookeeperPassword(PasswordEncoder.encode(getZookeeperPassword())) @AT@ 17605 @LENGTH@ 65
------------------INS MethodInvocation@@PasswordEncoder.encode(getZookeeperPassword()) @TO@ SimpleName@@MethodName:zookeeperPassword:[PasswordEncoder.encode(getZookeeperPassword())] @AT@ 17623 @LENGTH@ 46
---------------------INS SimpleName@@Name:PasswordEncoder @TO@ MethodInvocation@@PasswordEncoder.encode(getZookeeperPassword()) @AT@ 17623 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:encode:[getZookeeperPassword()] @TO@ MethodInvocation@@PasswordEncoder.encode(getZookeeperPassword()) @AT@ 17639 @LENGTH@ 30
------------------------INS MethodInvocation@@MethodName:getZookeeperPassword:[] @TO@ SimpleName@@MethodName:encode:[getZookeeperPassword()] @AT@ 17646 @LENGTH@ 22


UPD IfStatement@@if (value > 0) {  TimeUnit unit=timeout.getUnit();  I id=bean.getId();  InfinispanEjbLogger.ROOT_LOGGER.tracef("Scheduling stateful session bean %s to expire in %d %s",id,value,unit);  this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit));} @TO@ if (value >= 0) {  I id=bean.getId();  TimeUnit unit=timeout.getUnit();  InfinispanEjbLogger.ROOT_LOGGER.tracef("Scheduling stateful session bean %s to expire in %d %s",id,value,unit);  ExpirationTask task=new ExpirationTask(id);synchronized (task) {    this.expirationFutures.put(id,this.executor.schedule(task,value,unit));  }} @AT@ 3477 @LENGTH@ 338
---UPD InfixExpression@@value > 0 @TO@ value >= 0 @AT@ 3481 @LENGTH@ 9
------UPD Operator@@> @TO@ >= @AT@ 3486 @LENGTH@ 1
---UPD Block@@ThenBody:{  TimeUnit unit=timeout.getUnit();  I id=bean.getId();  InfinispanEjbLogger.ROOT_LOGGER.tracef("Scheduling stateful session bean %s to expire in %d %s",id,value,unit);  this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit));} @TO@ ThenBody:{  I id=bean.getId();  TimeUnit unit=timeout.getUnit();  InfinispanEjbLogger.ROOT_LOGGER.tracef("Scheduling stateful session bean %s to expire in %d %s",id,value,unit);  ExpirationTask task=new ExpirationTask(id);synchronized (task) {    this.expirationFutures.put(id,this.executor.schedule(task,value,unit));  }} @AT@ 3492 @LENGTH@ 323
------MOV VariableDeclarationStatement@@TimeUnit unit=timeout.getUnit(); @TO@ Block@@ThenBody:{  TimeUnit unit=timeout.getUnit();  I id=bean.getId();  InfinispanEjbLogger.ROOT_LOGGER.tracef("Scheduling stateful session bean %s to expire in %d %s",id,value,unit);  this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit));} @AT@ 3506 @LENGTH@ 34
------UPD ExpressionStatement@@MethodInvocation:this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit)) @TO@ MethodInvocation:this.expirationFutures.put(id,this.executor.schedule(task,value,unit)) @AT@ 3713 @LENGTH@ 92
------INS VariableDeclarationStatement@@ExpirationTask task=new ExpirationTask(id); @TO@ Block@@ThenBody:{  TimeUnit unit=timeout.getUnit();  I id=bean.getId();  InfinispanEjbLogger.ROOT_LOGGER.tracef("Scheduling stateful session bean %s to expire in %d %s",id,value,unit);  this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit));} @AT@ 3714 @LENGTH@ 45
---------INS SimpleType@@ExpirationTask @TO@ VariableDeclarationStatement@@ExpirationTask task=new ExpirationTask(id); @AT@ 3714 @LENGTH@ 14
---------INS VariableDeclarationFragment@@task=new ExpirationTask(id) @TO@ VariableDeclarationStatement@@ExpirationTask task=new ExpirationTask(id); @AT@ 3729 @LENGTH@ 29
------------INS SimpleName@@task @TO@ VariableDeclarationFragment@@task=new ExpirationTask(id) @AT@ 3729 @LENGTH@ 4
------------INS ClassInstanceCreation@@ExpirationTask[id] @TO@ VariableDeclarationFragment@@task=new ExpirationTask(id) @AT@ 3736 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@ExpirationTask[id] @AT@ 3736 @LENGTH@ 3
---------------INS SimpleType@@ExpirationTask @TO@ ClassInstanceCreation@@ExpirationTask[id] @AT@ 3740 @LENGTH@ 14
---------------INS SimpleName@@id @TO@ ClassInstanceCreation@@ExpirationTask[id] @AT@ 3755 @LENGTH@ 2
------INS SynchronizedStatement@@synchronized (task) {  this.expirationFutures.put(id,this.executor.schedule(task,value,unit));} @TO@ Block@@ThenBody:{  TimeUnit unit=timeout.getUnit();  I id=bean.getId();  InfinispanEjbLogger.ROOT_LOGGER.tracef("Scheduling stateful session bean %s to expire in %d %s",id,value,unit);  this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit));} @AT@ 3885 @LENGTH@ 126
---------INS SimpleName@@task @TO@ SynchronizedStatement@@synchronized (task) {  this.expirationFutures.put(id,this.executor.schedule(task,value,unit));} @AT@ 3899 @LENGTH@ 4
---------INS Block@@SyncBody:{  this.expirationFutures.put(id,this.executor.schedule(task,value,unit));} @TO@ SynchronizedStatement@@synchronized (task) {  this.expirationFutures.put(id,this.executor.schedule(task,value,unit));} @AT@ 3905 @LENGTH@ 106
------------MOV ExpressionStatement@@MethodInvocation:this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit)) @TO@ Block@@SyncBody:{  this.expirationFutures.put(id,this.executor.schedule(task,value,unit));} @AT@ 3713 @LENGTH@ 92
---------------UPD MethodInvocation@@this.expirationFutures.put(id,this.executor.schedule(new ExpirationTask(id),value,unit)) @TO@ this.expirationFutures.put(id,this.executor.schedule(task,value,unit)) @AT@ 3713 @LENGTH@ 91
------------------UPD SimpleName@@MethodName:put:[id, this.executor.schedule(new ExpirationTask(id),value,unit)] @TO@ MethodName:put:[id, this.executor.schedule(task,value,unit)] @AT@ 3736 @LENGTH@ 68
---------------------UPD MethodInvocation@@this.executor.schedule(new ExpirationTask(id),value,unit) @TO@ this.executor.schedule(task,value,unit) @AT@ 3744 @LENGTH@ 59
------------------------UPD SimpleName@@MethodName:schedule:[new ExpirationTask(id), value, unit] @TO@ MethodName:schedule:[task, value, unit] @AT@ 3758 @LENGTH@ 45
---------------------------DEL ClassInstanceCreation@@ExpirationTask[id] @AT@ 3767 @LENGTH@ 22
------------------------------DEL New@@new @AT@ 3767 @LENGTH@ 3
------------------------------DEL SimpleType@@ExpirationTask @AT@ 3771 @LENGTH@ 14
------------------------------DEL SimpleName@@id @AT@ 3786 @LENGTH@ 2
---------------------------INS SimpleName@@task @TO@ SimpleName@@MethodName:schedule:[new ExpirationTask(id), value, unit] @AT@ 3977 @LENGTH@ 4


INS MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @TO@ TypeDeclaration@@[public]TestHCatPartitionPublish,  @AT@ 3259 @LENGTH@ 365
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3259 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3266 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3273 @LENGTH@ 4
---INS SimpleName@@MethodName:handleWorkDir @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3278 @LENGTH@ 13
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3301 @LENGTH@ 11
---INS VariableDeclarationStatement@@String testDir=System.getProperty("test.data.dir","./"); @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3319 @LENGTH@ 59
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String testDir=System.getProperty("test.data.dir","./"); @AT@ 3319 @LENGTH@ 6
------INS VariableDeclarationFragment@@testDir=System.getProperty("test.data.dir","./") @TO@ VariableDeclarationStatement@@String testDir=System.getProperty("test.data.dir","./"); @AT@ 3326 @LENGTH@ 51
---------INS SimpleName@@testDir @TO@ VariableDeclarationFragment@@testDir=System.getProperty("test.data.dir","./") @AT@ 3326 @LENGTH@ 7
---------INS MethodInvocation@@System.getProperty("test.data.dir","./") @TO@ VariableDeclarationFragment@@testDir=System.getProperty("test.data.dir","./") @AT@ 3336 @LENGTH@ 41
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("test.data.dir","./") @AT@ 3336 @LENGTH@ 6
------------INS SimpleName@@MethodName:getProperty:["test.data.dir", "./"] @TO@ MethodInvocation@@System.getProperty("test.data.dir","./") @AT@ 3343 @LENGTH@ 34
---------------INS StringLiteral@@"test.data.dir" @TO@ SimpleName@@MethodName:getProperty:["test.data.dir", "./"] @AT@ 3355 @LENGTH@ 15
---------------INS StringLiteral@@"./" @TO@ SimpleName@@MethodName:getProperty:["test.data.dir", "./"] @AT@ 3372 @LENGTH@ 4
---MOV ExpressionStatement@@Assignment:testDir=testDir + "/test_hcat_partitionpublish_" + Math.abs(new Random().nextLong())+ "/" @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3387 @LENGTH@ 93
---MOV VariableDeclarationStatement@@File workDir=new File(new File(testDir).getCanonicalPath()); @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3485 @LENGTH@ 62
---MOV ExpressionStatement@@MethodInvocation:FileUtil.fullyDelete(workDir) @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3552 @LENGTH@ 30
---MOV ExpressionStatement@@MethodInvocation:workDir.mkdirs() @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3587 @LENGTH@ 17
---INS ReturnStatement@@SimpleName:workDir @TO@ MethodDeclaration@@public, static, File, MethodName:handleWorkDir, IOException,  @AT@ 3605 @LENGTH@ 15
------INS SimpleName@@workDir @TO@ ReturnStatement@@SimpleName:workDir @AT@ 3612 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 2491 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 2498 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 2515 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 2528 @LENGTH@ 202
------------DEL New@@new @AT@ 2528 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 2532 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 2532 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 2549 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2569 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 2605 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 2605 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 2612 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 2629 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 2615 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 2615 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 2639 @LENGTH@ 10


UPD MethodDeclaration@@public, Resource<?>, MethodName:listSearches, RepositoryRestRequest request,  @TO@ public, ResourceSupport, MethodName:listSearches, RepositoryRestRequest request,  @AT@ 3596 @LENGTH@ 455
---INS SimpleType@@ResourceSupport @TO@ MethodDeclaration@@public, Resource<?>, MethodName:listSearches, RepositoryRestRequest request,  @AT@ 3573 @LENGTH@ 15
---DEL ParameterizedType@@Resource<?> @AT@ 3603 @LENGTH@ 11
------DEL SimpleType@@Resource @AT@ 3603 @LENGTH@ 8
------DEL WildcardType@@? @AT@ 3612 @LENGTH@ 1
---INS VariableDeclarationStatement@@ResourceSupport result=new ResourceSupport(); @TO@ MethodDeclaration@@public, Resource<?>, MethodName:listSearches, RepositoryRestRequest request,  @AT@ 3951 @LENGTH@ 47
------INS SimpleType@@ResourceSupport @TO@ VariableDeclarationStatement@@ResourceSupport result=new ResourceSupport(); @AT@ 3951 @LENGTH@ 15
------INS VariableDeclarationFragment@@result=new ResourceSupport() @TO@ VariableDeclarationStatement@@ResourceSupport result=new ResourceSupport(); @AT@ 3967 @LENGTH@ 30
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=new ResourceSupport() @AT@ 3967 @LENGTH@ 6
---------INS ClassInstanceCreation@@ResourceSupport[] @TO@ VariableDeclarationFragment@@result=new ResourceSupport() @AT@ 3976 @LENGTH@ 21
------------INS SimpleType@@ResourceSupport @TO@ ClassInstanceCreation@@ResourceSupport[] @AT@ 3980 @LENGTH@ 15
------------MOV New@@new @TO@ ClassInstanceCreation@@ResourceSupport[] @AT@ 3984 @LENGTH@ 3
---DEL ReturnStatement@@ClassInstanceCreation:new Resource<Object>(Collections.emptyList(),queryMethodLinks) @AT@ 3977 @LENGTH@ 71
------DEL ClassInstanceCreation@@Resource<Object>[Collections.emptyList(), queryMethodLinks] @AT@ 3984 @LENGTH@ 63
---------DEL ParameterizedType@@Resource<Object> @AT@ 3988 @LENGTH@ 16
------------DEL SimpleType@@Resource @AT@ 3988 @LENGTH@ 8
------------DEL SimpleType@@Object @AT@ 3997 @LENGTH@ 6
---------DEL MethodInvocation@@Collections.emptyList() @AT@ 4005 @LENGTH@ 23
---------DEL SimpleName@@queryMethodLinks @AT@ 4030 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:result.add(queryMethodLinks) @TO@ MethodDeclaration@@public, Resource<?>, MethodName:listSearches, RepositoryRestRequest request,  @AT@ 4001 @LENGTH@ 29
------INS MethodInvocation@@result.add(queryMethodLinks) @TO@ ExpressionStatement@@MethodInvocation:result.add(queryMethodLinks) @AT@ 4001 @LENGTH@ 28
---------MOV SimpleName@@Name:Collections @TO@ MethodInvocation@@result.add(queryMethodLinks) @AT@ 4005 @LENGTH@ 11
---------MOV SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@result.add(queryMethodLinks) @AT@ 4017 @LENGTH@ 11
------------INS SimpleName@@queryMethodLinks @TO@ SimpleName@@MethodName:emptyList:[] @AT@ 4012 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, Resource<?>, MethodName:listSearches, RepositoryRestRequest request,  @AT@ 4034 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 4041 @LENGTH@ 6


UPD IfStatement@@if (Map.class.equals(getType())) {  Type[] arguments=type.getActualTypeArguments();  return createInfo(arguments[1]);} @TO@ if (Map.class.isAssignableFrom(getType())) {  Type[] arguments=type.getActualTypeArguments();  if (arguments.length > 1) {    return createInfo(arguments[1]);  }} @AT@ 1873 @LENGTH@ 127
---UPD MethodInvocation@@Map.class.equals(getType()) @TO@ Map.class.isAssignableFrom(getType()) @AT@ 1877 @LENGTH@ 27
------UPD SimpleName@@MethodName:equals:[getType()] @TO@ MethodName:isAssignableFrom:[getType()] @AT@ 1887 @LENGTH@ 17
---UPD Block@@ThenBody:{  Type[] arguments=type.getActualTypeArguments();  return createInfo(arguments[1]);} @TO@ ThenBody:{  Type[] arguments=type.getActualTypeArguments();  if (arguments.length > 1) {    return createInfo(arguments[1]);  }} @AT@ 1906 @LENGTH@ 94
------INS IfStatement@@if (arguments.length > 1) {  return createInfo(arguments[1]);} @TO@ Block@@ThenBody:{  Type[] arguments=type.getActualTypeArguments();  return createInfo(arguments[1]);} @AT@ 1976 @LENGTH@ 69
---------INS InfixExpression@@arguments.length > 1 @TO@ IfStatement@@if (arguments.length > 1) {  return createInfo(arguments[1]);} @AT@ 1980 @LENGTH@ 20
------------INS QualifiedName@@arguments.length @TO@ InfixExpression@@arguments.length > 1 @AT@ 1980 @LENGTH@ 16
---------------INS SimpleName@@arguments @TO@ QualifiedName@@arguments.length @AT@ 1980 @LENGTH@ 9
---------------INS SimpleName@@length @TO@ QualifiedName@@arguments.length @AT@ 1990 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@arguments.length > 1 @AT@ 1996 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@arguments.length > 1 @AT@ 1999 @LENGTH@ 1
---------INS Block@@ThenBody:{  return createInfo(arguments[1]);} @TO@ IfStatement@@if (arguments.length > 1) {  return createInfo(arguments[1]);} @AT@ 2002 @LENGTH@ 43
------------MOV ReturnStatement@@MethodInvocation:createInfo(arguments[1]) @TO@ Block@@ThenBody:{  return createInfo(arguments[1]);} @AT@ 1964 @LENGTH@ 32


UPD VariableDeclarationStatement@@HttpContext secure=new SecureHttpContext(base,realm,role); @TO@ HttpContext secure=new GitSecureHttpContext(base,realm,role); @AT@ 6474 @LENGTH@ 62
---UPD VariableDeclarationFragment@@secure=new SecureHttpContext(base,realm,role) @TO@ secure=new GitSecureHttpContext(base,realm,role) @AT@ 6486 @LENGTH@ 49
------UPD ClassInstanceCreation@@SecureHttpContext[base, realm, role] @TO@ GitSecureHttpContext[base, realm, role] @AT@ 6495 @LENGTH@ 40
---------UPD SimpleType@@SecureHttpContext @TO@ GitSecureHttpContext @AT@ 6499 @LENGTH@ 17


INS MethodDeclaration@@List<User>, MethodName:findByAttributesIn, Set<String> attributes,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 9103 @LENGTH@ 43
---INS ParameterizedType@@List<User> @TO@ MethodDeclaration@@List<User>, MethodName:findByAttributesIn, Set<String> attributes,  @AT@ 9092 @LENGTH@ 10
------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 9092 @LENGTH@ 4
------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 9097 @LENGTH@ 4
---INS SimpleName@@MethodName:findByAttributesIn @TO@ MethodDeclaration@@List<User>, MethodName:findByAttributesIn, Set<String> attributes,  @AT@ 9103 @LENGTH@ 18
---INS SingleVariableDeclaration@@Set<String> attributes @TO@ MethodDeclaration@@List<User>, MethodName:findByAttributesIn, Set<String> attributes,  @AT@ 9122 @LENGTH@ 22
------INS ParameterizedType@@Set<String> @TO@ SingleVariableDeclaration@@Set<String> attributes @AT@ 9122 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 9122 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 9126 @LENGTH@ 6
------INS SimpleName@@attributes @TO@ SingleVariableDeclaration@@Set<String> attributes @AT@ 9134 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:resourceName=((Class<?>)resource).getName().replace(".",File.separator) + ".class" @TO@ Assignment:resourceName=((Class<?>)resource).getName().replace(".","/") + ".class" @AT@ 1924 @LENGTH@ 87
---UPD Assignment@@resourceName=((Class<?>)resource).getName().replace(".",File.separator) + ".class" @TO@ resourceName=((Class<?>)resource).getName().replace(".","/") + ".class" @AT@ 1924 @LENGTH@ 86
------UPD InfixExpression@@((Class<?>)resource).getName().replace(".",File.separator) + ".class" @TO@ ((Class<?>)resource).getName().replace(".","/") + ".class" @AT@ 1939 @LENGTH@ 71
---------UPD MethodInvocation@@((Class<?>)resource).getName().replace(".",File.separator) @TO@ ((Class<?>)resource).getName().replace(".","/") @AT@ 1939 @LENGTH@ 60
------------UPD SimpleName@@MethodName:replace:[".", File.separator] @TO@ MethodName:replace:[".", "/"] @AT@ 1971 @LENGTH@ 28
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:replace:[".", File.separator] @AT@ 1963 @LENGTH@ 3
---------------DEL QualifiedName@@File.separator @AT@ 1984 @LENGTH@ 14
------------------DEL SimpleName@@File @AT@ 1984 @LENGTH@ 4
------------------DEL SimpleName@@separator @AT@ 1989 @LENGTH@ 9


INS IfStatement@@if (ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint())) {  LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint());  getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint());} @TO@ MethodDeclaration@@public, void, MethodName:doStart, Exception,  @AT@ 3598 @LENGTH@ 256
---INS MethodInvocation@@ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint()) @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint())) {  LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint());  getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint());} @AT@ 3602 @LENGTH@ 61
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint()) @AT@ 3602 @LENGTH@ 12
------INS SimpleName@@MethodName:isNotEmpty:[configuration.getAmazonSNSEndpoint()] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint()) @AT@ 3615 @LENGTH@ 48
---------INS MethodInvocation@@configuration.getAmazonSNSEndpoint() @TO@ SimpleName@@MethodName:isNotEmpty:[configuration.getAmazonSNSEndpoint()] @AT@ 3626 @LENGTH@ 36
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getAmazonSNSEndpoint() @AT@ 3626 @LENGTH@ 13
------------INS SimpleName@@MethodName:getAmazonSNSEndpoint:[] @TO@ MethodInvocation@@configuration.getAmazonSNSEndpoint() @AT@ 3640 @LENGTH@ 22
---INS Block@@ThenBody:{  LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint());  getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint());} @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint())) {  LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint());  getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint());} @AT@ 3665 @LENGTH@ 189
------INS ExpressionStatement@@MethodInvocation:LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint()) @TO@ Block@@ThenBody:{  LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint());  getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint());} @AT@ 3679 @LENGTH@ 87
---------INS MethodInvocation@@LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint()) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint()) @AT@ 3679 @LENGTH@ 86
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint()) @AT@ 3679 @LENGTH@ 3
------------INS SimpleName@@MethodName:trace:["Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint()] @TO@ MethodInvocation@@LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint()) @AT@ 3683 @LENGTH@ 82
---------------INS InfixExpression@@"Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint() @TO@ SimpleName@@MethodName:trace:["Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint()] @AT@ 3689 @LENGTH@ 75
------------------INS StringLiteral@@"Updating the SNS region with : {} " @TO@ InfixExpression@@"Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint() @AT@ 3689 @LENGTH@ 36
------------------INS Operator@@+ @TO@ InfixExpression@@"Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint() @AT@ 3725 @LENGTH@ 1
------------------INS MethodInvocation@@configuration.getAmazonSNSEndpoint() @TO@ InfixExpression@@"Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint() @AT@ 3728 @LENGTH@ 36
---------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getAmazonSNSEndpoint() @AT@ 3728 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getAmazonSNSEndpoint:[] @TO@ MethodInvocation@@configuration.getAmazonSNSEndpoint() @AT@ 3742 @LENGTH@ 22
------INS ExpressionStatement@@MethodInvocation:getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()) @TO@ Block@@ThenBody:{  LOG.trace("Updating the SNS region with : {} " + configuration.getAmazonSNSEndpoint());  getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint());} @AT@ 3779 @LENGTH@ 65
---------INS MethodInvocation@@getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()) @TO@ ExpressionStatement@@MethodInvocation:getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()) @AT@ 3779 @LENGTH@ 64
------------INS MethodInvocation@@MethodName:getSNSClient:[] @TO@ MethodInvocation@@getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()) @AT@ 3779 @LENGTH@ 14
------------INS SimpleName@@MethodName:setEndpoint:[configuration.getAmazonSNSEndpoint()] @TO@ MethodInvocation@@getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()) @AT@ 3794 @LENGTH@ 49
---------------INS MethodInvocation@@configuration.getAmazonSNSEndpoint() @TO@ SimpleName@@MethodName:setEndpoint:[configuration.getAmazonSNSEndpoint()] @AT@ 3806 @LENGTH@ 36
------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getAmazonSNSEndpoint() @AT@ 3806 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getAmazonSNSEndpoint:[] @TO@ MethodInvocation@@configuration.getAmazonSNSEndpoint() @AT@ 3820 @LENGTH@ 22


INS MethodDeclaration@@public, String, MethodName:toKryo,  @TO@ TypeDeclaration@@[public]SearchArgument,  @AT@ 4610 @LENGTH@ 23
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toKryo,  @AT@ 4610 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toKryo,  @AT@ 4617 @LENGTH@ 6
---INS SimpleName@@MethodName:toKryo @TO@ MethodDeclaration@@public, String, MethodName:toKryo,  @AT@ 4624 @LENGTH@ 6


UPD TypeDeclaration@@[public]OneSelectionTrackingListDataModel, SerializableListDataModel<T>[SelectionAware<T>] @TO@ [@SuppressWarnings("serial"), public]OneSelectionTrackingListDataModel, SerializableListDataModel<T>[SelectionAware<T>] @AT@ 947 @LENGTH@ 1524
---INS SingleMemberAnnotation@@@SuppressWarnings("serial") @TO@ TypeDeclaration@@[public]OneSelectionTrackingListDataModel, SerializableListDataModel<T>[SelectionAware<T>] @AT@ 946 @LENGTH@ 27


UPD FieldDeclaration@@protected, static, final, String, [TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()] @TO@ protected, static, final, String, [TEST_DATA_DIR=org.apache.hive.hcatalog.mapreduce.HCatBaseTest.TEST_DATA_DIR] @AT@ 1640 @LENGTH@ 145
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName() @TO@ TEST_DATA_DIR=org.apache.hive.hcatalog.mapreduce.HCatBaseTest.TEST_DATA_DIR @AT@ 1670 @LENGTH@ 114
------DEL InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName() @AT@ 1686 @LENGTH@ 98
---------DEL MethodInvocation@@System.getProperty("user.dir") @AT@ 1686 @LENGTH@ 30
------------DEL SimpleName@@Name:System @AT@ 1686 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 1693 @LENGTH@ 23
---------------DEL StringLiteral@@"user.dir" @AT@ 1705 @LENGTH@ 10
---------DEL Operator@@+ @AT@ 1716 @LENGTH@ 1
---------DEL StringLiteral@@"/build/test/data/" @AT@ 1725 @LENGTH@ 19
---------DEL MethodInvocation@@HCatBaseTest.class.getCanonicalName() @AT@ 1747 @LENGTH@ 37
------------DEL TypeLiteral@@HCatBaseTest.class @AT@ 1747 @LENGTH@ 18
------------DEL SimpleName@@MethodName:getCanonicalName:[] @AT@ 1766 @LENGTH@ 18
------INS QualifiedName@@org.apache.hive.hcatalog.mapreduce.HCatBaseTest.TEST_DATA_DIR @TO@ VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName() @AT@ 1686 @LENGTH@ 61
---------INS QualifiedName@@org.apache.hive.hcatalog.mapreduce.HCatBaseTest @TO@ QualifiedName@@org.apache.hive.hcatalog.mapreduce.HCatBaseTest.TEST_DATA_DIR @AT@ 1686 @LENGTH@ 47
------------INS QualifiedName@@org.apache.hive.hcatalog.mapreduce @TO@ QualifiedName@@org.apache.hive.hcatalog.mapreduce.HCatBaseTest @AT@ 1686 @LENGTH@ 34
---------------INS QualifiedName@@org.apache.hive.hcatalog @TO@ QualifiedName@@org.apache.hive.hcatalog.mapreduce @AT@ 1686 @LENGTH@ 24
------------------INS QualifiedName@@org.apache.hive @TO@ QualifiedName@@org.apache.hive.hcatalog @AT@ 1686 @LENGTH@ 15
---------------------INS QualifiedName@@org.apache @TO@ QualifiedName@@org.apache.hive @AT@ 1686 @LENGTH@ 10
------------------------INS SimpleName@@org @TO@ QualifiedName@@org.apache @AT@ 1686 @LENGTH@ 3
------------------------INS SimpleName@@apache @TO@ QualifiedName@@org.apache @AT@ 1690 @LENGTH@ 6
---------------------INS SimpleName@@hive @TO@ QualifiedName@@org.apache.hive @AT@ 1697 @LENGTH@ 4
------------------INS SimpleName@@hcatalog @TO@ QualifiedName@@org.apache.hive.hcatalog @AT@ 1702 @LENGTH@ 8
---------------INS SimpleName@@mapreduce @TO@ QualifiedName@@org.apache.hive.hcatalog.mapreduce @AT@ 1711 @LENGTH@ 9
------------INS SimpleName@@HCatBaseTest @TO@ QualifiedName@@org.apache.hive.hcatalog.mapreduce.HCatBaseTest @AT@ 1721 @LENGTH@ 12
---------INS SimpleName@@TEST_DATA_DIR @TO@ QualifiedName@@org.apache.hive.hcatalog.mapreduce.HCatBaseTest.TEST_DATA_DIR @AT@ 1734 @LENGTH@ 13


UPD VariableDeclarationStatement@@List<Field> declaredAccessableFields=AccessController.doPrivileged(new PrivilegedAction<List<Field>>(){
  @Override public List<Field> run(){
    List<Field> foundFields=new ArrayList<Field>();
    Class<?> nextSource=source;
    while (nextSource != Object.class) {
      for (      Field field : nextSource.getDeclaredFields()) {
        if (field.isAnnotationPresent(annotationClass)) {
          if (!field.isAccessible()) {
            field.setAccessible(true);
          }
          foundFields.add(field);
        }
      }
      nextSource=nextSource.getSuperclass();
    }
    return foundFields;
  }
}
); @TO@ List<Field> declaredAccessibleFields=AccessController.doPrivileged(new PrivilegedAction<List<Field>>(){
  @Override public List<Field> run(){
    List<Field> foundFields=new ArrayList<Field>();
    Class<?> nextSource=source;
    while (nextSource != Object.class) {
      for (      Field field : nextSource.getDeclaredFields()) {
        if (field.isAnnotationPresent(annotationClass)) {
          if (!field.isAccessible()) {
            field.setAccessible(true);
          }
          foundFields.add(field);
        }
      }
      nextSource=nextSource.getSuperclass();
    }
    return foundFields;
  }
}
); @AT@ 1470 @LENGTH@ 866
---UPD VariableDeclarationFragment@@declaredAccessableFields=AccessController.doPrivileged(new PrivilegedAction<List<Field>>(){
  @Override public List<Field> run(){
    List<Field> foundFields=new ArrayList<Field>();
    Class<?> nextSource=source;
    while (nextSource != Object.class) {
      for (      Field field : nextSource.getDeclaredFields()) {
        if (field.isAnnotationPresent(annotationClass)) {
          if (!field.isAccessible()) {
            field.setAccessible(true);
          }
          foundFields.add(field);
        }
      }
      nextSource=nextSource.getSuperclass();
    }
    return foundFields;
  }
}
) @TO@ declaredAccessibleFields=AccessController.doPrivileged(new PrivilegedAction<List<Field>>(){
  @Override public List<Field> run(){
    List<Field> foundFields=new ArrayList<Field>();
    Class<?> nextSource=source;
    while (nextSource != Object.class) {
      for (      Field field : nextSource.getDeclaredFields()) {
        if (field.isAnnotationPresent(annotationClass)) {
          if (!field.isAccessible()) {
            field.setAccessible(true);
          }
          foundFields.add(field);
        }
      }
      nextSource=nextSource.getSuperclass();
    }
    return foundFields;
  }
}
) @AT@ 1482 @LENGTH@ 853
------UPD SimpleName@@declaredAccessableFields @TO@ declaredAccessibleFields @AT@ 1482 @LENGTH@ 24


INS MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @TO@ TypeDeclaration@@[public, final]OAuth2ResourceServerConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 3763 @LENGTH@ 245
---INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @AT@ 3763 @LENGTH@ 6
---INS SimpleType@@OAuth2ResourceServerConfigurer @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @AT@ 3770 @LENGTH@ 30
---INS SimpleName@@MethodName:tokenServices @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @AT@ 3801 @LENGTH@ 13
---INS SingleVariableDeclaration@@ResourceServerTokenServices tokenServices @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @AT@ 3815 @LENGTH@ 41
------INS SimpleType@@ResourceServerTokenServices @TO@ SingleVariableDeclaration@@ResourceServerTokenServices tokenServices @AT@ 3815 @LENGTH@ 27
------INS SimpleName@@tokenServices @TO@ SingleVariableDeclaration@@ResourceServerTokenServices tokenServices @AT@ 3843 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:Assert.state(tokenServices != null,"ResourceServerTokenServices cannot be null") @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @AT@ 3862 @LENGTH@ 82
------INS MethodInvocation@@Assert.state(tokenServices != null,"ResourceServerTokenServices cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(tokenServices != null,"ResourceServerTokenServices cannot be null") @AT@ 3862 @LENGTH@ 81
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(tokenServices != null,"ResourceServerTokenServices cannot be null") @AT@ 3862 @LENGTH@ 6
---------INS SimpleName@@MethodName:state:[tokenServices != null, "ResourceServerTokenServices cannot be null"] @TO@ MethodInvocation@@Assert.state(tokenServices != null,"ResourceServerTokenServices cannot be null") @AT@ 3869 @LENGTH@ 74
------------INS InfixExpression@@tokenServices != null @TO@ SimpleName@@MethodName:state:[tokenServices != null, "ResourceServerTokenServices cannot be null"] @AT@ 3875 @LENGTH@ 21
---------------INS SimpleName@@tokenServices @TO@ InfixExpression@@tokenServices != null @AT@ 3875 @LENGTH@ 13
---------------INS Operator@@!= @TO@ InfixExpression@@tokenServices != null @AT@ 3888 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@tokenServices != null @AT@ 3892 @LENGTH@ 4
------------INS StringLiteral@@"ResourceServerTokenServices cannot be null" @TO@ SimpleName@@MethodName:state:[tokenServices != null, "ResourceServerTokenServices cannot be null"] @AT@ 3898 @LENGTH@ 44
---INS ExpressionStatement@@Assignment:this.resourceTokenServices=tokenServices @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @AT@ 3947 @LENGTH@ 43
------INS Assignment@@this.resourceTokenServices=tokenServices @TO@ ExpressionStatement@@Assignment:this.resourceTokenServices=tokenServices @AT@ 3947 @LENGTH@ 42
---------INS FieldAccess@@this.resourceTokenServices @TO@ Assignment@@this.resourceTokenServices=tokenServices @AT@ 3947 @LENGTH@ 26
------------INS ThisExpression@@this @TO@ FieldAccess@@this.resourceTokenServices @AT@ 3947 @LENGTH@ 4
------------INS SimpleName@@resourceTokenServices @TO@ FieldAccess@@this.resourceTokenServices @AT@ 3952 @LENGTH@ 21
---------INS Operator@@= @TO@ Assignment@@this.resourceTokenServices=tokenServices @AT@ 3973 @LENGTH@ 1
---------INS SimpleName@@tokenServices @TO@ Assignment@@this.resourceTokenServices=tokenServices @AT@ 3976 @LENGTH@ 13
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, OAuth2ResourceServerConfigurer, MethodName:tokenServices, ResourceServerTokenServices tokenServices,  @AT@ 3993 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4000 @LENGTH@ 4


INS IfStatement@@if (!bindings.contains(binding)) {  bindings.add(binding);} @TO@ MethodDeclaration@@private, static, void, MethodName:checkAndRegister, ParameterBinding binding, List<ParameterBinding> bindings,  @AT@ 6716 @LENGTH@ 66
---INS PrefixExpression@@!bindings.contains(binding) @TO@ IfStatement@@if (!bindings.contains(binding)) {  bindings.add(binding);} @AT@ 6720 @LENGTH@ 27
------INS Operator@@! @TO@ PrefixExpression@@!bindings.contains(binding) @AT@ 6720 @LENGTH@ 1
------INS MethodInvocation@@bindings.contains(binding) @TO@ PrefixExpression@@!bindings.contains(binding) @AT@ 6721 @LENGTH@ 26
---------INS SimpleName@@Name:bindings @TO@ MethodInvocation@@bindings.contains(binding) @AT@ 6721 @LENGTH@ 8
---------INS SimpleName@@MethodName:contains:[binding] @TO@ MethodInvocation@@bindings.contains(binding) @AT@ 6730 @LENGTH@ 17
------------INS SimpleName@@binding @TO@ SimpleName@@MethodName:contains:[binding] @AT@ 6739 @LENGTH@ 7
---INS Block@@ThenBody:{  bindings.add(binding);} @TO@ IfStatement@@if (!bindings.contains(binding)) {  bindings.add(binding);} @AT@ 6749 @LENGTH@ 33
------MOV ExpressionStatement@@MethodInvocation:bindings.add(binding) @TO@ Block@@ThenBody:{  bindings.add(binding);} @AT@ 6738 @LENGTH@ 22


UPD ExpressionStatement@@Assignment:sharedKey=tokens[3].getBytes(CHARSET) @TO@ Assignment:sharedKey=tokens[3].getBytes(StandardCharsets.UTF_8) @AT@ 2570 @LENGTH@ 40
---UPD Assignment@@sharedKey=tokens[3].getBytes(CHARSET) @TO@ sharedKey=tokens[3].getBytes(StandardCharsets.UTF_8) @AT@ 2570 @LENGTH@ 39
------UPD MethodInvocation@@tokens[3].getBytes(CHARSET) @TO@ tokens[3].getBytes(StandardCharsets.UTF_8) @AT@ 2582 @LENGTH@ 27
---------UPD SimpleName@@MethodName:getBytes:[CHARSET] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 2592 @LENGTH@ 17
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[CHARSET] @AT@ 2541 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2541 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2558 @LENGTH@ 5
------------DEL SimpleName@@CHARSET @AT@ 2601 @LENGTH@ 7


INS MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @TO@ TypeDeclaration@@[@SuppressWarnings("unused"), public, abstract]DataSourceAdapter, [DataSource] @AT@ 2307 @LENGTH@ 159
---INS Modifier@@public @TO@ MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @AT@ 2307 @LENGTH@ 6
---INS SimpleType@@Logger @TO@ MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @AT@ 2314 @LENGTH@ 6
---INS SimpleName@@MethodName:getParentLogger @TO@ MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @AT@ 2321 @LENGTH@ 15
---INS SimpleType@@SQLFeatureNotSupportedException @TO@ MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @AT@ 2346 @LENGTH@ 31
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException(UNSUPPORTED_OPERATION_EXCEPTION_MESSAGE) @TO@ MethodDeclaration@@public, Logger, MethodName:getParentLogger, SQLFeatureNotSupportedException,  @AT@ 2382 @LENGTH@ 81
------INS ClassInstanceCreation@@UnsupportedOperationException[UNSUPPORTED_OPERATION_EXCEPTION_MESSAGE] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException(UNSUPPORTED_OPERATION_EXCEPTION_MESSAGE) @AT@ 2388 @LENGTH@ 74
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException[UNSUPPORTED_OPERATION_EXCEPTION_MESSAGE] @AT@ 2388 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException[UNSUPPORTED_OPERATION_EXCEPTION_MESSAGE] @AT@ 2392 @LENGTH@ 29
---------INS SimpleName@@UNSUPPORTED_OPERATION_EXCEPTION_MESSAGE @TO@ ClassInstanceCreation@@UnsupportedOperationException[UNSUPPORTED_OPERATION_EXCEPTION_MESSAGE] @AT@ 2422 @LENGTH@ 39


UPD MethodDeclaration@@public, void, MethodName:initTestCase,  @TO@ public, void, MethodName:doPostSetup,  @AT@ 3095 @LENGTH@ 690
---UPD SimpleName@@MethodName:initTestCase @TO@ MethodName:doPostSetup @AT@ 3107 @LENGTH@ 12


DEL IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3323 @LENGTH@ 222
---DEL MethodInvocation@@MethodName:isJava16:[] @AT@ 3327 @LENGTH@ 10
---DEL Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @AT@ 3339 @LENGTH@ 93
------DEL ExpressionStatement@@MethodInvocation:assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType()) @AT@ 3353 @LENGTH@ 69
---------DEL MethodInvocation@@assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType()) @AT@ 3353 @LENGTH@ 68
------------DEL SimpleName@@MethodName:assertEquals:["image/jpeg; name=logo.jpeg", handler.getContentType()] @AT@ 3353 @LENGTH@ 68
---------------DEL StringLiteral@@"image/jpeg; name=logo.jpeg" @AT@ 3366 @LENGTH@ 28
---------------DEL MethodInvocation@@handler.getContentType() @AT@ 3396 @LENGTH@ 24
------------------DEL SimpleName@@Name:handler @AT@ 3396 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getContentType:[] @AT@ 3404 @LENGTH@ 16
---DEL Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3438 @LENGTH@ 107
------DEL ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3452 @LENGTH@ 83
---------DEL MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3452 @LENGTH@ 82
------------DEL SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3452 @LENGTH@ 82
---------------DEL StringLiteral@@"application/octet-stream; name=logo.jpeg" @AT@ 3465 @LENGTH@ 42
---------------DEL MethodInvocation@@handler.getContentType() @AT@ 3509 @LENGTH@ 24
------------------DEL SimpleName@@Name:handler @AT@ 3509 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getContentType:[] @AT@ 3517 @LENGTH@ 16


UPD ReturnStatement@@ClassInstanceCreation:new ResourceMappings(config,repositories,getDefaultedRelProvider()) @TO@ ClassInstanceCreation:new ResourceMappings(config,repositories) @AT@ 16225 @LENGTH@ 77
---UPD ClassInstanceCreation@@ResourceMappings[config, repositories, getDefaultedRelProvider()] @TO@ ResourceMappings[config, repositories] @AT@ 16232 @LENGTH@ 69
------DEL MethodInvocation@@MethodName:getDefaultedRelProvider:[] @AT@ 16275 @LENGTH@ 25


UPD ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ Assignment:uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 6240 @LENGTH@ 45
---UPD Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 6240 @LENGTH@ 44
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 6246 @LENGTH@ 38
---------UPD SimpleName@@MethodName:encode:[uri] @TO@ MethodName:encodeHttpURI:[uri] @AT@ 6273 @LENGTH@ 11


UPD VariableDeclarationStatement@@HierarchicalConfiguration defConfig=createDefinitionConfig("properties",params); @TO@ BaseHierarchicalConfiguration defConfig=createDefinitionConfig("properties",params); @AT@ 2445 @LENGTH@ 99
---UPD SimpleType@@HierarchicalConfiguration @TO@ BaseHierarchicalConfiguration @AT@ 2445 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:futureResult.asyncCancel(false) @TO@ MethodInvocation:futureResult.asyncCancel(true) @AT@ 11109 @LENGTH@ 32
---UPD MethodInvocation@@futureResult.asyncCancel(false) @TO@ futureResult.asyncCancel(true) @AT@ 11109 @LENGTH@ 31
------UPD SimpleName@@MethodName:asyncCancel:[false] @TO@ MethodName:asyncCancel:[true] @AT@ 11122 @LENGTH@ 18
---------UPD BooleanLiteral@@false @TO@ true @AT@ 11134 @LENGTH@ 5


INS FieldDeclaration@@ApplicationContext, [context] @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]MongoRepositoriesRegistrarIntegrationTests,  @AT@ 1993 @LENGTH@ 27
---INS SimpleType@@ApplicationContext @TO@ FieldDeclaration@@ApplicationContext, [context] @AT@ 1993 @LENGTH@ 18
---INS VariableDeclarationFragment@@context @TO@ FieldDeclaration@@ApplicationContext, [context] @AT@ 2012 @LENGTH@ 7
------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context @AT@ 2012 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:sb.append(prefix).append("  <routeId>").append(routeId).append("</routeId>\n") @TO@ MethodInvocation:sb.append(prefix).append("  <routeId>").append(routeId != null ? routeId : "").append("</routeId>\n") @AT@ 3108 @LENGTH@ 79
---UPD MethodInvocation@@sb.append(prefix).append("  <routeId>").append(routeId).append("</routeId>\n") @TO@ sb.append(prefix).append("  <routeId>").append(routeId != null ? routeId : "").append("</routeId>\n") @AT@ 3108 @LENGTH@ 78
------UPD MethodInvocation@@MethodName:append:[routeId] @TO@ MethodName:append:[routeId != null ? routeId : ""] @AT@ 3108 @LENGTH@ 55
---------DEL SimpleName@@routeId @AT@ 3155 @LENGTH@ 7
---------INS ConditionalExpression@@routeId != null ? routeId : "" @TO@ MethodInvocation@@MethodName:append:[routeId] @AT@ 3234 @LENGTH@ 30
------------INS InfixExpression@@routeId != null @TO@ ConditionalExpression@@routeId != null ? routeId : "" @AT@ 3234 @LENGTH@ 15
---------------INS SimpleName@@routeId @TO@ InfixExpression@@routeId != null @AT@ 3234 @LENGTH@ 7
---------------INS Operator@@!= @TO@ InfixExpression@@routeId != null @AT@ 3241 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@routeId != null @AT@ 3245 @LENGTH@ 4
------------INS SimpleName@@routeId @TO@ ConditionalExpression@@routeId != null ? routeId : "" @AT@ 3252 @LENGTH@ 7
------------INS StringLiteral@@"" @TO@ ConditionalExpression@@routeId != null ? routeId : "" @AT@ 3262 @LENGTH@ 2


MOV FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @TO@ TypeDeclaration@@[public, abstract]WsProducerTestBase, Assert @AT@ 1869 @LENGTH@ 60


UPD MethodDeclaration@@public, static, void, MethodName:appendReadColumnID, Configuration conf, List<Integer> ids,  @TO@ public, static, void, MethodName:appendReadColumnIDs, Configuration conf, List<Integer> ids,  @AT@ 2094 @LENGTH@ 116
---UPD SimpleName@@MethodName:appendReadColumnID @TO@ MethodName:appendReadColumnIDs @AT@ 2113 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>") @TO@ MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>") @AT@ 6773 @LENGTH@ 341
---UPD MethodInvocation@@template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>") @TO@ template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>") @AT@ 6773 @LENGTH@ 340
------UPD SimpleName@@MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>"] @TO@ MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>"] @AT@ 6782 @LENGTH@ 331
---------UPD StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>" @TO@ "<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>" @AT@ 6819 @LENGTH@ 293


UPD MethodDeclaration@@protected, OAuth2AccessToken, MethodName:retrieveToken, MultiValueMap<String,String> form, HttpHeaders headers, OAuth2ProtectedResourceDetails resource,  @TO@ protected, OAuth2AccessToken, MethodName:retrieveToken, AccessTokenRequest request, OAuth2ProtectedResourceDetails resource, MultiValueMap<String,String> form, HttpHeaders headers,  @AT@ 1851 @LENGTH@ 220
---MOV SingleVariableDeclaration@@MultiValueMap<String,String> form @TO@ MethodDeclaration@@protected, OAuth2AccessToken, MethodName:retrieveToken, MultiValueMap<String,String> form, HttpHeaders headers, OAuth2ProtectedResourceDetails resource,  @AT@ 1893 @LENGTH@ 34
---UPD SingleVariableDeclaration@@HttpHeaders headers @TO@ AccessTokenRequest request @AT@ 1929 @LENGTH@ 19
------UPD SimpleType@@HttpHeaders @TO@ AccessTokenRequest @AT@ 1929 @LENGTH@ 11
------UPD SimpleName@@headers @TO@ request @AT@ 1941 @LENGTH@ 7
---INS SingleVariableDeclaration@@HttpHeaders headers @TO@ MethodDeclaration@@protected, OAuth2AccessToken, MethodName:retrieveToken, MultiValueMap<String,String> form, HttpHeaders headers, OAuth2ProtectedResourceDetails resource,  @AT@ 2002 @LENGTH@ 19
------INS SimpleType@@HttpHeaders @TO@ SingleVariableDeclaration@@HttpHeaders headers @AT@ 2002 @LENGTH@ 11
------INS SimpleName@@headers @TO@ SingleVariableDeclaration@@HttpHeaders headers @AT@ 2014 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),"utf-8")) @TO@ Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8)) @AT@ 8988 @LENGTH@ 87
---UPD Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),"utf-8")) @TO@ reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8)) @AT@ 8988 @LENGTH@ 86
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(file),"utf-8")] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8)] @AT@ 8997 @LENGTH@ 77
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(file), "utf-8"] @TO@ InputStreamReader[new FileInputStream(file), StandardCharsets.UTF_8] @AT@ 9016 @LENGTH@ 57
------------DEL StringLiteral@@"utf-8" @AT@ 9065 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(file), "utf-8"] @AT@ 9107 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 9107 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 9124 @LENGTH@ 5


INS MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @TO@ TypeDeclaration@@[public]ProfileOverlayImpl, [Profile] @AT@ 10242 @LENGTH@ 139
---INS Modifier@@public @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 10242 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 10249 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 10249 @LENGTH@ 4
---INS SimpleName@@MethodName:getFileConfiguration @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 10256 @LENGTH@ 20
---INS SingleVariableDeclaration@@String fileName @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 10277 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String fileName @AT@ 10277 @LENGTH@ 6
------INS SimpleName@@fileName @TO@ SingleVariableDeclaration@@String fileName @AT@ 10284 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:Profiles.getFileConfiguration(getInheritedProfiles(),fileName) @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 10304 @LENGTH@ 71
------INS MethodInvocation@@Profiles.getFileConfiguration(getInheritedProfiles(),fileName) @TO@ ReturnStatement@@MethodInvocation:Profiles.getFileConfiguration(getInheritedProfiles(),fileName) @AT@ 10311 @LENGTH@ 63
---------INS SimpleName@@Name:Profiles @TO@ MethodInvocation@@Profiles.getFileConfiguration(getInheritedProfiles(),fileName) @AT@ 10311 @LENGTH@ 8
---------INS SimpleName@@MethodName:getFileConfiguration:[getInheritedProfiles(), fileName] @TO@ MethodInvocation@@Profiles.getFileConfiguration(getInheritedProfiles(),fileName) @AT@ 10320 @LENGTH@ 54
------------INS MethodInvocation@@MethodName:getInheritedProfiles:[] @TO@ SimpleName@@MethodName:getFileConfiguration:[getInheritedProfiles(), fileName] @AT@ 10341 @LENGTH@ 22
------------INS SimpleName@@fileName @TO@ SimpleName@@MethodName:getFileConfiguration:[getInheritedProfiles(), fileName] @AT@ 10365 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:context.close() @TO@ MethodDeclaration@@public, void, MethodName:testWithinJob, Exception,  @AT@ 7396 @LENGTH@ 16
---INS MethodInvocation@@context.close() @TO@ ExpressionStatement@@MethodInvocation:context.close() @AT@ 7396 @LENGTH@ 15
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.close() @AT@ 7396 @LENGTH@ 7
------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@context.close() @AT@ 7404 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2941 @LENGTH@ 109
---UPD Assignment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2941 @LENGTH@ 108
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 2946 @LENGTH@ 103
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 2965 @LENGTH@ 83
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3023 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 3023 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3031 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 3039 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @AT@ 3031 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3031 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3048 @LENGTH@ 5


UPD FieldDeclaration@@private, int, [port] @TO@ private, int, [port=-1] @AT@ 1492 @LENGTH@ 17
---UPD VariableDeclarationFragment@@port @TO@ port=-1 @AT@ 1504 @LENGTH@ 4
------INS PrefixExpression@@-1 @TO@ VariableDeclarationFragment@@port @AT@ 1572 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1572 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1573 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @TO@ TypeDeclaration@@[public]TestCombinedConfiguration,  @AT@ 16360 @LENGTH@ 351
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @AT@ 16360 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @AT@ 16367 @LENGTH@ 4
---INS SimpleName@@MethodName:testClearRemoveChildListener @TO@ MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @AT@ 16372 @LENGTH@ 28
---INS VariableDeclarationStatement@@AbstractConfiguration child=setUpTestConfiguration(); @TO@ MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @AT@ 16417 @LENGTH@ 55
------INS SimpleType@@AbstractConfiguration @TO@ VariableDeclarationStatement@@AbstractConfiguration child=setUpTestConfiguration(); @AT@ 16417 @LENGTH@ 21
------INS VariableDeclarationFragment@@child=setUpTestConfiguration() @TO@ VariableDeclarationStatement@@AbstractConfiguration child=setUpTestConfiguration(); @AT@ 16439 @LENGTH@ 32
---------INS SimpleName@@child @TO@ VariableDeclarationFragment@@child=setUpTestConfiguration() @AT@ 16439 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:setUpTestConfiguration:[] @TO@ VariableDeclarationFragment@@child=setUpTestConfiguration() @AT@ 16447 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:config.addConfiguration(child) @TO@ MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @AT@ 16481 @LENGTH@ 31
------INS MethodInvocation@@config.addConfiguration(child) @TO@ ExpressionStatement@@MethodInvocation:config.addConfiguration(child) @AT@ 16481 @LENGTH@ 30
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.addConfiguration(child) @AT@ 16481 @LENGTH@ 6
---------INS SimpleName@@MethodName:addConfiguration:[child] @TO@ MethodInvocation@@config.addConfiguration(child) @AT@ 16488 @LENGTH@ 23
------------INS SimpleName@@child @TO@ SimpleName@@MethodName:addConfiguration:[child] @AT@ 16505 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:config.clear() @TO@ MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @AT@ 16522 @LENGTH@ 15
------INS MethodInvocation@@config.clear() @TO@ ExpressionStatement@@MethodInvocation:config.clear() @AT@ 16522 @LENGTH@ 14
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.clear() @AT@ 16522 @LENGTH@ 6
---------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@config.clear() @AT@ 16529 @LENGTH@ 7
---INS EnhancedForStatement@@for (ConfigurationListener listener : child.getConfigurationListeners()) {  assertNotEquals("Still registered",config,listener);} @TO@ MethodDeclaration@@public, void, MethodName:testClearRemoveChildListener,  @AT@ 16546 @LENGTH@ 159
------INS SingleVariableDeclaration@@ConfigurationListener listener @TO@ EnhancedForStatement@@for (ConfigurationListener listener : child.getConfigurationListeners()) {  assertNotEquals("Still registered",config,listener);} @AT@ 16551 @LENGTH@ 30
---------INS SimpleType@@ConfigurationListener @TO@ SingleVariableDeclaration@@ConfigurationListener listener @AT@ 16551 @LENGTH@ 21
---------INS SimpleName@@listener @TO@ SingleVariableDeclaration@@ConfigurationListener listener @AT@ 16573 @LENGTH@ 8
------INS MethodInvocation@@child.getConfigurationListeners() @TO@ EnhancedForStatement@@for (ConfigurationListener listener : child.getConfigurationListeners()) {  assertNotEquals("Still registered",config,listener);} @AT@ 16584 @LENGTH@ 33
---------INS SimpleName@@Name:child @TO@ MethodInvocation@@child.getConfigurationListeners() @AT@ 16584 @LENGTH@ 5
---------INS SimpleName@@MethodName:getConfigurationListeners:[] @TO@ MethodInvocation@@child.getConfigurationListeners() @AT@ 16590 @LENGTH@ 27
------INS ExpressionStatement@@MethodInvocation:assertNotEquals("Still registered",config,listener) @TO@ EnhancedForStatement@@for (ConfigurationListener listener : child.getConfigurationListeners()) {  assertNotEquals("Still registered",config,listener);} @AT@ 16641 @LENGTH@ 54
---------INS MethodInvocation@@assertNotEquals("Still registered",config,listener) @TO@ ExpressionStatement@@MethodInvocation:assertNotEquals("Still registered",config,listener) @AT@ 16641 @LENGTH@ 53
------------INS SimpleName@@MethodName:assertNotEquals:["Still registered", config, listener] @TO@ MethodInvocation@@assertNotEquals("Still registered",config,listener) @AT@ 16641 @LENGTH@ 53
---------------INS StringLiteral@@"Still registered" @TO@ SimpleName@@MethodName:assertNotEquals:["Still registered", config, listener] @AT@ 16657 @LENGTH@ 18
---------------INS SimpleName@@config @TO@ SimpleName@@MethodName:assertNotEquals:["Still registered", config, listener] @AT@ 16677 @LENGTH@ 6
---------------INS SimpleName@@listener @TO@ SimpleName@@MethodName:assertNotEquals:["Still registered", config, listener] @AT@ 16685 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ Assignment:queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 8425 @LENGTH@ 61
---UPD Assignment@@queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 8425 @LENGTH@ 60
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(queryString) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 8439 @LENGTH@ 46
---------UPD SimpleName@@MethodName:encode:[queryString] @TO@ MethodName:encodeHttpURI:[queryString] @AT@ 8466 @LENGTH@ 19


UPD TryStatement@@try {  stream=exchange.getIn().getMandatoryBody(InputStream.class);  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  Object result=dataFormat.unmarshal(exchange,stream);  if (result instanceof Exchange) {    if (result != exchange) {      throw new RuntimeCamelException("The returned exchange " + result + " is not the same as "+ exchange+ " provided to the DataFormat");    }  } else   if (result instanceof Message) {    exchange.setOut((Message)result);  } else {    out.setBody(result);  }} catch (Exception e) {  exchange.setOut(null);  exchange.setException(e);} finally {  IOHelper.close(stream,"input stream");} @TO@ try {  stream=exchange.getIn().getMandatoryBody(InputStream.class);  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  result=dataFormat.unmarshal(exchange,stream);  if (result instanceof Exchange) {    if (result != exchange) {      throw new RuntimeCamelException("The returned exchange " + result + " is not the same as "+ exchange+ " provided to the DataFormat");    }  } else   if (result instanceof Message) {    exchange.setOut((Message)result);  } else {    out.setBody(result);  }} catch (Exception e) {  exchange.setOut(null);  exchange.setException(e);} finally {  if (!(result instanceof Iterator)) {    IOHelper.close(stream,"input stream");  }} @AT@ 2191 @LENGTH@ 1262
---DEL VariableDeclarationStatement@@Object result=dataFormat.unmarshal(exchange,stream); @AT@ 2487 @LENGTH@ 55
------DEL SimpleType@@Object @AT@ 2487 @LENGTH@ 6
------DEL VariableDeclarationFragment@@result=dataFormat.unmarshal(exchange,stream) @AT@ 2494 @LENGTH@ 47
---------DEL SimpleName@@result @AT@ 2494 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:result=dataFormat.unmarshal(exchange,stream) @TO@ TryStatement@@try {  stream=exchange.getIn().getMandatoryBody(InputStream.class);  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  Object result=dataFormat.unmarshal(exchange,stream);  if (result instanceof Exchange) {    if (result != exchange) {      throw new RuntimeCamelException("The returned exchange " + result + " is not the same as "+ exchange+ " provided to the DataFormat");    }  } else   if (result instanceof Message) {    exchange.setOut((Message)result);  } else {    out.setBody(result);  }} catch (Exception e) {  exchange.setOut(null);  exchange.setException(e);} finally {  IOHelper.close(stream,"input stream");} @AT@ 2544 @LENGTH@ 48
------INS Assignment@@result=dataFormat.unmarshal(exchange,stream) @TO@ ExpressionStatement@@Assignment:result=dataFormat.unmarshal(exchange,stream) @AT@ 2544 @LENGTH@ 47
---------MOV MethodInvocation@@dataFormat.unmarshal(exchange,stream) @TO@ Assignment@@result=dataFormat.unmarshal(exchange,stream) @AT@ 2503 @LENGTH@ 38
---------INS SimpleName@@result @TO@ Assignment@@result=dataFormat.unmarshal(exchange,stream) @AT@ 2544 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=dataFormat.unmarshal(exchange,stream) @AT@ 2550 @LENGTH@ 1
---UPD Block@@FinallyBody:{  IOHelper.close(stream,"input stream");} @TO@ ThenBody:{  IOHelper.close(stream,"input stream");} @AT@ 3390 @LENGTH@ 63
---INS Block@@FinallyBody:{  if (!(result instanceof Iterator)) {    IOHelper.close(stream,"input stream");  }} @TO@ TryStatement@@try {  stream=exchange.getIn().getMandatoryBody(InputStream.class);  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  Object result=dataFormat.unmarshal(exchange,stream);  if (result instanceof Exchange) {    if (result != exchange) {      throw new RuntimeCamelException("The returned exchange " + result + " is not the same as "+ exchange+ " provided to the DataFormat");    }  } else   if (result instanceof Message) {    exchange.setOut((Message)result);  } else {    out.setBody(result);  }} catch (Exception e) {  exchange.setOut(null);  exchange.setException(e);} finally {  IOHelper.close(stream,"input stream");} @AT@ 3440 @LENGTH@ 187
------INS IfStatement@@if (!(result instanceof Iterator)) {  IOHelper.close(stream,"input stream");} @TO@ Block@@FinallyBody:{  if (!(result instanceof Iterator)) {    IOHelper.close(stream,"input stream");  }} @AT@ 3511 @LENGTH@ 106
---------MOV Block@@FinallyBody:{  IOHelper.close(stream,"input stream");} @TO@ IfStatement@@if (!(result instanceof Iterator)) {  IOHelper.close(stream,"input stream");} @AT@ 3390 @LENGTH@ 63
---------INS PrefixExpression@@!(result instanceof Iterator) @TO@ IfStatement@@if (!(result instanceof Iterator)) {  IOHelper.close(stream,"input stream");} @AT@ 3515 @LENGTH@ 29
------------INS Operator@@! @TO@ PrefixExpression@@!(result instanceof Iterator) @AT@ 3515 @LENGTH@ 1
------------INS ParenthesizedExpression@@(result instanceof Iterator) @TO@ PrefixExpression@@!(result instanceof Iterator) @AT@ 3516 @LENGTH@ 28
---------------INS InstanceofExpression@@result instanceof Iterator @TO@ ParenthesizedExpression@@(result instanceof Iterator) @AT@ 3517 @LENGTH@ 26
------------------INS SimpleName@@result @TO@ InstanceofExpression@@result instanceof Iterator @AT@ 3517 @LENGTH@ 6
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@result instanceof Iterator @AT@ 3524 @LENGTH@ 10
------------------INS SimpleType@@Iterator @TO@ InstanceofExpression@@result instanceof Iterator @AT@ 3535 @LENGTH@ 8


UPD VariableDeclarationStatement@@OAuth2Exception oauthException=new UnauthorizedClientException(DETAILS); @TO@ OAuth2Exception oauthException=new UnauthorizedUserException(DETAILS); @AT@ 4013 @LENGTH@ 74
---UPD VariableDeclarationFragment@@oauthException=new UnauthorizedClientException(DETAILS) @TO@ oauthException=new UnauthorizedUserException(DETAILS) @AT@ 4029 @LENGTH@ 57
------UPD ClassInstanceCreation@@UnauthorizedClientException[DETAILS] @TO@ UnauthorizedUserException[DETAILS] @AT@ 4046 @LENGTH@ 40
---------UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 4050 @LENGTH@ 27


UPD IfStatement@@if (path == null) {  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @TO@ if (path == null) {  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @AT@ 8765 @LENGTH@ 123
---UPD Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @TO@ ThenBody:{  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @AT@ 8783 @LENGTH@ 105
------DEL ExpressionStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @AT@ 8797 @LENGTH@ 81
------INS ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @TO@ Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @AT@ 8803 @LENGTH@ 87
---------MOV MethodInvocation@@ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @AT@ 8797 @LENGTH@ 80


UPD MethodDeclaration@@SSOManager<I,D,L>, L, MethodName:createSSOManager, IdentifierFactory<String> identifierFactory, LocalContextFactory<L> localContextFactory,  @TO@ SSOManager<A,D,L>, L, MethodName:createSSOManager, IdentifierFactory<String> identifierFactory, LocalContextFactory<L> localContextFactory,  @AT@ 1323 @LENGTH@ 106
---UPD ParameterizedType@@SSOManager<I,D,L> @TO@ SSOManager<A,D,L> @AT@ 1303 @LENGTH@ 19
------UPD SimpleType@@I @TO@ A @AT@ 1314 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration({"classpath:infrastructure.xml"}), public]MetamodelIntegrationTests,  @AT@ 2374 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 2374 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 2381 @LENGTH@ 4
---INS SimpleName@@MethodName:canAccessParametersByIndexForNativeQueries @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 2386 @LENGTH@ 42
---INS VariableDeclarationStatement@@Query query=em.createNativeQuery("SELECT u from User u where u.lastname = ?1"); @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 2436 @LENGTH@ 81
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=em.createNativeQuery("SELECT u from User u where u.lastname = ?1"); @AT@ 2436 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=em.createNativeQuery("SELECT u from User u where u.lastname = ?1") @TO@ VariableDeclarationStatement@@Query query=em.createNativeQuery("SELECT u from User u where u.lastname = ?1"); @AT@ 2442 @LENGTH@ 74
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=em.createNativeQuery("SELECT u from User u where u.lastname = ?1") @AT@ 2442 @LENGTH@ 5
---------INS MethodInvocation@@em.createNativeQuery("SELECT u from User u where u.lastname = ?1") @TO@ VariableDeclarationFragment@@query=em.createNativeQuery("SELECT u from User u where u.lastname = ?1") @AT@ 2450 @LENGTH@ 66
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.createNativeQuery("SELECT u from User u where u.lastname = ?1") @AT@ 2450 @LENGTH@ 2
------------INS SimpleName@@MethodName:createNativeQuery:["SELECT u from User u where u.lastname = ?1"] @TO@ MethodInvocation@@em.createNativeQuery("SELECT u from User u where u.lastname = ?1") @AT@ 2453 @LENGTH@ 63
---------------INS StringLiteral@@"SELECT u from User u where u.lastname = ?1" @TO@ SimpleName@@MethodName:createNativeQuery:["SELECT u from User u where u.lastname = ?1"] @AT@ 2471 @LENGTH@ 44
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getParameter(1),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 2521 @LENGTH@ 54
------INS MethodInvocation@@assertThat(query.getParameter(1),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getParameter(1),is(notNullValue())) @AT@ 2521 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertThat:[query.getParameter(1), is(notNullValue())] @TO@ MethodInvocation@@assertThat(query.getParameter(1),is(notNullValue())) @AT@ 2521 @LENGTH@ 53
------------INS MethodInvocation@@query.getParameter(1) @TO@ SimpleName@@MethodName:assertThat:[query.getParameter(1), is(notNullValue())] @AT@ 2532 @LENGTH@ 21
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getParameter(1) @AT@ 2532 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getParameter:[1] @TO@ MethodInvocation@@query.getParameter(1) @AT@ 2538 @LENGTH@ 15
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:getParameter:[1] @AT@ 2551 @LENGTH@ 1
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[query.getParameter(1), is(notNullValue())] @AT@ 2555 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 2555 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 2558 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 2555 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 2558 @LENGTH@ 14


UPD VariableDeclarationStatement@@String msg=new String(data,"utf-8"); @TO@ String msg=new String(data,StandardCharsets.UTF_8); @AT@ 21489 @LENGTH@ 39
---UPD VariableDeclarationFragment@@msg=new String(data,"utf-8") @TO@ msg=new String(data,StandardCharsets.UTF_8) @AT@ 21496 @LENGTH@ 31
------UPD ClassInstanceCreation@@String[data, "utf-8"] @TO@ String[data, StandardCharsets.UTF_8] @AT@ 21502 @LENGTH@ 25
---------DEL StringLiteral@@"utf-8" @AT@ 21519 @LENGTH@ 7
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[data, "utf-8"] @AT@ 21561 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 21561 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 21578 @LENGTH@ 5


INS ReturnStatement@@ClassInstanceCreation:new DelegateZooKeeperMultiGroup<T>(path,clazz){
  @Override public void start(){
    useCurator(curator);
    groups.add(this);
    super.start();
  }
  @Override public void close() throws IOException {
    groups.remove(this);
    super.close();
  }
}
 @TO@ MethodDeclaration@@public, Group<T>, T extends NodeState, MethodName:createMultiGroup, String path, Class<T> clazz,  @AT@ 4731 @LENGTH@ 445
---INS ClassInstanceCreation@@DelegateZooKeeperMultiGroup<T>[path, clazz] @TO@ ReturnStatement@@ClassInstanceCreation:new DelegateZooKeeperMultiGroup<T>(path,clazz){
  @Override public void start(){
    useCurator(curator);
    groups.add(this);
    super.start();
  }
  @Override public void close() throws IOException {
    groups.remove(this);
    super.close();
  }
}
 @AT@ 4738 @LENGTH@ 437
------MOV New@@new @TO@ ClassInstanceCreation@@DelegateZooKeeperMultiGroup<T>[path, clazz] @AT@ 4737 @LENGTH@ 3
------INS ParameterizedType@@DelegateZooKeeperMultiGroup<T> @TO@ ClassInstanceCreation@@DelegateZooKeeperMultiGroup<T>[path, clazz] @AT@ 4742 @LENGTH@ 30
---------INS SimpleType@@DelegateZooKeeperMultiGroup @TO@ ParameterizedType@@DelegateZooKeeperMultiGroup<T> @AT@ 4742 @LENGTH@ 27
---------INS SimpleType@@T @TO@ ParameterizedType@@DelegateZooKeeperMultiGroup<T> @AT@ 4770 @LENGTH@ 1
------INS SimpleName@@path @TO@ ClassInstanceCreation@@DelegateZooKeeperMultiGroup<T>[path, clazz] @AT@ 4773 @LENGTH@ 4
------INS SimpleName@@clazz @TO@ ClassInstanceCreation@@DelegateZooKeeperMultiGroup<T>[path, clazz] @AT@ 4779 @LENGTH@ 5
------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@DelegateZooKeeperMultiGroup<T>[path, clazz] @AT@ 4786 @LENGTH@ 389
---------INS MethodDeclaration@@public, void, MethodName:start,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4830 @LENGTH@ 153
------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:start,  @AT@ 4830 @LENGTH@ 6
------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:start,  @AT@ 4837 @LENGTH@ 4
------------INS SimpleName@@MethodName:start @TO@ MethodDeclaration@@public, void, MethodName:start,  @AT@ 4842 @LENGTH@ 5
------------INS ExpressionStatement@@MethodInvocation:useCurator(curator) @TO@ MethodDeclaration@@public, void, MethodName:start,  @AT@ 4872 @LENGTH@ 20
---------------INS MethodInvocation@@useCurator(curator) @TO@ ExpressionStatement@@MethodInvocation:useCurator(curator) @AT@ 4872 @LENGTH@ 19
------------------INS SimpleName@@MethodName:useCurator:[curator] @TO@ MethodInvocation@@useCurator(curator) @AT@ 4872 @LENGTH@ 19
---------------------INS SimpleName@@curator @TO@ SimpleName@@MethodName:useCurator:[curator] @AT@ 4883 @LENGTH@ 7
------------INS ExpressionStatement@@MethodInvocation:groups.add(this) @TO@ MethodDeclaration@@public, void, MethodName:start,  @AT@ 4913 @LENGTH@ 17
---------------INS MethodInvocation@@groups.add(this) @TO@ ExpressionStatement@@MethodInvocation:groups.add(this) @AT@ 4913 @LENGTH@ 16
------------------INS SimpleName@@Name:groups @TO@ MethodInvocation@@groups.add(this) @AT@ 4913 @LENGTH@ 6
------------------INS SimpleName@@MethodName:add:[this] @TO@ MethodInvocation@@groups.add(this) @AT@ 4920 @LENGTH@ 9
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:add:[this] @AT@ 4924 @LENGTH@ 4
------------INS ExpressionStatement@@SuperMethodInvocation:super.start() @TO@ MethodDeclaration@@public, void, MethodName:start,  @AT@ 4951 @LENGTH@ 14
---------------INS SuperMethodInvocation@@super.start() @TO@ ExpressionStatement@@SuperMethodInvocation:super.start() @AT@ 4951 @LENGTH@ 13
------------------INS SimpleName@@MethodName:start:[] @TO@ SuperMethodInvocation@@super.start() @AT@ 4957 @LENGTH@ 5
---------INS MethodDeclaration@@public, void, MethodName:close, IOException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5027 @LENGTH@ 134
------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 5027 @LENGTH@ 6
------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 5034 @LENGTH@ 4
------------INS SimpleName@@MethodName:close @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 5039 @LENGTH@ 5
------------INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 5054 @LENGTH@ 11
------------INS ExpressionStatement@@MethodInvocation:groups.remove(this) @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 5088 @LENGTH@ 20
---------------INS MethodInvocation@@groups.remove(this) @TO@ ExpressionStatement@@MethodInvocation:groups.remove(this) @AT@ 5088 @LENGTH@ 19
------------------INS SimpleName@@Name:groups @TO@ MethodInvocation@@groups.remove(this) @AT@ 5088 @LENGTH@ 6
------------------INS SimpleName@@MethodName:remove:[this] @TO@ MethodInvocation@@groups.remove(this) @AT@ 5095 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:remove:[this] @AT@ 5102 @LENGTH@ 4
------------INS ExpressionStatement@@SuperMethodInvocation:super.close() @TO@ MethodDeclaration@@public, void, MethodName:close, IOException,  @AT@ 5129 @LENGTH@ 14
---------------INS SuperMethodInvocation@@super.close() @TO@ ExpressionStatement@@SuperMethodInvocation:super.close() @AT@ 5129 @LENGTH@ 13
------------------INS SimpleName@@MethodName:close:[] @TO@ SuperMethodInvocation@@super.close() @AT@ 5135 @LENGTH@ 5


DEL FieldDeclaration@@private, boolean, [stopProxy=true] @AT@ 1720 @LENGTH@ 33
---DEL Modifier@@private @AT@ 1720 @LENGTH@ 7
---DEL PrimitiveType@@boolean @AT@ 1728 @LENGTH@ 7
---DEL VariableDeclarationFragment@@stopProxy=true @AT@ 1736 @LENGTH@ 16
------DEL SimpleName@@stopProxy @AT@ 1736 @LENGTH@ 9
------DEL BooleanLiteral@@true @AT@ 1748 @LENGTH@ 4


INS MethodDeclaration@@List<IdClassExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @TO@ TypeDeclaration@@[@Lazy, public]EmployeeRepositoryWithIdClass, [JpaRepository<IdClassExampleEmployee,IdClassExampleEmployeePK>] @AT@ 1451 @LENGTH@ 58
---INS ParameterizedType@@List<IdClassExampleEmployee> @TO@ MethodDeclaration@@List<IdClassExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1422 @LENGTH@ 28
------INS SimpleType@@List @TO@ ParameterizedType@@List<IdClassExampleEmployee> @AT@ 1422 @LENGTH@ 4
------INS SimpleType@@IdClassExampleEmployee @TO@ ParameterizedType@@List<IdClassExampleEmployee> @AT@ 1427 @LENGTH@ 22
---INS SimpleName@@MethodName:findAll @TO@ MethodDeclaration@@List<IdClassExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1451 @LENGTH@ 7
---INS SingleVariableDeclaration@@Predicate predicate @TO@ MethodDeclaration@@List<IdClassExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1459 @LENGTH@ 19
------INS SimpleType@@Predicate @TO@ SingleVariableDeclaration@@Predicate predicate @AT@ 1459 @LENGTH@ 9
------INS SimpleName@@predicate @TO@ SingleVariableDeclaration@@Predicate predicate @AT@ 1469 @LENGTH@ 9
---INS SingleVariableDeclaration@@OrderSpecifier<?>... orders @TO@ MethodDeclaration@@List<IdClassExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1480 @LENGTH@ 27
------INS ParameterizedType@@OrderSpecifier<?> @TO@ SingleVariableDeclaration@@OrderSpecifier<?>... orders @AT@ 1480 @LENGTH@ 17
---------INS SimpleType@@OrderSpecifier @TO@ ParameterizedType@@OrderSpecifier<?> @AT@ 1480 @LENGTH@ 14
---------INS WildcardType@@? @TO@ ParameterizedType@@OrderSpecifier<?> @AT@ 1495 @LENGTH@ 1
------INS SimpleName@@orders @TO@ SingleVariableDeclaration@@OrderSpecifier<?>... orders @AT@ 1501 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, Charset, [UTF_8=Charset.forName("UTF-8")] @AT@ 3527 @LENGTH@ 62
---DEL Modifier@@private @AT@ 3527 @LENGTH@ 7
---DEL Modifier@@static @AT@ 3535 @LENGTH@ 6
---DEL Modifier@@final @AT@ 3542 @LENGTH@ 5
---DEL SimpleType@@Charset @AT@ 3548 @LENGTH@ 7
---DEL VariableDeclarationFragment@@UTF_8=Charset.forName("UTF-8") @AT@ 3556 @LENGTH@ 32
------DEL SimpleName@@UTF_8 @AT@ 3556 @LENGTH@ 5
------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3564 @LENGTH@ 24
---------DEL SimpleName@@Name:Charset @AT@ 3564 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3572 @LENGTH@ 16
------------DEL StringLiteral@@"UTF-8" @AT@ 3580 @LENGTH@ 7


UPD MethodDeclaration@@public, Schema, MethodName:getSchema, Class datasetClass,  @TO@ public, Schema, MethodName:getSchema, Class<?> datasetClass,  @AT@ 1872 @LENGTH@ 242
---UPD SingleVariableDeclaration@@Class datasetClass @TO@ Class<?> datasetClass @AT@ 1896 @LENGTH@ 18
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class datasetClass @AT@ 1896 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1896 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1902 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 1896 @LENGTH@ 5


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]DeleteInfo,  @TO@ [@Data, public]DeleteInfo, AbstractDockerDTO @AT@ 807 @LENGTH@ 197
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]DeleteInfo,  @AT@ 765 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 813 @LENGTH@ 47


INS IfStatement@@if (readAccessToken(token.getValue()) != null) {  removeAccessToken(token.getValue());} @TO@ MethodDeclaration@@public, void, MethodName:storeAccessToken, OAuth2AccessToken token, OAuth2Authentication authentication,  @AT@ 6200 @LENGTH@ 90
---INS InfixExpression@@readAccessToken(token.getValue()) != null @TO@ IfStatement@@if (readAccessToken(token.getValue()) != null) {  removeAccessToken(token.getValue());} @AT@ 6204 @LENGTH@ 39
------INS MethodInvocation@@readAccessToken(token.getValue()) @TO@ InfixExpression@@readAccessToken(token.getValue()) != null @AT@ 6204 @LENGTH@ 33
---------INS SimpleName@@MethodName:readAccessToken:[token.getValue()] @TO@ MethodInvocation@@readAccessToken(token.getValue()) @AT@ 6204 @LENGTH@ 33
------------INS MethodInvocation@@token.getValue() @TO@ SimpleName@@MethodName:readAccessToken:[token.getValue()] @AT@ 6220 @LENGTH@ 16
---------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getValue() @AT@ 6220 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@token.getValue() @AT@ 6226 @LENGTH@ 10
------INS Operator@@!= @TO@ InfixExpression@@readAccessToken(token.getValue()) != null @AT@ 6237 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@readAccessToken(token.getValue()) != null @AT@ 6239 @LENGTH@ 4
---INS Block@@ThenBody:{  removeAccessToken(token.getValue());} @TO@ IfStatement@@if (readAccessToken(token.getValue()) != null) {  removeAccessToken(token.getValue());} @AT@ 6245 @LENGTH@ 45
------INS ExpressionStatement@@MethodInvocation:removeAccessToken(token.getValue()) @TO@ Block@@ThenBody:{  removeAccessToken(token.getValue());} @AT@ 6250 @LENGTH@ 36
---------INS MethodInvocation@@removeAccessToken(token.getValue()) @TO@ ExpressionStatement@@MethodInvocation:removeAccessToken(token.getValue()) @AT@ 6250 @LENGTH@ 35
------------INS SimpleName@@MethodName:removeAccessToken:[token.getValue()] @TO@ MethodInvocation@@removeAccessToken(token.getValue()) @AT@ 6250 @LENGTH@ 35
---------------INS MethodInvocation@@token.getValue() @TO@ SimpleName@@MethodName:removeAccessToken:[token.getValue()] @AT@ 6268 @LENGTH@ 16
------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getValue() @AT@ 6268 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@token.getValue() @AT@ 6274 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:inputFileName=new File(dataDir,"input.data").getAbsolutePath() @TO@ Assignment:inputFileName=HCatUtil.makePathASafeFileName(dataDir + File.separator + "input.data") @AT@ 2850 @LENGTH@ 66
---UPD Assignment@@inputFileName=new File(dataDir,"input.data").getAbsolutePath() @TO@ inputFileName=HCatUtil.makePathASafeFileName(dataDir + File.separator + "input.data") @AT@ 2850 @LENGTH@ 65
------UPD MethodInvocation@@new File(dataDir,"input.data").getAbsolutePath() @TO@ HCatUtil.makePathASafeFileName(dataDir + File.separator + "input.data") @AT@ 2866 @LENGTH@ 49
---------DEL ClassInstanceCreation@@File[dataDir, "input.data"] @AT@ 2866 @LENGTH@ 31
------------DEL New@@new @AT@ 2866 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 2870 @LENGTH@ 4
------------DEL SimpleName@@dataDir @AT@ 2875 @LENGTH@ 7
------------DEL StringLiteral@@"input.data" @AT@ 2884 @LENGTH@ 12
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@new File(dataDir,"input.data").getAbsolutePath() @AT@ 2893 @LENGTH@ 8
---------DEL SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2898 @LENGTH@ 17
---------INS SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "input.data"] @TO@ MethodInvocation@@new File(dataDir,"input.data").getAbsolutePath() @AT@ 2902 @LENGTH@ 62
------------INS InfixExpression@@dataDir + File.separator + "input.data" @TO@ SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "input.data"] @AT@ 2924 @LENGTH@ 39
---------------INS SimpleName@@dataDir @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2924 @LENGTH@ 7
---------------INS Operator@@+ @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2931 @LENGTH@ 1
---------------INS QualifiedName@@File.separator @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2934 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 2934 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 2939 @LENGTH@ 9
---------------INS StringLiteral@@"input.data" @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2951 @LENGTH@ 12


UPD TypeDeclaration@@[public]Reducer, org.apache.hadoop.mapreduce.Reducer @TO@ [@SuppressWarnings("rawtypes"), public]Reducer, org.apache.hadoop.mapreduce.Reducer @AT@ 747 @LENGTH@ 376
---INS SingleMemberAnnotation@@@SuppressWarnings("rawtypes") @TO@ TypeDeclaration@@[public]Reducer, org.apache.hadoop.mapreduce.Reducer @AT@ 744 @LENGTH@ 29


UPD ReturnStatement@@CastExpression:(ServiceController<BasicComponent>)CurrentServiceContainer.getServiceContainer().getService(componentName) @TO@ CastExpression:(ServiceController<BasicComponent>)currentServiceContainer().getService(componentName) @AT@ 5614 @LENGTH@ 115
---UPD CastExpression@@(ServiceController<BasicComponent>)CurrentServiceContainer.getServiceContainer().getService(componentName) @TO@ (ServiceController<BasicComponent>)currentServiceContainer().getService(componentName) @AT@ 5621 @LENGTH@ 107
------UPD MethodInvocation@@CurrentServiceContainer.getServiceContainer().getService(componentName) @TO@ currentServiceContainer().getService(componentName) @AT@ 5657 @LENGTH@ 71
---------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:currentServiceContainer:[] @AT@ 5657 @LENGTH@ 45
---------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 5657 @LENGTH@ 23


INS MethodDeclaration@@public, BigDecimal, MethodName:getPrice,  @TO@ TypeDeclaration@@[@Entity, @Table(name="ORDERS"), public]Order,  @AT@ 1695 @LENGTH@ 64
---INS Modifier@@public @TO@ MethodDeclaration@@public, BigDecimal, MethodName:getPrice,  @AT@ 1695 @LENGTH@ 6
---INS SimpleType@@BigDecimal @TO@ MethodDeclaration@@public, BigDecimal, MethodName:getPrice,  @AT@ 1702 @LENGTH@ 10
---INS SimpleName@@MethodName:getPrice @TO@ MethodDeclaration@@public, BigDecimal, MethodName:getPrice,  @AT@ 1713 @LENGTH@ 8
---INS ReturnStatement@@ClassInstanceCreation:new BigDecimal(2.50) @TO@ MethodDeclaration@@public, BigDecimal, MethodName:getPrice,  @AT@ 1728 @LENGTH@ 28
------INS ClassInstanceCreation@@BigDecimal[2.50] @TO@ ReturnStatement@@ClassInstanceCreation:new BigDecimal(2.50) @AT@ 1735 @LENGTH@ 20
---------INS New@@new @TO@ ClassInstanceCreation@@BigDecimal[2.50] @AT@ 1735 @LENGTH@ 3
---------INS SimpleType@@BigDecimal @TO@ ClassInstanceCreation@@BigDecimal[2.50] @AT@ 1739 @LENGTH@ 10
---------INS NumberLiteral@@2.50 @TO@ ClassInstanceCreation@@BigDecimal[2.50] @AT@ 1750 @LENGTH@ 4


INS MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @TO@ TypeDeclaration@@[public, abstract]DefaultComponent, ServiceSupport[Component] @AT@ 13637 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @AT@ 13637 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @AT@ 13648 @LENGTH@ 1
---INS SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @AT@ 13650 @LENGTH@ 39
---INS SingleVariableDeclaration@@Map<String,Object> parameters @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @AT@ 13690 @LENGTH@ 30
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> parameters @AT@ 13690 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 13690 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 13694 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 13702 @LENGTH@ 6
------INS SimpleName@@parameters @TO@ SingleVariableDeclaration@@Map<String,Object> parameters @AT@ 13710 @LENGTH@ 10
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @AT@ 13722 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 13722 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 13729 @LENGTH@ 3
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @AT@ 13734 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 13734 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 13734 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 13740 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 13743 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:getAndRemoveOrResolveReferenceParameter(parameters,key,type,null) @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type,  @AT@ 13759 @LENGTH@ 76
------INS MethodInvocation@@getAndRemoveOrResolveReferenceParameter(parameters,key,type,null) @TO@ ReturnStatement@@MethodInvocation:getAndRemoveOrResolveReferenceParameter(parameters,key,type,null) @AT@ 13766 @LENGTH@ 68
---------INS SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, key, type, null] @TO@ MethodInvocation@@getAndRemoveOrResolveReferenceParameter(parameters,key,type,null) @AT@ 13766 @LENGTH@ 68
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, key, type, null] @AT@ 13806 @LENGTH@ 10
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, key, type, null] @AT@ 13818 @LENGTH@ 3
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, key, type, null] @AT@ 13823 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter:[parameters, key, type, null] @AT@ 13829 @LENGTH@ 4


UPD IfStatement@@if (nodeId.equals(message.getToNode())) {  answer.add(message);} @TO@ if (nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId())) {  answer.add(message);} @AT@ 9399 @LENGTH@ 100
---INS InfixExpression@@nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId()) @TO@ IfStatement@@if (nodeId.equals(message.getToNode())) {  answer.add(message);} @AT@ 9403 @LENGTH@ 73
------MOV MethodInvocation@@nodeId.equals(message.getToNode()) @TO@ InfixExpression@@nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId()) @AT@ 9403 @LENGTH@ 34
------INS Operator@@|| @TO@ InfixExpression@@nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId()) @AT@ 9437 @LENGTH@ 2
------INS MethodInvocation@@nodeId.equals(message.getRouteId()) @TO@ InfixExpression@@nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId()) @AT@ 9441 @LENGTH@ 35
---------INS SimpleName@@Name:nodeId @TO@ MethodInvocation@@nodeId.equals(message.getRouteId()) @AT@ 9441 @LENGTH@ 6
---------INS SimpleName@@MethodName:equals:[message.getRouteId()] @TO@ MethodInvocation@@nodeId.equals(message.getRouteId()) @AT@ 9448 @LENGTH@ 28
------------INS MethodInvocation@@message.getRouteId() @TO@ SimpleName@@MethodName:equals:[message.getRouteId()] @AT@ 9455 @LENGTH@ 20
---------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getRouteId() @AT@ 9455 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getRouteId:[] @TO@ MethodInvocation@@message.getRouteId() @AT@ 9463 @LENGTH@ 12


DEL VariableDeclarationStatement@@boolean isModule=false; @AT@ 8312 @LENGTH@ 25
---DEL PrimitiveType@@boolean @AT@ 8312 @LENGTH@ 7
---DEL VariableDeclarationFragment@@isModule=false @AT@ 8320 @LENGTH@ 16
------DEL SimpleName@@isModule @AT@ 8320 @LENGTH@ 8
------DEL BooleanLiteral@@false @AT@ 8331 @LENGTH@ 5


DEL TryStatement@@try {  final Manifest manifest=is.getManifest();  Assert.assertNotNull(manifest);}  finally {  IoUtils.safeClose(is);} @AT@ 7052 @LENGTH@ 170
---DEL VariableDeclarationStatement@@final Manifest manifest=is.getManifest(); @AT@ 7070 @LENGTH@ 43
------DEL Modifier@@final @AT@ 7070 @LENGTH@ 5
------DEL SimpleType@@Manifest @AT@ 7076 @LENGTH@ 8
------DEL VariableDeclarationFragment@@manifest=is.getManifest() @AT@ 7085 @LENGTH@ 27
---------DEL SimpleName@@manifest @AT@ 7085 @LENGTH@ 8
---------DEL MethodInvocation@@is.getManifest() @AT@ 7096 @LENGTH@ 16
------------DEL SimpleName@@Name:is @AT@ 7096 @LENGTH@ 2
------------DEL SimpleName@@MethodName:getManifest:[] @AT@ 7099 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:Assert.assertNotNull(manifest) @AT@ 7126 @LENGTH@ 31
------DEL MethodInvocation@@Assert.assertNotNull(manifest) @AT@ 7126 @LENGTH@ 30
---------DEL SimpleName@@Name:Assert @AT@ 7126 @LENGTH@ 6
---------DEL SimpleName@@MethodName:assertNotNull:[manifest] @AT@ 7133 @LENGTH@ 23
------------DEL SimpleName@@manifest @AT@ 7147 @LENGTH@ 8
---DEL Block@@FinallyBody:{  IoUtils.safeClose(is);} @AT@ 7176 @LENGTH@ 46
------DEL ExpressionStatement@@MethodInvocation:IoUtils.safeClose(is) @AT@ 7190 @LENGTH@ 22
---------DEL MethodInvocation@@IoUtils.safeClose(is) @AT@ 7190 @LENGTH@ 21
------------DEL SimpleName@@Name:IoUtils @AT@ 7190 @LENGTH@ 7
------------DEL SimpleName@@MethodName:safeClose:[is] @AT@ 7198 @LENGTH@ 13
---------------DEL SimpleName@@is @AT@ 7208 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:assertNull("Got a public ID",helper.getSourcePublicID()) @TO@ MethodDeclaration@@public, void, MethodName:testInitForNewDocument, ConfigurationException,  @AT@ 7558 @LENGTH@ 58
---INS MethodInvocation@@assertNull("Got a public ID",helper.getSourcePublicID()) @TO@ ExpressionStatement@@MethodInvocation:assertNull("Got a public ID",helper.getSourcePublicID()) @AT@ 7558 @LENGTH@ 57
------INS SimpleName@@MethodName:assertNull:["Got a public ID", helper.getSourcePublicID()] @TO@ MethodInvocation@@assertNull("Got a public ID",helper.getSourcePublicID()) @AT@ 7558 @LENGTH@ 57
---------INS StringLiteral@@"Got a public ID" @TO@ SimpleName@@MethodName:assertNull:["Got a public ID", helper.getSourcePublicID()] @AT@ 7569 @LENGTH@ 17
---------INS MethodInvocation@@helper.getSourcePublicID() @TO@ SimpleName@@MethodName:assertNull:["Got a public ID", helper.getSourcePublicID()] @AT@ 7588 @LENGTH@ 26
------------INS SimpleName@@Name:helper @TO@ MethodInvocation@@helper.getSourcePublicID() @AT@ 7588 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSourcePublicID:[] @TO@ MethodInvocation@@helper.getSourcePublicID() @AT@ 7595 @LENGTH@ 19


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ImageSearchResult,  @TO@ [@Data, public]ImageSearchResult, AbstractDockerDTO @AT@ 807 @LENGTH@ 145
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ImageSearchResult,  @AT@ 772 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 813 @LENGTH@ 47


INS IfStatement@@if (JsfRuntimeInformation.isAtLeastJsf21()) {  FACTORY_NAMES.put(FaceletCacheFactory.class,FactoryFinder.FACELET_CACHE_FACTORY);} @TO@ Initializer@@Initializer @AT@ 3946 @LENGTH@ 135
---INS MethodInvocation@@JsfRuntimeInformation.isAtLeastJsf21() @TO@ IfStatement@@if (JsfRuntimeInformation.isAtLeastJsf21()) {  FACTORY_NAMES.put(FaceletCacheFactory.class,FactoryFinder.FACELET_CACHE_FACTORY);} @AT@ 3950 @LENGTH@ 38
------INS SimpleName@@Name:JsfRuntimeInformation @TO@ MethodInvocation@@JsfRuntimeInformation.isAtLeastJsf21() @AT@ 3950 @LENGTH@ 21
------INS SimpleName@@MethodName:isAtLeastJsf21:[] @TO@ MethodInvocation@@JsfRuntimeInformation.isAtLeastJsf21() @AT@ 3972 @LENGTH@ 16
---INS Block@@ThenBody:{  FACTORY_NAMES.put(FaceletCacheFactory.class,FactoryFinder.FACELET_CACHE_FACTORY);} @TO@ IfStatement@@if (JsfRuntimeInformation.isAtLeastJsf21()) {  FACTORY_NAMES.put(FaceletCacheFactory.class,FactoryFinder.FACELET_CACHE_FACTORY);} @AT@ 3990 @LENGTH@ 91
------MOV ExpressionStatement@@MethodInvocation:FACTORY_NAMES.put(FaceletCacheFactory.class,FactoryFinder.FACELET_CACHE_FACTORY) @TO@ Block@@ThenBody:{  FACTORY_NAMES.put(FaceletCacheFactory.class,FactoryFinder.FACELET_CACHE_FACTORY);} @AT@ 3946 @LENGTH@ 82


UPD VariableDeclarationStatement@@String aRootName=typeElement.getQualifiedName().toString(); @TO@ String aRootName=canonicalClassName(typeElement.getQualifiedName().toString()); @AT@ 12051 @LENGTH@ 61
---UPD VariableDeclarationFragment@@aRootName=typeElement.getQualifiedName().toString() @TO@ aRootName=canonicalClassName(typeElement.getQualifiedName().toString()) @AT@ 12058 @LENGTH@ 53
------DEL MethodInvocation@@typeElement.getQualifiedName().toString() @AT@ 12070 @LENGTH@ 41
------INS MethodInvocation@@canonicalClassName(typeElement.getQualifiedName().toString()) @TO@ VariableDeclarationFragment@@aRootName=typeElement.getQualifiedName().toString() @AT@ 12221 @LENGTH@ 61
---------INS SimpleName@@MethodName:canonicalClassName:[typeElement.getQualifiedName().toString()] @TO@ MethodInvocation@@canonicalClassName(typeElement.getQualifiedName().toString()) @AT@ 12221 @LENGTH@ 61
------------INS MethodInvocation@@typeElement.getQualifiedName().toString() @TO@ SimpleName@@MethodName:canonicalClassName:[typeElement.getQualifiedName().toString()] @AT@ 12240 @LENGTH@ 41
---------------MOV MethodInvocation@@MethodName:getQualifiedName:[] @TO@ MethodInvocation@@typeElement.getQualifiedName().toString() @AT@ 12070 @LENGTH@ 30
---------------MOV SimpleName@@Name:typeElement @TO@ MethodInvocation@@typeElement.getQualifiedName().toString() @AT@ 12070 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@typeElement.getQualifiedName().toString() @AT@ 12101 @LENGTH@ 10


UPD VariableDeclarationStatement@@final Writer writer=new OutputStreamWriter(os,"UTF-8"); @TO@ final Writer writer=new OutputStreamWriter(os,StandardCharsets.UTF_8); @AT@ 7601 @LENGTH@ 58
---UPD VariableDeclarationFragment@@writer=new OutputStreamWriter(os,"UTF-8") @TO@ writer=new OutputStreamWriter(os,StandardCharsets.UTF_8) @AT@ 7614 @LENGTH@ 44
------UPD ClassInstanceCreation@@OutputStreamWriter[os, "UTF-8"] @TO@ OutputStreamWriter[os, StandardCharsets.UTF_8] @AT@ 7623 @LENGTH@ 35
---------DEL StringLiteral@@"UTF-8" @AT@ 7650 @LENGTH@ 7
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@OutputStreamWriter[os, "UTF-8"] @AT@ 7692 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7692 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7709 @LENGTH@ 5


UPD MethodDeclaration@@private, void, MethodName:completeRemoteTransaction, OperationContext context, ModelNode operation, final AtomicReference<ModelController.OperationTransaction> txRef, final AtomicReference<ModelNode> preparedResultRef, final AtomicReference<ModelNode> finalResultRef,  @TO@ private, void, MethodName:completeRemoteTransaction, OperationContext context, final AtomicReference<ModelController.OperationTransaction> txRef, final AtomicReference<ModelNode> preparedResultRef, final AtomicReference<ModelNode> finalResultRef,  @AT@ 8388 @LENGTH@ 4133
---DEL SingleVariableDeclaration@@ModelNode operation @AT@ 8453 @LENGTH@ 19
------DEL SimpleType@@ModelNode @AT@ 8453 @LENGTH@ 9
------DEL SimpleName@@operation @AT@ 8463 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:os.write(content.getBytes(Charset.forName("UTF-8"))) @TO@ MethodInvocation:os.write(content.getBytes(StandardCharsets.UTF_8)) @AT@ 4246 @LENGTH@ 53
---UPD MethodInvocation@@os.write(content.getBytes(Charset.forName("UTF-8"))) @TO@ os.write(content.getBytes(StandardCharsets.UTF_8)) @AT@ 4246 @LENGTH@ 52
------UPD SimpleName@@MethodName:write:[content.getBytes(Charset.forName("UTF-8"))] @TO@ MethodName:write:[content.getBytes(StandardCharsets.UTF_8)] @AT@ 4249 @LENGTH@ 49
---------UPD MethodInvocation@@content.getBytes(Charset.forName("UTF-8")) @TO@ content.getBytes(StandardCharsets.UTF_8) @AT@ 4255 @LENGTH@ 42
------------UPD SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 4263 @LENGTH@ 34
---------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 4272 @LENGTH@ 24
------------------DEL SimpleName@@Name:Charset @AT@ 4272 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 4280 @LENGTH@ 16
---------------------DEL StringLiteral@@"UTF-8" @AT@ 4288 @LENGTH@ 7
---------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @AT@ 4281 @LENGTH@ 22
------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4281 @LENGTH@ 16
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4298 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 7325 @LENGTH@ 339
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @AT@ 7325 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @AT@ 7332 @LENGTH@ 4
---INS SimpleName@@MethodName:detectsInBindingWithParentheses @TO@ MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @AT@ 7337 @LENGTH@ 31
---INS VariableDeclarationStatement@@StringQuery query=new StringQuery("select count(we) from MyEntity we where we.status in (:statuses)"); @TO@ MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @AT@ 7376 @LENGTH@ 104
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("select count(we) from MyEntity we where we.status in (:statuses)"); @AT@ 7376 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new StringQuery("select count(we) from MyEntity we where we.status in (:statuses)") @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("select count(we) from MyEntity we where we.status in (:statuses)"); @AT@ 7388 @LENGTH@ 91
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new StringQuery("select count(we) from MyEntity we where we.status in (:statuses)") @AT@ 7388 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringQuery["select count(we) from MyEntity we where we.status in (:statuses)"] @TO@ VariableDeclarationFragment@@query=new StringQuery("select count(we) from MyEntity we where we.status in (:statuses)") @AT@ 7396 @LENGTH@ 83
------------INS New@@new @TO@ ClassInstanceCreation@@StringQuery["select count(we) from MyEntity we where we.status in (:statuses)"] @AT@ 7396 @LENGTH@ 3
------------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery["select count(we) from MyEntity we where we.status in (:statuses)"] @AT@ 7400 @LENGTH@ 11
------------INS StringLiteral@@"select count(we) from MyEntity we where we.status in (:statuses)" @TO@ ClassInstanceCreation@@StringQuery["select count(we) from MyEntity we where we.status in (:statuses)"] @AT@ 7412 @LENGTH@ 66
---INS VariableDeclarationStatement@@List<ParameterBinding> bindings=query.getParameterBindings(); @TO@ MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @AT@ 7484 @LENGTH@ 63
------INS ParameterizedType@@List<ParameterBinding> @TO@ VariableDeclarationStatement@@List<ParameterBinding> bindings=query.getParameterBindings(); @AT@ 7484 @LENGTH@ 22
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ParameterBinding> @AT@ 7484 @LENGTH@ 4
---------INS SimpleType@@ParameterBinding @TO@ ParameterizedType@@List<ParameterBinding> @AT@ 7489 @LENGTH@ 16
------INS VariableDeclarationFragment@@bindings=query.getParameterBindings() @TO@ VariableDeclarationStatement@@List<ParameterBinding> bindings=query.getParameterBindings(); @AT@ 7507 @LENGTH@ 39
---------INS SimpleName@@bindings @TO@ VariableDeclarationFragment@@bindings=query.getParameterBindings() @AT@ 7507 @LENGTH@ 8
---------INS MethodInvocation@@query.getParameterBindings() @TO@ VariableDeclarationFragment@@bindings=query.getParameterBindings() @AT@ 7518 @LENGTH@ 28
------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 7518 @LENGTH@ 5
------------INS SimpleName@@MethodName:getParameterBindings:[] @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 7524 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertThat(bindings,hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @AT@ 7551 @LENGTH@ 33
------INS MethodInvocation@@assertThat(bindings,hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(bindings,hasSize(1)) @AT@ 7551 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[bindings, hasSize(1)] @TO@ MethodInvocation@@assertThat(bindings,hasSize(1)) @AT@ 7551 @LENGTH@ 32
------------INS SimpleName@@bindings @TO@ SimpleName@@MethodName:assertThat:[bindings, hasSize(1)] @AT@ 7562 @LENGTH@ 8
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[bindings, hasSize(1)] @AT@ 7572 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 7572 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 7580 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 7572 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 7580 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertNamedBinding(InParameterBinding.class,"statuses",bindings.get(0)) @TO@ MethodDeclaration@@public, void, MethodName:detectsInBindingWithParentheses,  @AT@ 7587 @LENGTH@ 74
------INS MethodInvocation@@assertNamedBinding(InParameterBinding.class,"statuses",bindings.get(0)) @TO@ ExpressionStatement@@MethodInvocation:assertNamedBinding(InParameterBinding.class,"statuses",bindings.get(0)) @AT@ 7587 @LENGTH@ 73
---------INS SimpleName@@MethodName:assertNamedBinding:[InParameterBinding.class, "statuses", bindings.get(0)] @TO@ MethodInvocation@@assertNamedBinding(InParameterBinding.class,"statuses",bindings.get(0)) @AT@ 7587 @LENGTH@ 73
------------INS TypeLiteral@@InParameterBinding.class @TO@ SimpleName@@MethodName:assertNamedBinding:[InParameterBinding.class, "statuses", bindings.get(0)] @AT@ 7606 @LENGTH@ 24
------------INS StringLiteral@@"statuses" @TO@ SimpleName@@MethodName:assertNamedBinding:[InParameterBinding.class, "statuses", bindings.get(0)] @AT@ 7632 @LENGTH@ 10
------------INS MethodInvocation@@bindings.get(0) @TO@ SimpleName@@MethodName:assertNamedBinding:[InParameterBinding.class, "statuses", bindings.get(0)] @AT@ 7644 @LENGTH@ 15
---------------INS SimpleName@@Name:bindings @TO@ MethodInvocation@@bindings.get(0) @AT@ 7644 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@bindings.get(0) @AT@ 7653 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 7657 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 3458 @LENGTH@ 109
---UPD Assignment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 3458 @LENGTH@ 108
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 3463 @LENGTH@ 103
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 3482 @LENGTH@ 83
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3540 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 3540 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3548 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 3556 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @AT@ 3547 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3547 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3564 @LENGTH@ 5


INS ExpressionStatement@@SuperMethodInvocation:super.registerBeansForRoot(registry,configurationSource) @TO@ MethodDeclaration@@public, void, MethodName:registerBeansForRoot, BeanDefinitionRegistry registry, RepositoryConfigurationSource configurationSource,  @AT@ 4853 @LENGTH@ 58
---INS SuperMethodInvocation@@super.registerBeansForRoot(registry,configurationSource) @TO@ ExpressionStatement@@SuperMethodInvocation:super.registerBeansForRoot(registry,configurationSource) @AT@ 4853 @LENGTH@ 57
------INS SimpleName@@MethodName:registerBeansForRoot:[registry, configurationSource] @TO@ SuperMethodInvocation@@super.registerBeansForRoot(registry,configurationSource) @AT@ 4859 @LENGTH@ 20
------INS SimpleName@@registry @TO@ SuperMethodInvocation@@super.registerBeansForRoot(registry,configurationSource) @AT@ 4880 @LENGTH@ 8
------INS SimpleName@@configurationSource @TO@ SuperMethodInvocation@@super.registerBeansForRoot(registry,configurationSource) @AT@ 4890 @LENGTH@ 19


UPD FieldDeclaration@@private, ExecuteWatchdog, [watchdog] @TO@ private, final, ExecuteWatchdog, [watchdog] @AT@ 1591 @LENGTH@ 33
---INS Modifier@@final @TO@ FieldDeclaration@@private, ExecuteWatchdog, [watchdog] @AT@ 1605 @LENGTH@ 5


INS ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2426 @LENGTH@ 16
---INS SuperMethodInvocation@@super.doStart() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doStart() @AT@ 2426 @LENGTH@ 15
------INS SimpleName@@MethodName:doStart:[] @TO@ SuperMethodInvocation@@super.doStart() @AT@ 2432 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:assertNull("Got a system ID",helper.getSourceSystemID()) @TO@ MethodDeclaration@@public, void, MethodName:testInitForNewDocument, ConfigurationException,  @AT@ 7625 @LENGTH@ 58
---INS MethodInvocation@@assertNull("Got a system ID",helper.getSourceSystemID()) @TO@ ExpressionStatement@@MethodInvocation:assertNull("Got a system ID",helper.getSourceSystemID()) @AT@ 7625 @LENGTH@ 57
------INS SimpleName@@MethodName:assertNull:["Got a system ID", helper.getSourceSystemID()] @TO@ MethodInvocation@@assertNull("Got a system ID",helper.getSourceSystemID()) @AT@ 7625 @LENGTH@ 57
---------INS StringLiteral@@"Got a system ID" @TO@ SimpleName@@MethodName:assertNull:["Got a system ID", helper.getSourceSystemID()] @AT@ 7636 @LENGTH@ 17
---------INS MethodInvocation@@helper.getSourceSystemID() @TO@ SimpleName@@MethodName:assertNull:["Got a system ID", helper.getSourceSystemID()] @AT@ 7655 @LENGTH@ 26
------------INS SimpleName@@Name:helper @TO@ MethodInvocation@@helper.getSourceSystemID() @AT@ 7655 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSourceSystemID:[] @TO@ MethodInvocation@@helper.getSourceSystemID() @AT@ 7662 @LENGTH@ 19


UPD FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @TO@ protected, static, final, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1869 @LENGTH@ 60
---INS Modifier@@static @TO@ FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1763 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1770 @LENGTH@ 5


UPD FieldDeclaration@@private, static, HazelcastInstance, [hzOne=null] @TO@ private, static, HazelcastInstance, [hzOne] @AT@ 427 @LENGTH@ 46
---UPD VariableDeclarationFragment@@hzOne=null @TO@ hzOne @AT@ 460 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 468 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:stepExecution.getExecutionContext().put("batch_jsr_persistentUserData","persisted data") @TO@ MethodInvocation:stepExecution.getExecutionContext().put(executionContextUserSupport.getKey("batch_jsr_persistentUserData"),"persisted data") @AT@ 1442 @LENGTH@ 90
---UPD MethodInvocation@@stepExecution.getExecutionContext().put("batch_jsr_persistentUserData","persisted data") @TO@ stepExecution.getExecutionContext().put(executionContextUserSupport.getKey("batch_jsr_persistentUserData"),"persisted data") @AT@ 1442 @LENGTH@ 89
------UPD SimpleName@@MethodName:put:["batch_jsr_persistentUserData", "persisted data"] @TO@ MethodName:put:[executionContextUserSupport.getKey("batch_jsr_persistentUserData"), "persisted data"] @AT@ 1478 @LENGTH@ 53
---------INS MethodInvocation@@executionContextUserSupport.getKey("batch_jsr_persistentUserData") @TO@ SimpleName@@MethodName:put:["batch_jsr_persistentUserData", "persisted data"] @AT@ 1863 @LENGTH@ 66
------------INS SimpleName@@Name:executionContextUserSupport @TO@ MethodInvocation@@executionContextUserSupport.getKey("batch_jsr_persistentUserData") @AT@ 1863 @LENGTH@ 27
------------INS SimpleName@@MethodName:getKey:["batch_jsr_persistentUserData"] @TO@ MethodInvocation@@executionContextUserSupport.getKey("batch_jsr_persistentUserData") @AT@ 1891 @LENGTH@ 38
---------------MOV StringLiteral@@"batch_jsr_persistentUserData" @TO@ SimpleName@@MethodName:getKey:["batch_jsr_persistentUserData"] @AT@ 1482 @LENGTH@ 30


INS VariableDeclarationStatement@@final boolean appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT; @TO@ MethodDeclaration@@protected, void, MethodName:performBoottime, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers,  @AT@ 2736 @LENGTH@ 85
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final boolean appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT; @AT@ 2736 @LENGTH@ 5
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@final boolean appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT; @AT@ 2742 @LENGTH@ 7
---INS VariableDeclarationFragment@@appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT @TO@ VariableDeclarationStatement@@final boolean appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT; @AT@ 2750 @LENGTH@ 70
------INS SimpleName@@appclient @TO@ VariableDeclarationFragment@@appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT @AT@ 2750 @LENGTH@ 9
------INS InfixExpression@@context.getProcessType() == ProcessType.APPLICATION_CLIENT @TO@ VariableDeclarationFragment@@appclient=context.getProcessType() == ProcessType.APPLICATION_CLIENT @AT@ 2762 @LENGTH@ 58
---------INS MethodInvocation@@context.getProcessType() @TO@ InfixExpression@@context.getProcessType() == ProcessType.APPLICATION_CLIENT @AT@ 2762 @LENGTH@ 24
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getProcessType() @AT@ 2762 @LENGTH@ 7
------------INS SimpleName@@MethodName:getProcessType:[] @TO@ MethodInvocation@@context.getProcessType() @AT@ 2770 @LENGTH@ 16
---------INS Operator@@== @TO@ InfixExpression@@context.getProcessType() == ProcessType.APPLICATION_CLIENT @AT@ 2786 @LENGTH@ 2
---------INS QualifiedName@@ProcessType.APPLICATION_CLIENT @TO@ InfixExpression@@context.getProcessType() == ProcessType.APPLICATION_CLIENT @AT@ 2790 @LENGTH@ 30
------------INS SimpleName@@ProcessType @TO@ QualifiedName@@ProcessType.APPLICATION_CLIENT @AT@ 2790 @LENGTH@ 11
------------INS SimpleName@@APPLICATION_CLIENT @TO@ QualifiedName@@ProcessType.APPLICATION_CLIENT @AT@ 2802 @LENGTH@ 18


UPD ReturnStatement@@ClassInstanceCreation:new InstallOptions(getName(),url,controllerUrl,extractCmd,offline,optionalDependencyPatterns,excludeDependencyFilterPatterns,mainClass,properties) @TO@ ClassInstanceCreation:new InstallOptions(getName(),getUrl(),controllerUrl,extractCmd,offline,optionalDependencyPatterns,excludeDependencyFilterPatterns,mainClass,properties) @AT@ 6975 @LENGTH@ 162
---UPD ClassInstanceCreation@@InstallOptions[getName(), url, controllerUrl, extractCmd, offline, optionalDependencyPatterns, excludeDependencyFilterPatterns, mainClass, properties] @TO@ InstallOptions[getName(), getUrl(), controllerUrl, extractCmd, offline, optionalDependencyPatterns, excludeDependencyFilterPatterns, mainClass, properties] @AT@ 6982 @LENGTH@ 154
------INS MethodInvocation@@MethodName:getUrl:[] @TO@ ClassInstanceCreation@@InstallOptions[getName(), url, controllerUrl, extractCmd, offline, optionalDependencyPatterns, excludeDependencyFilterPatterns, mainClass, properties] @AT@ 7012 @LENGTH@ 8
------DEL SimpleName@@url @AT@ 7012 @LENGTH@ 3


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[public]TransactionSetupProviderImpl, [TransactionSetupProvider] @AT@ 3913 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 3913 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 3921 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 3928 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 3945 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 3981 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 3984 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 3984 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 3984 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 3991 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4011 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 4015 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 4021 @LENGTH@ 77
---------INS ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 4035 @LENGTH@ 53
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 4042 @LENGTH@ 45
---------------INS SimpleName@@Name:CurrentServiceContainer @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 4042 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 4066 @LENGTH@ 21
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 4107 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4114 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4114 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4131 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 4144 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4144 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4168 @LENGTH@ 10


UPD TryStatement@@try {  Container broker=containers.iterator().next();  containers.remove(broker);  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containers) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));      String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");      System.err.println(completed);      if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {        return true;      } else {        return false;      }    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);} @TO@ try {  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container broker=containerList.removeLast();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));  }  Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);  Assert.assertTrue(Provision.waitForCondition(containerList,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));      String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");      System.err.println(completed);      if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {        return true;      } else {        return false;      }    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);} @AT@ 2344 @LENGTH@ 2025
---UPD VariableDeclarationStatement@@Container broker=containers.iterator().next(); @TO@ LinkedList<Container> containerList=new LinkedList<Container>(containers); @AT@ 2366 @LENGTH@ 48
------DEL SimpleType@@Container @AT@ 2366 @LENGTH@ 9
------UPD VariableDeclarationFragment@@broker=containers.iterator().next() @TO@ containerList=new LinkedList<Container>(containers) @AT@ 2376 @LENGTH@ 37
---------UPD SimpleName@@broker @TO@ containerList @AT@ 2376 @LENGTH@ 6
---------DEL MethodInvocation@@containers.iterator().next() @AT@ 2385 @LENGTH@ 28
------------DEL MethodInvocation@@MethodName:iterator:[] @AT@ 2385 @LENGTH@ 21
------------DEL SimpleName@@Name:containers @AT@ 2385 @LENGTH@ 10
------------DEL SimpleName@@MethodName:next:[] @AT@ 2407 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedList<Container>[containers] @TO@ VariableDeclarationFragment@@broker=containers.iterator().next() @AT@ 2434 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 2434 @LENGTH@ 3
------------INS ParameterizedType@@LinkedList<Container> @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 2438 @LENGTH@ 21
---------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2438 @LENGTH@ 10
---------------INS SimpleType@@Container @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2449 @LENGTH@ 9
------------INS SimpleName@@containers @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 2460 @LENGTH@ 10
------INS ParameterizedType@@LinkedList<Container> @TO@ VariableDeclarationStatement@@Container broker=containers.iterator().next(); @AT@ 2396 @LENGTH@ 21
---------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2396 @LENGTH@ 10
---------INS SimpleType@@Container @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2407 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:containers.remove(broker) @AT@ 2431 @LENGTH@ 26
------DEL MethodInvocation@@containers.remove(broker) @AT@ 2431 @LENGTH@ 25
---INS VariableDeclarationStatement@@Container broker=containerList.removeLast(); @TO@ TryStatement@@try {  Container broker=containers.iterator().next();  containers.remove(broker);  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containers) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));      String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");      System.err.println(completed);      if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {        return true;      } else {        return false;      }    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);} @AT@ 2489 @LENGTH@ 46
------INS SimpleType@@Container @TO@ VariableDeclarationStatement@@Container broker=containerList.removeLast(); @AT@ 2489 @LENGTH@ 9
------INS VariableDeclarationFragment@@broker=containerList.removeLast() @TO@ VariableDeclarationStatement@@Container broker=containerList.removeLast(); @AT@ 2499 @LENGTH@ 35
---------INS SimpleName@@broker @TO@ VariableDeclarationFragment@@broker=containerList.removeLast() @AT@ 2499 @LENGTH@ 6
---------INS MethodInvocation@@containerList.removeLast() @TO@ VariableDeclarationFragment@@broker=containerList.removeLast() @AT@ 2508 @LENGTH@ 26
------------MOV SimpleName@@Name:containers @TO@ MethodInvocation@@containerList.removeLast() @AT@ 2431 @LENGTH@ 10
------------MOV SimpleName@@MethodName:remove:[broker] @TO@ MethodInvocation@@containerList.removeLast() @AT@ 2442 @LENGTH@ 14
---------------DEL SimpleName@@broker @AT@ 2449 @LENGTH@ 6
---UPD EnhancedForStatement@@for (Container c : containers) {  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));} @TO@ for (Container c : containerList) {  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));} @AT@ 2883 @LENGTH@ 279
------UPD SimpleName@@containers @TO@ containerList @AT@ 2901 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT) @AT@ 3179 @LENGTH@ 61
------UPD MethodInvocation@@Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT) @AT@ 3179 @LENGTH@ 60
---------UPD SimpleName@@MethodName:provisioningSuccess:[containers, PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[containerList, PROVISION_TIMEOUT] @AT@ 3189 @LENGTH@ 50
------------UPD SimpleName@@containers @TO@ containerList @AT@ 3209 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L)) @TO@ MethodInvocation:Assert.assertTrue(Provision.waitForCondition(containerList,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L)) @AT@ 3258 @LENGTH@ 1019
------UPD MethodInvocation@@Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L)) @TO@ Assert.assertTrue(Provision.waitForCondition(containerList,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L)) @AT@ 3258 @LENGTH@ 1018
---------UPD SimpleName@@MethodName:assertTrue:[Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L)] @TO@ MethodName:assertTrue:[Provision.waitForCondition(containerList,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L)] @AT@ 3265 @LENGTH@ 1011
------------UPD MethodInvocation@@Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L) @TO@ Provision.waitForCondition(containerList,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
,10000L) @AT@ 3276 @LENGTH@ 999
---------------UPD SimpleName@@MethodName:waitForCondition:[containers, new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
, 10000L] @TO@ MethodName:waitForCondition:[containerList, new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));
    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));
    String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");
    System.err.println(completed);
    if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {
      return true;
    }
 else {
      return false;
    }
  }
}
, 10000L] @AT@ 3286 @LENGTH@ 989
------------------UPD SimpleName@@containers @TO@ containerList @AT@ 3303 @LENGTH@ 10


INS MethodDeclaration@@byte[], MethodName:getFileConfiguration, String fileName,  @TO@ TypeDeclaration@@[public]Profile, [Comparable<Profile>, HasId] @AT@ 2660 @LENGTH@ 38
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 2653 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2653 @LENGTH@ 4
---INS SimpleName@@MethodName:getFileConfiguration @TO@ MethodDeclaration@@byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 2660 @LENGTH@ 20
---INS SingleVariableDeclaration@@String fileName @TO@ MethodDeclaration@@byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 2681 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String fileName @AT@ 2681 @LENGTH@ 6
------INS SimpleName@@fileName @TO@ SingleVariableDeclaration@@String fileName @AT@ 2688 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:inputFileName=new File(dataDir,"input.data").getAbsolutePath() @TO@ Assignment:inputFileName=HCatUtil.makePathASafeFileName(dataDir + File.separator + "input.data") @AT@ 2779 @LENGTH@ 66
---UPD Assignment@@inputFileName=new File(dataDir,"input.data").getAbsolutePath() @TO@ inputFileName=HCatUtil.makePathASafeFileName(dataDir + File.separator + "input.data") @AT@ 2779 @LENGTH@ 65
------UPD MethodInvocation@@new File(dataDir,"input.data").getAbsolutePath() @TO@ HCatUtil.makePathASafeFileName(dataDir + File.separator + "input.data") @AT@ 2795 @LENGTH@ 49
---------DEL ClassInstanceCreation@@File[dataDir, "input.data"] @AT@ 2795 @LENGTH@ 31
------------DEL New@@new @AT@ 2795 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 2799 @LENGTH@ 4
------------DEL SimpleName@@dataDir @AT@ 2804 @LENGTH@ 7
------------DEL StringLiteral@@"input.data" @AT@ 2813 @LENGTH@ 12
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@new File(dataDir,"input.data").getAbsolutePath() @AT@ 2817 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "input.data"] @TO@ MethodInvocation@@new File(dataDir,"input.data").getAbsolutePath() @AT@ 2826 @LENGTH@ 62
------------INS InfixExpression@@dataDir + File.separator + "input.data" @TO@ SimpleName@@MethodName:makePathASafeFileName:[dataDir + File.separator + "input.data"] @AT@ 2848 @LENGTH@ 39
---------------INS SimpleName@@dataDir @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2848 @LENGTH@ 7
---------------INS Operator@@+ @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2855 @LENGTH@ 1
---------------INS QualifiedName@@File.separator @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2858 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 2858 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 2863 @LENGTH@ 9
---------------INS StringLiteral@@"input.data" @TO@ InfixExpression@@dataDir + File.separator + "input.data" @AT@ 2875 @LENGTH@ 12
---------DEL SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2827 @LENGTH@ 17


DEL FieldDeclaration@@private, static, final, Charset, [UTF_8=Charset.forName("UTF-8")] @AT@ 2699 @LENGTH@ 62
---DEL Modifier@@private @AT@ 2699 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2707 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2714 @LENGTH@ 5
---DEL SimpleType@@Charset @AT@ 2720 @LENGTH@ 7
---DEL VariableDeclarationFragment@@UTF_8=Charset.forName("UTF-8") @AT@ 2728 @LENGTH@ 32
------DEL SimpleName@@UTF_8 @AT@ 2728 @LENGTH@ 5
------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 2736 @LENGTH@ 24
---------DEL SimpleName@@Name:Charset @AT@ 2736 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 2744 @LENGTH@ 16
------------DEL StringLiteral@@"UTF-8" @AT@ 2752 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong body string","[Body is file based: target/test]",em.getBody()) @TO@ MethodInvocation:assertEquals("Get a wrong body string","[Body is file based: target" + File.separator + "test]",em.getBody()) @AT@ 3452 @LENGTH@ 91
---UPD MethodInvocation@@assertEquals("Get a wrong body string","[Body is file based: target/test]",em.getBody()) @TO@ assertEquals("Get a wrong body string","[Body is file based: target" + File.separator + "test]",em.getBody()) @AT@ 3452 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is file based: target/test]", em.getBody()] @TO@ MethodName:assertEquals:["Get a wrong body string", "[Body is file based: target" + File.separator + "test]", em.getBody()] @AT@ 3452 @LENGTH@ 90
---------INS InfixExpression@@"[Body is file based: target" + File.separator + "test]" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is file based: target/test]", em.getBody()] @AT@ 3492 @LENGTH@ 56
------------INS StringLiteral@@"[Body is file based: target" @TO@ InfixExpression@@"[Body is file based: target" + File.separator + "test]" @AT@ 3492 @LENGTH@ 29
------------INS Operator@@+ @TO@ InfixExpression@@"[Body is file based: target" + File.separator + "test]" @AT@ 3521 @LENGTH@ 1
------------INS QualifiedName@@File.separator @TO@ InfixExpression@@"[Body is file based: target" + File.separator + "test]" @AT@ 3524 @LENGTH@ 14
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 3524 @LENGTH@ 4
---------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 3529 @LENGTH@ 9
------------INS StringLiteral@@"test]" @TO@ InfixExpression@@"[Body is file based: target" + File.separator + "test]" @AT@ 3541 @LENGTH@ 7
---------DEL StringLiteral@@"[Body is file based: target/test]" @AT@ 3492 @LENGTH@ 35


UPD VariableDeclarationStatement@@UnauthorizedClientException result=(UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class); @TO@ UnauthorizedUserException result=(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class); @AT@ 3523 @LENGTH@ 124
---UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 3523 @LENGTH@ 27
---UPD VariableDeclarationFragment@@result=(UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class) @TO@ result=(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class) @AT@ 3551 @LENGTH@ 95
------UPD CastExpression@@(UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class) @TO@ (UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class) @AT@ 3560 @LENGTH@ 86
---------UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 3561 @LENGTH@ 27


MOV FieldDeclaration@@protected, Server, [server] @TO@ TypeDeclaration@@[public]WsProducerConsumerTest, CamelTestSupport @AT@ 726 @LENGTH@ 24


DEL VariableDeclarationStatement@@Set<ContainerProxy> containers=null; @AT@ 1810 @LENGTH@ 38
---DEL ParameterizedType@@Set<ContainerProxy> @AT@ 1810 @LENGTH@ 19
------DEL SimpleType@@Set @AT@ 1810 @LENGTH@ 3
------DEL SimpleType@@ContainerProxy @AT@ 1814 @LENGTH@ 14
---DEL VariableDeclarationFragment@@containers=null @AT@ 1830 @LENGTH@ 17
------DEL SimpleName@@containers @AT@ 1830 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 1843 @LENGTH@ 4


INS FieldDeclaration@@private, boolean, [reverseHeaders=true] @TO@ TypeDeclaration@@[@Component(name="io.fabric8.gateway.haproxy.mapping",immediate=true,metatype=true,policy=ConfigurationPolicy.REQUIRE,label="Fabric8 HAProxy HTTP Mapping Rule",description="Provides a mapping between part of the fabric cluster and a HTTP via HAProxy"), public]HttpMappingRuleConfiguration, AbstractComponent @AT@ 3737 @LENGTH@ 38
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 3737 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 3745 @LENGTH@ 7
---INS VariableDeclarationFragment@@reverseHeaders=true @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 3753 @LENGTH@ 21
------INS SimpleName@@reverseHeaders @TO@ VariableDeclarationFragment@@reverseHeaders=true @AT@ 3753 @LENGTH@ 14
------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@reverseHeaders=true @AT@ 3770 @LENGTH@ 4


UPD IfStatement@@if (params != null && !params.isEmpty()) {  jobRestartProperties.putAll(params);} @TO@ if (params != null) {  Enumeration<?> propertyNames=params.propertyNames();  while (propertyNames.hasMoreElements()) {    String curName=(String)propertyNames.nextElement();    jobRestartProperties.setProperty(curName,params.getProperty(curName));  }} @AT@ 21738 @LENGTH@ 86
---DEL InfixExpression@@params != null && !params.isEmpty() @AT@ 21742 @LENGTH@ 35
------DEL InfixExpression@@params != null @AT@ 21742 @LENGTH@ 14
------DEL Operator@@&& @AT@ 21756 @LENGTH@ 2
------DEL PrefixExpression@@!params.isEmpty() @AT@ 21760 @LENGTH@ 17
---------DEL Operator@@! @AT@ 21760 @LENGTH@ 1
---------DEL MethodInvocation@@params.isEmpty() @AT@ 21761 @LENGTH@ 16
---INS InfixExpression@@params != null @TO@ IfStatement@@if (params != null && !params.isEmpty()) {  jobRestartProperties.putAll(params);} @AT@ 21771 @LENGTH@ 14
------MOV SimpleName@@params @TO@ InfixExpression@@params != null @AT@ 21742 @LENGTH@ 6
------MOV Operator@@!= @TO@ InfixExpression@@params != null @AT@ 21748 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@params != null @AT@ 21752 @LENGTH@ 4
---DEL Block@@ThenBody:{  jobRestartProperties.putAll(params);} @AT@ 21779 @LENGTH@ 45
---INS Block@@ThenBody:{  Enumeration<?> propertyNames=params.propertyNames();  while (propertyNames.hasMoreElements()) {    String curName=(String)propertyNames.nextElement();    jobRestartProperties.setProperty(curName,params.getProperty(curName));  }} @TO@ IfStatement@@if (params != null && !params.isEmpty()) {  jobRestartProperties.putAll(params);} @AT@ 21787 @LENGTH@ 248
------INS VariableDeclarationStatement@@Enumeration<?> propertyNames=params.propertyNames(); @TO@ Block@@ThenBody:{  Enumeration<?> propertyNames=params.propertyNames();  while (propertyNames.hasMoreElements()) {    String curName=(String)propertyNames.nextElement();    jobRestartProperties.setProperty(curName,params.getProperty(curName));  }} @AT@ 21792 @LENGTH@ 54
---------INS ParameterizedType@@Enumeration<?> @TO@ VariableDeclarationStatement@@Enumeration<?> propertyNames=params.propertyNames(); @AT@ 21792 @LENGTH@ 14
------------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<?> @AT@ 21792 @LENGTH@ 11
------------INS WildcardType@@? @TO@ ParameterizedType@@Enumeration<?> @AT@ 21804 @LENGTH@ 1
---------INS VariableDeclarationFragment@@propertyNames=params.propertyNames() @TO@ VariableDeclarationStatement@@Enumeration<?> propertyNames=params.propertyNames(); @AT@ 21807 @LENGTH@ 38
------------INS SimpleName@@propertyNames @TO@ VariableDeclarationFragment@@propertyNames=params.propertyNames() @AT@ 21807 @LENGTH@ 13
------------INS MethodInvocation@@params.propertyNames() @TO@ VariableDeclarationFragment@@propertyNames=params.propertyNames() @AT@ 21823 @LENGTH@ 22
---------------MOV SimpleName@@Name:params @TO@ MethodInvocation@@params.propertyNames() @AT@ 21761 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@params.propertyNames() @AT@ 21768 @LENGTH@ 9
------INS WhileStatement@@while (propertyNames.hasMoreElements()) {  String curName=(String)propertyNames.nextElement();  jobRestartProperties.setProperty(curName,params.getProperty(curName));} @TO@ Block@@ThenBody:{  Enumeration<?> propertyNames=params.propertyNames();  while (propertyNames.hasMoreElements()) {    String curName=(String)propertyNames.nextElement();    jobRestartProperties.setProperty(curName,params.getProperty(curName));  }} @AT@ 21851 @LENGTH@ 180
---------INS MethodInvocation@@propertyNames.hasMoreElements() @TO@ WhileStatement@@while (propertyNames.hasMoreElements()) {  String curName=(String)propertyNames.nextElement();  jobRestartProperties.setProperty(curName,params.getProperty(curName));} @AT@ 21857 @LENGTH@ 31
------------INS SimpleName@@Name:propertyNames @TO@ MethodInvocation@@propertyNames.hasMoreElements() @AT@ 21857 @LENGTH@ 13
------------INS SimpleName@@MethodName:hasMoreElements:[] @TO@ MethodInvocation@@propertyNames.hasMoreElements() @AT@ 21871 @LENGTH@ 17
---------INS Block@@WhileBody:{  String curName=(String)propertyNames.nextElement();  jobRestartProperties.setProperty(curName,params.getProperty(curName));} @TO@ WhileStatement@@while (propertyNames.hasMoreElements()) {  String curName=(String)propertyNames.nextElement();  jobRestartProperties.setProperty(curName,params.getProperty(curName));} @AT@ 21890 @LENGTH@ 141
------------MOV ExpressionStatement@@MethodInvocation:jobRestartProperties.putAll(params) @TO@ Block@@WhileBody:{  String curName=(String)propertyNames.nextElement();  jobRestartProperties.setProperty(curName,params.getProperty(curName));} @AT@ 21784 @LENGTH@ 36
---------------UPD MethodInvocation@@jobRestartProperties.putAll(params) @TO@ jobRestartProperties.setProperty(curName,params.getProperty(curName)) @AT@ 21784 @LENGTH@ 35
------------------UPD SimpleName@@MethodName:putAll:[params] @TO@ MethodName:setProperty:[curName, params.getProperty(curName)] @AT@ 21805 @LENGTH@ 14
---------------------DEL SimpleName@@params @AT@ 21812 @LENGTH@ 6
---------------------INS SimpleName@@curName @TO@ SimpleName@@MethodName:putAll:[params] @AT@ 21988 @LENGTH@ 7
---------------------INS MethodInvocation@@params.getProperty(curName) @TO@ SimpleName@@MethodName:putAll:[params] @AT@ 21997 @LENGTH@ 27
------------------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.getProperty(curName) @AT@ 21997 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getProperty:[curName] @TO@ MethodInvocation@@params.getProperty(curName) @AT@ 22004 @LENGTH@ 20
---------------------------INS SimpleName@@curName @TO@ SimpleName@@MethodName:getProperty:[curName] @AT@ 22016 @LENGTH@ 7
------------INS VariableDeclarationStatement@@String curName=(String)propertyNames.nextElement(); @TO@ Block@@WhileBody:{  String curName=(String)propertyNames.nextElement();  jobRestartProperties.setProperty(curName,params.getProperty(curName));} @AT@ 21896 @LENGTH@ 54
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String curName=(String)propertyNames.nextElement(); @AT@ 21896 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@curName=(String)propertyNames.nextElement() @TO@ VariableDeclarationStatement@@String curName=(String)propertyNames.nextElement(); @AT@ 21903 @LENGTH@ 46
------------------INS SimpleName@@curName @TO@ VariableDeclarationFragment@@curName=(String)propertyNames.nextElement() @AT@ 21903 @LENGTH@ 7
------------------INS CastExpression@@(String)propertyNames.nextElement() @TO@ VariableDeclarationFragment@@curName=(String)propertyNames.nextElement() @AT@ 21913 @LENGTH@ 36
---------------------INS SimpleType@@String @TO@ CastExpression@@(String)propertyNames.nextElement() @AT@ 21914 @LENGTH@ 6
---------------------INS MethodInvocation@@propertyNames.nextElement() @TO@ CastExpression@@(String)propertyNames.nextElement() @AT@ 21922 @LENGTH@ 27
------------------------INS SimpleName@@Name:propertyNames @TO@ MethodInvocation@@propertyNames.nextElement() @AT@ 21922 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:nextElement:[] @TO@ MethodInvocation@@propertyNames.nextElement() @AT@ 21936 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:file=new File(uri) @TO@ Assignment:file=new File(uri.getPath()) @AT@ 13574 @LENGTH@ 21
---UPD Assignment@@file=new File(uri) @TO@ file=new File(uri.getPath()) @AT@ 13574 @LENGTH@ 20
------UPD ClassInstanceCreation@@File[uri] @TO@ File[uri.getPath()] @AT@ 13581 @LENGTH@ 13
---------INS MethodInvocation@@uri.getPath() @TO@ ClassInstanceCreation@@File[uri] @AT@ 13590 @LENGTH@ 13
------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.getPath() @AT@ 13590 @LENGTH@ 3
------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@uri.getPath() @AT@ 13594 @LENGTH@ 9
---------DEL SimpleName@@uri @AT@ 13590 @LENGTH@ 3


INS MethodDeclaration@@private, voidMethodName:WebsocketConstants,  @TO@ TypeDeclaration@@[public]WebsocketConstants,  @AT@ 1070 @LENGTH@ 59
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:WebsocketConstants,  @AT@ 1070 @LENGTH@ 7
---INS SimpleName@@MethodName:WebsocketConstants @TO@ MethodDeclaration@@private, voidMethodName:WebsocketConstants,  @AT@ 1078 @LENGTH@ 18


DEL VariableDeclarationStatement@@final JarInputStream is=new JarInputStream(new FileInputStream(jar)); @AT@ 6972 @LENGTH@ 71
---DEL Modifier@@final @AT@ 6972 @LENGTH@ 5
---DEL SimpleType@@JarInputStream @AT@ 6978 @LENGTH@ 14
---DEL VariableDeclarationFragment@@is=new JarInputStream(new FileInputStream(jar)) @AT@ 6993 @LENGTH@ 49
------DEL SimpleName@@is @AT@ 6993 @LENGTH@ 2
------DEL ClassInstanceCreation@@JarInputStream[new FileInputStream(jar)] @AT@ 6998 @LENGTH@ 44
---------DEL New@@new @AT@ 6998 @LENGTH@ 3
---------DEL SimpleType@@JarInputStream @AT@ 7002 @LENGTH@ 14
---------DEL ClassInstanceCreation@@FileInputStream[jar] @AT@ 7017 @LENGTH@ 24
------------DEL New@@new @AT@ 7017 @LENGTH@ 3
------------DEL SimpleType@@FileInputStream @AT@ 7021 @LENGTH@ 15
------------DEL SimpleName@@jar @AT@ 7037 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ Assignment:uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 8102 @LENGTH@ 45
---UPD Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 8102 @LENGTH@ 44
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 8108 @LENGTH@ 38
---------UPD SimpleName@@MethodName:encode:[uri] @TO@ MethodName:encodeHttpURI:[uri] @AT@ 8135 @LENGTH@ 11


UPD VariableDeclarationStatement@@Resource<?> resource=controller.listSearches(request); @TO@ ResourceSupport resource=controller.listSearches(request); @AT@ 2177 @LENGTH@ 56
---DEL ParameterizedType@@Resource<?> @AT@ 2177 @LENGTH@ 11
------DEL SimpleType@@Resource @AT@ 2177 @LENGTH@ 8
------DEL WildcardType@@? @AT@ 2186 @LENGTH@ 1
---INS SimpleType@@ResourceSupport @TO@ VariableDeclarationStatement@@Resource<?> resource=controller.listSearches(request); @AT@ 2184 @LENGTH@ 15


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ContainerInfo,  @TO@ [@Data, public]ContainerInfo, AbstractDockerDTO @AT@ 888 @LENGTH@ 644
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ContainerInfo,  @AT@ 851 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 894 @LENGTH@ 47


DEL IfStatement@@if (!context.isBooting()) {  HttpManagementRemoveHandler.removeHttpManagementService(context);} @AT@ 4855 @LENGTH@ 115
---DEL PrefixExpression@@!context.isBooting() @AT@ 4859 @LENGTH@ 20
------DEL Operator@@! @AT@ 4859 @LENGTH@ 1
------DEL MethodInvocation@@context.isBooting() @AT@ 4860 @LENGTH@ 19
---------DEL SimpleName@@Name:context @AT@ 4860 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isBooting:[] @AT@ 4868 @LENGTH@ 11
---DEL Block@@ThenBody:{  HttpManagementRemoveHandler.removeHttpManagementService(context);} @AT@ 4881 @LENGTH@ 89
------DEL ExpressionStatement@@MethodInvocation:HttpManagementRemoveHandler.removeHttpManagementService(context) @AT@ 4895 @LENGTH@ 65
---------DEL MethodInvocation@@HttpManagementRemoveHandler.removeHttpManagementService(context) @AT@ 4895 @LENGTH@ 64
------------DEL SimpleName@@Name:HttpManagementRemoveHandler @AT@ 4895 @LENGTH@ 27
------------DEL SimpleName@@MethodName:removeHttpManagementService:[context] @AT@ 4923 @LENGTH@ 36
---------------DEL SimpleName@@context @AT@ 4951 @LENGTH@ 7


INS MethodDeclaration@@Iterator<V>, MethodName:sScan, ScanOptions options,  @TO@ TypeDeclaration@@[public]BoundSetOperations, [BoundKeyOperations<K>] @AT@ 1771 @LENGTH@ 27
---INS ParameterizedType@@Iterator<V> @TO@ MethodDeclaration@@Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 1759 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<V> @AT@ 1759 @LENGTH@ 8
------INS SimpleType@@V @TO@ ParameterizedType@@Iterator<V> @AT@ 1768 @LENGTH@ 1
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 1771 @LENGTH@ 5
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 1777 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 1777 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 1789 @LENGTH@ 7


UPD IfStatement@@if (i < uri.length() - 2) {  next=uri.charAt(i + 1);} else {  next='\u0000';} @TO@ if (i <= uri.length() - 2) {  next=uri.charAt(i + 1);} else {  next='\u0000';} @AT@ 6467 @LENGTH@ 153
---UPD InfixExpression@@i < uri.length() - 2 @TO@ i <= uri.length() - 2 @AT@ 6471 @LENGTH@ 20
------UPD Operator@@< @TO@ <= @AT@ 6472 @LENGTH@ 1


UPD MethodDeclaration@@public, String, MethodName:appendWithHeaders, String existing, Map oldHeaders, String next, Map newHeaders,  @TO@ public, String, MethodName:appendWithHeaders, String existing, Map<String,Integer> oldHeaders, String next, Map<String,Integer> newHeaders,  @AT@ 2271 @LENGTH@ 396
---UPD SingleVariableDeclaration@@Map oldHeaders @TO@ Map<String,Integer> oldHeaders @AT@ 2320 @LENGTH@ 14
------INS ParameterizedType@@Map<String,Integer> @TO@ SingleVariableDeclaration@@Map oldHeaders @AT@ 2189 @LENGTH@ 20
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2189 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2193 @LENGTH@ 6
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2201 @LENGTH@ 7
------DEL SimpleType@@Map @AT@ 2320 @LENGTH@ 3
---UPD SingleVariableDeclaration@@Map newHeaders @TO@ Map<String,Integer> newHeaders @AT@ 2349 @LENGTH@ 14
------INS ParameterizedType@@Map<String,Integer> @TO@ SingleVariableDeclaration@@Map newHeaders @AT@ 2235 @LENGTH@ 20
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2235 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2239 @LENGTH@ 6
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2247 @LENGTH@ 7
------DEL SimpleType@@Map @AT@ 2349 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:request.getOutputStream().write(body.getBytes("UTF-8")) @TO@ MethodInvocation:request.getOutputStream().write(body.getBytes(StandardCharsets.UTF_8)) @AT@ 13089 @LENGTH@ 56
---UPD MethodInvocation@@request.getOutputStream().write(body.getBytes("UTF-8")) @TO@ request.getOutputStream().write(body.getBytes(StandardCharsets.UTF_8)) @AT@ 13089 @LENGTH@ 55
------UPD SimpleName@@MethodName:write:[body.getBytes("UTF-8")] @TO@ MethodName:write:[body.getBytes(StandardCharsets.UTF_8)] @AT@ 13115 @LENGTH@ 29
---------UPD MethodInvocation@@body.getBytes("UTF-8") @TO@ body.getBytes(StandardCharsets.UTF_8) @AT@ 13121 @LENGTH@ 22
------------UPD SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 13126 @LENGTH@ 17
---------------DEL StringLiteral@@"UTF-8" @AT@ 13135 @LENGTH@ 7
---------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 13177 @LENGTH@ 22
------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 13177 @LENGTH@ 16
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 13194 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ Assignment:uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 7195 @LENGTH@ 45
---UPD Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 7195 @LENGTH@ 44
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 7201 @LENGTH@ 38
---------UPD SimpleName@@MethodName:encode:[uri] @TO@ MethodName:encodeHttpURI:[uri] @AT@ 7228 @LENGTH@ 11


UPD TypeDeclaration@@AMBean,  @TO@ [public]AMBean,  @AT@ 1174 @LENGTH@ 107
---INS Modifier@@public @TO@ TypeDeclaration@@AMBean,  @AT@ 1164 @LENGTH@ 6


INS MethodDeclaration@@protected, void, MethodName:addPropertyDirect, String key, Object value,  @TO@ TypeDeclaration@@[public, abstract]AbstractHierarchicalConfiguration, AbstractConfiguration[Cloneable, NodeKeyResolver<T>, HierarchicalConfiguration<T>] @AT@ 13352 @LENGTH@ 96
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:addPropertyDirect, String key, Object value,  @AT@ 13352 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:addPropertyDirect, String key, Object value,  @AT@ 13362 @LENGTH@ 4
---INS SimpleName@@MethodName:addPropertyDirect @TO@ MethodDeclaration@@protected, void, MethodName:addPropertyDirect, String key, Object value,  @AT@ 13367 @LENGTH@ 17
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@protected, void, MethodName:addPropertyDirect, String key, Object value,  @AT@ 13385 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 13385 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 13392 @LENGTH@ 3
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@protected, void, MethodName:addPropertyDirect, String key, Object value,  @AT@ 13397 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 13397 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 13404 @LENGTH@ 5


UPD IfStatement@@if (sessionId != null) {  builder.append("sessionId=<SESSION>");} @TO@ if (sessionId != null) {  builder.append("sessionId=<SESSION>");  if (builder.length() > 1) {    builder.append(", ");  }} @AT@ 2041 @LENGTH@ 68
---UPD Block@@ThenBody:{  builder.append("sessionId=<SESSION>");} @TO@ ThenBody:{  builder.append("sessionId=<SESSION>");  if (builder.length() > 1) {    builder.append(", ");  }} @AT@ 2062 @LENGTH@ 47
------MOV IfStatement@@if (builder.length() > 1) {  builder.append(", ");} @TO@ Block@@ThenBody:{  builder.append("sessionId=<SESSION>");} @AT@ 2112 @LENGTH@ 54


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]CopySource,  @TO@ [@Data, public]CopySource, AbstractDockerDTO @AT@ 811 @LENGTH@ 110
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]CopySource,  @AT@ 769 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 817 @LENGTH@ 47


MOV MethodDeclaration@@private, static, boolean, MethodName:probeClass, String name,  @TO@ TypeDeclaration@@[public]WsEndpoint, AhcEndpoint @AT@ 2195 @LENGTH@ 235


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 3129 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 3132 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 3132 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 3132 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 3139 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 3159 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 3163 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 3169 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 3331 @LENGTH@ 53


UPD ReturnStatement@@MethodInvocation:finalResult.cancel(false) @TO@ MethodInvocation:finalResult.cancel(true) @AT@ 10935 @LENGTH@ 33
---UPD MethodInvocation@@finalResult.cancel(false) @TO@ finalResult.cancel(true) @AT@ 10942 @LENGTH@ 25
------UPD SimpleName@@MethodName:cancel:[false] @TO@ MethodName:cancel:[true] @AT@ 10954 @LENGTH@ 13
---------UPD BooleanLiteral@@false @TO@ true @AT@ 10961 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**").and().authorizeRequests().antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @TO@ MethodInvocation:http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3751 @LENGTH@ 967
---UPD MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**").and().authorizeRequests().antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @TO@ http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3751 @LENGTH@ 966
------UPD MethodInvocation@@MethodName:antMatchers:["/photos/**", "/oauth/users/**", "/oauth/clients/**"] @TO@ MethodName:antMatchers:["/photos/**", "/oauth/users/**", "/oauth/clients/**", "/me"] @AT@ 3751 @LENGTH@ 93
---------INS StringLiteral@@"/me" @TO@ MethodInvocation@@MethodName:antMatchers:["/photos/**", "/oauth/users/**", "/oauth/clients/**"] @AT@ 3905 @LENGTH@ 5
------INS MethodInvocation@@MethodName:access:["#oauth2.hasScope('read')"] @TO@ MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**").and().authorizeRequests().antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3812 @LENGTH@ 194
---------INS StringLiteral@@"#oauth2.hasScope('read')" @TO@ MethodInvocation@@MethodName:access:["#oauth2.hasScope('read')"] @AT@ 3979 @LENGTH@ 26
------INS MethodInvocation@@MethodName:antMatchers:["/me"] @TO@ MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**").and().authorizeRequests().antMatchers("/photos").access("#oauth2.hasScope('read')").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read')").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3812 @LENGTH@ 159
---------INS StringLiteral@@"/me" @TO@ MethodInvocation@@MethodName:antMatchers:["/me"] @AT@ 3965 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:services.setRefreshTokenValiditySeconds(1000) @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTokenExpiry, Exception,  @AT@ 7096 @LENGTH@ 46
---INS MethodInvocation@@services.setRefreshTokenValiditySeconds(1000) @TO@ ExpressionStatement@@MethodInvocation:services.setRefreshTokenValiditySeconds(1000) @AT@ 7096 @LENGTH@ 45
------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.setRefreshTokenValiditySeconds(1000) @AT@ 7096 @LENGTH@ 8
------INS SimpleName@@MethodName:setRefreshTokenValiditySeconds:[1000] @TO@ MethodInvocation@@services.setRefreshTokenValiditySeconds(1000) @AT@ 7105 @LENGTH@ 36
---------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:setRefreshTokenValiditySeconds:[1000] @AT@ 7136 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2Request(parameters,getClientId(),authorities,approved,getScope(parameters),resourceIds,redirectUri,responseTypes,extensions) @TO@ ClassInstanceCreation:new OAuth2Request(parameters,getClientId(),authorities,approved,getScope(),resourceIds,redirectUri,responseTypes,extensions) @AT@ 4131 @LENGTH@ 154
---UPD ClassInstanceCreation@@OAuth2Request[parameters, getClientId(), authorities, approved, getScope(parameters), resourceIds, redirectUri, responseTypes, extensions] @TO@ OAuth2Request[parameters, getClientId(), authorities, approved, getScope(), resourceIds, redirectUri, responseTypes, extensions] @AT@ 4138 @LENGTH@ 146
------UPD MethodInvocation@@getScope(parameters) @TO@ MethodName:getScope:[] @AT@ 4206 @LENGTH@ 20
---------DEL SimpleName@@MethodName:getScope:[parameters] @AT@ 4206 @LENGTH@ 20
------------DEL SimpleName@@parameters @AT@ 4215 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ Assignment:queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 7208 @LENGTH@ 61
---UPD Assignment@@queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 7208 @LENGTH@ 60
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(queryString) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 7222 @LENGTH@ 46
---------UPD SimpleName@@MethodName:encode:[queryString] @TO@ MethodName:encodeHttpURI:[queryString] @AT@ 7249 @LENGTH@ 19


UPD Block@@ThenBody:{  MiniYarnCluster annotation=annotationDescriptor.getAnnotation();  String clusterName=annotation.clusterName();  String configName=annotation.configName();  String id=annotation.id();  int nodeCount=annotation.nodes();  BeanDefinitionBuilder builder=BeanDefinitionBuilder.genericBeanDefinition(ClusterDelegatingFactoryBean.class);  builder.addPropertyValue("id",id);  builder.addPropertyValue("nodes",nodeCount);  context.registerBeanDefinition(clusterName,builder.getBeanDefinition());  builder=BeanDefinitionBuilder.genericBeanDefinition(ConfigurationDelegatingFactoryBean.class);  builder.addPropertyReference("cluster",clusterName);  context.registerBeanDefinition(configName,builder.getBeanDefinition());} @TO@ ThenBody:{  String clusterName=annotationDescriptor.getAnnotationAttributes().getString("clusterName");  String configName=annotationDescriptor.getAnnotationAttributes().getString("configName");  String id=annotationDescriptor.getAnnotationAttributes().getString("id");  int nodeCount=annotationDescriptor.getAnnotationAttributes().getNumber("nodes");  BeanDefinitionBuilder builder=BeanDefinitionBuilder.genericBeanDefinition(ClusterDelegatingFactoryBean.class);  builder.addPropertyValue("id",id);  builder.addPropertyValue("nodes",nodeCount);  context.registerBeanDefinition(clusterName,builder.getBeanDefinition());  builder=BeanDefinitionBuilder.genericBeanDefinition(ConfigurationDelegatingFactoryBean.class);  builder.addPropertyReference("cluster",clusterName);  context.registerBeanDefinition(configName,builder.getBeanDefinition());} @AT@ 1886 @LENGTH@ 772
---DEL VariableDeclarationStatement@@MiniYarnCluster annotation=annotationDescriptor.getAnnotation(); @AT@ 1891 @LENGTH@ 66
------DEL SimpleType@@MiniYarnCluster @AT@ 1891 @LENGTH@ 15
------DEL VariableDeclarationFragment@@annotation=annotationDescriptor.getAnnotation() @AT@ 1907 @LENGTH@ 49
---------DEL SimpleName@@annotation @AT@ 1907 @LENGTH@ 10
---------DEL MethodInvocation@@annotationDescriptor.getAnnotation() @AT@ 1920 @LENGTH@ 36
------------DEL SimpleName@@Name:annotationDescriptor @AT@ 1920 @LENGTH@ 20
------------DEL SimpleName@@MethodName:getAnnotation:[] @AT@ 1941 @LENGTH@ 15
---UPD VariableDeclarationStatement@@String clusterName=annotation.clusterName(); @TO@ String clusterName=annotationDescriptor.getAnnotationAttributes().getString("clusterName"); @AT@ 1961 @LENGTH@ 46
------UPD VariableDeclarationFragment@@clusterName=annotation.clusterName() @TO@ clusterName=annotationDescriptor.getAnnotationAttributes().getString("clusterName") @AT@ 1968 @LENGTH@ 38
---------UPD MethodInvocation@@annotation.clusterName() @TO@ annotationDescriptor.getAnnotationAttributes().getString("clusterName") @AT@ 1982 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getAnnotationAttributes:[] @TO@ MethodInvocation@@annotation.clusterName() @AT@ 1912 @LENGTH@ 46
------------UPD SimpleName@@Name:annotation @TO@ Name:annotationDescriptor @AT@ 1982 @LENGTH@ 10
------------UPD SimpleName@@MethodName:clusterName:[] @TO@ MethodName:getString:["clusterName"] @AT@ 1993 @LENGTH@ 13
---------------INS StringLiteral@@"clusterName" @TO@ SimpleName@@MethodName:clusterName:[] @AT@ 1969 @LENGTH@ 13
---UPD VariableDeclarationStatement@@String configName=annotation.configName(); @TO@ String configName=annotationDescriptor.getAnnotationAttributes().getString("configName"); @AT@ 2011 @LENGTH@ 44
------UPD VariableDeclarationFragment@@configName=annotation.configName() @TO@ configName=annotationDescriptor.getAnnotationAttributes().getString("configName") @AT@ 2018 @LENGTH@ 36
---------UPD MethodInvocation@@annotation.configName() @TO@ annotationDescriptor.getAnnotationAttributes().getString("configName") @AT@ 2031 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getAnnotationAttributes:[] @TO@ MethodInvocation@@annotation.configName() @AT@ 2008 @LENGTH@ 46
------------UPD SimpleName@@Name:annotation @TO@ Name:annotationDescriptor @AT@ 2031 @LENGTH@ 10
------------UPD SimpleName@@MethodName:configName:[] @TO@ MethodName:getString:["configName"] @AT@ 2042 @LENGTH@ 12
---------------INS StringLiteral@@"configName" @TO@ SimpleName@@MethodName:configName:[] @AT@ 2065 @LENGTH@ 12
---UPD VariableDeclarationStatement@@String id=annotation.id(); @TO@ String id=annotationDescriptor.getAnnotationAttributes().getString("id"); @AT@ 2059 @LENGTH@ 28
------UPD VariableDeclarationFragment@@id=annotation.id() @TO@ id=annotationDescriptor.getAnnotationAttributes().getString("id") @AT@ 2066 @LENGTH@ 20
---------UPD MethodInvocation@@annotation.id() @TO@ annotationDescriptor.getAnnotationAttributes().getString("id") @AT@ 2071 @LENGTH@ 15
------------UPD SimpleName@@Name:annotation @TO@ Name:annotationDescriptor @AT@ 2071 @LENGTH@ 10
------------UPD SimpleName@@MethodName:id:[] @TO@ MethodName:getString:["id"] @AT@ 2082 @LENGTH@ 4
---------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:id:[] @AT@ 2152 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getAnnotationAttributes:[] @TO@ MethodInvocation@@annotation.id() @AT@ 2095 @LENGTH@ 46
---UPD VariableDeclarationStatement@@int nodeCount=annotation.nodes(); @TO@ int nodeCount=annotationDescriptor.getAnnotationAttributes().getNumber("nodes"); @AT@ 2091 @LENGTH@ 35
------UPD VariableDeclarationFragment@@nodeCount=annotation.nodes() @TO@ nodeCount=annotationDescriptor.getAnnotationAttributes().getNumber("nodes") @AT@ 2095 @LENGTH@ 30
---------UPD MethodInvocation@@annotation.nodes() @TO@ annotationDescriptor.getAnnotationAttributes().getNumber("nodes") @AT@ 2107 @LENGTH@ 18
------------UPD SimpleName@@Name:annotation @TO@ Name:annotationDescriptor @AT@ 2107 @LENGTH@ 10
------------UPD SimpleName@@MethodName:nodes:[] @TO@ MethodName:getNumber:["nodes"] @AT@ 2118 @LENGTH@ 7
---------------INS StringLiteral@@"nodes" @TO@ SimpleName@@MethodName:nodes:[] @AT@ 2235 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:getAnnotationAttributes:[] @TO@ MethodInvocation@@annotation.nodes() @AT@ 2178 @LENGTH@ 46


INS MethodDeclaration@@public, Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @TO@ TypeDeclaration@@[public]DefaultStringRedisConnection, [StringRedisConnection] @AT@ 63338 @LENGTH@ 322
---INS Modifier@@public @TO@ MethodDeclaration@@public, Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 63338 @LENGTH@ 6
---INS ParameterizedType@@Cursor<String> @TO@ MethodDeclaration@@public, Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 63345 @LENGTH@ 14
------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<String> @AT@ 63345 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Cursor<String> @AT@ 63352 @LENGTH@ 6
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@public, Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 63360 @LENGTH@ 5
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 63366 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 63366 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 63373 @LENGTH@ 3
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@public, Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 63378 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 63378 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 63390 @LENGTH@ 7
---INS ReturnStatement@@ClassInstanceCreation:new ConvertingCursor<byte[],String>(this.delegate.sScan(this.serialize(key),options),new Converter<byte[],String>(){
  @Override public String convert(  byte[] source){
    return serializer.deserialize(source);
  }
}
) @TO@ MethodDeclaration@@public, Cursor<String>, MethodName:sScan, String key, ScanOptions options,  @AT@ 63404 @LENGTH@ 252
------INS ClassInstanceCreation@@ConvertingCursor<byte[],String>[this.delegate.sScan(this.serialize(key),options), new Converter<byte[],String>(){
  @Override public String convert(  byte[] source){
    return serializer.deserialize(source);
  }
}
] @TO@ ReturnStatement@@ClassInstanceCreation:new ConvertingCursor<byte[],String>(this.delegate.sScan(this.serialize(key),options),new Converter<byte[],String>(){
  @Override public String convert(  byte[] source){
    return serializer.deserialize(source);
  }
}
) @AT@ 63411 @LENGTH@ 244
---------INS New@@new @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],String>[this.delegate.sScan(this.serialize(key),options), new Converter<byte[],String>(){
  @Override public String convert(  byte[] source){
    return serializer.deserialize(source);
  }
}
] @AT@ 63411 @LENGTH@ 3
---------INS ParameterizedType@@ConvertingCursor<byte[],String> @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],String>[this.delegate.sScan(this.serialize(key),options), new Converter<byte[],String>(){
  @Override public String convert(  byte[] source){
    return serializer.deserialize(source);
  }
}
] @AT@ 63415 @LENGTH@ 32
------------INS SimpleType@@ConvertingCursor @TO@ ParameterizedType@@ConvertingCursor<byte[],String> @AT@ 63415 @LENGTH@ 16
------------INS ArrayType@@byte[] @TO@ ParameterizedType@@ConvertingCursor<byte[],String> @AT@ 63432 @LENGTH@ 6
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 63432 @LENGTH@ 4
------------INS SimpleType@@String @TO@ ParameterizedType@@ConvertingCursor<byte[],String> @AT@ 63440 @LENGTH@ 6
---------INS MethodInvocation@@this.delegate.sScan(this.serialize(key),options) @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],String>[this.delegate.sScan(this.serialize(key),options), new Converter<byte[],String>(){
  @Override public String convert(  byte[] source){
    return serializer.deserialize(source);
  }
}
] @AT@ 63448 @LENGTH@ 49
------------INS FieldAccess@@this.delegate @TO@ MethodInvocation@@this.delegate.sScan(this.serialize(key),options) @AT@ 63448 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 63448 @LENGTH@ 4
---------------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 63453 @LENGTH@ 8
------------INS SimpleName@@MethodName:sScan:[this.serialize(key), options] @TO@ MethodInvocation@@this.delegate.sScan(this.serialize(key),options) @AT@ 63462 @LENGTH@ 35
---------------INS MethodInvocation@@this.serialize(key) @TO@ SimpleName@@MethodName:sScan:[this.serialize(key), options] @AT@ 63468 @LENGTH@ 19
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.serialize(key) @AT@ 63468 @LENGTH@ 4
------------------INS SimpleName@@MethodName:serialize:[key] @TO@ MethodInvocation@@this.serialize(key) @AT@ 63473 @LENGTH@ 14
---------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:serialize:[key] @AT@ 63483 @LENGTH@ 3
---------------INS SimpleName@@options @TO@ SimpleName@@MethodName:sScan:[this.serialize(key), options] @AT@ 63489 @LENGTH@ 7
---------INS ClassInstanceCreation@@Converter<byte[],String>[] @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],String>[this.delegate.sScan(this.serialize(key),options), new Converter<byte[],String>(){
  @Override public String convert(  byte[] source){
    return serializer.deserialize(source);
  }
}
] @AT@ 63503 @LENGTH@ 151
------------INS New@@new @TO@ ClassInstanceCreation@@Converter<byte[],String>[] @AT@ 63503 @LENGTH@ 3
------------INS ParameterizedType@@Converter<byte[],String> @TO@ ClassInstanceCreation@@Converter<byte[],String>[] @AT@ 63507 @LENGTH@ 25
---------------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<byte[],String> @AT@ 63507 @LENGTH@ 9
---------------INS ArrayType@@byte[] @TO@ ParameterizedType@@Converter<byte[],String> @AT@ 63517 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 63517 @LENGTH@ 4
---------------INS SimpleType@@String @TO@ ParameterizedType@@Converter<byte[],String> @AT@ 63525 @LENGTH@ 6
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Converter<byte[],String>[] @AT@ 63535 @LENGTH@ 119
---------------INS MethodDeclaration@@public, String, MethodName:convert, byte[] source,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 63558 @LENGTH@ 90
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:convert, byte[] source,  @AT@ 63558 @LENGTH@ 6
------------------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:convert, byte[] source,  @AT@ 63565 @LENGTH@ 6
------------------INS SimpleName@@MethodName:convert @TO@ MethodDeclaration@@public, String, MethodName:convert, byte[] source,  @AT@ 63572 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@byte[] source @TO@ MethodDeclaration@@public, String, MethodName:convert, byte[] source,  @AT@ 63580 @LENGTH@ 13
---------------------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] source @AT@ 63580 @LENGTH@ 6
------------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 63580 @LENGTH@ 4
---------------------INS SimpleName@@source @TO@ SingleVariableDeclaration@@byte[] source @AT@ 63587 @LENGTH@ 6
------------------INS ReturnStatement@@MethodInvocation:serializer.deserialize(source) @TO@ MethodDeclaration@@public, String, MethodName:convert, byte[] source,  @AT@ 63603 @LENGTH@ 38
---------------------INS MethodInvocation@@serializer.deserialize(source) @TO@ ReturnStatement@@MethodInvocation:serializer.deserialize(source) @AT@ 63610 @LENGTH@ 30
------------------------INS SimpleName@@Name:serializer @TO@ MethodInvocation@@serializer.deserialize(source) @AT@ 63610 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:deserialize:[source] @TO@ MethodInvocation@@serializer.deserialize(source) @AT@ 63621 @LENGTH@ 19
---------------------------INS SimpleName@@source @TO@ SimpleName@@MethodName:deserialize:[source] @AT@ 63633 @LENGTH@ 6


UPD EnhancedForStatement@@for (BeanPropertyWriter writer : builder.getProperties()) {  PersistentProperty<?> persistentProperty=entity.getPersistentProperty(writer.getName());  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }  result.add(writer);} @TO@ for (BeanPropertyWriter writer : builder.getProperties()) {  PersistentProperty<?> persistentProperty=entity.getPersistentProperty(writer.getName());  if (persistentProperty != null) {    if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {      continue;    }    if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {      continue;    }  }  result.add(writer);} @AT@ 10538 @LENGTH@ 511
---INS IfStatement@@if (persistentProperty != null) {  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }} @TO@ EnhancedForStatement@@for (BeanPropertyWriter writer : builder.getProperties()) {  PersistentProperty<?> persistentProperty=entity.getPersistentProperty(writer.getName());  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }  result.add(writer);} @AT@ 10699 @LENGTH@ 373
------INS InfixExpression@@persistentProperty != null @TO@ IfStatement@@if (persistentProperty != null) {  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }} @AT@ 10703 @LENGTH@ 26
---------INS SimpleName@@persistentProperty @TO@ InfixExpression@@persistentProperty != null @AT@ 10703 @LENGTH@ 18
---------INS Operator@@!= @TO@ InfixExpression@@persistentProperty != null @AT@ 10721 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@persistentProperty != null @AT@ 10725 @LENGTH@ 4
------INS Block@@ThenBody:{  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }} @TO@ IfStatement@@if (persistentProperty != null) {  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }} @AT@ 10731 @LENGTH@ 341
---------MOV IfStatement@@if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {  continue;} @TO@ Block@@ThenBody:{  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }} @AT@ 10733 @LENGTH@ 113
---------MOV IfStatement@@if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {  continue;} @TO@ Block@@ThenBody:{  if (persistentProperty.isAssociation() && resourceMetadata.isExported(persistentProperty)) {    continue;  }  if (persistentProperty.isIdProperty() && !configuration.isIdExposedFor(entity.getType())) {    continue;  }} @AT@ 10907 @LENGTH@ 112


UPD FieldDeclaration@@private, String, [evn] @TO@ private, List<String>, [env] @AT@ 1687 @LENGTH@ 19
---DEL SimpleType@@String @AT@ 1695 @LENGTH@ 6
---UPD VariableDeclarationFragment@@evn @TO@ env @AT@ 1702 @LENGTH@ 3
------UPD SimpleName@@evn @TO@ env @AT@ 1702 @LENGTH@ 3
---INS ParameterizedType@@List<String> @TO@ FieldDeclaration@@private, String, [evn] @AT@ 1718 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1718 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1723 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, String, [ENCODING="utf-8"] @TO@ private, static, final, Charset, [ENCODING=StandardCharsets.UTF_8] @AT@ 2524 @LENGTH@ 47
---UPD SimpleType@@String @TO@ Charset @AT@ 2545 @LENGTH@ 6
---UPD VariableDeclarationFragment@@ENCODING="utf-8" @TO@ ENCODING=StandardCharsets.UTF_8 @AT@ 2552 @LENGTH@ 18
------DEL StringLiteral@@"utf-8" @AT@ 2563 @LENGTH@ 7
------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ VariableDeclarationFragment@@ENCODING="utf-8" @AT@ 2639 @LENGTH@ 22
---------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2639 @LENGTH@ 16
---------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2656 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 34318 @LENGTH@ 444
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34318 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34325 @LENGTH@ 4
---INS SimpleName@@MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34330 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:firstUser.setManager(thirdUser) @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34404 @LENGTH@ 32
------INS MethodInvocation@@firstUser.setManager(thirdUser) @TO@ ExpressionStatement@@MethodInvocation:firstUser.setManager(thirdUser) @AT@ 34404 @LENGTH@ 31
---------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.setManager(thirdUser) @AT@ 34404 @LENGTH@ 9
---------INS SimpleName@@MethodName:setManager:[thirdUser] @TO@ MethodInvocation@@firstUser.setManager(thirdUser) @AT@ 34414 @LENGTH@ 21
------------INS SimpleName@@thirdUser @TO@ SimpleName@@MethodName:setManager:[thirdUser] @AT@ 34425 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:thirdUser.setManager(fourthUser) @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34440 @LENGTH@ 33
------INS MethodInvocation@@thirdUser.setManager(fourthUser) @TO@ ExpressionStatement@@MethodInvocation:thirdUser.setManager(fourthUser) @AT@ 34440 @LENGTH@ 32
---------INS SimpleName@@Name:thirdUser @TO@ MethodInvocation@@thirdUser.setManager(fourthUser) @AT@ 34440 @LENGTH@ 9
---------INS SimpleName@@MethodName:setManager:[fourthUser] @TO@ MethodInvocation@@thirdUser.setManager(fourthUser) @AT@ 34450 @LENGTH@ 22
------------INS SimpleName@@fourthUser @TO@ SimpleName@@MethodName:setManager:[fourthUser] @AT@ 34461 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34479 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 34479 @LENGTH@ 16
---INS VariableDeclarationStatement@@Page<User> page=repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))); @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34502 @LENGTH@ 152
------INS ParameterizedType@@Page<User> @TO@ VariableDeclarationStatement@@Page<User> page=repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))); @AT@ 34502 @LENGTH@ 10
---------INS SimpleType@@Page @TO@ ParameterizedType@@Page<User> @AT@ 34502 @LENGTH@ 4
---------INS SimpleType@@User @TO@ ParameterizedType@@Page<User> @AT@ 34507 @LENGTH@ 4
------INS VariableDeclarationFragment@@page=repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))) @TO@ VariableDeclarationStatement@@Page<User> page=repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))); @AT@ 34513 @LENGTH@ 140
---------INS SimpleName@@page @TO@ VariableDeclarationFragment@@page=repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))) @AT@ 34513 @LENGTH@ 4
---------INS MethodInvocation@@repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))) @TO@ VariableDeclarationFragment@@page=repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))) @AT@ 34520 @LENGTH@ 133
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))) @AT@ 34520 @LENGTH@ 10
------------INS SimpleName@@MethodName:findAll:[new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))] @TO@ MethodInvocation@@repository.findAll(new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))) @AT@ 34531 @LENGTH@ 122
---------------INS ClassInstanceCreation@@PageRequest[0, 10, new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase())] @TO@ SimpleName@@MethodName:findAll:[new PageRequest(0,10,new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()))] @AT@ 34539 @LENGTH@ 113
------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 10, new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase())] @AT@ 34539 @LENGTH@ 3
------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 10, new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase())] @AT@ 34543 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 10, new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase())] @AT@ 34555 @LENGTH@ 1
------------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@PageRequest[0, 10, new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase())] @AT@ 34558 @LENGTH@ 2
------------------INS ClassInstanceCreation@@Sort[new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()] @TO@ ClassInstanceCreation@@PageRequest[0, 10, new Sort(new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase())] @AT@ 34570 @LENGTH@ 81
---------------------INS New@@new @TO@ ClassInstanceCreation@@Sort[new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()] @AT@ 34570 @LENGTH@ 3
---------------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort[new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()] @AT@ 34574 @LENGTH@ 4
---------------------INS MethodInvocation@@new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase() @TO@ ClassInstanceCreation@@Sort[new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase()] @AT@ 34579 @LENGTH@ 71
------------------------INS ClassInstanceCreation@@Sort.Order[Direction.ASC, "manager.manager.firstname"] @TO@ MethodInvocation@@new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase() @AT@ 34579 @LENGTH@ 58
---------------------------INS New@@new @TO@ ClassInstanceCreation@@Sort.Order[Direction.ASC, "manager.manager.firstname"] @AT@ 34579 @LENGTH@ 3
---------------------------INS SimpleType@@Sort.Order @TO@ ClassInstanceCreation@@Sort.Order[Direction.ASC, "manager.manager.firstname"] @AT@ 34583 @LENGTH@ 10
---------------------------INS QualifiedName@@Direction.ASC @TO@ ClassInstanceCreation@@Sort.Order[Direction.ASC, "manager.manager.firstname"] @AT@ 34594 @LENGTH@ 13
------------------------------INS SimpleName@@Direction @TO@ QualifiedName@@Direction.ASC @AT@ 34594 @LENGTH@ 9
------------------------------INS SimpleName@@ASC @TO@ QualifiedName@@Direction.ASC @AT@ 34604 @LENGTH@ 3
---------------------------INS StringLiteral@@"manager.manager.firstname" @TO@ ClassInstanceCreation@@Sort.Order[Direction.ASC, "manager.manager.firstname"] @AT@ 34609 @LENGTH@ 27
------------------------INS SimpleName@@MethodName:ignoreCase:[] @TO@ MethodInvocation@@new Sort.Order(Direction.ASC,"manager.manager.firstname").ignoreCase() @AT@ 34638 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(page.getContent(),hasSize(4)) @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34660 @LENGTH@ 42
------INS MethodInvocation@@assertThat(page.getContent(),hasSize(4)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(page.getContent(),hasSize(4)) @AT@ 34660 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertThat:[page.getContent(), hasSize(4)] @TO@ MethodInvocation@@assertThat(page.getContent(),hasSize(4)) @AT@ 34660 @LENGTH@ 41
------------INS MethodInvocation@@page.getContent() @TO@ SimpleName@@MethodName:assertThat:[page.getContent(), hasSize(4)] @AT@ 34671 @LENGTH@ 17
---------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getContent() @AT@ 34671 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getContent:[] @TO@ MethodInvocation@@page.getContent() @AT@ 34676 @LENGTH@ 12
------------INS MethodInvocation@@hasSize(4) @TO@ SimpleName@@MethodName:assertThat:[page.getContent(), hasSize(4)] @AT@ 34690 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[4] @TO@ MethodInvocation@@hasSize(4) @AT@ 34690 @LENGTH@ 10
------------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:hasSize:[4] @AT@ 34698 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[4] @TO@ MethodInvocation@@hasSize(4) @AT@ 34690 @LENGTH@ 10
------------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:hasSize:[4] @AT@ 34698 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(page.getContent().get(3),is(firstUser)) @TO@ MethodDeclaration@@public, void, MethodName:sortByNestedAssociationPropertyWithSortOrderIgnoreCaseInPageable,  @AT@ 34706 @LENGTH@ 52
------INS MethodInvocation@@assertThat(page.getContent().get(3),is(firstUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(page.getContent().get(3),is(firstUser)) @AT@ 34706 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[page.getContent().get(3), is(firstUser)] @TO@ MethodInvocation@@assertThat(page.getContent().get(3),is(firstUser)) @AT@ 34706 @LENGTH@ 51
------------INS MethodInvocation@@page.getContent().get(3) @TO@ SimpleName@@MethodName:assertThat:[page.getContent().get(3), is(firstUser)] @AT@ 34717 @LENGTH@ 24
---------------INS MethodInvocation@@MethodName:getContent:[] @TO@ MethodInvocation@@page.getContent().get(3) @AT@ 34717 @LENGTH@ 17
---------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getContent().get(3) @AT@ 34717 @LENGTH@ 4
---------------INS SimpleName@@MethodName:get:[3] @TO@ MethodInvocation@@page.getContent().get(3) @AT@ 34735 @LENGTH@ 6
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:get:[3] @AT@ 34739 @LENGTH@ 1
------------INS MethodInvocation@@is(firstUser) @TO@ SimpleName@@MethodName:assertThat:[page.getContent().get(3), is(firstUser)] @AT@ 34743 @LENGTH@ 13
---------------INS SimpleName@@MethodName:is:[firstUser] @TO@ MethodInvocation@@is(firstUser) @AT@ 34743 @LENGTH@ 13
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:is:[firstUser] @AT@ 34746 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[firstUser] @TO@ MethodInvocation@@is(firstUser) @AT@ 34743 @LENGTH@ 13
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:is:[firstUser] @AT@ 34746 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:saveState() @TO@ MethodDeclaration@@public, Serializable, MethodName:getUserEventState,  @AT@ 4094 @LENGTH@ 12
---INS MethodInvocation@@MethodName:saveState:[] @TO@ ExpressionStatement@@MethodInvocation:saveState() @AT@ 4094 @LENGTH@ 11


INS MethodDeclaration@@List<Profile>, MethodName:findByType, String type,  @TO@ TypeDeclaration@@[public]ProfileRepository, [PagingAndSortingRepository<Profile,String>] @AT@ 933 @LENGTH@ 24
---INS ParameterizedType@@List<Profile> @TO@ MethodDeclaration@@List<Profile>, MethodName:findByType, String type,  @AT@ 919 @LENGTH@ 13
------INS SimpleType@@List @TO@ ParameterizedType@@List<Profile> @AT@ 919 @LENGTH@ 4
------INS SimpleType@@Profile @TO@ ParameterizedType@@List<Profile> @AT@ 924 @LENGTH@ 7
---INS SimpleName@@MethodName:findByType @TO@ MethodDeclaration@@List<Profile>, MethodName:findByType, String type,  @AT@ 933 @LENGTH@ 10
---INS SingleVariableDeclaration@@String type @TO@ MethodDeclaration@@List<Profile>, MethodName:findByType, String type,  @AT@ 944 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String type @AT@ 944 @LENGTH@ 6
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@String type @AT@ 951 @LENGTH@ 4


UPD Block@@ThenBody:{  BeanDefinition beanDefintion=getBeanDefinitionRegistry().getBeanDefinition(JOB_PARAMETERS_BEAN_DEFINITION_NAME);  Properties properties=(Properties)beanDefintion.getConstructorArgumentValues().getGenericArgumentValue(Properties.class).getValue();  if (properties == null) {    return new Properties();  }  jobParameters.putAll(properties);} @TO@ ThenBody:{  BeanDefinition beanDefintion=getBeanDefinitionRegistry().getBeanDefinition(JOB_PARAMETERS_BEAN_DEFINITION_NAME);  Properties properties=(Properties)beanDefintion.getConstructorArgumentValues().getGenericArgumentValue(Properties.class).getValue();  if (properties == null) {    return new Properties();  }  Enumeration<?> propertyNames=properties.propertyNames();  while (propertyNames.hasMoreElements()) {    String curName=(String)propertyNames.nextElement();    jobParameters.put(curName,properties.getProperty(curName));  }} @AT@ 4894 @LENGTH@ 377
---UPD ExpressionStatement@@MethodInvocation:jobParameters.putAll(properties) @TO@ MethodInvocation:jobParameters.put(curName,properties.getProperty(curName)) @AT@ 5234 @LENGTH@ 33
---INS VariableDeclarationStatement@@Enumeration<?> propertyNames=properties.propertyNames(); @TO@ Block@@ThenBody:{  BeanDefinition beanDefintion=getBeanDefinitionRegistry().getBeanDefinition(JOB_PARAMETERS_BEAN_DEFINITION_NAME);  Properties properties=(Properties)beanDefintion.getConstructorArgumentValues().getGenericArgumentValue(Properties.class).getValue();  if (properties == null) {    return new Properties();  }  jobParameters.putAll(properties);} @AT@ 5265 @LENGTH@ 58
------INS ParameterizedType@@Enumeration<?> @TO@ VariableDeclarationStatement@@Enumeration<?> propertyNames=properties.propertyNames(); @AT@ 5265 @LENGTH@ 14
---------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<?> @AT@ 5265 @LENGTH@ 11
---------INS WildcardType@@? @TO@ ParameterizedType@@Enumeration<?> @AT@ 5277 @LENGTH@ 1
------INS VariableDeclarationFragment@@propertyNames=properties.propertyNames() @TO@ VariableDeclarationStatement@@Enumeration<?> propertyNames=properties.propertyNames(); @AT@ 5280 @LENGTH@ 42
---------INS SimpleName@@propertyNames @TO@ VariableDeclarationFragment@@propertyNames=properties.propertyNames() @AT@ 5280 @LENGTH@ 13
---------INS MethodInvocation@@properties.propertyNames() @TO@ VariableDeclarationFragment@@propertyNames=properties.propertyNames() @AT@ 5296 @LENGTH@ 26
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.propertyNames() @AT@ 5296 @LENGTH@ 10
------------INS SimpleName@@MethodName:propertyNames:[] @TO@ MethodInvocation@@properties.propertyNames() @AT@ 5307 @LENGTH@ 15
---INS WhileStatement@@while (propertyNames.hasMoreElements()) {  String curName=(String)propertyNames.nextElement();  jobParameters.put(curName,properties.getProperty(curName));} @TO@ Block@@ThenBody:{  BeanDefinition beanDefintion=getBeanDefinitionRegistry().getBeanDefinition(JOB_PARAMETERS_BEAN_DEFINITION_NAME);  Properties properties=(Properties)beanDefintion.getConstructorArgumentValues().getGenericArgumentValue(Properties.class).getValue();  if (properties == null) {    return new Properties();  }  jobParameters.putAll(properties);} @AT@ 5328 @LENGTH@ 169
------INS MethodInvocation@@propertyNames.hasMoreElements() @TO@ WhileStatement@@while (propertyNames.hasMoreElements()) {  String curName=(String)propertyNames.nextElement();  jobParameters.put(curName,properties.getProperty(curName));} @AT@ 5334 @LENGTH@ 31
---------INS SimpleName@@Name:propertyNames @TO@ MethodInvocation@@propertyNames.hasMoreElements() @AT@ 5334 @LENGTH@ 13
---------INS SimpleName@@MethodName:hasMoreElements:[] @TO@ MethodInvocation@@propertyNames.hasMoreElements() @AT@ 5348 @LENGTH@ 17
------INS Block@@WhileBody:{  String curName=(String)propertyNames.nextElement();  jobParameters.put(curName,properties.getProperty(curName));} @TO@ WhileStatement@@while (propertyNames.hasMoreElements()) {  String curName=(String)propertyNames.nextElement();  jobParameters.put(curName,properties.getProperty(curName));} @AT@ 5367 @LENGTH@ 130
---------MOV ExpressionStatement@@MethodInvocation:jobParameters.putAll(properties) @TO@ Block@@WhileBody:{  String curName=(String)propertyNames.nextElement();  jobParameters.put(curName,properties.getProperty(curName));} @AT@ 5234 @LENGTH@ 33
------------UPD MethodInvocation@@jobParameters.putAll(properties) @TO@ jobParameters.put(curName,properties.getProperty(curName)) @AT@ 5234 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:putAll:[properties] @TO@ MethodName:put:[curName, properties.getProperty(curName)] @AT@ 5248 @LENGTH@ 18
------------------DEL SimpleName@@properties @AT@ 5255 @LENGTH@ 10
------------------INS SimpleName@@curName @TO@ SimpleName@@MethodName:putAll:[properties] @AT@ 5450 @LENGTH@ 7
------------------INS MethodInvocation@@properties.getProperty(curName) @TO@ SimpleName@@MethodName:putAll:[properties] @AT@ 5459 @LENGTH@ 31
---------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getProperty(curName) @AT@ 5459 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getProperty:[curName] @TO@ MethodInvocation@@properties.getProperty(curName) @AT@ 5470 @LENGTH@ 20
------------------------INS SimpleName@@curName @TO@ SimpleName@@MethodName:getProperty:[curName] @AT@ 5482 @LENGTH@ 7
---------INS VariableDeclarationStatement@@String curName=(String)propertyNames.nextElement(); @TO@ Block@@WhileBody:{  String curName=(String)propertyNames.nextElement();  jobParameters.put(curName,properties.getProperty(curName));} @AT@ 5373 @LENGTH@ 54
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String curName=(String)propertyNames.nextElement(); @AT@ 5373 @LENGTH@ 6
------------INS VariableDeclarationFragment@@curName=(String)propertyNames.nextElement() @TO@ VariableDeclarationStatement@@String curName=(String)propertyNames.nextElement(); @AT@ 5380 @LENGTH@ 46
---------------INS SimpleName@@curName @TO@ VariableDeclarationFragment@@curName=(String)propertyNames.nextElement() @AT@ 5380 @LENGTH@ 7
---------------INS CastExpression@@(String)propertyNames.nextElement() @TO@ VariableDeclarationFragment@@curName=(String)propertyNames.nextElement() @AT@ 5390 @LENGTH@ 36
------------------INS SimpleType@@String @TO@ CastExpression@@(String)propertyNames.nextElement() @AT@ 5391 @LENGTH@ 6
------------------INS MethodInvocation@@propertyNames.nextElement() @TO@ CastExpression@@(String)propertyNames.nextElement() @AT@ 5399 @LENGTH@ 27
---------------------INS SimpleName@@Name:propertyNames @TO@ MethodInvocation@@propertyNames.nextElement() @AT@ 5399 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:nextElement:[] @TO@ MethodInvocation@@propertyNames.nextElement() @AT@ 5413 @LENGTH@ 13


INS MethodDeclaration@@public, PhotoServiceUserController, MethodName:photoServiceUserController, PhotoService photoService,  @TO@ TypeDeclaration@@[@Configuration, @EnableWebMvc, public]WebMvcConfig, WebMvcConfigurerAdapter @AT@ 3271 @LENGTH@ 234
---INS Modifier@@public @TO@ MethodDeclaration@@public, PhotoServiceUserController, MethodName:photoServiceUserController, PhotoService photoService,  @AT@ 3271 @LENGTH@ 6
---INS SimpleType@@PhotoServiceUserController @TO@ MethodDeclaration@@public, PhotoServiceUserController, MethodName:photoServiceUserController, PhotoService photoService,  @AT@ 3278 @LENGTH@ 26
---INS SimpleName@@MethodName:photoServiceUserController @TO@ MethodDeclaration@@public, PhotoServiceUserController, MethodName:photoServiceUserController, PhotoService photoService,  @AT@ 3305 @LENGTH@ 26
---INS SingleVariableDeclaration@@PhotoService photoService @TO@ MethodDeclaration@@public, PhotoServiceUserController, MethodName:photoServiceUserController, PhotoService photoService,  @AT@ 3332 @LENGTH@ 25
------INS SimpleType@@PhotoService @TO@ SingleVariableDeclaration@@PhotoService photoService @AT@ 3332 @LENGTH@ 12
------INS SimpleName@@photoService @TO@ SingleVariableDeclaration@@PhotoService photoService @AT@ 3345 @LENGTH@ 12
---INS VariableDeclarationStatement@@PhotoServiceUserController photoServiceUserController=new PhotoServiceUserController(); @TO@ MethodDeclaration@@public, PhotoServiceUserController, MethodName:photoServiceUserController, PhotoService photoService,  @AT@ 3368 @LENGTH@ 89
------INS SimpleType@@PhotoServiceUserController @TO@ VariableDeclarationStatement@@PhotoServiceUserController photoServiceUserController=new PhotoServiceUserController(); @AT@ 3368 @LENGTH@ 26
------INS VariableDeclarationFragment@@photoServiceUserController=new PhotoServiceUserController() @TO@ VariableDeclarationStatement@@PhotoServiceUserController photoServiceUserController=new PhotoServiceUserController(); @AT@ 3395 @LENGTH@ 61
---------INS SimpleName@@photoServiceUserController @TO@ VariableDeclarationFragment@@photoServiceUserController=new PhotoServiceUserController() @AT@ 3395 @LENGTH@ 26
---------INS ClassInstanceCreation@@PhotoServiceUserController[] @TO@ VariableDeclarationFragment@@photoServiceUserController=new PhotoServiceUserController() @AT@ 3424 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@PhotoServiceUserController[] @AT@ 3424 @LENGTH@ 3
------------INS SimpleType@@PhotoServiceUserController @TO@ ClassInstanceCreation@@PhotoServiceUserController[] @AT@ 3428 @LENGTH@ 26
---INS ReturnStatement@@SimpleName:photoServiceUserController @TO@ MethodDeclaration@@public, PhotoServiceUserController, MethodName:photoServiceUserController, PhotoService photoService,  @AT@ 3465 @LENGTH@ 34
------INS SimpleName@@photoServiceUserController @TO@ ReturnStatement@@SimpleName:photoServiceUserController @AT@ 3472 @LENGTH@ 26


INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isCallerInRole, final Object incommingMappedRoles, final Map<String,Collection<String>> roleLinks, final String... roleNames,  @AT@ 11189 @LENGTH@ 13
---INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 11196 @LENGTH@ 5


DEL FieldDeclaration@@public, static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 2080 @LENGTH@ 69
---DEL Modifier@@public @AT@ 2080 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2087 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2094 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 2100 @LENGTH@ 6
---DEL VariableDeclarationFragment@@ZOOKEEPER_PASSWORD="zookeeper.password" @AT@ 2107 @LENGTH@ 41
------DEL SimpleName@@ZOOKEEPER_PASSWORD @AT@ 2107 @LENGTH@ 18
------DEL StringLiteral@@"zookeeper.password" @AT@ 2128 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @TO@ TypeDeclaration@@[public]QuartzRouteFireNowTest, BaseQuartzTest @AT@ 1113 @LENGTH@ 405
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1113 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1120 @LENGTH@ 4
---INS SimpleName@@MethodName:testQuartzRoute @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1125 @LENGTH@ 15
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1150 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:resultEndpoint=getMockEndpoint("mock:result") @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1170 @LENGTH@ 48
------INS Assignment@@resultEndpoint=getMockEndpoint("mock:result") @TO@ ExpressionStatement@@Assignment:resultEndpoint=getMockEndpoint("mock:result") @AT@ 1170 @LENGTH@ 47
---------INS SimpleName@@resultEndpoint @TO@ Assignment@@resultEndpoint=getMockEndpoint("mock:result") @AT@ 1170 @LENGTH@ 14
---------INS Operator@@= @TO@ Assignment@@resultEndpoint=getMockEndpoint("mock:result") @AT@ 1184 @LENGTH@ 1
---------INS MethodInvocation@@getMockEndpoint("mock:result") @TO@ Assignment@@resultEndpoint=getMockEndpoint("mock:result") @AT@ 1187 @LENGTH@ 30
------------INS SimpleName@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result") @AT@ 1187 @LENGTH@ 30
---------------INS StringLiteral@@"mock:result" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:result"] @AT@ 1203 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:resultEndpoint.expectedMessageCount(2) @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1227 @LENGTH@ 39
------INS MethodInvocation@@resultEndpoint.expectedMessageCount(2) @TO@ ExpressionStatement@@MethodInvocation:resultEndpoint.expectedMessageCount(2) @AT@ 1227 @LENGTH@ 38
---------INS SimpleName@@Name:resultEndpoint @TO@ MethodInvocation@@resultEndpoint.expectedMessageCount(2) @AT@ 1227 @LENGTH@ 14
---------INS SimpleName@@MethodName:expectedMessageCount:[2] @TO@ MethodInvocation@@resultEndpoint.expectedMessageCount(2) @AT@ 1242 @LENGTH@ 23
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:expectedMessageCount:[2] @AT@ 1263 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:resultEndpoint.message(0).header("triggerName").isEqualTo("myTimerName") @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1275 @LENGTH@ 73
------INS MethodInvocation@@resultEndpoint.message(0).header("triggerName").isEqualTo("myTimerName") @TO@ ExpressionStatement@@MethodInvocation:resultEndpoint.message(0).header("triggerName").isEqualTo("myTimerName") @AT@ 1275 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:header:["triggerName"] @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerName").isEqualTo("myTimerName") @AT@ 1275 @LENGTH@ 47
------------INS StringLiteral@@"triggerName" @TO@ MethodInvocation@@MethodName:header:["triggerName"] @AT@ 1308 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerName").isEqualTo("myTimerName") @AT@ 1275 @LENGTH@ 25
------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1298 @LENGTH@ 1
---------INS SimpleName@@Name:resultEndpoint @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerName").isEqualTo("myTimerName") @AT@ 1275 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:["myTimerName"] @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerName").isEqualTo("myTimerName") @AT@ 1323 @LENGTH@ 24
------------INS StringLiteral@@"myTimerName" @TO@ SimpleName@@MethodName:isEqualTo:["myTimerName"] @AT@ 1333 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:resultEndpoint.message(0).header("triggerGroup").isEqualTo("myGroup") @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1357 @LENGTH@ 70
------INS MethodInvocation@@resultEndpoint.message(0).header("triggerGroup").isEqualTo("myGroup") @TO@ ExpressionStatement@@MethodInvocation:resultEndpoint.message(0).header("triggerGroup").isEqualTo("myGroup") @AT@ 1357 @LENGTH@ 69
---------INS MethodInvocation@@MethodName:header:["triggerGroup"] @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerGroup").isEqualTo("myGroup") @AT@ 1357 @LENGTH@ 48
------------INS StringLiteral@@"triggerGroup" @TO@ MethodInvocation@@MethodName:header:["triggerGroup"] @AT@ 1390 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerGroup").isEqualTo("myGroup") @AT@ 1357 @LENGTH@ 25
------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1380 @LENGTH@ 1
---------INS SimpleName@@Name:resultEndpoint @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerGroup").isEqualTo("myGroup") @AT@ 1357 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:["myGroup"] @TO@ MethodInvocation@@resultEndpoint.message(0).header("triggerGroup").isEqualTo("myGroup") @AT@ 1406 @LENGTH@ 20
------------INS StringLiteral@@"myGroup" @TO@ SimpleName@@MethodName:isEqualTo:["myGroup"] @AT@ 1416 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:resultEndpoint.assertIsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testQuartzRoute, Exception,  @AT@ 1477 @LENGTH@ 35
------INS MethodInvocation@@resultEndpoint.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:resultEndpoint.assertIsSatisfied() @AT@ 1477 @LENGTH@ 34
---------INS SimpleName@@Name:resultEndpoint @TO@ MethodInvocation@@resultEndpoint.assertIsSatisfied() @AT@ 1477 @LENGTH@ 14
---------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@resultEndpoint.assertIsSatisfied() @AT@ 1492 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @TO@ TypeDeclaration@@[public]JarInstallerTest, Assert @AT@ 1938 @LENGTH@ 387
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @AT@ 1938 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @AT@ 1945 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldCopyMainJar @TO@ MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @AT@ 1950 @LENGTH@ 17
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @AT@ 1977 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:jarInstaller.unpackJarProcess(new ProcessConfig(),1,installDir,installOptions) @TO@ MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @AT@ 2013 @LENGTH@ 82
------INS MethodInvocation@@jarInstaller.unpackJarProcess(new ProcessConfig(),1,installDir,installOptions) @TO@ ExpressionStatement@@MethodInvocation:jarInstaller.unpackJarProcess(new ProcessConfig(),1,installDir,installOptions) @AT@ 2013 @LENGTH@ 81
---------INS SimpleName@@Name:jarInstaller @TO@ MethodInvocation@@jarInstaller.unpackJarProcess(new ProcessConfig(),1,installDir,installOptions) @AT@ 2013 @LENGTH@ 12
---------INS SimpleName@@MethodName:unpackJarProcess:[new ProcessConfig(), 1, installDir, installOptions] @TO@ MethodInvocation@@jarInstaller.unpackJarProcess(new ProcessConfig(),1,installDir,installOptions) @AT@ 2026 @LENGTH@ 68
------------INS ClassInstanceCreation@@ProcessConfig[] @TO@ SimpleName@@MethodName:unpackJarProcess:[new ProcessConfig(), 1, installDir, installOptions] @AT@ 2043 @LENGTH@ 19
---------------INS New@@new @TO@ ClassInstanceCreation@@ProcessConfig[] @AT@ 2043 @LENGTH@ 3
---------------INS SimpleType@@ProcessConfig @TO@ ClassInstanceCreation@@ProcessConfig[] @AT@ 2047 @LENGTH@ 13
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:unpackJarProcess:[new ProcessConfig(), 1, installDir, installOptions] @AT@ 2064 @LENGTH@ 1
------------INS SimpleName@@installDir @TO@ SimpleName@@MethodName:unpackJarProcess:[new ProcessConfig(), 1, installDir, installOptions] @AT@ 2067 @LENGTH@ 10
------------INS SimpleName@@installOptions @TO@ SimpleName@@MethodName:unpackJarProcess:[new ProcessConfig(), 1, installDir, installOptions] @AT@ 2079 @LENGTH@ 14
---INS VariableDeclarationStatement@@Manifest manifest=new Jar(new File(installDir,"lib/main.jar")).getManifest(); @TO@ MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @AT@ 2121 @LENGTH@ 80
------INS SimpleType@@Manifest @TO@ VariableDeclarationStatement@@Manifest manifest=new Jar(new File(installDir,"lib/main.jar")).getManifest(); @AT@ 2121 @LENGTH@ 8
------INS VariableDeclarationFragment@@manifest=new Jar(new File(installDir,"lib/main.jar")).getManifest() @TO@ VariableDeclarationStatement@@Manifest manifest=new Jar(new File(installDir,"lib/main.jar")).getManifest(); @AT@ 2130 @LENGTH@ 70
---------INS SimpleName@@manifest @TO@ VariableDeclarationFragment@@manifest=new Jar(new File(installDir,"lib/main.jar")).getManifest() @AT@ 2130 @LENGTH@ 8
---------INS MethodInvocation@@new Jar(new File(installDir,"lib/main.jar")).getManifest() @TO@ VariableDeclarationFragment@@manifest=new Jar(new File(installDir,"lib/main.jar")).getManifest() @AT@ 2141 @LENGTH@ 59
------------INS ClassInstanceCreation@@Jar[new File(installDir,"lib/main.jar")] @TO@ MethodInvocation@@new Jar(new File(installDir,"lib/main.jar")).getManifest() @AT@ 2141 @LENGTH@ 45
---------------INS New@@new @TO@ ClassInstanceCreation@@Jar[new File(installDir,"lib/main.jar")] @AT@ 2141 @LENGTH@ 3
---------------INS SimpleType@@Jar @TO@ ClassInstanceCreation@@Jar[new File(installDir,"lib/main.jar")] @AT@ 2145 @LENGTH@ 3
---------------INS ClassInstanceCreation@@File[installDir, "lib/main.jar"] @TO@ ClassInstanceCreation@@Jar[new File(installDir,"lib/main.jar")] @AT@ 2149 @LENGTH@ 36
------------------INS New@@new @TO@ ClassInstanceCreation@@File[installDir, "lib/main.jar"] @AT@ 2149 @LENGTH@ 3
------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[installDir, "lib/main.jar"] @AT@ 2153 @LENGTH@ 4
------------------INS SimpleName@@installDir @TO@ ClassInstanceCreation@@File[installDir, "lib/main.jar"] @AT@ 2158 @LENGTH@ 10
------------------INS StringLiteral@@"lib/main.jar" @TO@ ClassInstanceCreation@@File[installDir, "lib/main.jar"] @AT@ 2170 @LENGTH@ 14
------------INS SimpleName@@MethodName:getManifest:[] @TO@ MethodInvocation@@new Jar(new File(installDir,"lib/main.jar")).getManifest() @AT@ 2187 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertEquals("org.apache.camel.camel-xstream",manifest.getMainAttributes().getValue("Bundle-SymbolicName")) @TO@ MethodDeclaration@@public, void, MethodName:shouldCopyMainJar, Exception,  @AT@ 2210 @LENGTH@ 109
------INS MethodInvocation@@assertEquals("org.apache.camel.camel-xstream",manifest.getMainAttributes().getValue("Bundle-SymbolicName")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("org.apache.camel.camel-xstream",manifest.getMainAttributes().getValue("Bundle-SymbolicName")) @AT@ 2210 @LENGTH@ 108
---------INS SimpleName@@MethodName:assertEquals:["org.apache.camel.camel-xstream", manifest.getMainAttributes().getValue("Bundle-SymbolicName")] @TO@ MethodInvocation@@assertEquals("org.apache.camel.camel-xstream",manifest.getMainAttributes().getValue("Bundle-SymbolicName")) @AT@ 2210 @LENGTH@ 108
------------INS StringLiteral@@"org.apache.camel.camel-xstream" @TO@ SimpleName@@MethodName:assertEquals:["org.apache.camel.camel-xstream", manifest.getMainAttributes().getValue("Bundle-SymbolicName")] @AT@ 2223 @LENGTH@ 32
------------INS MethodInvocation@@manifest.getMainAttributes().getValue("Bundle-SymbolicName") @TO@ SimpleName@@MethodName:assertEquals:["org.apache.camel.camel-xstream", manifest.getMainAttributes().getValue("Bundle-SymbolicName")] @AT@ 2257 @LENGTH@ 60
---------------INS MethodInvocation@@MethodName:getMainAttributes:[] @TO@ MethodInvocation@@manifest.getMainAttributes().getValue("Bundle-SymbolicName") @AT@ 2257 @LENGTH@ 28
---------------INS SimpleName@@Name:manifest @TO@ MethodInvocation@@manifest.getMainAttributes().getValue("Bundle-SymbolicName") @AT@ 2257 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getValue:["Bundle-SymbolicName"] @TO@ MethodInvocation@@manifest.getMainAttributes().getValue("Bundle-SymbolicName") @AT@ 2286 @LENGTH@ 31
------------------INS StringLiteral@@"Bundle-SymbolicName" @TO@ SimpleName@@MethodName:getValue:["Bundle-SymbolicName"] @AT@ 2295 @LENGTH@ 21


UPD IfStatement@@if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} else if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @TO@ if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} else if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @AT@ 2747 @LENGTH@ 338


UPD TypeDeclaration@@[public]Mapper, org.apache.hadoop.mapreduce.Mapper @TO@ [@SuppressWarnings("rawtypes"), public]Mapper, org.apache.hadoop.mapreduce.Mapper @AT@ 778 @LENGTH@ 374
---INS SingleMemberAnnotation@@@SuppressWarnings("rawtypes") @TO@ TypeDeclaration@@[public]Mapper, org.apache.hadoop.mapreduce.Mapper @AT@ 775 @LENGTH@ 29


UPD Block@@ElseBody:{  builder.register("https4",SSLConnectionSocketFactory.getSocketFactory());  builder.register("https",SSLConnectionSocketFactory.getSocketFactory());} @TO@ ElseBody:{  builder.register("https4",new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier));  builder.register("https",new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier));} @AT@ 15783 @LENGTH@ 184
---UPD ExpressionStatement@@MethodInvocation:builder.register("https4",SSLConnectionSocketFactory.getSocketFactory()) @TO@ MethodInvocation:builder.register("https4",new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier)) @AT@ 15797 @LENGTH@ 74
------UPD MethodInvocation@@builder.register("https4",SSLConnectionSocketFactory.getSocketFactory()) @TO@ builder.register("https4",new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier)) @AT@ 15797 @LENGTH@ 73
---------UPD SimpleName@@MethodName:register:["https4", SSLConnectionSocketFactory.getSocketFactory()] @TO@ MethodName:register:["https4", new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier)] @AT@ 15805 @LENGTH@ 65
------------DEL MethodInvocation@@SSLConnectionSocketFactory.getSocketFactory() @AT@ 15824 @LENGTH@ 45
------------INS ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @TO@ SimpleName@@MethodName:register:["https4", SSLConnectionSocketFactory.getSocketFactory()] @AT@ 15869 @LENGTH@ 81
---------------INS New@@new @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 15869 @LENGTH@ 3
---------------INS SimpleType@@SSLConnectionSocketFactory @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 15873 @LENGTH@ 26
---------------INS MethodInvocation@@SSLContexts.createDefault() @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 15900 @LENGTH@ 27
------------------MOV SimpleName@@Name:SSLConnectionSocketFactory @TO@ MethodInvocation@@SSLContexts.createDefault() @AT@ 15824 @LENGTH@ 26
------------------MOV SimpleName@@MethodName:getSocketFactory:[] @TO@ MethodInvocation@@SSLContexts.createDefault() @AT@ 15851 @LENGTH@ 18
---------------INS SimpleName@@x509HostnameVerifier @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 15929 @LENGTH@ 20
---UPD ExpressionStatement@@MethodInvocation:builder.register("https",SSLConnectionSocketFactory.getSocketFactory()) @TO@ MethodInvocation:builder.register("https",new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier)) @AT@ 15884 @LENGTH@ 73
------UPD MethodInvocation@@builder.register("https",SSLConnectionSocketFactory.getSocketFactory()) @TO@ builder.register("https",new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier)) @AT@ 15884 @LENGTH@ 72
---------UPD SimpleName@@MethodName:register:["https", SSLConnectionSocketFactory.getSocketFactory()] @TO@ MethodName:register:["https", new SSLConnectionSocketFactory(SSLContexts.createDefault(),x509HostnameVerifier)] @AT@ 15892 @LENGTH@ 64
------------DEL MethodInvocation@@SSLConnectionSocketFactory.getSocketFactory() @AT@ 15910 @LENGTH@ 45
------------INS ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @TO@ SimpleName@@MethodName:register:["https", SSLConnectionSocketFactory.getSocketFactory()] @AT@ 15991 @LENGTH@ 81
---------------INS New@@new @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 15991 @LENGTH@ 3
---------------INS SimpleType@@SSLConnectionSocketFactory @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 15995 @LENGTH@ 26
---------------INS MethodInvocation@@SSLContexts.createDefault() @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 16022 @LENGTH@ 27
------------------MOV SimpleName@@Name:SSLConnectionSocketFactory @TO@ MethodInvocation@@SSLContexts.createDefault() @AT@ 15910 @LENGTH@ 26
------------------MOV SimpleName@@MethodName:getSocketFactory:[] @TO@ MethodInvocation@@SSLContexts.createDefault() @AT@ 15937 @LENGTH@ 18
---------------INS SimpleName@@x509HostnameVerifier @TO@ ClassInstanceCreation@@SSLConnectionSocketFactory[SSLContexts.createDefault(), x509HostnameVerifier] @AT@ 16051 @LENGTH@ 20


UPD ExpressionStatement@@Assignment:narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @TO@ Assignment:narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication()) @AT@ 12085 @LENGTH@ 88
---UPD Assignment@@narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @TO@ narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication()) @AT@ 12085 @LENGTH@ 87
------UPD ClassInstanceCreation@@OAuth2Authentication[clientAuth, authentication.getUserAuthentication()] @TO@ OAuth2Authentication[clientAuth.narrowScope(scope), authentication.getUserAuthentication()] @AT@ 12096 @LENGTH@ 76
---------INS MethodInvocation@@clientAuth.narrowScope(scope) @TO@ ClassInstanceCreation@@OAuth2Authentication[clientAuth, authentication.getUserAuthentication()] @AT@ 12121 @LENGTH@ 29
------------INS SimpleName@@Name:clientAuth @TO@ MethodInvocation@@clientAuth.narrowScope(scope) @AT@ 12121 @LENGTH@ 10
------------INS SimpleName@@MethodName:narrowScope:[scope] @TO@ MethodInvocation@@clientAuth.narrowScope(scope) @AT@ 12132 @LENGTH@ 18
---------------INS SimpleName@@scope @TO@ SimpleName@@MethodName:narrowScope:[scope] @AT@ 12144 @LENGTH@ 5
---------DEL SimpleName@@clientAuth @AT@ 12121 @LENGTH@ 10


DEL ReturnStatement@@MethodInvocation:webSecurity.getOrBuild() @AT@ 3994 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile()) @TO@ MethodInvocation:LOG.info("Loading Quartz properties file from: {}",getPropertiesFile()) @AT@ 8247 @LENGTH@ 83
---UPD MethodInvocation@@LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile()) @TO@ LOG.info("Loading Quartz properties file from: {}",getPropertiesFile()) @AT@ 8247 @LENGTH@ 82
------UPD SimpleName@@MethodName:info:["Loading Quartz properties file from classpath: {}", getPropertiesFile()] @TO@ MethodName:info:["Loading Quartz properties file from: {}", getPropertiesFile()] @AT@ 8251 @LENGTH@ 78
---------UPD StringLiteral@@"Loading Quartz properties file from classpath: {}" @TO@ "Loading Quartz properties file from: {}" @AT@ 8256 @LENGTH@ 51


INS ExpressionStatement@@MethodInvocation:getEndpoint().declareExchangeAndQueue(this.channel) @TO@ MethodDeclaration@@private, void, MethodName:openConnectionAndChannel, IOException,  @AT@ 2103 @LENGTH@ 52
---INS MethodInvocation@@getEndpoint().declareExchangeAndQueue(this.channel) @TO@ ExpressionStatement@@MethodInvocation:getEndpoint().declareExchangeAndQueue(this.channel) @AT@ 2103 @LENGTH@ 51
------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().declareExchangeAndQueue(this.channel) @AT@ 2103 @LENGTH@ 13
------INS SimpleName@@MethodName:declareExchangeAndQueue:[this.channel] @TO@ MethodInvocation@@getEndpoint().declareExchangeAndQueue(this.channel) @AT@ 2117 @LENGTH@ 37
---------INS FieldAccess@@this.channel @TO@ SimpleName@@MethodName:declareExchangeAndQueue:[this.channel] @AT@ 2141 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.channel @AT@ 2141 @LENGTH@ 4
------------INS SimpleName@@channel @TO@ FieldAccess@@this.channel @AT@ 2146 @LENGTH@ 7


UPD VariableDeclarationStatement@@ServiceController<HornetQServer> controller=(ServiceController<HornetQServer>)CurrentServiceContainer.getServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)); @TO@ ServiceController<HornetQServer> controller=(ServiceController<HornetQServer>)currentServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)); @AT@ 631 @LENGTH@ 198
---UPD VariableDeclarationFragment@@controller=(ServiceController<HornetQServer>)CurrentServiceContainer.getServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)) @TO@ controller=(ServiceController<HornetQServer>)currentServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)) @AT@ 664 @LENGTH@ 164
------UPD CastExpression@@(ServiceController<HornetQServer>)CurrentServiceContainer.getServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)) @TO@ (ServiceController<HornetQServer>)currentServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)) @AT@ 677 @LENGTH@ 151
---------UPD MethodInvocation@@CurrentServiceContainer.getServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)) @TO@ currentServiceContainer().getService(MessagingServices.getHornetQServiceName(hornetQServerName)) @AT@ 712 @LENGTH@ 116
------------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:currentServiceContainer:[] @AT@ 712 @LENGTH@ 45
------------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 712 @LENGTH@ 23


INS IfStatement@@if (jobProperties.getParameters() != null) {  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @TO@ MethodDeclaration@@private, void, MethodName:executeJob, Job job, JobParameters jobParameters, JobExecutionException,  @AT@ 6035 @LENGTH@ 545
---INS InfixExpression@@jobProperties.getParameters() != null @TO@ IfStatement@@if (jobProperties.getParameters() != null) {  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6039 @LENGTH@ 37
------INS MethodInvocation@@jobProperties.getParameters() @TO@ InfixExpression@@jobProperties.getParameters() != null @AT@ 6039 @LENGTH@ 29
---------INS SimpleName@@Name:jobProperties @TO@ MethodInvocation@@jobProperties.getParameters() @AT@ 6039 @LENGTH@ 13
---------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@jobProperties.getParameters() @AT@ 6053 @LENGTH@ 15
------INS Operator@@!= @TO@ InfixExpression@@jobProperties.getParameters() != null @AT@ 6068 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@jobProperties.getParameters() != null @AT@ 6072 @LENGTH@ 4
---INS Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @TO@ IfStatement@@if (jobProperties.getParameters() != null) {  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6078 @LENGTH@ 502
------INS VariableDeclarationStatement@@Properties tmpProperties=new Properties(); @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6083 @LENGTH@ 44
---------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties tmpProperties=new Properties(); @AT@ 6083 @LENGTH@ 10
---------INS VariableDeclarationFragment@@tmpProperties=new Properties() @TO@ VariableDeclarationStatement@@Properties tmpProperties=new Properties(); @AT@ 6094 @LENGTH@ 32
------------INS SimpleName@@tmpProperties @TO@ VariableDeclarationFragment@@tmpProperties=new Properties() @AT@ 6094 @LENGTH@ 13
------------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@tmpProperties=new Properties() @AT@ 6110 @LENGTH@ 16
---------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 6110 @LENGTH@ 3
---------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 6114 @LENGTH@ 10
------INS VariableDeclarationStatement@@Map<String,Object> tmpParameters=jobProperties.getParameters(); @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6131 @LENGTH@ 66
---------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> tmpParameters=jobProperties.getParameters(); @AT@ 6131 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 6131 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 6135 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 6143 @LENGTH@ 6
---------INS VariableDeclarationFragment@@tmpParameters=jobProperties.getParameters() @TO@ VariableDeclarationStatement@@Map<String,Object> tmpParameters=jobProperties.getParameters(); @AT@ 6151 @LENGTH@ 45
------------INS SimpleName@@tmpParameters @TO@ VariableDeclarationFragment@@tmpParameters=jobProperties.getParameters() @AT@ 6151 @LENGTH@ 13
------------INS MethodInvocation@@jobProperties.getParameters() @TO@ VariableDeclarationFragment@@tmpParameters=jobProperties.getParameters() @AT@ 6167 @LENGTH@ 29
---------------INS SimpleName@@Name:jobProperties @TO@ MethodInvocation@@jobProperties.getParameters() @AT@ 6167 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@jobProperties.getParameters() @AT@ 6181 @LENGTH@ 15
------INS ExpressionStatement@@MethodInvocation:tmpProperties.putAll(tmpParameters) @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6201 @LENGTH@ 36
---------INS MethodInvocation@@tmpProperties.putAll(tmpParameters) @TO@ ExpressionStatement@@MethodInvocation:tmpProperties.putAll(tmpParameters) @AT@ 6201 @LENGTH@ 35
------------INS SimpleName@@Name:tmpProperties @TO@ MethodInvocation@@tmpProperties.putAll(tmpParameters) @AT@ 6201 @LENGTH@ 13
------------INS SimpleName@@MethodName:putAll:[tmpParameters] @TO@ MethodInvocation@@tmpProperties.putAll(tmpParameters) @AT@ 6215 @LENGTH@ 21
---------------INS SimpleName@@tmpParameters @TO@ SimpleName@@MethodName:putAll:[tmpParameters] @AT@ 6222 @LENGTH@ 13
------INS VariableDeclarationStatement@@JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties); @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6241 @LENGTH@ 80
---------INS SimpleType@@JobParameters @TO@ VariableDeclarationStatement@@JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties); @AT@ 6241 @LENGTH@ 13
---------INS VariableDeclarationFragment@@tmpJobParameters=this.converter.getJobParameters(tmpProperties) @TO@ VariableDeclarationStatement@@JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties); @AT@ 6255 @LENGTH@ 65
------------INS SimpleName@@tmpJobParameters @TO@ VariableDeclarationFragment@@tmpJobParameters=this.converter.getJobParameters(tmpProperties) @AT@ 6255 @LENGTH@ 16
------------INS MethodInvocation@@this.converter.getJobParameters(tmpProperties) @TO@ VariableDeclarationFragment@@tmpJobParameters=this.converter.getJobParameters(tmpProperties) @AT@ 6274 @LENGTH@ 46
---------------INS FieldAccess@@this.converter @TO@ MethodInvocation@@this.converter.getJobParameters(tmpProperties) @AT@ 6274 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.converter @AT@ 6274 @LENGTH@ 4
------------------INS SimpleName@@converter @TO@ FieldAccess@@this.converter @AT@ 6279 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getJobParameters:[tmpProperties] @TO@ MethodInvocation@@this.converter.getJobParameters(tmpProperties) @AT@ 6289 @LENGTH@ 31
------------------INS SimpleName@@tmpProperties @TO@ SimpleName@@MethodName:getJobParameters:[tmpProperties] @AT@ 6306 @LENGTH@ 13
------INS VariableDeclarationStatement@@Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters()); @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6325 @LENGTH@ 101
---------INS ParameterizedType@@Map<String,JobParameter> @TO@ VariableDeclarationStatement@@Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters()); @AT@ 6325 @LENGTH@ 25
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,JobParameter> @AT@ 6325 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,JobParameter> @AT@ 6329 @LENGTH@ 6
------------INS SimpleType@@JobParameter @TO@ ParameterizedType@@Map<String,JobParameter> @AT@ 6337 @LENGTH@ 12
---------INS VariableDeclarationFragment@@map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters()) @TO@ VariableDeclarationStatement@@Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters()); @AT@ 6351 @LENGTH@ 74
------------INS SimpleName@@map1 @TO@ VariableDeclarationFragment@@map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters()) @AT@ 6351 @LENGTH@ 4
------------INS ClassInstanceCreation@@HashMap<String,JobParameter>[tmpJobParameters.getParameters()] @TO@ VariableDeclarationFragment@@map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters()) @AT@ 6358 @LENGTH@ 67
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,JobParameter>[tmpJobParameters.getParameters()] @AT@ 6358 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<String,JobParameter> @TO@ ClassInstanceCreation@@HashMap<String,JobParameter>[tmpJobParameters.getParameters()] @AT@ 6362 @LENGTH@ 29
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,JobParameter> @AT@ 6362 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,JobParameter> @AT@ 6370 @LENGTH@ 6
------------------INS SimpleType@@JobParameter @TO@ ParameterizedType@@HashMap<String,JobParameter> @AT@ 6378 @LENGTH@ 12
---------------INS MethodInvocation@@tmpJobParameters.getParameters() @TO@ ClassInstanceCreation@@HashMap<String,JobParameter>[tmpJobParameters.getParameters()] @AT@ 6392 @LENGTH@ 32
------------------INS SimpleName@@Name:tmpJobParameters @TO@ MethodInvocation@@tmpJobParameters.getParameters() @AT@ 6392 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@tmpJobParameters.getParameters() @AT@ 6409 @LENGTH@ 15
------INS ExpressionStatement@@MethodInvocation:map1.putAll(jobParameters.getParameters()) @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6430 @LENGTH@ 43
---------INS MethodInvocation@@map1.putAll(jobParameters.getParameters()) @TO@ ExpressionStatement@@MethodInvocation:map1.putAll(jobParameters.getParameters()) @AT@ 6430 @LENGTH@ 42
------------INS SimpleName@@Name:map1 @TO@ MethodInvocation@@map1.putAll(jobParameters.getParameters()) @AT@ 6430 @LENGTH@ 4
------------INS SimpleName@@MethodName:putAll:[jobParameters.getParameters()] @TO@ MethodInvocation@@map1.putAll(jobParameters.getParameters()) @AT@ 6435 @LENGTH@ 37
---------------INS MethodInvocation@@jobParameters.getParameters() @TO@ SimpleName@@MethodName:putAll:[jobParameters.getParameters()] @AT@ 6442 @LENGTH@ 29
------------------INS SimpleName@@Name:jobParameters @TO@ MethodInvocation@@jobParameters.getParameters() @AT@ 6442 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@jobParameters.getParameters() @AT@ 6456 @LENGTH@ 15
------INS ExpressionStatement@@Assignment:jobParameters=new JobParameters(map1) @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6477 @LENGTH@ 40
---------INS Assignment@@jobParameters=new JobParameters(map1) @TO@ ExpressionStatement@@Assignment:jobParameters=new JobParameters(map1) @AT@ 6477 @LENGTH@ 39
------------INS SimpleName@@jobParameters @TO@ Assignment@@jobParameters=new JobParameters(map1) @AT@ 6477 @LENGTH@ 13
------------INS Operator@@= @TO@ Assignment@@jobParameters=new JobParameters(map1) @AT@ 6490 @LENGTH@ 1
------------INS ClassInstanceCreation@@JobParameters[map1] @TO@ Assignment@@jobParameters=new JobParameters(map1) @AT@ 6493 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@JobParameters[map1] @AT@ 6493 @LENGTH@ 3
---------------INS SimpleType@@JobParameters @TO@ ClassInstanceCreation@@JobParameters[map1] @AT@ 6497 @LENGTH@ 13
---------------INS SimpleName@@map1 @TO@ ClassInstanceCreation@@JobParameters[map1] @AT@ 6511 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:logger.info("Modified jobParameters=" + jobParameters) @TO@ Block@@ThenBody:{  Properties tmpProperties=new Properties();  Map<String,Object> tmpParameters=jobProperties.getParameters();  tmpProperties.putAll(tmpParameters);  JobParameters tmpJobParameters=this.converter.getJobParameters(tmpProperties);  Map<String,JobParameter> map1=new HashMap<String,JobParameter>(tmpJobParameters.getParameters());  map1.putAll(jobParameters.getParameters());  jobParameters=new JobParameters(map1);  logger.info("Modified jobParameters=" + jobParameters);} @AT@ 6521 @LENGTH@ 55
---------INS MethodInvocation@@logger.info("Modified jobParameters=" + jobParameters) @TO@ ExpressionStatement@@MethodInvocation:logger.info("Modified jobParameters=" + jobParameters) @AT@ 6521 @LENGTH@ 54
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.info("Modified jobParameters=" + jobParameters) @AT@ 6521 @LENGTH@ 6
------------INS SimpleName@@MethodName:info:["Modified jobParameters=" + jobParameters] @TO@ MethodInvocation@@logger.info("Modified jobParameters=" + jobParameters) @AT@ 6528 @LENGTH@ 47
---------------INS InfixExpression@@"Modified jobParameters=" + jobParameters @TO@ SimpleName@@MethodName:info:["Modified jobParameters=" + jobParameters] @AT@ 6533 @LENGTH@ 41
------------------INS StringLiteral@@"Modified jobParameters=" @TO@ InfixExpression@@"Modified jobParameters=" + jobParameters @AT@ 6533 @LENGTH@ 25
------------------INS Operator@@+ @TO@ InfixExpression@@"Modified jobParameters=" + jobParameters @AT@ 6558 @LENGTH@ 1
------------------INS SimpleName@@jobParameters @TO@ InfixExpression@@"Modified jobParameters=" + jobParameters @AT@ 6561 @LENGTH@ 13


UPD TypeDeclaration@@[@Lazy, public]EmployeeRepositoryWithEmbeddedId, [JpaRepository<EmbeddedIdExampleEmployee,EmbeddedIdExampleEmployeePK>] @TO@ [@Lazy, public]EmployeeRepositoryWithEmbeddedId, [JpaRepository<EmbeddedIdExampleEmployee,EmbeddedIdExampleEmployeePK>, QueryDslPredicateExecutor<EmbeddedIdExampleEmployee>] @AT@ 1064 @LENGTH@ 138
---INS ParameterizedType@@QueryDslPredicateExecutor<EmbeddedIdExampleEmployee> @TO@ TypeDeclaration@@[@Lazy, public]EmployeeRepositoryWithEmbeddedId, [JpaRepository<EmbeddedIdExampleEmployee,EmbeddedIdExampleEmployeePK>] @AT@ 1388 @LENGTH@ 52
------INS SimpleType@@QueryDslPredicateExecutor @TO@ ParameterizedType@@QueryDslPredicateExecutor<EmbeddedIdExampleEmployee> @AT@ 1388 @LENGTH@ 25
------INS SimpleType@@EmbeddedIdExampleEmployee @TO@ ParameterizedType@@QueryDslPredicateExecutor<EmbeddedIdExampleEmployee> @AT@ 1414 @LENGTH@ 25


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 8209 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 8216 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 8233 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 8246 @LENGTH@ 202
------------DEL New@@new @AT@ 8246 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 8250 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 8250 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 8267 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 8287 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 8323 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 8323 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 8330 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 8347 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 8333 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 8333 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 8357 @LENGTH@ 10


UPD VariableDeclarationStatement@@String assignedProfiles=toString(container.getProfiles()); @TO@ String assignedProfiles=toString(fabricService.getDataStore().getContainerProfiles(container.getId())); @AT@ 4119 @LENGTH@ 60
---UPD VariableDeclarationFragment@@assignedProfiles=toString(container.getProfiles()) @TO@ assignedProfiles=toString(fabricService.getDataStore().getContainerProfiles(container.getId())) @AT@ 4126 @LENGTH@ 52
------UPD MethodInvocation@@toString(container.getProfiles()) @TO@ toString(fabricService.getDataStore().getContainerProfiles(container.getId())) @AT@ 4145 @LENGTH@ 33
---------INS SimpleName@@MethodName:toString:[fabricService.getDataStore().getContainerProfiles(container.getId())] @TO@ MethodInvocation@@toString(container.getProfiles()) @AT@ 4145 @LENGTH@ 78
------------INS MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @TO@ SimpleName@@MethodName:toString:[fabricService.getDataStore().getContainerProfiles(container.getId())] @AT@ 4154 @LENGTH@ 68
---------------MOV SimpleName@@MethodName:toString:[container.getProfiles()] @TO@ MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @AT@ 4145 @LENGTH@ 33
------------------UPD MethodInvocation@@container.getProfiles() @TO@ container.getId() @AT@ 4154 @LENGTH@ 23
---------------------UPD SimpleName@@MethodName:getProfiles:[] @TO@ MethodName:getId:[] @AT@ 4164 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:toString:[container.getProfiles()] @TO@ MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @AT@ 4145 @LENGTH@ 33
------------------UPD MethodInvocation@@container.getProfiles() @TO@ container.getId() @AT@ 4154 @LENGTH@ 23
---------------------UPD SimpleName@@MethodName:getProfiles:[] @TO@ MethodName:getId:[] @AT@ 4164 @LENGTH@ 13
---------------INS MethodInvocation@@MethodName:getDataStore:[] @TO@ MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @AT@ 4154 @LENGTH@ 28
---------------INS SimpleName@@Name:fabricService @TO@ MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @AT@ 4154 @LENGTH@ 13
---------UPD SimpleName@@MethodName:toString:[container.getProfiles()] @TO@ MethodName:getContainerProfiles:[container.getId()] @AT@ 4145 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @TO@ MethodInvocation:http.authorizeRequests().antMatchers(HttpMethod.OPTIONS,tokenEndpointPath).permitAll().and().authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @AT@ 3143 @LENGTH@ 189
---UPD MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @TO@ http.authorizeRequests().antMatchers(HttpMethod.OPTIONS,tokenEndpointPath).permitAll().and().authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @AT@ 3143 @LENGTH@ 188
------INS MethodInvocation@@MethodName:authorizeRequests:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @AT@ 3187 @LENGTH@ 135
------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @AT@ 3187 @LENGTH@ 105
------INS MethodInvocation@@MethodName:permitAll:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @AT@ 3187 @LENGTH@ 96
------INS MethodInvocation@@MethodName:antMatchers:[HttpMethod.OPTIONS, tokenEndpointPath] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().and().requestMatchers().antMatchers(tokenEndpointPath) @AT@ 3187 @LENGTH@ 84
---------INS QualifiedName@@HttpMethod.OPTIONS @TO@ MethodInvocation@@MethodName:antMatchers:[HttpMethod.OPTIONS, tokenEndpointPath] @AT@ 3233 @LENGTH@ 18
------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.OPTIONS @AT@ 3233 @LENGTH@ 10
------------INS SimpleName@@OPTIONS @TO@ QualifiedName@@HttpMethod.OPTIONS @AT@ 3244 @LENGTH@ 7
---------INS SimpleName@@tokenEndpointPath @TO@ MethodInvocation@@MethodName:antMatchers:[HttpMethod.OPTIONS, tokenEndpointPath] @AT@ 3253 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:retrieveToken(form,new HttpHeaders(),resource) @TO@ MethodInvocation:retrieveToken(request,resource,form,new HttpHeaders()) @AT@ 1928 @LENGTH@ 56
---UPD MethodInvocation@@retrieveToken(form,new HttpHeaders(),resource) @TO@ retrieveToken(request,resource,form,new HttpHeaders()) @AT@ 1935 @LENGTH@ 48
------UPD SimpleName@@MethodName:retrieveToken:[form, new HttpHeaders(), resource] @TO@ MethodName:retrieveToken:[request, resource, form, new HttpHeaders()] @AT@ 1935 @LENGTH@ 48
---------INS SimpleName@@request @TO@ SimpleName@@MethodName:retrieveToken:[form, new HttpHeaders(), resource] @AT@ 1949 @LENGTH@ 7
---------INS SimpleName@@resource @TO@ SimpleName@@MethodName:retrieveToken:[form, new HttpHeaders(), resource] @AT@ 1958 @LENGTH@ 8
---------DEL SimpleName@@resource @AT@ 1974 @LENGTH@ 8


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 2231 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 2234 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 2234 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 2234 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 2241 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 2261 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 2265 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 2271 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 2433 @LENGTH@ 53


UPD VariableDeclarationStatement@@TypeInformation<?> typeHint=typeInformation == null ? null : ClassTypeInformation.OBJECT; @TO@ TypeInformation<?> typeHint=typeInformation == null ? ClassTypeInformation.OBJECT : typeInformation; @AT@ 32036 @LENGTH@ 91
---UPD VariableDeclarationFragment@@typeHint=typeInformation == null ? null : ClassTypeInformation.OBJECT @TO@ typeHint=typeInformation == null ? ClassTypeInformation.OBJECT : typeInformation @AT@ 32055 @LENGTH@ 71
------UPD ConditionalExpression@@typeInformation == null ? null : ClassTypeInformation.OBJECT @TO@ typeInformation == null ? ClassTypeInformation.OBJECT : typeInformation @AT@ 32066 @LENGTH@ 60
---------DEL NullLiteral@@null @AT@ 32092 @LENGTH@ 4
---------INS SimpleName@@typeInformation @TO@ ConditionalExpression@@typeInformation == null ? null : ClassTypeInformation.OBJECT @AT@ 32122 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:resolver.setFallbackPageable(new PageRequest(0,config().getDefaultPageSize())) @TO@ MethodDeclaration@@public, HateoasPageableHandlerMethodArgumentResolver, MethodName:pageableResolver,  @AT@ 19792 @LENGTH@ 80
---INS MethodInvocation@@resolver.setFallbackPageable(new PageRequest(0,config().getDefaultPageSize())) @TO@ ExpressionStatement@@MethodInvocation:resolver.setFallbackPageable(new PageRequest(0,config().getDefaultPageSize())) @AT@ 19792 @LENGTH@ 79
------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.setFallbackPageable(new PageRequest(0,config().getDefaultPageSize())) @AT@ 19792 @LENGTH@ 8
------INS SimpleName@@MethodName:setFallbackPageable:[new PageRequest(0,config().getDefaultPageSize())] @TO@ MethodInvocation@@resolver.setFallbackPageable(new PageRequest(0,config().getDefaultPageSize())) @AT@ 19801 @LENGTH@ 70
---------INS ClassInstanceCreation@@PageRequest[0, config().getDefaultPageSize()] @TO@ SimpleName@@MethodName:setFallbackPageable:[new PageRequest(0,config().getDefaultPageSize())] @AT@ 19821 @LENGTH@ 49
------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, config().getDefaultPageSize()] @AT@ 19821 @LENGTH@ 3
------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, config().getDefaultPageSize()] @AT@ 19825 @LENGTH@ 11
------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, config().getDefaultPageSize()] @AT@ 19837 @LENGTH@ 1
------------INS MethodInvocation@@config().getDefaultPageSize() @TO@ ClassInstanceCreation@@PageRequest[0, config().getDefaultPageSize()] @AT@ 19840 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:config:[] @TO@ MethodInvocation@@config().getDefaultPageSize() @AT@ 19840 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getDefaultPageSize:[] @TO@ MethodInvocation@@config().getDefaultPageSize() @AT@ 19849 @LENGTH@ 20


MOV ExpressionStatement@@MethodInvocation:assertThat(property.getComponentType().getType(),is(Matchers.<Class<?>>equalTo(Object.class))) @TO@ MethodDeclaration@@public, void, MethodName:discoversArraysAndCollections,  @AT@ 4160 @LENGTH@ 97


UPD ExpressionStatement@@MethodInvocation:Assert.assertFalse(bean.isPostConstructCalled()) @TO@ MethodInvocation:Assert.assertFalse(InterceptedNoProceedSLSB.isPostConstructCalled()) @AT@ 2331 @LENGTH@ 49
---UPD MethodInvocation@@Assert.assertFalse(bean.isPostConstructCalled()) @TO@ Assert.assertFalse(InterceptedNoProceedSLSB.isPostConstructCalled()) @AT@ 2331 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertFalse:[bean.isPostConstructCalled()] @TO@ MethodName:assertFalse:[InterceptedNoProceedSLSB.isPostConstructCalled()] @AT@ 2338 @LENGTH@ 41
---------UPD MethodInvocation@@bean.isPostConstructCalled() @TO@ InterceptedNoProceedSLSB.isPostConstructCalled() @AT@ 2350 @LENGTH@ 28
------------UPD SimpleName@@Name:bean @TO@ Name:InterceptedNoProceedSLSB @AT@ 2350 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @TO@ TypeDeclaration@@[public]DefaultTraceEventMessageTest, ContextTestSupport @AT@ 3156 @LENGTH@ 676
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3156 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3163 @LENGTH@ 4
---INS SimpleName@@MethodName:testDefaultTraceEventMessageBody @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3168 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3210 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(context); @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3230 @LENGTH@ 49
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(context); @AT@ 3230 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=new DefaultExchange(context) @TO@ VariableDeclarationStatement@@Exchange exchange=new DefaultExchange(context); @AT@ 3239 @LENGTH@ 39
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=new DefaultExchange(context) @AT@ 3239 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultExchange[context] @TO@ VariableDeclarationFragment@@exchange=new DefaultExchange(context) @AT@ 3250 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 3250 @LENGTH@ 3
------------INS SimpleType@@DefaultExchange @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 3254 @LENGTH@ 15
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 3270 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(new File("target/test")) @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3288 @LENGTH@ 50
------INS MethodInvocation@@exchange.getIn().setBody(new File("target/test")) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(new File("target/test")) @AT@ 3288 @LENGTH@ 49
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody(new File("target/test")) @AT@ 3288 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody(new File("target/test")) @AT@ 3288 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:[new File("target/test")] @TO@ MethodInvocation@@exchange.getIn().setBody(new File("target/test")) @AT@ 3305 @LENGTH@ 32
------------INS ClassInstanceCreation@@File["target/test"] @TO@ SimpleName@@MethodName:setBody:[new File("target/test")] @AT@ 3313 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 3313 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 3317 @LENGTH@ 4
---------------INS StringLiteral@@"target/test" @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 3322 @LENGTH@ 13
---INS VariableDeclarationStatement@@DefaultTraceEventMessage em=new DefaultTraceEventMessage(new Date(),null,exchange); @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3347 @LENGTH@ 87
------INS SimpleType@@DefaultTraceEventMessage @TO@ VariableDeclarationStatement@@DefaultTraceEventMessage em=new DefaultTraceEventMessage(new Date(),null,exchange); @AT@ 3347 @LENGTH@ 24
------INS VariableDeclarationFragment@@em=new DefaultTraceEventMessage(new Date(),null,exchange) @TO@ VariableDeclarationStatement@@DefaultTraceEventMessage em=new DefaultTraceEventMessage(new Date(),null,exchange); @AT@ 3372 @LENGTH@ 61
---------INS SimpleName@@em @TO@ VariableDeclarationFragment@@em=new DefaultTraceEventMessage(new Date(),null,exchange) @AT@ 3372 @LENGTH@ 2
---------INS ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @TO@ VariableDeclarationFragment@@em=new DefaultTraceEventMessage(new Date(),null,exchange) @AT@ 3377 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3377 @LENGTH@ 3
------------INS SimpleType@@DefaultTraceEventMessage @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3381 @LENGTH@ 24
------------INS ClassInstanceCreation@@Date[] @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3406 @LENGTH@ 10
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 3406 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 3410 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3418 @LENGTH@ 4
------------INS SimpleName@@exchange @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3424 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong body string","[Body is file based: target/test]",em.getBody()) @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3452 @LENGTH@ 91
------INS MethodInvocation@@assertEquals("Get a wrong body string","[Body is file based: target/test]",em.getBody()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong body string","[Body is file based: target/test]",em.getBody()) @AT@ 3452 @LENGTH@ 90
---------INS SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is file based: target/test]", em.getBody()] @TO@ MethodInvocation@@assertEquals("Get a wrong body string","[Body is file based: target/test]",em.getBody()) @AT@ 3452 @LENGTH@ 90
------------INS StringLiteral@@"Get a wrong body string" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is file based: target/test]", em.getBody()] @AT@ 3465 @LENGTH@ 25
------------INS StringLiteral@@"[Body is file based: target/test]" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is file based: target/test]", em.getBody()] @AT@ 3492 @LENGTH@ 35
------------INS MethodInvocation@@em.getBody() @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is file based: target/test]", em.getBody()] @AT@ 3529 @LENGTH@ 12
---------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getBody() @AT@ 3529 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@em.getBody() @AT@ 3532 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(new ByteArrayInputStream("target/test".getBytes())) @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3561 @LENGTH@ 77
------INS MethodInvocation@@exchange.getIn().setBody(new ByteArrayInputStream("target/test".getBytes())) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(new ByteArrayInputStream("target/test".getBytes())) @AT@ 3561 @LENGTH@ 76
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody(new ByteArrayInputStream("target/test".getBytes())) @AT@ 3561 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody(new ByteArrayInputStream("target/test".getBytes())) @AT@ 3561 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:[new ByteArrayInputStream("target/test".getBytes())] @TO@ MethodInvocation@@exchange.getIn().setBody(new ByteArrayInputStream("target/test".getBytes())) @AT@ 3578 @LENGTH@ 59
------------INS ClassInstanceCreation@@ByteArrayInputStream["target/test".getBytes()] @TO@ SimpleName@@MethodName:setBody:[new ByteArrayInputStream("target/test".getBytes())] @AT@ 3586 @LENGTH@ 50
---------------INS New@@new @TO@ ClassInstanceCreation@@ByteArrayInputStream["target/test".getBytes()] @AT@ 3586 @LENGTH@ 3
---------------INS SimpleType@@ByteArrayInputStream @TO@ ClassInstanceCreation@@ByteArrayInputStream["target/test".getBytes()] @AT@ 3590 @LENGTH@ 20
---------------INS MethodInvocation@@"target/test".getBytes() @TO@ ClassInstanceCreation@@ByteArrayInputStream["target/test".getBytes()] @AT@ 3611 @LENGTH@ 24
------------------INS StringLiteral@@"target/test" @TO@ MethodInvocation@@"target/test".getBytes() @AT@ 3611 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"target/test".getBytes() @AT@ 3625 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:em=new DefaultTraceEventMessage(new Date(),null,exchange) @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3647 @LENGTH@ 62
------INS Assignment@@em=new DefaultTraceEventMessage(new Date(),null,exchange) @TO@ ExpressionStatement@@Assignment:em=new DefaultTraceEventMessage(new Date(),null,exchange) @AT@ 3647 @LENGTH@ 61
---------INS SimpleName@@em @TO@ Assignment@@em=new DefaultTraceEventMessage(new Date(),null,exchange) @AT@ 3647 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@em=new DefaultTraceEventMessage(new Date(),null,exchange) @AT@ 3649 @LENGTH@ 1
---------INS ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @TO@ Assignment@@em=new DefaultTraceEventMessage(new Date(),null,exchange) @AT@ 3652 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3652 @LENGTH@ 3
------------INS SimpleType@@DefaultTraceEventMessage @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3656 @LENGTH@ 24
------------INS ClassInstanceCreation@@Date[] @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3681 @LENGTH@ 10
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 3681 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 3685 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3693 @LENGTH@ 4
------------INS SimpleName@@exchange @TO@ ClassInstanceCreation@@DefaultTraceEventMessage[new Date(), null, exchange] @AT@ 3699 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong body string","[Body is instance of java.io.InputStream]",em.getBody()) @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTraceEventMessageBody, Exception,  @AT@ 3727 @LENGTH@ 99
------INS MethodInvocation@@assertEquals("Get a wrong body string","[Body is instance of java.io.InputStream]",em.getBody()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong body string","[Body is instance of java.io.InputStream]",em.getBody()) @AT@ 3727 @LENGTH@ 98
---------INS SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is instance of java.io.InputStream]", em.getBody()] @TO@ MethodInvocation@@assertEquals("Get a wrong body string","[Body is instance of java.io.InputStream]",em.getBody()) @AT@ 3727 @LENGTH@ 98
------------INS StringLiteral@@"Get a wrong body string" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is instance of java.io.InputStream]", em.getBody()] @AT@ 3740 @LENGTH@ 25
------------INS StringLiteral@@"[Body is instance of java.io.InputStream]" @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is instance of java.io.InputStream]", em.getBody()] @AT@ 3767 @LENGTH@ 43
------------INS MethodInvocation@@em.getBody() @TO@ SimpleName@@MethodName:assertEquals:["Get a wrong body string", "[Body is instance of java.io.InputStream]", em.getBody()] @AT@ 3812 @LENGTH@ 12
---------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getBody() @AT@ 3812 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@em.getBody() @AT@ 3815 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @TO@ TypeDeclaration@@[public, final]Decimal128, Number[Comparable<Decimal128>] @AT@ 34282 @LENGTH@ 647
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34282 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34289 @LENGTH@ 4
---INS SimpleName@@MethodName:multiplyDestructive @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34294 @LENGTH@ 19
---INS SingleVariableDeclaration@@Decimal128 right @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34314 @LENGTH@ 16
------INS SimpleType@@Decimal128 @TO@ SingleVariableDeclaration@@Decimal128 right @AT@ 34314 @LENGTH@ 10
------INS SimpleName@@right @TO@ SingleVariableDeclaration@@Decimal128 right @AT@ 34325 @LENGTH@ 5
---INS SingleVariableDeclaration@@short newScale @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34332 @LENGTH@ 14
------INS PrimitiveType@@short @TO@ SingleVariableDeclaration@@short newScale @AT@ 34332 @LENGTH@ 5
------INS SimpleName@@newScale @TO@ SingleVariableDeclaration@@short newScale @AT@ 34338 @LENGTH@ 8
---INS VariableDeclarationStatement@@HiveDecimal rightHD=HiveDecimal.create(right.toBigDecimal()); @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34354 @LENGTH@ 63
------INS SimpleType@@HiveDecimal @TO@ VariableDeclarationStatement@@HiveDecimal rightHD=HiveDecimal.create(right.toBigDecimal()); @AT@ 34354 @LENGTH@ 11
------INS VariableDeclarationFragment@@rightHD=HiveDecimal.create(right.toBigDecimal()) @TO@ VariableDeclarationStatement@@HiveDecimal rightHD=HiveDecimal.create(right.toBigDecimal()); @AT@ 34366 @LENGTH@ 50
---------INS SimpleName@@rightHD @TO@ VariableDeclarationFragment@@rightHD=HiveDecimal.create(right.toBigDecimal()) @AT@ 34366 @LENGTH@ 7
---------INS MethodInvocation@@HiveDecimal.create(right.toBigDecimal()) @TO@ VariableDeclarationFragment@@rightHD=HiveDecimal.create(right.toBigDecimal()) @AT@ 34376 @LENGTH@ 40
------------INS SimpleName@@Name:HiveDecimal @TO@ MethodInvocation@@HiveDecimal.create(right.toBigDecimal()) @AT@ 34376 @LENGTH@ 11
------------INS SimpleName@@MethodName:create:[right.toBigDecimal()] @TO@ MethodInvocation@@HiveDecimal.create(right.toBigDecimal()) @AT@ 34388 @LENGTH@ 28
---------------INS MethodInvocation@@right.toBigDecimal() @TO@ SimpleName@@MethodName:create:[right.toBigDecimal()] @AT@ 34395 @LENGTH@ 20
------------------INS SimpleName@@Name:right @TO@ MethodInvocation@@right.toBigDecimal() @AT@ 34395 @LENGTH@ 5
------------------INS SimpleName@@MethodName:toBigDecimal:[] @TO@ MethodInvocation@@right.toBigDecimal() @AT@ 34401 @LENGTH@ 14
---INS VariableDeclarationStatement@@HiveDecimal thisHD=HiveDecimal.create(this.toBigDecimal()); @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34422 @LENGTH@ 61
------INS SimpleType@@HiveDecimal @TO@ VariableDeclarationStatement@@HiveDecimal thisHD=HiveDecimal.create(this.toBigDecimal()); @AT@ 34422 @LENGTH@ 11
------INS VariableDeclarationFragment@@thisHD=HiveDecimal.create(this.toBigDecimal()) @TO@ VariableDeclarationStatement@@HiveDecimal thisHD=HiveDecimal.create(this.toBigDecimal()); @AT@ 34434 @LENGTH@ 48
---------INS SimpleName@@thisHD @TO@ VariableDeclarationFragment@@thisHD=HiveDecimal.create(this.toBigDecimal()) @AT@ 34434 @LENGTH@ 6
---------INS MethodInvocation@@HiveDecimal.create(this.toBigDecimal()) @TO@ VariableDeclarationFragment@@thisHD=HiveDecimal.create(this.toBigDecimal()) @AT@ 34443 @LENGTH@ 39
------------INS SimpleName@@Name:HiveDecimal @TO@ MethodInvocation@@HiveDecimal.create(this.toBigDecimal()) @AT@ 34443 @LENGTH@ 11
------------INS SimpleName@@MethodName:create:[this.toBigDecimal()] @TO@ MethodInvocation@@HiveDecimal.create(this.toBigDecimal()) @AT@ 34455 @LENGTH@ 27
---------------INS MethodInvocation@@this.toBigDecimal() @TO@ SimpleName@@MethodName:create:[this.toBigDecimal()] @AT@ 34462 @LENGTH@ 19
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.toBigDecimal() @AT@ 34462 @LENGTH@ 4
------------------INS SimpleName@@MethodName:toBigDecimal:[] @TO@ MethodInvocation@@this.toBigDecimal() @AT@ 34467 @LENGTH@ 14
---INS VariableDeclarationStatement@@HiveDecimal result=thisHD.multiply(rightHD); @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34488 @LENGTH@ 46
------INS SimpleType@@HiveDecimal @TO@ VariableDeclarationStatement@@HiveDecimal result=thisHD.multiply(rightHD); @AT@ 34488 @LENGTH@ 11
------INS VariableDeclarationFragment@@result=thisHD.multiply(rightHD) @TO@ VariableDeclarationStatement@@HiveDecimal result=thisHD.multiply(rightHD); @AT@ 34500 @LENGTH@ 33
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=thisHD.multiply(rightHD) @AT@ 34500 @LENGTH@ 6
---------INS MethodInvocation@@thisHD.multiply(rightHD) @TO@ VariableDeclarationFragment@@result=thisHD.multiply(rightHD) @AT@ 34509 @LENGTH@ 24
------------INS SimpleName@@Name:thisHD @TO@ MethodInvocation@@thisHD.multiply(rightHD) @AT@ 34509 @LENGTH@ 6
------------INS SimpleName@@MethodName:multiply:[rightHD] @TO@ MethodInvocation@@thisHD.multiply(rightHD) @AT@ 34516 @LENGTH@ 17
---------------INS SimpleName@@rightHD @TO@ SimpleName@@MethodName:multiply:[rightHD] @AT@ 34525 @LENGTH@ 7
---INS IfStatement@@if (result == null) {  throw new ArithmeticException("null multiply result");} @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34711 @LENGTH@ 88
------INS InfixExpression@@result == null @TO@ IfStatement@@if (result == null) {  throw new ArithmeticException("null multiply result");} @AT@ 34715 @LENGTH@ 14
---------INS SimpleName@@result @TO@ InfixExpression@@result == null @AT@ 34715 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@result == null @AT@ 34721 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@result == null @AT@ 34725 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new ArithmeticException("null multiply result");} @TO@ IfStatement@@if (result == null) {  throw new ArithmeticException("null multiply result");} @AT@ 34731 @LENGTH@ 68
---------INS ThrowStatement@@ClassInstanceCreation:new ArithmeticException("null multiply result") @TO@ Block@@ThenBody:{  throw new ArithmeticException("null multiply result");} @AT@ 34739 @LENGTH@ 54
------------INS ClassInstanceCreation@@ArithmeticException["null multiply result"] @TO@ ThrowStatement@@ClassInstanceCreation:new ArithmeticException("null multiply result") @AT@ 34745 @LENGTH@ 47
---------------INS New@@new @TO@ ClassInstanceCreation@@ArithmeticException["null multiply result"] @AT@ 34745 @LENGTH@ 3
---------------INS SimpleType@@ArithmeticException @TO@ ClassInstanceCreation@@ArithmeticException["null multiply result"] @AT@ 34749 @LENGTH@ 19
---------------INS StringLiteral@@"null multiply result" @TO@ ClassInstanceCreation@@ArithmeticException["null multiply result"] @AT@ 34769 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:this.update(result.bigDecimalValue().toPlainString(),newScale) @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34804 @LENGTH@ 64
------INS MethodInvocation@@this.update(result.bigDecimalValue().toPlainString(),newScale) @TO@ ExpressionStatement@@MethodInvocation:this.update(result.bigDecimalValue().toPlainString(),newScale) @AT@ 34804 @LENGTH@ 63
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.update(result.bigDecimalValue().toPlainString(),newScale) @AT@ 34804 @LENGTH@ 4
---------INS SimpleName@@MethodName:update:[result.bigDecimalValue().toPlainString(), newScale] @TO@ MethodInvocation@@this.update(result.bigDecimalValue().toPlainString(),newScale) @AT@ 34809 @LENGTH@ 58
------------INS MethodInvocation@@result.bigDecimalValue().toPlainString() @TO@ SimpleName@@MethodName:update:[result.bigDecimalValue().toPlainString(), newScale] @AT@ 34816 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:bigDecimalValue:[] @TO@ MethodInvocation@@result.bigDecimalValue().toPlainString() @AT@ 34816 @LENGTH@ 24
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.bigDecimalValue().toPlainString() @AT@ 34816 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toPlainString:[] @TO@ MethodInvocation@@result.bigDecimalValue().toPlainString() @AT@ 34841 @LENGTH@ 15
------------INS SimpleName@@newScale @TO@ SimpleName@@MethodName:update:[result.bigDecimalValue().toPlainString(), newScale] @AT@ 34858 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:this.unscaledValue.throwIfExceedsTenToThirtyEight() @TO@ MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @AT@ 34873 @LENGTH@ 52
------INS MethodInvocation@@this.unscaledValue.throwIfExceedsTenToThirtyEight() @TO@ ExpressionStatement@@MethodInvocation:this.unscaledValue.throwIfExceedsTenToThirtyEight() @AT@ 34873 @LENGTH@ 51
---------INS FieldAccess@@this.unscaledValue @TO@ MethodInvocation@@this.unscaledValue.throwIfExceedsTenToThirtyEight() @AT@ 34873 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.unscaledValue @AT@ 34873 @LENGTH@ 4
------------INS SimpleName@@unscaledValue @TO@ FieldAccess@@this.unscaledValue @AT@ 34878 @LENGTH@ 13
---------INS SimpleName@@MethodName:throwIfExceedsTenToThirtyEight:[] @TO@ MethodInvocation@@this.unscaledValue.throwIfExceedsTenToThirtyEight() @AT@ 34892 @LENGTH@ 32


DEL FieldDeclaration@@private, static, final, Charset, [UTF_8=Charset.forName("UTF-8")] @AT@ 3165 @LENGTH@ 62
---DEL Modifier@@private @AT@ 3165 @LENGTH@ 7
---DEL Modifier@@static @AT@ 3173 @LENGTH@ 6
---DEL Modifier@@final @AT@ 3180 @LENGTH@ 5
---DEL SimpleType@@Charset @AT@ 3186 @LENGTH@ 7
---DEL VariableDeclarationFragment@@UTF_8=Charset.forName("UTF-8") @AT@ 3194 @LENGTH@ 32
------DEL SimpleName@@UTF_8 @AT@ 3194 @LENGTH@ 5
------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3202 @LENGTH@ 24
---------DEL SimpleName@@Name:Charset @AT@ 3202 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3210 @LENGTH@ 16
------------DEL StringLiteral@@"UTF-8" @AT@ 3218 @LENGTH@ 7


INS IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @TO@ MethodDeclaration@@public, void, MethodName:testExpire, Exception,  @AT@ 3093 @LENGTH@ 199
---INS InfixExpression@@keyOps instanceof List || keyOps instanceof Set @TO@ IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3096 @LENGTH@ 47
------INS InstanceofExpression@@keyOps instanceof List @TO@ InfixExpression@@keyOps instanceof List || keyOps instanceof Set @AT@ 3096 @LENGTH@ 22
---------INS SimpleName@@keyOps @TO@ InstanceofExpression@@keyOps instanceof List @AT@ 3096 @LENGTH@ 6
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@keyOps instanceof List @AT@ 3103 @LENGTH@ 10
---------INS SimpleType@@List @TO@ InstanceofExpression@@keyOps instanceof List @AT@ 3114 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@keyOps instanceof List || keyOps instanceof Set @AT@ 3118 @LENGTH@ 2
------INS InstanceofExpression@@keyOps instanceof Set @TO@ InfixExpression@@keyOps instanceof List || keyOps instanceof Set @AT@ 3122 @LENGTH@ 21
---------INS SimpleName@@keyOps @TO@ InstanceofExpression@@keyOps instanceof Set @AT@ 3122 @LENGTH@ 6
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@keyOps instanceof Set @AT@ 3129 @LENGTH@ 10
---------INS SimpleType@@Set @TO@ InstanceofExpression@@keyOps instanceof Set @AT@ 3140 @LENGTH@ 3
---INS Block@@ThenBody:{  ((Collection)keyOps).add("dummy");} @TO@ IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3144 @LENGTH@ 59
------INS ExpressionStatement@@MethodInvocation:((Collection)keyOps).add("dummy") @TO@ Block@@ThenBody:{  ((Collection)keyOps).add("dummy");} @AT@ 3158 @LENGTH@ 35
---------INS MethodInvocation@@((Collection)keyOps).add("dummy") @TO@ ExpressionStatement@@MethodInvocation:((Collection)keyOps).add("dummy") @AT@ 3158 @LENGTH@ 34
------------INS ParenthesizedExpression@@((Collection)keyOps) @TO@ MethodInvocation@@((Collection)keyOps).add("dummy") @AT@ 3158 @LENGTH@ 21
---------------INS CastExpression@@(Collection)keyOps @TO@ ParenthesizedExpression@@((Collection)keyOps) @AT@ 3159 @LENGTH@ 19
------------------INS SimpleType@@Collection @TO@ CastExpression@@(Collection)keyOps @AT@ 3160 @LENGTH@ 10
------------------INS SimpleName@@keyOps @TO@ CastExpression@@(Collection)keyOps @AT@ 3172 @LENGTH@ 6
------------INS SimpleName@@MethodName:add:["dummy"] @TO@ MethodInvocation@@((Collection)keyOps).add("dummy") @AT@ 3180 @LENGTH@ 12
---------------INS StringLiteral@@"dummy" @TO@ SimpleName@@MethodName:add:["dummy"] @AT@ 3184 @LENGTH@ 7
---INS Block@@ElseBody:if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @TO@ IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3208 @LENGTH@ 84
------INS IfStatement@@if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @TO@ Block@@ElseBody:if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3208 @LENGTH@ 84
---------INS InstanceofExpression@@keyOps instanceof Map @TO@ IfStatement@@if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3211 @LENGTH@ 21
------------INS SimpleName@@keyOps @TO@ InstanceofExpression@@keyOps instanceof Map @AT@ 3211 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@keyOps instanceof Map @AT@ 3218 @LENGTH@ 10
------------INS SimpleType@@Map @TO@ InstanceofExpression@@keyOps instanceof Map @AT@ 3229 @LENGTH@ 3
---------INS Block@@ThenBody:{  ((Map)keyOps).put("dummy","dummy");} @TO@ IfStatement@@if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3233 @LENGTH@ 59
------------INS ExpressionStatement@@MethodInvocation:((Map)keyOps).put("dummy","dummy") @TO@ Block@@ThenBody:{  ((Map)keyOps).put("dummy","dummy");} @AT@ 3247 @LENGTH@ 35
---------------INS MethodInvocation@@((Map)keyOps).put("dummy","dummy") @TO@ ExpressionStatement@@MethodInvocation:((Map)keyOps).put("dummy","dummy") @AT@ 3247 @LENGTH@ 34
------------------INS ParenthesizedExpression@@((Map)keyOps) @TO@ MethodInvocation@@((Map)keyOps).put("dummy","dummy") @AT@ 3247 @LENGTH@ 13
---------------------INS CastExpression@@(Map)keyOps @TO@ ParenthesizedExpression@@((Map)keyOps) @AT@ 3248 @LENGTH@ 11
------------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)keyOps @AT@ 3249 @LENGTH@ 3
------------------------INS SimpleName@@keyOps @TO@ CastExpression@@(Map)keyOps @AT@ 3253 @LENGTH@ 6
------------------INS SimpleName@@MethodName:put:["dummy", "dummy"] @TO@ MethodInvocation@@((Map)keyOps).put("dummy","dummy") @AT@ 3261 @LENGTH@ 20
---------------------INS StringLiteral@@"dummy" @TO@ SimpleName@@MethodName:put:["dummy", "dummy"] @AT@ 3265 @LENGTH@ 7
---------------------INS StringLiteral@@"dummy" @TO@ SimpleName@@MethodName:put:["dummy", "dummy"] @AT@ 3273 @LENGTH@ 7


UPD MethodDeclaration@@public, PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, Exception,  @TO@ public, PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, List<String> userIdParts, Exception,  @AT@ 1917 @LENGTH@ 141
---INS SingleVariableDeclaration@@List<String> userIdParts @TO@ MethodDeclaration@@public, PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, Exception,  @AT@ 1988 @LENGTH@ 24
------INS ParameterizedType@@List<String> @TO@ SingleVariableDeclaration@@List<String> userIdParts @AT@ 1988 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1988 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1993 @LENGTH@ 6
------INS SimpleName@@userIdParts @TO@ SingleVariableDeclaration@@List<String> userIdParts @AT@ 2001 @LENGTH@ 11
---UPD ReturnStatement@@MethodInvocation:pgpPublicKeyRing.getPublicKey(keyId) @TO@ MethodInvocation:PGPDataFormatUtil.getPublicKeyWithKeyIdAndUserID(keyId,userIdParts,pgpPublicKeyRing) @AT@ 2008 @LENGTH@ 44
------UPD MethodInvocation@@pgpPublicKeyRing.getPublicKey(keyId) @TO@ PGPDataFormatUtil.getPublicKeyWithKeyIdAndUserID(keyId,userIdParts,pgpPublicKeyRing) @AT@ 2015 @LENGTH@ 36
---------UPD SimpleName@@Name:pgpPublicKeyRing @TO@ Name:PGPDataFormatUtil @AT@ 2015 @LENGTH@ 16
---------UPD SimpleName@@MethodName:getPublicKey:[keyId] @TO@ MethodName:getPublicKeyWithKeyIdAndUserID:[keyId, userIdParts, pgpPublicKeyRing] @AT@ 2032 @LENGTH@ 19
------------INS SimpleName@@userIdParts @TO@ SimpleName@@MethodName:getPublicKey:[keyId] @AT@ 2111 @LENGTH@ 11
------------INS SimpleName@@pgpPublicKeyRing @TO@ SimpleName@@MethodName:getPublicKey:[keyId] @AT@ 2124 @LENGTH@ 16


UPD FieldDeclaration@@private, static, final, List<Class<?>>, [GEO_NEAR_RESULTS=Arrays.asList(GeoResult.class,GeoResults.class,GeoPage.class)] @TO@ private, static, final, List<Class<? extends Serializable>>, [GEO_NEAR_RESULTS=Arrays.asList(GeoResult.class,GeoResults.class,GeoPage.class)] @AT@ 1747 @LENGTH@ 122
---UPD ParameterizedType@@List<Class<?>> @TO@ List<Class<? extends Serializable>> @AT@ 1768 @LENGTH@ 14
------UPD ParameterizedType@@Class<?> @TO@ Class<? extends Serializable> @AT@ 1773 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:reader=new InputStreamReader(new FileInputStream(file),"UTF-8") @TO@ Assignment:reader=new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8) @AT@ 8019 @LENGTH@ 67
---UPD Assignment@@reader=new InputStreamReader(new FileInputStream(file),"UTF-8") @TO@ reader=new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8) @AT@ 8019 @LENGTH@ 66
------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(file), "UTF-8"] @TO@ InputStreamReader[new FileInputStream(file), StandardCharsets.UTF_8] @AT@ 8028 @LENGTH@ 57
---------DEL StringLiteral@@"UTF-8" @AT@ 8077 @LENGTH@ 7
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(file), "UTF-8"] @AT@ 8134 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8134 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8151 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:addMappingRules, Map<String,MappedServices> rules,  @TO@ public, void, MethodName:appendMappedServices, Map<String,MappedServices> rules,  @AT@ 5686 @LENGTH@ 106
---UPD SimpleName@@MethodName:addMappingRules @TO@ MethodName:appendMappedServices @AT@ 5698 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @TO@ TypeDeclaration@@[@Transactional, @ContextConfiguration(classes=JpaRepositoryConfig.class), public]JpaWebTests, AbstractWebIntegrationTests @AT@ 9611 @LENGTH@ 549
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9611 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9618 @LENGTH@ 4
---INS SimpleName@@MethodName:propertiesCanHaveNulls @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9623 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9655 @LENGTH@ 9
---INS VariableDeclarationStatement@@Link peopleLink=discoverUnique("people"); @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9670 @LENGTH@ 43
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link peopleLink=discoverUnique("people"); @AT@ 9670 @LENGTH@ 4
------INS VariableDeclarationFragment@@peopleLink=discoverUnique("people") @TO@ VariableDeclarationStatement@@Link peopleLink=discoverUnique("people"); @AT@ 9675 @LENGTH@ 37
---------INS SimpleName@@peopleLink @TO@ VariableDeclarationFragment@@peopleLink=discoverUnique("people") @AT@ 9675 @LENGTH@ 10
---------INS MethodInvocation@@discoverUnique("people") @TO@ VariableDeclarationFragment@@peopleLink=discoverUnique("people") @AT@ 9688 @LENGTH@ 24
------------INS SimpleName@@MethodName:discoverUnique:["people"] @TO@ MethodInvocation@@discoverUnique("people") @AT@ 9688 @LENGTH@ 24
---------------INS StringLiteral@@"people" @TO@ SimpleName@@MethodName:discoverUnique:["people"] @AT@ 9703 @LENGTH@ 8
---INS VariableDeclarationStatement@@ObjectMapper mapper=new ObjectMapper(); @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9716 @LENGTH@ 41
------INS SimpleType@@ObjectMapper @TO@ VariableDeclarationStatement@@ObjectMapper mapper=new ObjectMapper(); @AT@ 9716 @LENGTH@ 12
------INS VariableDeclarationFragment@@mapper=new ObjectMapper() @TO@ VariableDeclarationStatement@@ObjectMapper mapper=new ObjectMapper(); @AT@ 9729 @LENGTH@ 27
---------INS SimpleName@@mapper @TO@ VariableDeclarationFragment@@mapper=new ObjectMapper() @AT@ 9729 @LENGTH@ 6
---------INS ClassInstanceCreation@@ObjectMapper[] @TO@ VariableDeclarationFragment@@mapper=new ObjectMapper() @AT@ 9738 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 9738 @LENGTH@ 3
------------INS SimpleType@@ObjectMapper @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 9742 @LENGTH@ 12
---INS VariableDeclarationStatement@@Person frodo=new Person(); @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9761 @LENGTH@ 28
------INS SimpleType@@Person @TO@ VariableDeclarationStatement@@Person frodo=new Person(); @AT@ 9761 @LENGTH@ 6
------INS VariableDeclarationFragment@@frodo=new Person() @TO@ VariableDeclarationStatement@@Person frodo=new Person(); @AT@ 9768 @LENGTH@ 20
---------INS SimpleName@@frodo @TO@ VariableDeclarationFragment@@frodo=new Person() @AT@ 9768 @LENGTH@ 5
---------INS ClassInstanceCreation@@Person[] @TO@ VariableDeclarationFragment@@frodo=new Person() @AT@ 9776 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Person[] @AT@ 9776 @LENGTH@ 3
------------INS SimpleType@@Person @TO@ ClassInstanceCreation@@Person[] @AT@ 9780 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:frodo.setFirstName("Frodo") @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9792 @LENGTH@ 28
------INS MethodInvocation@@frodo.setFirstName("Frodo") @TO@ ExpressionStatement@@MethodInvocation:frodo.setFirstName("Frodo") @AT@ 9792 @LENGTH@ 27
---------INS SimpleName@@Name:frodo @TO@ MethodInvocation@@frodo.setFirstName("Frodo") @AT@ 9792 @LENGTH@ 5
---------INS SimpleName@@MethodName:setFirstName:["Frodo"] @TO@ MethodInvocation@@frodo.setFirstName("Frodo") @AT@ 9798 @LENGTH@ 21
------------INS StringLiteral@@"Frodo" @TO@ SimpleName@@MethodName:setFirstName:["Frodo"] @AT@ 9811 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:frodo.setLastName(null) @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9823 @LENGTH@ 24
------INS MethodInvocation@@frodo.setLastName(null) @TO@ ExpressionStatement@@MethodInvocation:frodo.setLastName(null) @AT@ 9823 @LENGTH@ 23
---------INS SimpleName@@Name:frodo @TO@ MethodInvocation@@frodo.setLastName(null) @AT@ 9823 @LENGTH@ 5
---------INS SimpleName@@MethodName:setLastName:[null] @TO@ MethodInvocation@@frodo.setLastName(null) @AT@ 9829 @LENGTH@ 17
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setLastName:[null] @AT@ 9841 @LENGTH@ 4
---INS VariableDeclarationStatement@@MockHttpServletResponse response=postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON); @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9851 @LENGTH@ 124
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON); @AT@ 9851 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON) @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON); @AT@ 9875 @LENGTH@ 99
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON) @AT@ 9875 @LENGTH@ 8
---------INS MethodInvocation@@postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON) @TO@ VariableDeclarationFragment@@response=postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON) @AT@ 9886 @LENGTH@ 88
------------INS SimpleName@@MethodName:postAndGet:[peopleLink, mapper.writeValueAsString(frodo), MediaType.APPLICATION_JSON] @TO@ MethodInvocation@@postAndGet(peopleLink,mapper.writeValueAsString(frodo),MediaType.APPLICATION_JSON) @AT@ 9886 @LENGTH@ 88
---------------INS SimpleName@@peopleLink @TO@ SimpleName@@MethodName:postAndGet:[peopleLink, mapper.writeValueAsString(frodo), MediaType.APPLICATION_JSON] @AT@ 9897 @LENGTH@ 10
---------------INS MethodInvocation@@mapper.writeValueAsString(frodo) @TO@ SimpleName@@MethodName:postAndGet:[peopleLink, mapper.writeValueAsString(frodo), MediaType.APPLICATION_JSON] @AT@ 9909 @LENGTH@ 32
------------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.writeValueAsString(frodo) @AT@ 9909 @LENGTH@ 6
------------------INS SimpleName@@MethodName:writeValueAsString:[frodo] @TO@ MethodInvocation@@mapper.writeValueAsString(frodo) @AT@ 9916 @LENGTH@ 25
---------------------INS SimpleName@@frodo @TO@ SimpleName@@MethodName:writeValueAsString:[frodo] @AT@ 9935 @LENGTH@ 5
---------------INS QualifiedName@@MediaType.APPLICATION_JSON @TO@ SimpleName@@MethodName:postAndGet:[peopleLink, mapper.writeValueAsString(frodo), MediaType.APPLICATION_JSON] @AT@ 9947 @LENGTH@ 26
------------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 9947 @LENGTH@ 9
------------------INS SimpleName@@APPLICATION_JSON @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 9957 @LENGTH@ 16
---INS VariableDeclarationStatement@@String responseBody=response.getContentAsString(); @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 9978 @LENGTH@ 52
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String responseBody=response.getContentAsString(); @AT@ 9978 @LENGTH@ 6
------INS VariableDeclarationFragment@@responseBody=response.getContentAsString() @TO@ VariableDeclarationStatement@@String responseBody=response.getContentAsString(); @AT@ 9985 @LENGTH@ 44
---------INS SimpleName@@responseBody @TO@ VariableDeclarationFragment@@responseBody=response.getContentAsString() @AT@ 9985 @LENGTH@ 12
---------INS MethodInvocation@@response.getContentAsString() @TO@ VariableDeclarationFragment@@responseBody=response.getContentAsString() @AT@ 10000 @LENGTH@ 29
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getContentAsString() @AT@ 10000 @LENGTH@ 8
------------INS SimpleName@@MethodName:getContentAsString:[] @TO@ MethodInvocation@@response.getContentAsString() @AT@ 10009 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:assertEquals(JsonPath.read(responseBody,"$.firstName"),"Frodo") @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 10034 @LENGTH@ 66
------INS MethodInvocation@@assertEquals(JsonPath.read(responseBody,"$.firstName"),"Frodo") @TO@ ExpressionStatement@@MethodInvocation:assertEquals(JsonPath.read(responseBody,"$.firstName"),"Frodo") @AT@ 10034 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertEquals:[JsonPath.read(responseBody,"$.firstName"), "Frodo"] @TO@ MethodInvocation@@assertEquals(JsonPath.read(responseBody,"$.firstName"),"Frodo") @AT@ 10034 @LENGTH@ 65
------------INS MethodInvocation@@JsonPath.read(responseBody,"$.firstName") @TO@ SimpleName@@MethodName:assertEquals:[JsonPath.read(responseBody,"$.firstName"), "Frodo"] @AT@ 10047 @LENGTH@ 42
---------------INS SimpleName@@Name:JsonPath @TO@ MethodInvocation@@JsonPath.read(responseBody,"$.firstName") @AT@ 10047 @LENGTH@ 8
---------------INS SimpleName@@MethodName:read:[responseBody, "$.firstName"] @TO@ MethodInvocation@@JsonPath.read(responseBody,"$.firstName") @AT@ 10056 @LENGTH@ 33
------------------INS SimpleName@@responseBody @TO@ SimpleName@@MethodName:read:[responseBody, "$.firstName"] @AT@ 10061 @LENGTH@ 12
------------------INS StringLiteral@@"$.firstName" @TO@ SimpleName@@MethodName:read:[responseBody, "$.firstName"] @AT@ 10075 @LENGTH@ 13
------------INS StringLiteral@@"Frodo" @TO@ SimpleName@@MethodName:assertEquals:[JsonPath.read(responseBody,"$.firstName"), "Frodo"] @AT@ 10091 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNull(JsonPath.read(responseBody,"$.lastName")) @TO@ MethodDeclaration@@public, void, MethodName:propertiesCanHaveNulls, Exception,  @AT@ 10103 @LENGTH@ 54
------INS MethodInvocation@@assertNull(JsonPath.read(responseBody,"$.lastName")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(JsonPath.read(responseBody,"$.lastName")) @AT@ 10103 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertNull:[JsonPath.read(responseBody,"$.lastName")] @TO@ MethodInvocation@@assertNull(JsonPath.read(responseBody,"$.lastName")) @AT@ 10103 @LENGTH@ 53
------------INS MethodInvocation@@JsonPath.read(responseBody,"$.lastName") @TO@ SimpleName@@MethodName:assertNull:[JsonPath.read(responseBody,"$.lastName")] @AT@ 10114 @LENGTH@ 41
---------------INS SimpleName@@Name:JsonPath @TO@ MethodInvocation@@JsonPath.read(responseBody,"$.lastName") @AT@ 10114 @LENGTH@ 8
---------------INS SimpleName@@MethodName:read:[responseBody, "$.lastName"] @TO@ MethodInvocation@@JsonPath.read(responseBody,"$.lastName") @AT@ 10123 @LENGTH@ 32
------------------INS SimpleName@@responseBody @TO@ SimpleName@@MethodName:read:[responseBody, "$.lastName"] @AT@ 10128 @LENGTH@ 12
------------------INS StringLiteral@@"$.lastName" @TO@ SimpleName@@MethodName:read:[responseBody, "$.lastName"] @AT@ 10142 @LENGTH@ 12


UPD FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @TO@ protected, static, final, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 755 @LENGTH@ 60
---INS Modifier@@static @TO@ FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1527 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, int, [PORT=AvailablePortFinder.getNextAvailable()] @AT@ 1534 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("namespace.xml"), @ProfileValueSourceConfiguration, public]NamespaceTest,  @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration("namespace.xml"), @ProfileValueSourceConfiguration, public]NamespaceTest,  @AT@ 1359 @LENGTH@ 1004
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1359 @LENGTH@ 39


UPD ReturnStatement@@MethodInvocation:builder.toString().getBytes(Charset.forName("UTF-8")) @TO@ MethodInvocation:builder.toString().getBytes(StandardCharsets.UTF_8) @AT@ 3731 @LENGTH@ 61
---UPD MethodInvocation@@builder.toString().getBytes(Charset.forName("UTF-8")) @TO@ builder.toString().getBytes(StandardCharsets.UTF_8) @AT@ 3738 @LENGTH@ 53
------UPD SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 3757 @LENGTH@ 34
---------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3766 @LENGTH@ 24
------------DEL SimpleName@@Name:Charset @AT@ 3766 @LENGTH@ 7
------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3774 @LENGTH@ 16
---------------DEL StringLiteral@@"UTF-8" @AT@ 3782 @LENGTH@ 7
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @AT@ 3775 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3775 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3792 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:validateProfileName(profiles) @AT@ 1691 @LENGTH@ 30
---DEL MethodInvocation@@validateProfileName(profiles) @AT@ 1691 @LENGTH@ 29
------DEL SimpleName@@MethodName:validateProfileName:[profiles] @AT@ 1691 @LENGTH@ 29
---------DEL SimpleName@@profiles @AT@ 1711 @LENGTH@ 8


UPD IfStatement@@if (entry.getValue().parameter instanceof Integer) {  map.put(entry.getKey(),new JobParameter(new Date((Integer)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @TO@ if (entry.getValue().parameter instanceof Integer) {  map.put(entry.getKey(),new JobParameter(new Date((Integer)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Long) {  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @AT@ 14259 @LENGTH@ 296
---INS Block@@ElseBody:if (entry.getValue().parameter instanceof Long) {  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @TO@ IfStatement@@if (entry.getValue().parameter instanceof Integer) {  map.put(entry.getKey(),new JobParameter(new Date((Integer)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @AT@ 14417 @LENGTH@ 290
------INS IfStatement@@if (entry.getValue().parameter instanceof Long) {  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @TO@ Block@@ElseBody:if (entry.getValue().parameter instanceof Long) {  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @AT@ 14417 @LENGTH@ 290
---------MOV Block@@ElseBody:if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @TO@ IfStatement@@if (entry.getValue().parameter instanceof Long) {  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @AT@ 14417 @LENGTH@ 138
---------INS InstanceofExpression@@entry.getValue().parameter instanceof Long @TO@ IfStatement@@if (entry.getValue().parameter instanceof Long) {  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @AT@ 14420 @LENGTH@ 42
------------INS FieldAccess@@entry.getValue().parameter @TO@ InstanceofExpression@@entry.getValue().parameter instanceof Long @AT@ 14420 @LENGTH@ 26
---------------INS MethodInvocation@@entry.getValue() @TO@ FieldAccess@@entry.getValue().parameter @AT@ 14420 @LENGTH@ 16
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 14420 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 14426 @LENGTH@ 10
---------------INS SimpleName@@parameter @TO@ FieldAccess@@entry.getValue().parameter @AT@ 14437 @LENGTH@ 9
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@entry.getValue().parameter instanceof Long @AT@ 14447 @LENGTH@ 10
------------INS SimpleType@@Long @TO@ InstanceofExpression@@entry.getValue().parameter instanceof Long @AT@ 14458 @LENGTH@ 4
---------INS Block@@ThenBody:{  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} @TO@ IfStatement@@if (entry.getValue().parameter instanceof Long) {  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} else if (entry.getValue().parameter instanceof Date) {  map.put(entry.getKey(),new JobParameter(((Date)entry.getValue().parameter)));} @AT@ 14464 @LENGTH@ 99
------------INS ExpressionStatement@@MethodInvocation:map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter))) @TO@ Block@@ThenBody:{  map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter)));} @AT@ 14471 @LENGTH@ 86
---------------INS MethodInvocation@@map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter))) @TO@ ExpressionStatement@@MethodInvocation:map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter))) @AT@ 14471 @LENGTH@ 85
------------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter))) @AT@ 14471 @LENGTH@ 3
------------------INS SimpleName@@MethodName:put:[entry.getKey(), new JobParameter(new Date((Long)entry.getValue().parameter))] @TO@ MethodInvocation@@map.put(entry.getKey(),new JobParameter(new Date((Long)entry.getValue().parameter))) @AT@ 14475 @LENGTH@ 81
---------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[entry.getKey(), new JobParameter(new Date((Long)entry.getValue().parameter))] @AT@ 14479 @LENGTH@ 14
------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 14479 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 14485 @LENGTH@ 8
---------------------INS ClassInstanceCreation@@JobParameter[new Date((Long)entry.getValue().parameter)] @TO@ SimpleName@@MethodName:put:[entry.getKey(), new JobParameter(new Date((Long)entry.getValue().parameter))] @AT@ 14495 @LENGTH@ 60
------------------------INS New@@new @TO@ ClassInstanceCreation@@JobParameter[new Date((Long)entry.getValue().parameter)] @AT@ 14495 @LENGTH@ 3
------------------------INS SimpleType@@JobParameter @TO@ ClassInstanceCreation@@JobParameter[new Date((Long)entry.getValue().parameter)] @AT@ 14499 @LENGTH@ 12
------------------------INS ClassInstanceCreation@@Date[(Long)entry.getValue().parameter] @TO@ ClassInstanceCreation@@JobParameter[new Date((Long)entry.getValue().parameter)] @AT@ 14512 @LENGTH@ 42
---------------------------INS New@@new @TO@ ClassInstanceCreation@@Date[(Long)entry.getValue().parameter] @AT@ 14512 @LENGTH@ 3
---------------------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[(Long)entry.getValue().parameter] @AT@ 14516 @LENGTH@ 4
---------------------------INS CastExpression@@(Long)entry.getValue().parameter @TO@ ClassInstanceCreation@@Date[(Long)entry.getValue().parameter] @AT@ 14521 @LENGTH@ 32
------------------------------INS SimpleType@@Long @TO@ CastExpression@@(Long)entry.getValue().parameter @AT@ 14522 @LENGTH@ 4
------------------------------INS FieldAccess@@entry.getValue().parameter @TO@ CastExpression@@(Long)entry.getValue().parameter @AT@ 14527 @LENGTH@ 26
---------------------------------INS MethodInvocation@@entry.getValue() @TO@ FieldAccess@@entry.getValue().parameter @AT@ 14527 @LENGTH@ 16
------------------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 14527 @LENGTH@ 5
------------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 14533 @LENGTH@ 10
---------------------------------INS SimpleName@@parameter @TO@ FieldAccess@@entry.getValue().parameter @AT@ 14544 @LENGTH@ 9


INS TryStatement@@try {  Thread.sleep(10);} catch (InterruptedException e) {  e.printStackTrace();} @TO@ MethodDeclaration@@protected, List<Object>, MethodName:getResults,  @AT@ 4381 @LENGTH@ 170
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(10) @TO@ TryStatement@@try {  Thread.sleep(10);} catch (InterruptedException e) {  e.printStackTrace();} @AT@ 4448 @LENGTH@ 17
------INS MethodInvocation@@Thread.sleep(10) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(10) @AT@ 4448 @LENGTH@ 16
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(10) @AT@ 4448 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[10] @TO@ MethodInvocation@@Thread.sleep(10) @AT@ 4455 @LENGTH@ 9
------------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:sleep:[10] @AT@ 4461 @LENGTH@ 2
---INS CatchClause@@catch (InterruptedException e) {  e.printStackTrace();} @TO@ TryStatement@@try {  Thread.sleep(10);} catch (InterruptedException e) {  e.printStackTrace();} @AT@ 4476 @LENGTH@ 75
------INS SingleVariableDeclaration@@InterruptedException e @TO@ CatchClause@@catch (InterruptedException e) {  e.printStackTrace();} @AT@ 4483 @LENGTH@ 22
---------INS SimpleType@@InterruptedException @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 4483 @LENGTH@ 20
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 4504 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:e.printStackTrace() @TO@ CatchClause@@catch (InterruptedException e) {  e.printStackTrace();} @AT@ 4521 @LENGTH@ 20
---------INS MethodInvocation@@e.printStackTrace() @TO@ ExpressionStatement@@MethodInvocation:e.printStackTrace() @AT@ 4521 @LENGTH@ 19
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.printStackTrace() @AT@ 4521 @LENGTH@ 1
------------INS SimpleName@@MethodName:printStackTrace:[] @TO@ MethodInvocation@@e.printStackTrace() @AT@ 4523 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertVersions(node,"commons-logging","commons-logging-api","1.1.1","1.1.1") @TO@ MethodInvocation:assertVersions(node,"commons-logging","commons-logging-api","1.1") @AT@ 1606 @LENGTH@ 81
---UPD MethodInvocation@@assertVersions(node,"commons-logging","commons-logging-api","1.1.1","1.1.1") @TO@ assertVersions(node,"commons-logging","commons-logging-api","1.1") @AT@ 1606 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertVersions:[node, "commons-logging", "commons-logging-api", "1.1.1", "1.1.1"] @TO@ MethodName:assertVersions:[node, "commons-logging", "commons-logging-api", "1.1"] @AT@ 1606 @LENGTH@ 80
---------UPD StringLiteral@@"1.1.1" @TO@ "1.1" @AT@ 1669 @LENGTH@ 7
---------DEL StringLiteral@@"1.1.1" @AT@ 1678 @LENGTH@ 7


UPD TryStatement@@try {  @SuppressWarnings("unchecked") Map<String,Object> map=objectMapper.readValue(content,Map.class);  return map;} catch (Exception e) {  throw new InvalidTokenException("Cannot convert access token to JSON",e);} @TO@ try {  Jwt jwt=JwtHelper.decodeAndVerify(token,verifier);  String content=jwt.getClaims();  @SuppressWarnings("unchecked") Map<String,Object> map=objectMapper.readValue(content,Map.class);  return map;} catch (Exception e) {  throw new InvalidTokenException("Cannot convert access token to JSON",e);} @AT@ 5332 @LENGTH@ 237
---MOV VariableDeclarationStatement@@Jwt jwt=JwtHelper.decodeAndVerify(token,verifier); @TO@ TryStatement@@try {  @SuppressWarnings("unchecked") Map<String,Object> map=objectMapper.readValue(content,Map.class);  return map;} catch (Exception e) {  throw new InvalidTokenException("Cannot convert access token to JSON",e);} @AT@ 5240 @LENGTH@ 53
---MOV VariableDeclarationStatement@@String content=jwt.getClaims(); @TO@ TryStatement@@try {  @SuppressWarnings("unchecked") Map<String,Object> map=objectMapper.readValue(content,Map.class);  return map;} catch (Exception e) {  throw new InvalidTokenException("Cannot convert access token to JSON",e);} @AT@ 5296 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child><c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>") @TO@ MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" + "<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>") @AT@ 3953 @LENGTH@ 250
---UPD MethodInvocation@@template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child><c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>") @TO@ template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" + "<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>") @AT@ 3953 @LENGTH@ 249
------UPD SimpleName@@MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child><c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>"] @TO@ MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" + "<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>"] @AT@ 3962 @LENGTH@ 240
---------INS InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" + "<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child><c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>"] @AT@ 3999 @LENGTH@ 219
------------INS StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" + "<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>" @AT@ 3999 @LENGTH@ 117
------------INS Operator@@+ @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" + "<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>" @AT@ 4116 @LENGTH@ 1
------------INS StringLiteral@@"<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>" @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child>" + "<c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>" @AT@ 4131 @LENGTH@ 87
---------DEL StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><c:parent xmlns:c='urn:c'><c:child some_attr='a' anotherAttr='a'>ha</c:child><c:child some_attr='b' anotherAttr='b' /><c:child some_attr='c'></c:child></c:parent>" @AT@ 3999 @LENGTH@ 202


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @AT@ 1448 @LENGTH@ 5318
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1448 @LENGTH@ 39


INS IfStatement@@if (u.getScheme().startsWith("http")) {  path=UnsafeUriCharactersEncoder.encodeHttpURI(path);} else {  path=UnsafeUriCharactersEncoder.encode(path);} @TO@ MethodDeclaration@@public, static, String, MethodName:normalizeUri, String uri, URISyntaxException, UnsupportedEncodingException,  @AT@ 18068 @LENGTH@ 193
---INS MethodInvocation@@u.getScheme().startsWith("http") @TO@ IfStatement@@if (u.getScheme().startsWith("http")) {  path=UnsafeUriCharactersEncoder.encodeHttpURI(path);} else {  path=UnsafeUriCharactersEncoder.encode(path);} @AT@ 18072 @LENGTH@ 32
------INS MethodInvocation@@MethodName:getScheme:[] @TO@ MethodInvocation@@u.getScheme().startsWith("http") @AT@ 18072 @LENGTH@ 13
------INS SimpleName@@Name:u @TO@ MethodInvocation@@u.getScheme().startsWith("http") @AT@ 18072 @LENGTH@ 1
------INS SimpleName@@MethodName:startsWith:["http"] @TO@ MethodInvocation@@u.getScheme().startsWith("http") @AT@ 18086 @LENGTH@ 18
---------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:startsWith:["http"] @AT@ 18097 @LENGTH@ 6
---INS Block@@ThenBody:{  path=UnsafeUriCharactersEncoder.encodeHttpURI(path);} @TO@ IfStatement@@if (u.getScheme().startsWith("http")) {  path=UnsafeUriCharactersEncoder.encodeHttpURI(path);} else {  path=UnsafeUriCharactersEncoder.encode(path);} @AT@ 18106 @LENGTH@ 78
------INS ExpressionStatement@@Assignment:path=UnsafeUriCharactersEncoder.encodeHttpURI(path) @TO@ Block@@ThenBody:{  path=UnsafeUriCharactersEncoder.encodeHttpURI(path);} @AT@ 18120 @LENGTH@ 54
---------INS Assignment@@path=UnsafeUriCharactersEncoder.encodeHttpURI(path) @TO@ ExpressionStatement@@Assignment:path=UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 18120 @LENGTH@ 53
------------INS SimpleName@@path @TO@ Assignment@@path=UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 18120 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@path=UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 18124 @LENGTH@ 1
------------INS MethodInvocation@@UnsafeUriCharactersEncoder.encodeHttpURI(path) @TO@ Assignment@@path=UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 18127 @LENGTH@ 46
---------------INS SimpleName@@Name:UnsafeUriCharactersEncoder @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 18127 @LENGTH@ 26
---------------INS SimpleName@@MethodName:encodeHttpURI:[path] @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 18154 @LENGTH@ 19
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:encodeHttpURI:[path] @AT@ 18168 @LENGTH@ 4
---INS Block@@ElseBody:{  path=UnsafeUriCharactersEncoder.encode(path);} @TO@ IfStatement@@if (u.getScheme().startsWith("http")) {  path=UnsafeUriCharactersEncoder.encodeHttpURI(path);} else {  path=UnsafeUriCharactersEncoder.encode(path);} @AT@ 18190 @LENGTH@ 71
------MOV ExpressionStatement@@Assignment:path=UnsafeUriCharactersEncoder.encode(path) @TO@ Block@@ElseBody:{  path=UnsafeUriCharactersEncoder.encode(path);} @AT@ 18068 @LENGTH@ 47


UPD VariableDeclarationStatement@@List names=getMockEndpoint("mock:result").getReceivedExchanges().get(0).getIn().getBody(List.class); @TO@ List<?> names=getMockEndpoint("mock:result").getReceivedExchanges().get(0).getIn().getBody(List.class); @AT@ 1558 @LENGTH@ 102
---INS ParameterizedType@@List<?> @TO@ VariableDeclarationStatement@@List names=getMockEndpoint("mock:result").getReceivedExchanges().get(0).getIn().getBody(List.class); @AT@ 1558 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 1558 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 1563 @LENGTH@ 1
---DEL SimpleType@@List @AT@ 1558 @LENGTH@ 4


UPD IfStatement@@if (address.size() == 3) {  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @TO@ if (address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41719 @LENGTH@ 956
---UPD InfixExpression@@address.size() == 3 @TO@ address.size() >= 3 @AT@ 41723 @LENGTH@ 19
---UPD Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @TO@ ThenBody:{  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41744 @LENGTH@ 931
---MOV InfixExpression@@address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT) @TO@ IfStatement@@if (address.size() == 3) {  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 41766 @LENGTH@ 95
------INS InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @TO@ InfixExpression@@address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT) @AT@ 41677 @LENGTH@ 68
---------INS InfixExpression@@address.size() >= 2 @TO@ InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @AT@ 41677 @LENGTH@ 19
------------INS MethodInvocation@@address.size() @TO@ InfixExpression@@address.size() >= 2 @AT@ 41677 @LENGTH@ 14
---------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.size() @AT@ 41677 @LENGTH@ 7
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@address.size() @AT@ 41685 @LENGTH@ 6
------------INS Operator@@>= @TO@ InfixExpression@@address.size() >= 2 @AT@ 41691 @LENGTH@ 2
------------INS NumberLiteral@@2 @TO@ InfixExpression@@address.size() >= 2 @AT@ 41695 @LENGTH@ 1
---------MOV MethodInvocation@@address.getElement(1).getKey().equals(ACCESS) @TO@ InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @AT@ 41766 @LENGTH@ 45
---------MOV Operator@@&& @TO@ InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @AT@ 41811 @LENGTH@ 2
------INS Operator@@&& @TO@ InfixExpression@@address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT) @AT@ 41745 @LENGTH@ 2
---INS Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @TO@ IfStatement@@if (address.size() == 3) {  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 41797 @LENGTH@ 1895
------MOV VariableDeclarationStatement@@ModelNode op=operation.clone(); @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41673 @LENGTH@ 33
------INS ExpressionStatement@@MethodInvocation:op.get(OP_ADDR).set(address.toModelNode()) @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41865 @LENGTH@ 43
---------INS MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @TO@ ExpressionStatement@@MethodInvocation:op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41865 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:get:[OP_ADDR] @TO@ MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41865 @LENGTH@ 15
---------------INS SimpleName@@OP_ADDR @TO@ MethodInvocation@@MethodName:get:[OP_ADDR] @AT@ 41872 @LENGTH@ 7
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41865 @LENGTH@ 2
------------INS SimpleName@@MethodName:set:[address.toModelNode()] @TO@ MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41881 @LENGTH@ 26
---------------INS MethodInvocation@@address.toModelNode() @TO@ SimpleName@@MethodName:set:[address.toModelNode()] @AT@ 41885 @LENGTH@ 21
------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.toModelNode() @AT@ 41885 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toModelNode:[] @TO@ MethodInvocation@@address.toModelNode() @AT@ 41893 @LENGTH@ 13
------INS IfStatement@@if (address.size() >= 3) {  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41925 @LENGTH@ 938
---------MOV InfixExpression@@address.size() == 3 @TO@ IfStatement@@if (address.size() >= 3) {  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41723 @LENGTH@ 19
------------UPD Operator@@== @TO@ >= @AT@ 41737 @LENGTH@ 2
---------MOV Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @TO@ IfStatement@@if (address.size() >= 3) {  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41744 @LENGTH@ 931
------------DEL IfStatement@@if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {  String key=address.getElement(2).getKey();  if (key.equals(LOGGER)) {    return Collections.emptyMap();  } else   if (key.equals(SERVER_LOGGER)) {    PathAddress newAddr=address.subAddress(0,2);    newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41762 @LENGTH@ 899
---------------DEL Block@@ThenBody:{  String key=address.getElement(2).getKey();  if (key.equals(LOGGER)) {    return Collections.emptyMap();  } else   if (key.equals(SERVER_LOGGER)) {    PathAddress newAddr=address.subAddress(0,2);    newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41863 @LENGTH@ 798
------------------DEL IfStatement@@if (key.equals(LOGGER)) {  return Collections.emptyMap();} else if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41950 @LENGTH@ 578
------------MOV VariableDeclarationStatement@@String key=address.getElement(2).getKey(); @TO@ Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 41885 @LENGTH@ 44
---------------UPD SimpleType@@String @TO@ PathAddress @AT@ 41885 @LENGTH@ 6
---------------UPD VariableDeclarationFragment@@key=address.getElement(2).getKey() @TO@ newAddr=PathAddress.EMPTY_ADDRESS @AT@ 41892 @LENGTH@ 36
------------------UPD SimpleName@@key @TO@ newAddr @AT@ 41892 @LENGTH@ 3
------------------DEL MethodInvocation@@address.getElement(2).getKey() @AT@ 41898 @LENGTH@ 30
---------------------DEL MethodInvocation@@MethodName:getElement:[2] @AT@ 41898 @LENGTH@ 21
------------------------DEL NumberLiteral@@2 @AT@ 41917 @LENGTH@ 1
---------------------DEL SimpleName@@Name:address @AT@ 41898 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getKey:[] @AT@ 41920 @LENGTH@ 8
------------------INS QualifiedName@@PathAddress.EMPTY_ADDRESS @TO@ VariableDeclarationFragment@@key=address.getElement(2).getKey() @AT@ 41994 @LENGTH@ 25
---------------------INS SimpleName@@PathAddress @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 41994 @LENGTH@ 11
---------------------INS SimpleName@@EMPTY_ADDRESS @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 42006 @LENGTH@ 13
------------INS EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @TO@ Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 42041 @LENGTH@ 740
---------------INS SingleVariableDeclaration@@PathElement element @TO@ EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @AT@ 42046 @LENGTH@ 19
------------------INS SimpleType@@PathElement @TO@ SingleVariableDeclaration@@PathElement element @AT@ 42046 @LENGTH@ 11
------------------INS SimpleName@@element @TO@ SingleVariableDeclaration@@PathElement element @AT@ 42058 @LENGTH@ 7
---------------INS SimpleName@@address @TO@ EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @AT@ 42068 @LENGTH@ 7
---------------INS IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @TO@ EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @AT@ 42103 @LENGTH@ 656
------------------MOV MethodInvocation@@key.equals(LOGGER) @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41954 @LENGTH@ 18
---------------------UPD SimpleName@@Name:key @TO@ Name:element @AT@ 41954 @LENGTH@ 3
---------------------INS MethodInvocation@@MethodName:getKey:[] @TO@ MethodInvocation@@key.equals(LOGGER) @AT@ 42107 @LENGTH@ 16
------------------MOV MethodInvocation@@key.equals(LOGGER) @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41954 @LENGTH@ 18
---------------------UPD SimpleName@@Name:key @TO@ Name:element @AT@ 41954 @LENGTH@ 3
---------------------INS MethodInvocation@@MethodName:getKey:[] @TO@ MethodInvocation@@key.equals(LOGGER) @AT@ 42107 @LENGTH@ 16
------------------MOV Block@@ThenBody:{  return Collections.emptyMap();} @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41974 @LENGTH@ 141
------------------MOV Block@@ThenBody:{  return Collections.emptyMap();} @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41974 @LENGTH@ 141
------------------MOV Block@@ElseBody:if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 42121 @LENGTH@ 407
---------------------INS VariableDeclarationStatement@@PathElement myElement=element; @TO@ Block@@ElseBody:if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 42329 @LENGTH@ 32
------------------------INS SimpleType@@PathElement @TO@ VariableDeclarationStatement@@PathElement myElement=element; @AT@ 42329 @LENGTH@ 11
------------------------INS VariableDeclarationFragment@@myElement=element @TO@ VariableDeclarationStatement@@PathElement myElement=element; @AT@ 42341 @LENGTH@ 19
---------------------------INS SimpleName@@myElement @TO@ VariableDeclarationFragment@@myElement=element @AT@ 42341 @LENGTH@ 9
---------------------------INS SimpleName@@element @TO@ VariableDeclarationFragment@@myElement=element @AT@ 42353 @LENGTH@ 7
---------------------INS ExpressionStatement@@Assignment:newAddr=newAddr.append(myElement) @TO@ Block@@ElseBody:if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 42697 @LENGTH@ 36
------------------------INS Assignment@@newAddr=newAddr.append(myElement) @TO@ ExpressionStatement@@Assignment:newAddr=newAddr.append(myElement) @AT@ 42697 @LENGTH@ 35
---------------------------INS SimpleName@@newAddr @TO@ Assignment@@newAddr=newAddr.append(myElement) @AT@ 42697 @LENGTH@ 7
---------------------------INS Operator@@= @TO@ Assignment@@newAddr=newAddr.append(myElement) @AT@ 42704 @LENGTH@ 1
---------------------------INS MethodInvocation@@newAddr.append(myElement) @TO@ Assignment@@newAddr=newAddr.append(myElement) @AT@ 42707 @LENGTH@ 25
------------------------------INS SimpleName@@Name:newAddr @TO@ MethodInvocation@@newAddr.append(myElement) @AT@ 42707 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:append:[myElement] @TO@ MethodInvocation@@newAddr.append(myElement) @AT@ 42715 @LENGTH@ 17
---------------------------------INS SimpleName@@myElement @TO@ SimpleName@@MethodName:append:[myElement] @AT@ 42722 @LENGTH@ 9
------------MOV ExpressionStatement@@MethodInvocation:op.get(OP_ADDR).set(newAddr.toModelNode()) @TO@ Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 42463 @LENGTH@ 43
------MOV ReturnStatement@@MethodInvocation:Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op) @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 42549 @LENGTH@ 94


UPD FieldDeclaration@@private, static, final, String, [TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()] @TO@ private, static, final, String, [TEST_DATA_DIR=org.apache.hive.hcatalog.pig.TestHCatStorerMulti.TEST_DATA_DIR] @AT@ 1579 @LENGTH@ 148
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @TO@ TEST_DATA_DIR=org.apache.hive.hcatalog.pig.TestHCatStorerMulti.TEST_DATA_DIR @AT@ 1607 @LENGTH@ 119
------DEL InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @AT@ 1623 @LENGTH@ 103
---------DEL MethodInvocation@@System.getProperty("user.dir") @AT@ 1623 @LENGTH@ 30
------------DEL SimpleName@@Name:System @AT@ 1623 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 1630 @LENGTH@ 23
---------------DEL StringLiteral@@"user.dir" @AT@ 1642 @LENGTH@ 10
---------DEL Operator@@+ @AT@ 1653 @LENGTH@ 1
---------DEL StringLiteral@@"/build/test/data/" @AT@ 1660 @LENGTH@ 19
---------DEL MethodInvocation@@TestHCatStorerMulti.class.getCanonicalName() @AT@ 1682 @LENGTH@ 44
------------DEL TypeLiteral@@TestHCatStorerMulti.class @AT@ 1682 @LENGTH@ 25
------------DEL SimpleName@@MethodName:getCanonicalName:[] @AT@ 1708 @LENGTH@ 18
------INS QualifiedName@@org.apache.hive.hcatalog.pig.TestHCatStorerMulti.TEST_DATA_DIR @TO@ VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @AT@ 1623 @LENGTH@ 62
---------INS QualifiedName@@org.apache.hive.hcatalog.pig.TestHCatStorerMulti @TO@ QualifiedName@@org.apache.hive.hcatalog.pig.TestHCatStorerMulti.TEST_DATA_DIR @AT@ 1623 @LENGTH@ 48
------------INS QualifiedName@@org.apache.hive.hcatalog.pig @TO@ QualifiedName@@org.apache.hive.hcatalog.pig.TestHCatStorerMulti @AT@ 1623 @LENGTH@ 28
---------------INS QualifiedName@@org.apache.hive.hcatalog @TO@ QualifiedName@@org.apache.hive.hcatalog.pig @AT@ 1623 @LENGTH@ 24
------------------INS QualifiedName@@org.apache.hive @TO@ QualifiedName@@org.apache.hive.hcatalog @AT@ 1623 @LENGTH@ 15
---------------------INS QualifiedName@@org.apache @TO@ QualifiedName@@org.apache.hive @AT@ 1623 @LENGTH@ 10
------------------------INS SimpleName@@org @TO@ QualifiedName@@org.apache @AT@ 1623 @LENGTH@ 3
------------------------INS SimpleName@@apache @TO@ QualifiedName@@org.apache @AT@ 1627 @LENGTH@ 6
---------------------INS SimpleName@@hive @TO@ QualifiedName@@org.apache.hive @AT@ 1634 @LENGTH@ 4
------------------INS SimpleName@@hcatalog @TO@ QualifiedName@@org.apache.hive.hcatalog @AT@ 1639 @LENGTH@ 8
---------------INS SimpleName@@pig @TO@ QualifiedName@@org.apache.hive.hcatalog.pig @AT@ 1648 @LENGTH@ 3
------------INS SimpleName@@TestHCatStorerMulti @TO@ QualifiedName@@org.apache.hive.hcatalog.pig.TestHCatStorerMulti @AT@ 1652 @LENGTH@ 19
---------INS SimpleName@@TEST_DATA_DIR @TO@ QualifiedName@@org.apache.hive.hcatalog.pig.TestHCatStorerMulti.TEST_DATA_DIR @AT@ 1672 @LENGTH@ 13


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-700] Fix fabric basic ExtendedJoinTest"), public]ExtendedJoinTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExtendedJoinTest, FabricTestSupport @AT@ 1539 @LENGTH@ 3675
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-700] Fix fabric basic ExtendedJoinTest") @AT@ 1632 @LENGTH@ 57


UPD MethodDeclaration@@public, String, MethodName:appendWithHeadersAndProperties, String existing, Map oldHeaders, Map oldProperties, String next, Map newHeaders, Map newProperties,  @TO@ public, String, MethodName:appendWithHeadersAndProperties, String existing, Map<String,String> oldHeaders, Map<String,Integer> oldProperties, String next, Map<String,String> newHeaders, Map<String,Integer> newProperties,  @AT@ 2312 @LENGTH@ 638
---UPD SingleVariableDeclaration@@Map oldHeaders @TO@ Map<String,String> oldHeaders @AT@ 2374 @LENGTH@ 14
------DEL SimpleType@@Map @AT@ 2374 @LENGTH@ 3
------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@Map oldHeaders @AT@ 2374 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2374 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2378 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2386 @LENGTH@ 6
---UPD SingleVariableDeclaration@@Map oldProperties @TO@ Map<String,Integer> oldProperties @AT@ 2390 @LENGTH@ 17
------DEL SimpleType@@Map @AT@ 2390 @LENGTH@ 3
------INS ParameterizedType@@Map<String,Integer> @TO@ SingleVariableDeclaration@@Map oldProperties @AT@ 2406 @LENGTH@ 20
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2406 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2410 @LENGTH@ 6
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2418 @LENGTH@ 7
---UPD SingleVariableDeclaration@@Map newHeaders @TO@ Map<String,String> newHeaders @AT@ 2475 @LENGTH@ 14
------DEL SimpleType@@Map @AT@ 2475 @LENGTH@ 3
------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@Map newHeaders @AT@ 2508 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2508 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2512 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2520 @LENGTH@ 6
---UPD SingleVariableDeclaration@@Map newProperties @TO@ Map<String,Integer> newProperties @AT@ 2491 @LENGTH@ 17
------DEL SimpleType@@Map @AT@ 2491 @LENGTH@ 3
------INS ParameterizedType@@Map<String,Integer> @TO@ SingleVariableDeclaration@@Map newProperties @AT@ 2540 @LENGTH@ 20
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2540 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2544 @LENGTH@ 6
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Map<String,Integer> @AT@ 2552 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:config=new HttpMappingRuleBase("/fabric/registry/clusters",new SimplePathTemplate(uriTemplate),version,enabledVersion,loadBalancer) @TO@ Assignment:config=new HttpMappingRuleBase("/fabric/registry/clusters",new SimplePathTemplate(uriTemplate),version,enabledVersion,loadBalancer,reverseHeaders) @AT@ 3552 @LENGTH@ 154
---UPD Assignment@@config=new HttpMappingRuleBase("/fabric/registry/clusters",new SimplePathTemplate(uriTemplate),version,enabledVersion,loadBalancer) @TO@ config=new HttpMappingRuleBase("/fabric/registry/clusters",new SimplePathTemplate(uriTemplate),version,enabledVersion,loadBalancer,reverseHeaders) @AT@ 3552 @LENGTH@ 153
------UPD ClassInstanceCreation@@HttpMappingRuleBase["/fabric/registry/clusters", new SimplePathTemplate(uriTemplate), version, enabledVersion, loadBalancer] @TO@ HttpMappingRuleBase["/fabric/registry/clusters", new SimplePathTemplate(uriTemplate), version, enabledVersion, loadBalancer, reverseHeaders] @AT@ 3561 @LENGTH@ 144
---------INS SimpleName@@reverseHeaders @TO@ ClassInstanceCreation@@HttpMappingRuleBase["/fabric/registry/clusters", new SimplePathTemplate(uriTemplate), version, enabledVersion, loadBalancer] @AT@ 3727 @LENGTH@ 14


INS VariableDeclarationStatement@@String encodedPassword=PasswordEncoder.encode(zookeeperPassword); @TO@ MethodDeclaration@@protected, Object, MethodName:doExecute, Exception,  @AT@ 5234 @LENGTH@ 67
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String encodedPassword=PasswordEncoder.encode(zookeeperPassword); @AT@ 5234 @LENGTH@ 6
---INS VariableDeclarationFragment@@encodedPassword=PasswordEncoder.encode(zookeeperPassword) @TO@ VariableDeclarationStatement@@String encodedPassword=PasswordEncoder.encode(zookeeperPassword); @AT@ 5241 @LENGTH@ 59
------INS SimpleName@@encodedPassword @TO@ VariableDeclarationFragment@@encodedPassword=PasswordEncoder.encode(zookeeperPassword) @AT@ 5241 @LENGTH@ 15
------INS MethodInvocation@@PasswordEncoder.encode(zookeeperPassword) @TO@ VariableDeclarationFragment@@encodedPassword=PasswordEncoder.encode(zookeeperPassword) @AT@ 5259 @LENGTH@ 41
---------INS SimpleName@@Name:PasswordEncoder @TO@ MethodInvocation@@PasswordEncoder.encode(zookeeperPassword) @AT@ 5259 @LENGTH@ 15
---------INS SimpleName@@MethodName:encode:[zookeeperPassword] @TO@ MethodInvocation@@PasswordEncoder.encode(zookeeperPassword) @AT@ 5275 @LENGTH@ 25
------------INS SimpleName@@zookeeperPassword @TO@ SimpleName@@MethodName:encode:[zookeeperPassword] @AT@ 5282 @LENGTH@ 17


UPD IfStatement@@if (content == null) {  file.delete();} @TO@ if (content == null) {  file.delete();} else {  Reader r=new StringReader(content);  Writer w=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file)));  try {    copy(r,w);  }  finally {    close(r,w);  }} @AT@ 3297 @LENGTH@ 59
---INS Block@@ElseBody:{  Reader r=new StringReader(content);  Writer w=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file)));  try {    copy(r,w);  }  finally {    close(r,w);  }} @TO@ IfStatement@@if (content == null) {  file.delete();} @AT@ 3362 @LENGTH@ 269
------MOV VariableDeclarationStatement@@Reader r=new StringReader(content); @TO@ Block@@ElseBody:{  Reader r=new StringReader(content);  Writer w=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file)));  try {    copy(r,w);  }  finally {    close(r,w);  }} @AT@ 3365 @LENGTH@ 37
------MOV VariableDeclarationStatement@@Writer w=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file))); @TO@ Block@@ElseBody:{  Reader r=new StringReader(content);  Writer w=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file)));  try {    copy(r,w);  }  finally {    close(r,w);  }} @AT@ 3411 @LENGTH@ 82
------MOV TryStatement@@try {  copy(r,w);}  finally {  close(r,w);} @TO@ Block@@ElseBody:{  Reader r=new StringReader(content);  Writer w=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file)));  try {    copy(r,w);  }  finally {    close(r,w);  }} @AT@ 3502 @LENGTH@ 84


INS MethodDeclaration@@public, void, MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 74046 @LENGTH@ 319
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist,  @AT@ 74046 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist,  @AT@ 74053 @LENGTH@ 4
---INS SimpleName@@MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist @TO@ MethodDeclaration@@public, void, MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist,  @AT@ 74058 @LENGTH@ 61
---INS VariableDeclarationStatement@@Query q=query(where("id").is(Long.MIN_VALUE)); @TO@ MethodDeclaration@@public, void, MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist,  @AT@ 74127 @LENGTH@ 48
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query q=query(where("id").is(Long.MIN_VALUE)); @AT@ 74127 @LENGTH@ 5
------INS VariableDeclarationFragment@@q=query(where("id").is(Long.MIN_VALUE)) @TO@ VariableDeclarationStatement@@Query q=query(where("id").is(Long.MIN_VALUE)); @AT@ 74133 @LENGTH@ 41
---------INS SimpleName@@q @TO@ VariableDeclarationFragment@@q=query(where("id").is(Long.MIN_VALUE)) @AT@ 74133 @LENGTH@ 1
---------INS MethodInvocation@@query(where("id").is(Long.MIN_VALUE)) @TO@ VariableDeclarationFragment@@q=query(where("id").is(Long.MIN_VALUE)) @AT@ 74137 @LENGTH@ 37
------------INS SimpleName@@MethodName:query:[where("id").is(Long.MIN_VALUE)] @TO@ MethodInvocation@@query(where("id").is(Long.MIN_VALUE)) @AT@ 74137 @LENGTH@ 37
---------------INS MethodInvocation@@where("id").is(Long.MIN_VALUE) @TO@ SimpleName@@MethodName:query:[where("id").is(Long.MIN_VALUE)] @AT@ 74143 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:where:["id"] @TO@ MethodInvocation@@where("id").is(Long.MIN_VALUE) @AT@ 74143 @LENGTH@ 11
---------------------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:where:["id"] @AT@ 74149 @LENGTH@ 4
------------------INS SimpleName@@MethodName:is:[Long.MIN_VALUE] @TO@ MethodInvocation@@where("id").is(Long.MIN_VALUE) @AT@ 74155 @LENGTH@ 18
---------------------INS QualifiedName@@Long.MIN_VALUE @TO@ SimpleName@@MethodName:is:[Long.MIN_VALUE] @AT@ 74158 @LENGTH@ 14
------------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.MIN_VALUE @AT@ 74158 @LENGTH@ 4
------------------------INS SimpleName@@MIN_VALUE @TO@ QualifiedName@@Long.MIN_VALUE @AT@ 74163 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:template.updateFirst(q,Update.update("lastname","supercalifragilisticexpialidocious"),VersionedPerson.class) @TO@ MethodDeclaration@@public, void, MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist,  @AT@ 74179 @LENGTH@ 112
------INS MethodInvocation@@template.updateFirst(q,Update.update("lastname","supercalifragilisticexpialidocious"),VersionedPerson.class) @TO@ ExpressionStatement@@MethodInvocation:template.updateFirst(q,Update.update("lastname","supercalifragilisticexpialidocious"),VersionedPerson.class) @AT@ 74179 @LENGTH@ 111
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.updateFirst(q,Update.update("lastname","supercalifragilisticexpialidocious"),VersionedPerson.class) @AT@ 74179 @LENGTH@ 8
---------INS SimpleName@@MethodName:updateFirst:[q, Update.update("lastname","supercalifragilisticexpialidocious"), VersionedPerson.class] @TO@ MethodInvocation@@template.updateFirst(q,Update.update("lastname","supercalifragilisticexpialidocious"),VersionedPerson.class) @AT@ 74188 @LENGTH@ 102
------------INS SimpleName@@q @TO@ SimpleName@@MethodName:updateFirst:[q, Update.update("lastname","supercalifragilisticexpialidocious"), VersionedPerson.class] @AT@ 74200 @LENGTH@ 1
------------INS MethodInvocation@@Update.update("lastname","supercalifragilisticexpialidocious") @TO@ SimpleName@@MethodName:updateFirst:[q, Update.update("lastname","supercalifragilisticexpialidocious"), VersionedPerson.class] @AT@ 74203 @LENGTH@ 63
---------------INS SimpleName@@Name:Update @TO@ MethodInvocation@@Update.update("lastname","supercalifragilisticexpialidocious") @AT@ 74203 @LENGTH@ 6
---------------INS SimpleName@@MethodName:update:["lastname", "supercalifragilisticexpialidocious"] @TO@ MethodInvocation@@Update.update("lastname","supercalifragilisticexpialidocious") @AT@ 74210 @LENGTH@ 56
------------------INS StringLiteral@@"lastname" @TO@ SimpleName@@MethodName:update:["lastname", "supercalifragilisticexpialidocious"] @AT@ 74217 @LENGTH@ 10
------------------INS StringLiteral@@"supercalifragilisticexpialidocious" @TO@ SimpleName@@MethodName:update:["lastname", "supercalifragilisticexpialidocious"] @AT@ 74229 @LENGTH@ 36
------------INS TypeLiteral@@VersionedPerson.class @TO@ SimpleName@@MethodName:updateFirst:[q, Update.update("lastname","supercalifragilisticexpialidocious"), VersionedPerson.class] @AT@ 74268 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(template.findOne(q,VersionedPerson.class),nullValue()) @TO@ MethodDeclaration@@public, void, MethodName:updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist,  @AT@ 74294 @LENGTH@ 68
------INS MethodInvocation@@assertThat(template.findOne(q,VersionedPerson.class),nullValue()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.findOne(q,VersionedPerson.class),nullValue()) @AT@ 74294 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertThat:[template.findOne(q,VersionedPerson.class), nullValue()] @TO@ MethodInvocation@@assertThat(template.findOne(q,VersionedPerson.class),nullValue()) @AT@ 74294 @LENGTH@ 67
------------INS MethodInvocation@@template.findOne(q,VersionedPerson.class) @TO@ SimpleName@@MethodName:assertThat:[template.findOne(q,VersionedPerson.class), nullValue()] @AT@ 74305 @LENGTH@ 42
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.findOne(q,VersionedPerson.class) @AT@ 74305 @LENGTH@ 8
---------------INS SimpleName@@MethodName:findOne:[q, VersionedPerson.class] @TO@ MethodInvocation@@template.findOne(q,VersionedPerson.class) @AT@ 74314 @LENGTH@ 33
------------------INS SimpleName@@q @TO@ SimpleName@@MethodName:findOne:[q, VersionedPerson.class] @AT@ 74322 @LENGTH@ 1
------------------INS TypeLiteral@@VersionedPerson.class @TO@ SimpleName@@MethodName:findOne:[q, VersionedPerson.class] @AT@ 74325 @LENGTH@ 21
------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:assertThat:[template.findOne(q,VersionedPerson.class), nullValue()] @AT@ 74349 @LENGTH@ 11


UPD MethodDeclaration@@public, List, MethodName:addUsers, List names, User user,  @TO@ public, List<String>, MethodName:addUsers, List<String> names, User user,  @AT@ 2318 @LENGTH@ 208
---DEL SimpleType@@List @AT@ 2325 @LENGTH@ 4
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, List, MethodName:addUsers, List names, User user,  @AT@ 2328 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2328 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2333 @LENGTH@ 6
---UPD SingleVariableDeclaration@@List names @TO@ List<String> names @AT@ 2339 @LENGTH@ 10
------DEL SimpleType@@List @AT@ 2339 @LENGTH@ 4
------INS ParameterizedType@@List<String> @TO@ SingleVariableDeclaration@@List names @AT@ 2350 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2350 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2355 @LENGTH@ 6
---UPD IfStatement@@if (names == null) {  names=new ArrayList();} @TO@ if (names == null) {  names=new ArrayList<String>();} @AT@ 2376 @LENGTH@ 75
------UPD Block@@ThenBody:{  names=new ArrayList();} @TO@ ThenBody:{  names=new ArrayList<String>();} @AT@ 2395 @LENGTH@ 56
---------UPD ExpressionStatement@@Assignment:names=new ArrayList() @TO@ Assignment:names=new ArrayList<String>() @AT@ 2413 @LENGTH@ 24
------------UPD Assignment@@names=new ArrayList() @TO@ names=new ArrayList<String>() @AT@ 2413 @LENGTH@ 23
---------------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<String>[] @AT@ 2421 @LENGTH@ 15
------------------DEL SimpleType@@ArrayList @AT@ 2425 @LENGTH@ 9
------------------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 2444 @LENGTH@ 17
---------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 2444 @LENGTH@ 9
---------------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 2454 @LENGTH@ 6


INS FieldDeclaration@@protected, MockEndpoint, [resultEndpoint] @TO@ TypeDeclaration@@[public]QuartzRouteFireNowTest, BaseQuartzTest @AT@ 1059 @LENGTH@ 38
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, MockEndpoint, [resultEndpoint] @AT@ 1059 @LENGTH@ 9
---INS SimpleType@@MockEndpoint @TO@ FieldDeclaration@@protected, MockEndpoint, [resultEndpoint] @AT@ 1069 @LENGTH@ 12
---INS VariableDeclarationFragment@@resultEndpoint @TO@ FieldDeclaration@@protected, MockEndpoint, [resultEndpoint] @AT@ 1082 @LENGTH@ 14
------INS SimpleName@@resultEndpoint @TO@ VariableDeclarationFragment@@resultEndpoint @AT@ 1082 @LENGTH@ 14


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Container,  @TO@ [@Data, public]Container, AbstractDockerDTO @AT@ 870 @LENGTH@ 326
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Container,  @AT@ 780 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 876 @LENGTH@ 47


INS MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK,  @TO@ TypeDeclaration@@[@Embeddable, public]EmbeddedIdExampleEmployeePK, [Serializable] @AT@ 1049 @LENGTH@ 39
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK,  @AT@ 1049 @LENGTH@ 6
---INS SimpleName@@MethodName:EmbeddedIdExampleEmployeePK @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK,  @AT@ 1056 @LENGTH@ 27


UPD ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),"utf-8")) @TO@ Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 7081 @LENGTH@ 90
---UPD Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),"utf-8")) @TO@ reader=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 7081 @LENGTH@ 89
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),"utf-8")] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 7090 @LENGTH@ 80
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), "utf-8"] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 7109 @LENGTH@ 60
------------DEL StringLiteral@@"utf-8" @AT@ 7161 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), "utf-8"] @AT@ 7203 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7203 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 7220 @LENGTH@ 5


INS IfStatement@@if (containers.isEmpty()) {  return;} @TO@ MethodDeclaration@@public, static, void, MethodName:provisioningSuccess, Collection<Container> containers, Long timeout, Exception,  @AT@ 7903 @LENGTH@ 57
---INS MethodInvocation@@containers.isEmpty() @TO@ IfStatement@@if (containers.isEmpty()) {  return;} @AT@ 7907 @LENGTH@ 20
------INS SimpleName@@Name:containers @TO@ MethodInvocation@@containers.isEmpty() @AT@ 7907 @LENGTH@ 10
------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@containers.isEmpty() @AT@ 7918 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (containers.isEmpty()) {  return;} @AT@ 7929 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 7943 @LENGTH@ 7


UPD FieldDeclaration@@public, static, final, String, [FABRIC_ZOOKEEPER_PID="fabric.zookeeper.id"] @TO@ public, static, final, String, [FABRIC_ZOOKEEPER_PID="fabric.zookeeper.pid"] @AT@ 3077 @LENGTH@ 72
---UPD VariableDeclarationFragment@@FABRIC_ZOOKEEPER_PID="fabric.zookeeper.id" @TO@ FABRIC_ZOOKEEPER_PID="fabric.zookeeper.pid" @AT@ 3104 @LENGTH@ 44
------UPD StringLiteral@@"fabric.zookeeper.id" @TO@ "fabric.zookeeper.pid" @AT@ 3127 @LENGTH@ 21


INS IfStatement@@if (jsonPathResult instanceof JSONArray) {  JSONArray array=(JSONArray)jsonPathResult;  assertThat(array,hasSize(greaterThan(0)));} @TO@ MethodDeclaration@@protected, T, T, MethodName:assertHasJsonPathValue, String path, MockHttpServletResponse response, Exception,  @AT@ 9363 @LENGTH@ 142
---INS InstanceofExpression@@jsonPathResult instanceof JSONArray @TO@ IfStatement@@if (jsonPathResult instanceof JSONArray) {  JSONArray array=(JSONArray)jsonPathResult;  assertThat(array,hasSize(greaterThan(0)));} @AT@ 9367 @LENGTH@ 35
------INS SimpleName@@jsonPathResult @TO@ InstanceofExpression@@jsonPathResult instanceof JSONArray @AT@ 9367 @LENGTH@ 14
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@jsonPathResult instanceof JSONArray @AT@ 9382 @LENGTH@ 10
------INS SimpleType@@JSONArray @TO@ InstanceofExpression@@jsonPathResult instanceof JSONArray @AT@ 9393 @LENGTH@ 9
---INS Block@@ThenBody:{  JSONArray array=(JSONArray)jsonPathResult;  assertThat(array,hasSize(greaterThan(0)));} @TO@ IfStatement@@if (jsonPathResult instanceof JSONArray) {  JSONArray array=(JSONArray)jsonPathResult;  assertThat(array,hasSize(greaterThan(0)));} @AT@ 9404 @LENGTH@ 101
------INS VariableDeclarationStatement@@JSONArray array=(JSONArray)jsonPathResult; @TO@ Block@@ThenBody:{  JSONArray array=(JSONArray)jsonPathResult;  assertThat(array,hasSize(greaterThan(0)));} @AT@ 9409 @LENGTH@ 45
---------INS SimpleType@@JSONArray @TO@ VariableDeclarationStatement@@JSONArray array=(JSONArray)jsonPathResult; @AT@ 9409 @LENGTH@ 9
---------INS VariableDeclarationFragment@@array=(JSONArray)jsonPathResult @TO@ VariableDeclarationStatement@@JSONArray array=(JSONArray)jsonPathResult; @AT@ 9419 @LENGTH@ 34
------------INS SimpleName@@array @TO@ VariableDeclarationFragment@@array=(JSONArray)jsonPathResult @AT@ 9419 @LENGTH@ 5
------------INS CastExpression@@(JSONArray)jsonPathResult @TO@ VariableDeclarationFragment@@array=(JSONArray)jsonPathResult @AT@ 9427 @LENGTH@ 26
---------------INS SimpleType@@JSONArray @TO@ CastExpression@@(JSONArray)jsonPathResult @AT@ 9428 @LENGTH@ 9
---------------INS SimpleName@@jsonPathResult @TO@ CastExpression@@(JSONArray)jsonPathResult @AT@ 9439 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:assertThat(array,hasSize(greaterThan(0))) @TO@ Block@@ThenBody:{  JSONArray array=(JSONArray)jsonPathResult;  assertThat(array,hasSize(greaterThan(0)));} @AT@ 9458 @LENGTH@ 43
---------INS MethodInvocation@@assertThat(array,hasSize(greaterThan(0))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(array,hasSize(greaterThan(0))) @AT@ 9458 @LENGTH@ 42
------------INS SimpleName@@MethodName:assertThat:[array, hasSize(greaterThan(0))] @TO@ MethodInvocation@@assertThat(array,hasSize(greaterThan(0))) @AT@ 9458 @LENGTH@ 42
---------------INS SimpleName@@array @TO@ SimpleName@@MethodName:assertThat:[array, hasSize(greaterThan(0))] @AT@ 9469 @LENGTH@ 5
---------------INS MethodInvocation@@hasSize(greaterThan(0)) @TO@ SimpleName@@MethodName:assertThat:[array, hasSize(greaterThan(0))] @AT@ 9476 @LENGTH@ 23
------------------INS SimpleName@@MethodName:hasSize:[greaterThan(0)] @TO@ MethodInvocation@@hasSize(greaterThan(0)) @AT@ 9476 @LENGTH@ 23
---------------------INS MethodInvocation@@greaterThan(0) @TO@ SimpleName@@MethodName:hasSize:[greaterThan(0)] @AT@ 9484 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------INS SimpleName@@MethodName:hasSize:[greaterThan(0)] @TO@ MethodInvocation@@hasSize(greaterThan(0)) @AT@ 9476 @LENGTH@ 23
---------------------INS MethodInvocation@@greaterThan(0) @TO@ SimpleName@@MethodName:hasSize:[greaterThan(0)] @AT@ 9484 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:greaterThan:[0] @TO@ MethodInvocation@@greaterThan(0) @AT@ 9484 @LENGTH@ 14
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:greaterThan:[0] @AT@ 9496 @LENGTH@ 1


INS MethodDeclaration@@Person, MethodName:findByHavingSizeFansNotZero,  @TO@ TypeDeclaration@@[private]SampleRepository,  @AT@ 6309 @LENGTH@ 30
---INS SimpleType@@Person @TO@ MethodDeclaration@@Person, MethodName:findByHavingSizeFansNotZero,  @AT@ 6302 @LENGTH@ 6
---INS SimpleName@@MethodName:findByHavingSizeFansNotZero @TO@ MethodDeclaration@@Person, MethodName:findByHavingSizeFansNotZero,  @AT@ 6309 @LENGTH@ 27


UPD CatchClause@@catch (Exception e) {  String msg="JobRepository failure forcing exit with unknown status";  logger.error(msg,e);  stepExecution.upgradeStatus(BatchStatus.UNKNOWN);  stepExecution.setTerminateOnly();  throw new FatalStepExecutionException(msg,e);} @TO@ catch (Exception e) {  String msg="JobRepository failure forcing rollback";  logger.error(msg,e);  throw new FatalStepExecutionException(msg,e);} @AT@ 14831 @LENGTH@ 377
---UPD VariableDeclarationStatement@@String msg="JobRepository failure forcing exit with unknown status"; @TO@ String msg="JobRepository failure forcing rollback"; @AT@ 14959 @LENGTH@ 70
------UPD VariableDeclarationFragment@@msg="JobRepository failure forcing exit with unknown status" @TO@ msg="JobRepository failure forcing rollback" @AT@ 14966 @LENGTH@ 62
---------UPD StringLiteral@@"JobRepository failure forcing exit with unknown status" @TO@ "JobRepository failure forcing rollback" @AT@ 14972 @LENGTH@ 56
---DEL ExpressionStatement@@MethodInvocation:stepExecution.upgradeStatus(BatchStatus.UNKNOWN) @AT@ 15062 @LENGTH@ 49
------DEL MethodInvocation@@stepExecution.upgradeStatus(BatchStatus.UNKNOWN) @AT@ 15062 @LENGTH@ 48
---------DEL SimpleName@@Name:stepExecution @AT@ 15062 @LENGTH@ 13
---------DEL SimpleName@@MethodName:upgradeStatus:[BatchStatus.UNKNOWN] @AT@ 15076 @LENGTH@ 34
------------DEL QualifiedName@@BatchStatus.UNKNOWN @AT@ 15090 @LENGTH@ 19
---------------DEL SimpleName@@BatchStatus @AT@ 15090 @LENGTH@ 11
---------------DEL SimpleName@@UNKNOWN @AT@ 15102 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:stepExecution.setTerminateOnly() @AT@ 15117 @LENGTH@ 33
------DEL MethodInvocation@@stepExecution.setTerminateOnly() @AT@ 15117 @LENGTH@ 32
---------DEL SimpleName@@Name:stepExecution @AT@ 15117 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setTerminateOnly:[] @AT@ 15131 @LENGTH@ 18


UPD IfStatement@@if (name == null) {  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @TO@ if (name == null) {  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @AT@ 8633 @LENGTH@ 123
---UPD Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @TO@ ThenBody:{  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @AT@ 8651 @LENGTH@ 105
------INS ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @TO@ Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @AT@ 8665 @LENGTH@ 87
---------MOV MethodInvocation@@ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @AT@ 8665 @LENGTH@ 80
------DEL ExpressionStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @AT@ 8665 @LENGTH@ 81


UPD ReturnStatement@@ClassInstanceCreation:new UnauthorizedClientException(errorMessage) @TO@ ClassInstanceCreation:new UnauthorizedUserException(errorMessage) @AT@ 3167 @LENGTH@ 53
---UPD ClassInstanceCreation@@UnauthorizedClientException[errorMessage] @TO@ UnauthorizedUserException[errorMessage] @AT@ 3174 @LENGTH@ 45
------UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 3178 @LENGTH@ 27


INS MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @TO@ TypeDeclaration@@[public, final]IOHelper,  @AT@ 13383 @LENGTH@ 308
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @AT@ 13383 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @AT@ 13390 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @AT@ 13397 @LENGTH@ 4
---INS SimpleName@@MethodName:closeWithException @TO@ MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @AT@ 13402 @LENGTH@ 18
---INS SingleVariableDeclaration@@Closeable closeable @TO@ MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @AT@ 13421 @LENGTH@ 19
------INS SimpleType@@Closeable @TO@ SingleVariableDeclaration@@Closeable closeable @AT@ 13421 @LENGTH@ 9
------INS SimpleName@@closeable @TO@ SingleVariableDeclaration@@Closeable closeable @AT@ 13431 @LENGTH@ 9
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @AT@ 13449 @LENGTH@ 11
---INS IfStatement@@if (closeable != null) {  try {    closeable.close();  } catch (  IOException e) {    throw e;  }} @TO@ MethodDeclaration@@public, static, void, MethodName:closeWithException, Closeable closeable, IOException,  @AT@ 13471 @LENGTH@ 214
------INS InfixExpression@@closeable != null @TO@ IfStatement@@if (closeable != null) {  try {    closeable.close();  } catch (  IOException e) {    throw e;  }} @AT@ 13475 @LENGTH@ 17
---------INS SimpleName@@closeable @TO@ InfixExpression@@closeable != null @AT@ 13475 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@closeable != null @AT@ 13484 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@closeable != null @AT@ 13488 @LENGTH@ 4
------INS Block@@ThenBody:{  try {    closeable.close();  } catch (  IOException e) {    throw e;  }} @TO@ IfStatement@@if (closeable != null) {  try {    closeable.close();  } catch (  IOException e) {    throw e;  }} @AT@ 13494 @LENGTH@ 191
---------INS TryStatement@@try {  closeable.close();} catch (IOException e) {  throw e;} @TO@ Block@@ThenBody:{  try {    closeable.close();  } catch (  IOException e) {    throw e;  }} @AT@ 13508 @LENGTH@ 167
------------INS ExpressionStatement@@MethodInvocation:closeable.close() @TO@ TryStatement@@try {  closeable.close();} catch (IOException e) {  throw e;} @AT@ 13530 @LENGTH@ 18
---------------INS MethodInvocation@@closeable.close() @TO@ ExpressionStatement@@MethodInvocation:closeable.close() @AT@ 13530 @LENGTH@ 17
------------------INS SimpleName@@Name:closeable @TO@ MethodInvocation@@closeable.close() @AT@ 13530 @LENGTH@ 9
------------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@closeable.close() @AT@ 13540 @LENGTH@ 7
------------INS CatchClause@@catch (IOException e) {  throw e;} @TO@ TryStatement@@try {  closeable.close();} catch (IOException e) {  throw e;} @AT@ 13563 @LENGTH@ 112
---------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw e;} @AT@ 13570 @LENGTH@ 13
------------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 13570 @LENGTH@ 11
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 13582 @LENGTH@ 1
---------------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (IOException e) {  throw e;} @AT@ 13653 @LENGTH@ 8
------------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 13659 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @TO@ TypeDeclaration@@[public]TokenizerTests,  @AT@ 2348 @LENGTH@ 466
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2348 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2355 @LENGTH@ 4
---INS SimpleName@@MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2360 @LENGTH@ 48
---INS VariableDeclarationStatement@@Map<String,String> result=tokenize("bar buzz"); @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2415 @LENGTH@ 50
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> result=tokenize("bar buzz"); @AT@ 2415 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2415 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2419 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2427 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=tokenize("bar buzz") @TO@ VariableDeclarationStatement@@Map<String,String> result=tokenize("bar buzz"); @AT@ 2435 @LENGTH@ 29
---------MOV MethodInvocation@@tokenize("bar buzz") @TO@ VariableDeclarationFragment@@result=tokenize("bar buzz") @AT@ 2303 @LENGTH@ 20
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=tokenize("bar buzz") @AT@ 2435 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(result.keySet(),hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2468 @LENGTH@ 40
------INS MethodInvocation@@assertThat(result.keySet(),hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.keySet(),hasSize(1)) @AT@ 2468 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertThat:[result.keySet(), hasSize(1)] @TO@ MethodInvocation@@assertThat(result.keySet(),hasSize(1)) @AT@ 2468 @LENGTH@ 39
------------INS MethodInvocation@@result.keySet() @TO@ SimpleName@@MethodName:assertThat:[result.keySet(), hasSize(1)] @AT@ 2479 @LENGTH@ 15
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.keySet() @AT@ 2479 @LENGTH@ 6
---------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@result.keySet() @AT@ 2486 @LENGTH@ 8
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[result.keySet(), hasSize(1)] @AT@ 2496 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 2496 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 2504 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 2496 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 2504 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get(""),equalTo("bar buzz")) @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2511 @LENGTH@ 48
------INS MethodInvocation@@assertThat(result.get(""),equalTo("bar buzz")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get(""),equalTo("bar buzz")) @AT@ 2511 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertThat:[result.get(""), equalTo("bar buzz")] @TO@ MethodInvocation@@assertThat(result.get(""),equalTo("bar buzz")) @AT@ 2511 @LENGTH@ 47
------------INS MethodInvocation@@result.get("") @TO@ SimpleName@@MethodName:assertThat:[result.get(""), equalTo("bar buzz")] @AT@ 2522 @LENGTH@ 14
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get("") @AT@ 2522 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[""] @TO@ MethodInvocation@@result.get("") @AT@ 2529 @LENGTH@ 7
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:get:[""] @AT@ 2533 @LENGTH@ 2
------------INS MethodInvocation@@equalTo("bar buzz") @TO@ SimpleName@@MethodName:assertThat:[result.get(""), equalTo("bar buzz")] @AT@ 2538 @LENGTH@ 19
---------------INS SimpleName@@MethodName:equalTo:["bar buzz"] @TO@ MethodInvocation@@equalTo("bar buzz") @AT@ 2538 @LENGTH@ 19
------------------INS StringLiteral@@"bar buzz" @TO@ SimpleName@@MethodName:equalTo:["bar buzz"] @AT@ 2546 @LENGTH@ 10
---------------INS SimpleName@@MethodName:equalTo:["bar buzz"] @TO@ MethodInvocation@@equalTo("bar buzz") @AT@ 2538 @LENGTH@ 19
------------------INS StringLiteral@@"bar buzz" @TO@ SimpleName@@MethodName:equalTo:["bar buzz"] @AT@ 2546 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:result=tokenize("--foo wizz bar buzz --woot cool") @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2563 @LENGTH@ 53
------INS Assignment@@result=tokenize("--foo wizz bar buzz --woot cool") @TO@ ExpressionStatement@@Assignment:result=tokenize("--foo wizz bar buzz --woot cool") @AT@ 2563 @LENGTH@ 52
---------INS SimpleName@@result @TO@ Assignment@@result=tokenize("--foo wizz bar buzz --woot cool") @AT@ 2563 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=tokenize("--foo wizz bar buzz --woot cool") @AT@ 2569 @LENGTH@ 1
---------INS MethodInvocation@@tokenize("--foo wizz bar buzz --woot cool") @TO@ Assignment@@result=tokenize("--foo wizz bar buzz --woot cool") @AT@ 2572 @LENGTH@ 43
------------INS SimpleName@@MethodName:tokenize:["--foo wizz bar buzz --woot cool"] @TO@ MethodInvocation@@tokenize("--foo wizz bar buzz --woot cool") @AT@ 2572 @LENGTH@ 43
---------------INS StringLiteral@@"--foo wizz bar buzz --woot cool" @TO@ SimpleName@@MethodName:tokenize:["--foo wizz bar buzz --woot cool"] @AT@ 2581 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:assertThat(result.keySet(),hasSize(3)) @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2619 @LENGTH@ 40
------INS MethodInvocation@@assertThat(result.keySet(),hasSize(3)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.keySet(),hasSize(3)) @AT@ 2619 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertThat:[result.keySet(), hasSize(3)] @TO@ MethodInvocation@@assertThat(result.keySet(),hasSize(3)) @AT@ 2619 @LENGTH@ 39
------------INS MethodInvocation@@result.keySet() @TO@ SimpleName@@MethodName:assertThat:[result.keySet(), hasSize(3)] @AT@ 2630 @LENGTH@ 15
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.keySet() @AT@ 2630 @LENGTH@ 6
---------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@result.keySet() @AT@ 2637 @LENGTH@ 8
------------INS MethodInvocation@@hasSize(3) @TO@ SimpleName@@MethodName:assertThat:[result.keySet(), hasSize(3)] @AT@ 2647 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[3] @TO@ MethodInvocation@@hasSize(3) @AT@ 2647 @LENGTH@ 10
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:hasSize:[3] @AT@ 2655 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[3] @TO@ MethodInvocation@@hasSize(3) @AT@ 2647 @LENGTH@ 10
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:hasSize:[3] @AT@ 2655 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get(""),equalTo("bar buzz")) @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2662 @LENGTH@ 48
------INS MethodInvocation@@assertThat(result.get(""),equalTo("bar buzz")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get(""),equalTo("bar buzz")) @AT@ 2662 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertThat:[result.get(""), equalTo("bar buzz")] @TO@ MethodInvocation@@assertThat(result.get(""),equalTo("bar buzz")) @AT@ 2662 @LENGTH@ 47
------------INS MethodInvocation@@result.get("") @TO@ SimpleName@@MethodName:assertThat:[result.get(""), equalTo("bar buzz")] @AT@ 2673 @LENGTH@ 14
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get("") @AT@ 2673 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[""] @TO@ MethodInvocation@@result.get("") @AT@ 2680 @LENGTH@ 7
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:get:[""] @AT@ 2684 @LENGTH@ 2
------------INS MethodInvocation@@equalTo("bar buzz") @TO@ SimpleName@@MethodName:assertThat:[result.get(""), equalTo("bar buzz")] @AT@ 2689 @LENGTH@ 19
---------------INS SimpleName@@MethodName:equalTo:["bar buzz"] @TO@ MethodInvocation@@equalTo("bar buzz") @AT@ 2689 @LENGTH@ 19
------------------INS StringLiteral@@"bar buzz" @TO@ SimpleName@@MethodName:equalTo:["bar buzz"] @AT@ 2697 @LENGTH@ 10
---------------INS SimpleName@@MethodName:equalTo:["bar buzz"] @TO@ MethodInvocation@@equalTo("bar buzz") @AT@ 2689 @LENGTH@ 19
------------------INS StringLiteral@@"bar buzz" @TO@ SimpleName@@MethodName:equalTo:["bar buzz"] @AT@ 2697 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get("foo"),equalTo("wizz")) @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2713 @LENGTH@ 47
------INS MethodInvocation@@assertThat(result.get("foo"),equalTo("wizz")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get("foo"),equalTo("wizz")) @AT@ 2713 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertThat:[result.get("foo"), equalTo("wizz")] @TO@ MethodInvocation@@assertThat(result.get("foo"),equalTo("wizz")) @AT@ 2713 @LENGTH@ 46
------------INS MethodInvocation@@result.get("foo") @TO@ SimpleName@@MethodName:assertThat:[result.get("foo"), equalTo("wizz")] @AT@ 2724 @LENGTH@ 17
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get("foo") @AT@ 2724 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@result.get("foo") @AT@ 2731 @LENGTH@ 10
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 2735 @LENGTH@ 5
------------INS MethodInvocation@@equalTo("wizz") @TO@ SimpleName@@MethodName:assertThat:[result.get("foo"), equalTo("wizz")] @AT@ 2743 @LENGTH@ 15
---------------INS SimpleName@@MethodName:equalTo:["wizz"] @TO@ MethodInvocation@@equalTo("wizz") @AT@ 2743 @LENGTH@ 15
------------------INS StringLiteral@@"wizz" @TO@ SimpleName@@MethodName:equalTo:["wizz"] @AT@ 2751 @LENGTH@ 6
---------------INS SimpleName@@MethodName:equalTo:["wizz"] @TO@ MethodInvocation@@equalTo("wizz") @AT@ 2743 @LENGTH@ 15
------------------INS StringLiteral@@"wizz" @TO@ SimpleName@@MethodName:equalTo:["wizz"] @AT@ 2751 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get("woot"),equalTo("cool")) @TO@ MethodDeclaration@@public, void, MethodName:testAllowTwoOptionsSameEmptyKeyIfNextToEachOther,  @AT@ 2763 @LENGTH@ 48
------INS MethodInvocation@@assertThat(result.get("woot"),equalTo("cool")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get("woot"),equalTo("cool")) @AT@ 2763 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertThat:[result.get("woot"), equalTo("cool")] @TO@ MethodInvocation@@assertThat(result.get("woot"),equalTo("cool")) @AT@ 2763 @LENGTH@ 47
------------INS MethodInvocation@@result.get("woot") @TO@ SimpleName@@MethodName:assertThat:[result.get("woot"), equalTo("cool")] @AT@ 2774 @LENGTH@ 18
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get("woot") @AT@ 2774 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["woot"] @TO@ MethodInvocation@@result.get("woot") @AT@ 2781 @LENGTH@ 11
------------------INS StringLiteral@@"woot" @TO@ SimpleName@@MethodName:get:["woot"] @AT@ 2785 @LENGTH@ 6
------------INS MethodInvocation@@equalTo("cool") @TO@ SimpleName@@MethodName:assertThat:[result.get("woot"), equalTo("cool")] @AT@ 2794 @LENGTH@ 15
---------------INS SimpleName@@MethodName:equalTo:["cool"] @TO@ MethodInvocation@@equalTo("cool") @AT@ 2794 @LENGTH@ 15
------------------INS StringLiteral@@"cool" @TO@ SimpleName@@MethodName:equalTo:["cool"] @AT@ 2802 @LENGTH@ 6
---------------INS SimpleName@@MethodName:equalTo:["cool"] @TO@ MethodInvocation@@equalTo("cool") @AT@ 2794 @LENGTH@ 15
------------------INS StringLiteral@@"cool" @TO@ SimpleName@@MethodName:equalTo:["cool"] @AT@ 2802 @LENGTH@ 6


INS MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithPositionalVarArgs, Integer... ids,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 8293 @LENGTH@ 53
---INS ParameterizedType@@Collection<User> @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithPositionalVarArgs, Integer... ids,  @AT@ 8276 @LENGTH@ 16
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<User> @AT@ 8276 @LENGTH@ 10
------INS SimpleType@@User @TO@ ParameterizedType@@Collection<User> @AT@ 8287 @LENGTH@ 4
---INS SimpleName@@MethodName:findByIdsCustomWithPositionalVarArgs @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithPositionalVarArgs, Integer... ids,  @AT@ 8293 @LENGTH@ 36
---INS SingleVariableDeclaration@@Integer... ids @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithPositionalVarArgs, Integer... ids,  @AT@ 8330 @LENGTH@ 14
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@Integer... ids @AT@ 8330 @LENGTH@ 7
------INS SimpleName@@ids @TO@ SingleVariableDeclaration@@Integer... ids @AT@ 8341 @LENGTH@ 3


UPD VariableDeclarationStatement@@String expectedValue="org.apache.cxf:bus.id=rest-cxf515624438,type=Bus.Service.Endpoint,service=\\\"{http://rest.fuse.quickstarts.jboss.org/}CustomerService\\\",port=\\\"CustomerService\\\",instance.id=1776063910"; @TO@ String expectedValue="\"org.apache.cxf:bus.id=rest-cxf515624438,type=Bus.Service.Endpoint,service=\\\"{http://rest.fuse.quickstarts.jboss.org/}CustomerService\\\",port=\\\"CustomerService\\\",instance.id=1776063910\""; @AT@ 1091 @LENGTH@ 216
---UPD VariableDeclarationFragment@@expectedValue="org.apache.cxf:bus.id=rest-cxf515624438,type=Bus.Service.Endpoint,service=\\\"{http://rest.fuse.quickstarts.jboss.org/}CustomerService\\\",port=\\\"CustomerService\\\",instance.id=1776063910" @TO@ expectedValue="\"org.apache.cxf:bus.id=rest-cxf515624438,type=Bus.Service.Endpoint,service=\\\"{http://rest.fuse.quickstarts.jboss.org/}CustomerService\\\",port=\\\"CustomerService\\\",instance.id=1776063910\"" @AT@ 1098 @LENGTH@ 208
------UPD StringLiteral@@"org.apache.cxf:bus.id=rest-cxf515624438,type=Bus.Service.Endpoint,service=\\\"{http://rest.fuse.quickstarts.jboss.org/}CustomerService\\\",port=\\\"CustomerService\\\",instance.id=1776063910" @TO@ "\"org.apache.cxf:bus.id=rest-cxf515624438,type=Bus.Service.Endpoint,service=\\\"{http://rest.fuse.quickstarts.jboss.org/}CustomerService\\\",port=\\\"CustomerService\\\",instance.id=1776063910\"" @AT@ 1114 @LENGTH@ 192


UPD CatchClause@@catch (InterruptedException e) {  interrupted=true;} @TO@ catch (InterruptedException e) {  DomainControllerLogger.DOMAIN_DEPLOYMENT_LOGGER.interruptedAwaitingPreparedResponse(getClass().getSimpleName(),Collections.singleton(identity));  executor.cancelTask(identity);  interrupted=true;} @AT@ 2665 @LENGTH@ 90
---INS ExpressionStatement@@MethodInvocation:DomainControllerLogger.DOMAIN_DEPLOYMENT_LOGGER.interruptedAwaitingPreparedResponse(getClass().getSimpleName(),Collections.singleton(identity)) @TO@ CatchClause@@catch (InterruptedException e) {  interrupted=true;} @AT@ 2748 @LENGTH@ 145
------INS MethodInvocation@@DomainControllerLogger.DOMAIN_DEPLOYMENT_LOGGER.interruptedAwaitingPreparedResponse(getClass().getSimpleName(),Collections.singleton(identity)) @TO@ ExpressionStatement@@MethodInvocation:DomainControllerLogger.DOMAIN_DEPLOYMENT_LOGGER.interruptedAwaitingPreparedResponse(getClass().getSimpleName(),Collections.singleton(identity)) @AT@ 2748 @LENGTH@ 144
---------INS QualifiedName@@Name:DomainControllerLogger.DOMAIN_DEPLOYMENT_LOGGER @TO@ MethodInvocation@@DomainControllerLogger.DOMAIN_DEPLOYMENT_LOGGER.interruptedAwaitingPreparedResponse(getClass().getSimpleName(),Collections.singleton(identity)) @AT@ 2748 @LENGTH@ 47
---------INS SimpleName@@MethodName:interruptedAwaitingPreparedResponse:[getClass().getSimpleName(), Collections.singleton(identity)] @TO@ MethodInvocation@@DomainControllerLogger.DOMAIN_DEPLOYMENT_LOGGER.interruptedAwaitingPreparedResponse(getClass().getSimpleName(),Collections.singleton(identity)) @AT@ 2796 @LENGTH@ 96
------------INS MethodInvocation@@getClass().getSimpleName() @TO@ SimpleName@@MethodName:interruptedAwaitingPreparedResponse:[getClass().getSimpleName(), Collections.singleton(identity)] @AT@ 2832 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@getClass().getSimpleName() @AT@ 2832 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@getClass().getSimpleName() @AT@ 2843 @LENGTH@ 15
------------INS MethodInvocation@@Collections.singleton(identity) @TO@ SimpleName@@MethodName:interruptedAwaitingPreparedResponse:[getClass().getSimpleName(), Collections.singleton(identity)] @AT@ 2860 @LENGTH@ 31
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(identity) @AT@ 2860 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:[identity] @TO@ MethodInvocation@@Collections.singleton(identity) @AT@ 2872 @LENGTH@ 19
------------------INS SimpleName@@identity @TO@ SimpleName@@MethodName:singleton:[identity] @AT@ 2882 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:executor.cancelTask(identity) @TO@ CatchClause@@catch (InterruptedException e) {  interrupted=true;} @AT@ 2914 @LENGTH@ 30
------INS MethodInvocation@@executor.cancelTask(identity) @TO@ ExpressionStatement@@MethodInvocation:executor.cancelTask(identity) @AT@ 2914 @LENGTH@ 29
---------INS SimpleName@@Name:executor @TO@ MethodInvocation@@executor.cancelTask(identity) @AT@ 2914 @LENGTH@ 8
---------INS SimpleName@@MethodName:cancelTask:[identity] @TO@ MethodInvocation@@executor.cancelTask(identity) @AT@ 2923 @LENGTH@ 20
------------INS SimpleName@@identity @TO@ SimpleName@@MethodName:cancelTask:[identity] @AT@ 2934 @LENGTH@ 8


UPD SwitchStatement@@switch (reader.nextTag()) {case END_ELEMENT:{    if (ResourceAdapters.Tag.forName(reader.getLocalName()) == ResourceAdapters.Tag.RESOURCE_ADAPTER) {      if (!archiveOrModuleMatched) {        throw new ParserException(bundle.requiredElementMissing(ARCHIVE.getName(),RESOURCEADAPTER_NAME));      }      if (id != null) {        raAddress.add(RESOURCEADAPTER_NAME,id);      } else {        raAddress.add(RESOURCEADAPTER_NAME,archiveOrModuleName);      }      raAddress.protect();      operation.get(OP_ADDR).set(raAddress);      list.add(operation);      for (      Map.Entry<String,ModelNode> entry : configPropertiesOperations.entrySet()) {        final ModelNode env=raAddress.clone();        env.add(CONFIG_PROPERTIES.getName(),entry.getKey());        env.protect();        entry.getValue().get(OP_ADDR).set(env);        list.add(entry.getValue());      }      for (      Map.Entry<String,ModelNode> entry : connectionDefinitionsOperations.entrySet()) {        final ModelNode env=raAddress.clone();        env.add(CONNECTIONDEFINITIONS_NAME,entry.getKey());        env.protect();        entry.getValue().get(OP_ADDR).set(env);        list.add(entry.getValue());        final HashMap<String,ModelNode> properties=cfConfigPropertiesOperations.get(entry.getKey());        if (properties != null) {          for (          Map.Entry<String,ModelNode> configEntry : properties.entrySet()) {            final ModelNode configEnv=env.clone();            configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());            configEnv.protect();            configEntry.getValue().get(OP_ADDR).set(configEnv);            list.add(configEntry.getValue());          }        }      }      for (      Map.Entry<String,ModelNode> entry : adminObjectsOperations.entrySet()) {        final ModelNode env=raAddress.clone();        env.add(ADMIN_OBJECTS_NAME,entry.getKey());        env.protect();        entry.getValue().get(OP_ADDR).set(env);        list.add(entry.getValue());        final HashMap<String,ModelNode> aoProperties=aoConfigPropertiesOperations.get(entry.getKey());        if (aoProperties != null) {          for (          Map.Entry<String,ModelNode> configEntry : aoProperties.entrySet()) {            final ModelNode configEnv=env.clone();            configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());            configEnv.protect();            configEntry.getValue().get(OP_ADDR).set(configEnv);            list.add(configEntry.getValue());          }        }      }      if (isModule) {        final ModelNode activateOp=new ModelNode();        activateOp.get(OP).set(Constants.ACTIVATE);        activateOp.get(OP_ADDR).set(raAddress);        list.add(activateOp);      }      return;    } else {      if (AS7ResourceAdapterTags.forName(reader.getLocalName()) == AS7ResourceAdapterTags.UNKNOWN) {        throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));      }    }    break;  }case START_ELEMENT:{switch (AS7ResourceAdapterTags.forName(reader.getLocalName())) {case ADMIN_OBJECTS:case CONNECTION_DEFINITIONS:case BEAN_VALIDATION_GROUPS:{      break;    }case ADMIN_OBJECT:{    parseAdminObjects(reader,adminObjectsOperations,aoConfigPropertiesOperations);    break;  }case CONNECTION_DEFINITION:{  parseConnectionDefinitions(reader,connectionDefinitionsOperations,cfConfigPropertiesOperations,isXa);  break;}case BEAN_VALIDATION_GROUP:{String value=rawElementText(reader);operation.get(BEANVALIDATION_GROUPS.getName()).add(BEANVALIDATIONGROUP.parse(value,reader));break;}case BOOTSTRAP_CONTEXT:{String value=rawElementText(reader);BOOTSTRAP_CONTEXT.parseAndSetParameter(value,operation,reader);break;}case CONFIG_PROPERTY:{parseConfigProperties(reader,configPropertiesOperations);break;}case TRANSACTION_SUPPORT:{if (txSupportMatched) {throw new ParserException(bundle.unexpectedElement(TRANSACTION_SUPPORT.getXmlName()));}String value=rawElementText(reader);TRANSACTION_SUPPORT.parseAndSetParameter(value,operation,reader);isXa=value != null && TransactionSupportEnum.valueOf(value) == TransactionSupportEnum.XATransaction;txSupportMatched=true;break;}case WORKMANAGER:{parseWorkManager(operation,reader);break;}case ARCHIVE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(ARCHIVE.getXmlName()));}archiveOrModuleName=rawElementText(reader);ARCHIVE.parseAndSetParameter(archiveOrModuleName,operation,reader);archiveOrModuleMatched=true;break;}case MODULE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(MODULE.getXmlName()));}String moduleId=rawAttributeText(reader,"id");String moduleSlot=rawAttributeText(reader,"slot","main");archiveOrModuleName=moduleId + ":" + moduleSlot;MODULE.parseAndSetParameter(archiveOrModuleName,operation,reader);isModule=true;archiveOrModuleMatched=true;break;}default :throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));}break;}} @TO@ switch (reader.nextTag()) {case END_ELEMENT:{    if (ResourceAdapters.Tag.forName(reader.getLocalName()) == ResourceAdapters.Tag.RESOURCE_ADAPTER) {      if (!archiveOrModuleMatched) {        throw new ParserException(bundle.requiredElementMissing(ARCHIVE.getName(),RESOURCEADAPTER_NAME));      }      if (id != null) {        raAddress.add(RESOURCEADAPTER_NAME,id);      } else {        raAddress.add(RESOURCEADAPTER_NAME,archiveOrModuleName);      }      raAddress.protect();      operation.get(OP_ADDR).set(raAddress);      list.add(operation);      for (      Map.Entry<String,ModelNode> entry : configPropertiesOperations.entrySet()) {        final ModelNode env=raAddress.clone();        env.add(CONFIG_PROPERTIES.getName(),entry.getKey());        env.protect();        entry.getValue().get(OP_ADDR).set(env);        list.add(entry.getValue());      }      for (      Map.Entry<String,ModelNode> entry : connectionDefinitionsOperations.entrySet()) {        final ModelNode env=raAddress.clone();        env.add(CONNECTIONDEFINITIONS_NAME,entry.getKey());        env.protect();        entry.getValue().get(OP_ADDR).set(env);        list.add(entry.getValue());        final HashMap<String,ModelNode> properties=cfConfigPropertiesOperations.get(entry.getKey());        if (properties != null) {          for (          Map.Entry<String,ModelNode> configEntry : properties.entrySet()) {            final ModelNode configEnv=env.clone();            configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());            configEnv.protect();            configEntry.getValue().get(OP_ADDR).set(configEnv);            list.add(configEntry.getValue());          }        }      }      for (      Map.Entry<String,ModelNode> entry : adminObjectsOperations.entrySet()) {        final ModelNode env=raAddress.clone();        env.add(ADMIN_OBJECTS_NAME,entry.getKey());        env.protect();        entry.getValue().get(OP_ADDR).set(env);        list.add(entry.getValue());        final HashMap<String,ModelNode> aoProperties=aoConfigPropertiesOperations.get(entry.getKey());        if (aoProperties != null) {          for (          Map.Entry<String,ModelNode> configEntry : aoProperties.entrySet()) {            final ModelNode configEnv=env.clone();            configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());            configEnv.protect();            configEntry.getValue().get(OP_ADDR).set(configEnv);            list.add(configEntry.getValue());          }        }      }      return;    } else {      if (AS7ResourceAdapterTags.forName(reader.getLocalName()) == AS7ResourceAdapterTags.UNKNOWN) {        throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));      }    }    break;  }case START_ELEMENT:{switch (AS7ResourceAdapterTags.forName(reader.getLocalName())) {case ADMIN_OBJECTS:case CONNECTION_DEFINITIONS:case BEAN_VALIDATION_GROUPS:{      break;    }case ADMIN_OBJECT:{    parseAdminObjects(reader,adminObjectsOperations,aoConfigPropertiesOperations);    break;  }case CONNECTION_DEFINITION:{  parseConnectionDefinitions(reader,connectionDefinitionsOperations,cfConfigPropertiesOperations,isXa);  break;}case BEAN_VALIDATION_GROUP:{String value=rawElementText(reader);operation.get(BEANVALIDATION_GROUPS.getName()).add(BEANVALIDATIONGROUP.parse(value,reader));break;}case BOOTSTRAP_CONTEXT:{String value=rawElementText(reader);BOOTSTRAP_CONTEXT.parseAndSetParameter(value,operation,reader);break;}case CONFIG_PROPERTY:{parseConfigProperties(reader,configPropertiesOperations);break;}case TRANSACTION_SUPPORT:{if (txSupportMatched) {throw new ParserException(bundle.unexpectedElement(TRANSACTION_SUPPORT.getXmlName()));}String value=rawElementText(reader);TRANSACTION_SUPPORT.parseAndSetParameter(value,operation,reader);isXa=value != null && TransactionSupportEnum.valueOf(value) == TransactionSupportEnum.XATransaction;txSupportMatched=true;break;}case WORKMANAGER:{parseWorkManager(operation,reader);break;}case ARCHIVE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(ARCHIVE.getXmlName()));}archiveOrModuleName=rawElementText(reader);ARCHIVE.parseAndSetParameter(archiveOrModuleName,operation,reader);archiveOrModuleMatched=true;break;}case MODULE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(MODULE.getXmlName()));}String moduleId=rawAttributeText(reader,"id");String moduleSlot=rawAttributeText(reader,"slot","main");archiveOrModuleName=moduleId + ":" + moduleSlot;MODULE.parseAndSetParameter(archiveOrModuleName,operation,reader);archiveOrModuleMatched=true;break;}default :throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));}break;}} @AT@ 8972 @LENGTH@ 8373
---UPD IfStatement@@if (ResourceAdapters.Tag.forName(reader.getLocalName()) == ResourceAdapters.Tag.RESOURCE_ADAPTER) {  if (!archiveOrModuleMatched) {    throw new ParserException(bundle.requiredElementMissing(ARCHIVE.getName(),RESOURCEADAPTER_NAME));  }  if (id != null) {    raAddress.add(RESOURCEADAPTER_NAME,id);  } else {    raAddress.add(RESOURCEADAPTER_NAME,archiveOrModuleName);  }  raAddress.protect();  operation.get(OP_ADDR).set(raAddress);  list.add(operation);  for (  Map.Entry<String,ModelNode> entry : configPropertiesOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONFIG_PROPERTIES.getName(),entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());  }  for (  Map.Entry<String,ModelNode> entry : connectionDefinitionsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONNECTIONDEFINITIONS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> properties=cfConfigPropertiesOperations.get(entry.getKey());    if (properties != null) {      for (      Map.Entry<String,ModelNode> configEntry : properties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  for (  Map.Entry<String,ModelNode> entry : adminObjectsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(ADMIN_OBJECTS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> aoProperties=aoConfigPropertiesOperations.get(entry.getKey());    if (aoProperties != null) {      for (      Map.Entry<String,ModelNode> configEntry : aoProperties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  if (isModule) {    final ModelNode activateOp=new ModelNode();    activateOp.get(OP).set(Constants.ACTIVATE);    activateOp.get(OP_ADDR).set(raAddress);    list.add(activateOp);  }  return;} else {  if (AS7ResourceAdapterTags.forName(reader.getLocalName()) == AS7ResourceAdapterTags.UNKNOWN) {    throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));  }} @TO@ if (ResourceAdapters.Tag.forName(reader.getLocalName()) == ResourceAdapters.Tag.RESOURCE_ADAPTER) {  if (!archiveOrModuleMatched) {    throw new ParserException(bundle.requiredElementMissing(ARCHIVE.getName(),RESOURCEADAPTER_NAME));  }  if (id != null) {    raAddress.add(RESOURCEADAPTER_NAME,id);  } else {    raAddress.add(RESOURCEADAPTER_NAME,archiveOrModuleName);  }  raAddress.protect();  operation.get(OP_ADDR).set(raAddress);  list.add(operation);  for (  Map.Entry<String,ModelNode> entry : configPropertiesOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONFIG_PROPERTIES.getName(),entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());  }  for (  Map.Entry<String,ModelNode> entry : connectionDefinitionsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONNECTIONDEFINITIONS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> properties=cfConfigPropertiesOperations.get(entry.getKey());    if (properties != null) {      for (      Map.Entry<String,ModelNode> configEntry : properties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  for (  Map.Entry<String,ModelNode> entry : adminObjectsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(ADMIN_OBJECTS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> aoProperties=aoConfigPropertiesOperations.get(entry.getKey());    if (aoProperties != null) {      for (      Map.Entry<String,ModelNode> configEntry : aoProperties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  return;} else {  if (AS7ResourceAdapterTags.forName(reader.getLocalName()) == AS7ResourceAdapterTags.UNKNOWN) {    throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()));  }} @AT@ 9056 @LENGTH@ 4227
------UPD Block@@ThenBody:{  if (!archiveOrModuleMatched) {    throw new ParserException(bundle.requiredElementMissing(ARCHIVE.getName(),RESOURCEADAPTER_NAME));  }  if (id != null) {    raAddress.add(RESOURCEADAPTER_NAME,id);  } else {    raAddress.add(RESOURCEADAPTER_NAME,archiveOrModuleName);  }  raAddress.protect();  operation.get(OP_ADDR).set(raAddress);  list.add(operation);  for (  Map.Entry<String,ModelNode> entry : configPropertiesOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONFIG_PROPERTIES.getName(),entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());  }  for (  Map.Entry<String,ModelNode> entry : connectionDefinitionsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONNECTIONDEFINITIONS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> properties=cfConfigPropertiesOperations.get(entry.getKey());    if (properties != null) {      for (      Map.Entry<String,ModelNode> configEntry : properties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  for (  Map.Entry<String,ModelNode> entry : adminObjectsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(ADMIN_OBJECTS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> aoProperties=aoConfigPropertiesOperations.get(entry.getKey());    if (aoProperties != null) {      for (      Map.Entry<String,ModelNode> configEntry : aoProperties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  if (isModule) {    final ModelNode activateOp=new ModelNode();    activateOp.get(OP).set(Constants.ACTIVATE);    activateOp.get(OP_ADDR).set(raAddress);    list.add(activateOp);  }  return;} @TO@ ThenBody:{  if (!archiveOrModuleMatched) {    throw new ParserException(bundle.requiredElementMissing(ARCHIVE.getName(),RESOURCEADAPTER_NAME));  }  if (id != null) {    raAddress.add(RESOURCEADAPTER_NAME,id);  } else {    raAddress.add(RESOURCEADAPTER_NAME,archiveOrModuleName);  }  raAddress.protect();  operation.get(OP_ADDR).set(raAddress);  list.add(operation);  for (  Map.Entry<String,ModelNode> entry : configPropertiesOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONFIG_PROPERTIES.getName(),entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());  }  for (  Map.Entry<String,ModelNode> entry : connectionDefinitionsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(CONNECTIONDEFINITIONS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> properties=cfConfigPropertiesOperations.get(entry.getKey());    if (properties != null) {      for (      Map.Entry<String,ModelNode> configEntry : properties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  for (  Map.Entry<String,ModelNode> entry : adminObjectsOperations.entrySet()) {    final ModelNode env=raAddress.clone();    env.add(ADMIN_OBJECTS_NAME,entry.getKey());    env.protect();    entry.getValue().get(OP_ADDR).set(env);    list.add(entry.getValue());    final HashMap<String,ModelNode> aoProperties=aoConfigPropertiesOperations.get(entry.getKey());    if (aoProperties != null) {      for (      Map.Entry<String,ModelNode> configEntry : aoProperties.entrySet()) {        final ModelNode configEnv=env.clone();        configEnv.add(CONFIG_PROPERTIES.getName(),configEntry.getKey());        configEnv.protect();        configEntry.getValue().get(OP_ADDR).set(configEnv);        list.add(configEntry.getValue());      }    }  }  return;} @AT@ 9154 @LENGTH@ 3852
---------DEL IfStatement@@if (isModule) {  final ModelNode activateOp=new ModelNode();  activateOp.get(OP).set(Constants.ACTIVATE);  activateOp.get(OP_ADDR).set(raAddress);  list.add(activateOp);} @AT@ 12645 @LENGTH@ 305
------------DEL SimpleName@@isModule @AT@ 12649 @LENGTH@ 8
------------DEL Block@@ThenBody:{  final ModelNode activateOp=new ModelNode();  activateOp.get(OP).set(Constants.ACTIVATE);  activateOp.get(OP_ADDR).set(raAddress);  list.add(activateOp);} @AT@ 12659 @LENGTH@ 291
---------------DEL VariableDeclarationStatement@@final ModelNode activateOp=new ModelNode(); @AT@ 12689 @LENGTH@ 45
------------------DEL Modifier@@final @AT@ 12689 @LENGTH@ 5
------------------DEL SimpleType@@ModelNode @AT@ 12695 @LENGTH@ 9
------------------DEL VariableDeclarationFragment@@activateOp=new ModelNode() @AT@ 12705 @LENGTH@ 28
---------------------DEL SimpleName@@activateOp @AT@ 12705 @LENGTH@ 10
---------------------DEL ClassInstanceCreation@@ModelNode[] @AT@ 12718 @LENGTH@ 15
------------------------DEL New@@new @AT@ 12718 @LENGTH@ 3
------------------------DEL SimpleType@@ModelNode @AT@ 12722 @LENGTH@ 9
---------------DEL ExpressionStatement@@MethodInvocation:activateOp.get(OP).set(Constants.ACTIVATE) @AT@ 12763 @LENGTH@ 43
------------------DEL MethodInvocation@@activateOp.get(OP).set(Constants.ACTIVATE) @AT@ 12763 @LENGTH@ 42
---------------------DEL MethodInvocation@@MethodName:get:[OP] @AT@ 12763 @LENGTH@ 18
------------------------DEL SimpleName@@OP @AT@ 12778 @LENGTH@ 2
---------------------DEL SimpleName@@Name:activateOp @AT@ 12763 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:set:[Constants.ACTIVATE] @AT@ 12782 @LENGTH@ 23
------------------------DEL QualifiedName@@Constants.ACTIVATE @AT@ 12786 @LENGTH@ 18
---------------------------DEL SimpleName@@Constants @AT@ 12786 @LENGTH@ 9
---------------------------DEL SimpleName@@ACTIVATE @AT@ 12796 @LENGTH@ 8
---------------DEL ExpressionStatement@@MethodInvocation:activateOp.get(OP_ADDR).set(raAddress) @AT@ 12835 @LENGTH@ 39
------------------DEL MethodInvocation@@activateOp.get(OP_ADDR).set(raAddress) @AT@ 12835 @LENGTH@ 38
---------------------DEL MethodInvocation@@MethodName:get:[OP_ADDR] @AT@ 12835 @LENGTH@ 23
------------------------DEL SimpleName@@OP_ADDR @AT@ 12850 @LENGTH@ 7
---------------------DEL SimpleName@@Name:activateOp @AT@ 12835 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:set:[raAddress] @AT@ 12859 @LENGTH@ 14
------------------------DEL SimpleName@@raAddress @AT@ 12863 @LENGTH@ 9
---------------DEL ExpressionStatement@@MethodInvocation:list.add(activateOp) @AT@ 12903 @LENGTH@ 21
------------------DEL MethodInvocation@@list.add(activateOp) @AT@ 12903 @LENGTH@ 20
---------------------DEL SimpleName@@Name:list @AT@ 12903 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:add:[activateOp] @AT@ 12908 @LENGTH@ 15
------------------------DEL SimpleName@@activateOp @AT@ 12912 @LENGTH@ 10
---UPD SwitchStatement@@switch (AS7ResourceAdapterTags.forName(reader.getLocalName())) {case ADMIN_OBJECTS:case CONNECTION_DEFINITIONS:case BEAN_VALIDATION_GROUPS:{    break;  }case ADMIN_OBJECT:{  parseAdminObjects(reader,adminObjectsOperations,aoConfigPropertiesOperations);  break;}case CONNECTION_DEFINITION:{parseConnectionDefinitions(reader,connectionDefinitionsOperations,cfConfigPropertiesOperations,isXa);break;}case BEAN_VALIDATION_GROUP:{String value=rawElementText(reader);operation.get(BEANVALIDATION_GROUPS.getName()).add(BEANVALIDATIONGROUP.parse(value,reader));break;}case BOOTSTRAP_CONTEXT:{String value=rawElementText(reader);BOOTSTRAP_CONTEXT.parseAndSetParameter(value,operation,reader);break;}case CONFIG_PROPERTY:{parseConfigProperties(reader,configPropertiesOperations);break;}case TRANSACTION_SUPPORT:{if (txSupportMatched) {throw new ParserException(bundle.unexpectedElement(TRANSACTION_SUPPORT.getXmlName()));}String value=rawElementText(reader);TRANSACTION_SUPPORT.parseAndSetParameter(value,operation,reader);isXa=value != null && TransactionSupportEnum.valueOf(value) == TransactionSupportEnum.XATransaction;txSupportMatched=true;break;}case WORKMANAGER:{parseWorkManager(operation,reader);break;}case ARCHIVE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(ARCHIVE.getXmlName()));}archiveOrModuleName=rawElementText(reader);ARCHIVE.parseAndSetParameter(archiveOrModuleName,operation,reader);archiveOrModuleMatched=true;break;}case MODULE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(MODULE.getXmlName()));}String moduleId=rawAttributeText(reader,"id");String moduleSlot=rawAttributeText(reader,"slot","main");archiveOrModuleName=moduleId + ":" + moduleSlot;MODULE.parseAndSetParameter(archiveOrModuleName,operation,reader);isModule=true;archiveOrModuleMatched=true;break;}default :throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));} @TO@ switch (AS7ResourceAdapterTags.forName(reader.getLocalName())) {case ADMIN_OBJECTS:case CONNECTION_DEFINITIONS:case BEAN_VALIDATION_GROUPS:{    break;  }case ADMIN_OBJECT:{  parseAdminObjects(reader,adminObjectsOperations,aoConfigPropertiesOperations);  break;}case CONNECTION_DEFINITION:{parseConnectionDefinitions(reader,connectionDefinitionsOperations,cfConfigPropertiesOperations,isXa);break;}case BEAN_VALIDATION_GROUP:{String value=rawElementText(reader);operation.get(BEANVALIDATION_GROUPS.getName()).add(BEANVALIDATIONGROUP.parse(value,reader));break;}case BOOTSTRAP_CONTEXT:{String value=rawElementText(reader);BOOTSTRAP_CONTEXT.parseAndSetParameter(value,operation,reader);break;}case CONFIG_PROPERTY:{parseConfigProperties(reader,configPropertiesOperations);break;}case TRANSACTION_SUPPORT:{if (txSupportMatched) {throw new ParserException(bundle.unexpectedElement(TRANSACTION_SUPPORT.getXmlName()));}String value=rawElementText(reader);TRANSACTION_SUPPORT.parseAndSetParameter(value,operation,reader);isXa=value != null && TransactionSupportEnum.valueOf(value) == TransactionSupportEnum.XATransaction;txSupportMatched=true;break;}case WORKMANAGER:{parseWorkManager(operation,reader);break;}case ARCHIVE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(ARCHIVE.getXmlName()));}archiveOrModuleName=rawElementText(reader);ARCHIVE.parseAndSetParameter(archiveOrModuleName,operation,reader);archiveOrModuleMatched=true;break;}case MODULE:{if (archiveOrModuleMatched) {throw new ParserException(bundle.unexpectedElement(MODULE.getXmlName()));}String moduleId=rawAttributeText(reader,"id");String moduleSlot=rawAttributeText(reader,"slot","main");archiveOrModuleName=moduleId + ":" + moduleSlot;MODULE.parseAndSetParameter(archiveOrModuleName,operation,reader);archiveOrModuleMatched=true;break;}default :throw new ParserException(bundle.unexpectedElement(reader.getLocalName()));} @AT@ 13387 @LENGTH@ 3899
------DEL ExpressionStatement@@Assignment:isModule=true @AT@ 16990 @LENGTH@ 16
---------DEL Assignment@@isModule=true @AT@ 16990 @LENGTH@ 15
------------DEL SimpleName@@isModule @AT@ 16990 @LENGTH@ 8
------------DEL Operator@@= @AT@ 16998 @LENGTH@ 1
------------DEL BooleanLiteral@@true @AT@ 17001 @LENGTH@ 4


INS TryStatement@@try {  connectionFactory.destroy();  Thread.sleep(1000);  Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped"));  Mockito.verify(log,Mockito.never()).warn(Mockito.anyString(),Mockito.any(Throwable.class));}  finally {  container.stop();} @TO@ MethodDeclaration@@public, void, MethodName:testSimpleMessageListenerContainerStoppedWithoutWarn, Exception,  @AT@ 13570 @LENGTH@ 310
---MOV ExpressionStatement@@MethodInvocation:connectionFactory.destroy() @TO@ TryStatement@@try {  connectionFactory.destroy();  Thread.sleep(1000);  Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped"));  Mockito.verify(log,Mockito.never()).warn(Mockito.anyString(),Mockito.any(Throwable.class));}  finally {  container.stop();} @AT@ 13623 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped")) @TO@ TryStatement@@try {  connectionFactory.destroy();  Thread.sleep(1000);  Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped"));  Mockito.verify(log,Mockito.never()).warn(Mockito.anyString(),Mockito.any(Throwable.class));}  finally {  container.stop();} @AT@ 13635 @LENGTH@ 107
------MOV MethodInvocation@@Mockito.verify(log).debug(Mockito.eq("Consumer received Shutdown Signal, processing stopped."),Mockito.any(ShutdownSignalException.class)) @TO@ ExpressionStatement@@MethodInvocation:Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped")) @AT@ 13677 @LENGTH@ 148
---MOV ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ TryStatement@@try {  connectionFactory.destroy();  Thread.sleep(1000);  Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped"));  Mockito.verify(log,Mockito.never()).warn(Mockito.anyString(),Mockito.any(Throwable.class));}  finally {  container.stop();} @AT@ 13655 @LENGTH@ 19
---MOV ExpressionStatement@@MethodInvocation:Mockito.verify(log,Mockito.never()).warn(Mockito.anyString(),Mockito.any(Throwable.class)) @TO@ TryStatement@@try {  connectionFactory.destroy();  Thread.sleep(1000);  Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped"));  Mockito.verify(log,Mockito.never()).warn(Mockito.anyString(),Mockito.any(Throwable.class));}  finally {  container.stop();} @AT@ 13829 @LENGTH@ 93
---INS Block@@FinallyBody:{  container.stop();} @TO@ TryStatement@@try {  connectionFactory.destroy();  Thread.sleep(1000);  Mockito.verify(log).debug(Mockito.contains("Consumer received Shutdown Signal, processing stopped"));  Mockito.verify(log,Mockito.never()).warn(Mockito.anyString(),Mockito.any(Throwable.class));}  finally {  container.stop();} @AT@ 13854 @LENGTH@ 26
------MOV ExpressionStatement@@MethodInvocation:container.stop() @TO@ Block@@FinallyBody:{  container.stop();} @AT@ 13925 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:maybeAddAssociationLink(builder,mappings,property,links) @TO@ MethodDeclaration@@public, void, MethodName:doWithAssociation, Association<? extends PersistentProperty<?>> association,  @AT@ 8620 @LENGTH@ 60
---MOV MethodInvocation@@maybeAddAssociationLink(builder,mappings,property,links) @TO@ ExpressionStatement@@MethodInvocation:maybeAddAssociationLink(builder,mappings,property,links) @AT@ 8625 @LENGTH@ 59


INS ExpressionStatement@@MethodInvocation:HbaseSynchronizationManager.unbindResource(tableName) @TO@ MethodDeclaration@@public, void, MethodName:testTemplate, Exception,  @AT@ 4899 @LENGTH@ 54
---MOV MethodInvocation@@HbaseSynchronizationManager.unbindResource(tableName) @TO@ ExpressionStatement@@MethodInvocation:HbaseSynchronizationManager.unbindResource(tableName) @AT@ 4885 @LENGTH@ 53


DEL ExpressionStatement@@MethodInvocation:Mockito.verify(log).debug(Mockito.eq("Consumer received Shutdown Signal, processing stopped."),Mockito.any(ShutdownSignalException.class)) @AT@ 13677 @LENGTH@ 149


INS MethodDeclaration@@public, void, MethodName:registersTypePredictingPostProcessor,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]MongoRepositoriesRegistrarIntegrationTests,  @AT@ 2110 @LENGTH@ 356
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:registersTypePredictingPostProcessor,  @AT@ 2110 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:registersTypePredictingPostProcessor,  @AT@ 2117 @LENGTH@ 4
---INS SimpleName@@MethodName:registersTypePredictingPostProcessor @TO@ MethodDeclaration@@public, void, MethodName:registersTypePredictingPostProcessor,  @AT@ 2122 @LENGTH@ 36
---INS EnhancedForStatement@@for (String name : context.getBeanDefinitionNames()) {  if (name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor")) {    return;  }} @TO@ MethodDeclaration@@public, void, MethodName:registersTypePredictingPostProcessor,  @AT@ 2166 @LENGTH@ 195
------INS SingleVariableDeclaration@@String name @TO@ EnhancedForStatement@@for (String name : context.getBeanDefinitionNames()) {  if (name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor")) {    return;  }} @AT@ 2171 @LENGTH@ 11
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 2171 @LENGTH@ 6
---------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 2178 @LENGTH@ 4
------INS MethodInvocation@@context.getBeanDefinitionNames() @TO@ EnhancedForStatement@@for (String name : context.getBeanDefinitionNames()) {  if (name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor")) {    return;  }} @AT@ 2185 @LENGTH@ 32
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getBeanDefinitionNames() @AT@ 2185 @LENGTH@ 7
---------INS SimpleName@@MethodName:getBeanDefinitionNames:[] @TO@ MethodInvocation@@context.getBeanDefinitionNames() @AT@ 2193 @LENGTH@ 24
------INS IfStatement@@if (name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor")) {  return;} @TO@ EnhancedForStatement@@for (String name : context.getBeanDefinitionNames()) {  if (name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor")) {    return;  }} @AT@ 2224 @LENGTH@ 133
---------INS MethodInvocation@@name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor") @TO@ IfStatement@@if (name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor")) {  return;} @AT@ 2228 @LENGTH@ 109
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor") @AT@ 2228 @LENGTH@ 4
------------INS SimpleName@@MethodName:startsWith:["org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor"] @TO@ MethodInvocation@@name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor") @AT@ 2233 @LENGTH@ 104
---------------INS StringLiteral@@"org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor" @TO@ SimpleName@@MethodName:startsWith:["org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor"] @AT@ 2244 @LENGTH@ 92
---------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (name.startsWith("org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor")) {  return;} @AT@ 2339 @LENGTH@ 18
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2345 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:fail("Expected to find a bean with name starting with RepositoryInterfaceAwareBeanPostProcessor") @TO@ MethodDeclaration@@public, void, MethodName:registersTypePredictingPostProcessor,  @AT@ 2365 @LENGTH@ 98
------INS MethodInvocation@@fail("Expected to find a bean with name starting with RepositoryInterfaceAwareBeanPostProcessor") @TO@ ExpressionStatement@@MethodInvocation:fail("Expected to find a bean with name starting with RepositoryInterfaceAwareBeanPostProcessor") @AT@ 2365 @LENGTH@ 97
---------INS SimpleName@@MethodName:fail:["Expected to find a bean with name starting with RepositoryInterfaceAwareBeanPostProcessor"] @TO@ MethodInvocation@@fail("Expected to find a bean with name starting with RepositoryInterfaceAwareBeanPostProcessor") @AT@ 2365 @LENGTH@ 97
------------INS StringLiteral@@"Expected to find a bean with name starting with RepositoryInterfaceAwareBeanPostProcessor" @TO@ SimpleName@@MethodName:fail:["Expected to find a bean with name starting with RepositoryInterfaceAwareBeanPostProcessor"] @AT@ 2370 @LENGTH@ 91


UPD MethodDeclaration@@SSO<I,D,L>, MethodName:findSSO, String ssoId,  @TO@ SSO<A,D,L>, MethodName:findSSO, String ssoId,  @AT@ 1817 @LENGTH@ 22
---UPD ParameterizedType@@SSO<I,D,L> @TO@ SSO<A,D,L> @AT@ 1804 @LENGTH@ 12
------UPD SimpleType@@I @TO@ A @AT@ 1808 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @TO@ TypeDeclaration@@[public]TextFileStoreTests, AbstractStoreTests @AT@ 2944 @LENGTH@ 473
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 2944 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 2951 @LENGTH@ 4
---INS SimpleName@@MethodName:testWriteReadManyLinesWithGzipWithCodecNaming @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 2956 @LENGTH@ 45
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 3011 @LENGTH@ 11
---INS VariableDeclarationStatement@@TextFileWriter writer=new TextFileWriter(testConfig,testDefaultPath,Codecs.GZIP.getCodecInfo()); @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 3027 @LENGTH@ 104
------INS SimpleType@@TextFileWriter @TO@ VariableDeclarationStatement@@TextFileWriter writer=new TextFileWriter(testConfig,testDefaultPath,Codecs.GZIP.getCodecInfo()); @AT@ 3027 @LENGTH@ 14
------INS VariableDeclarationFragment@@writer=new TextFileWriter(testConfig,testDefaultPath,Codecs.GZIP.getCodecInfo()) @TO@ VariableDeclarationStatement@@TextFileWriter writer=new TextFileWriter(testConfig,testDefaultPath,Codecs.GZIP.getCodecInfo()); @AT@ 3042 @LENGTH@ 88
---------INS SimpleName@@writer @TO@ VariableDeclarationFragment@@writer=new TextFileWriter(testConfig,testDefaultPath,Codecs.GZIP.getCodecInfo()) @AT@ 3042 @LENGTH@ 6
---------INS ClassInstanceCreation@@TextFileWriter[testConfig, testDefaultPath, Codecs.GZIP.getCodecInfo()] @TO@ VariableDeclarationFragment@@writer=new TextFileWriter(testConfig,testDefaultPath,Codecs.GZIP.getCodecInfo()) @AT@ 3051 @LENGTH@ 79
------------INS New@@new @TO@ ClassInstanceCreation@@TextFileWriter[testConfig, testDefaultPath, Codecs.GZIP.getCodecInfo()] @AT@ 3051 @LENGTH@ 3
------------INS SimpleType@@TextFileWriter @TO@ ClassInstanceCreation@@TextFileWriter[testConfig, testDefaultPath, Codecs.GZIP.getCodecInfo()] @AT@ 3055 @LENGTH@ 14
------------INS SimpleName@@testConfig @TO@ ClassInstanceCreation@@TextFileWriter[testConfig, testDefaultPath, Codecs.GZIP.getCodecInfo()] @AT@ 3070 @LENGTH@ 10
------------INS SimpleName@@testDefaultPath @TO@ ClassInstanceCreation@@TextFileWriter[testConfig, testDefaultPath, Codecs.GZIP.getCodecInfo()] @AT@ 3082 @LENGTH@ 15
------------INS MethodInvocation@@Codecs.GZIP.getCodecInfo() @TO@ ClassInstanceCreation@@TextFileWriter[testConfig, testDefaultPath, Codecs.GZIP.getCodecInfo()] @AT@ 3103 @LENGTH@ 26
---------------INS QualifiedName@@Name:Codecs.GZIP @TO@ MethodInvocation@@Codecs.GZIP.getCodecInfo() @AT@ 3103 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getCodecInfo:[] @TO@ MethodInvocation@@Codecs.GZIP.getCodecInfo() @AT@ 3115 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:writer.setFileNamingStrategy(new CodecFileNamingStrategy()) @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 3134 @LENGTH@ 60
------INS MethodInvocation@@writer.setFileNamingStrategy(new CodecFileNamingStrategy()) @TO@ ExpressionStatement@@MethodInvocation:writer.setFileNamingStrategy(new CodecFileNamingStrategy()) @AT@ 3134 @LENGTH@ 59
---------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.setFileNamingStrategy(new CodecFileNamingStrategy()) @AT@ 3134 @LENGTH@ 6
---------INS SimpleName@@MethodName:setFileNamingStrategy:[new CodecFileNamingStrategy()] @TO@ MethodInvocation@@writer.setFileNamingStrategy(new CodecFileNamingStrategy()) @AT@ 3141 @LENGTH@ 52
------------INS ClassInstanceCreation@@CodecFileNamingStrategy[] @TO@ SimpleName@@MethodName:setFileNamingStrategy:[new CodecFileNamingStrategy()] @AT@ 3163 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@CodecFileNamingStrategy[] @AT@ 3163 @LENGTH@ 3
---------------INS SimpleType@@CodecFileNamingStrategy @TO@ ClassInstanceCreation@@CodecFileNamingStrategy[] @AT@ 3167 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:TestUtils.writeData(writer,DATA09ARRAY) @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 3197 @LENGTH@ 41
------INS MethodInvocation@@TestUtils.writeData(writer,DATA09ARRAY) @TO@ ExpressionStatement@@MethodInvocation:TestUtils.writeData(writer,DATA09ARRAY) @AT@ 3197 @LENGTH@ 40
---------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.writeData(writer,DATA09ARRAY) @AT@ 3197 @LENGTH@ 9
---------INS SimpleName@@MethodName:writeData:[writer, DATA09ARRAY] @TO@ MethodInvocation@@TestUtils.writeData(writer,DATA09ARRAY) @AT@ 3207 @LENGTH@ 30
------------INS SimpleName@@writer @TO@ SimpleName@@MethodName:writeData:[writer, DATA09ARRAY] @AT@ 3217 @LENGTH@ 6
------------INS SimpleName@@DATA09ARRAY @TO@ SimpleName@@MethodName:writeData:[writer, DATA09ARRAY] @AT@ 3225 @LENGTH@ 11
---INS VariableDeclarationStatement@@TextFileReader reader=new TextFileReader(testConfig,testDefaultPath.suffix(".gzip"),Codecs.GZIP.getCodecInfo()); @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 3242 @LENGTH@ 120
------INS SimpleType@@TextFileReader @TO@ VariableDeclarationStatement@@TextFileReader reader=new TextFileReader(testConfig,testDefaultPath.suffix(".gzip"),Codecs.GZIP.getCodecInfo()); @AT@ 3242 @LENGTH@ 14
------INS VariableDeclarationFragment@@reader=new TextFileReader(testConfig,testDefaultPath.suffix(".gzip"),Codecs.GZIP.getCodecInfo()) @TO@ VariableDeclarationStatement@@TextFileReader reader=new TextFileReader(testConfig,testDefaultPath.suffix(".gzip"),Codecs.GZIP.getCodecInfo()); @AT@ 3257 @LENGTH@ 104
---------INS SimpleName@@reader @TO@ VariableDeclarationFragment@@reader=new TextFileReader(testConfig,testDefaultPath.suffix(".gzip"),Codecs.GZIP.getCodecInfo()) @AT@ 3257 @LENGTH@ 6
---------INS ClassInstanceCreation@@TextFileReader[testConfig, testDefaultPath.suffix(".gzip"), Codecs.GZIP.getCodecInfo()] @TO@ VariableDeclarationFragment@@reader=new TextFileReader(testConfig,testDefaultPath.suffix(".gzip"),Codecs.GZIP.getCodecInfo()) @AT@ 3266 @LENGTH@ 95
------------INS New@@new @TO@ ClassInstanceCreation@@TextFileReader[testConfig, testDefaultPath.suffix(".gzip"), Codecs.GZIP.getCodecInfo()] @AT@ 3266 @LENGTH@ 3
------------INS SimpleType@@TextFileReader @TO@ ClassInstanceCreation@@TextFileReader[testConfig, testDefaultPath.suffix(".gzip"), Codecs.GZIP.getCodecInfo()] @AT@ 3270 @LENGTH@ 14
------------INS SimpleName@@testConfig @TO@ ClassInstanceCreation@@TextFileReader[testConfig, testDefaultPath.suffix(".gzip"), Codecs.GZIP.getCodecInfo()] @AT@ 3285 @LENGTH@ 10
------------INS MethodInvocation@@testDefaultPath.suffix(".gzip") @TO@ ClassInstanceCreation@@TextFileReader[testConfig, testDefaultPath.suffix(".gzip"), Codecs.GZIP.getCodecInfo()] @AT@ 3297 @LENGTH@ 31
---------------INS SimpleName@@Name:testDefaultPath @TO@ MethodInvocation@@testDefaultPath.suffix(".gzip") @AT@ 3297 @LENGTH@ 15
---------------INS SimpleName@@MethodName:suffix:[".gzip"] @TO@ MethodInvocation@@testDefaultPath.suffix(".gzip") @AT@ 3313 @LENGTH@ 15
------------------INS StringLiteral@@".gzip" @TO@ SimpleName@@MethodName:suffix:[".gzip"] @AT@ 3320 @LENGTH@ 7
------------INS MethodInvocation@@Codecs.GZIP.getCodecInfo() @TO@ ClassInstanceCreation@@TextFileReader[testConfig, testDefaultPath.suffix(".gzip"), Codecs.GZIP.getCodecInfo()] @AT@ 3334 @LENGTH@ 26
---------------INS QualifiedName@@Name:Codecs.GZIP @TO@ MethodInvocation@@Codecs.GZIP.getCodecInfo() @AT@ 3334 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getCodecInfo:[] @TO@ MethodInvocation@@Codecs.GZIP.getCodecInfo() @AT@ 3346 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:TestUtils.readDataAndAssert(reader,DATA09ARRAY) @TO@ MethodDeclaration@@public, void, MethodName:testWriteReadManyLinesWithGzipWithCodecNaming, IOException,  @AT@ 3365 @LENGTH@ 49
------INS MethodInvocation@@TestUtils.readDataAndAssert(reader,DATA09ARRAY) @TO@ ExpressionStatement@@MethodInvocation:TestUtils.readDataAndAssert(reader,DATA09ARRAY) @AT@ 3365 @LENGTH@ 48
---------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.readDataAndAssert(reader,DATA09ARRAY) @AT@ 3365 @LENGTH@ 9
---------INS SimpleName@@MethodName:readDataAndAssert:[reader, DATA09ARRAY] @TO@ MethodInvocation@@TestUtils.readDataAndAssert(reader,DATA09ARRAY) @AT@ 3375 @LENGTH@ 38
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:readDataAndAssert:[reader, DATA09ARRAY] @AT@ 3393 @LENGTH@ 6
------------INS SimpleName@@DATA09ARRAY @TO@ SimpleName@@MethodName:readDataAndAssert:[reader, DATA09ARRAY] @AT@ 3401 @LENGTH@ 11


UPD FieldDeclaration@@private, final, ResourceMappings, [provider] @TO@ private, final, RepositoryResourceMappings, [provider] @AT@ 1326 @LENGTH@ 40
---UPD SimpleType@@ResourceMappings @TO@ RepositoryResourceMappings @AT@ 1340 @LENGTH@ 16


UPD TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.getProperties().put(AvailableSettings.JTA_PLATFORM,JBossAppServerJtaPlatform.class);  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @TO@ try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.getProperties().put(AvailableSettings.JTA_PLATFORM,JBossAppServerJtaPlatform.class);  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  configuration.setProperty("hibernate.listeners.envers.autoRegister","false");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 2323 @LENGTH@ 1504
---INS ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.getProperties().put(AvailableSettings.JTA_PLATFORM,JBossAppServerJtaPlatform.class);  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 2826 @LENGTH@ 78
------INS MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2826 @LENGTH@ 77
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2826 @LENGTH@ 13
---------INS SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2840 @LENGTH@ 63
------------INS StringLiteral@@"hibernate.listeners.envers.autoRegister" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 2852 @LENGTH@ 41
------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 2895 @LENGTH@ 7


UPD TypeDeclaration@@[@SuppressWarnings("deprecation"), @RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]DistributedCacheTest,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]DistributedCacheTest,  @AT@ 1644 @LENGTH@ 4139
---DEL SingleMemberAnnotation@@@SuppressWarnings("deprecation") @AT@ 1644 @LENGTH@ 32


UPD VariableDeclarationStatement@@Field expressionField=Fields.field(alias,"expr"); @TO@ Field expressionField=Fields.field(alias,alias); @AT@ 8680 @LENGTH@ 52
---UPD VariableDeclarationFragment@@expressionField=Fields.field(alias,"expr") @TO@ expressionField=Fields.field(alias,alias) @AT@ 8686 @LENGTH@ 45
------UPD MethodInvocation@@Fields.field(alias,"expr") @TO@ Fields.field(alias,alias) @AT@ 8704 @LENGTH@ 27
---------UPD SimpleName@@MethodName:field:[alias, "expr"] @TO@ MethodName:field:[alias, alias] @AT@ 8711 @LENGTH@ 20
------------DEL StringLiteral@@"expr" @AT@ 8724 @LENGTH@ 6
------------INS SimpleName@@alias @TO@ SimpleName@@MethodName:field:[alias, "expr"] @AT@ 8724 @LENGTH@ 5


UPD IfStatement@@if (expression.indexOf("${") >= 0) {  return true;} @TO@ if ("simple".equalsIgnoreCase(language) && expression.indexOf("${") >= 0) {  return true;} @AT@ 4562 @LENGTH@ 71
---INS InfixExpression@@"simple".equalsIgnoreCase(language) && expression.indexOf("${") >= 0 @TO@ IfStatement@@if (expression.indexOf("${") >= 0) {  return true;} @AT@ 4642 @LENGTH@ 68
------MOV InfixExpression@@expression.indexOf("${") >= 0 @TO@ InfixExpression@@"simple".equalsIgnoreCase(language) && expression.indexOf("${") >= 0 @AT@ 4566 @LENGTH@ 29
------INS MethodInvocation@@"simple".equalsIgnoreCase(language) @TO@ InfixExpression@@"simple".equalsIgnoreCase(language) && expression.indexOf("${") >= 0 @AT@ 4642 @LENGTH@ 35
---------INS StringLiteral@@"simple" @TO@ MethodInvocation@@"simple".equalsIgnoreCase(language) @AT@ 4642 @LENGTH@ 8
---------INS SimpleName@@MethodName:equalsIgnoreCase:[language] @TO@ MethodInvocation@@"simple".equalsIgnoreCase(language) @AT@ 4651 @LENGTH@ 26
------------INS SimpleName@@language @TO@ SimpleName@@MethodName:equalsIgnoreCase:[language] @AT@ 4668 @LENGTH@ 8
------INS Operator@@&& @TO@ InfixExpression@@"simple".equalsIgnoreCase(language) && expression.indexOf("${") >= 0 @AT@ 4677 @LENGTH@ 2


DEL FieldDeclaration@@private, static, final, boolean, [aopAvailable=ClassUtils.isPresent("org.springframework.aop.scope.ScopedObject",HbaseSynchronizationManager.class.getClassLoader())] @AT@ 1777 @LENGTH@ 166
---DEL Modifier@@private @AT@ 1777 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1785 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1792 @LENGTH@ 5
---DEL PrimitiveType@@boolean @AT@ 1798 @LENGTH@ 7
---DEL VariableDeclarationFragment@@aopAvailable=ClassUtils.isPresent("org.springframework.aop.scope.ScopedObject",HbaseSynchronizationManager.class.getClassLoader()) @AT@ 1806 @LENGTH@ 136
------DEL SimpleName@@aopAvailable @AT@ 1806 @LENGTH@ 12
------DEL MethodInvocation@@ClassUtils.isPresent("org.springframework.aop.scope.ScopedObject",HbaseSynchronizationManager.class.getClassLoader()) @AT@ 1821 @LENGTH@ 121
---------DEL SimpleName@@Name:ClassUtils @AT@ 1821 @LENGTH@ 10
---------DEL SimpleName@@MethodName:isPresent:["org.springframework.aop.scope.ScopedObject", HbaseSynchronizationManager.class.getClassLoader()] @AT@ 1832 @LENGTH@ 110
------------DEL StringLiteral@@"org.springframework.aop.scope.ScopedObject" @AT@ 1842 @LENGTH@ 44
------------DEL MethodInvocation@@HbaseSynchronizationManager.class.getClassLoader() @AT@ 1891 @LENGTH@ 50
---------------DEL TypeLiteral@@HbaseSynchronizationManager.class @AT@ 1891 @LENGTH@ 33
---------------DEL SimpleName@@MethodName:getClassLoader:[] @AT@ 1925 @LENGTH@ 16


UPD IfStatement@@if (value == null || Boolean.TRUE.equals(value)) {  FieldReference reference=context.getReference(field.getTarget());  return reference.isSynthetic() && !field.isAliased() ? 1 : reference.toString();} else if (Boolean.FALSE.equals(value)) {  return 0;} @TO@ if (value == null || Boolean.TRUE.equals(value)) {  return context.getReference(field).getReferenceValue();} else if (Boolean.FALSE.equals(value)) {  return 0;} @AT@ 20086 @LENGTH@ 373
---UPD Block@@ThenBody:{  FieldReference reference=context.getReference(field.getTarget());  return reference.isSynthetic() && !field.isAliased() ? 1 : reference.toString();} @TO@ ThenBody:{  return context.getReference(field).getReferenceValue();} @AT@ 20135 @LENGTH@ 229
------INS ReturnStatement@@MethodInvocation:context.getReference(field).getReferenceValue() @TO@ Block@@ThenBody:{  FieldReference reference=context.getReference(field.getTarget());  return reference.isSynthetic() && !field.isAliased() ? 1 : reference.toString();} @AT@ 20117 @LENGTH@ 55
---------INS MethodInvocation@@context.getReference(field).getReferenceValue() @TO@ ReturnStatement@@MethodInvocation:context.getReference(field).getReferenceValue() @AT@ 20124 @LENGTH@ 47
------------INS MethodInvocation@@MethodName:getReference:[field] @TO@ MethodInvocation@@context.getReference(field).getReferenceValue() @AT@ 20124 @LENGTH@ 27
---------------MOV SimpleName@@Name:field @TO@ MethodInvocation@@MethodName:getReference:[field] @AT@ 20252 @LENGTH@ 5
------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getReference(field).getReferenceValue() @AT@ 20231 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getTarget:[] @TO@ MethodInvocation@@context.getReference(field).getReferenceValue() @AT@ 20258 @LENGTH@ 11
------DEL VariableDeclarationStatement@@FieldReference reference=context.getReference(field.getTarget()); @AT@ 20204 @LENGTH@ 67
---------DEL SimpleType@@FieldReference @AT@ 20204 @LENGTH@ 14
---------DEL VariableDeclarationFragment@@reference=context.getReference(field.getTarget()) @AT@ 20219 @LENGTH@ 51
------------DEL SimpleName@@reference @AT@ 20219 @LENGTH@ 9
------------DEL MethodInvocation@@context.getReference(field.getTarget()) @AT@ 20231 @LENGTH@ 39
---------------DEL SimpleName@@MethodName:getReference:[field.getTarget()] @AT@ 20239 @LENGTH@ 31
------------------DEL MethodInvocation@@field.getTarget() @AT@ 20252 @LENGTH@ 17
------DEL ReturnStatement@@ConditionalExpression:reference.isSynthetic() && !field.isAliased() ? 1 : reference.toString() @AT@ 20277 @LENGTH@ 80
---------DEL ConditionalExpression@@reference.isSynthetic() && !field.isAliased() ? 1 : reference.toString() @AT@ 20284 @LENGTH@ 72
------------DEL InfixExpression@@reference.isSynthetic() && !field.isAliased() @AT@ 20284 @LENGTH@ 45
---------------DEL MethodInvocation@@reference.isSynthetic() @AT@ 20284 @LENGTH@ 23
------------------DEL SimpleName@@Name:reference @AT@ 20284 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:isSynthetic:[] @AT@ 20294 @LENGTH@ 13
---------------DEL Operator@@&& @AT@ 20307 @LENGTH@ 2
---------------DEL PrefixExpression@@!field.isAliased() @AT@ 20311 @LENGTH@ 18
------------------DEL Operator@@! @AT@ 20311 @LENGTH@ 1
------------------DEL MethodInvocation@@field.isAliased() @AT@ 20312 @LENGTH@ 17
---------------------DEL SimpleName@@Name:field @AT@ 20312 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:isAliased:[] @AT@ 20318 @LENGTH@ 11
------------DEL NumberLiteral@@1 @AT@ 20332 @LENGTH@ 1
------------DEL MethodInvocation@@reference.toString() @AT@ 20336 @LENGTH@ 20
---------------DEL SimpleName@@Name:reference @AT@ 20336 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 20346 @LENGTH@ 10


UPD IfStatement@@if (configuration.getPolicy() != null) {  LOG.trace("Updating topic [{}] with policy [{}]",configuration.getTopicArn(),configuration.getPolicy());  getSNSClient().setTopicAttributes(new SetTopicAttributesRequest(configuration.getTopicArn(),"Policy",configuration.getPolicy()));  LOG.trace("Topic policy updated");} @TO@ if (ObjectHelper.isNotEmpty(configuration.getPolicy())) {  LOG.trace("Updating topic [{}] with policy [{}]",configuration.getTopicArn(),configuration.getPolicy());  getSNSClient().setTopicAttributes(new SetTopicAttributesRequest(configuration.getTopicArn(),"Policy",configuration.getPolicy()));  LOG.trace("Topic policy updated");} @AT@ 3134 @LENGTH@ 386
---DEL InfixExpression@@configuration.getPolicy() != null @AT@ 3138 @LENGTH@ 33
------DEL MethodInvocation@@configuration.getPolicy() @AT@ 3138 @LENGTH@ 25
------DEL Operator@@!= @AT@ 3163 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 3167 @LENGTH@ 4
---INS MethodInvocation@@ObjectHelper.isNotEmpty(configuration.getPolicy()) @TO@ IfStatement@@if (configuration.getPolicy() != null) {  LOG.trace("Updating topic [{}] with policy [{}]",configuration.getTopicArn(),configuration.getPolicy());  getSNSClient().setTopicAttributes(new SetTopicAttributesRequest(configuration.getTopicArn(),"Policy",configuration.getPolicy()));  LOG.trace("Topic policy updated");} @AT@ 3181 @LENGTH@ 50
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(configuration.getPolicy()) @AT@ 3181 @LENGTH@ 12
------INS SimpleName@@MethodName:isNotEmpty:[configuration.getPolicy()] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(configuration.getPolicy()) @AT@ 3194 @LENGTH@ 37
---------INS MethodInvocation@@configuration.getPolicy() @TO@ SimpleName@@MethodName:isNotEmpty:[configuration.getPolicy()] @AT@ 3205 @LENGTH@ 25
------------MOV SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getPolicy() @AT@ 3138 @LENGTH@ 13
------------MOV SimpleName@@MethodName:getPolicy:[] @TO@ MethodInvocation@@configuration.getPolicy() @AT@ 3152 @LENGTH@ 11


UPD FieldDeclaration@@WritableComparable, [key] @TO@ WritableComparable<?>, [key] @AT@ 1324 @LENGTH@ 23
---INS ParameterizedType@@WritableComparable<?> @TO@ FieldDeclaration@@WritableComparable, [key] @AT@ 1320 @LENGTH@ 21
------INS SimpleType@@WritableComparable @TO@ ParameterizedType@@WritableComparable<?> @AT@ 1320 @LENGTH@ 18
------INS WildcardType@@? @TO@ ParameterizedType@@WritableComparable<?> @AT@ 1339 @LENGTH@ 1
---DEL SimpleType@@WritableComparable @AT@ 1324 @LENGTH@ 18


UPD VariableDeclarationStatement@@List list=(List)exchange.getProperty(Exchange.GROUPED_EXCHANGE); @TO@ List<?> list=(List<?>)exchange.getProperty(Exchange.GROUPED_EXCHANGE); @AT@ 1444 @LENGTH@ 67
---INS ParameterizedType@@List<?> @TO@ VariableDeclarationStatement@@List list=(List)exchange.getProperty(Exchange.GROUPED_EXCHANGE); @AT@ 1413 @LENGTH@ 7
------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 1413 @LENGTH@ 4
------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 1418 @LENGTH@ 1
---DEL SimpleType@@List @AT@ 1444 @LENGTH@ 4
---UPD VariableDeclarationFragment@@list=(List)exchange.getProperty(Exchange.GROUPED_EXCHANGE) @TO@ list=(List<?>)exchange.getProperty(Exchange.GROUPED_EXCHANGE) @AT@ 1449 @LENGTH@ 61
------UPD CastExpression@@(List)exchange.getProperty(Exchange.GROUPED_EXCHANGE) @TO@ (List<?>)exchange.getProperty(Exchange.GROUPED_EXCHANGE) @AT@ 1456 @LENGTH@ 54
---------INS ParameterizedType@@List<?> @TO@ CastExpression@@(List)exchange.getProperty(Exchange.GROUPED_EXCHANGE) @AT@ 1429 @LENGTH@ 7
------------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 1429 @LENGTH@ 4
------------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 1434 @LENGTH@ 1
---------DEL SimpleType@@List @AT@ 1457 @LENGTH@ 4


INS MethodDeclaration@@public, Path, MethodName:init, Path path,  @TO@ TypeDeclaration@@[public]ChainedFileNamingStrategy, [FileNamingStrategy] @AT@ 2042 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 2042 @LENGTH@ 6
---INS SimpleType@@Path @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 2049 @LENGTH@ 4
---INS SimpleName@@MethodName:init @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 2054 @LENGTH@ 4
---INS SingleVariableDeclaration@@Path path @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 2059 @LENGTH@ 9
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path path @AT@ 2059 @LENGTH@ 4
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@Path path @AT@ 2064 @LENGTH@ 4
---INS ForStatement@@for (Iterator<? extends FileNamingStrategy> iterator=strategies.iterator(); iterator.hasNext(); ) {  path=iterator.next().init(path);} @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 2074 @LENGTH@ 142
------INS VariableDeclarationExpression@@Iterator<? extends FileNamingStrategy> iterator=strategies.iterator() @TO@ ForStatement@@for (Iterator<? extends FileNamingStrategy> iterator=strategies.iterator(); iterator.hasNext(); ) {  path=iterator.next().init(path);} @AT@ 2079 @LENGTH@ 71
---------INS ParameterizedType@@Iterator<? extends FileNamingStrategy> @TO@ VariableDeclarationExpression@@Iterator<? extends FileNamingStrategy> iterator=strategies.iterator() @AT@ 2079 @LENGTH@ 38
------------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<? extends FileNamingStrategy> @AT@ 2079 @LENGTH@ 8
------------INS WildcardType@@? @TO@ ParameterizedType@@Iterator<? extends FileNamingStrategy> @AT@ 2088 @LENGTH@ 28
---------INS VariableDeclarationFragment@@iterator=strategies.iterator() @TO@ VariableDeclarationExpression@@Iterator<? extends FileNamingStrategy> iterator=strategies.iterator() @AT@ 2118 @LENGTH@ 32
------------INS SimpleName@@iterator @TO@ VariableDeclarationFragment@@iterator=strategies.iterator() @AT@ 2118 @LENGTH@ 8
------------INS MethodInvocation@@strategies.iterator() @TO@ VariableDeclarationFragment@@iterator=strategies.iterator() @AT@ 2129 @LENGTH@ 21
---------------INS SimpleName@@Name:strategies @TO@ MethodInvocation@@strategies.iterator() @AT@ 2129 @LENGTH@ 10
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@strategies.iterator() @AT@ 2140 @LENGTH@ 10
------INS MethodInvocation@@iterator.hasNext() @TO@ ForStatement@@for (Iterator<? extends FileNamingStrategy> iterator=strategies.iterator(); iterator.hasNext(); ) {  path=iterator.next().init(path);} @AT@ 2152 @LENGTH@ 18
---------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.hasNext() @AT@ 2152 @LENGTH@ 8
---------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iterator.hasNext() @AT@ 2161 @LENGTH@ 9
------INS ExpressionStatement@@Assignment:path=iterator.next().init(path) @TO@ ForStatement@@for (Iterator<? extends FileNamingStrategy> iterator=strategies.iterator(); iterator.hasNext(); ) {  path=iterator.next().init(path);} @AT@ 2178 @LENGTH@ 34
---------INS Assignment@@path=iterator.next().init(path) @TO@ ExpressionStatement@@Assignment:path=iterator.next().init(path) @AT@ 2178 @LENGTH@ 33
------------INS SimpleName@@path @TO@ Assignment@@path=iterator.next().init(path) @AT@ 2178 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@path=iterator.next().init(path) @AT@ 2182 @LENGTH@ 1
------------INS MethodInvocation@@iterator.next().init(path) @TO@ Assignment@@path=iterator.next().init(path) @AT@ 2185 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next().init(path) @AT@ 2185 @LENGTH@ 15
---------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next().init(path) @AT@ 2185 @LENGTH@ 8
---------------INS SimpleName@@MethodName:init:[path] @TO@ MethodInvocation@@iterator.next().init(path) @AT@ 2201 @LENGTH@ 10
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:init:[path] @AT@ 2206 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:path @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 2219 @LENGTH@ 12
------INS SimpleName@@path @TO@ ReturnStatement@@SimpleName:path @AT@ 2226 @LENGTH@ 4


UPD IfStatement@@if (path == null) {  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @TO@ if (path == null) {  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @AT@ 8424 @LENGTH@ 123
---UPD Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @TO@ ThenBody:{  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @AT@ 8442 @LENGTH@ 105
------DEL ExpressionStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @AT@ 8456 @LENGTH@ 81
------INS ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @TO@ Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH));} @AT@ 8462 @LENGTH@ 87
---------MOV MethodInvocation@@ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.PATH)) @AT@ 8456 @LENGTH@ 80


UPD ReturnStatement@@MethodInvocation:json.getBytes(Common.UTF_8) @TO@ MethodInvocation:json.getBytes(StandardCharsets.UTF_8) @AT@ 3368 @LENGTH@ 35
---UPD MethodInvocation@@json.getBytes(Common.UTF_8) @TO@ json.getBytes(StandardCharsets.UTF_8) @AT@ 3375 @LENGTH@ 27
------UPD SimpleName@@MethodName:getBytes:[Common.UTF_8] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 3380 @LENGTH@ 22
---------UPD QualifiedName@@Common.UTF_8 @TO@ StandardCharsets.UTF_8 @AT@ 3389 @LENGTH@ 12
------------UPD SimpleName@@Common @TO@ StandardCharsets @AT@ 3389 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:formatter.close() @TO@ MethodDeclaration@@public, static, String, MethodName:format, String pathFormat, boolean appendUUID, Date date,  @AT@ 3157 @LENGTH@ 18
---INS MethodInvocation@@formatter.close() @TO@ ExpressionStatement@@MethodInvocation:formatter.close() @AT@ 3157 @LENGTH@ 17
------INS SimpleName@@Name:formatter @TO@ MethodInvocation@@formatter.close() @AT@ 3157 @LENGTH@ 9
------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@formatter.close() @AT@ 3167 @LENGTH@ 7


UPD TypeDeclaration@@[@ThreadSafe, @Component(name="org.fusesource.datastore.template.registry",description="DataStore Manager",immediate=true), @Service(DataStoreRegistrationHandler.class), public, final]DataStoreTemplateRegistry, AbstractComponent[DataStoreRegistrationHandler] @TO@ [@ThreadSafe, @Component(name="io.fabric8.datastore.template.registry",description="DataStore Manager",immediate=true), @Service(DataStoreRegistrationHandler.class), public, final]DataStoreTemplateRegistry, AbstractComponent[DataStoreRegistrationHandler] @AT@ 1236 @LENGTH@ 965
---UPD NormalAnnotation@@@Component(name="org.fusesource.datastore.template.registry",description="DataStore Manager",immediate=true) @TO@ @Component(name="io.fabric8.datastore.template.registry",description="DataStore Manager",immediate=true) @AT@ 1248 @LENGTH@ 116


UPD ExpressionStatement@@MethodInvocation:sortKeys.put("E.JOB_EXECUTION_ID",Order.DESCENDING) @TO@ MethodInvocation:sortKeys.put("JOB_EXECUTION_ID",Order.DESCENDING) @AT@ 4910 @LENGTH@ 53
---UPD MethodInvocation@@sortKeys.put("E.JOB_EXECUTION_ID",Order.DESCENDING) @TO@ sortKeys.put("JOB_EXECUTION_ID",Order.DESCENDING) @AT@ 4910 @LENGTH@ 52
------UPD SimpleName@@MethodName:put:["E.JOB_EXECUTION_ID", Order.DESCENDING] @TO@ MethodName:put:["JOB_EXECUTION_ID", Order.DESCENDING] @AT@ 4919 @LENGTH@ 43
---------UPD StringLiteral@@"E.JOB_EXECUTION_ID" @TO@ "JOB_EXECUTION_ID" @AT@ 4923 @LENGTH@ 20


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[public, final]InjectionDeploymentAspect, AbstractDeploymentAspect @AT@ 5818 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5818 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5826 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5833 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5850 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5886 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 5889 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 5889 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 5889 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 5896 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 5916 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 5920 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 5926 @LENGTH@ 77
---------INS ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 5940 @LENGTH@ 53
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 5947 @LENGTH@ 45
---------------INS SimpleName@@Name:CurrentServiceContainer @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 5947 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 5971 @LENGTH@ 21
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 6012 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6019 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6019 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6036 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 6049 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 6049 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 6073 @LENGTH@ 10


INS IfStatement@@if (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  throw unexpectedContent(reader);}} @TO@ MethodDeclaration@@private, static, void, MethodName:parseModuleExclusion, final XMLStreamReader reader, final ModuleStructureSpec specBuilder, XMLStreamException,  @AT@ 34421 @LENGTH@ 246
---INS MethodInvocation@@reader.hasNext() @TO@ IfStatement@@if (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  throw unexpectedContent(reader);}} @AT@ 34425 @LENGTH@ 16
------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 34428 @LENGTH@ 6
------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 34435 @LENGTH@ 9
---MOV Block@@WhileBody:{switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  unexpectedContent(reader);}} @TO@ IfStatement@@if (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  throw unexpectedContent(reader);}} @AT@ 34446 @LENGTH@ 218


UPD IfStatement@@if (property.isCollection() || requiresJoin(propertyPathModel)) {  Join<?,?> join=getOrCreateJoin(from,property.getSegment());  return (Expression<T>)(property.hasNext() ? toExpressionRecursively(join,property.next()) : join);} else {  Path<Object> path=from.get(property.getSegment());  return (Expression<T>)(property.hasNext() ? toExpressionRecursively(path,property.next()) : path);} @TO@ if (requiresJoin(propertyPathModel)) {  Join<?,?> join=getOrCreateJoin(from,property.getSegment());  return (Expression<T>)(property.hasNext() ? toExpressionRecursively(join,property.next()) : join);} else {  Path<Object> path=from.get(property.getSegment());  return (Expression<T>)(property.hasNext() ? toExpressionRecursively(path,property.next()) : path);} @AT@ 13872 @LENGTH@ 411
---DEL InfixExpression@@property.isCollection() || requiresJoin(propertyPathModel) @AT@ 13876 @LENGTH@ 58
------DEL MethodInvocation@@property.isCollection() @AT@ 13876 @LENGTH@ 23
---------DEL SimpleName@@Name:property @AT@ 13876 @LENGTH@ 8
---------DEL SimpleName@@MethodName:isCollection:[] @AT@ 13885 @LENGTH@ 14
------DEL Operator@@|| @AT@ 13899 @LENGTH@ 2
---MOV MethodInvocation@@requiresJoin(propertyPathModel) @TO@ IfStatement@@if (property.isCollection() || requiresJoin(propertyPathModel)) {  Join<?,?> join=getOrCreateJoin(from,property.getSegment());  return (Expression<T>)(property.hasNext() ? toExpressionRecursively(join,property.next()) : join);} else {  Path<Object> path=from.get(property.getSegment());  return (Expression<T>)(property.hasNext() ? toExpressionRecursively(path,property.next()) : path);} @AT@ 13903 @LENGTH@ 31


DEL ExpressionStatement@@MethodInvocation:System.setProperty("java.io.tmpdir","") @AT@ 1963 @LENGTH@ 41
---DEL MethodInvocation@@System.setProperty("java.io.tmpdir","") @AT@ 1963 @LENGTH@ 40
------DEL SimpleName@@Name:System @AT@ 1963 @LENGTH@ 6
------DEL SimpleName@@MethodName:setProperty:["java.io.tmpdir", ""] @AT@ 1970 @LENGTH@ 33
---------DEL StringLiteral@@"java.io.tmpdir" @AT@ 1982 @LENGTH@ 16
---------DEL StringLiteral@@"" @AT@ 2000 @LENGTH@ 2


UPD TryStatement@@try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'8',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new IntWritable(8))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0',8:'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','8','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new Text("8"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-")));    assertEquals("{'2':'d\\tf','-1':null,'0':'0','8':'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @TO@ try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'8',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new IntWritable(8))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0',8:'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(4,b.getMapSize());  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','8','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new Text("8"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-")));    assertEquals("{'2':'d\\tf','-1':null,'0':'0','8':'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(4,b.getMapSize());  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 5820 @LENGTH@ 2600
---INS ExpressionStatement@@MethodInvocation:assertEquals(4,b.getMapSize()) @TO@ TryStatement@@try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'8',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new IntWritable(8))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0',8:'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','8','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new Text("8"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-")));    assertEquals("{'2':'d\\tf','-1':null,'0':'0','8':'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 7084 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(4,b.getMapSize()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(4,b.getMapSize()) @AT@ 7084 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[4, b.getMapSize()] @TO@ MethodInvocation@@assertEquals(4,b.getMapSize()) @AT@ 7084 @LENGTH@ 31
------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:assertEquals:[4, b.getMapSize()] @AT@ 7097 @LENGTH@ 1
------------INS MethodInvocation@@b.getMapSize() @TO@ SimpleName@@MethodName:assertEquals:[4, b.getMapSize()] @AT@ 7100 @LENGTH@ 14
---------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.getMapSize() @AT@ 7100 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getMapSize:[] @TO@ MethodInvocation@@b.getMapSize() @AT@ 7102 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals(4,b.getMapSize()) @TO@ TryStatement@@try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'8',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new IntWritable(8))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0',8:'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','8','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals(new Text("abc"),((LazyString)b.getMapValueElement(new Text("8"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-")));    assertEquals("{'2':'d\\tf','-1':null,'0':'0','8':'abc'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 8385 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(4,b.getMapSize()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(4,b.getMapSize()) @AT@ 8385 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[4, b.getMapSize()] @TO@ MethodInvocation@@assertEquals(4,b.getMapSize()) @AT@ 8385 @LENGTH@ 31
------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:assertEquals:[4, b.getMapSize()] @AT@ 8398 @LENGTH@ 1
------------INS MethodInvocation@@b.getMapSize() @TO@ SimpleName@@MethodName:assertEquals:[4, b.getMapSize()] @AT@ 8401 @LENGTH@ 14
---------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.getMapSize() @AT@ 8401 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getMapSize:[] @TO@ MethodInvocation@@b.getMapSize() @AT@ 8403 @LENGTH@ 12


UPD TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  final ZooKeeperMultiGroup group=new ZooKeeperMultiGroup<FabricDiscoveryAgent.ActiveMQNode>(curator,"/fabric/registry/clusters/fusemq/default",FabricDiscoveryAgent.ActiveMQNode.class);  group.start();  FabricDiscoveryAgent.ActiveMQNode master=null;  Provision.waitForCondition(new Callable<Boolean>(){    @Override public Boolean call() throws Exception {      while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {        Thread.sleep(1000);      }      return true;    }  },300000L);  master=(FabricDiscoveryAgent.ActiveMQNode)group.master();  String masterContainer=master.getContainer();  assertEquals("node1",masterContainer);  for (int i=0; i < 10; i++) {    Thread.sleep(5000);    executeCommand("container-remove-profile node1 jboss-fuse-full");    Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);    Provision.waitForCondition(new Callable<Boolean>(){      @Override public Boolean call() throws Exception {        while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {          Thread.sleep(1000);        }        return true;      }    },300000L);    master=(FabricDiscoveryAgent.ActiveMQNode)group.master();    assertNull(master);    Thread.sleep(5000);    executeCommand("container-add-profile node1 jboss-fuse-full");    Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);    Provision.waitForCondition(new Callable<Boolean>(){      @Override public Boolean call() throws Exception {        while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {          Thread.sleep(1000);        }        return true;      }    },300000L);    master=(FabricDiscoveryAgent.ActiveMQNode)group.master();    masterContainer=master.getContainer();    assertEquals("node1",masterContainer);  }}  finally {  fabricProxy.close();  curatorProxy.close();} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  final ZooKeeperMultiGroup group=new ZooKeeperMultiGroup<FabricDiscoveryAgent.ActiveMQNode>(curator,"/fabric/registry/clusters/fusemq/default",FabricDiscoveryAgent.ActiveMQNode.class);  group.start();  FabricDiscoveryAgent.ActiveMQNode master=null;  Provision.waitForCondition(new Callable<Boolean>(){    @Override public Boolean call() throws Exception {      while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {        Thread.sleep(1000);      }      return true;    }  },timeout);  master=(FabricDiscoveryAgent.ActiveMQNode)group.master();  String masterContainer=master.getContainer();  assertEquals("node1",masterContainer);  for (int i=0; i < 5; i++) {    Thread.sleep(5000);    executeCommand("container-remove-profile node1 jboss-fuse-full");    Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);    Provision.waitForCondition(new Callable<Boolean>(){      @Override public Boolean call() throws Exception {        while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {          Thread.sleep(1000);        }        return true;      }    },timeout);    master=(FabricDiscoveryAgent.ActiveMQNode)group.master();    assertNull(master);    Thread.sleep(5000);    executeCommand("container-add-profile node1 jboss-fuse-full");    Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);    Provision.waitForCondition(new Callable<Boolean>(){      @Override public Boolean call() throws Exception {        while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {          Thread.sleep(1000);        }        return true;      }    },timeout);    master=(FabricDiscoveryAgent.ActiveMQNode)group.master();    masterContainer=master.getContainer();    assertEquals("node1",masterContainer);  }}  finally {  fabricProxy.close();  curatorProxy.close();} @AT@ 2557 @LENGTH@ 2953
---UPD ExpressionStatement@@MethodInvocation:Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,300000L) @TO@ MethodInvocation:Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,timeout) @AT@ 3022 @LENGTH@ 398
------UPD MethodInvocation@@Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,300000L) @TO@ Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,timeout) @AT@ 3022 @LENGTH@ 397
---------UPD SimpleName@@MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, 300000L] @TO@ MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, timeout] @AT@ 3032 @LENGTH@ 387
------------DEL NumberLiteral@@300000L @AT@ 3411 @LENGTH@ 7
------------INS SimpleName@@timeout @TO@ SimpleName@@MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, 300000L] @AT@ 3451 @LENGTH@ 7
---UPD ForStatement@@for (int i=0; i < 10; i++) {  Thread.sleep(5000);  executeCommand("container-remove-profile node1 jboss-fuse-full");  Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);  Provision.waitForCondition(new Callable<Boolean>(){    @Override public Boolean call() throws Exception {      while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {        Thread.sleep(1000);      }      return true;    }  },300000L);  master=(FabricDiscoveryAgent.ActiveMQNode)group.master();  assertNull(master);  Thread.sleep(5000);  executeCommand("container-add-profile node1 jboss-fuse-full");  Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);  Provision.waitForCondition(new Callable<Boolean>(){    @Override public Boolean call() throws Exception {      while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {        Thread.sleep(1000);      }      return true;    }  },300000L);  master=(FabricDiscoveryAgent.ActiveMQNode)group.master();  masterContainer=master.getContainer();  assertEquals("node1",masterContainer);} @TO@ for (int i=0; i < 5; i++) {  Thread.sleep(5000);  executeCommand("container-remove-profile node1 jboss-fuse-full");  Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);  Provision.waitForCondition(new Callable<Boolean>(){    @Override public Boolean call() throws Exception {      while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {        Thread.sleep(1000);      }      return true;    }  },timeout);  master=(FabricDiscoveryAgent.ActiveMQNode)group.master();  assertNull(master);  Thread.sleep(5000);  executeCommand("container-add-profile node1 jboss-fuse-full");  Provision.provisioningSuccess(Arrays.asList(fabricService.getContainers()),PROVISION_TIMEOUT);  Provision.waitForCondition(new Callable<Boolean>(){    @Override public Boolean call() throws Exception {      while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {        Thread.sleep(1000);      }      return true;    }  },timeout);  master=(FabricDiscoveryAgent.ActiveMQNode)group.master();  masterContainer=master.getContainer();  assertEquals("node1",masterContainer);} @AT@ 3635 @LENGTH@ 1762
------UPD InfixExpression@@i < 10 @TO@ i < 5 @AT@ 3651 @LENGTH@ 6
---------UPD NumberLiteral@@10 @TO@ 5 @AT@ 3655 @LENGTH@ 2
------UPD ExpressionStatement@@MethodInvocation:Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,300000L) @TO@ MethodInvocation:Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,timeout) @AT@ 3931 @LENGTH@ 430
---------UPD MethodInvocation@@Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,300000L) @TO@ Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,timeout) @AT@ 3931 @LENGTH@ 429
------------UPD SimpleName@@MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, 300000L] @TO@ MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, timeout] @AT@ 3941 @LENGTH@ 419
---------------DEL NumberLiteral@@300000L @AT@ 4352 @LENGTH@ 7
---------------INS SimpleName@@timeout @TO@ SimpleName@@MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() != null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, 300000L] @AT@ 4391 @LENGTH@ 7
------UPD ExpressionStatement@@MethodInvocation:Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,300000L) @TO@ MethodInvocation:Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,timeout) @AT@ 4745 @LENGTH@ 430
---------UPD MethodInvocation@@Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,300000L) @TO@ Provision.waitForCondition(new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
,timeout) @AT@ 4745 @LENGTH@ 429
------------UPD SimpleName@@MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, 300000L] @TO@ MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, timeout] @AT@ 4755 @LENGTH@ 419
---------------DEL NumberLiteral@@300000L @AT@ 5166 @LENGTH@ 7
---------------INS SimpleName@@timeout @TO@ SimpleName@@MethodName:waitForCondition:[new Callable<Boolean>(){
  @Override public Boolean call() throws Exception {
    while ((FabricDiscoveryAgent.ActiveMQNode)group.master() == null) {
      Thread.sleep(1000);
    }
    return true;
  }
}
, 300000L] @AT@ 5205 @LENGTH@ 7


UPD VariableDeclarationStatement@@WebSocket websocket=c.prepareGet("ws://127.0.0.1:" + port + "/shop").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get(); @TO@ WebSocket websocket=c.prepareGet("ws://localhost:" + port + "/shop").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get(); @AT@ 2065 @LENGTH@ 1008
---UPD VariableDeclarationFragment@@websocket=c.prepareGet("ws://127.0.0.1:" + port + "/shop").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @TO@ websocket=c.prepareGet("ws://localhost:" + port + "/shop").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @AT@ 2075 @LENGTH@ 997
------UPD MethodInvocation@@c.prepareGet("ws://127.0.0.1:" + port + "/shop").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @TO@ c.prepareGet("ws://localhost:" + port + "/shop").execute(new WebSocketUpgradeHandler.Builder().addWebSocketListener(new WebSocketTextListener(){
  @Override public void onMessage(  String message){
    received.add(message);
    log.info("received --> " + message);
    latch.countDown();
  }
  @Override public void onFragment(  String fragment,  boolean last){
  }
  @Override public void onOpen(  WebSocket websocket){
  }
  @Override public void onClose(  WebSocket websocket){
  }
  @Override public void onError(  Throwable t){
    t.printStackTrace();
  }
}
).build()).get() @AT@ 2087 @LENGTH@ 985
---------UPD MethodInvocation@@MethodName:prepareGet:["ws://127.0.0.1:" + port + "/shop"] @TO@ MethodName:prepareGet:["ws://localhost:" + port + "/shop"] @AT@ 2087 @LENGTH@ 48
------------UPD InfixExpression@@"ws://127.0.0.1:" + port + "/shop" @TO@ "ws://localhost:" + port + "/shop" @AT@ 2100 @LENGTH@ 34
---------------UPD StringLiteral@@"ws://127.0.0.1:" @TO@ "ws://localhost:" @AT@ 2100 @LENGTH@ 17


INS TryStatement@@try {  context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class);  fail("need to throw an exception here");} catch (ResolveEndpointFailedException ex) {  assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);} @TO@ MethodDeclaration@@public, void, MethodName:testHttpEndpointHttpUri, Exception,  @AT@ 2155 @LENGTH@ 387
---INS ExpressionStatement@@MethodInvocation:context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class) @TO@ TryStatement@@try {  context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class);  fail("need to throw an exception here");} catch (ResolveEndpointFailedException ex) {  assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);} @AT@ 2221 @LENGTH@ 74
------INS MethodInvocation@@context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class) @TO@ ExpressionStatement@@MethodInvocation:context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class) @AT@ 2221 @LENGTH@ 73
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class) @AT@ 2221 @LENGTH@ 7
---------INS SimpleName@@MethodName:getEndpoint:["https4://http://www.google.com", HttpEndpoint.class] @TO@ MethodInvocation@@context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class) @AT@ 2229 @LENGTH@ 65
------------INS StringLiteral@@"https4://http://www.google.com" @TO@ SimpleName@@MethodName:getEndpoint:["https4://http://www.google.com", HttpEndpoint.class] @AT@ 2241 @LENGTH@ 32
------------INS TypeLiteral@@HttpEndpoint.class @TO@ SimpleName@@MethodName:getEndpoint:["https4://http://www.google.com", HttpEndpoint.class] @AT@ 2275 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:fail("need to throw an exception here") @TO@ TryStatement@@try {  context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class);  fail("need to throw an exception here");} catch (ResolveEndpointFailedException ex) {  assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);} @AT@ 2308 @LENGTH@ 40
------INS MethodInvocation@@fail("need to throw an exception here") @TO@ ExpressionStatement@@MethodInvocation:fail("need to throw an exception here") @AT@ 2308 @LENGTH@ 39
---------INS SimpleName@@MethodName:fail:["need to throw an exception here"] @TO@ MethodInvocation@@fail("need to throw an exception here") @AT@ 2308 @LENGTH@ 39
------------INS StringLiteral@@"need to throw an exception here" @TO@ SimpleName@@MethodName:fail:["need to throw an exception here"] @AT@ 2313 @LENGTH@ 33
---INS CatchClause@@catch (ResolveEndpointFailedException ex) {  assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);} @TO@ TryStatement@@try {  context.getEndpoint("https4://http://www.google.com",HttpEndpoint.class);  fail("need to throw an exception here");} catch (ResolveEndpointFailedException ex) {  assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);} @AT@ 2359 @LENGTH@ 183
------INS SingleVariableDeclaration@@ResolveEndpointFailedException ex @TO@ CatchClause@@catch (ResolveEndpointFailedException ex) {  assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);} @AT@ 2366 @LENGTH@ 33
---------INS SimpleType@@ResolveEndpointFailedException @TO@ SingleVariableDeclaration@@ResolveEndpointFailedException ex @AT@ 2366 @LENGTH@ 30
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@ResolveEndpointFailedException ex @AT@ 2397 @LENGTH@ 2
------INS ExpressionStatement@@MethodInvocation:assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0) @TO@ CatchClause@@catch (ResolveEndpointFailedException ex) {  assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0);} @AT@ 2415 @LENGTH@ 117
---------INS MethodInvocation@@assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0) @AT@ 2415 @LENGTH@ 116
------------INS SimpleName@@MethodName:assertTrue:["Get a wrong exception message", ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0] @TO@ MethodInvocation@@assertTrue("Get a wrong exception message",ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0) @AT@ 2415 @LENGTH@ 116
---------------INS StringLiteral@@"Get a wrong exception message" @TO@ SimpleName@@MethodName:assertTrue:["Get a wrong exception message", ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0] @AT@ 2426 @LENGTH@ 31
---------------INS InfixExpression@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0 @TO@ SimpleName@@MethodName:assertTrue:["Get a wrong exception message", ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0] @AT@ 2459 @LENGTH@ 71
------------------INS MethodInvocation@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") @TO@ InfixExpression@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0 @AT@ 2459 @LENGTH@ 67
---------------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") @AT@ 2459 @LENGTH@ 15
---------------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") @AT@ 2459 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:indexOf:["You have duplicated the http(s) protocol"] @TO@ MethodInvocation@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") @AT@ 2475 @LENGTH@ 51
------------------------INS StringLiteral@@"You have duplicated the http(s) protocol" @TO@ SimpleName@@MethodName:indexOf:["You have duplicated the http(s) protocol"] @AT@ 2483 @LENGTH@ 42
------------------INS Operator@@> @TO@ InfixExpression@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0 @AT@ 2526 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ InfixExpression@@ex.getMessage().indexOf("You have duplicated the http(s) protocol") > 0 @AT@ 2529 @LENGTH@ 1


INS MethodDeclaration@@public, SearchArgument, MethodName:create, String kryo,  @TO@ TypeDeclaration@@[public, static]Factory,  @AT@ 5002 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, SearchArgument, MethodName:create, String kryo,  @AT@ 5002 @LENGTH@ 6
---INS SimpleType@@SearchArgument @TO@ MethodDeclaration@@public, SearchArgument, MethodName:create, String kryo,  @AT@ 5009 @LENGTH@ 14
---INS SimpleName@@MethodName:create @TO@ MethodDeclaration@@public, SearchArgument, MethodName:create, String kryo,  @AT@ 5024 @LENGTH@ 6
---INS SingleVariableDeclaration@@String kryo @TO@ MethodDeclaration@@public, SearchArgument, MethodName:create, String kryo,  @AT@ 5031 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String kryo @AT@ 5031 @LENGTH@ 6
------INS SimpleName@@kryo @TO@ SingleVariableDeclaration@@String kryo @AT@ 5038 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:SearchArgumentImpl.fromKryo(kryo) @TO@ MethodDeclaration@@public, SearchArgument, MethodName:create, String kryo,  @AT@ 5052 @LENGTH@ 41
------INS MethodInvocation@@SearchArgumentImpl.fromKryo(kryo) @TO@ ReturnStatement@@MethodInvocation:SearchArgumentImpl.fromKryo(kryo) @AT@ 5059 @LENGTH@ 33
---------INS SimpleName@@Name:SearchArgumentImpl @TO@ MethodInvocation@@SearchArgumentImpl.fromKryo(kryo) @AT@ 5059 @LENGTH@ 18
---------INS SimpleName@@MethodName:fromKryo:[kryo] @TO@ MethodInvocation@@SearchArgumentImpl.fromKryo(kryo) @AT@ 5078 @LENGTH@ 14
------------INS SimpleName@@kryo @TO@ SimpleName@@MethodName:fromKryo:[kryo] @AT@ 5087 @LENGTH@ 4


INS MethodDeclaration@@void, MethodName:failedStatusSynchronization, @Cause Throwable cause, String deploymentName,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYDS",length=4), public]DeploymentScannerLogger, [BasicLogger] @AT@ 17125 @LENGTH@ 75
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:failedStatusSynchronization, @Cause Throwable cause, String deploymentName,  @AT@ 17120 @LENGTH@ 4
---INS SimpleName@@MethodName:failedStatusSynchronization @TO@ MethodDeclaration@@void, MethodName:failedStatusSynchronization, @Cause Throwable cause, String deploymentName,  @AT@ 17125 @LENGTH@ 27
---INS SingleVariableDeclaration@@@Cause Throwable cause @TO@ MethodDeclaration@@void, MethodName:failedStatusSynchronization, @Cause Throwable cause, String deploymentName,  @AT@ 17153 @LENGTH@ 22
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 17160 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 17170 @LENGTH@ 5
---INS SingleVariableDeclaration@@String deploymentName @TO@ MethodDeclaration@@void, MethodName:failedStatusSynchronization, @Cause Throwable cause, String deploymentName,  @AT@ 17177 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String deploymentName @AT@ 17177 @LENGTH@ 6
------INS SimpleName@@deploymentName @TO@ SingleVariableDeclaration@@String deploymentName @AT@ 17184 @LENGTH@ 14


INS MethodDeclaration@@List<EmbeddedIdExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @TO@ TypeDeclaration@@[@Lazy, public]EmployeeRepositoryWithEmbeddedId, [JpaRepository<EmbeddedIdExampleEmployee,EmbeddedIdExampleEmployeePK>] @AT@ 1477 @LENGTH@ 58
---INS ParameterizedType@@List<EmbeddedIdExampleEmployee> @TO@ MethodDeclaration@@List<EmbeddedIdExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1445 @LENGTH@ 31
------INS SimpleType@@List @TO@ ParameterizedType@@List<EmbeddedIdExampleEmployee> @AT@ 1445 @LENGTH@ 4
------INS SimpleType@@EmbeddedIdExampleEmployee @TO@ ParameterizedType@@List<EmbeddedIdExampleEmployee> @AT@ 1450 @LENGTH@ 25
---INS SimpleName@@MethodName:findAll @TO@ MethodDeclaration@@List<EmbeddedIdExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1477 @LENGTH@ 7
---INS SingleVariableDeclaration@@Predicate predicate @TO@ MethodDeclaration@@List<EmbeddedIdExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1485 @LENGTH@ 19
------INS SimpleType@@Predicate @TO@ SingleVariableDeclaration@@Predicate predicate @AT@ 1485 @LENGTH@ 9
------INS SimpleName@@predicate @TO@ SingleVariableDeclaration@@Predicate predicate @AT@ 1495 @LENGTH@ 9
---INS SingleVariableDeclaration@@OrderSpecifier<?>... orders @TO@ MethodDeclaration@@List<EmbeddedIdExampleEmployee>, MethodName:findAll, Predicate predicate, OrderSpecifier<?>... orders,  @AT@ 1506 @LENGTH@ 27
------INS ParameterizedType@@OrderSpecifier<?> @TO@ SingleVariableDeclaration@@OrderSpecifier<?>... orders @AT@ 1506 @LENGTH@ 17
---------INS SimpleType@@OrderSpecifier @TO@ ParameterizedType@@OrderSpecifier<?> @AT@ 1506 @LENGTH@ 14
---------INS WildcardType@@? @TO@ ParameterizedType@@OrderSpecifier<?> @AT@ 1521 @LENGTH@ 1
------INS SimpleName@@orders @TO@ SingleVariableDeclaration@@OrderSpecifier<?>... orders @AT@ 1527 @LENGTH@ 6


UPD TypeDeclaration@@[static]ExitTrapped, Error @TO@ [@SuppressWarnings("serial"), static]ExitTrapped, Error @AT@ 2090 @LENGTH@ 357
---INS SingleMemberAnnotation@@@SuppressWarnings("serial") @TO@ TypeDeclaration@@[static]ExitTrapped, Error @AT@ 2086 @LENGTH@ 27


DEL MethodDeclaration@@private, Object, MethodName:convertArrayToCollectionIfNecessary, Object value,  @AT@ 3973 @LENGTH@ 325
---DEL Modifier@@private @AT@ 3973 @LENGTH@ 7
---DEL SimpleType@@Object @AT@ 3981 @LENGTH@ 6
---DEL SimpleName@@MethodName:convertArrayToCollectionIfNecessary @AT@ 3988 @LENGTH@ 35
---DEL SingleVariableDeclaration@@Object value @AT@ 4024 @LENGTH@ 12
------DEL SimpleType@@Object @AT@ 4024 @LENGTH@ 6
------DEL SimpleName@@value @AT@ 4031 @LENGTH@ 5
---DEL IfStatement@@if (!ObjectUtils.isArray(value)) {  return value;} @AT@ 4043 @LENGTH@ 55
------DEL PrefixExpression@@!ObjectUtils.isArray(value) @AT@ 4047 @LENGTH@ 27
---------DEL Operator@@! @AT@ 4047 @LENGTH@ 1
---------DEL MethodInvocation@@ObjectUtils.isArray(value) @AT@ 4048 @LENGTH@ 26
------------DEL SimpleName@@Name:ObjectUtils @AT@ 4048 @LENGTH@ 11
------------DEL SimpleName@@MethodName:isArray:[value] @AT@ 4060 @LENGTH@ 14
---------------DEL SimpleName@@value @AT@ 4068 @LENGTH@ 5
------DEL Block@@ThenBody:{  return value;} @AT@ 4076 @LENGTH@ 22
---------DEL ReturnStatement@@SimpleName:value @AT@ 4081 @LENGTH@ 13
------------DEL SimpleName@@value @AT@ 4088 @LENGTH@ 5
---DEL VariableDeclarationStatement@@int length=Array.getLength(value); @AT@ 4102 @LENGTH@ 36
------DEL PrimitiveType@@int @AT@ 4102 @LENGTH@ 3
------DEL VariableDeclarationFragment@@length=Array.getLength(value) @AT@ 4106 @LENGTH@ 31
---------DEL SimpleName@@length @AT@ 4106 @LENGTH@ 6
---------DEL MethodInvocation@@Array.getLength(value) @AT@ 4115 @LENGTH@ 22
------------DEL SimpleName@@Name:Array @AT@ 4115 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getLength:[value] @AT@ 4121 @LENGTH@ 16
---------------DEL SimpleName@@value @AT@ 4131 @LENGTH@ 5
---DEL VariableDeclarationStatement@@Collection<Object> result=new ArrayList<Object>(length); @AT@ 4141 @LENGTH@ 58
------DEL ParameterizedType@@Collection<Object> @AT@ 4141 @LENGTH@ 18
---------DEL SimpleType@@Collection @AT@ 4141 @LENGTH@ 10
---------DEL SimpleType@@Object @AT@ 4152 @LENGTH@ 6
------DEL VariableDeclarationFragment@@result=new ArrayList<Object>(length) @AT@ 4160 @LENGTH@ 38
---------DEL SimpleName@@result @AT@ 4160 @LENGTH@ 6
---------DEL ClassInstanceCreation@@ArrayList<Object>[length] @AT@ 4169 @LENGTH@ 29
------------DEL New@@new @AT@ 4169 @LENGTH@ 3
------------DEL ParameterizedType@@ArrayList<Object> @AT@ 4173 @LENGTH@ 17
---------------DEL SimpleType@@ArrayList @AT@ 4173 @LENGTH@ 9
---------------DEL SimpleType@@Object @AT@ 4183 @LENGTH@ 6
------------DEL SimpleName@@length @AT@ 4191 @LENGTH@ 6
---DEL ForStatement@@for (int i=0; i < length; i++) {  result.add(Array.get(value,i));} @AT@ 4203 @LENGTH@ 74
------DEL VariableDeclarationExpression@@int i=0 @AT@ 4208 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 4208 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 4212 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 4212 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 4216 @LENGTH@ 1
------DEL InfixExpression@@i < length @AT@ 4219 @LENGTH@ 10
---------DEL SimpleName@@i @AT@ 4219 @LENGTH@ 1
---------DEL Operator@@< @AT@ 4220 @LENGTH@ 1
---------DEL SimpleName@@length @AT@ 4223 @LENGTH@ 6
------DEL PostfixExpression@@i++ @AT@ 4231 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 4231 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 4233 @LENGTH@ 2
------DEL ExpressionStatement@@MethodInvocation:result.add(Array.get(value,i)) @AT@ 4241 @LENGTH@ 32
---------DEL MethodInvocation@@result.add(Array.get(value,i)) @AT@ 4241 @LENGTH@ 31
------------DEL SimpleName@@Name:result @AT@ 4241 @LENGTH@ 6
------------DEL SimpleName@@MethodName:add:[Array.get(value,i)] @AT@ 4248 @LENGTH@ 24
---------------DEL MethodInvocation@@Array.get(value,i) @AT@ 4252 @LENGTH@ 19
------------------DEL SimpleName@@Name:Array @AT@ 4252 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:get:[value, i] @AT@ 4258 @LENGTH@ 13
---------------------DEL SimpleName@@value @AT@ 4262 @LENGTH@ 5
---------------------DEL SimpleName@@i @AT@ 4269 @LENGTH@ 1
---DEL ReturnStatement@@SimpleName:result @AT@ 4281 @LENGTH@ 14
------DEL SimpleName@@result @AT@ 4288 @LENGTH@ 6


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]SrpConnectionIntegrationTests, AbstractConnectionIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration, public]SrpConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 1351 @LENGTH@ 2071
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1351 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:actualHeaders.setAccept(Arrays.asList(MediaType.APPLICATION_FORM_URLENCODED)) @TO@ MethodInvocation:headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON)) @AT@ 6310 @LENGTH@ 78
---UPD MethodInvocation@@actualHeaders.setAccept(Arrays.asList(MediaType.APPLICATION_FORM_URLENCODED)) @TO@ headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON)) @AT@ 6310 @LENGTH@ 77
------UPD SimpleName@@Name:actualHeaders @TO@ Name:headers @AT@ 6310 @LENGTH@ 13
------UPD SimpleName@@MethodName:setAccept:[Arrays.asList(MediaType.APPLICATION_FORM_URLENCODED)] @TO@ MethodName:setAccept:[Arrays.asList(MediaType.APPLICATION_JSON)] @AT@ 6324 @LENGTH@ 63
---------UPD MethodInvocation@@Arrays.asList(MediaType.APPLICATION_FORM_URLENCODED) @TO@ Arrays.asList(MediaType.APPLICATION_JSON) @AT@ 6334 @LENGTH@ 52
------------UPD SimpleName@@MethodName:asList:[MediaType.APPLICATION_FORM_URLENCODED] @TO@ MethodName:asList:[MediaType.APPLICATION_JSON] @AT@ 6341 @LENGTH@ 45
---------------UPD QualifiedName@@MediaType.APPLICATION_FORM_URLENCODED @TO@ MediaType.APPLICATION_JSON @AT@ 6348 @LENGTH@ 37
------------------UPD SimpleName@@APPLICATION_FORM_URLENCODED @TO@ APPLICATION_JSON @AT@ 6358 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>",content) @TO@ MethodInvocation:assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></ns:group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>",content) @AT@ 26164 @LENGTH@ 414
---UPD MethodInvocation@@assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>",content) @TO@ assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></ns:group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>",content) @AT@ 26164 @LENGTH@ 413
------UPD SimpleName@@MethodName:assertEquals:["Wrong content: " + content, "<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>", content] @TO@ MethodName:assertEquals:["Wrong content: " + content, "<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></ns:group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>", content] @AT@ 26164 @LENGTH@ 413
---------UPD InfixExpression@@"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>" @TO@ "<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>"+ "<preFooter>PRE-FOOTER</preFooter></subGroup></ns:group><postFooter>POST-FOOTER</postFooter>"+ "</ns:testroot>" @AT@ 26210 @LENGTH@ 357
------------UPD StringLiteral@@"<preFooter>PRE-FOOTER</preFooter></subGroup></group><postFooter>POST-FOOTER</postFooter>" @TO@ "<preFooter>PRE-FOOTER</preFooter></subGroup></ns:group><postFooter>POST-FOOTER</postFooter>" @AT@ 26454 @LENGTH@ 90


INS MethodDeclaration@@public, void, MethodName:findsEntityManagerFactoryInParentBeanFactory,  @TO@ TypeDeclaration@@[public]AuditingBeanFactoryPostProcessorUnitTests,  @AT@ 3013 @LENGTH@ 208
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsEntityManagerFactoryInParentBeanFactory,  @AT@ 3013 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsEntityManagerFactoryInParentBeanFactory,  @AT@ 3020 @LENGTH@ 4
---INS SimpleName@@MethodName:findsEntityManagerFactoryInParentBeanFactory @TO@ MethodDeclaration@@public, void, MethodName:findsEntityManagerFactoryInParentBeanFactory,  @AT@ 3025 @LENGTH@ 44
---INS VariableDeclarationStatement@@DefaultListableBeanFactory childFactory=new DefaultListableBeanFactory(getBeanFactory()); @TO@ MethodDeclaration@@public, void, MethodName:findsEntityManagerFactoryInParentBeanFactory,  @AT@ 3077 @LENGTH@ 91
------INS SimpleType@@DefaultListableBeanFactory @TO@ VariableDeclarationStatement@@DefaultListableBeanFactory childFactory=new DefaultListableBeanFactory(getBeanFactory()); @AT@ 3077 @LENGTH@ 26
------INS VariableDeclarationFragment@@childFactory=new DefaultListableBeanFactory(getBeanFactory()) @TO@ VariableDeclarationStatement@@DefaultListableBeanFactory childFactory=new DefaultListableBeanFactory(getBeanFactory()); @AT@ 3104 @LENGTH@ 63
---------INS SimpleName@@childFactory @TO@ VariableDeclarationFragment@@childFactory=new DefaultListableBeanFactory(getBeanFactory()) @AT@ 3104 @LENGTH@ 12
---------INS ClassInstanceCreation@@DefaultListableBeanFactory[getBeanFactory()] @TO@ VariableDeclarationFragment@@childFactory=new DefaultListableBeanFactory(getBeanFactory()) @AT@ 3119 @LENGTH@ 48
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultListableBeanFactory[getBeanFactory()] @AT@ 3119 @LENGTH@ 3
------------INS SimpleType@@DefaultListableBeanFactory @TO@ ClassInstanceCreation@@DefaultListableBeanFactory[getBeanFactory()] @AT@ 3123 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getBeanFactory:[] @TO@ ClassInstanceCreation@@DefaultListableBeanFactory[getBeanFactory()] @AT@ 3150 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:processor.postProcessBeanFactory(childFactory) @TO@ MethodDeclaration@@public, void, MethodName:findsEntityManagerFactoryInParentBeanFactory,  @AT@ 3171 @LENGTH@ 47
------INS MethodInvocation@@processor.postProcessBeanFactory(childFactory) @TO@ ExpressionStatement@@MethodInvocation:processor.postProcessBeanFactory(childFactory) @AT@ 3171 @LENGTH@ 46
---------INS SimpleName@@Name:processor @TO@ MethodInvocation@@processor.postProcessBeanFactory(childFactory) @AT@ 3171 @LENGTH@ 9
---------INS SimpleName@@MethodName:postProcessBeanFactory:[childFactory] @TO@ MethodInvocation@@processor.postProcessBeanFactory(childFactory) @AT@ 3181 @LENGTH@ 36
------------INS SimpleName@@childFactory @TO@ SimpleName@@MethodName:postProcessBeanFactory:[childFactory] @AT@ 3204 @LENGTH@ 12


DEL VariableDeclarationStatement@@Environment environment=defaultEnvironment(this.environment,resourceLoader); @AT@ 2973 @LENGTH@ 79
---DEL SimpleType@@Environment @AT@ 2973 @LENGTH@ 11
---DEL VariableDeclarationFragment@@environment=defaultEnvironment(this.environment,resourceLoader) @AT@ 2985 @LENGTH@ 66
------DEL SimpleName@@environment @AT@ 2985 @LENGTH@ 11
------DEL MethodInvocation@@defaultEnvironment(this.environment,resourceLoader) @AT@ 2999 @LENGTH@ 52
---------DEL SimpleName@@MethodName:defaultEnvironment:[this.environment, resourceLoader] @AT@ 2999 @LENGTH@ 52
------------DEL FieldAccess@@this.environment @AT@ 3018 @LENGTH@ 16
---------------DEL ThisExpression@@this @AT@ 3018 @LENGTH@ 4
---------------DEL SimpleName@@environment @AT@ 3023 @LENGTH@ 11
------------DEL SimpleName@@resourceLoader @AT@ 3036 @LENGTH@ 14


UPD MethodDeclaration@@protected, OAuth2AccessToken, MethodName:retrieveToken, MultiValueMap<String,String> form, HttpHeaders headers, OAuth2ProtectedResourceDetails resource,  @TO@ protected, OAuth2AccessToken, MethodName:retrieveToken, AccessTokenRequest request, OAuth2ProtectedResourceDetails resource, MultiValueMap<String,String> form, HttpHeaders headers,  @AT@ 1701 @LENGTH@ 220
---MOV SingleVariableDeclaration@@MultiValueMap<String,String> form @TO@ MethodDeclaration@@protected, OAuth2AccessToken, MethodName:retrieveToken, MultiValueMap<String,String> form, HttpHeaders headers, OAuth2ProtectedResourceDetails resource,  @AT@ 1743 @LENGTH@ 34
---UPD SingleVariableDeclaration@@HttpHeaders headers @TO@ AccessTokenRequest request @AT@ 1779 @LENGTH@ 19
------UPD SimpleType@@HttpHeaders @TO@ AccessTokenRequest @AT@ 1779 @LENGTH@ 11
------UPD SimpleName@@headers @TO@ request @AT@ 1791 @LENGTH@ 7
---INS SingleVariableDeclaration@@HttpHeaders headers @TO@ MethodDeclaration@@protected, OAuth2AccessToken, MethodName:retrieveToken, MultiValueMap<String,String> form, HttpHeaders headers, OAuth2ProtectedResourceDetails resource,  @AT@ 1852 @LENGTH@ 19
------INS SimpleType@@HttpHeaders @TO@ SingleVariableDeclaration@@HttpHeaders headers @AT@ 1852 @LENGTH@ 11
------INS SimpleName@@headers @TO@ SingleVariableDeclaration@@HttpHeaders headers @AT@ 1864 @LENGTH@ 7


UPD MethodDeclaration@@public, ServiceBuilder<SSOManagerFactory<I,D>>, I, D, MethodName:build, ServiceTarget target, ServiceName name, String host,  @TO@ public, ServiceBuilder<SSOManagerFactory<A,D>>, A, D, MethodName:build, ServiceTarget target, ServiceName name, String host,  @AT@ 2028 @LENGTH@ 1727
---UPD ParameterizedType@@ServiceBuilder<SSOManagerFactory<I,D>> @TO@ ServiceBuilder<SSOManagerFactory<A,D>> @AT@ 2042 @LENGTH@ 39
------UPD ParameterizedType@@SSOManagerFactory<I,D> @TO@ SSOManagerFactory<A,D> @AT@ 2057 @LENGTH@ 23
---------UPD SimpleType@@I @TO@ A @AT@ 2075 @LENGTH@ 1


UPD VariableDeclarationStatement@@final BufferedReader reader=new BufferedReader(new InputStreamReader(stream,"UTF-8")); @TO@ final BufferedReader reader=new BufferedReader(new InputStreamReader(stream,StandardCharsets.UTF_8)); @AT@ 4161 @LENGTH@ 89
---UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(stream,"UTF-8")) @TO@ reader=new BufferedReader(new InputStreamReader(stream,StandardCharsets.UTF_8)) @AT@ 4182 @LENGTH@ 67
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(stream,"UTF-8")] @TO@ BufferedReader[new InputStreamReader(stream,StandardCharsets.UTF_8)] @AT@ 4191 @LENGTH@ 58
---------UPD ClassInstanceCreation@@InputStreamReader[stream, "UTF-8"] @TO@ InputStreamReader[stream, StandardCharsets.UTF_8] @AT@ 4210 @LENGTH@ 38
------------DEL StringLiteral@@"UTF-8" @AT@ 4240 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[stream, "UTF-8"] @AT@ 4282 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4282 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4299 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @TO@ TypeDeclaration@@[public]SplitTokenizerTest, ContextTestSupport @AT@ 2712 @LENGTH@ 367
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2712 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2719 @LENGTH@ 4
---INS SimpleName@@MethodName:testSplitTokenizerEWithSlash @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2724 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2762 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:split"); @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2782 @LENGTH@ 50
------INS SimpleType@@MockEndpoint @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:split"); @AT@ 2782 @LENGTH@ 12
------INS VariableDeclarationFragment@@mock=getMockEndpoint("mock:split") @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:split"); @AT@ 2795 @LENGTH@ 36
---------INS SimpleName@@mock @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:split") @AT@ 2795 @LENGTH@ 4
---------INS MethodInvocation@@getMockEndpoint("mock:split") @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:split") @AT@ 2802 @LENGTH@ 29
------------INS SimpleName@@MethodName:getMockEndpoint:["mock:split"] @TO@ MethodInvocation@@getMockEndpoint("mock:split") @AT@ 2802 @LENGTH@ 29
---------------INS StringLiteral@@"mock:split" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:split"] @AT@ 2818 @LENGTH@ 12
---INS VariableDeclarationStatement@@String xml="<persons><person attr='/' /></persons>"; @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2841 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String xml="<persons><person attr='/' /></persons>"; @AT@ 2841 @LENGTH@ 6
------INS VariableDeclarationFragment@@xml="<persons><person attr='/' /></persons>" @TO@ VariableDeclarationStatement@@String xml="<persons><person attr='/' /></persons>"; @AT@ 2848 @LENGTH@ 46
---------INS SimpleName@@xml @TO@ VariableDeclarationFragment@@xml="<persons><person attr='/' /></persons>" @AT@ 2848 @LENGTH@ 3
---------INS StringLiteral@@"<persons><person attr='/' /></persons>" @TO@ VariableDeclarationFragment@@xml="<persons><person attr='/' /></persons>" @AT@ 2854 @LENGTH@ 40
---INS ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("<person attr='/' />") @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2904 @LENGTH@ 51
------INS MethodInvocation@@mock.expectedBodiesReceived("<person attr='/' />") @TO@ ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("<person attr='/' />") @AT@ 2904 @LENGTH@ 50
---------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.expectedBodiesReceived("<person attr='/' />") @AT@ 2904 @LENGTH@ 4
---------INS SimpleName@@MethodName:expectedBodiesReceived:["<person attr='/' />"] @TO@ MethodInvocation@@mock.expectedBodiesReceived("<person attr='/' />") @AT@ 2909 @LENGTH@ 45
------------INS StringLiteral@@"<person attr='/' />" @TO@ SimpleName@@MethodName:expectedBodiesReceived:["<person attr='/' />"] @AT@ 2932 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:e",xml) @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 2964 @LENGTH@ 35
------INS MethodInvocation@@template.sendBody("direct:e",xml) @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:e",xml) @AT@ 2964 @LENGTH@ 34
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:e",xml) @AT@ 2964 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:e", xml] @TO@ MethodInvocation@@template.sendBody("direct:e",xml) @AT@ 2973 @LENGTH@ 25
------------INS StringLiteral@@"direct:e" @TO@ SimpleName@@MethodName:sendBody:["direct:e", xml] @AT@ 2982 @LENGTH@ 10
------------INS SimpleName@@xml @TO@ SimpleName@@MethodName:sendBody:["direct:e", xml] @AT@ 2994 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:mock.assertIsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 3008 @LENGTH@ 25
------INS MethodInvocation@@mock.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:mock.assertIsSatisfied() @AT@ 3008 @LENGTH@ 24
---------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.assertIsSatisfied() @AT@ 3008 @LENGTH@ 4
---------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@mock.assertIsSatisfied() @AT@ 3013 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testSplitTokenizerEWithSlash, Exception,  @AT@ 3042 @LENGTH@ 31
------INS MethodInvocation@@MethodName:assertMockEndpointsSatisfied:[] @TO@ ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied() @AT@ 3042 @LENGTH@ 30


INS IfStatement@@if (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  throw unexpectedContent(reader);}} @TO@ MethodDeclaration@@private, static, void, MethodName:parseModuleExclusion, final XMLStreamReader reader, final ModuleStructureSpec specBuilder, XMLStreamException,  @AT@ 45091 @LENGTH@ 246
---INS MethodInvocation@@reader.hasNext() @TO@ IfStatement@@if (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  throw unexpectedContent(reader);}} @AT@ 45095 @LENGTH@ 16
------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 45098 @LENGTH@ 6
------MOV SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 45105 @LENGTH@ 9
---MOV Block@@WhileBody:{switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  unexpectedContent(reader);}} @TO@ IfStatement@@if (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  throw unexpectedContent(reader);}} @AT@ 45116 @LENGTH@ 218


UPD ExpressionStatement@@MethodInvocation:VectorizedBatchUtil.SetNullColIsNullValue(outCol,index) @TO@ MethodInvocation:VectorizedBatchUtil.setNullColIsNullValue(outCol,index) @AT@ 3628 @LENGTH@ 57
---UPD MethodInvocation@@VectorizedBatchUtil.SetNullColIsNullValue(outCol,index) @TO@ VectorizedBatchUtil.setNullColIsNullValue(outCol,index) @AT@ 3628 @LENGTH@ 56
------UPD SimpleName@@MethodName:SetNullColIsNullValue:[outCol, index] @TO@ MethodName:setNullColIsNullValue:[outCol, index] @AT@ 3648 @LENGTH@ 36


INS MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @TO@ TypeDeclaration@@[public]TestAbstractHierarchicalConfiguration,  @AT@ 29512 @LENGTH@ 482
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29512 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29519 @LENGTH@ 4
---INS SimpleName@@MethodName:testAddPropertyWithListHandling @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29524 @LENGTH@ 31
---INS ExpressionStatement@@MethodInvocation:config.setListDelimiterHandler(new DefaultListDelimiterHandler(',')) @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29572 @LENGTH@ 69
------INS MethodInvocation@@config.setListDelimiterHandler(new DefaultListDelimiterHandler(',')) @TO@ ExpressionStatement@@MethodInvocation:config.setListDelimiterHandler(new DefaultListDelimiterHandler(',')) @AT@ 29572 @LENGTH@ 68
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setListDelimiterHandler(new DefaultListDelimiterHandler(',')) @AT@ 29572 @LENGTH@ 6
---------INS SimpleName@@MethodName:setListDelimiterHandler:[new DefaultListDelimiterHandler(',')] @TO@ MethodInvocation@@config.setListDelimiterHandler(new DefaultListDelimiterHandler(',')) @AT@ 29579 @LENGTH@ 61
------------INS ClassInstanceCreation@@DefaultListDelimiterHandler[','] @TO@ SimpleName@@MethodName:setListDelimiterHandler:[new DefaultListDelimiterHandler(',')] @AT@ 29603 @LENGTH@ 36
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultListDelimiterHandler[','] @AT@ 29603 @LENGTH@ 3
---------------INS SimpleType@@DefaultListDelimiterHandler @TO@ ClassInstanceCreation@@DefaultListDelimiterHandler[','] @AT@ 29607 @LENGTH@ 27
---------------INS CharacterLiteral@@',' @TO@ ClassInstanceCreation@@DefaultListDelimiterHandler[','] @AT@ 29635 @LENGTH@ 3
---INS VariableDeclarationStatement@@final String key="list.delimiter.value"; @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29650 @LENGTH@ 42
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String key="list.delimiter.value"; @AT@ 29650 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String key="list.delimiter.value"; @AT@ 29656 @LENGTH@ 6
------INS VariableDeclarationFragment@@key="list.delimiter.value" @TO@ VariableDeclarationStatement@@final String key="list.delimiter.value"; @AT@ 29663 @LENGTH@ 28
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key="list.delimiter.value" @AT@ 29663 @LENGTH@ 3
---------INS StringLiteral@@"list.delimiter.value" @TO@ VariableDeclarationFragment@@key="list.delimiter.value" @AT@ 29669 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:config.addProperty(key + ".escaped","3\\,1415") @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29701 @LENGTH@ 49
------INS MethodInvocation@@config.addProperty(key + ".escaped","3\\,1415") @TO@ ExpressionStatement@@MethodInvocation:config.addProperty(key + ".escaped","3\\,1415") @AT@ 29701 @LENGTH@ 48
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.addProperty(key + ".escaped","3\\,1415") @AT@ 29701 @LENGTH@ 6
---------INS SimpleName@@MethodName:addProperty:[key + ".escaped", "3\\,1415"] @TO@ MethodInvocation@@config.addProperty(key + ".escaped","3\\,1415") @AT@ 29708 @LENGTH@ 41
------------INS InfixExpression@@key + ".escaped" @TO@ SimpleName@@MethodName:addProperty:[key + ".escaped", "3\\,1415"] @AT@ 29720 @LENGTH@ 16
---------------INS SimpleName@@key @TO@ InfixExpression@@key + ".escaped" @AT@ 29720 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@key + ".escaped" @AT@ 29723 @LENGTH@ 1
---------------INS StringLiteral@@".escaped" @TO@ InfixExpression@@key + ".escaped" @AT@ 29726 @LENGTH@ 10
------------INS StringLiteral@@"3\\,1415" @TO@ SimpleName@@MethodName:addProperty:[key + ".escaped", "3\\,1415"] @AT@ 29738 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:config.addProperty(key + ".elements","3,1415") @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29759 @LENGTH@ 48
------INS MethodInvocation@@config.addProperty(key + ".elements","3,1415") @TO@ ExpressionStatement@@MethodInvocation:config.addProperty(key + ".elements","3,1415") @AT@ 29759 @LENGTH@ 47
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.addProperty(key + ".elements","3,1415") @AT@ 29759 @LENGTH@ 6
---------INS SimpleName@@MethodName:addProperty:[key + ".elements", "3,1415"] @TO@ MethodInvocation@@config.addProperty(key + ".elements","3,1415") @AT@ 29766 @LENGTH@ 40
------------INS InfixExpression@@key + ".elements" @TO@ SimpleName@@MethodName:addProperty:[key + ".elements", "3,1415"] @AT@ 29778 @LENGTH@ 17
---------------INS SimpleName@@key @TO@ InfixExpression@@key + ".elements" @AT@ 29778 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@key + ".elements" @AT@ 29781 @LENGTH@ 1
---------------INS StringLiteral@@".elements" @TO@ InfixExpression@@key + ".elements" @AT@ 29784 @LENGTH@ 11
------------INS StringLiteral@@"3,1415" @TO@ SimpleName@@MethodName:addProperty:[key + ".elements", "3,1415"] @AT@ 29797 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong escaped property","3,1415",config.getString(key + ".escaped")) @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29816 @LENGTH@ 85
------INS MethodInvocation@@assertEquals("Wrong escaped property","3,1415",config.getString(key + ".escaped")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong escaped property","3,1415",config.getString(key + ".escaped")) @AT@ 29816 @LENGTH@ 84
---------INS SimpleName@@MethodName:assertEquals:["Wrong escaped property", "3,1415", config.getString(key + ".escaped")] @TO@ MethodInvocation@@assertEquals("Wrong escaped property","3,1415",config.getString(key + ".escaped")) @AT@ 29816 @LENGTH@ 84
------------INS StringLiteral@@"Wrong escaped property" @TO@ SimpleName@@MethodName:assertEquals:["Wrong escaped property", "3,1415", config.getString(key + ".escaped")] @AT@ 29829 @LENGTH@ 24
------------INS StringLiteral@@"3,1415" @TO@ SimpleName@@MethodName:assertEquals:["Wrong escaped property", "3,1415", config.getString(key + ".escaped")] @AT@ 29855 @LENGTH@ 8
------------INS MethodInvocation@@config.getString(key + ".escaped") @TO@ SimpleName@@MethodName:assertEquals:["Wrong escaped property", "3,1415", config.getString(key + ".escaped")] @AT@ 29865 @LENGTH@ 34
---------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getString(key + ".escaped") @AT@ 29865 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getString:[key + ".escaped"] @TO@ MethodInvocation@@config.getString(key + ".escaped") @AT@ 29872 @LENGTH@ 27
------------------INS InfixExpression@@key + ".escaped" @TO@ SimpleName@@MethodName:getString:[key + ".escaped"] @AT@ 29882 @LENGTH@ 16
---------------------INS SimpleName@@key @TO@ InfixExpression@@key + ".escaped" @AT@ 29882 @LENGTH@ 3
---------------------INS Operator@@+ @TO@ InfixExpression@@key + ".escaped" @AT@ 29885 @LENGTH@ 1
---------------------INS StringLiteral@@".escaped" @TO@ InfixExpression@@key + ".escaped" @AT@ 29888 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong list property","3",config.getString(key + ".elements")) @TO@ MethodDeclaration@@public, void, MethodName:testAddPropertyWithListHandling,  @AT@ 29910 @LENGTH@ 78
------INS MethodInvocation@@assertEquals("Wrong list property","3",config.getString(key + ".elements")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong list property","3",config.getString(key + ".elements")) @AT@ 29910 @LENGTH@ 77
---------INS SimpleName@@MethodName:assertEquals:["Wrong list property", "3", config.getString(key + ".elements")] @TO@ MethodInvocation@@assertEquals("Wrong list property","3",config.getString(key + ".elements")) @AT@ 29910 @LENGTH@ 77
------------INS StringLiteral@@"Wrong list property" @TO@ SimpleName@@MethodName:assertEquals:["Wrong list property", "3", config.getString(key + ".elements")] @AT@ 29923 @LENGTH@ 21
------------INS StringLiteral@@"3" @TO@ SimpleName@@MethodName:assertEquals:["Wrong list property", "3", config.getString(key + ".elements")] @AT@ 29946 @LENGTH@ 3
------------INS MethodInvocation@@config.getString(key + ".elements") @TO@ SimpleName@@MethodName:assertEquals:["Wrong list property", "3", config.getString(key + ".elements")] @AT@ 29951 @LENGTH@ 35
---------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getString(key + ".elements") @AT@ 29951 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getString:[key + ".elements"] @TO@ MethodInvocation@@config.getString(key + ".elements") @AT@ 29958 @LENGTH@ 28
------------------INS InfixExpression@@key + ".elements" @TO@ SimpleName@@MethodName:getString:[key + ".elements"] @AT@ 29968 @LENGTH@ 17
---------------------INS SimpleName@@key @TO@ InfixExpression@@key + ".elements" @AT@ 29968 @LENGTH@ 3
---------------------INS Operator@@+ @TO@ InfixExpression@@key + ".elements" @AT@ 29971 @LENGTH@ 1
---------------------INS StringLiteral@@".elements" @TO@ InfixExpression@@key + ".elements" @AT@ 29974 @LENGTH@ 11


UPD IfStatement@@if (isResultSet) {  ResultSet rs=ps.getResultSet();  SqlOutputType outputType=getEndpoint().getOutputType();  log.trace("Got result list from query: {}, outputType={}",rs,outputType);  if (outputType == SqlOutputType.SelectList) {    List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet());    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());  } else   if (outputType == SqlOutputType.SelectOne) {    Object data=getEndpoint().queryForObject(ps.getResultSet());    if (data != null) {      if (getEndpoint().isNoop()) {        exchange.getOut().setBody(exchange.getIn().getBody());      } else {        exchange.getOut().setBody(data);      }      exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);    }  } else {    throw new IllegalArgumentException("Invalid outputType=" + outputType);  }  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());} else {  exchange.getIn().setHeader(SqlConstants.SQL_UPDATE_COUNT,ps.getUpdateCount());} @TO@ if (isResultSet) {  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());  ResultSet rs=ps.getResultSet();  SqlOutputType outputType=getEndpoint().getOutputType();  log.trace("Got result list from query: {}, outputType={}",rs,outputType);  if (outputType == SqlOutputType.SelectList) {    List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet());    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());  } else   if (outputType == SqlOutputType.SelectOne) {    Object data=getEndpoint().queryForObject(ps.getResultSet());    if (data != null) {      if (getEndpoint().isNoop()) {        exchange.getOut().setBody(exchange.getIn().getBody());      } else {        exchange.getOut().setBody(data);      }      exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);    }  } else {    throw new IllegalArgumentException("Invalid outputType=" + outputType);  }} else {  exchange.getIn().setHeader(SqlConstants.SQL_UPDATE_COUNT,ps.getUpdateCount());} @AT@ 4357 @LENGTH@ 2092
---UPD Block@@ThenBody:{  ResultSet rs=ps.getResultSet();  SqlOutputType outputType=getEndpoint().getOutputType();  log.trace("Got result list from query: {}, outputType={}",rs,outputType);  if (outputType == SqlOutputType.SelectList) {    List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet());    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());  } else   if (outputType == SqlOutputType.SelectOne) {    Object data=getEndpoint().queryForObject(ps.getResultSet());    if (data != null) {      if (getEndpoint().isNoop()) {        exchange.getOut().setBody(exchange.getIn().getBody());      } else {        exchange.getOut().setBody(data);      }      exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);    }  } else {    throw new IllegalArgumentException("Invalid outputType=" + outputType);  }  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());} @TO@ ThenBody:{  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());  ResultSet rs=ps.getResultSet();  SqlOutputType outputType=getEndpoint().getOutputType();  log.trace("Got result list from query: {}, outputType={}",rs,outputType);  if (outputType == SqlOutputType.SelectList) {    List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet());    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());  } else   if (outputType == SqlOutputType.SelectOne) {    Object data=getEndpoint().queryForObject(ps.getResultSet());    if (data != null) {      if (getEndpoint().isNoop()) {        exchange.getOut().setBody(exchange.getIn().getBody());      } else {        exchange.getOut().setBody(data);      }      exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);    }  } else {    throw new IllegalArgumentException("Invalid outputType=" + outputType);  }} @AT@ 4374 @LENGTH@ 1942
------MOV ExpressionStatement@@MethodInvocation:exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()) @TO@ Block@@ThenBody:{  ResultSet rs=ps.getResultSet();  SqlOutputType outputType=getEndpoint().getOutputType();  log.trace("Got result list from query: {}, outputType={}",rs,outputType);  if (outputType == SqlOutputType.SelectList) {    List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet());    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());  } else   if (outputType == SqlOutputType.SelectOne) {    Object data=getEndpoint().queryForObject(ps.getResultSet());    if (data != null) {      if (getEndpoint().isNoop()) {        exchange.getOut().setBody(exchange.getIn().getBody());      } else {        exchange.getOut().setBody(data);      }      exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);    }  } else {    throw new IllegalArgumentException("Invalid outputType=" + outputType);  }  exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders());} @AT@ 6225 @LENGTH@ 69


UPD ExpressionStatement@@MethodInvocation:jobRestartProperties.putAll(params) @TO@ MethodInvocation:jobRestartProperties.setProperty(curName,params.getProperty(curName)) @AT@ 21784 @LENGTH@ 36


UPD ReturnStatement@@InfixExpression:isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method) @TO@ InfixExpression:!method.isBridge() && (isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method)) @AT@ 5250 @LENGTH@ 99
---INS InfixExpression@@!method.isBridge() && (isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method)) @TO@ ReturnStatement@@InfixExpression:isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method) @AT@ 5257 @LENGTH@ 122
------INS PrefixExpression@@!method.isBridge() @TO@ InfixExpression@@!method.isBridge() && (isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method)) @AT@ 5257 @LENGTH@ 18
---------INS Operator@@! @TO@ PrefixExpression@@!method.isBridge() @AT@ 5257 @LENGTH@ 1
---------INS MethodInvocation@@method.isBridge() @TO@ PrefixExpression@@!method.isBridge() @AT@ 5258 @LENGTH@ 17
------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.isBridge() @AT@ 5258 @LENGTH@ 6
------------INS SimpleName@@MethodName:isBridge:[] @TO@ MethodInvocation@@method.isBridge() @AT@ 5265 @LENGTH@ 10
------INS Operator@@&& @TO@ InfixExpression@@!method.isBridge() && (isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method)) @AT@ 5275 @LENGTH@ 2
------INS ParenthesizedExpression@@(isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method)) @TO@ InfixExpression@@!method.isBridge() && (isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method)) @AT@ 5286 @LENGTH@ 93
---------MOV InfixExpression@@isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method) @TO@ ParenthesizedExpression@@(isQueryAnnotationPresentOn(method) || !isCustomMethod(method) && !isBaseClassMethod(method)) @AT@ 5257 @LENGTH@ 91


DEL FieldDeclaration@@private, static, final, Charset, [UTF_8=Charset.forName("UTF-8")] @AT@ 3186 @LENGTH@ 62
---DEL Modifier@@private @AT@ 3186 @LENGTH@ 7
---DEL Modifier@@static @AT@ 3194 @LENGTH@ 6
---DEL Modifier@@final @AT@ 3201 @LENGTH@ 5
---DEL SimpleType@@Charset @AT@ 3207 @LENGTH@ 7
---DEL VariableDeclarationFragment@@UTF_8=Charset.forName("UTF-8") @AT@ 3215 @LENGTH@ 32
------DEL SimpleName@@UTF_8 @AT@ 3215 @LENGTH@ 5
------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3223 @LENGTH@ 24
---------DEL SimpleName@@Name:Charset @AT@ 3223 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3231 @LENGTH@ 16
------------DEL StringLiteral@@"UTF-8" @AT@ 3239 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:builder.path(metadata.getPath().toString()) @TO@ MethodInvocation:builder.path(baseUri.toString()).path(metadata.getPath().toString()) @AT@ 1786 @LENGTH@ 51
---UPD MethodInvocation@@builder.path(metadata.getPath().toString()) @TO@ builder.path(baseUri.toString()).path(metadata.getPath().toString()) @AT@ 1793 @LENGTH@ 43
------INS MethodInvocation@@MethodName:path:[baseUri.toString()] @TO@ MethodInvocation@@builder.path(metadata.getPath().toString()) @AT@ 1659 @LENGTH@ 32
---------INS MethodInvocation@@baseUri.toString() @TO@ MethodInvocation@@MethodName:path:[baseUri.toString()] @AT@ 1672 @LENGTH@ 18
------------INS SimpleName@@Name:baseUri @TO@ MethodInvocation@@baseUri.toString() @AT@ 1672 @LENGTH@ 7
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@baseUri.toString() @AT@ 1680 @LENGTH@ 10


DEL VariableDeclarationStatement@@StringWriter sw=new StringWriter(); @AT@ 3401 @LENGTH@ 37
---DEL SimpleType@@StringWriter @AT@ 3401 @LENGTH@ 12
---DEL VariableDeclarationFragment@@sw=new StringWriter() @AT@ 3414 @LENGTH@ 23
------DEL SimpleName@@sw @AT@ 3414 @LENGTH@ 2
------DEL ClassInstanceCreation@@StringWriter[] @AT@ 3419 @LENGTH@ 18
---------DEL New@@new @AT@ 3419 @LENGTH@ 3
---------DEL SimpleType@@StringWriter @AT@ 3423 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:System.out.println("Legact resource defintion dmr written to: " + dmrFile.getAbsolutePath()) @TO@ MethodInvocation:System.out.println("Legacy resource definition dmr written to: " + dmrFile.getAbsolutePath()) @AT@ 19783 @LENGTH@ 93
---UPD MethodInvocation@@System.out.println("Legact resource defintion dmr written to: " + dmrFile.getAbsolutePath()) @TO@ System.out.println("Legacy resource definition dmr written to: " + dmrFile.getAbsolutePath()) @AT@ 19783 @LENGTH@ 92
------UPD SimpleName@@MethodName:println:["Legact resource defintion dmr written to: " + dmrFile.getAbsolutePath()] @TO@ MethodName:println:["Legacy resource definition dmr written to: " + dmrFile.getAbsolutePath()] @AT@ 19794 @LENGTH@ 81
---------UPD InfixExpression@@"Legact resource defintion dmr written to: " + dmrFile.getAbsolutePath() @TO@ "Legacy resource definition dmr written to: " + dmrFile.getAbsolutePath() @AT@ 19802 @LENGTH@ 72
------------UPD StringLiteral@@"Legact resource defintion dmr written to: " @TO@ "Legacy resource definition dmr written to: " @AT@ 19802 @LENGTH@ 44


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("SrpConnectionIntegrationTests-context.xml"), public]SrpConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration("SrpConnectionIntegrationTests-context.xml"), public]SrpConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 1274 @LENGTH@ 1364
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1274 @LENGTH@ 39


UPD ExpressionStatement@@Assignment:delegate=Collections.emptyIterator() @TO@ Assignment:delegate=Collections.<T>emptyList().iterator() @AT@ 3631 @LENGTH@ 39
---UPD Assignment@@delegate=Collections.emptyIterator() @TO@ delegate=Collections.<T>emptyList().iterator() @AT@ 3631 @LENGTH@ 38
------UPD MethodInvocation@@Collections.emptyIterator() @TO@ Collections.<T>emptyList().iterator() @AT@ 3642 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyIterator() @AT@ 3653 @LENGTH@ 27
---------UPD SimpleName@@MethodName:emptyIterator:[] @TO@ MethodName:iterator:[] @AT@ 3654 @LENGTH@ 15


UPD FieldDeclaration@@boolean, [likeable] @TO@ boolean, [likable] @AT@ 1916 @LENGTH@ 17
---UPD VariableDeclarationFragment@@likeable @TO@ likable @AT@ 1924 @LENGTH@ 8
------UPD SimpleName@@likeable @TO@ likable @AT@ 1924 @LENGTH@ 8


UPD TryStatement@@try {  Container broker=containers.iterator().next();  containers.remove(broker);  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containers) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));    }  }  finally {    curatorProxy.close();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));      String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");      return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);} @TO@ try {  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container broker=containerList.removeLast();  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));    }  }  finally {    curatorProxy.close();  }  Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));      String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");      return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);} @AT@ 1962 @LENGTH@ 1992
---UPD VariableDeclarationStatement@@Container broker=containers.iterator().next(); @TO@ LinkedList<Container> containerList=new LinkedList<Container>(containers); @AT@ 1980 @LENGTH@ 48
------DEL SimpleType@@Container @AT@ 1980 @LENGTH@ 9
------UPD VariableDeclarationFragment@@broker=containers.iterator().next() @TO@ containerList=new LinkedList<Container>(containers) @AT@ 1990 @LENGTH@ 37
---------UPD SimpleName@@broker @TO@ containerList @AT@ 1990 @LENGTH@ 6
---------DEL MethodInvocation@@containers.iterator().next() @AT@ 1999 @LENGTH@ 28
------------DEL MethodInvocation@@MethodName:iterator:[] @AT@ 1999 @LENGTH@ 21
------------DEL SimpleName@@Name:containers @AT@ 1999 @LENGTH@ 10
------------DEL SimpleName@@MethodName:next:[] @AT@ 2021 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedList<Container>[containers] @TO@ VariableDeclarationFragment@@broker=containers.iterator().next() @AT@ 2047 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 2047 @LENGTH@ 3
------------INS ParameterizedType@@LinkedList<Container> @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 2051 @LENGTH@ 21
---------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2051 @LENGTH@ 10
---------------INS SimpleType@@Container @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2062 @LENGTH@ 9
------------INS SimpleName@@containers @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 2073 @LENGTH@ 10
------INS ParameterizedType@@LinkedList<Container> @TO@ VariableDeclarationStatement@@Container broker=containers.iterator().next(); @AT@ 2009 @LENGTH@ 21
---------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2009 @LENGTH@ 10
---------INS SimpleType@@Container @TO@ ParameterizedType@@LinkedList<Container> @AT@ 2020 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:containers.remove(broker) @AT@ 2041 @LENGTH@ 26
------DEL MethodInvocation@@containers.remove(broker) @AT@ 2041 @LENGTH@ 25
---INS VariableDeclarationStatement@@Container broker=containerList.removeLast(); @TO@ TryStatement@@try {  Container broker=containers.iterator().next();  containers.remove(broker);  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containers) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));    }  }  finally {    curatorProxy.close();  }  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(new Container[]{broker}),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:bstat"));      String output=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " activemq:query -QQueue=FABRIC.DEMO");      return output.contains("DequeueCount = ") && !output.contains("DequeueCount = 0");    }  },10000L));}  finally {  ContainerBuilder.destroy(containers);} @AT@ 2098 @LENGTH@ 46
------INS SimpleType@@Container @TO@ VariableDeclarationStatement@@Container broker=containerList.removeLast(); @AT@ 2098 @LENGTH@ 9
------INS VariableDeclarationFragment@@broker=containerList.removeLast() @TO@ VariableDeclarationStatement@@Container broker=containerList.removeLast(); @AT@ 2108 @LENGTH@ 35
---------INS SimpleName@@broker @TO@ VariableDeclarationFragment@@broker=containerList.removeLast() @AT@ 2108 @LENGTH@ 6
---------INS MethodInvocation@@containerList.removeLast() @TO@ VariableDeclarationFragment@@broker=containerList.removeLast() @AT@ 2117 @LENGTH@ 26
------------MOV SimpleName@@Name:containers @TO@ MethodInvocation@@containerList.removeLast() @AT@ 2041 @LENGTH@ 10
------------MOV SimpleName@@MethodName:remove:[broker] @TO@ MethodInvocation@@containerList.removeLast() @AT@ 2052 @LENGTH@ 14
---------------DEL SimpleName@@broker @AT@ 2059 @LENGTH@ 6
---UPD TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containers) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @TO@ try {  CuratorFramework curator=curatorProxy.getService();  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));  Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:cluster-list"));  for (  Container c : containerList) {    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));  }}  finally {  curatorProxy.close();} @AT@ 2211 @LENGTH@ 853
------UPD EnhancedForStatement@@for (Container c : containers) {  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));} @TO@ for (Container c : containerList) {  setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");  System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-mq"));} @AT@ 2714 @LENGTH@ 274
---------UPD SimpleName@@containers @TO@ containerList @AT@ 2733 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT) @AT@ 3078 @LENGTH@ 61
------UPD MethodInvocation@@Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT) @AT@ 3078 @LENGTH@ 60
---------UPD SimpleName@@MethodName:provisioningSuccess:[containers, PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[containerList, PROVISION_TIMEOUT] @AT@ 3088 @LENGTH@ 50
------------UPD SimpleName@@containers @TO@ containerList @AT@ 3108 @LENGTH@ 10


UPD ReturnStatement@@ConditionalExpression:nl.getLength() == 1 ? toDOMDocument(nl.item(0)) : null @TO@ MethodInvocation:toDOMDocument(nl.item(0)) @AT@ 26349 @LENGTH@ 62


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 11483 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 11490 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 11507 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 11520 @LENGTH@ 202
------------DEL New@@new @AT@ 11520 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 11524 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 11524 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 11541 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 11561 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 11597 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 11597 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 11604 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 11621 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 11607 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 11607 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 11631 @LENGTH@ 10


UPD MethodDeclaration@@Authentication<I>, MethodName:getAuthentication,  @TO@ A, MethodName:getAuthentication,  @AT@ 1527 @LENGTH@ 20
---DEL ParameterizedType@@Authentication<I> @AT@ 1509 @LENGTH@ 17
------DEL SimpleType@@Authentication @AT@ 1509 @LENGTH@ 14
------DEL SimpleType@@I @AT@ 1524 @LENGTH@ 1
---INS SimpleType@@A @TO@ MethodDeclaration@@Authentication<I>, MethodName:getAuthentication,  @AT@ 1509 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:VectorizedBatchUtil.AddRowToBatch(row,(StructObjectInspector)cachedObjectInspector,i,reuseBatch) @TO@ MethodInvocation:VectorizedBatchUtil.addRowToBatch(row,(StructObjectInspector)cachedObjectInspector,i,reuseBatch,buffer) @AT@ 10121 @LENGTH@ 101
---UPD MethodInvocation@@VectorizedBatchUtil.AddRowToBatch(row,(StructObjectInspector)cachedObjectInspector,i,reuseBatch) @TO@ VectorizedBatchUtil.addRowToBatch(row,(StructObjectInspector)cachedObjectInspector,i,reuseBatch,buffer) @AT@ 10121 @LENGTH@ 100
------UPD SimpleName@@MethodName:AddRowToBatch:[row, (StructObjectInspector)cachedObjectInspector, i, reuseBatch] @TO@ MethodName:addRowToBatch:[row, (StructObjectInspector)cachedObjectInspector, i, reuseBatch, buffer] @AT@ 10141 @LENGTH@ 80
---------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:AddRowToBatch:[row, (StructObjectInspector)cachedObjectInspector, i, reuseBatch] @AT@ 10346 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4751 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4758 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 4775 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 4788 @LENGTH@ 202
------------DEL New@@new @AT@ 4788 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 4792 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 4792 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 4809 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 4829 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 4865 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 4865 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 4872 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 4889 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 4874 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4874 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4898 @LENGTH@ 10


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]DistributedCacheTest,  @TO@ [@SuppressWarnings("deprecation"), @RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]DistributedCacheTest,  @AT@ 1593 @LENGTH@ 4106
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]DistributedCacheTest,  @AT@ 1644 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:queue.setAdminsThatShouldDeclare(new AmqpAdmin[]{null}) @TO@ MethodInvocation:queue.setAdminsThatShouldDeclare(new Object[]{null}) @AT@ 12840 @LENGTH@ 57
---UPD MethodInvocation@@queue.setAdminsThatShouldDeclare(new AmqpAdmin[]{null}) @TO@ queue.setAdminsThatShouldDeclare(new Object[]{null}) @AT@ 12840 @LENGTH@ 56
------UPD SimpleName@@MethodName:setAdminsThatShouldDeclare:[new AmqpAdmin[]{null}] @TO@ MethodName:setAdminsThatShouldDeclare:[new Object[]{null}] @AT@ 12846 @LENGTH@ 50
---------UPD ArrayCreation@@new AmqpAdmin[]{null} @TO@ new Object[]{null} @AT@ 12873 @LENGTH@ 22
------------UPD ArrayType@@AmqpAdmin[] @TO@ Object[] @AT@ 12877 @LENGTH@ 11
---------------UPD SimpleType@@AmqpAdmin @TO@ Object @AT@ 12877 @LENGTH@ 9


UPD TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build();  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container client=containerList.removeLast();  LinkedList<Container> servers=new LinkedList<Container>(containerList);  for (  Container c : servers) {    Profile p=c.getVersion().getProfile("example-camel-cluster.server");    c.setProfiles(new Profile[]{p});  }  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);  Profile p=client.getVersion().getProfile("example-camel-cluster.client");  client.setProfiles(new Profile[]{p});  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));    Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > 0;      }    },60000L));    Container lastActiveServerContainer=servers.removeLast();    for (    Container c : servers) {      try {        c.destroy(true);      } catch (      Exception ex) {      }      final int completed=getCompletedExchangesCount(client);      Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){        @Override public Boolean checkConditionOnContainer(        final Container c){          return getCompletedExchangesCount(c) > completed + 3;        }      },60000L));    }    System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());  }  finally {    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=fabricService.adapt(CuratorFramework.class);  Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build();  try {    LinkedList<Container> containerList=new LinkedList<Container>(containers);    Container client=containerList.removeLast();    LinkedList<Container> servers=new LinkedList<Container>(containerList);    for (    Container c : servers) {      Profile p=c.getVersion().getProfile("example-camel-cluster.server");      c.setProfiles(new Profile[]{p});    }    Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);    Profile p=client.getVersion().getProfile("example-camel-cluster.client");    client.setProfiles(new Profile[]{p});    Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:container-list"));    System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));    Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));    Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > 0;      }    },60000L));    Container lastActiveServerContainer=servers.removeLast();    for (    Container c : servers) {      try {        c.destroy(true);      } catch (      Exception ex) {      }      final int completed=getCompletedExchangesCount(client);      Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){        @Override public Boolean checkConditionOnContainer(        final Container c){          return getCompletedExchangesCount(c) > completed + 3;        }      },60000L));    }    System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 1781 @LENGTH@ 3392
---INS VariableDeclarationStatement@@FabricService fabricService=fabricProxy.getService(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build();  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container client=containerList.removeLast();  LinkedList<Container> servers=new LinkedList<Container>(containerList);  for (  Container c : servers) {    Profile p=c.getVersion().getProfile("example-camel-cluster.server");    c.setProfiles(new Profile[]{p});  }  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);  Profile p=client.getVersion().getProfile("example-camel-cluster.client");  client.setProfiles(new Profile[]{p});  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));    Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > 0;      }    },60000L));    Container lastActiveServerContainer=servers.removeLast();    for (    Container c : servers) {      try {        c.destroy(true);      } catch (      Exception ex) {      }      final int completed=getCompletedExchangesCount(client);      Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){        @Override public Boolean checkConditionOnContainer(        final Container c){          return getCompletedExchangesCount(c) > completed + 3;        }      },60000L));    }    System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());  }  finally {    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 1752 @LENGTH@ 55
------INS SimpleType@@FabricService @TO@ VariableDeclarationStatement@@FabricService fabricService=fabricProxy.getService(); @AT@ 1752 @LENGTH@ 13
------INS VariableDeclarationFragment@@fabricService=fabricProxy.getService() @TO@ VariableDeclarationStatement@@FabricService fabricService=fabricProxy.getService(); @AT@ 1766 @LENGTH@ 40
---------INS SimpleName@@fabricService @TO@ VariableDeclarationFragment@@fabricService=fabricProxy.getService() @AT@ 1766 @LENGTH@ 13
---------INS MethodInvocation@@fabricProxy.getService() @TO@ VariableDeclarationFragment@@fabricService=fabricProxy.getService() @AT@ 1782 @LENGTH@ 24
------------INS SimpleName@@Name:fabricProxy @TO@ MethodInvocation@@fabricProxy.getService() @AT@ 1782 @LENGTH@ 11
------------INS SimpleName@@MethodName:getService:[] @TO@ MethodInvocation@@fabricProxy.getService() @AT@ 1794 @LENGTH@ 12
---DEL ExpressionStatement@@Assignment:containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build() @AT@ 1799 @LENGTH@ 143
------DEL Assignment@@containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build() @AT@ 1799 @LENGTH@ 142
---------DEL SimpleName@@containers @AT@ 1799 @LENGTH@ 10
---------DEL Operator@@= @AT@ 1809 @LENGTH@ 1
---INS VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build();  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container client=containerList.removeLast();  LinkedList<Container> servers=new LinkedList<Container>(containerList);  for (  Container c : servers) {    Profile p=c.getVersion().getProfile("example-camel-cluster.server");    c.setProfiles(new Profile[]{p});  }  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);  Profile p=client.getVersion().getProfile("example-camel-cluster.client");  client.setProfiles(new Profile[]{p});  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));    Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > 0;      }    },60000L));    Container lastActiveServerContainer=servers.removeLast();    for (    Container c : servers) {      try {        c.destroy(true);      } catch (      Exception ex) {      }      final int completed=getCompletedExchangesCount(client);      Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){        @Override public Boolean checkConditionOnContainer(        final Container c){          return getCompletedExchangesCount(c) > completed + 3;        }      },60000L));    }    System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());  }  finally {    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 1905 @LENGTH@ 163
------INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build(); @AT@ 1905 @LENGTH@ 19
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1905 @LENGTH@ 3
---------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1909 @LENGTH@ 14
------INS VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build() @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build(); @AT@ 1925 @LENGTH@ 142
---------MOV MethodInvocation@@ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build() @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build() @AT@ 1812 @LENGTH@ 129
---------INS SimpleName@@containers @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy,3).withName("fabric-camel").withProfiles("feature-camel").assertProvisioningResult().build() @AT@ 1925 @LENGTH@ 10
---UPD VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @TO@ CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 2959 @LENGTH@ 117
------INS SimpleType@@CuratorFramework @TO@ VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @AT@ 1820 @LENGTH@ 16
------DEL ParameterizedType@@ServiceProxy<CuratorFramework> @AT@ 2959 @LENGTH@ 30
---------DEL SimpleType@@ServiceProxy @AT@ 2959 @LENGTH@ 12
---------DEL SimpleType@@CuratorFramework @AT@ 2972 @LENGTH@ 16
------UPD VariableDeclarationFragment@@curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @TO@ curator=fabricService.adapt(CuratorFramework.class) @AT@ 2990 @LENGTH@ 85
---------UPD SimpleName@@curatorProxy @TO@ curator @AT@ 2990 @LENGTH@ 12
---------UPD MethodInvocation@@ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @TO@ fabricService.adapt(CuratorFramework.class) @AT@ 3005 @LENGTH@ 70
------------UPD SimpleName@@Name:ServiceProxy @TO@ Name:fabricService @AT@ 3005 @LENGTH@ 12
------------UPD SimpleName@@MethodName:createServiceProxy:[bundleContext, CuratorFramework.class] @TO@ MethodName:adapt:[CuratorFramework.class] @AT@ 3018 @LENGTH@ 57
---------------DEL SimpleName@@bundleContext @AT@ 3037 @LENGTH@ 13
---UPD TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @TO@ try {  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container client=containerList.removeLast();  LinkedList<Container> servers=new LinkedList<Container>(containerList);  for (  Container c : servers) {    Profile p=c.getVersion().getProfile("example-camel-cluster.server");    c.setProfiles(new Profile[]{p});  }  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);  Profile p=client.getVersion().getProfile("example-camel-cluster.client");  client.setProfiles(new Profile[]{p});  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3089 @LENGTH@ 1971
------MOV VariableDeclarationStatement@@LinkedList<Container> containerList=new LinkedList<Container>(containers); @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2038 @LENGTH@ 76
------MOV VariableDeclarationStatement@@Container client=containerList.removeLast(); @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2127 @LENGTH@ 46
------MOV VariableDeclarationStatement@@LinkedList<Container> servers=new LinkedList<Container>(containerList); @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2187 @LENGTH@ 73
------MOV EnhancedForStatement@@for (Container c : servers) {  Profile p=c.getVersion().getProfile("example-camel-cluster.server");  c.setProfiles(new Profile[]{p});} @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2274 @LENGTH@ 179
------MOV ExpressionStatement@@MethodInvocation:Provision.provisioningSuccess(servers,PROVISION_TIMEOUT) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2467 @LENGTH@ 58
------MOV VariableDeclarationStatement@@Profile p=client.getVersion().getProfile("example-camel-cluster.client"); @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2539 @LENGTH@ 75
------MOV ExpressionStatement@@MethodInvocation:client.setProfiles(new Profile[]{p}) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2627 @LENGTH@ 37
------MOV ExpressionStatement@@MethodInvocation:Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2678 @LENGTH@ 89
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:container-list")) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2781 @LENGTH@ 60
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server")) @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());  Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      return getCompletedExchangesCount(c) > 0;    }  },60000L));  Container lastActiveServerContainer=servers.removeLast();  for (  Container c : servers) {    try {      c.destroy(true);    } catch (    Exception ex) {    }    final int completed=getCompletedExchangesCount(client);    Assert.assertTrue(Provision.waitForCondition(Arrays.asList(client),new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        return getCompletedExchangesCount(c) > completed + 3;      }    },60000L));  }  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());}  finally {  curatorProxy.close();} @AT@ 2854 @LENGTH@ 91
------DEL VariableDeclarationStatement@@CuratorFramework curator=curatorProxy.getService(); @AT@ 3111 @LENGTH@ 53
---------DEL SimpleType@@CuratorFramework @AT@ 3111 @LENGTH@ 16
---------DEL VariableDeclarationFragment@@curator=curatorProxy.getService() @AT@ 3128 @LENGTH@ 35
------------DEL SimpleName@@curator @AT@ 3128 @LENGTH@ 7
------------DEL MethodInvocation@@curatorProxy.getService() @AT@ 3138 @LENGTH@ 25
---------------DEL SimpleName@@Name:curatorProxy @AT@ 3138 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getService:[] @AT@ 3151 @LENGTH@ 12
------UPD Block@@FinallyBody:{  curatorProxy.close();} @TO@ FinallyBody:{  ContainerBuilder.destroy(containers);} @AT@ 5007 @LENGTH@ 53
---------MOV ExpressionStatement@@MethodInvocation:ContainerBuilder.destroy(containers) @TO@ Block@@FinallyBody:{  curatorProxy.close();} @AT@ 5093 @LENGTH@ 37
---UPD Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ FinallyBody:{  fabricProxy.close();} @AT@ 5079 @LENGTH@ 94


INS ExpressionStatement@@MethodInvocation:executor.submit(new Runnable(){
  @Override public void run(){
    try {
      rescan();
    }
 catch (    IOException e) {
      LOGGER.warn("Caught: " + e,e);
    }
    LOGGER.debug("Completed rescan file watcher");
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:init, IOException,  @AT@ 3529 @LENGTH@ 339
---INS MethodInvocation@@executor.submit(new Runnable(){
  @Override public void run(){
    try {
      rescan();
    }
 catch (    IOException e) {
      LOGGER.warn("Caught: " + e,e);
    }
    LOGGER.debug("Completed rescan file watcher");
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:executor.submit(new Runnable(){
  @Override public void run(){
    try {
      rescan();
    }
 catch (    IOException e) {
      LOGGER.warn("Caught: " + e,e);
    }
    LOGGER.debug("Completed rescan file watcher");
  }
}
) @AT@ 3529 @LENGTH@ 338
------INS SimpleName@@Name:executor @TO@ MethodInvocation@@executor.submit(new Runnable(){
  @Override public void run(){
    try {
      rescan();
    }
 catch (    IOException e) {
      LOGGER.warn("Caught: " + e,e);
    }
    LOGGER.debug("Completed rescan file watcher");
  }
}
) @AT@ 3529 @LENGTH@ 8
------INS SimpleName@@MethodName:submit:[new Runnable(){
  @Override public void run(){
    try {
      rescan();
    }
 catch (    IOException e) {
      LOGGER.warn("Caught: " + e,e);
    }
    LOGGER.debug("Completed rescan file watcher");
  }
}
] @TO@ MethodInvocation@@executor.submit(new Runnable(){
  @Override public void run(){
    try {
      rescan();
    }
 catch (    IOException e) {
      LOGGER.warn("Caught: " + e,e);
    }
    LOGGER.debug("Completed rescan file watcher");
  }
}
) @AT@ 3538 @LENGTH@ 329
---------INS ClassInstanceCreation@@Runnable[] @TO@ SimpleName@@MethodName:submit:[new Runnable(){
  @Override public void run(){
    try {
      rescan();
    }
 catch (    IOException e) {
      LOGGER.warn("Caught: " + e,e);
    }
    LOGGER.debug("Completed rescan file watcher");
  }
}
] @AT@ 3545 @LENGTH@ 321
------------INS New@@new @TO@ ClassInstanceCreation@@Runnable[] @AT@ 3545 @LENGTH@ 3
------------INS SimpleType@@Runnable @TO@ ClassInstanceCreation@@Runnable[] @AT@ 3549 @LENGTH@ 8
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Runnable[] @AT@ 3560 @LENGTH@ 306
---------------INS MethodDeclaration@@public, void, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3596 @LENGTH@ 260
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 3596 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 3603 @LENGTH@ 4
------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 3608 @LENGTH@ 3
------------------INS TryStatement@@try {  rescan();} catch (IOException e) {  LOGGER.warn("Caught: " + e,e);} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 3632 @LENGTH@ 147
---------------------INS ExpressionStatement@@MethodInvocation:rescan() @TO@ TryStatement@@try {  rescan();} catch (IOException e) {  LOGGER.warn("Caught: " + e,e);} @AT@ 3658 @LENGTH@ 9
------------------------MOV MethodInvocation@@MethodName:rescan:[] @TO@ ExpressionStatement@@MethodInvocation:rescan() @AT@ 3860 @LENGTH@ 8
---------------------INS CatchClause@@catch (IOException e) {  LOGGER.warn("Caught: " + e,e);} @TO@ TryStatement@@try {  rescan();} catch (IOException e) {  LOGGER.warn("Caught: " + e,e);} @AT@ 3686 @LENGTH@ 93
------------------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  LOGGER.warn("Caught: " + e,e);} @AT@ 3693 @LENGTH@ 13
---------------------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 3693 @LENGTH@ 11
---------------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 3705 @LENGTH@ 1
------------------------INS ExpressionStatement@@MethodInvocation:LOGGER.warn("Caught: " + e,e) @TO@ CatchClause@@catch (IOException e) {  LOGGER.warn("Caught: " + e,e);} @AT@ 3730 @LENGTH@ 31
---------------------------INS MethodInvocation@@LOGGER.warn("Caught: " + e,e) @TO@ ExpressionStatement@@MethodInvocation:LOGGER.warn("Caught: " + e,e) @AT@ 3730 @LENGTH@ 30
------------------------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.warn("Caught: " + e,e) @AT@ 3730 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:warn:["Caught: " + e, e] @TO@ MethodInvocation@@LOGGER.warn("Caught: " + e,e) @AT@ 3737 @LENGTH@ 23
---------------------------------INS InfixExpression@@"Caught: " + e @TO@ SimpleName@@MethodName:warn:["Caught: " + e, e] @AT@ 3742 @LENGTH@ 14
------------------------------------INS StringLiteral@@"Caught: " @TO@ InfixExpression@@"Caught: " + e @AT@ 3742 @LENGTH@ 10
------------------------------------INS Operator@@+ @TO@ InfixExpression@@"Caught: " + e @AT@ 3752 @LENGTH@ 1
------------------------------------INS SimpleName@@e @TO@ InfixExpression@@"Caught: " + e @AT@ 3755 @LENGTH@ 1
---------------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:warn:["Caught: " + e, e] @AT@ 3758 @LENGTH@ 1
------------------INS ExpressionStatement@@MethodInvocation:LOGGER.debug("Completed rescan file watcher") @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 3796 @LENGTH@ 46
---------------------INS MethodInvocation@@LOGGER.debug("Completed rescan file watcher") @TO@ ExpressionStatement@@MethodInvocation:LOGGER.debug("Completed rescan file watcher") @AT@ 3796 @LENGTH@ 45
------------------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.debug("Completed rescan file watcher") @AT@ 3796 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:debug:["Completed rescan file watcher"] @TO@ MethodInvocation@@LOGGER.debug("Completed rescan file watcher") @AT@ 3803 @LENGTH@ 38
---------------------------INS StringLiteral@@"Completed rescan file watcher" @TO@ SimpleName@@MethodName:debug:["Completed rescan file watcher"] @AT@ 3809 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:completeRemoteTransaction(context,operation,txRef,preparedResultRef,finalResultRef) @TO@ MethodInvocation:completeRemoteTransaction(context,txRef,preparedResultRef,finalResultRef) @AT@ 8277 @LENGTH@ 88
---UPD MethodInvocation@@completeRemoteTransaction(context,operation,txRef,preparedResultRef,finalResultRef) @TO@ completeRemoteTransaction(context,txRef,preparedResultRef,finalResultRef) @AT@ 8277 @LENGTH@ 87
------UPD SimpleName@@MethodName:completeRemoteTransaction:[context, operation, txRef, preparedResultRef, finalResultRef] @TO@ MethodName:completeRemoteTransaction:[context, txRef, preparedResultRef, finalResultRef] @AT@ 8277 @LENGTH@ 87
---------DEL SimpleName@@operation @AT@ 8312 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile()) @TO@ MethodInvocation:LOG.info("Loading Quartz properties file from: {}",getPropertiesFile()) @AT@ 18063 @LENGTH@ 83
---UPD MethodInvocation@@LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile()) @TO@ LOG.info("Loading Quartz properties file from: {}",getPropertiesFile()) @AT@ 18063 @LENGTH@ 82
------UPD SimpleName@@MethodName:info:["Loading Quartz properties file from classpath: {}", getPropertiesFile()] @TO@ MethodName:info:["Loading Quartz properties file from: {}", getPropertiesFile()] @AT@ 18067 @LENGTH@ 78
---------UPD StringLiteral@@"Loading Quartz properties file from classpath: {}" @TO@ "Loading Quartz properties file from: {}" @AT@ 18072 @LENGTH@ 51


INS MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @TO@ TypeDeclaration@@[public, abstract]DefaultComponent, ServiceSupport[Component] @AT@ 14313 @LENGTH@ 539
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14313 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14324 @LENGTH@ 1
---INS SimpleName@@MethodName:getAndRemoveOrResolveReferenceParameter @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14326 @LENGTH@ 39
---INS SingleVariableDeclaration@@Map<String,Object> parameters @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14366 @LENGTH@ 30
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> parameters @AT@ 14366 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 14366 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 14370 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 14378 @LENGTH@ 6
------INS SimpleName@@parameters @TO@ SingleVariableDeclaration@@Map<String,Object> parameters @AT@ 14386 @LENGTH@ 10
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14398 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 14398 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 14405 @LENGTH@ 3
---INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14410 @LENGTH@ 13
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 14410 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 14410 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 14416 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 14419 @LENGTH@ 4
---INS SingleVariableDeclaration@@T defaultValue @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14425 @LENGTH@ 14
------INS SimpleType@@T @TO@ SingleVariableDeclaration@@T defaultValue @AT@ 14425 @LENGTH@ 1
------INS SimpleName@@defaultValue @TO@ SingleVariableDeclaration@@T defaultValue @AT@ 14427 @LENGTH@ 12
---INS VariableDeclarationStatement@@String value=getAndRemoveParameter(parameters,key,String.class); @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14451 @LENGTH@ 68
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=getAndRemoveParameter(parameters,key,String.class); @AT@ 14451 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=getAndRemoveParameter(parameters,key,String.class) @TO@ VariableDeclarationStatement@@String value=getAndRemoveParameter(parameters,key,String.class); @AT@ 14458 @LENGTH@ 60
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=getAndRemoveParameter(parameters,key,String.class) @AT@ 14458 @LENGTH@ 5
---------INS MethodInvocation@@getAndRemoveParameter(parameters,key,String.class) @TO@ VariableDeclarationFragment@@value=getAndRemoveParameter(parameters,key,String.class) @AT@ 14466 @LENGTH@ 52
------------INS SimpleName@@MethodName:getAndRemoveParameter:[parameters, key, String.class] @TO@ MethodInvocation@@getAndRemoveParameter(parameters,key,String.class) @AT@ 14466 @LENGTH@ 52
---------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, key, String.class] @AT@ 14488 @LENGTH@ 10
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, key, String.class] @AT@ 14500 @LENGTH@ 3
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, key, String.class] @AT@ 14505 @LENGTH@ 12
---INS IfStatement@@if (value == null) {  return defaultValue;} else if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @TO@ MethodDeclaration@@public, T, T, MethodName:getAndRemoveOrResolveReferenceParameter, Map<String,Object> parameters, String key, Class<T> type, T defaultValue,  @AT@ 14528 @LENGTH@ 318
------INS InfixExpression@@value == null @TO@ IfStatement@@if (value == null) {  return defaultValue;} else if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14532 @LENGTH@ 13
---------INS SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 14532 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@value == null @AT@ 14537 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 14541 @LENGTH@ 4
------INS Block@@ThenBody:{  return defaultValue;} @TO@ IfStatement@@if (value == null) {  return defaultValue;} else if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14547 @LENGTH@ 44
---------INS ReturnStatement@@SimpleName:defaultValue @TO@ Block@@ThenBody:{  return defaultValue;} @AT@ 14561 @LENGTH@ 20
------------INS SimpleName@@defaultValue @TO@ ReturnStatement@@SimpleName:defaultValue @AT@ 14568 @LENGTH@ 12
------INS Block@@ElseBody:if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @TO@ IfStatement@@if (value == null) {  return defaultValue;} else if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14597 @LENGTH@ 249
---------INS IfStatement@@if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @TO@ Block@@ElseBody:if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14597 @LENGTH@ 249
------------INS MethodInvocation@@EndpointHelper.isReferenceParameter(value) @TO@ IfStatement@@if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14601 @LENGTH@ 42
---------------INS SimpleName@@Name:EndpointHelper @TO@ MethodInvocation@@EndpointHelper.isReferenceParameter(value) @AT@ 14601 @LENGTH@ 14
---------------INS SimpleName@@MethodName:isReferenceParameter:[value] @TO@ MethodInvocation@@EndpointHelper.isReferenceParameter(value) @AT@ 14616 @LENGTH@ 27
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:isReferenceParameter:[value] @AT@ 14637 @LENGTH@ 5
------------INS Block@@ThenBody:{  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} @TO@ IfStatement@@if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14645 @LENGTH@ 104
---------------INS ReturnStatement@@MethodInvocation:EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type) @TO@ Block@@ThenBody:{  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} @AT@ 14659 @LENGTH@ 80
------------------INS MethodInvocation@@EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type) @TO@ ReturnStatement@@MethodInvocation:EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type) @AT@ 14666 @LENGTH@ 72
---------------------INS SimpleName@@Name:EndpointHelper @TO@ MethodInvocation@@EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type) @AT@ 14666 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:resolveReferenceParameter:[getCamelContext(), value, type] @TO@ MethodInvocation@@EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type) @AT@ 14681 @LENGTH@ 57
------------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:resolveReferenceParameter:[getCamelContext(), value, type] @AT@ 14707 @LENGTH@ 17
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:resolveReferenceParameter:[getCamelContext(), value, type] @AT@ 14726 @LENGTH@ 5
------------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:resolveReferenceParameter:[getCamelContext(), value, type] @AT@ 14733 @LENGTH@ 4
------------INS Block@@ElseBody:{  return getCamelContext().getTypeConverter().convertTo(type,value);} @TO@ IfStatement@@if (EndpointHelper.isReferenceParameter(value)) {  return EndpointHelper.resolveReferenceParameter(getCamelContext(),value,type);} else {  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14755 @LENGTH@ 91
---------------INS ReturnStatement@@MethodInvocation:getCamelContext().getTypeConverter().convertTo(type,value) @TO@ Block@@ElseBody:{  return getCamelContext().getTypeConverter().convertTo(type,value);} @AT@ 14769 @LENGTH@ 67
------------------INS MethodInvocation@@getCamelContext().getTypeConverter().convertTo(type,value) @TO@ ReturnStatement@@MethodInvocation:getCamelContext().getTypeConverter().convertTo(type,value) @AT@ 14776 @LENGTH@ 59
---------------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@getCamelContext().getTypeConverter().convertTo(type,value) @AT@ 14776 @LENGTH@ 36
---------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().getTypeConverter().convertTo(type,value) @AT@ 14776 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:convertTo:[type, value] @TO@ MethodInvocation@@getCamelContext().getTypeConverter().convertTo(type,value) @AT@ 14813 @LENGTH@ 22
------------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 14823 @LENGTH@ 4
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertTo:[type, value] @AT@ 14829 @LENGTH@ 5


INS MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithNamedVarArgs, @Param("ids") Integer... ids,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 8448 @LENGTH@ 62
---INS ParameterizedType@@Collection<User> @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithNamedVarArgs, @Param("ids") Integer... ids,  @AT@ 8431 @LENGTH@ 16
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<User> @AT@ 8431 @LENGTH@ 10
------INS SimpleType@@User @TO@ ParameterizedType@@Collection<User> @AT@ 8442 @LENGTH@ 4
---INS SimpleName@@MethodName:findByIdsCustomWithNamedVarArgs @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithNamedVarArgs, @Param("ids") Integer... ids,  @AT@ 8448 @LENGTH@ 31
---INS SingleVariableDeclaration@@@Param("ids") Integer... ids @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdsCustomWithNamedVarArgs, @Param("ids") Integer... ids,  @AT@ 8480 @LENGTH@ 28
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@@Param("ids") Integer... ids @AT@ 8494 @LENGTH@ 7
------INS SimpleName@@ids @TO@ SingleVariableDeclaration@@@Param("ids") Integer... ids @AT@ 8505 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:addressUri=UnsafeUriCharactersEncoder.encode(addressUri) @TO@ Assignment:addressUri=UnsafeUriCharactersEncoder.encodeHttpURI(addressUri) @AT@ 5317 @LENGTH@ 59
---UPD Assignment@@addressUri=UnsafeUriCharactersEncoder.encode(addressUri) @TO@ addressUri=UnsafeUriCharactersEncoder.encodeHttpURI(addressUri) @AT@ 5317 @LENGTH@ 58
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(addressUri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(addressUri) @AT@ 5330 @LENGTH@ 45
---------UPD SimpleName@@MethodName:encode:[addressUri] @TO@ MethodName:encodeHttpURI:[addressUri] @AT@ 5357 @LENGTH@ 18


DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("not supported") @AT@ 4731 @LENGTH@ 49
---DEL ClassInstanceCreation@@IllegalStateException["not supported"] @AT@ 4737 @LENGTH@ 42
------DEL SimpleType@@IllegalStateException @AT@ 4741 @LENGTH@ 21
------DEL StringLiteral@@"not supported" @AT@ 4763 @LENGTH@ 15


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[public]JGroupsChannelLocator,  @AT@ 1038 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 1038 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 1046 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 1053 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 1070 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 1106 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 1109 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 1109 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 1109 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 1116 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 1136 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 1140 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 1146 @LENGTH@ 77
---------INS ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 1160 @LENGTH@ 53
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 1167 @LENGTH@ 45
---------------INS SimpleName@@Name:CurrentServiceContainer @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 1167 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 1191 @LENGTH@ 21
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 1232 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 1239 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 1239 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 1256 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 1269 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 1269 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 1293 @LENGTH@ 10


UPD IfStatement@@if (usedNamespaces.containsKey(attachmentKey)) {  ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @TO@ if (usedNamespaces.containsKey(attachmentKey)) {  throw ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @AT@ 4618 @LENGTH@ 184
---UPD Block@@ThenBody:{  ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @TO@ ThenBody:{  throw ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @AT@ 4664 @LENGTH@ 138
------INS ThrowStatement@@MethodInvocation:ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @TO@ Block@@ThenBody:{  ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey));} @AT@ 4682 @LENGTH@ 112
---------MOV MethodInvocation@@ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @TO@ ThrowStatement@@MethodInvocation:ServerMessages.MESSAGES.equivalentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @AT@ 4682 @LENGTH@ 105
------DEL ExpressionStatement@@MethodInvocation:ServerMessages.MESSAGES.equivilentNamespacesInJBossXml(entry.getKey(),usedNamespaces.get(attachmentKey)) @AT@ 4682 @LENGTH@ 106


UPD VariableDeclarationStatement@@DependencyTreeResult result=mavenResolver.collectDependencies(getArtifactFile(parameters.getUrl()),parameters.isOffline(),excludeFilter); @TO@ DependencyTreeResult result=mavenResolver.collectDependenciesForJar(getArtifactFile(parameters.getUrl()),parameters.isOffline(),excludeFilter); @AT@ 2439 @LENGTH@ 173
---UPD VariableDeclarationFragment@@result=mavenResolver.collectDependencies(getArtifactFile(parameters.getUrl()),parameters.isOffline(),excludeFilter) @TO@ result=mavenResolver.collectDependenciesForJar(getArtifactFile(parameters.getUrl()),parameters.isOffline(),excludeFilter) @AT@ 2460 @LENGTH@ 151
------UPD MethodInvocation@@mavenResolver.collectDependencies(getArtifactFile(parameters.getUrl()),parameters.isOffline(),excludeFilter) @TO@ mavenResolver.collectDependenciesForJar(getArtifactFile(parameters.getUrl()),parameters.isOffline(),excludeFilter) @AT@ 2469 @LENGTH@ 142
---------UPD SimpleName@@MethodName:collectDependencies:[getArtifactFile(parameters.getUrl()), parameters.isOffline(), excludeFilter] @TO@ MethodName:collectDependenciesForJar:[getArtifactFile(parameters.getUrl()), parameters.isOffline(), excludeFilter] @AT@ 2483 @LENGTH@ 128


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 9053 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 9056 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 9056 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 9056 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 9063 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 9083 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 9087 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 9093 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 9254 @LENGTH@ 53


UPD MethodDeclaration@@protected, ModelNode, MethodName:getSyslogRecord, byte[] bytes, UnsupportedEncodingException,  @TO@ protected, ModelNode, MethodName:getSyslogRecord, byte[] bytes,  @AT@ 5940 @LENGTH@ 179
---DEL SimpleType@@UnsupportedEncodingException @AT@ 5997 @LENGTH@ 28
---UPD VariableDeclarationStatement@@String msg=new String(bytes,"utf-8"); @TO@ String msg=new String(bytes,StandardCharsets.UTF_8); @AT@ 6036 @LENGTH@ 40
------UPD VariableDeclarationFragment@@msg=new String(bytes,"utf-8") @TO@ msg=new String(bytes,StandardCharsets.UTF_8) @AT@ 6043 @LENGTH@ 32
---------UPD ClassInstanceCreation@@String[bytes, "utf-8"] @TO@ String[bytes, StandardCharsets.UTF_8] @AT@ 6049 @LENGTH@ 26
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[bytes, "utf-8"] @AT@ 6007 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6007 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6024 @LENGTH@ 5
------------DEL StringLiteral@@"utf-8" @AT@ 6067 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testSimpleEmptyString, Exception,  @TO@ public, void, MethodName:testSimpleWhenString, Exception,  @AT@ 1322 @LENGTH@ 232
---UPD SimpleName@@MethodName:testSimpleEmptyString @TO@ MethodName:testSimpleWhenString @AT@ 1334 @LENGTH@ 21
---UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("False") @TO@ MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("correct") @AT@ 1385 @LENGTH@ 63
------UPD MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("False") @TO@ getMockEndpoint("mock:result").expectedBodiesReceived("correct") @AT@ 1385 @LENGTH@ 62
---------UPD SimpleName@@MethodName:expectedBodiesReceived:["False"] @TO@ MethodName:expectedBodiesReceived:["correct"] @AT@ 1416 @LENGTH@ 31
------------UPD StringLiteral@@"False" @TO@ "correct" @AT@ 1439 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:securityGroupApi.get().createRuleAllowingCidrBlock(securityGroup.get().getId(),Ingress.builder().ipProtocol(org.jclouds.openstack.nova.v2_0.domain.IpProtocol.TCP).fromPort(port).toPort(port).build(),source) @TO@ MethodInvocation:securityGroupApi.get().createRuleAllowingCidrBlock(securityGroup.get().getId(),Ingress.builder().ipProtocol(IpProtocol.TCP).fromPort(port).toPort(port).build(),source) @AT@ 4540 @LENGTH@ 371
---UPD MethodInvocation@@securityGroupApi.get().createRuleAllowingCidrBlock(securityGroup.get().getId(),Ingress.builder().ipProtocol(org.jclouds.openstack.nova.v2_0.domain.IpProtocol.TCP).fromPort(port).toPort(port).build(),source) @TO@ securityGroupApi.get().createRuleAllowingCidrBlock(securityGroup.get().getId(),Ingress.builder().ipProtocol(IpProtocol.TCP).fromPort(port).toPort(port).build(),source) @AT@ 4540 @LENGTH@ 370
------UPD SimpleName@@MethodName:createRuleAllowingCidrBlock:[securityGroup.get().getId(), Ingress.builder().ipProtocol(org.jclouds.openstack.nova.v2_0.domain.IpProtocol.TCP).fromPort(port).toPort(port).build(), source] @TO@ MethodName:createRuleAllowingCidrBlock:[securityGroup.get().getId(), Ingress.builder().ipProtocol(IpProtocol.TCP).fromPort(port).toPort(port).build(), source] @AT@ 4563 @LENGTH@ 347
---------UPD MethodInvocation@@Ingress.builder().ipProtocol(org.jclouds.openstack.nova.v2_0.domain.IpProtocol.TCP).fromPort(port).toPort(port).build() @TO@ Ingress.builder().ipProtocol(IpProtocol.TCP).fromPort(port).toPort(port).build() @AT@ 4656 @LENGTH@ 209
------------UPD MethodInvocation@@MethodName:ipProtocol:[org.jclouds.openstack.nova.v2_0.domain.IpProtocol.TCP] @TO@ MethodName:ipProtocol:[IpProtocol.TCP] @AT@ 4656 @LENGTH@ 128
---------------UPD QualifiedName@@org.jclouds.openstack.nova.v2_0.domain.IpProtocol.TCP @TO@ IpProtocol.TCP @AT@ 4730 @LENGTH@ 53
------------------DEL QualifiedName@@org.jclouds.openstack.nova.v2_0.domain.IpProtocol @AT@ 4730 @LENGTH@ 49
---------------------DEL QualifiedName@@org.jclouds.openstack.nova.v2_0.domain @AT@ 4730 @LENGTH@ 38
------------------------DEL QualifiedName@@org.jclouds.openstack.nova.v2_0 @AT@ 4730 @LENGTH@ 31
---------------------------DEL QualifiedName@@org.jclouds.openstack.nova @AT@ 4730 @LENGTH@ 26
------------------------------DEL QualifiedName@@org.jclouds.openstack @AT@ 4730 @LENGTH@ 21
---------------------------------DEL QualifiedName@@org.jclouds @AT@ 4730 @LENGTH@ 11
------------------------------------DEL SimpleName@@org @AT@ 4730 @LENGTH@ 3
------------------------------------DEL SimpleName@@jclouds @AT@ 4734 @LENGTH@ 7
---------------------------------DEL SimpleName@@openstack @AT@ 4742 @LENGTH@ 9
------------------------------DEL SimpleName@@nova @AT@ 4752 @LENGTH@ 4
---------------------------DEL SimpleName@@v2_0 @AT@ 4757 @LENGTH@ 4
------------------------DEL SimpleName@@domain @AT@ 4762 @LENGTH@ 6
------------------MOV SimpleName@@IpProtocol @TO@ QualifiedName@@org.jclouds.openstack.nova.v2_0.domain.IpProtocol.TCP @AT@ 4769 @LENGTH@ 10


UPD IfStatement@@if (this.getAuthorities() != null) {  sb.append("Granted Authorities: ");  boolean first=true;  for (  Object authority : this.getAuthorities()) {    if (first) {      first=false;    } else {      sb.append(", ");    }    sb.append(authority.toString());  }} else {  sb.append("Not granted any authorities");} @TO@ if (this.getAuthorities() != null && !this.getAuthorities().isEmpty()) {  sb.append("Granted Authorities: ");  boolean first=true;  for (  Object authority : this.getAuthorities()) {    if (first) {      first=false;    } else {      sb.append(", ");    }    sb.append(authority.toString());  }} else {  sb.append("Not granted any authorities");} @AT@ 4710 @LENGTH@ 469
---INS InfixExpression@@this.getAuthorities() != null && !this.getAuthorities().isEmpty() @TO@ IfStatement@@if (this.getAuthorities() != null) {  sb.append("Granted Authorities: ");  boolean first=true;  for (  Object authority : this.getAuthorities()) {    if (first) {      first=false;    } else {      sb.append(", ");    }    sb.append(authority.toString());  }} else {  sb.append("Not granted any authorities");} @AT@ 4714 @LENGTH@ 65
------MOV InfixExpression@@this.getAuthorities() != null @TO@ InfixExpression@@this.getAuthorities() != null && !this.getAuthorities().isEmpty() @AT@ 4714 @LENGTH@ 29
------INS Operator@@&& @TO@ InfixExpression@@this.getAuthorities() != null && !this.getAuthorities().isEmpty() @AT@ 4743 @LENGTH@ 2
------INS PrefixExpression@@!this.getAuthorities().isEmpty() @TO@ InfixExpression@@this.getAuthorities() != null && !this.getAuthorities().isEmpty() @AT@ 4747 @LENGTH@ 32
---------INS Operator@@! @TO@ PrefixExpression@@!this.getAuthorities().isEmpty() @AT@ 4747 @LENGTH@ 1
---------INS MethodInvocation@@this.getAuthorities().isEmpty() @TO@ PrefixExpression@@!this.getAuthorities().isEmpty() @AT@ 4748 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@this.getAuthorities().isEmpty() @AT@ 4748 @LENGTH@ 21
------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getAuthorities().isEmpty() @AT@ 4748 @LENGTH@ 4
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@this.getAuthorities().isEmpty() @AT@ 4770 @LENGTH@ 9


UPD TryStatement@@try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);  response.setContentLength(0);  response.flushBuffer();} catch (IOException ioe) {} @TO@ try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.sendError(HttpServletResponse.SC_UNAUTHORIZED);} catch (IOException ioe) {} @AT@ 6788 @LENGTH@ 393
---UPD ExpressionStatement@@MethodInvocation:response.setStatus(HttpServletResponse.SC_UNAUTHORIZED) @TO@ MethodInvocation:response.sendError(HttpServletResponse.SC_UNAUTHORIZED) @AT@ 6926 @LENGTH@ 56
------UPD MethodInvocation@@response.setStatus(HttpServletResponse.SC_UNAUTHORIZED) @TO@ response.sendError(HttpServletResponse.SC_UNAUTHORIZED) @AT@ 6926 @LENGTH@ 55
---------UPD SimpleName@@MethodName:setStatus:[HttpServletResponse.SC_UNAUTHORIZED] @TO@ MethodName:sendError:[HttpServletResponse.SC_UNAUTHORIZED] @AT@ 6935 @LENGTH@ 46
---DEL ExpressionStatement@@MethodInvocation:response.setContentLength(0) @AT@ 6995 @LENGTH@ 29
------DEL MethodInvocation@@response.setContentLength(0) @AT@ 6995 @LENGTH@ 28
---------DEL SimpleName@@Name:response @AT@ 6995 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setContentLength:[0] @AT@ 7004 @LENGTH@ 19
------------DEL NumberLiteral@@0 @AT@ 7021 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:response.flushBuffer() @AT@ 7037 @LENGTH@ 23
------DEL MethodInvocation@@response.flushBuffer() @AT@ 7037 @LENGTH@ 22
---------DEL SimpleName@@Name:response @AT@ 7037 @LENGTH@ 8
---------DEL SimpleName@@MethodName:flushBuffer:[] @AT@ 7046 @LENGTH@ 13


DEL MethodDeclaration@@private, voidMethodName:EverythingIsLostException, String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace,  @AT@ 5128 @LENGTH@ 207
---DEL Modifier@@private @AT@ 5128 @LENGTH@ 7
---DEL SimpleName@@MethodName:EverythingIsLostException @AT@ 5136 @LENGTH@ 25
---DEL SingleVariableDeclaration@@String message @AT@ 5162 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 5162 @LENGTH@ 6
------DEL SimpleName@@message @AT@ 5169 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Throwable cause @AT@ 5178 @LENGTH@ 15
------DEL SimpleType@@Throwable @AT@ 5178 @LENGTH@ 9
------DEL SimpleName@@cause @AT@ 5188 @LENGTH@ 5
---DEL SingleVariableDeclaration@@boolean enableSuppression @AT@ 5195 @LENGTH@ 25
------DEL PrimitiveType@@boolean @AT@ 5195 @LENGTH@ 7
------DEL SimpleName@@enableSuppression @AT@ 5203 @LENGTH@ 17
---DEL SingleVariableDeclaration@@boolean writableStackTrace @AT@ 5222 @LENGTH@ 26
------DEL PrimitiveType@@boolean @AT@ 5222 @LENGTH@ 7
------DEL SimpleName@@writableStackTrace @AT@ 5230 @LENGTH@ 18
---DEL SuperConstructorInvocation@@super(message,cause,enableSuppression,writableStackTrace);
 @AT@ 5264 @LENGTH@ 61
------DEL SimpleName@@message @AT@ 5270 @LENGTH@ 7
------DEL SimpleName@@cause @AT@ 5279 @LENGTH@ 5
------DEL SimpleName@@enableSuppression @AT@ 5286 @LENGTH@ 17
------DEL SimpleName@@writableStackTrace @AT@ 5305 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(configurationServiceName).addDependency(deploymentUnitServiceName.append("marshalling")).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(GlobalComponentRegistryService.getServiceName(this.config.getContainerName())).addDependency(configurationServiceName).addDependency(deploymentUnitServiceName.append("marshalling")).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 4972 @LENGTH@ 341
---UPD MethodInvocation@@AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(configurationServiceName).addDependency(deploymentUnitServiceName.append("marshalling")).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(GlobalComponentRegistryService.getServiceName(this.config.getContainerName())).addDependency(configurationServiceName).addDependency(deploymentUnitServiceName.append("marshalling")).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 4972 @LENGTH@ 331
------INS MethodInvocation@@MethodName:addDependency:[GlobalComponentRegistryService.getServiceName(this.config.getContainerName())] @TO@ MethodInvocation@@AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(configurationServiceName).addDependency(deploymentUnitServiceName.append("marshalling")).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 5056 @LENGTH@ 211
---------INS MethodInvocation@@GlobalComponentRegistryService.getServiceName(this.config.getContainerName()) @TO@ MethodInvocation@@MethodName:addDependency:[GlobalComponentRegistryService.getServiceName(this.config.getContainerName())] @AT@ 5189 @LENGTH@ 77
------------INS SimpleName@@Name:GlobalComponentRegistryService @TO@ MethodInvocation@@GlobalComponentRegistryService.getServiceName(this.config.getContainerName()) @AT@ 5189 @LENGTH@ 30
------------INS SimpleName@@MethodName:getServiceName:[this.config.getContainerName()] @TO@ MethodInvocation@@GlobalComponentRegistryService.getServiceName(this.config.getContainerName()) @AT@ 5220 @LENGTH@ 46
---------------INS MethodInvocation@@this.config.getContainerName() @TO@ SimpleName@@MethodName:getServiceName:[this.config.getContainerName()] @AT@ 5235 @LENGTH@ 30
------------------INS FieldAccess@@this.config @TO@ MethodInvocation@@this.config.getContainerName() @AT@ 5235 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.config @AT@ 5235 @LENGTH@ 4
---------------------INS SimpleName@@config @TO@ FieldAccess@@this.config @AT@ 5240 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getContainerName:[] @TO@ MethodInvocation@@this.config.getContainerName() @AT@ 5247 @LENGTH@ 18


INS IfStatement@@if (findAllMethod == null) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:isPagingRepository,  @AT@ 3085 @LENGTH@ 49
---INS InfixExpression@@findAllMethod == null @TO@ IfStatement@@if (findAllMethod == null) {  return false;} @AT@ 3089 @LENGTH@ 21
------INS SimpleName@@findAllMethod @TO@ InfixExpression@@findAllMethod == null @AT@ 3089 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@findAllMethod == null @AT@ 3102 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@findAllMethod == null @AT@ 3106 @LENGTH@ 4
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (findAllMethod == null) {  return false;} @AT@ 3112 @LENGTH@ 22
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 3117 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3124 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode()) @TO@ MethodInvocation:assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @AT@ 18380 @LENGTH@ 251
---UPD MethodInvocation@@assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode()) @TO@ assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @AT@ 18380 @LENGTH@ 250
------UPD SimpleName@@MethodName:assertEquals:[0, driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode()] @TO@ MethodName:assertEquals:[0, driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()] @AT@ 18380 @LENGTH@ 250
---------UPD MethodInvocation@@driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode() @TO@ driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode() @AT@ 18396 @LENGTH@ 233
------------UPD MethodInvocation@@MethodName:run:["create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'"] @TO@ MethodName:run:["create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'"] @AT@ 18396 @LENGTH@ 215
---------------UPD InfixExpression@@"create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'" @TO@ "create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'" @AT@ 18407 @LENGTH@ 203
------------------UPD StringLiteral@@" stored as textfile location 'file://" @TO@ " stored as textfile location 'file:///" @AT@ 18526 @LENGTH@ 39
------------------UPD MethodInvocation@@inputDataDir.getAbsolutePath() @TO@ inputDataDir.getPath().replaceAll("\\\\","/") @AT@ 18574 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:replaceAll:["\\\\", "/"] @AT@ 18587 @LENGTH@ 17
------------------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 18713 @LENGTH@ 6
------------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 18721 @LENGTH@ 3
---------------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@inputDataDir.getAbsolutePath() @AT@ 18679 @LENGTH@ 22


UPD IfStatement@@if (!Strings.isNotBlank(newAlgorithm)) {  setData(getCurator(),ZkPath.AUTHENTICATION_CRYPT_ALGORITHM.getPath(),newAlgorithm);} @TO@ if (Strings.isNotBlank(newAlgorithm)) {  setData(getCurator(),ZkPath.AUTHENTICATION_CRYPT_ALGORITHM.getPath(),newAlgorithm);} @AT@ 1313 @LENGTH@ 148
---DEL PrefixExpression@@!Strings.isNotBlank(newAlgorithm) @AT@ 1317 @LENGTH@ 33
------DEL Operator@@! @AT@ 1317 @LENGTH@ 1
---MOV MethodInvocation@@Strings.isNotBlank(newAlgorithm) @TO@ IfStatement@@if (!Strings.isNotBlank(newAlgorithm)) {  setData(getCurator(),ZkPath.AUTHENTICATION_CRYPT_ALGORITHM.getPath(),newAlgorithm);} @AT@ 1318 @LENGTH@ 32


INS MethodDeclaration@@Page<Person>, MethodName:findByHavingCreator, Pageable page,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 6854 @LENGTH@ 35
---INS ParameterizedType@@Page<Person> @TO@ MethodDeclaration@@Page<Person>, MethodName:findByHavingCreator, Pageable page,  @AT@ 6841 @LENGTH@ 12
------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 6841 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 6846 @LENGTH@ 6
---INS SimpleName@@MethodName:findByHavingCreator @TO@ MethodDeclaration@@Page<Person>, MethodName:findByHavingCreator, Pageable page,  @AT@ 6854 @LENGTH@ 19
---INS SingleVariableDeclaration@@Pageable page @TO@ MethodDeclaration@@Page<Person>, MethodName:findByHavingCreator, Pageable page,  @AT@ 6874 @LENGTH@ 13
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable page @AT@ 6874 @LENGTH@ 8
------INS SimpleName@@page @TO@ SingleVariableDeclaration@@Pageable page @AT@ 6883 @LENGTH@ 4


UPD IfStatement@@if (log.isDebugEnabled()) {  log.debug("vanillaConfigBeans: " + vanillaConfigBeans);  log.debug("yarnConfigBeans: " + yarnConfigBeans);} @TO@ if (log.isDebugEnabled()) {  log.debug("vanillaConfigBeans: " + vanillaConfigBeans);  for (  org.apache.hadoop.conf.Configuration conf : vanillaConfigBeans.values()) {    log.debug(YarnUtils.toString(conf));  }  log.debug("yarnConfigBeans: " + yarnConfigBeans);  for (  org.apache.hadoop.conf.Configuration conf : yarnConfigBeans.values()) {    log.debug(YarnUtils.toString(conf));  }} @AT@ 4205 @LENGTH@ 143
---UPD Block@@ThenBody:{  log.debug("vanillaConfigBeans: " + vanillaConfigBeans);  log.debug("yarnConfigBeans: " + yarnConfigBeans);} @TO@ ThenBody:{  log.debug("vanillaConfigBeans: " + vanillaConfigBeans);  for (  org.apache.hadoop.conf.Configuration conf : vanillaConfigBeans.values()) {    log.debug(YarnUtils.toString(conf));  }  log.debug("yarnConfigBeans: " + yarnConfigBeans);  for (  org.apache.hadoop.conf.Configuration conf : yarnConfigBeans.values()) {    log.debug(YarnUtils.toString(conf));  }} @AT@ 4231 @LENGTH@ 117
------INS EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : vanillaConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @TO@ Block@@ThenBody:{  log.debug("vanillaConfigBeans: " + vanillaConfigBeans);  log.debug("yarnConfigBeans: " + yarnConfigBeans);} @AT@ 4346 @LENGTH@ 125
---------INS SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration conf @TO@ EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : vanillaConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @AT@ 4351 @LENGTH@ 41
------------INS SimpleType@@org.apache.hadoop.conf.Configuration @TO@ SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration conf @AT@ 4351 @LENGTH@ 36
------------INS SimpleName@@conf @TO@ SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration conf @AT@ 4388 @LENGTH@ 4
---------INS MethodInvocation@@vanillaConfigBeans.values() @TO@ EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : vanillaConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @AT@ 4395 @LENGTH@ 27
------------INS SimpleName@@Name:vanillaConfigBeans @TO@ MethodInvocation@@vanillaConfigBeans.values() @AT@ 4395 @LENGTH@ 18
------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@vanillaConfigBeans.values() @AT@ 4414 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:log.debug(YarnUtils.toString(conf)) @TO@ EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : vanillaConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @AT@ 4430 @LENGTH@ 36
------------INS MethodInvocation@@log.debug(YarnUtils.toString(conf)) @TO@ ExpressionStatement@@MethodInvocation:log.debug(YarnUtils.toString(conf)) @AT@ 4430 @LENGTH@ 35
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug(YarnUtils.toString(conf)) @AT@ 4430 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:[YarnUtils.toString(conf)] @TO@ MethodInvocation@@log.debug(YarnUtils.toString(conf)) @AT@ 4434 @LENGTH@ 31
------------------INS MethodInvocation@@YarnUtils.toString(conf) @TO@ SimpleName@@MethodName:debug:[YarnUtils.toString(conf)] @AT@ 4440 @LENGTH@ 24
---------------------INS SimpleName@@Name:YarnUtils @TO@ MethodInvocation@@YarnUtils.toString(conf) @AT@ 4440 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:toString:[conf] @TO@ MethodInvocation@@YarnUtils.toString(conf) @AT@ 4450 @LENGTH@ 14
------------------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:toString:[conf] @AT@ 4459 @LENGTH@ 4
------INS EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : yarnConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @TO@ Block@@ThenBody:{  log.debug("vanillaConfigBeans: " + vanillaConfigBeans);  log.debug("yarnConfigBeans: " + yarnConfigBeans);} @AT@ 4528 @LENGTH@ 122
---------INS SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration conf @TO@ EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : yarnConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @AT@ 4533 @LENGTH@ 41
------------INS SimpleType@@org.apache.hadoop.conf.Configuration @TO@ SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration conf @AT@ 4533 @LENGTH@ 36
------------INS SimpleName@@conf @TO@ SingleVariableDeclaration@@org.apache.hadoop.conf.Configuration conf @AT@ 4570 @LENGTH@ 4
---------INS MethodInvocation@@yarnConfigBeans.values() @TO@ EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : yarnConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @AT@ 4577 @LENGTH@ 24
------------INS SimpleName@@Name:yarnConfigBeans @TO@ MethodInvocation@@yarnConfigBeans.values() @AT@ 4577 @LENGTH@ 15
------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@yarnConfigBeans.values() @AT@ 4593 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:log.debug(YarnUtils.toString(conf)) @TO@ EnhancedForStatement@@for (org.apache.hadoop.conf.Configuration conf : yarnConfigBeans.values()) {  log.debug(YarnUtils.toString(conf));} @AT@ 4609 @LENGTH@ 36
------------INS MethodInvocation@@log.debug(YarnUtils.toString(conf)) @TO@ ExpressionStatement@@MethodInvocation:log.debug(YarnUtils.toString(conf)) @AT@ 4609 @LENGTH@ 35
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug(YarnUtils.toString(conf)) @AT@ 4609 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:[YarnUtils.toString(conf)] @TO@ MethodInvocation@@log.debug(YarnUtils.toString(conf)) @AT@ 4613 @LENGTH@ 31
------------------INS MethodInvocation@@YarnUtils.toString(conf) @TO@ SimpleName@@MethodName:debug:[YarnUtils.toString(conf)] @AT@ 4619 @LENGTH@ 24
---------------------INS SimpleName@@Name:YarnUtils @TO@ MethodInvocation@@YarnUtils.toString(conf) @AT@ 4619 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:toString:[conf] @TO@ MethodInvocation@@YarnUtils.toString(conf) @AT@ 4629 @LENGTH@ 14
------------------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:toString:[conf] @AT@ 4638 @LENGTH@ 4


UPD FieldDeclaration@@private, A, [api] @TO@ private, transient, A, [api] @AT@ 1484 @LENGTH@ 14
---INS Modifier@@transient @TO@ FieldDeclaration@@private, A, [api] @AT@ 1502 @LENGTH@ 9


UPD VariableDeclarationStatement@@Point reference=new Point(10.8,20.9); @TO@ Point reference=new Point(20.9,10.8); @AT@ 1117 @LENGTH@ 40
---UPD VariableDeclarationFragment@@reference=new Point(10.8,20.9) @TO@ reference=new Point(20.9,10.8) @AT@ 1123 @LENGTH@ 33
------UPD ClassInstanceCreation@@Point[10.8, 20.9] @TO@ Point[20.9, 10.8] @AT@ 1135 @LENGTH@ 21
---------INS NumberLiteral@@20.9 @TO@ ClassInstanceCreation@@Point[10.8, 20.9] @AT@ 1145 @LENGTH@ 4
---------DEL NumberLiteral@@20.9 @AT@ 1151 @LENGTH@ 4


UPD IfStatement@@if (asMech != null) {  builder.append("AS_ContextSec[");  builder.append("client_authentication_mech: ");  try {    builder.append(new String(asMech.client_authentication_mech,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_name: ");  try {    builder.append(new String(asMech.target_name,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_requires: ");  builder.append(asMech.target_requires);  builder.append(", target_supports: ");  builder.append(asMech.target_supports);  builder.append("]");} @TO@ if (asMech != null) {  builder.append("AS_ContextSec[");  builder.append("client_authentication_mech: ");  builder.append(new String(asMech.client_authentication_mech,StandardCharsets.UTF_8));  builder.append(", target_name: ");  builder.append(new String(asMech.target_name,StandardCharsets.UTF_8));  builder.append(", target_requires: ");  builder.append(asMech.target_requires);  builder.append(", target_supports: ");  builder.append(asMech.target_supports);  builder.append("]");} @AT@ 34278 @LENGTH@ 931
---UPD Block@@ThenBody:{  builder.append("AS_ContextSec[");  builder.append("client_authentication_mech: ");  try {    builder.append(new String(asMech.client_authentication_mech,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_name: ");  try {    builder.append(new String(asMech.target_name,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_requires: ");  builder.append(asMech.target_requires);  builder.append(", target_supports: ");  builder.append(asMech.target_supports);  builder.append("]");} @TO@ ThenBody:{  builder.append("AS_ContextSec[");  builder.append("client_authentication_mech: ");  builder.append(new String(asMech.client_authentication_mech,StandardCharsets.UTF_8));  builder.append(", target_name: ");  builder.append(new String(asMech.target_name,StandardCharsets.UTF_8));  builder.append(", target_requires: ");  builder.append(asMech.target_requires);  builder.append(", target_supports: ");  builder.append(asMech.target_supports);  builder.append("]");} @AT@ 34298 @LENGTH@ 911
------INS ExpressionStatement@@MethodInvocation:builder.append(new String(asMech.client_authentication_mech,StandardCharsets.UTF_8)) @TO@ Block@@ThenBody:{  builder.append("AS_ContextSec[");  builder.append("client_authentication_mech: ");  try {    builder.append(new String(asMech.client_authentication_mech,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_name: ");  try {    builder.append(new String(asMech.target_name,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_requires: ");  builder.append(asMech.target_requires);  builder.append(", target_supports: ");  builder.append(asMech.target_supports);  builder.append("]");} @AT@ 34428 @LENGTH@ 86
---------MOV MethodInvocation@@builder.append(new String(asMech.client_authentication_mech,"UTF-8")) @TO@ ExpressionStatement@@MethodInvocation:builder.append(new String(asMech.client_authentication_mech,StandardCharsets.UTF_8)) @AT@ 34457 @LENGTH@ 70
------DEL TryStatement@@try {  builder.append(new String(asMech.client_authentication_mech,"UTF-8"));} catch (UnsupportedEncodingException e) {  builder.append(e.getMessage());} @AT@ 34431 @LENGTH@ 226
---------DEL ExpressionStatement@@MethodInvocation:builder.append(new String(asMech.client_authentication_mech,"UTF-8")) @AT@ 34457 @LENGTH@ 71
---------DEL CatchClause@@catch (UnsupportedEncodingException e) {  builder.append(e.getMessage());} @AT@ 34547 @LENGTH@ 110
------------DEL SingleVariableDeclaration@@UnsupportedEncodingException e @AT@ 34554 @LENGTH@ 30
---------------DEL SimpleType@@UnsupportedEncodingException @AT@ 34554 @LENGTH@ 28
---------------DEL SimpleName@@e @AT@ 34583 @LENGTH@ 1
------------DEL ExpressionStatement@@MethodInvocation:builder.append(e.getMessage()) @AT@ 34608 @LENGTH@ 31
---------------DEL MethodInvocation@@builder.append(e.getMessage()) @AT@ 34608 @LENGTH@ 30
------------------DEL SimpleName@@Name:builder @AT@ 34608 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:append:[e.getMessage()] @AT@ 34616 @LENGTH@ 22
---------------------DEL MethodInvocation@@e.getMessage() @AT@ 34623 @LENGTH@ 14
------------------------DEL SimpleName@@Name:e @AT@ 34623 @LENGTH@ 1
------------------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 34625 @LENGTH@ 12
------INS ExpressionStatement@@MethodInvocation:builder.append(new String(asMech.target_name,StandardCharsets.UTF_8)) @TO@ Block@@ThenBody:{  builder.append("AS_ContextSec[");  builder.append("client_authentication_mech: ");  try {    builder.append(new String(asMech.client_authentication_mech,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_name: ");  try {    builder.append(new String(asMech.target_name,"UTF-8"));  } catch (  UnsupportedEncodingException e) {    builder.append(e.getMessage());  }  builder.append(", target_requires: ");  builder.append(asMech.target_requires);  builder.append(", target_supports: ");  builder.append(asMech.target_supports);  builder.append("]");} @AT@ 34582 @LENGTH@ 71
---------MOV MethodInvocation@@builder.append(new String(asMech.target_name,"UTF-8")) @TO@ ExpressionStatement@@MethodInvocation:builder.append(new String(asMech.target_name,StandardCharsets.UTF_8)) @AT@ 34751 @LENGTH@ 55
------DEL TryStatement@@try {  builder.append(new String(asMech.target_name,"UTF-8"));} catch (UnsupportedEncodingException e) {  builder.append(e.getMessage());} @AT@ 34725 @LENGTH@ 211
---------DEL ExpressionStatement@@MethodInvocation:builder.append(new String(asMech.target_name,"UTF-8")) @AT@ 34751 @LENGTH@ 56
---------DEL CatchClause@@catch (UnsupportedEncodingException e) {  builder.append(e.getMessage());} @AT@ 34826 @LENGTH@ 110
------------DEL SingleVariableDeclaration@@UnsupportedEncodingException e @AT@ 34833 @LENGTH@ 30
---------------DEL SimpleType@@UnsupportedEncodingException @AT@ 34833 @LENGTH@ 28
---------------DEL SimpleName@@e @AT@ 34862 @LENGTH@ 1
------------DEL ExpressionStatement@@MethodInvocation:builder.append(e.getMessage()) @AT@ 34887 @LENGTH@ 31
---------------DEL MethodInvocation@@builder.append(e.getMessage()) @AT@ 34887 @LENGTH@ 30
------------------DEL SimpleName@@Name:builder @AT@ 34887 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:append:[e.getMessage()] @AT@ 34895 @LENGTH@ 22
---------------------DEL MethodInvocation@@e.getMessage() @AT@ 34902 @LENGTH@ 14
------------------------DEL SimpleName@@Name:e @AT@ 34902 @LENGTH@ 1
------------------------DEL SimpleName@@MethodName:getMessage:[] @AT@ 34904 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></group></ns:testroot>",content) @TO@ MethodInvocation:assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></ns:group></ns:testroot>",content) @AT@ 25441 @LENGTH@ 228
---UPD MethodInvocation@@assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></group></ns:testroot>",content) @TO@ assertEquals("Wrong content: " + content,"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></ns:group></ns:testroot>",content) @AT@ 25441 @LENGTH@ 227
------UPD SimpleName@@MethodName:assertEquals:["Wrong content: " + content, "<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></group></ns:testroot>", content] @TO@ MethodName:assertEquals:["Wrong content: " + content, "<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></ns:group></ns:testroot>", content] @AT@ 25441 @LENGTH@ 227
---------UPD InfixExpression@@"<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></group></ns:testroot>" @TO@ "<ns:testroot xmlns:ns=\"http://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></ns:group></ns:testroot>" @AT@ 25487 @LENGTH@ 171
------------UPD StringLiteral@@"<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></group></ns:testroot>" @TO@ "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></ns:group></ns:testroot>" @AT@ 25558 @LENGTH@ 100


INS MethodDeclaration@@public, void, MethodName:testXmlElementConstructorWithoutVersionWithOneDependency, Exception,  @TO@ TypeDeclaration@@[public]PluginTest, XmlTestCase @AT@ 12017 @LENGTH@ 430
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testXmlElementConstructorWithoutVersionWithOneDependency, Exception,  @AT@ 12017 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testXmlElementConstructorWithoutVersionWithOneDependency, Exception,  @AT@ 12024 @LENGTH@ 4
---INS SimpleName@@MethodName:testXmlElementConstructorWithoutVersionWithOneDependency @TO@ MethodDeclaration@@public, void, MethodName:testXmlElementConstructorWithoutVersionWithOneDependency, Exception,  @AT@ 12029 @LENGTH@ 56
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testXmlElementConstructorWithoutVersionWithOneDependency, Exception,  @AT@ 12095 @LENGTH@ 9
---INS VariableDeclarationStatement@@final Dependency expectedDependency=new Dependency(DEPENDENCY_GROUP_ID,DEPENDENCY_ARTIFACT_ID,DEPENDENCY_VERSION); @TO@ MethodDeclaration@@public, void, MethodName:testXmlElementConstructorWithoutVersionWithOneDependency, Exception,  @AT@ 12115 @LENGTH@ 135
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Dependency expectedDependency=new Dependency(DEPENDENCY_GROUP_ID,DEPENDENCY_ARTIFACT_ID,DEPENDENCY_VERSION); @AT@ 12115 @LENGTH@ 5
------INS SimpleType@@Dependency @TO@ VariableDeclarationStatement@@final Dependency expectedDependency=new Dependency(DEPENDENCY_GROUP_ID,DEPENDENCY_ARTIFACT_ID,DEPENDENCY_VERSION); @AT@ 12121 @LENGTH@ 10
------INS VariableDeclarationFragment@@expectedDependency=new Dependency(DEPENDENCY_GROUP_ID,DEPENDENCY_ARTIFACT_ID,DEPENDENCY_VERSION) @TO@ VariableDeclarationStatement@@final Dependency expectedDependency=new Dependency(DEPENDENCY_GROUP_ID,DEPENDENCY_ARTIFACT_ID,DEPENDENCY_VERSION); @AT@ 12132 @LENGTH@ 117
---------INS SimpleName@@expectedDependency @TO@ VariableDeclarationFragment@@expectedDependency=new Dependency(DEPENDENCY_GROUP_ID,DEPENDENCY_ARTIFACT_ID,DEPENDENCY_VERSION) @AT@ 12132 @LENGTH@ 18
---------INS ClassInstanceCreation@@Dependency[DEPENDENCY_GROUP_ID, DEPENDENCY_ARTIFACT_ID, DEPENDENCY_VERSION] @TO@ VariableDeclarationFragment@@expectedDependency=new Dependency(DEPENDENCY_GROUP_ID,DEPENDENCY_ARTIFACT_ID,DEPENDENCY_VERSION) @AT@ 12153 @LENGTH@ 96
------------INS New@@new @TO@ ClassInstanceCreation@@Dependency[DEPENDENCY_GROUP_ID, DEPENDENCY_ARTIFACT_ID, DEPENDENCY_VERSION] @AT@ 12153 @LENGTH@ 3
------------INS SimpleType@@Dependency @TO@ ClassInstanceCreation@@Dependency[DEPENDENCY_GROUP_ID, DEPENDENCY_ARTIFACT_ID, DEPENDENCY_VERSION] @AT@ 12157 @LENGTH@ 10
------------INS SimpleName@@DEPENDENCY_GROUP_ID @TO@ ClassInstanceCreation@@Dependency[DEPENDENCY_GROUP_ID, DEPENDENCY_ARTIFACT_ID, DEPENDENCY_VERSION] @AT@ 12185 @LENGTH@ 19
------------INS SimpleName@@DEPENDENCY_ARTIFACT_ID @TO@ ClassInstanceCreation@@Dependency[DEPENDENCY_GROUP_ID, DEPENDENCY_ARTIFACT_ID, DEPENDENCY_VERSION] @AT@ 12206 @LENGTH@ 22
------------INS SimpleName@@DEPENDENCY_VERSION @TO@ ClassInstanceCreation@@Dependency[DEPENDENCY_GROUP_ID, DEPENDENCY_ARTIFACT_ID, DEPENDENCY_VERSION] @AT@ 12230 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertPluginFromXml(PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY,"com.example","ball-of-mud","",null,Arrays.asList(expectedDependency),NO_EXECUTIONS) @TO@ MethodDeclaration@@public, void, MethodName:testXmlElementConstructorWithoutVersionWithOneDependency, Exception,  @AT@ 12259 @LENGTH@ 182
------INS MethodInvocation@@assertPluginFromXml(PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY,"com.example","ball-of-mud","",null,Arrays.asList(expectedDependency),NO_EXECUTIONS) @TO@ ExpressionStatement@@MethodInvocation:assertPluginFromXml(PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY,"com.example","ball-of-mud","",null,Arrays.asList(expectedDependency),NO_EXECUTIONS) @AT@ 12259 @LENGTH@ 181
---------INS SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @TO@ MethodInvocation@@assertPluginFromXml(PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY,"com.example","ball-of-mud","",null,Arrays.asList(expectedDependency),NO_EXECUTIONS) @AT@ 12259 @LENGTH@ 181
------------INS SimpleName@@PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY @TO@ SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @AT@ 12279 @LENGTH@ 38
------------INS StringLiteral@@"com.example" @TO@ SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @AT@ 12319 @LENGTH@ 13
------------INS StringLiteral@@"ball-of-mud" @TO@ SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @AT@ 12350 @LENGTH@ 13
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @AT@ 12365 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @AT@ 12369 @LENGTH@ 4
------------INS MethodInvocation@@Arrays.asList(expectedDependency) @TO@ SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @AT@ 12375 @LENGTH@ 33
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(expectedDependency) @AT@ 12375 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[expectedDependency] @TO@ MethodInvocation@@Arrays.asList(expectedDependency) @AT@ 12382 @LENGTH@ 26
------------------INS SimpleName@@expectedDependency @TO@ SimpleName@@MethodName:asList:[expectedDependency] @AT@ 12389 @LENGTH@ 18
------------INS SimpleName@@NO_EXECUTIONS @TO@ SimpleName@@MethodName:assertPluginFromXml:[PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY, "com.example", "ball-of-mud", "", null, Arrays.asList(expectedDependency), NO_EXECUTIONS] @AT@ 12426 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:LOG.info("DocumenterBuilderFactory has been set with features {{}}.",featureString.toString()) @TO@ MethodInvocation:LOG.info("DocumentBuilderFactory has been set with features {{}}.",featureString.toString()) @AT@ 35945 @LENGTH@ 96
---UPD MethodInvocation@@LOG.info("DocumenterBuilderFactory has been set with features {{}}.",featureString.toString()) @TO@ LOG.info("DocumentBuilderFactory has been set with features {{}}.",featureString.toString()) @AT@ 35945 @LENGTH@ 95
------UPD SimpleName@@MethodName:info:["DocumenterBuilderFactory has been set with features {{}}.", featureString.toString()] @TO@ MethodName:info:["DocumentBuilderFactory has been set with features {{}}.", featureString.toString()] @AT@ 35949 @LENGTH@ 91
---------UPD StringLiteral@@"DocumenterBuilderFactory has been set with features {{}}." @TO@ "DocumentBuilderFactory has been set with features {{}}." @AT@ 35954 @LENGTH@ 59


UPD VariableDeclarationStatement@@String key=address.getElement(2).getKey(); @TO@ PathAddress newAddr=PathAddress.EMPTY_ADDRESS; @AT@ 41885 @LENGTH@ 44


UPD ExpressionStatement@@Assignment:this.rel=annotation != null ? annotation.rel() : method.getName() @TO@ Assignment:this.rel=annotation == null || !StringUtils.hasText(annotation.rel()) ? method.getName() : annotation.rel() @AT@ 2411 @LENGTH@ 68
---UPD Assignment@@this.rel=annotation != null ? annotation.rel() : method.getName() @TO@ this.rel=annotation == null || !StringUtils.hasText(annotation.rel()) ? method.getName() : annotation.rel() @AT@ 2411 @LENGTH@ 67
------UPD ConditionalExpression@@annotation != null ? annotation.rel() : method.getName() @TO@ annotation == null || !StringUtils.hasText(annotation.rel()) ? method.getName() : annotation.rel() @AT@ 2422 @LENGTH@ 56
---------DEL InfixExpression@@annotation != null @AT@ 2422 @LENGTH@ 18
---------INS InfixExpression@@annotation == null || !StringUtils.hasText(annotation.rel()) @TO@ ConditionalExpression@@annotation != null ? annotation.rel() : method.getName() @AT@ 2422 @LENGTH@ 60
------------INS InfixExpression@@annotation == null @TO@ InfixExpression@@annotation == null || !StringUtils.hasText(annotation.rel()) @AT@ 2422 @LENGTH@ 18
---------------MOV SimpleName@@annotation @TO@ InfixExpression@@annotation == null @AT@ 2422 @LENGTH@ 10
---------------MOV Operator@@!= @TO@ InfixExpression@@annotation == null @AT@ 2432 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@annotation == null @AT@ 2436 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@annotation == null || !StringUtils.hasText(annotation.rel()) @AT@ 2440 @LENGTH@ 2
------------INS PrefixExpression@@!StringUtils.hasText(annotation.rel()) @TO@ InfixExpression@@annotation == null || !StringUtils.hasText(annotation.rel()) @AT@ 2444 @LENGTH@ 38
---------------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(annotation.rel()) @AT@ 2444 @LENGTH@ 1
---------------INS MethodInvocation@@StringUtils.hasText(annotation.rel()) @TO@ PrefixExpression@@!StringUtils.hasText(annotation.rel()) @AT@ 2445 @LENGTH@ 37
------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(annotation.rel()) @AT@ 2445 @LENGTH@ 11
------------------INS SimpleName@@MethodName:hasText:[annotation.rel()] @TO@ MethodInvocation@@StringUtils.hasText(annotation.rel()) @AT@ 2457 @LENGTH@ 25
---------------------INS MethodInvocation@@annotation.rel() @TO@ SimpleName@@MethodName:hasText:[annotation.rel()] @AT@ 2465 @LENGTH@ 16
------------------------MOV SimpleName@@Name:annotation @TO@ MethodInvocation@@annotation.rel() @AT@ 2443 @LENGTH@ 10
------------------------MOV SimpleName@@Name:annotation @TO@ MethodInvocation@@annotation.rel() @AT@ 2443 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:rel:[] @TO@ MethodInvocation@@annotation.rel() @AT@ 2454 @LENGTH@ 5
------------------------MOV SimpleName@@MethodName:rel:[] @TO@ MethodInvocation@@annotation.rel() @AT@ 2454 @LENGTH@ 5
---------DEL MethodInvocation@@annotation.rel() @AT@ 2443 @LENGTH@ 16
---------INS MethodInvocation@@annotation.rel() @TO@ ConditionalExpression@@annotation != null ? annotation.rel() : method.getName() @AT@ 2504 @LENGTH@ 16
------------INS SimpleName@@Name:annotation @TO@ MethodInvocation@@annotation.rel() @AT@ 2504 @LENGTH@ 10
------------INS SimpleName@@MethodName:rel:[] @TO@ MethodInvocation@@annotation.rel() @AT@ 2515 @LENGTH@ 5


DEL FieldDeclaration@@private, AggregationStrategyBeanAdapter, [myStrategy] @AT@ 1255 @LENGTH@ 50
---DEL Modifier@@private @AT@ 1255 @LENGTH@ 7
---DEL SimpleType@@AggregationStrategyBeanAdapter @AT@ 1263 @LENGTH@ 30
---DEL VariableDeclarationFragment@@myStrategy @AT@ 1294 @LENGTH@ 10
------DEL SimpleName@@myStrategy @AT@ 1294 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 12049 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 12056 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 12073 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 12086 @LENGTH@ 202
------------DEL New@@new @AT@ 12086 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 12090 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 12090 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 12107 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 12127 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 12163 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 12163 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 12170 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 12187 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 12173 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 12173 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 12197 @LENGTH@ 10


UPD VariableDeclarationStatement@@boolean match1=("image/jpeg; name=logo.jpeg").equals(handler.getContentType()); @TO@ boolean match1="image/jpeg; name=logo.jpeg".equals(handler.getContentType()); @AT@ 3292 @LENGTH@ 81
---UPD VariableDeclarationFragment@@match1=("image/jpeg; name=logo.jpeg").equals(handler.getContentType()) @TO@ match1="image/jpeg; name=logo.jpeg".equals(handler.getContentType()) @AT@ 3300 @LENGTH@ 72
------UPD MethodInvocation@@("image/jpeg; name=logo.jpeg").equals(handler.getContentType()) @TO@ "image/jpeg; name=logo.jpeg".equals(handler.getContentType()) @AT@ 3309 @LENGTH@ 63
---------DEL ParenthesizedExpression@@("image/jpeg; name=logo.jpeg") @AT@ 3309 @LENGTH@ 30
------------DEL StringLiteral@@"image/jpeg; name=logo.jpeg" @AT@ 3310 @LENGTH@ 28
---------INS StringLiteral@@"image/jpeg; name=logo.jpeg" @TO@ MethodInvocation@@("image/jpeg; name=logo.jpeg").equals(handler.getContentType()) @AT@ 3309 @LENGTH@ 28


DEL ExpressionStatement@@Assignment:this.stopProxy=stopProxy @AT@ 2472 @LENGTH@ 27
---DEL Assignment@@this.stopProxy=stopProxy @AT@ 2472 @LENGTH@ 26
------DEL FieldAccess@@this.stopProxy @AT@ 2472 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 2472 @LENGTH@ 4
---------DEL SimpleName@@stopProxy @AT@ 2477 @LENGTH@ 9
------DEL Operator@@= @AT@ 2486 @LENGTH@ 1
------DEL SimpleName@@stopProxy @AT@ 2489 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4458 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4465 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 4482 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 4495 @LENGTH@ 202
------------DEL New@@new @AT@ 4495 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 4499 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 4499 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 4516 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 4536 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 4572 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 4572 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 4579 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 4596 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 4581 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4581 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4605 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:queue.setAdminsThatShouldDeclare((AmqpAdmin[])null) @TO@ MethodInvocation:queue.setAdminsThatShouldDeclare((Object[])null) @AT@ 13472 @LENGTH@ 53
---UPD MethodInvocation@@queue.setAdminsThatShouldDeclare((AmqpAdmin[])null) @TO@ queue.setAdminsThatShouldDeclare((Object[])null) @AT@ 13472 @LENGTH@ 52
------UPD SimpleName@@MethodName:setAdminsThatShouldDeclare:[(AmqpAdmin[])null] @TO@ MethodName:setAdminsThatShouldDeclare:[(Object[])null] @AT@ 13478 @LENGTH@ 46
---------UPD CastExpression@@(AmqpAdmin[])null @TO@ (Object[])null @AT@ 13505 @LENGTH@ 18
------------UPD ArrayType@@AmqpAdmin[] @TO@ Object[] @AT@ 13506 @LENGTH@ 11
---------------UPD SimpleType@@AmqpAdmin @TO@ Object @AT@ 13506 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:ALL_CHANNELS.remove(channel) @TO@ MethodDeclaration@@public, void, MethodName:destroyObject, Channel channel, Exception,  @AT@ 21654 @LENGTH@ 29
---INS MethodInvocation@@ALL_CHANNELS.remove(channel) @TO@ ExpressionStatement@@MethodInvocation:ALL_CHANNELS.remove(channel) @AT@ 21654 @LENGTH@ 28
------INS SimpleName@@Name:ALL_CHANNELS @TO@ MethodInvocation@@ALL_CHANNELS.remove(channel) @AT@ 21654 @LENGTH@ 12
------INS SimpleName@@MethodName:remove:[channel] @TO@ MethodInvocation@@ALL_CHANNELS.remove(channel) @AT@ 21667 @LENGTH@ 15
---------INS SimpleName@@channel @TO@ SimpleName@@MethodName:remove:[channel] @AT@ 21674 @LENGTH@ 7


UPD IfStatement@@if (headerRow != null) {  models.add(models.size(),footerRow);} @TO@ if (footerRow != null) {  models.add(models.size(),footerRow);} @AT@ 4389 @LENGTH@ 84
---UPD InfixExpression@@headerRow != null @TO@ footerRow != null @AT@ 4393 @LENGTH@ 17
------UPD SimpleName@@headerRow @TO@ footerRow @AT@ 4393 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2Request(requestParameters,clientId,authorities,approved,new HashSet<String>(scope),resourceIds,redirectUri,responseTypes,extensionProperties) @TO@ ClassInstanceCreation:new OAuth2Request(requestParameters,clientId,authorities,approved,scope == null ? null : new LinkedHashSet<String>(scope),resourceIds,redirectUri,responseTypes,extensionProperties) @AT@ 1215 @LENGTH@ 171
---UPD ClassInstanceCreation@@OAuth2Request[requestParameters, clientId, authorities, approved, new HashSet<String>(scope), resourceIds, redirectUri, responseTypes, extensionProperties] @TO@ OAuth2Request[requestParameters, clientId, authorities, approved, scope == null ? null : new LinkedHashSet<String>(scope), resourceIds, redirectUri, responseTypes, extensionProperties] @AT@ 1222 @LENGTH@ 163
------DEL ClassInstanceCreation@@HashSet<String>[scope] @AT@ 1292 @LENGTH@ 26
------INS ConditionalExpression@@scope == null ? null : new LinkedHashSet<String>(scope) @TO@ ClassInstanceCreation@@OAuth2Request[requestParameters, clientId, authorities, approved, new HashSet<String>(scope), resourceIds, redirectUri, responseTypes, extensionProperties] @AT@ 1298 @LENGTH@ 53
---------INS InfixExpression@@scope == null @TO@ ConditionalExpression@@scope == null ? null : new LinkedHashSet<String>(scope) @AT@ 1298 @LENGTH@ 11
------------INS SimpleName@@scope @TO@ InfixExpression@@scope == null @AT@ 1298 @LENGTH@ 5
------------INS Operator@@== @TO@ InfixExpression@@scope == null @AT@ 1303 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@scope == null @AT@ 1305 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@scope == null ? null : new LinkedHashSet<String>(scope) @AT@ 1312 @LENGTH@ 4
---------INS ClassInstanceCreation@@LinkedHashSet<String>[scope] @TO@ ConditionalExpression@@scope == null ? null : new LinkedHashSet<String>(scope) @AT@ 1319 @LENGTH@ 32
------------MOV New@@new @TO@ ClassInstanceCreation@@LinkedHashSet<String>[scope] @AT@ 1292 @LENGTH@ 3
------------MOV ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@LinkedHashSet<String>[scope] @AT@ 1296 @LENGTH@ 15
---------------UPD SimpleType@@HashSet @TO@ LinkedHashSet @AT@ 1296 @LENGTH@ 7
------------MOV SimpleName@@scope @TO@ ClassInstanceCreation@@LinkedHashSet<String>[scope] @AT@ 1312 @LENGTH@ 5


INS MethodDeclaration@@public, String, MethodName:getMappedKey,  @TO@ TypeDeclaration@@[private, static]MetadataBackedUpdateField, MetadataBackedField @AT@ 6438 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getMappedKey,  @AT@ 6438 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getMappedKey,  @AT@ 6445 @LENGTH@ 6
---INS SimpleName@@MethodName:getMappedKey @TO@ MethodDeclaration@@public, String, MethodName:getMappedKey,  @AT@ 6452 @LENGTH@ 12
---INS ReturnStatement@@ConditionalExpression:this.getPath() == null ? key : super.getMappedKey() @TO@ MethodDeclaration@@public, String, MethodName:getMappedKey,  @AT@ 6472 @LENGTH@ 59
------INS ConditionalExpression@@this.getPath() == null ? key : super.getMappedKey() @TO@ ReturnStatement@@ConditionalExpression:this.getPath() == null ? key : super.getMappedKey() @AT@ 6479 @LENGTH@ 51
---------INS InfixExpression@@this.getPath() == null @TO@ ConditionalExpression@@this.getPath() == null ? key : super.getMappedKey() @AT@ 6479 @LENGTH@ 22
------------INS MethodInvocation@@this.getPath() @TO@ InfixExpression@@this.getPath() == null @AT@ 6479 @LENGTH@ 14
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getPath() @AT@ 6479 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@this.getPath() @AT@ 6484 @LENGTH@ 9
------------INS Operator@@== @TO@ InfixExpression@@this.getPath() == null @AT@ 6493 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.getPath() == null @AT@ 6497 @LENGTH@ 4
---------INS SimpleName@@key @TO@ ConditionalExpression@@this.getPath() == null ? key : super.getMappedKey() @AT@ 6504 @LENGTH@ 3
---------INS SuperMethodInvocation@@super.getMappedKey() @TO@ ConditionalExpression@@this.getPath() == null ? key : super.getMappedKey() @AT@ 6510 @LENGTH@ 20
------------INS SimpleName@@MethodName:getMappedKey:[] @TO@ SuperMethodInvocation@@super.getMappedKey() @AT@ 6516 @LENGTH@ 12


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]SpringYarnConfigurationWithClusterTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, @DirtiesContext(classMode=ClassMode.AFTER_CLASS), public]SpringYarnConfigurationWithClusterTests,  @AT@ 1701 @LENGTH@ 1450
---INS NormalAnnotation@@@DirtiesContext(classMode=ClassMode.AFTER_CLASS) @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]SpringYarnConfigurationWithClusterTests,  @AT@ 1955 @LENGTH@ 48


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Top,  @TO@ [@Data, public]Top, AbstractDockerDTO @AT@ 811 @LENGTH@ 137
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Top,  @AT@ 762 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 817 @LENGTH@ 47


UPD ExpressionStatement@@MethodInvocation:p.put("spring.yarn.client.rawFileContents",content) @TO@ MethodInvocation:p.put("spring.yarn.client.localizer.rawFileContents",content) @AT@ 4392 @LENGTH@ 53
---UPD MethodInvocation@@p.put("spring.yarn.client.rawFileContents",content) @TO@ p.put("spring.yarn.client.localizer.rawFileContents",content) @AT@ 4392 @LENGTH@ 52
------UPD SimpleName@@MethodName:put:["spring.yarn.client.rawFileContents", content] @TO@ MethodName:put:["spring.yarn.client.localizer.rawFileContents", content] @AT@ 4394 @LENGTH@ 50
---------UPD StringLiteral@@"spring.yarn.client.rawFileContents" @TO@ "spring.yarn.client.localizer.rawFileContents" @AT@ 4398 @LENGTH@ 36


UPD VariableDeclarationStatement@@boolean useVariable=StringUtils.hasText(variable) && !variable.startsWith("new") && !variable.startsWith("count("); @TO@ boolean useVariable=StringUtils.hasText(variable) && !variable.startsWith("new") && !variable.startsWith("count(")&& !variable.contains(","); @AT@ 10431 @LENGTH@ 121
---UPD VariableDeclarationFragment@@useVariable=StringUtils.hasText(variable) && !variable.startsWith("new") && !variable.startsWith("count(") @TO@ useVariable=StringUtils.hasText(variable) && !variable.startsWith("new") && !variable.startsWith("count(")&& !variable.contains(",") @AT@ 10439 @LENGTH@ 112
------UPD InfixExpression@@StringUtils.hasText(variable) && !variable.startsWith("new") && !variable.startsWith("count(") @TO@ StringUtils.hasText(variable) && !variable.startsWith("new") && !variable.startsWith("count(")&& !variable.contains(",") @AT@ 10453 @LENGTH@ 98
---------INS PrefixExpression@@!variable.contains(",") @TO@ InfixExpression@@StringUtils.hasText(variable) && !variable.startsWith("new") && !variable.startsWith("count(") @AT@ 10580 @LENGTH@ 23
------------INS Operator@@! @TO@ PrefixExpression@@!variable.contains(",") @AT@ 10580 @LENGTH@ 1
------------INS MethodInvocation@@variable.contains(",") @TO@ PrefixExpression@@!variable.contains(",") @AT@ 10581 @LENGTH@ 22
---------------INS SimpleName@@Name:variable @TO@ MethodInvocation@@variable.contains(",") @AT@ 10581 @LENGTH@ 8
---------------INS SimpleName@@MethodName:contains:[","] @TO@ MethodInvocation@@variable.contains(",") @AT@ 10590 @LENGTH@ 13
------------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:contains:[","] @AT@ 10599 @LENGTH@ 3


DEL VariableDeclarationStatement@@final JarInputStream is=new JarInputStream(new FileInputStream(jar)); @AT@ 6972 @LENGTH@ 71
---DEL Modifier@@final @AT@ 6972 @LENGTH@ 5
---DEL SimpleType@@JarInputStream @AT@ 6978 @LENGTH@ 14
---DEL VariableDeclarationFragment@@is=new JarInputStream(new FileInputStream(jar)) @AT@ 6993 @LENGTH@ 49
------DEL SimpleName@@is @AT@ 6993 @LENGTH@ 2
------DEL ClassInstanceCreation@@JarInputStream[new FileInputStream(jar)] @AT@ 6998 @LENGTH@ 44
---------DEL New@@new @AT@ 6998 @LENGTH@ 3
---------DEL SimpleType@@JarInputStream @AT@ 7002 @LENGTH@ 14
---------DEL ClassInstanceCreation@@FileInputStream[jar] @AT@ 7017 @LENGTH@ 24
------------DEL New@@new @AT@ 7017 @LENGTH@ 3
------------DEL SimpleType@@FileInputStream @AT@ 7021 @LENGTH@ 15
------------DEL SimpleName@@jar @AT@ 7037 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:endpoint.getConnectionFactory() @TO@ MethodInvocation:endpoint.getOrCreateConnectionFactory() @AT@ 6809 @LENGTH@ 39
---UPD MethodInvocation@@endpoint.getConnectionFactory() @TO@ endpoint.getOrCreateConnectionFactory() @AT@ 6816 @LENGTH@ 31
------UPD SimpleName@@MethodName:getConnectionFactory:[] @TO@ MethodName:getOrCreateConnectionFactory:[] @AT@ 6825 @LENGTH@ 22


INS MethodDeclaration@@public, void, MethodName:generatePromptUpdate, String existingPrompt,  @TO@ TypeDeclaration@@[public, abstract]JLineShell, AbstractShell[Shell, Runnable] @AT@ 16939 @LENGTH@ 190
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:generatePromptUpdate, String existingPrompt,  @AT@ 16939 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:generatePromptUpdate, String existingPrompt,  @AT@ 16946 @LENGTH@ 4
---INS SimpleName@@MethodName:generatePromptUpdate @TO@ MethodDeclaration@@public, void, MethodName:generatePromptUpdate, String existingPrompt,  @AT@ 16951 @LENGTH@ 20
---INS SingleVariableDeclaration@@String existingPrompt @TO@ MethodDeclaration@@public, void, MethodName:generatePromptUpdate, String existingPrompt,  @AT@ 16972 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String existingPrompt @AT@ 16972 @LENGTH@ 6
------INS SimpleName@@existingPrompt @TO@ SingleVariableDeclaration@@String existingPrompt @AT@ 16979 @LENGTH@ 14
---INS VariableDeclarationStatement@@String newPrompt=getPromptText(); @TO@ MethodDeclaration@@public, void, MethodName:generatePromptUpdate, String existingPrompt,  @AT@ 16999 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String newPrompt=getPromptText(); @AT@ 16999 @LENGTH@ 6
------INS VariableDeclarationFragment@@newPrompt=getPromptText() @TO@ VariableDeclarationStatement@@String newPrompt=getPromptText(); @AT@ 17006 @LENGTH@ 27
---------INS SimpleName@@newPrompt @TO@ VariableDeclarationFragment@@newPrompt=getPromptText() @AT@ 17006 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:getPromptText:[] @TO@ VariableDeclarationFragment@@newPrompt=getPromptText() @AT@ 17018 @LENGTH@ 15
---INS IfStatement@@if (!ObjectUtils.nullSafeEquals(existingPrompt,newPrompt)) {  setPromptPath(null);} @TO@ MethodDeclaration@@public, void, MethodName:generatePromptUpdate, String existingPrompt,  @AT@ 17037 @LENGTH@ 89
------MOV Block@@ThenBody:{  prompt=newPrmpt;  setPromptPath(null);} @TO@ IfStatement@@if (!ObjectUtils.nullSafeEquals(existingPrompt,newPrompt)) {  setPromptPath(null);} @AT@ 16479 @LENGTH@ 57
---------DEL ExpressionStatement@@Assignment:prompt=newPrmpt @AT@ 16486 @LENGTH@ 18
------------DEL Assignment@@prompt=newPrmpt @AT@ 16486 @LENGTH@ 17
---------------DEL SimpleName@@prompt @AT@ 16486 @LENGTH@ 6
---------------DEL Operator@@= @AT@ 16492 @LENGTH@ 1
---------------DEL SimpleName@@newPrmpt @AT@ 16495 @LENGTH@ 8
------INS PrefixExpression@@!ObjectUtils.nullSafeEquals(existingPrompt,newPrompt) @TO@ IfStatement@@if (!ObjectUtils.nullSafeEquals(existingPrompt,newPrompt)) {  setPromptPath(null);} @AT@ 17041 @LENGTH@ 54
---------INS Operator@@! @TO@ PrefixExpression@@!ObjectUtils.nullSafeEquals(existingPrompt,newPrompt) @AT@ 17041 @LENGTH@ 1
---------INS MethodInvocation@@ObjectUtils.nullSafeEquals(existingPrompt,newPrompt) @TO@ PrefixExpression@@!ObjectUtils.nullSafeEquals(existingPrompt,newPrompt) @AT@ 17042 @LENGTH@ 53
------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(existingPrompt,newPrompt) @AT@ 17042 @LENGTH@ 11
------------INS SimpleName@@MethodName:nullSafeEquals:[existingPrompt, newPrompt] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(existingPrompt,newPrompt) @AT@ 17054 @LENGTH@ 41
---------------INS SimpleName@@existingPrompt @TO@ SimpleName@@MethodName:nullSafeEquals:[existingPrompt, newPrompt] @AT@ 17069 @LENGTH@ 14
---------------INS SimpleName@@newPrompt @TO@ SimpleName@@MethodName:nullSafeEquals:[existingPrompt, newPrompt] @AT@ 17085 @LENGTH@ 9


UPD VariableDeclarationStatement@@Set<String> serviceUrls=value.getServiceUrls(); @TO@ Collection<String> serviceUrls=value.getServiceUrls(); @AT@ 8472 @LENGTH@ 49
---UPD ParameterizedType@@Set<String> @TO@ Collection<String> @AT@ 8472 @LENGTH@ 11
------UPD SimpleType@@Set @TO@ Collection @AT@ 8472 @LENGTH@ 3


UPD TypeDeclaration@@[public]FsShell, [Closeable, DisposableBean] @TO@ [@SuppressWarnings("deprecation"), public]FsShell, [Closeable, DisposableBean] @AT@ 2757 @LENGTH@ 28169
---INS SingleMemberAnnotation@@@SuppressWarnings("deprecation") @TO@ TypeDeclaration@@[public]FsShell, [Closeable, DisposableBean] @AT@ 2749 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:answer.put(DataStore.ContainerAttribute.SpringStatus.name(),getBlueprintStatus().name()) @TO@ MethodInvocation:answer.put(DataStore.ContainerAttribute.SpringStatus.name(),getSpringStatus().name()) @AT@ 23599 @LENGTH@ 90
---UPD MethodInvocation@@answer.put(DataStore.ContainerAttribute.SpringStatus.name(),getBlueprintStatus().name()) @TO@ answer.put(DataStore.ContainerAttribute.SpringStatus.name(),getSpringStatus().name()) @AT@ 23599 @LENGTH@ 89
------UPD SimpleName@@MethodName:put:[DataStore.ContainerAttribute.SpringStatus.name(), getBlueprintStatus().name()] @TO@ MethodName:put:[DataStore.ContainerAttribute.SpringStatus.name(), getSpringStatus().name()] @AT@ 23606 @LENGTH@ 82
---------UPD MethodInvocation@@getBlueprintStatus().name() @TO@ getSpringStatus().name() @AT@ 23660 @LENGTH@ 27
------------UPD MethodInvocation@@MethodName:getBlueprintStatus:[] @TO@ MethodName:getSpringStatus:[] @AT@ 23660 @LENGTH@ 20


INS MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @TO@ TypeDeclaration@@[public]JredisConnection, [RedisConnection] @AT@ 30219 @LENGTH@ 155
---INS Modifier@@public @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 30219 @LENGTH@ 6
---INS ParameterizedType@@Cursor<byte[]> @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 30226 @LENGTH@ 14
------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 30226 @LENGTH@ 6
------INS ArrayType@@byte[] @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 30233 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 30233 @LENGTH@ 4
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 30241 @LENGTH@ 5
---INS SingleVariableDeclaration@@byte[] key @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 30247 @LENGTH@ 10
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] key @AT@ 30247 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 30247 @LENGTH@ 4
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@byte[] key @AT@ 30254 @LENGTH@ 3
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 30259 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 30259 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 30271 @LENGTH@ 7
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("'SSCAN' command is not uspported for jredis") @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 30284 @LENGTH@ 87
------INS ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not uspported for jredis"] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("'SSCAN' command is not uspported for jredis") @AT@ 30290 @LENGTH@ 80
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not uspported for jredis"] @AT@ 30290 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not uspported for jredis"] @AT@ 30294 @LENGTH@ 29
---------INS StringLiteral@@"'SSCAN' command is not uspported for jredis" @TO@ ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not uspported for jredis"] @AT@ 30324 @LENGTH@ 45


INS MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @TO@ TypeDeclaration@@[public]SrpConnection, [RedisConnection] @AT@ 62400 @LENGTH@ 153
---INS Modifier@@public @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 62400 @LENGTH@ 6
---INS ParameterizedType@@Cursor<byte[]> @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 62407 @LENGTH@ 14
------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 62407 @LENGTH@ 6
------INS ArrayType@@byte[] @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 62414 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 62414 @LENGTH@ 4
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 62422 @LENGTH@ 5
---INS SingleVariableDeclaration@@byte[] key @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 62428 @LENGTH@ 10
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] key @AT@ 62428 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 62428 @LENGTH@ 4
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@byte[] key @AT@ 62435 @LENGTH@ 3
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 62440 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 62440 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 62452 @LENGTH@ 7
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("'SSCAN' command is not supported for Srp.") @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 62465 @LENGTH@ 85
------INS ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not supported for Srp."] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("'SSCAN' command is not supported for Srp.") @AT@ 62471 @LENGTH@ 78
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not supported for Srp."] @AT@ 62471 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not supported for Srp."] @AT@ 62475 @LENGTH@ 29
---------INS StringLiteral@@"'SSCAN' command is not supported for Srp." @TO@ ClassInstanceCreation@@UnsupportedOperationException["'SSCAN' command is not supported for Srp."] @AT@ 62505 @LENGTH@ 43


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[public, final]EndpointPublisherImpl, [EndpointPublisher] @AT@ 16705 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 16705 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 16713 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 16720 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 16737 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 16773 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 16776 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 16776 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 16776 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 16783 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 16803 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 16807 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 16813 @LENGTH@ 77
---------INS ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 16827 @LENGTH@ 53
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 16834 @LENGTH@ 45
---------------INS SimpleName@@Name:CurrentServiceContainer @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 16834 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 16858 @LENGTH@ 21
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 16899 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 16906 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 16906 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 16923 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 16936 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 16936 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 16960 @LENGTH@ 10


DEL IfStatement@@if (!context.isBooting()) {  HttpManagementRemoveHandler.removeHttpManagementService(context);} @AT@ 4855 @LENGTH@ 115
---DEL PrefixExpression@@!context.isBooting() @AT@ 4859 @LENGTH@ 20
------DEL Operator@@! @AT@ 4859 @LENGTH@ 1
------DEL MethodInvocation@@context.isBooting() @AT@ 4860 @LENGTH@ 19
---------DEL SimpleName@@Name:context @AT@ 4860 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isBooting:[] @AT@ 4868 @LENGTH@ 11
---DEL Block@@ThenBody:{  HttpManagementRemoveHandler.removeHttpManagementService(context);} @AT@ 4881 @LENGTH@ 89
------DEL ExpressionStatement@@MethodInvocation:HttpManagementRemoveHandler.removeHttpManagementService(context) @AT@ 4895 @LENGTH@ 65
---------DEL MethodInvocation@@HttpManagementRemoveHandler.removeHttpManagementService(context) @AT@ 4895 @LENGTH@ 64
------------DEL SimpleName@@Name:HttpManagementRemoveHandler @AT@ 4895 @LENGTH@ 27
------------DEL SimpleName@@MethodName:removeHttpManagementService:[context] @AT@ 4923 @LENGTH@ 36
---------------DEL SimpleName@@context @AT@ 4951 @LENGTH@ 7


UPD IfStatement@@if (query.hasLikeBindings()) {  LikeBinding binding=getBindingFor(jpaQuery,position,methodParameter);  if (binding != null) {    valueToBind=binding.prepare(valueToBind);  }} @TO@ if (query.hasParameterBindings()) {  ParameterBinding binding=getBindingFor(jpaQuery,position,methodParameter);  if (binding != null) {    valueToBind=binding.prepare(valueToBind);  }} @AT@ 2157 @LENGTH@ 192
---UPD MethodInvocation@@query.hasLikeBindings() @TO@ query.hasParameterBindings() @AT@ 2161 @LENGTH@ 23
------UPD SimpleName@@MethodName:hasLikeBindings:[] @TO@ MethodName:hasParameterBindings:[] @AT@ 2167 @LENGTH@ 17
---UPD Block@@ThenBody:{  LikeBinding binding=getBindingFor(jpaQuery,position,methodParameter);  if (binding != null) {    valueToBind=binding.prepare(valueToBind);  }} @TO@ ThenBody:{  ParameterBinding binding=getBindingFor(jpaQuery,position,methodParameter);  if (binding != null) {    valueToBind=binding.prepare(valueToBind);  }} @AT@ 2186 @LENGTH@ 163
------UPD VariableDeclarationStatement@@LikeBinding binding=getBindingFor(jpaQuery,position,methodParameter); @TO@ ParameterBinding binding=getBindingFor(jpaQuery,position,methodParameter); @AT@ 2192 @LENGTH@ 73
---------UPD SimpleType@@LikeBinding @TO@ ParameterBinding @AT@ 2192 @LENGTH@ 11


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ImageInfo,  @TO@ [@Data, public]ImageInfo, AbstractDockerDTO @AT@ 863 @LENGTH@ 256
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ImageInfo,  @AT@ 820 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 869 @LENGTH@ 47


UPD TypeDeclaration@@[@Command(name=JoinCommand.FUNCTION_VALUE,scope=JoinCommand.SCOPE_VALUE,description=CreateCommand.DESCRIPTION,detailedDescription="classpath:join.txt"), @Component(immediate=true,policy=ConfigurationPolicy.OPTIONAL), @Service({Function.class,JoinAvailable.class}), @org.apache.felix.scr.annotations.Properties({@Property(name="osgi.command.scope",value=JoinCommand.SCOPE_VALUE),@Property(name="osgi.command.function",value=JoinCommand.FUNCTION_VALUE)}), public]JoinCommand, AbstractCommandComponent[JoinAvailable] @TO@ [@Command(name=JoinCommand.FUNCTION_VALUE,scope=JoinCommand.SCOPE_VALUE,description=CreateCommand.DESCRIPTION,detailedDescription="classpath:join.txt"), @Component(immediate=true,policy=ConfigurationPolicy.OPTIONAL), @Service({Function.class,AbstractCommand.class,JoinAvailable.class}), @org.apache.felix.scr.annotations.Properties({@Property(name="osgi.command.scope",value=JoinCommand.SCOPE_VALUE),@Property(name="osgi.command.function",value=JoinCommand.FUNCTION_VALUE)}), public]JoinCommand, AbstractCommandComponent[JoinAvailable] @AT@ 1529 @LENGTH@ 2228
---UPD SingleMemberAnnotation@@@Service({Function.class,JoinAvailable.class}) @TO@ @Service({Function.class,AbstractCommand.class,JoinAvailable.class}) @AT@ 1759 @LENGTH@ 49


UPD ExpressionStatement@@Assignment:msClient=new HiveMetaStoreClient(conf) @TO@ Assignment:msClient=new HiveMetaStoreClient(this.conf) @AT@ 2378 @LENGTH@ 41
---UPD Assignment@@msClient=new HiveMetaStoreClient(conf) @TO@ msClient=new HiveMetaStoreClient(this.conf) @AT@ 2378 @LENGTH@ 40
------UPD ClassInstanceCreation@@HiveMetaStoreClient[conf] @TO@ HiveMetaStoreClient[this.conf] @AT@ 2389 @LENGTH@ 29
---------INS FieldAccess@@this.conf @TO@ ClassInstanceCreation@@HiveMetaStoreClient[conf] @AT@ 2413 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.conf @AT@ 2413 @LENGTH@ 4
------------INS SimpleName@@conf @TO@ FieldAccess@@this.conf @AT@ 2418 @LENGTH@ 4
---------DEL SimpleName@@conf @AT@ 2413 @LENGTH@ 4


UPD MethodDeclaration@@DeploymentUnitProcessingException, MethodName:equivilentNamespacesInJBossXml, QName key, QName s,  @TO@ DeploymentUnitProcessingException, MethodName:equivalentNamespacesInJBossXml, QName key, QName s,  @AT@ 29901 @LENGTH@ 51
---UPD SimpleName@@MethodName:equivilentNamespacesInJBossXml @TO@ MethodName:equivalentNamespacesInJBossXml @AT@ 29901 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:createsCountQueryForScalarSelects,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 7747 @LENGTH@ 152
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:createsCountQueryForScalarSelects,  @AT@ 7747 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:createsCountQueryForScalarSelects,  @AT@ 7754 @LENGTH@ 4
---INS SimpleName@@MethodName:createsCountQueryForScalarSelects @TO@ MethodDeclaration@@public, void, MethodName:createsCountQueryForScalarSelects,  @AT@ 7759 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:assertCountQuery("select p.lastname,p.firstname from Person p","select count(p) from Person p") @TO@ MethodDeclaration@@public, void, MethodName:createsCountQueryForScalarSelects,  @AT@ 7799 @LENGTH@ 97
------INS MethodInvocation@@assertCountQuery("select p.lastname,p.firstname from Person p","select count(p) from Person p") @TO@ ExpressionStatement@@MethodInvocation:assertCountQuery("select p.lastname,p.firstname from Person p","select count(p) from Person p") @AT@ 7799 @LENGTH@ 96
---------INS SimpleName@@MethodName:assertCountQuery:["select p.lastname,p.firstname from Person p", "select count(p) from Person p"] @TO@ MethodInvocation@@assertCountQuery("select p.lastname,p.firstname from Person p","select count(p) from Person p") @AT@ 7799 @LENGTH@ 96
------------INS StringLiteral@@"select p.lastname,p.firstname from Person p" @TO@ SimpleName@@MethodName:assertCountQuery:["select p.lastname,p.firstname from Person p", "select count(p) from Person p"] @AT@ 7816 @LENGTH@ 45
------------INS StringLiteral@@"select count(p) from Person p" @TO@ SimpleName@@MethodName:assertCountQuery:["select p.lastname,p.firstname from Person p", "select count(p) from Person p"] @AT@ 7863 @LENGTH@ 31


UPD SwitchStatement@@switch (attribute) {case ENABLED:{    ENABLED.parseAndSetParameter(value,connectionDefinitionNode,reader);    break;  }case JNDI_NAME:{  jndiName=value;  JNDINAME.parseAndSetParameter(jndiName,connectionDefinitionNode,reader);  break;}case POOL_NAME:{poolName=value;break;}case USE_JAVA_CONTEXT:{USE_JAVA_CONTEXT.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case USE_CCM:{USE_CCM.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case SHARABLE:{SHARABLE.parseAndSetParameter(value,connectionDefinitionNode,reader);}case ENLISTMENT:{ENLISTMENT.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case CLASS_NAME:{CLASS_NAME.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}default :break;} @TO@ switch (attribute) {case ENABLED:{    ENABLED.parseAndSetParameter(value,connectionDefinitionNode,reader);    break;  }case JNDI_NAME:{  jndiName=value;  JNDINAME.parseAndSetParameter(jndiName,connectionDefinitionNode,reader);  break;}case POOL_NAME:{poolName=value;break;}case USE_JAVA_CONTEXT:{USE_JAVA_CONTEXT.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case USE_CCM:{USE_CCM.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case SHARABLE:{SHARABLE.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case ENLISTMENT:{ENLISTMENT.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case CLASS_NAME:{CLASS_NAME.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}default :break;} @AT@ 8855 @LENGTH@ 1434
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (attribute) {case ENABLED:{    ENABLED.parseAndSetParameter(value,connectionDefinitionNode,reader);    break;  }case JNDI_NAME:{  jndiName=value;  JNDINAME.parseAndSetParameter(jndiName,connectionDefinitionNode,reader);  break;}case POOL_NAME:{poolName=value;break;}case USE_JAVA_CONTEXT:{USE_JAVA_CONTEXT.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case USE_CCM:{USE_CCM.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case SHARABLE:{SHARABLE.parseAndSetParameter(value,connectionDefinitionNode,reader);}case ENLISTMENT:{ENLISTMENT.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}case CLASS_NAME:{CLASS_NAME.parseAndSetParameter(value,connectionDefinitionNode,reader);break;}default :break;} @AT@ 9876 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 32496 @LENGTH@ 303
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @AT@ 32496 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @AT@ 32503 @LENGTH@ 4
---INS SimpleName@@MethodName:customFindByQueryWithPositionalVarargsParameters @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @AT@ 32508 @LENGTH@ 48
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @AT@ 32566 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 32566 @LENGTH@ 16
---INS VariableDeclarationStatement@@Collection<User> result=repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()); @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @AT@ 32589 @LENGTH@ 113
------INS ParameterizedType@@Collection<User> @TO@ VariableDeclarationStatement@@Collection<User> result=repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()); @AT@ 32589 @LENGTH@ 16
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<User> @AT@ 32589 @LENGTH@ 10
---------INS SimpleType@@User @TO@ ParameterizedType@@Collection<User> @AT@ 32600 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()) @TO@ VariableDeclarationStatement@@Collection<User> result=repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()); @AT@ 32606 @LENGTH@ 95
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32606 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()) @TO@ VariableDeclarationFragment@@result=repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32615 @LENGTH@ 86
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32615 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByIdsCustomWithPositionalVarArgs:[firstUser.getId(), secondUser.getId()] @TO@ MethodInvocation@@repository.findByIdsCustomWithPositionalVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32626 @LENGTH@ 75
---------------INS MethodInvocation@@firstUser.getId() @TO@ SimpleName@@MethodName:findByIdsCustomWithPositionalVarArgs:[firstUser.getId(), secondUser.getId()] @AT@ 32663 @LENGTH@ 17
------------------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.getId() @AT@ 32663 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@firstUser.getId() @AT@ 32673 @LENGTH@ 7
---------------INS MethodInvocation@@secondUser.getId() @TO@ SimpleName@@MethodName:findByIdsCustomWithPositionalVarArgs:[firstUser.getId(), secondUser.getId()] @AT@ 32682 @LENGTH@ 18
------------------INS SimpleName@@Name:secondUser @TO@ MethodInvocation@@secondUser.getId() @AT@ 32682 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@secondUser.getId() @AT@ 32693 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @AT@ 32708 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result,hasSize(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @AT@ 32708 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertThat:[result, hasSize(2)] @TO@ MethodInvocation@@assertThat(result,hasSize(2)) @AT@ 32708 @LENGTH@ 30
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 32719 @LENGTH@ 6
------------INS MethodInvocation@@hasSize(2) @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 32727 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 32727 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 32735 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 32727 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 32735 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithPositionalVarargsParameters,  @AT@ 32743 @LENGTH@ 52
------INS MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @AT@ 32743 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @TO@ MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @AT@ 32743 @LENGTH@ 51
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 32754 @LENGTH@ 6
------------INS MethodInvocation@@hasItems(firstUser,secondUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 32762 @LENGTH@ 31
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 32762 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 32771 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 32782 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 32762 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 32771 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 32782 @LENGTH@ 10


UPD IfStatement@@if (legacyMode) {  List<String> expressions=legacyFoldExpressions(sort);  Assert.isTrue(expressions.size() == 2,String.format("Expected 2 sort expressions (fields, direction) but got %d!",expressions.size()));  builder.queryParam(getSortParameter(parameter),expressions.get(0));  builder.queryParam(getLegacyDirectionParameter(parameter),expressions.get(1));} else {  for (  String expression : foldIntoExpressions(sort)) {    builder.queryParam(getSortParameter(parameter),expression);  }} @TO@ if (legacyMode) {  List<String> expressions=legacyFoldExpressions(sort);  Assert.isTrue(expressions.size() == 2,String.format("Expected 2 sort expressions (fields, direction) but got %d!",expressions.size()));  builder.replaceQueryParam(sortParameter,expressions.get(0));  builder.replaceQueryParam(getLegacyDirectionParameter(parameter),expressions.get(1));} else {  builder.replaceQueryParam(sortParameter);  for (  String expression : foldIntoExpressions(sort)) {    builder.queryParam(sortParameter,expression);  }} @AT@ 1700 @LENGTH@ 522
---UPD Block@@ThenBody:{  List<String> expressions=legacyFoldExpressions(sort);  Assert.isTrue(expressions.size() == 2,String.format("Expected 2 sort expressions (fields, direction) but got %d!",expressions.size()));  builder.queryParam(getSortParameter(parameter),expressions.get(0));  builder.queryParam(getLegacyDirectionParameter(parameter),expressions.get(1));} @TO@ ThenBody:{  List<String> expressions=legacyFoldExpressions(sort);  Assert.isTrue(expressions.size() == 2,String.format("Expected 2 sort expressions (fields, direction) but got %d!",expressions.size()));  builder.replaceQueryParam(sortParameter,expressions.get(0));  builder.replaceQueryParam(getLegacyDirectionParameter(parameter),expressions.get(1));} @AT@ 1716 @LENGTH@ 367
------UPD ExpressionStatement@@MethodInvocation:builder.queryParam(getSortParameter(parameter),expressions.get(0)) @TO@ MethodInvocation:builder.replaceQueryParam(sortParameter,expressions.get(0)) @AT@ 1927 @LENGTH@ 68
---------UPD MethodInvocation@@builder.queryParam(getSortParameter(parameter),expressions.get(0)) @TO@ builder.replaceQueryParam(sortParameter,expressions.get(0)) @AT@ 1927 @LENGTH@ 67
------------UPD SimpleName@@MethodName:queryParam:[getSortParameter(parameter), expressions.get(0)] @TO@ MethodName:replaceQueryParam:[sortParameter, expressions.get(0)] @AT@ 1935 @LENGTH@ 59
---------------INS SimpleName@@sortParameter @TO@ SimpleName@@MethodName:queryParam:[getSortParameter(parameter), expressions.get(0)] @AT@ 2008 @LENGTH@ 13
------UPD ExpressionStatement@@MethodInvocation:builder.queryParam(getLegacyDirectionParameter(parameter),expressions.get(1)) @TO@ MethodInvocation:builder.replaceQueryParam(getLegacyDirectionParameter(parameter),expressions.get(1)) @AT@ 1999 @LENGTH@ 79
---------UPD MethodInvocation@@builder.queryParam(getLegacyDirectionParameter(parameter),expressions.get(1)) @TO@ builder.replaceQueryParam(getLegacyDirectionParameter(parameter),expressions.get(1)) @AT@ 1999 @LENGTH@ 78
------------UPD SimpleName@@MethodName:queryParam:[getLegacyDirectionParameter(parameter), expressions.get(1)] @TO@ MethodName:replaceQueryParam:[getLegacyDirectionParameter(parameter), expressions.get(1)] @AT@ 2007 @LENGTH@ 70
---UPD Block@@ElseBody:{  for (  String expression : foldIntoExpressions(sort)) {    builder.queryParam(getSortParameter(parameter),expression);  }} @TO@ ElseBody:{  builder.replaceQueryParam(sortParameter);  for (  String expression : foldIntoExpressions(sort)) {    builder.queryParam(sortParameter,expression);  }} @AT@ 2089 @LENGTH@ 133
------UPD EnhancedForStatement@@for (String expression : foldIntoExpressions(sort)) {  builder.queryParam(getSortParameter(parameter),expression);} @TO@ for (String expression : foldIntoExpressions(sort)) {  builder.queryParam(sortParameter,expression);} @AT@ 2095 @LENGTH@ 123
---------UPD ExpressionStatement@@MethodInvocation:builder.queryParam(getSortParameter(parameter),expression) @TO@ MethodInvocation:builder.queryParam(sortParameter,expression) @AT@ 2153 @LENGTH@ 60
------------UPD MethodInvocation@@builder.queryParam(getSortParameter(parameter),expression) @TO@ builder.queryParam(sortParameter,expression) @AT@ 2153 @LENGTH@ 59
---------------UPD SimpleName@@MethodName:queryParam:[getSortParameter(parameter), expression] @TO@ MethodName:queryParam:[sortParameter, expression] @AT@ 2161 @LENGTH@ 51
------------------DEL MethodInvocation@@getSortParameter(parameter) @AT@ 2172 @LENGTH@ 27
---------------------DEL SimpleName@@MethodName:getSortParameter:[parameter] @AT@ 2172 @LENGTH@ 27
------------------MOV SimpleName@@parameter @TO@ SimpleName@@MethodName:queryParam:[getSortParameter(parameter), expression] @AT@ 2189 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:builder.replaceQueryParam(sortParameter) @TO@ Block@@ElseBody:{  for (  String expression : foldIntoExpressions(sort)) {    builder.queryParam(getSortParameter(parameter),expression);  }} @AT@ 2150 @LENGTH@ 41
---------INS MethodInvocation@@builder.replaceQueryParam(sortParameter) @TO@ ExpressionStatement@@MethodInvocation:builder.replaceQueryParam(sortParameter) @AT@ 2150 @LENGTH@ 40
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.replaceQueryParam(sortParameter) @AT@ 2150 @LENGTH@ 7
------------INS SimpleName@@MethodName:replaceQueryParam:[sortParameter] @TO@ MethodInvocation@@builder.replaceQueryParam(sortParameter) @AT@ 2158 @LENGTH@ 32
---------------INS SimpleName@@sortParameter @TO@ SimpleName@@MethodName:replaceQueryParam:[sortParameter] @AT@ 2176 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:addRowToBatch, int rowIndex, Writable rowBlob, VectorizedRowBatch batch, HiveException, SerDeException,  @TO@ public, void, MethodName:addRowToBatch, int rowIndex, Writable rowBlob, VectorizedRowBatch batch, DataOutputBuffer buffer, HiveException, SerDeException,  @AT@ 13839 @LENGTH@ 267
---INS SingleVariableDeclaration@@DataOutputBuffer buffer @TO@ MethodDeclaration@@public, void, MethodName:addRowToBatch, int rowIndex, Writable rowBlob, VectorizedRowBatch batch, HiveException, SerDeException,  @AT@ 13984 @LENGTH@ 23
------INS SimpleType@@DataOutputBuffer @TO@ SingleVariableDeclaration@@DataOutputBuffer buffer @AT@ 13984 @LENGTH@ 16
------INS SimpleName@@buffer @TO@ SingleVariableDeclaration@@DataOutputBuffer buffer @AT@ 14001 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:VectorizedBatchUtil.AddRowToBatch(row,this.rawRowOI,rowIndex,batch) @TO@ MethodInvocation:VectorizedBatchUtil.addRowToBatch(row,this.rawRowOI,rowIndex,batch,buffer) @AT@ 14031 @LENGTH@ 71
------UPD MethodInvocation@@VectorizedBatchUtil.AddRowToBatch(row,this.rawRowOI,rowIndex,batch) @TO@ VectorizedBatchUtil.addRowToBatch(row,this.rawRowOI,rowIndex,batch,buffer) @AT@ 14031 @LENGTH@ 70
---------UPD SimpleName@@MethodName:AddRowToBatch:[row, this.rawRowOI, rowIndex, batch] @TO@ MethodName:addRowToBatch:[row, this.rawRowOI, rowIndex, batch, buffer] @AT@ 14051 @LENGTH@ 50
------------INS SimpleName@@buffer @TO@ SimpleName@@MethodName:AddRowToBatch:[row, this.rawRowOI, rowIndex, batch] @AT@ 14211 @LENGTH@ 6


UPD TryStatement@@try {  props.put(DATE,Long.toString(result.getDate()));  props.put(UPDATES + "." + COUNT,Integer.toString(result.getUpdates().size()));  int i=0;  for (  BundleUpdate update : result.getUpdates()) {    props.put(UPDATES + "." + Integer.toString(i)+ "."+ SYMBOLIC_NAME,update.getSymbolicName());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_VERSION,update.getNewVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_LOCATION,update.getNewLocation());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_VERSION,update.getPreviousVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_LOCATION,update.getPreviousLocation());    i++;  }  props.put(STARTUP,((ResultImpl)result).getStartup());  props.put(OVERRIDES,((ResultImpl)result).getOverrides());  props.store(fos,"Installation results for patch " + result.getPatch().getId());}  finally {  close(fos);} @TO@ try {  props.put(DATE,Long.toString(result.getDate()));  props.put(UPDATES + "." + COUNT,Integer.toString(result.getUpdates().size()));  int i=0;  for (  BundleUpdate update : result.getUpdates()) {    props.put(UPDATES + "." + Integer.toString(i)+ "."+ SYMBOLIC_NAME,update.getSymbolicName());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_VERSION,update.getNewVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_LOCATION,update.getNewLocation());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_VERSION,update.getPreviousVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_LOCATION,update.getPreviousLocation());    i++;  }  props.put(STARTUP,((ResultImpl)result).getStartup());  String overrides=((ResultImpl)result).getOverrides();  if (overrides != null) {    props.put(OVERRIDES,overrides);  }  props.store(fos,"Installation results for patch " + result.getPatch().getId());}  finally {  close(fos);} @AT@ 10911 @LENGTH@ 1124
---DEL ExpressionStatement@@MethodInvocation:props.put(OVERRIDES,((ResultImpl)result).getOverrides()) @AT@ 11829 @LENGTH@ 59
---INS VariableDeclarationStatement@@String overrides=((ResultImpl)result).getOverrides(); @TO@ TryStatement@@try {  props.put(DATE,Long.toString(result.getDate()));  props.put(UPDATES + "." + COUNT,Integer.toString(result.getUpdates().size()));  int i=0;  for (  BundleUpdate update : result.getUpdates()) {    props.put(UPDATES + "." + Integer.toString(i)+ "."+ SYMBOLIC_NAME,update.getSymbolicName());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_VERSION,update.getNewVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_LOCATION,update.getNewLocation());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_VERSION,update.getPreviousVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_LOCATION,update.getPreviousLocation());    i++;  }  props.put(STARTUP,((ResultImpl)result).getStartup());  props.put(OVERRIDES,((ResultImpl)result).getOverrides());  props.store(fos,"Installation results for patch " + result.getPatch().getId());}  finally {  close(fos);} @AT@ 11829 @LENGTH@ 56
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String overrides=((ResultImpl)result).getOverrides(); @AT@ 11829 @LENGTH@ 6
------INS VariableDeclarationFragment@@overrides=((ResultImpl)result).getOverrides() @TO@ VariableDeclarationStatement@@String overrides=((ResultImpl)result).getOverrides(); @AT@ 11836 @LENGTH@ 48
---------INS SimpleName@@overrides @TO@ VariableDeclarationFragment@@overrides=((ResultImpl)result).getOverrides() @AT@ 11836 @LENGTH@ 9
---------MOV MethodInvocation@@((ResultImpl)result).getOverrides() @TO@ VariableDeclarationFragment@@overrides=((ResultImpl)result).getOverrides() @AT@ 11850 @LENGTH@ 36
---INS IfStatement@@if (overrides != null) {  props.put(OVERRIDES,overrides);} @TO@ TryStatement@@try {  props.put(DATE,Long.toString(result.getDate()));  props.put(UPDATES + "." + COUNT,Integer.toString(result.getUpdates().size()));  int i=0;  for (  BundleUpdate update : result.getUpdates()) {    props.put(UPDATES + "." + Integer.toString(i)+ "."+ SYMBOLIC_NAME,update.getSymbolicName());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_VERSION,update.getNewVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ NEW_LOCATION,update.getNewLocation());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_VERSION,update.getPreviousVersion());    props.put(UPDATES + "." + Integer.toString(i)+ "."+ OLD_LOCATION,update.getPreviousLocation());    i++;  }  props.put(STARTUP,((ResultImpl)result).getStartup());  props.put(OVERRIDES,((ResultImpl)result).getOverrides());  props.store(fos,"Installation results for patch " + result.getPatch().getId());}  finally {  close(fos);} @AT@ 11898 @LENGTH@ 87
------INS InfixExpression@@overrides != null @TO@ IfStatement@@if (overrides != null) {  props.put(OVERRIDES,overrides);} @AT@ 11902 @LENGTH@ 17
---------INS SimpleName@@overrides @TO@ InfixExpression@@overrides != null @AT@ 11902 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@overrides != null @AT@ 11911 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@overrides != null @AT@ 11915 @LENGTH@ 4
------INS Block@@ThenBody:{  props.put(OVERRIDES,overrides);} @TO@ IfStatement@@if (overrides != null) {  props.put(OVERRIDES,overrides);} @AT@ 11921 @LENGTH@ 64
---------INS ExpressionStatement@@MethodInvocation:props.put(OVERRIDES,overrides) @TO@ Block@@ThenBody:{  props.put(OVERRIDES,overrides);} @AT@ 11939 @LENGTH@ 32
------------MOV MethodInvocation@@props.put(OVERRIDES,((ResultImpl)result).getOverrides()) @TO@ ExpressionStatement@@MethodInvocation:props.put(OVERRIDES,overrides) @AT@ 11829 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:put:[OVERRIDES, ((ResultImpl)result).getOverrides()] @TO@ MethodName:put:[OVERRIDES, overrides] @AT@ 11835 @LENGTH@ 52
------------------INS SimpleName@@overrides @TO@ SimpleName@@MethodName:put:[OVERRIDES, ((ResultImpl)result).getOverrides()] @AT@ 11960 @LENGTH@ 9


UPD EnhancedForStatement@@for (Step step : steps) {  names.add(step.getName());} @TO@ for (Step step : steps) {  names.add(step.getName());  if (step instanceof StepLocator) {    names.addAll(((StepLocator)step).getStepNames());  }} @AT@ 2287 @LENGTH@ 59
---INS IfStatement@@if (step instanceof StepLocator) {  names.addAll(((StepLocator)step).getStepNames());} @TO@ EnhancedForStatement@@for (Step step : steps) {  names.add(step.getName());} @AT@ 2430 @LENGTH@ 92
------INS InstanceofExpression@@step instanceof StepLocator @TO@ IfStatement@@if (step instanceof StepLocator) {  names.addAll(((StepLocator)step).getStepNames());} @AT@ 2433 @LENGTH@ 27
---------INS SimpleName@@step @TO@ InstanceofExpression@@step instanceof StepLocator @AT@ 2433 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@step instanceof StepLocator @AT@ 2438 @LENGTH@ 10
---------INS SimpleType@@StepLocator @TO@ InstanceofExpression@@step instanceof StepLocator @AT@ 2449 @LENGTH@ 11
------INS Block@@ThenBody:{  names.addAll(((StepLocator)step).getStepNames());} @TO@ IfStatement@@if (step instanceof StepLocator) {  names.addAll(((StepLocator)step).getStepNames());} @AT@ 2462 @LENGTH@ 60
---------INS ExpressionStatement@@MethodInvocation:names.addAll(((StepLocator)step).getStepNames()) @TO@ Block@@ThenBody:{  names.addAll(((StepLocator)step).getStepNames());} @AT@ 2468 @LENGTH@ 49
------------INS MethodInvocation@@names.addAll(((StepLocator)step).getStepNames()) @TO@ ExpressionStatement@@MethodInvocation:names.addAll(((StepLocator)step).getStepNames()) @AT@ 2468 @LENGTH@ 48
---------------INS SimpleName@@Name:names @TO@ MethodInvocation@@names.addAll(((StepLocator)step).getStepNames()) @AT@ 2468 @LENGTH@ 5
---------------INS SimpleName@@MethodName:addAll:[((StepLocator)step).getStepNames()] @TO@ MethodInvocation@@names.addAll(((StepLocator)step).getStepNames()) @AT@ 2474 @LENGTH@ 42
------------------INS MethodInvocation@@((StepLocator)step).getStepNames() @TO@ SimpleName@@MethodName:addAll:[((StepLocator)step).getStepNames()] @AT@ 2481 @LENGTH@ 34
---------------------INS ParenthesizedExpression@@((StepLocator)step) @TO@ MethodInvocation@@((StepLocator)step).getStepNames() @AT@ 2481 @LENGTH@ 19
------------------------INS CastExpression@@(StepLocator)step @TO@ ParenthesizedExpression@@((StepLocator)step) @AT@ 2482 @LENGTH@ 17
---------------------------INS SimpleType@@StepLocator @TO@ CastExpression@@(StepLocator)step @AT@ 2483 @LENGTH@ 11
---------------------------INS SimpleName@@step @TO@ CastExpression@@(StepLocator)step @AT@ 2495 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getStepNames:[] @TO@ MethodInvocation@@((StepLocator)step).getStepNames() @AT@ 2501 @LENGTH@ 14


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @Transactional, @TransactionConfiguration(transactionManager="transactionManager"), public]TransactionalRedisCacheManagerWithCommitUnitTests,  @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration, @Transactional, @TransactionConfiguration(transactionManager="transactionManager"), public]TransactionalRedisCacheManagerWithCommitUnitTests,  @AT@ 2299 @LENGTH@ 2328
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 2299 @LENGTH@ 39


UPD IfStatement@@if (!path.hasNext() && order.isIgnoreCase()) {  sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).getString(path.getSegment()).lower();} else {  sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).get(path.getSegment());} @TO@ if (!path.hasNext() && order.isIgnoreCase()) {  sortPropertyExpression=Expressions.stringPath((Path<?>)sortPropertyExpression,path.getSegment()).lower();} else {  sortPropertyExpression=Expressions.path(path.getType(),(Path<?>)sortPropertyExpression,path.getSegment());} @AT@ 6333 @LENGTH@ 350
---UPD Block@@ThenBody:{  sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).getString(path.getSegment()).lower();} @TO@ ThenBody:{  sortPropertyExpression=Expressions.stringPath((Path<?>)sortPropertyExpression,path.getSegment()).lower();} @AT@ 6378 @LENGTH@ 198
------UPD ExpressionStatement@@Assignment:sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).getString(path.getSegment()).lower() @TO@ Assignment:sortPropertyExpression=Expressions.stringPath((Path<?>)sortPropertyExpression,path.getSegment()).lower() @AT@ 6467 @LENGTH@ 104
---------UPD Assignment@@sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).getString(path.getSegment()).lower() @TO@ sortPropertyExpression=Expressions.stringPath((Path<?>)sortPropertyExpression,path.getSegment()).lower() @AT@ 6467 @LENGTH@ 103
------------UPD MethodInvocation@@((PathBuilder<?>)sortPropertyExpression).getString(path.getSegment()).lower() @TO@ Expressions.stringPath((Path<?>)sortPropertyExpression,path.getSegment()).lower() @AT@ 6492 @LENGTH@ 78
---------------DEL MethodInvocation@@MethodName:getString:[path.getSegment()] @AT@ 6492 @LENGTH@ 70
---------------DEL ParenthesizedExpression@@((PathBuilder<?>)sortPropertyExpression) @AT@ 6492 @LENGTH@ 41
------------------DEL CastExpression@@(PathBuilder<?>)sortPropertyExpression @AT@ 6493 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:stringPath:[(Path<?>)sortPropertyExpression, path.getSegment()] @TO@ MethodInvocation@@((PathBuilder<?>)sortPropertyExpression).getString(path.getSegment()).lower() @AT@ 6573 @LENGTH@ 75
------------------MOV MethodInvocation@@path.getSegment() @TO@ MethodInvocation@@MethodName:stringPath:[(Path<?>)sortPropertyExpression, path.getSegment()] @AT@ 6544 @LENGTH@ 17
------------------INS CastExpression@@(Path<?>)sortPropertyExpression @TO@ MethodInvocation@@MethodName:stringPath:[(Path<?>)sortPropertyExpression, path.getSegment()] @AT@ 6596 @LENGTH@ 32
---------------------MOV ParameterizedType@@PathBuilder<?> @TO@ CastExpression@@(Path<?>)sortPropertyExpression @AT@ 6494 @LENGTH@ 14
------------------------UPD SimpleType@@PathBuilder @TO@ Path @AT@ 6494 @LENGTH@ 11
---------------------MOV SimpleName@@sortPropertyExpression @TO@ CastExpression@@(Path<?>)sortPropertyExpression @AT@ 6510 @LENGTH@ 22
---------------INS SimpleName@@Name:Expressions @TO@ MethodInvocation@@((PathBuilder<?>)sortPropertyExpression).getString(path.getSegment()).lower() @AT@ 6573 @LENGTH@ 11
---UPD Block@@ElseBody:{  sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).get(path.getSegment());} @TO@ ElseBody:{  sortPropertyExpression=Expressions.path(path.getType(),(Path<?>)sortPropertyExpression,path.getSegment());} @AT@ 6582 @LENGTH@ 101
------UPD ExpressionStatement@@Assignment:sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).get(path.getSegment()) @TO@ Assignment:sortPropertyExpression=Expressions.path(path.getType(),(Path<?>)sortPropertyExpression,path.getSegment()) @AT@ 6588 @LENGTH@ 90
---------UPD Assignment@@sortPropertyExpression=((PathBuilder<?>)sortPropertyExpression).get(path.getSegment()) @TO@ sortPropertyExpression=Expressions.path(path.getType(),(Path<?>)sortPropertyExpression,path.getSegment()) @AT@ 6588 @LENGTH@ 89
------------UPD MethodInvocation@@((PathBuilder<?>)sortPropertyExpression).get(path.getSegment()) @TO@ Expressions.path(path.getType(),(Path<?>)sortPropertyExpression,path.getSegment()) @AT@ 6613 @LENGTH@ 64
---------------DEL ParenthesizedExpression@@((PathBuilder<?>)sortPropertyExpression) @AT@ 6613 @LENGTH@ 41
------------------DEL CastExpression@@(PathBuilder<?>)sortPropertyExpression @AT@ 6614 @LENGTH@ 39
---------------DEL SimpleName@@MethodName:get:[path.getSegment()] @AT@ 6655 @LENGTH@ 22
---------------INS SimpleName@@Name:Expressions @TO@ MethodInvocation@@((PathBuilder<?>)sortPropertyExpression).get(path.getSegment()) @AT@ 6699 @LENGTH@ 11
---------------INS SimpleName@@MethodName:path:[path.getType(), (Path<?>)sortPropertyExpression, path.getSegment()] @TO@ MethodInvocation@@((PathBuilder<?>)sortPropertyExpression).get(path.getSegment()) @AT@ 6711 @LENGTH@ 73
------------------MOV MethodInvocation@@path.getSegment() @TO@ SimpleName@@MethodName:path:[path.getType(), (Path<?>)sortPropertyExpression, path.getSegment()] @AT@ 6659 @LENGTH@ 17
------------------INS MethodInvocation@@path.getType() @TO@ SimpleName@@MethodName:path:[path.getType(), (Path<?>)sortPropertyExpression, path.getSegment()] @AT@ 6716 @LENGTH@ 14
---------------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.getType() @AT@ 6716 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@path.getType() @AT@ 6721 @LENGTH@ 9
------------------INS CastExpression@@(Path<?>)sortPropertyExpression @TO@ SimpleName@@MethodName:path:[path.getType(), (Path<?>)sortPropertyExpression, path.getSegment()] @AT@ 6732 @LENGTH@ 32
---------------------MOV ParameterizedType@@PathBuilder<?> @TO@ CastExpression@@(Path<?>)sortPropertyExpression @AT@ 6615 @LENGTH@ 14
------------------------UPD SimpleType@@PathBuilder @TO@ Path @AT@ 6615 @LENGTH@ 11
---------------------MOV SimpleName@@sortPropertyExpression @TO@ CastExpression@@(Path<?>)sortPropertyExpression @AT@ 6631 @LENGTH@ 22


UPD MethodDeclaration@@public, PersistentEntity<?,?>, MethodName:getPersistentEntity,  @TO@ public, PersistentEntity<?,? extends PersistentProperty<?>>, MethodName:getPersistentEntity,  @AT@ 1644 @LENGTH@ 73
---UPD ParameterizedType@@PersistentEntity<?,?> @TO@ PersistentEntity<?,? extends PersistentProperty<?>> @AT@ 1651 @LENGTH@ 22


DEL FieldDeclaration@@private, static, final, Charset, [CHARSET=Charset.forName("UTF-8")] @AT@ 1496 @LENGTH@ 64
---DEL Modifier@@private @AT@ 1496 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1504 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1511 @LENGTH@ 5
---DEL SimpleType@@Charset @AT@ 1517 @LENGTH@ 7
---DEL VariableDeclarationFragment@@CHARSET=Charset.forName("UTF-8") @AT@ 1525 @LENGTH@ 34
------DEL SimpleName@@CHARSET @AT@ 1525 @LENGTH@ 7
------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 1535 @LENGTH@ 24
---------DEL SimpleName@@Name:Charset @AT@ 1535 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 1543 @LENGTH@ 16
------------DEL StringLiteral@@"UTF-8" @AT@ 1551 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:ColumnProjectionUtils.appendReadColumnID(conf,Collections.singletonList(2)) @TO@ MethodInvocation:ColumnProjectionUtils.appendReadColumnIDs(conf,Collections.singletonList(2)) @AT@ 4223 @LENGTH@ 77
---UPD MethodInvocation@@ColumnProjectionUtils.appendReadColumnID(conf,Collections.singletonList(2)) @TO@ ColumnProjectionUtils.appendReadColumnIDs(conf,Collections.singletonList(2)) @AT@ 4223 @LENGTH@ 76
------UPD SimpleName@@MethodName:appendReadColumnID:[conf, Collections.singletonList(2)] @TO@ MethodName:appendReadColumnIDs:[conf, Collections.singletonList(2)] @AT@ 4245 @LENGTH@ 54


UPD MethodDeclaration@@public, ConfigurationNode, MethodName:getRootNode,  @TO@ public, ImmutableNode, MethodName:getRootNode,  @AT@ 11973 @LENGTH@ 99
---UPD SimpleType@@ConfigurationNode @TO@ ImmutableNode @AT@ 11980 @LENGTH@ 17


UPD FieldDeclaration@@private, static, HazelcastInstance, [hzTwo=null] @TO@ private, static, HazelcastInstance, [hzTwo] @AT@ 478 @LENGTH@ 46
---UPD VariableDeclarationFragment@@hzTwo=null @TO@ hzTwo @AT@ 511 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 519 @LENGTH@ 4


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("SrpConnectionIntegrationTests-context.xml"), public]SrpConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration("SrpConnectionIntegrationTests-context.xml"), public]SrpConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @AT@ 1229 @LENGTH@ 1359
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1229 @LENGTH@ 39


INS IfStatement@@if (lob) {  fieldDetails.getInitedAnnotations().add(new AnnotationMetadataBuilder("javax.persistence.Lob"));} @TO@ MethodDeclaration@@public, void, MethodName:addFieldString, @CliOption(key={"","fieldName"},mandatory=true,help="The name of the field to add") final JavaSymbolName fieldName, @CliOption(key="class",mandatory=false,unspecifiedDefaultValue="*",optionContext=UPDATE_PROJECT,help="The name of the class to receive this field") final JavaType typeName, @CliOption(key="notNull",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value cannot be null") final boolean notNull, @CliOption(key="nullRequired",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value must be null") final boolean nullRequired, @CliOption(key="decimalMin",mandatory=false,help="The BigDecimal string-based representation of the minimum value") final String decimalMin, @CliOption(key="decimalMax",mandatory=false,help="The BigDecimal string based representation of the maximum value") final String decimalMax, @CliOption(key="sizeMin",mandatory=false,help="The minimum string length") final Integer sizeMin, @CliOption(key="sizeMax",mandatory=false,help="The maximum string length") final Integer sizeMax, @CliOption(key="regexp",mandatory=false,help="The required regular expression pattern") final String regexp, @CliOption(key="column",mandatory=false,help="The JPA @Column name") final String column, @CliOption(key="value",mandatory=false,help="Inserts an optional Spring @Value annotation with the given content") final String value, @CliOption(key="comment",mandatory=false,help="An optional comment for JavaDocs") final String comment, @CliOption(key="transient",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates to mark the field as transient") final boolean transientModifier, @CliOption(key="unique",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether to mark the field with a unique constraint") final boolean unique, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo") final boolean permitReservedWords, @CliOption(key="lob",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates that this field is a Large Object") final boolean lob,  @AT@ 42366 @LENGTH@ 120
---INS SimpleName@@lob @TO@ IfStatement@@if (lob) {  fieldDetails.getInitedAnnotations().add(new AnnotationMetadataBuilder("javax.persistence.Lob"));} @AT@ 42370 @LENGTH@ 3
---INS Block@@ThenBody:{  fieldDetails.getInitedAnnotations().add(new AnnotationMetadataBuilder("javax.persistence.Lob"));} @TO@ IfStatement@@if (lob) {  fieldDetails.getInitedAnnotations().add(new AnnotationMetadataBuilder("javax.persistence.Lob"));} @AT@ 42375 @LENGTH@ 111
------MOV ExpressionStatement@@MethodInvocation:fieldDetails.getInitedAnnotations().add(new AnnotationMetadataBuilder("javax.persistence.Lob")) @TO@ Block@@ThenBody:{  fieldDetails.getInitedAnnotations().add(new AnnotationMetadataBuilder("javax.persistence.Lob"));} @AT@ 42366 @LENGTH@ 101


INS VariableDeclarationStatement@@DataOutputBuffer buffer=new DataOutputBuffer(); @TO@ MethodDeclaration@@public, void, MethodName:deserializeVector, Object rowBlob, int rowsInBlob, VectorizedRowBatch reuseBatch, SerDeException,  @AT@ 10063 @LENGTH@ 49
---INS SimpleType@@DataOutputBuffer @TO@ VariableDeclarationStatement@@DataOutputBuffer buffer=new DataOutputBuffer(); @AT@ 10063 @LENGTH@ 16
---INS VariableDeclarationFragment@@buffer=new DataOutputBuffer() @TO@ VariableDeclarationStatement@@DataOutputBuffer buffer=new DataOutputBuffer(); @AT@ 10080 @LENGTH@ 31
------INS SimpleName@@buffer @TO@ VariableDeclarationFragment@@buffer=new DataOutputBuffer() @AT@ 10080 @LENGTH@ 6
------INS ClassInstanceCreation@@DataOutputBuffer[] @TO@ VariableDeclarationFragment@@buffer=new DataOutputBuffer() @AT@ 10089 @LENGTH@ 22
---------INS New@@new @TO@ ClassInstanceCreation@@DataOutputBuffer[] @AT@ 10089 @LENGTH@ 3
---------INS SimpleType@@DataOutputBuffer @TO@ ClassInstanceCreation@@DataOutputBuffer[] @AT@ 10093 @LENGTH@ 16


INS MethodDeclaration@@void, MethodName:cancelledAsyncTask, String asyncTaskRunner, Thread thread,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYPRT",length=4), public]ProtocolLogger, [BasicLogger] @AT@ 13172 @LENGTH@ 58
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:cancelledAsyncTask, String asyncTaskRunner, Thread thread,  @AT@ 13167 @LENGTH@ 4
---INS SimpleName@@MethodName:cancelledAsyncTask @TO@ MethodDeclaration@@void, MethodName:cancelledAsyncTask, String asyncTaskRunner, Thread thread,  @AT@ 13172 @LENGTH@ 18
---INS SingleVariableDeclaration@@String asyncTaskRunner @TO@ MethodDeclaration@@void, MethodName:cancelledAsyncTask, String asyncTaskRunner, Thread thread,  @AT@ 13191 @LENGTH@ 22
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String asyncTaskRunner @AT@ 13191 @LENGTH@ 6
------INS SimpleName@@asyncTaskRunner @TO@ SingleVariableDeclaration@@String asyncTaskRunner @AT@ 13198 @LENGTH@ 15
---INS SingleVariableDeclaration@@Thread thread @TO@ MethodDeclaration@@void, MethodName:cancelledAsyncTask, String asyncTaskRunner, Thread thread,  @AT@ 13215 @LENGTH@ 13
------INS SimpleType@@Thread @TO@ SingleVariableDeclaration@@Thread thread @AT@ 13215 @LENGTH@ 6
------INS SimpleName@@thread @TO@ SingleVariableDeclaration@@Thread thread @AT@ 13222 @LENGTH@ 6


UPD VariableDeclarationStatement@@BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),Charset.forName("UTF-8"))); @TO@ BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),StandardCharsets.UTF_8)); @AT@ 6490 @LENGTH@ 130
---UPD VariableDeclarationFragment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(loggingTestLog),StandardCharsets.UTF_8)) @AT@ 6505 @LENGTH@ 114
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(loggingTestLog),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(loggingTestLog),StandardCharsets.UTF_8)] @AT@ 6510 @LENGTH@ 109
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(loggingTestLog), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(loggingTestLog), StandardCharsets.UTF_8] @AT@ 6529 @LENGTH@ 89
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 6593 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 6593 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 6601 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 6609 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(loggingTestLog), Charset.forName("UTF-8")] @AT@ 6601 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6601 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6618 @LENGTH@ 5


INS MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @TO@ TypeDeclaration@@[public, final]Strings,  @AT@ 1465 @LENGTH@ 264
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @AT@ 1465 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @AT@ 1472 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @AT@ 1479 @LENGTH@ 6
---INS SimpleName@@MethodName:canonicalClassName @TO@ MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @AT@ 1486 @LENGTH@ 18
---INS SingleVariableDeclaration@@String className @TO@ MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @AT@ 1505 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String className @AT@ 1505 @LENGTH@ 6
------INS SimpleName@@className @TO@ SingleVariableDeclaration@@String className @AT@ 1512 @LENGTH@ 9
---INS VariableDeclarationStatement@@int pos=className.indexOf('<'); @TO@ MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @AT@ 1560 @LENGTH@ 33
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int pos=className.indexOf('<'); @AT@ 1560 @LENGTH@ 3
------INS VariableDeclarationFragment@@pos=className.indexOf('<') @TO@ VariableDeclarationStatement@@int pos=className.indexOf('<'); @AT@ 1564 @LENGTH@ 28
---------INS SimpleName@@pos @TO@ VariableDeclarationFragment@@pos=className.indexOf('<') @AT@ 1564 @LENGTH@ 3
---------INS MethodInvocation@@className.indexOf('<') @TO@ VariableDeclarationFragment@@pos=className.indexOf('<') @AT@ 1570 @LENGTH@ 22
------------INS SimpleName@@Name:className @TO@ MethodInvocation@@className.indexOf('<') @AT@ 1570 @LENGTH@ 9
------------INS SimpleName@@MethodName:indexOf:['<'] @TO@ MethodInvocation@@className.indexOf('<') @AT@ 1580 @LENGTH@ 12
---------------INS CharacterLiteral@@'<' @TO@ SimpleName@@MethodName:indexOf:['<'] @AT@ 1588 @LENGTH@ 3
---INS IfStatement@@if (pos != -1) {  return className.substring(0,pos);} else {  return className;} @TO@ MethodDeclaration@@public, static, String, MethodName:canonicalClassName, String className,  @AT@ 1602 @LENGTH@ 121
------INS InfixExpression@@pos != -1 @TO@ IfStatement@@if (pos != -1) {  return className.substring(0,pos);} else {  return className;} @AT@ 1606 @LENGTH@ 9
---------INS SimpleName@@pos @TO@ InfixExpression@@pos != -1 @AT@ 1606 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@pos != -1 @AT@ 1609 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@pos != -1 @AT@ 1613 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1613 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1614 @LENGTH@ 1
------INS Block@@ThenBody:{  return className.substring(0,pos);} @TO@ IfStatement@@if (pos != -1) {  return className.substring(0,pos);} else {  return className;} @AT@ 1617 @LENGTH@ 59
---------INS ReturnStatement@@MethodInvocation:className.substring(0,pos) @TO@ Block@@ThenBody:{  return className.substring(0,pos);} @AT@ 1631 @LENGTH@ 35
------------INS MethodInvocation@@className.substring(0,pos) @TO@ ReturnStatement@@MethodInvocation:className.substring(0,pos) @AT@ 1638 @LENGTH@ 27
---------------INS SimpleName@@Name:className @TO@ MethodInvocation@@className.substring(0,pos) @AT@ 1638 @LENGTH@ 9
---------------INS SimpleName@@MethodName:substring:[0, pos] @TO@ MethodInvocation@@className.substring(0,pos) @AT@ 1648 @LENGTH@ 17
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, pos] @AT@ 1658 @LENGTH@ 1
------------------INS SimpleName@@pos @TO@ SimpleName@@MethodName:substring:[0, pos] @AT@ 1661 @LENGTH@ 3
------INS Block@@ElseBody:{  return className;} @TO@ IfStatement@@if (pos != -1) {  return className.substring(0,pos);} else {  return className;} @AT@ 1682 @LENGTH@ 41
---------INS ReturnStatement@@SimpleName:className @TO@ Block@@ElseBody:{  return className;} @AT@ 1696 @LENGTH@ 17
------------INS SimpleName@@className @TO@ ReturnStatement@@SimpleName:className @AT@ 1703 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:unregisterListenerAtChildren() @TO@ MethodDeclaration@@protected, void, MethodName:clearInternal,  @AT@ 22741 @LENGTH@ 31
---INS MethodInvocation@@MethodName:unregisterListenerAtChildren:[] @TO@ ExpressionStatement@@MethodInvocation:unregisterListenerAtChildren() @AT@ 22741 @LENGTH@ 30


INS MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable, Executor executor,  @TO@ TypeDeclaration@@[public]ManagementRequestContext,  @AT@ 3028 @LENGTH@ 78
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable, Executor executor,  @AT@ 3023 @LENGTH@ 4
---INS SimpleName@@MethodName:executeAsync @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable, Executor executor,  @AT@ 3028 @LENGTH@ 12
---INS SingleVariableDeclaration@@final AsyncTask<A> task @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable, Executor executor,  @AT@ 3041 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 3041 @LENGTH@ 5
------INS ParameterizedType@@AsyncTask<A> @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 3047 @LENGTH@ 12
---------INS SimpleType@@AsyncTask @TO@ ParameterizedType@@AsyncTask<A> @AT@ 3047 @LENGTH@ 9
---------INS SimpleType@@A @TO@ ParameterizedType@@AsyncTask<A> @AT@ 3057 @LENGTH@ 1
------INS SimpleName@@task @TO@ SingleVariableDeclaration@@final AsyncTask<A> task @AT@ 3060 @LENGTH@ 4
---INS SingleVariableDeclaration@@boolean cancellable @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable, Executor executor,  @AT@ 3066 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean cancellable @AT@ 3066 @LENGTH@ 7
------INS SimpleName@@cancellable @TO@ SingleVariableDeclaration@@boolean cancellable @AT@ 3074 @LENGTH@ 11
---INS SingleVariableDeclaration@@Executor executor @TO@ MethodDeclaration@@void, MethodName:executeAsync, final AsyncTask<A> task, boolean cancellable, Executor executor,  @AT@ 3087 @LENGTH@ 17
------INS SimpleType@@Executor @TO@ SingleVariableDeclaration@@Executor executor @AT@ 3087 @LENGTH@ 8
------INS SimpleName@@executor @TO@ SingleVariableDeclaration@@Executor executor @AT@ 3096 @LENGTH@ 8


UPD Block@@ThenBody:{  LOG.debug("Could not default convertManager, please ensure to explicitly set it");  return null;} @TO@ ThenBody:{  LOG.debug("Could not determine the Spring Version. Guessing > Spring 3.0. If this does not work, please ensure to explicitly set converterManager");  return new ConversionServiceConverterManager();} @AT@ 3091 @LENGTH@ 131
---UPD ExpressionStatement@@MethodInvocation:LOG.debug("Could not default convertManager, please ensure to explicitly set it") @TO@ MethodInvocation:LOG.debug("Could not determine the Spring Version. Guessing > Spring 3.0. If this does not work, please ensure to explicitly set converterManager") @AT@ 3105 @LENGTH@ 82
------UPD MethodInvocation@@LOG.debug("Could not default convertManager, please ensure to explicitly set it") @TO@ LOG.debug("Could not determine the Spring Version. Guessing > Spring 3.0. If this does not work, please ensure to explicitly set converterManager") @AT@ 3105 @LENGTH@ 81
---------UPD SimpleName@@MethodName:debug:["Could not default convertManager, please ensure to explicitly set it"] @TO@ MethodName:debug:["Could not determine the Spring Version. Guessing > Spring 3.0. If this does not work, please ensure to explicitly set converterManager"] @AT@ 3109 @LENGTH@ 77
------------UPD StringLiteral@@"Could not default convertManager, please ensure to explicitly set it" @TO@ "Could not determine the Spring Version. Guessing > Spring 3.0. If this does not work, please ensure to explicitly set converterManager" @AT@ 3115 @LENGTH@ 70
---UPD ReturnStatement@@NullLiteral:null @TO@ ClassInstanceCreation:new ConversionServiceConverterManager() @AT@ 3200 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 3207 @LENGTH@ 4
------INS ClassInstanceCreation@@ConversionServiceConverterManager[] @TO@ ReturnStatement@@NullLiteral:null @AT@ 3273 @LENGTH@ 39
---------INS New@@new @TO@ ClassInstanceCreation@@ConversionServiceConverterManager[] @AT@ 3273 @LENGTH@ 3
---------INS SimpleType@@ConversionServiceConverterManager @TO@ ClassInstanceCreation@@ConversionServiceConverterManager[] @AT@ 3277 @LENGTH@ 33


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ContainerCreateStatus,  @TO@ [@Data, public]ContainerCreateStatus, AbstractDockerDTO @AT@ 810 @LENGTH@ 146
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ContainerCreateStatus,  @AT@ 779 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 816 @LENGTH@ 47


UPD TypeDeclaration@@[@Ignore("[FABRIC-517] Fix camel-webservice-example tests"), public]CustomerWebServiceTest, CamelSpringTestSupport @TO@ [@Ignore("[FABRIC-911] Fix camel-webservice-example tests"), public]CustomerWebServiceTest, CamelSpringTestSupport @AT@ 1270 @LENGTH@ 805
---UPD SingleMemberAnnotation@@@Ignore("[FABRIC-517] Fix camel-webservice-example tests") @TO@ @Ignore("[FABRIC-911] Fix camel-webservice-example tests") @AT@ 1270 @LENGTH@ 58


INS MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @TO@ TypeDeclaration@@[public]Profiles,  @AT@ 1657 @LENGTH@ 334
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1657 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1664 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1671 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1671 @LENGTH@ 4
---INS SimpleName@@MethodName:getFileConfiguration @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1678 @LENGTH@ 20
---INS SingleVariableDeclaration@@Collection<Profile> profiles @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1699 @LENGTH@ 28
------INS ParameterizedType@@Collection<Profile> @TO@ SingleVariableDeclaration@@Collection<Profile> profiles @AT@ 1699 @LENGTH@ 19
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Profile> @AT@ 1699 @LENGTH@ 10
---------INS SimpleType@@Profile @TO@ ParameterizedType@@Collection<Profile> @AT@ 1710 @LENGTH@ 7
------INS SimpleName@@profiles @TO@ SingleVariableDeclaration@@Collection<Profile> profiles @AT@ 1719 @LENGTH@ 8
---INS SingleVariableDeclaration@@String fileName @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1729 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String fileName @AT@ 1729 @LENGTH@ 6
------INS SimpleName@@fileName @TO@ SingleVariableDeclaration@@String fileName @AT@ 1736 @LENGTH@ 8
---INS VariableDeclarationStatement@@byte[] answer=null; @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1756 @LENGTH@ 21
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] answer=null; @AT@ 1756 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1756 @LENGTH@ 4
------INS VariableDeclarationFragment@@answer=null @TO@ VariableDeclarationStatement@@byte[] answer=null; @AT@ 1763 @LENGTH@ 13
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=null @AT@ 1763 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@answer=null @AT@ 1772 @LENGTH@ 4
---INS EnhancedForStatement@@for (Profile profile : profiles) {  answer=profile.getFileConfiguration(fileName);  if (answer != null) {    break;  }} @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1786 @LENGTH@ 176
------INS SingleVariableDeclaration@@Profile profile @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  answer=profile.getFileConfiguration(fileName);  if (answer != null) {    break;  }} @AT@ 1791 @LENGTH@ 15
---------INS SimpleType@@Profile @TO@ SingleVariableDeclaration@@Profile profile @AT@ 1791 @LENGTH@ 7
---------INS SimpleName@@profile @TO@ SingleVariableDeclaration@@Profile profile @AT@ 1799 @LENGTH@ 7
------INS SimpleName@@profiles @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  answer=profile.getFileConfiguration(fileName);  if (answer != null) {    break;  }} @AT@ 1809 @LENGTH@ 8
------INS ExpressionStatement@@Assignment:answer=profile.getFileConfiguration(fileName) @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  answer=profile.getFileConfiguration(fileName);  if (answer != null) {    break;  }} @AT@ 1833 @LENGTH@ 48
---------INS Assignment@@answer=profile.getFileConfiguration(fileName) @TO@ ExpressionStatement@@Assignment:answer=profile.getFileConfiguration(fileName) @AT@ 1833 @LENGTH@ 47
------------INS SimpleName@@answer @TO@ Assignment@@answer=profile.getFileConfiguration(fileName) @AT@ 1833 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@answer=profile.getFileConfiguration(fileName) @AT@ 1839 @LENGTH@ 1
------------INS MethodInvocation@@profile.getFileConfiguration(fileName) @TO@ Assignment@@answer=profile.getFileConfiguration(fileName) @AT@ 1842 @LENGTH@ 38
---------------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getFileConfiguration(fileName) @AT@ 1842 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getFileConfiguration:[fileName] @TO@ MethodInvocation@@profile.getFileConfiguration(fileName) @AT@ 1850 @LENGTH@ 30
------------------INS SimpleName@@fileName @TO@ SimpleName@@MethodName:getFileConfiguration:[fileName] @AT@ 1871 @LENGTH@ 8
------INS IfStatement@@if (answer != null) {  break;} @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  answer=profile.getFileConfiguration(fileName);  if (answer != null) {    break;  }} @AT@ 1894 @LENGTH@ 58
---------INS InfixExpression@@answer != null @TO@ IfStatement@@if (answer != null) {  break;} @AT@ 1898 @LENGTH@ 14
------------INS SimpleName@@answer @TO@ InfixExpression@@answer != null @AT@ 1898 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@answer != null @AT@ 1904 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@answer != null @AT@ 1908 @LENGTH@ 4
---------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (answer != null) {  break;} @AT@ 1914 @LENGTH@ 38
------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 1932 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileConfiguration, Collection<Profile> profiles, String fileName,  @AT@ 1971 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 1978 @LENGTH@ 6


UPD TryStatement@@try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=curatorProxy.getService();  String gitRepoUrl=GitUtils.getMasterUrl(bundleContext,curator);  assertNotNull(gitRepoUrl);  GitUtils.waitForBranchUpdate(curator,"1.0");  Git.cloneRepository().setURI(gitRepoUrl).setCloneAllBranches(true).setDirectory(testrepo).setCredentialsProvider(getCredentialsProvider()).call();  Git git=Git.open(testrepo);  GitUtils.configureBranch(git,"origin",gitRepoUrl,"1.0");  git.fetch().setCredentialsProvider(getCredentialsProvider());  GitUtils.checkoutBranch(git,"origin","1.0");  assertTrue(new File(testrepo,"fabric/profiles/default.profile").exists());  for (int v=0; v < 2; v++) {    for (int i=1; i < 2; i++) {      String gitProfile=testGitProfilebase + v + "p"+ i;      String zkProfile=testZkProfilebase + v + "p"+ i;      createAndTestProfileInGit(fabricService,curator,git,"1." + v,gitProfile);      createAndTestProfileInDataStore(fabricService,curator,git,"1." + v,zkProfile);    }  }}  finally {  fabricProxy.close();  curatorProxy.close();} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=fabricService.adapt(CuratorFramework.class);  String gitRepoUrl=GitUtils.getMasterUrl(bundleContext,curator);  assertNotNull(gitRepoUrl);  GitUtils.waitForBranchUpdate(curator,"1.0");  Git.cloneRepository().setURI(gitRepoUrl).setCloneAllBranches(true).setDirectory(testrepo).setCredentialsProvider(getCredentialsProvider()).call();  Git git=Git.open(testrepo);  GitUtils.configureBranch(git,"origin",gitRepoUrl,"1.0");  git.fetch().setCredentialsProvider(getCredentialsProvider());  GitUtils.checkoutBranch(git,"origin","1.0");  assertTrue(new File(testrepo,"fabric/profiles/default.profile").exists());  for (int v=0; v < 2; v++) {    for (int i=1; i < 2; i++) {      String gitProfile=testGitProfilebase + v + "p"+ i;      String zkProfile=testZkProfilebase + v + "p"+ i;      createAndTestProfileInGit(fabricService,curator,git,"1." + v,gitProfile);      createAndTestProfileInDataStore(fabricService,curator,git,"1." + v,zkProfile);    }  }}  finally {  fabricProxy.close();} @AT@ 2280 @LENGTH@ 1467
---UPD VariableDeclarationStatement@@CuratorFramework curator=curatorProxy.getService(); @TO@ CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 2366 @LENGTH@ 53
------UPD VariableDeclarationFragment@@curator=curatorProxy.getService() @TO@ curator=fabricService.adapt(CuratorFramework.class) @AT@ 2383 @LENGTH@ 35
---------UPD MethodInvocation@@curatorProxy.getService() @TO@ fabricService.adapt(CuratorFramework.class) @AT@ 2393 @LENGTH@ 25
------------UPD SimpleName@@Name:curatorProxy @TO@ Name:fabricService @AT@ 2393 @LENGTH@ 12
------------UPD SimpleName@@MethodName:getService:[] @TO@ MethodName:adapt:[CuratorFramework.class] @AT@ 2406 @LENGTH@ 12
---------------INS TypeLiteral@@CuratorFramework.class @TO@ SimpleName@@MethodName:getService:[] @AT@ 2287 @LENGTH@ 22
---UPD Block@@FinallyBody:{  fabricProxy.close();  curatorProxy.close();} @TO@ FinallyBody:{  fabricProxy.close();} @AT@ 3669 @LENGTH@ 78
------DEL ExpressionStatement@@MethodInvocation:curatorProxy.close() @AT@ 3716 @LENGTH@ 21
---------DEL MethodInvocation@@curatorProxy.close() @AT@ 3716 @LENGTH@ 20
------------DEL SimpleName@@Name:curatorProxy @AT@ 3716 @LENGTH@ 12
------------DEL SimpleName@@MethodName:close:[] @AT@ 3729 @LENGTH@ 7


UPD IfStatement@@if (configuration != null) {  defaultClasspathString=configuration.get(YarnConfiguration.YARN_APPLICATION_CLASSPATH);} @TO@ if (configuration != null) {  defaultClasspathString=configuration.get(YarnConfiguration.YARN_APPLICATION_CLASSPATH);  if (!StringUtils.hasText(defaultClasspathString)) {    defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH);  }} @AT@ 3425 @LENGTH@ 127
---UPD Block@@ThenBody:{  defaultClasspathString=configuration.get(YarnConfiguration.YARN_APPLICATION_CLASSPATH);} @TO@ ThenBody:{  defaultClasspathString=configuration.get(YarnConfiguration.YARN_APPLICATION_CLASSPATH);  if (!StringUtils.hasText(defaultClasspathString)) {    defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH);  }} @AT@ 3452 @LENGTH@ 100
------INS IfStatement@@if (!StringUtils.hasText(defaultClasspathString)) {  defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH);} @TO@ Block@@ThenBody:{  defaultClasspathString=configuration.get(YarnConfiguration.YARN_APPLICATION_CLASSPATH);} @AT@ 3552 @LENGTH@ 336
---------INS PrefixExpression@@!StringUtils.hasText(defaultClasspathString) @TO@ IfStatement@@if (!StringUtils.hasText(defaultClasspathString)) {  defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH);} @AT@ 3556 @LENGTH@ 44
------------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(defaultClasspathString) @AT@ 3556 @LENGTH@ 1
------------INS MethodInvocation@@StringUtils.hasText(defaultClasspathString) @TO@ PrefixExpression@@!StringUtils.hasText(defaultClasspathString) @AT@ 3557 @LENGTH@ 43
---------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(defaultClasspathString) @AT@ 3557 @LENGTH@ 11
---------------INS SimpleName@@MethodName:hasText:[defaultClasspathString] @TO@ MethodInvocation@@StringUtils.hasText(defaultClasspathString) @AT@ 3569 @LENGTH@ 31
------------------INS SimpleName@@defaultClasspathString @TO@ SimpleName@@MethodName:hasText:[defaultClasspathString] @AT@ 3577 @LENGTH@ 22
---------INS Block@@ThenBody:{  defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH);} @TO@ IfStatement@@if (!StringUtils.hasText(defaultClasspathString)) {  defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH);} @AT@ 3602 @LENGTH@ 286
------------INS ExpressionStatement@@Assignment:defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @TO@ Block@@ThenBody:{  defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH);} @AT@ 3755 @LENGTH@ 127
---------------INS Assignment@@defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @TO@ ExpressionStatement@@Assignment:defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @AT@ 3755 @LENGTH@ 126
------------------INS SimpleName@@defaultClasspathString @TO@ Assignment@@defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @AT@ 3755 @LENGTH@ 22
------------------INS Operator@@= @TO@ Assignment@@defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @AT@ 3777 @LENGTH@ 1
------------------INS MethodInvocation@@StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @TO@ Assignment@@defaultClasspathString=StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @AT@ 3780 @LENGTH@ 101
---------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @AT@ 3780 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:arrayToCommaDelimitedString:[YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH] @TO@ MethodInvocation@@StringUtils.arrayToCommaDelimitedString(YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) @AT@ 3800 @LENGTH@ 81
------------------------INS QualifiedName@@YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH @TO@ SimpleName@@MethodName:arrayToCommaDelimitedString:[YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH] @AT@ 3828 @LENGTH@ 52
---------------------------INS SimpleName@@YarnConfiguration @TO@ QualifiedName@@YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH @AT@ 3828 @LENGTH@ 17
---------------------------INS SimpleName@@DEFAULT_YARN_APPLICATION_CLASSPATH @TO@ QualifiedName@@YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH @AT@ 3846 @LENGTH@ 34


UPD MethodDeclaration@@public, void, MethodName:testSimpleOnYarnContainerStart,  @TO@ public, void, MethodName:testSimpleOnContainerStart,  @AT@ 1156 @LENGTH@ 689
---UPD SimpleName@@MethodName:testSimpleOnYarnContainerStart @TO@ MethodName:testSimpleOnContainerStart @AT@ 1168 @LENGTH@ 30
---UPD ExpressionStatement@@MethodInvocation:assertTrue(context.containsBean("testBean.test.onYarnContainerStart")) @TO@ MethodInvocation:assertTrue(context.containsBean("testBean.test.onContainerStart")) @AT@ 1626 @LENGTH@ 71
------UPD MethodInvocation@@assertTrue(context.containsBean("testBean.test.onYarnContainerStart")) @TO@ assertTrue(context.containsBean("testBean.test.onContainerStart")) @AT@ 1626 @LENGTH@ 70
---------UPD SimpleName@@MethodName:assertTrue:[context.containsBean("testBean.test.onYarnContainerStart")] @TO@ MethodName:assertTrue:[context.containsBean("testBean.test.onContainerStart")] @AT@ 1626 @LENGTH@ 70
------------UPD MethodInvocation@@context.containsBean("testBean.test.onYarnContainerStart") @TO@ context.containsBean("testBean.test.onContainerStart") @AT@ 1637 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:containsBean:["testBean.test.onYarnContainerStart"] @TO@ MethodName:containsBean:["testBean.test.onContainerStart"] @AT@ 1645 @LENGTH@ 50
------------------UPD StringLiteral@@"testBean.test.onYarnContainerStart" @TO@ "testBean.test.onContainerStart" @AT@ 1658 @LENGTH@ 36
---UPD VariableDeclarationStatement@@Object endpoint=context.getBean("testBean.test.onYarnContainerStart"); @TO@ Object endpoint=context.getBean("testBean.test.onContainerStart"); @AT@ 1700 @LENGTH@ 72
------UPD VariableDeclarationFragment@@endpoint=context.getBean("testBean.test.onYarnContainerStart") @TO@ endpoint=context.getBean("testBean.test.onContainerStart") @AT@ 1707 @LENGTH@ 64
---------UPD MethodInvocation@@context.getBean("testBean.test.onYarnContainerStart") @TO@ context.getBean("testBean.test.onContainerStart") @AT@ 1718 @LENGTH@ 53
------------UPD SimpleName@@MethodName:getBean:["testBean.test.onYarnContainerStart"] @TO@ MethodName:getBean:["testBean.test.onContainerStart"] @AT@ 1726 @LENGTH@ 45
---------------UPD StringLiteral@@"testBean.test.onYarnContainerStart" @TO@ "testBean.test.onContainerStart" @AT@ 1734 @LENGTH@ 36


INS MethodDeclaration@@public, void, MethodName:testNormalizeIPv6HttpEndpoint, Exception,  @TO@ TypeDeclaration@@[public]URISupportTest, ContextTestSupport @AT@ 4079 @LENGTH@ 241
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNormalizeIPv6HttpEndpoint, Exception,  @AT@ 4079 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNormalizeIPv6HttpEndpoint, Exception,  @AT@ 4086 @LENGTH@ 4
---INS SimpleName@@MethodName:testNormalizeIPv6HttpEndpoint @TO@ MethodDeclaration@@public, void, MethodName:testNormalizeIPv6HttpEndpoint, Exception,  @AT@ 4091 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNormalizeIPv6HttpEndpoint, Exception,  @AT@ 4130 @LENGTH@ 9
---INS VariableDeclarationStatement@@String result=URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test"); @TO@ MethodDeclaration@@public, void, MethodName:testNormalizeIPv6HttpEndpoint, Exception,  @AT@ 4150 @LENGTH@ 87
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String result=URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test"); @AT@ 4150 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test") @TO@ VariableDeclarationStatement@@String result=URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test"); @AT@ 4157 @LENGTH@ 79
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test") @AT@ 4157 @LENGTH@ 6
---------INS MethodInvocation@@URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test") @TO@ VariableDeclarationFragment@@result=URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test") @AT@ 4166 @LENGTH@ 70
------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test") @AT@ 4166 @LENGTH@ 10
------------INS SimpleName@@MethodName:normalizeUri:["http://[2a00:8a00:6000:40::1413]:30300/test"] @TO@ MethodInvocation@@URISupport.normalizeUri("http://[2a00:8a00:6000:40::1413]:30300/test") @AT@ 4177 @LENGTH@ 59
---------------INS StringLiteral@@"http://[2a00:8a00:6000:40::1413]:30300/test" @TO@ SimpleName@@MethodName:normalizeUri:["http://[2a00:8a00:6000:40::1413]:30300/test"] @AT@ 4190 @LENGTH@ 45
---INS ExpressionStatement@@MethodInvocation:assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test",result) @TO@ MethodDeclaration@@public, void, MethodName:testNormalizeIPv6HttpEndpoint, Exception,  @AT@ 4246 @LENGTH@ 68
------INS MethodInvocation@@assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test",result) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test",result) @AT@ 4246 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertEquals:["http://[2a00:8a00:6000:40::1413]:30300/test", result] @TO@ MethodInvocation@@assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test",result) @AT@ 4246 @LENGTH@ 67
------------INS StringLiteral@@"http://[2a00:8a00:6000:40::1413]:30300/test" @TO@ SimpleName@@MethodName:assertEquals:["http://[2a00:8a00:6000:40::1413]:30300/test", result] @AT@ 4259 @LENGTH@ 45
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertEquals:["http://[2a00:8a00:6000:40::1413]:30300/test", result] @AT@ 4306 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 23828 @LENGTH@ 363
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 23828 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 23835 @LENGTH@ 4
---INS SimpleName@@MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 23840 @LENGTH@ 59
---INS VariableDeclarationStatement@@Person p=new Person("Mary","Poppins"); @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 23907 @LENGTH@ 41
------INS SimpleType@@Person @TO@ VariableDeclarationStatement@@Person p=new Person("Mary","Poppins"); @AT@ 23907 @LENGTH@ 6
------INS VariableDeclarationFragment@@p=new Person("Mary","Poppins") @TO@ VariableDeclarationStatement@@Person p=new Person("Mary","Poppins"); @AT@ 23914 @LENGTH@ 33
---------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p=new Person("Mary","Poppins") @AT@ 23914 @LENGTH@ 1
---------INS ClassInstanceCreation@@Person["Mary", "Poppins"] @TO@ VariableDeclarationFragment@@p=new Person("Mary","Poppins") @AT@ 23918 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@Person["Mary", "Poppins"] @AT@ 23918 @LENGTH@ 3
------------INS SimpleType@@Person @TO@ ClassInstanceCreation@@Person["Mary", "Poppins"] @AT@ 23922 @LENGTH@ 6
------------INS StringLiteral@@"Mary" @TO@ ClassInstanceCreation@@Person["Mary", "Poppins"] @AT@ 23929 @LENGTH@ 6
------------INS StringLiteral@@"Poppins" @TO@ ClassInstanceCreation@@Person["Mary", "Poppins"] @AT@ 23937 @LENGTH@ 9
---INS VariableDeclarationStatement@@Address adr=new Address("some","2","where"); @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 23951 @LENGTH@ 48
------INS SimpleType@@Address @TO@ VariableDeclarationStatement@@Address adr=new Address("some","2","where"); @AT@ 23951 @LENGTH@ 7
------INS VariableDeclarationFragment@@adr=new Address("some","2","where") @TO@ VariableDeclarationStatement@@Address adr=new Address("some","2","where"); @AT@ 23959 @LENGTH@ 39
---------INS SimpleName@@adr @TO@ VariableDeclarationFragment@@adr=new Address("some","2","where") @AT@ 23959 @LENGTH@ 3
---------INS ClassInstanceCreation@@Address["some", "2", "where"] @TO@ VariableDeclarationFragment@@adr=new Address("some","2","where") @AT@ 23965 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@Address["some", "2", "where"] @AT@ 23965 @LENGTH@ 3
------------INS SimpleType@@Address @TO@ ClassInstanceCreation@@Address["some", "2", "where"] @AT@ 23969 @LENGTH@ 7
------------INS StringLiteral@@"some" @TO@ ClassInstanceCreation@@Address["some", "2", "where"] @AT@ 23977 @LENGTH@ 6
------------INS StringLiteral@@"2" @TO@ ClassInstanceCreation@@Address["some", "2", "where"] @AT@ 23985 @LENGTH@ 3
------------INS StringLiteral@@"where" @TO@ ClassInstanceCreation@@Address["some", "2", "where"] @AT@ 23990 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:p.setAddress(adr) @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 24002 @LENGTH@ 18
------INS MethodInvocation@@p.setAddress(adr) @TO@ ExpressionStatement@@MethodInvocation:p.setAddress(adr) @AT@ 24002 @LENGTH@ 17
---------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.setAddress(adr) @AT@ 24002 @LENGTH@ 1
---------INS SimpleName@@MethodName:setAddress:[adr] @TO@ MethodInvocation@@p.setAddress(adr) @AT@ 24004 @LENGTH@ 15
------------INS SimpleName@@adr @TO@ SimpleName@@MethodName:setAddress:[adr] @AT@ 24015 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:repository.save(p) @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 24024 @LENGTH@ 19
------INS MethodInvocation@@repository.save(p) @TO@ ExpressionStatement@@MethodInvocation:repository.save(p) @AT@ 24024 @LENGTH@ 18
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(p) @AT@ 24024 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[p] @TO@ MethodInvocation@@repository.save(p) @AT@ 24035 @LENGTH@ 7
------------INS SimpleName@@p @TO@ SimpleName@@MethodName:save:[p] @AT@ 24040 @LENGTH@ 1
---INS VariableDeclarationStatement@@Page<Person> result=repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)); @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 24047 @LENGTH@ 93
------INS ParameterizedType@@Page<Person> @TO@ VariableDeclarationStatement@@Page<Person> result=repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)); @AT@ 24047 @LENGTH@ 12
---------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 24047 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 24052 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)) @TO@ VariableDeclarationStatement@@Page<Person> result=repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)); @AT@ 24060 @LENGTH@ 79
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)) @AT@ 24060 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)) @TO@ VariableDeclarationFragment@@result=repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)) @AT@ 24069 @LENGTH@ 70
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)) @AT@ 24069 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByAddressIn:[Arrays.asList(adr), new PageRequest(0,10)] @TO@ MethodInvocation@@repository.findByAddressIn(Arrays.asList(adr),new PageRequest(0,10)) @AT@ 24080 @LENGTH@ 59
---------------INS MethodInvocation@@Arrays.asList(adr) @TO@ SimpleName@@MethodName:findByAddressIn:[Arrays.asList(adr), new PageRequest(0,10)] @AT@ 24096 @LENGTH@ 18
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(adr) @AT@ 24096 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:[adr] @TO@ MethodInvocation@@Arrays.asList(adr) @AT@ 24103 @LENGTH@ 11
---------------------INS SimpleName@@adr @TO@ SimpleName@@MethodName:asList:[adr] @AT@ 24110 @LENGTH@ 3
---------------INS ClassInstanceCreation@@PageRequest[0, 10] @TO@ SimpleName@@MethodName:findByAddressIn:[Arrays.asList(adr), new PageRequest(0,10)] @AT@ 24116 @LENGTH@ 22
------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 24116 @LENGTH@ 3
------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 24120 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 24132 @LENGTH@ 1
------------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 24135 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getContent(),hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:findByNestedPropertyInCollectionShouldFindMatchingDocuments,  @AT@ 24144 @LENGTH@ 44
------INS MethodInvocation@@assertThat(result.getContent(),hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getContent(),hasSize(1)) @AT@ 24144 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertThat:[result.getContent(), hasSize(1)] @TO@ MethodInvocation@@assertThat(result.getContent(),hasSize(1)) @AT@ 24144 @LENGTH@ 43
------------INS MethodInvocation@@result.getContent() @TO@ SimpleName@@MethodName:assertThat:[result.getContent(), hasSize(1)] @AT@ 24155 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getContent() @AT@ 24155 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getContent:[] @TO@ MethodInvocation@@result.getContent() @AT@ 24162 @LENGTH@ 12
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[result.getContent(), hasSize(1)] @AT@ 24176 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 24176 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 24184 @LENGTH@ 1


UPD VariableDeclarationStatement@@ServiceController<Endpoint> service=(ServiceController<Endpoint>)CurrentServiceContainer.getServiceContainer().getService(endpointServiceName); @TO@ ServiceController<Endpoint> service=(ServiceController<Endpoint>)currentServiceContainer().getService(endpointServiceName); @AT@ 6029 @LENGTH@ 146
---UPD VariableDeclarationFragment@@service=(ServiceController<Endpoint>)CurrentServiceContainer.getServiceContainer().getService(endpointServiceName) @TO@ service=(ServiceController<Endpoint>)currentServiceContainer().getService(endpointServiceName) @AT@ 6057 @LENGTH@ 117
------UPD CastExpression@@(ServiceController<Endpoint>)CurrentServiceContainer.getServiceContainer().getService(endpointServiceName) @TO@ (ServiceController<Endpoint>)currentServiceContainer().getService(endpointServiceName) @AT@ 6067 @LENGTH@ 107
---------UPD MethodInvocation@@CurrentServiceContainer.getServiceContainer().getService(endpointServiceName) @TO@ currentServiceContainer().getService(endpointServiceName) @AT@ 6097 @LENGTH@ 77
------------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:currentServiceContainer:[] @AT@ 6097 @LENGTH@ 45
------------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 6097 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertEquals("Quartz properties file not found in classpath: doesnotexist.properties",e.getMessage()) @TO@ MethodInvocation:assertEquals("Error loading Quartz properties file: doesnotexist.properties",e.getMessage()) @AT@ 2053 @LENGTH@ 103
---UPD MethodInvocation@@assertEquals("Quartz properties file not found in classpath: doesnotexist.properties",e.getMessage()) @TO@ assertEquals("Error loading Quartz properties file: doesnotexist.properties",e.getMessage()) @AT@ 2053 @LENGTH@ 102
------UPD SimpleName@@MethodName:assertEquals:["Quartz properties file not found in classpath: doesnotexist.properties", e.getMessage()] @TO@ MethodName:assertEquals:["Error loading Quartz properties file: doesnotexist.properties", e.getMessage()] @AT@ 2053 @LENGTH@ 102
---------UPD StringLiteral@@"Quartz properties file not found in classpath: doesnotexist.properties" @TO@ "Error loading Quartz properties file: doesnotexist.properties" @AT@ 2066 @LENGTH@ 72


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedHeaderReceived("password","++%%w?rd") @TO@ MethodInvocation:getMockEndpoint("mock:result").expectedHeaderReceived("password","++%%w?rd)") @AT@ 3195 @LENGTH@ 78
---UPD MethodInvocation@@getMockEndpoint("mock:result").expectedHeaderReceived("password","++%%w?rd") @TO@ getMockEndpoint("mock:result").expectedHeaderReceived("password","++%%w?rd)") @AT@ 3195 @LENGTH@ 77
------UPD SimpleName@@MethodName:expectedHeaderReceived:["password", "++%%w?rd"] @TO@ MethodName:expectedHeaderReceived:["password", "++%%w?rd)"] @AT@ 3226 @LENGTH@ 46
---------UPD StringLiteral@@"++%%w?rd" @TO@ "++%%w?rd)" @AT@ 3261 @LENGTH@ 10


INS FieldDeclaration@@private, long, [timeout=60 * 1000L] @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]EsbProfileRedeployTest, FabricTestSupport @AT@ 1879 @LENGTH@ 34
---INS Modifier@@private @TO@ FieldDeclaration@@private, long, [timeout=60 * 1000L] @AT@ 1879 @LENGTH@ 7
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, long, [timeout=60 * 1000L] @AT@ 1887 @LENGTH@ 4
---INS VariableDeclarationFragment@@timeout=60 * 1000L @TO@ FieldDeclaration@@private, long, [timeout=60 * 1000L] @AT@ 1892 @LENGTH@ 20
------INS SimpleName@@timeout @TO@ VariableDeclarationFragment@@timeout=60 * 1000L @AT@ 1892 @LENGTH@ 7
------INS InfixExpression@@60 * 1000L @TO@ VariableDeclarationFragment@@timeout=60 * 1000L @AT@ 1902 @LENGTH@ 10
---------INS NumberLiteral@@60 @TO@ InfixExpression@@60 * 1000L @AT@ 1902 @LENGTH@ 2
---------INS Operator@@* @TO@ InfixExpression@@60 * 1000L @AT@ 1904 @LENGTH@ 1
---------INS NumberLiteral@@1000L @TO@ InfixExpression@@60 * 1000L @AT@ 1907 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target) @TO@ MethodInvocation:EjbLogger.EJB3_LOGGER.warn(EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target).getMessage()) @AT@ 6059 @LENGTH@ 99
---UPD MethodInvocation@@EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target) @TO@ EjbLogger.EJB3_LOGGER.warn(EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target).getMessage()) @AT@ 6059 @LENGTH@ 98
------UPD QualifiedName@@Name:EjbMessages.MESSAGES @TO@ Name:EjbLogger.EJB3_LOGGER @AT@ 6059 @LENGTH@ 20
------UPD SimpleName@@MethodName:annotationOnlyAllowedOnClass:[sessionBeanAnnotation.name().toString(), target] @TO@ MethodName:warn:[EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target).getMessage()] @AT@ 6080 @LENGTH@ 77
---------INS MethodInvocation@@EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target).getMessage() @TO@ SimpleName@@MethodName:annotationOnlyAllowedOnClass:[sessionBeanAnnotation.name().toString(), target] @AT@ 6086 @LENGTH@ 111
------------INS MethodInvocation@@MethodName:annotationOnlyAllowedOnClass:[sessionBeanAnnotation.name().toString(), target] @TO@ MethodInvocation@@EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target).getMessage() @AT@ 6086 @LENGTH@ 98
---------------INS MethodInvocation@@sessionBeanAnnotation.name().toString() @TO@ MethodInvocation@@MethodName:annotationOnlyAllowedOnClass:[sessionBeanAnnotation.name().toString(), target] @AT@ 6136 @LENGTH@ 39
------------------MOV MethodInvocation@@MethodName:name:[] @TO@ MethodInvocation@@sessionBeanAnnotation.name().toString() @AT@ 6109 @LENGTH@ 28
------------------MOV SimpleName@@Name:sessionBeanAnnotation @TO@ MethodInvocation@@sessionBeanAnnotation.name().toString() @AT@ 6109 @LENGTH@ 21
------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sessionBeanAnnotation.name().toString() @AT@ 6138 @LENGTH@ 10
---------------INS SimpleName@@target @TO@ MethodInvocation@@MethodName:annotationOnlyAllowedOnClass:[sessionBeanAnnotation.name().toString(), target] @AT@ 6177 @LENGTH@ 6
------------INS QualifiedName@@Name:EjbMessages.MESSAGES @TO@ MethodInvocation@@EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target).getMessage() @AT@ 6086 @LENGTH@ 20
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@EjbMessages.MESSAGES.annotationOnlyAllowedOnClass(sessionBeanAnnotation.name().toString(),target).getMessage() @AT@ 6185 @LENGTH@ 12
---------DEL MethodInvocation@@sessionBeanAnnotation.name().toString() @AT@ 6109 @LENGTH@ 39
---------DEL SimpleName@@target @AT@ 6150 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @TO@ MethodInvocation:assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @AT@ 18644 @LENGTH@ 267
---UPD MethodInvocation@@assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @TO@ assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @AT@ 18644 @LENGTH@ 266
------UPD SimpleName@@MethodName:assertEquals:[0, driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()] @TO@ MethodName:assertEquals:[0, driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()] @AT@ 18644 @LENGTH@ 266
---------UPD MethodInvocation@@driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode() @TO@ driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode() @AT@ 18660 @LENGTH@ 249
------------UPD MethodInvocation@@MethodName:run:["create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'"] @TO@ MethodName:run:["create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'"] @AT@ 18660 @LENGTH@ 231
---------------UPD InfixExpression@@"create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'" @TO@ "create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file:///"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'" @AT@ 18671 @LENGTH@ 219
------------------UPD StringLiteral@@" stored as textfile location 'file://" @TO@ " stored as textfile location 'file:///" @AT@ 18790 @LENGTH@ 39


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @Transactional, @TransactionConfiguration(transactionManager="transactionManager"), public]TransactionalRedisCacheManagerWithRollbackUnitTests,  @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration, @Transactional, @TransactionConfiguration(transactionManager="transactionManager"), public]TransactionalRedisCacheManagerWithRollbackUnitTests,  @AT@ 2133 @LENGTH@ 2041
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 2133 @LENGTH@ 39


INS MethodDeclaration@@public, OAuth2AuthorizationServerConfigurer, MethodName:tokenService, AuthorizationServerTokenServices tokenServices,  @TO@ TypeDeclaration@@[public, final]OAuth2AuthorizationServerConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 5627 @LENGTH@ 161
---INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2AuthorizationServerConfigurer, MethodName:tokenService, AuthorizationServerTokenServices tokenServices,  @AT@ 5627 @LENGTH@ 6
---INS SimpleType@@OAuth2AuthorizationServerConfigurer @TO@ MethodDeclaration@@public, OAuth2AuthorizationServerConfigurer, MethodName:tokenService, AuthorizationServerTokenServices tokenServices,  @AT@ 5634 @LENGTH@ 35
---INS SimpleName@@MethodName:tokenService @TO@ MethodDeclaration@@public, OAuth2AuthorizationServerConfigurer, MethodName:tokenService, AuthorizationServerTokenServices tokenServices,  @AT@ 5670 @LENGTH@ 12
---INS SingleVariableDeclaration@@AuthorizationServerTokenServices tokenServices @TO@ MethodDeclaration@@public, OAuth2AuthorizationServerConfigurer, MethodName:tokenService, AuthorizationServerTokenServices tokenServices,  @AT@ 5683 @LENGTH@ 46
------INS SimpleType@@AuthorizationServerTokenServices @TO@ SingleVariableDeclaration@@AuthorizationServerTokenServices tokenServices @AT@ 5683 @LENGTH@ 32
------INS SimpleName@@tokenServices @TO@ SingleVariableDeclaration@@AuthorizationServerTokenServices tokenServices @AT@ 5716 @LENGTH@ 13
---INS ExpressionStatement@@Assignment:this.tokenServices=tokenServices @TO@ MethodDeclaration@@public, OAuth2AuthorizationServerConfigurer, MethodName:tokenService, AuthorizationServerTokenServices tokenServices,  @AT@ 5735 @LENGTH@ 35
------INS Assignment@@this.tokenServices=tokenServices @TO@ ExpressionStatement@@Assignment:this.tokenServices=tokenServices @AT@ 5735 @LENGTH@ 34
---------INS FieldAccess@@this.tokenServices @TO@ Assignment@@this.tokenServices=tokenServices @AT@ 5735 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenServices @AT@ 5735 @LENGTH@ 4
------------INS SimpleName@@tokenServices @TO@ FieldAccess@@this.tokenServices @AT@ 5740 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.tokenServices=tokenServices @AT@ 5753 @LENGTH@ 1
---------INS SimpleName@@tokenServices @TO@ Assignment@@this.tokenServices=tokenServices @AT@ 5756 @LENGTH@ 13
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, OAuth2AuthorizationServerConfigurer, MethodName:tokenService, AuthorizationServerTokenServices tokenServices,  @AT@ 5773 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 5780 @LENGTH@ 4


DEL VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @AT@ 1960 @LENGTH@ 117
---DEL ParameterizedType@@ServiceProxy<CuratorFramework> @AT@ 1960 @LENGTH@ 30
------DEL SimpleType@@ServiceProxy @AT@ 1960 @LENGTH@ 12
------DEL SimpleType@@CuratorFramework @AT@ 1973 @LENGTH@ 16
---DEL VariableDeclarationFragment@@curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 1991 @LENGTH@ 85
------DEL SimpleName@@curatorProxy @AT@ 1991 @LENGTH@ 12
------DEL MethodInvocation@@ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 2006 @LENGTH@ 70
---------DEL SimpleName@@Name:ServiceProxy @AT@ 2006 @LENGTH@ 12
---------DEL SimpleName@@MethodName:createServiceProxy:[bundleContext, CuratorFramework.class] @AT@ 2019 @LENGTH@ 57
------------DEL SimpleName@@bundleContext @AT@ 2038 @LENGTH@ 13
------------DEL TypeLiteral@@CuratorFramework.class @AT@ 2053 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:visit, ConfigurationNodeVisitor visitor,  @TO@ public, void, MethodName:visit, ConfigurationNodeVisitor<ConfigurationNode> visitor,  @AT@ 9872 @LENGTH@ 413
---UPD SingleVariableDeclaration@@ConfigurationNodeVisitor visitor @TO@ ConfigurationNodeVisitor<ConfigurationNode> visitor @AT@ 9890 @LENGTH@ 32
------DEL SimpleType@@ConfigurationNodeVisitor @AT@ 9890 @LENGTH@ 24
------INS ParameterizedType@@ConfigurationNodeVisitor<ConfigurationNode> @TO@ SingleVariableDeclaration@@ConfigurationNodeVisitor visitor @AT@ 9890 @LENGTH@ 43
---------INS SimpleType@@ConfigurationNodeVisitor @TO@ ParameterizedType@@ConfigurationNodeVisitor<ConfigurationNode> @AT@ 9890 @LENGTH@ 24
---------INS SimpleType@@ConfigurationNode @TO@ ParameterizedType@@ConfigurationNodeVisitor<ConfigurationNode> @AT@ 9915 @LENGTH@ 17
---UPD IfStatement@@if (!visitor.terminate()) {  visitor.visitBeforeChildren(this);  children.visit(visitor);  attributes.visit(visitor);  visitor.visitAfterChildren(this);} @TO@ if (!visitor.terminate()) {  visitor.visitBeforeChildren(this,null);  children.visit(visitor);  attributes.visit(visitor);  visitor.visitAfterChildren(this,null);} @AT@ 10065 @LENGTH@ 214
------UPD Block@@ThenBody:{  visitor.visitBeforeChildren(this);  children.visit(visitor);  attributes.visit(visitor);  visitor.visitAfterChildren(this);} @TO@ ThenBody:{  visitor.visitBeforeChildren(this,null);  children.visit(visitor);  attributes.visit(visitor);  visitor.visitAfterChildren(this,null);} @AT@ 10099 @LENGTH@ 180
---------UPD ExpressionStatement@@MethodInvocation:visitor.visitBeforeChildren(this) @TO@ MethodInvocation:visitor.visitBeforeChildren(this,null) @AT@ 10113 @LENGTH@ 34
------------UPD MethodInvocation@@visitor.visitBeforeChildren(this) @TO@ visitor.visitBeforeChildren(this,null) @AT@ 10113 @LENGTH@ 33
---------------UPD SimpleName@@MethodName:visitBeforeChildren:[this] @TO@ MethodName:visitBeforeChildren:[this, null] @AT@ 10121 @LENGTH@ 25
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:visitBeforeChildren:[this] @AT@ 10166 @LENGTH@ 4
---------UPD ExpressionStatement@@MethodInvocation:visitor.visitAfterChildren(this) @TO@ MethodInvocation:visitor.visitAfterChildren(this,null) @AT@ 10236 @LENGTH@ 33
------------UPD MethodInvocation@@visitor.visitAfterChildren(this) @TO@ visitor.visitAfterChildren(this,null) @AT@ 10236 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:visitAfterChildren:[this] @TO@ MethodName:visitAfterChildren:[this, null] @AT@ 10244 @LENGTH@ 24
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:visitAfterChildren:[this] @AT@ 10294 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:retrieveToken(getParametersForTokenRequest(resource),new HttpHeaders(),resource) @TO@ MethodInvocation:retrieveToken(request,resource,getParametersForTokenRequest(resource),new HttpHeaders()) @AT@ 2011 @LENGTH@ 90
---UPD MethodInvocation@@retrieveToken(getParametersForTokenRequest(resource),new HttpHeaders(),resource) @TO@ retrieveToken(request,resource,getParametersForTokenRequest(resource),new HttpHeaders()) @AT@ 2018 @LENGTH@ 82
------UPD SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource), new HttpHeaders(), resource] @TO@ MethodName:retrieveToken:[request, resource, getParametersForTokenRequest(resource), new HttpHeaders()] @AT@ 2018 @LENGTH@ 82
---------INS SimpleName@@request @TO@ SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource), new HttpHeaders(), resource] @AT@ 2032 @LENGTH@ 7
---------INS SimpleName@@resource @TO@ SimpleName@@MethodName:retrieveToken:[getParametersForTokenRequest(resource), new HttpHeaders(), resource] @AT@ 2041 @LENGTH@ 8
---------DEL SimpleName@@resource @AT@ 2091 @LENGTH@ 8


UPD VariableDeclarationStatement@@String db_dir=getTestDir() + "/hbasedb"; @TO@ String db_dir=HCatUtil.makePathASafeFileName(getTestDir() + "/hbasedb"); @AT@ 7128 @LENGTH@ 42
---UPD VariableDeclarationFragment@@db_dir=getTestDir() + "/hbasedb" @TO@ db_dir=HCatUtil.makePathASafeFileName(getTestDir() + "/hbasedb") @AT@ 7135 @LENGTH@ 34
------DEL InfixExpression@@getTestDir() + "/hbasedb" @AT@ 7144 @LENGTH@ 25
------INS MethodInvocation@@HCatUtil.makePathASafeFileName(getTestDir() + "/hbasedb") @TO@ VariableDeclarationFragment@@db_dir=getTestDir() + "/hbasedb" @AT@ 7149 @LENGTH@ 57
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(getTestDir() + "/hbasedb") @AT@ 7149 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[getTestDir() + "/hbasedb"] @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(getTestDir() + "/hbasedb") @AT@ 7158 @LENGTH@ 48
------------INS InfixExpression@@getTestDir() + "/hbasedb" @TO@ SimpleName@@MethodName:makePathASafeFileName:[getTestDir() + "/hbasedb"] @AT@ 7180 @LENGTH@ 25
---------------MOV MethodInvocation@@MethodName:getTestDir:[] @TO@ InfixExpression@@getTestDir() + "/hbasedb" @AT@ 7144 @LENGTH@ 12
---------------MOV Operator@@+ @TO@ InfixExpression@@getTestDir() + "/hbasedb" @AT@ 7156 @LENGTH@ 1
---------------MOV StringLiteral@@"/hbasedb" @TO@ InfixExpression@@getTestDir() + "/hbasedb" @AT@ 7159 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:builder.addPropertyValue("flowType",DefaultFlow.class) @TO@ MethodDeclaration@@protected, void, MethodName:doParse, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 3686 @LENGTH@ 56
---INS MethodInvocation@@builder.addPropertyValue("flowType",DefaultFlow.class) @TO@ ExpressionStatement@@MethodInvocation:builder.addPropertyValue("flowType",DefaultFlow.class) @AT@ 3686 @LENGTH@ 55
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addPropertyValue("flowType",DefaultFlow.class) @AT@ 3686 @LENGTH@ 7
------INS SimpleName@@MethodName:addPropertyValue:["flowType", DefaultFlow.class] @TO@ MethodInvocation@@builder.addPropertyValue("flowType",DefaultFlow.class) @AT@ 3694 @LENGTH@ 47
---------INS StringLiteral@@"flowType" @TO@ SimpleName@@MethodName:addPropertyValue:["flowType", DefaultFlow.class] @AT@ 3711 @LENGTH@ 10
---------INS TypeLiteral@@DefaultFlow.class @TO@ SimpleName@@MethodName:addPropertyValue:["flowType", DefaultFlow.class] @AT@ 3723 @LENGTH@ 17


UPD TypeDeclaration@@[abstract]MessageBuilderSupport,  @TO@ [public, abstract]MessageBuilderSupport,  @AT@ 918 @LENGTH@ 8815
---INS Modifier@@public @TO@ TypeDeclaration@@[abstract]MessageBuilderSupport,  @AT@ 918 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:System.out.println("ldapServer1 = " + ldapServer1) @TO@ MethodInvocation:LOGGER.info("ldapServer1 = " + ldapServer1) @AT@ 8010 @LENGTH@ 51
---UPD MethodInvocation@@System.out.println("ldapServer1 = " + ldapServer1) @TO@ LOGGER.info("ldapServer1 = " + ldapServer1) @AT@ 8010 @LENGTH@ 50
------DEL QualifiedName@@Name:System.out @AT@ 8010 @LENGTH@ 10
------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@System.out.println("ldapServer1 = " + ldapServer1) @AT@ 8010 @LENGTH@ 6
------UPD SimpleName@@MethodName:println:["ldapServer1 = " + ldapServer1] @TO@ MethodName:info:["ldapServer1 = " + ldapServer1] @AT@ 8021 @LENGTH@ 39


UPD ReturnStatement@@ClassInstanceCreation:new RequestOptions(ResponseMode.GET_ALL,this.timeout,false,FILTER,Message.Flag.DONT_BUNDLE) @TO@ ClassInstanceCreation:new RequestOptions(ResponseMode.GET_ALL,this.timeout,false,FILTER,Message.Flag.DONT_BUNDLE,Message.Flag.OOB) @AT@ 8146 @LENGTH@ 103
---UPD ClassInstanceCreation@@RequestOptions[ResponseMode.GET_ALL, this.timeout, false, FILTER, Message.Flag.DONT_BUNDLE] @TO@ RequestOptions[ResponseMode.GET_ALL, this.timeout, false, FILTER, Message.Flag.DONT_BUNDLE, Message.Flag.OOB] @AT@ 8153 @LENGTH@ 95
------INS QualifiedName@@Message.Flag.OOB @TO@ ClassInstanceCreation@@RequestOptions[ResponseMode.GET_ALL, this.timeout, false, FILTER, Message.Flag.DONT_BUNDLE] @AT@ 8249 @LENGTH@ 16
---------INS QualifiedName@@Message.Flag @TO@ QualifiedName@@Message.Flag.OOB @AT@ 8249 @LENGTH@ 12
------------INS SimpleName@@Message @TO@ QualifiedName@@Message.Flag @AT@ 8249 @LENGTH@ 7
------------INS SimpleName@@Flag @TO@ QualifiedName@@Message.Flag @AT@ 8257 @LENGTH@ 4
---------INS SimpleName@@OOB @TO@ QualifiedName@@Message.Flag.OOB @AT@ 8262 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from("file:target/done?doneFileName=done&initialDelay=0&delay=10").to("mock:result") @TO@ MethodInvocation:from("file:target/done?doneFileName=done&initialDelay=0&delay=10").convertBodyTo(String.class).to("mock:result") @AT@ 2493 @LENGTH@ 85
---UPD MethodInvocation@@from("file:target/done?doneFileName=done&initialDelay=0&delay=10").to("mock:result") @TO@ from("file:target/done?doneFileName=done&initialDelay=0&delay=10").convertBodyTo(String.class).to("mock:result") @AT@ 2493 @LENGTH@ 84
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from("file:target/done?doneFileName=done&initialDelay=0&delay=10").to("mock:result") @AT@ 2493 @LENGTH@ 115
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 2595 @LENGTH@ 12


UPD IfStatement@@if (f.getName().equals(file.getFileNameOnly())) {  newLastModified=f.getTimestamp().getTimeInMillis();  newLength=f.getSize();} @TO@ if (f.getName().equals(file.getFileNameOnly())) {  newLength=f.getSize();  if (f.getTimestamp() != null) {    newLastModified=f.getTimestamp().getTimeInMillis();  }} @AT@ 3870 @LENGTH@ 186
---UPD Block@@ThenBody:{  newLastModified=f.getTimestamp().getTimeInMillis();  newLength=f.getSize();} @TO@ ThenBody:{  newLength=f.getSize();  if (f.getTimestamp() != null) {    newLastModified=f.getTimestamp().getTimeInMillis();  }} @AT@ 3918 @LENGTH@ 138
------INS IfStatement@@if (f.getTimestamp() != null) {  newLastModified=f.getTimestamp().getTimeInMillis();} @TO@ Block@@ThenBody:{  newLastModified=f.getTimestamp().getTimeInMillis();  newLength=f.getSize();} @AT@ 3985 @LENGTH@ 131
---------INS InfixExpression@@f.getTimestamp() != null @TO@ IfStatement@@if (f.getTimestamp() != null) {  newLastModified=f.getTimestamp().getTimeInMillis();} @AT@ 3989 @LENGTH@ 24
------------INS MethodInvocation@@f.getTimestamp() @TO@ InfixExpression@@f.getTimestamp() != null @AT@ 3989 @LENGTH@ 16
---------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.getTimestamp() @AT@ 3989 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getTimestamp:[] @TO@ MethodInvocation@@f.getTimestamp() @AT@ 3991 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@f.getTimestamp() != null @AT@ 4005 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@f.getTimestamp() != null @AT@ 4009 @LENGTH@ 4
---------INS Block@@ThenBody:{  newLastModified=f.getTimestamp().getTimeInMillis();} @TO@ IfStatement@@if (f.getTimestamp() != null) {  newLastModified=f.getTimestamp().getTimeInMillis();} @AT@ 4015 @LENGTH@ 101
------------MOV ExpressionStatement@@Assignment:newLastModified=f.getTimestamp().getTimeInMillis() @TO@ Block@@ThenBody:{  newLastModified=f.getTimestamp().getTimeInMillis();} @AT@ 3940 @LENGTH@ 53


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("You have defined query method in the repository but " + "you don't have no query lookup strategy defined. The " + "infrastructure apparently does not support query methods!") @TO@ ClassInstanceCreation:new IllegalStateException("You have defined query method in the repository but " + "you don't have any query lookup strategy defined. The " + "infrastructure apparently does not support query methods!") @AT@ 10770 @LENGTH@ 222
---UPD ClassInstanceCreation@@IllegalStateException["You have defined query method in the repository but " + "you don't have no query lookup strategy defined. The " + "infrastructure apparently does not support query methods!"] @TO@ IllegalStateException["You have defined query method in the repository but " + "you don't have any query lookup strategy defined. The " + "infrastructure apparently does not support query methods!"] @AT@ 10776 @LENGTH@ 215
------UPD InfixExpression@@"You have defined query method in the repository but " + "you don't have no query lookup strategy defined. The " + "infrastructure apparently does not support query methods!" @TO@ "You have defined query method in the repository but " + "you don't have any query lookup strategy defined. The " + "infrastructure apparently does not support query methods!" @AT@ 10802 @LENGTH@ 188
---------UPD StringLiteral@@"you don't have no query lookup strategy defined. The " @TO@ "you don't have any query lookup strategy defined. The " @AT@ 10866 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(bean.isPostConstructCalled()) @TO@ MethodInvocation:Assert.assertTrue(InterceptedWithProceedSLSB.isPostConstructCalled()) @AT@ 2787 @LENGTH@ 48
---UPD MethodInvocation@@Assert.assertTrue(bean.isPostConstructCalled()) @TO@ Assert.assertTrue(InterceptedWithProceedSLSB.isPostConstructCalled()) @AT@ 2787 @LENGTH@ 47
------UPD SimpleName@@MethodName:assertTrue:[bean.isPostConstructCalled()] @TO@ MethodName:assertTrue:[InterceptedWithProceedSLSB.isPostConstructCalled()] @AT@ 2794 @LENGTH@ 40
---------UPD MethodInvocation@@bean.isPostConstructCalled() @TO@ InterceptedWithProceedSLSB.isPostConstructCalled() @AT@ 2805 @LENGTH@ 28
------------UPD SimpleName@@Name:bean @TO@ Name:InterceptedWithProceedSLSB @AT@ 2805 @LENGTH@ 4


UPD VariableDeclarationStatement@@NodeHandler<T> nodeHandler=getConfiguration().getModel().getNodeHandler(); @TO@ NodeHandler<T> nodeHandler=getConfiguration().getNodeModel().getNodeHandler(); @AT@ 3481 @LENGTH@ 92
---UPD VariableDeclarationFragment@@nodeHandler=getConfiguration().getModel().getNodeHandler() @TO@ nodeHandler=getConfiguration().getNodeModel().getNodeHandler() @AT@ 3496 @LENGTH@ 76
------UPD MethodInvocation@@getConfiguration().getModel().getNodeHandler() @TO@ getConfiguration().getNodeModel().getNodeHandler() @AT@ 3526 @LENGTH@ 46
---------UPD MethodInvocation@@MethodName:getModel:[] @TO@ MethodName:getNodeModel:[] @AT@ 3526 @LENGTH@ 29


UPD MethodDeclaration@@public, boolean, MethodName:isPostConstructCalled,  @TO@ public, static, boolean, MethodName:isPostConstructCalled,  @AT@ 2004 @LENGTH@ 82
---INS Modifier@@static @TO@ MethodDeclaration@@public, boolean, MethodName:isPostConstructCalled,  @AT@ 2011 @LENGTH@ 6


UPD VariableDeclarationStatement@@SimpleStepBuilder builder=new SimpleStepBuilder(new StepBuilder(name)); @TO@ SimpleStepBuilder builder=getSimpleStepBuilder(name); @AT@ 13778 @LENGTH@ 73
---UPD VariableDeclarationFragment@@builder=new SimpleStepBuilder(new StepBuilder(name)) @TO@ builder=getSimpleStepBuilder(name) @AT@ 13796 @LENGTH@ 54
------DEL ClassInstanceCreation@@SimpleStepBuilder[new StepBuilder(name)] @AT@ 13806 @LENGTH@ 44
---------DEL New@@new @AT@ 13806 @LENGTH@ 3
---------DEL SimpleType@@SimpleStepBuilder @AT@ 13810 @LENGTH@ 17
---------DEL ClassInstanceCreation@@StepBuilder[name] @AT@ 13828 @LENGTH@ 21
------------DEL New@@new @AT@ 13828 @LENGTH@ 3
------------DEL SimpleType@@StepBuilder @AT@ 13832 @LENGTH@ 11
------------DEL SimpleName@@name @AT@ 13844 @LENGTH@ 4
------INS MethodInvocation@@getSimpleStepBuilder(name) @TO@ VariableDeclarationFragment@@builder=new SimpleStepBuilder(new StepBuilder(name)) @AT@ 13806 @LENGTH@ 26
---------INS SimpleName@@MethodName:getSimpleStepBuilder:[name] @TO@ MethodInvocation@@getSimpleStepBuilder(name) @AT@ 13806 @LENGTH@ 26
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:getSimpleStepBuilder:[name] @AT@ 13827 @LENGTH@ 4


UPD TypeDeclaration@@[@Ignore("[FABRIC-617] Fix fab/fab-core tests"), public]JarClassLoaderTest, DependencyTestSupport @TO@ [public]JarClassLoaderTest, DependencyTestSupport @AT@ 877 @LENGTH@ 1372
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-617] Fix fab/fab-core tests") @AT@ 877 @LENGTH@ 46


UPD VariableDeclarationStatement@@BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertiesFile),"UTF8")); @TO@ BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertiesFile),StandardCharsets.UTF_8)); @AT@ 6113 @LENGTH@ 109
---UPD VariableDeclarationFragment@@bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertiesFile),"UTF8")) @TO@ bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertiesFile),StandardCharsets.UTF_8)) @AT@ 6128 @LENGTH@ 93
------UPD ClassInstanceCreation@@BufferedWriter[new OutputStreamWriter(new FileOutputStream(propertiesFile),"UTF8")] @TO@ BufferedWriter[new OutputStreamWriter(new FileOutputStream(propertiesFile),StandardCharsets.UTF_8)] @AT@ 6133 @LENGTH@ 88
---------UPD ClassInstanceCreation@@OutputStreamWriter[new FileOutputStream(propertiesFile), "UTF8"] @TO@ OutputStreamWriter[new FileOutputStream(propertiesFile), StandardCharsets.UTF_8] @AT@ 6152 @LENGTH@ 68
------------DEL StringLiteral@@"UTF8" @AT@ 6213 @LENGTH@ 6
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@OutputStreamWriter[new FileOutputStream(propertiesFile), "UTF8"] @AT@ 6220 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6220 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 6237 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2904 @LENGTH@ 109
---UPD Assignment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2904 @LENGTH@ 108
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 2909 @LENGTH@ 103
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 2928 @LENGTH@ 83
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 2986 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 2986 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 2994 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 3002 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @AT@ 2994 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2994 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3011 @LENGTH@ 5


UPD VariableDeclarationStatement@@URI httpUri=URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encode(uri)),parameters); @TO@ URI httpUri=URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encodeHttpURI(uri)),parameters); @AT@ 3338 @LENGTH@ 105
---UPD VariableDeclarationFragment@@httpUri=URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encode(uri)),parameters) @TO@ httpUri=URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encodeHttpURI(uri)),parameters) @AT@ 3342 @LENGTH@ 100
------UPD MethodInvocation@@URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encode(uri)),parameters) @TO@ URISupport.createRemainingURI(new URI(UnsafeUriCharactersEncoder.encodeHttpURI(uri)),parameters) @AT@ 3352 @LENGTH@ 90
---------UPD SimpleName@@MethodName:createRemainingURI:[new URI(UnsafeUriCharactersEncoder.encode(uri)), parameters] @TO@ MethodName:createRemainingURI:[new URI(UnsafeUriCharactersEncoder.encodeHttpURI(uri)), parameters] @AT@ 3363 @LENGTH@ 79
------------UPD ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(uri)] @TO@ URI[UnsafeUriCharactersEncoder.encodeHttpURI(uri)] @AT@ 3382 @LENGTH@ 47
---------------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 3390 @LENGTH@ 38
------------------UPD SimpleName@@MethodName:encode:[uri] @TO@ MethodName:encodeHttpURI:[uri] @AT@ 3417 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:System.out.println("ldapServer2 = " + ldapServer2) @TO@ MethodInvocation:LOGGER.info("ldapServer2 = " + ldapServer2) @AT@ 10129 @LENGTH@ 51
---UPD MethodInvocation@@System.out.println("ldapServer2 = " + ldapServer2) @TO@ LOGGER.info("ldapServer2 = " + ldapServer2) @AT@ 10129 @LENGTH@ 50
------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@System.out.println("ldapServer2 = " + ldapServer2) @AT@ 10122 @LENGTH@ 6
------DEL QualifiedName@@Name:System.out @AT@ 10129 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:["ldapServer2 = " + ldapServer2] @TO@ MethodName:info:["ldapServer2 = " + ldapServer2] @AT@ 10140 @LENGTH@ 39


UPD TypeDeclaration@@[@ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]ClusterBaseTestClassSubmitTests, AbstractYarnClusterTests @TO@ [@ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, @DirtiesContext(classMode=ClassMode.AFTER_CLASS), public]ClusterBaseTestClassSubmitTests, AbstractYarnClusterTests @AT@ 1681 @LENGTH@ 2354
---INS NormalAnnotation@@@DirtiesContext(classMode=ClassMode.AFTER_CLASS) @TO@ TypeDeclaration@@[@ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]ClusterBaseTestClassSubmitTests, AbstractYarnClusterTests @AT@ 1897 @LENGTH@ 48


UPD CatchClause@@catch (ShutdownSignalException e) {  Object shutdownReason=e.getReason();  if (shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText())) {    logger.debug("Consumer received Shutdown Signal, processing stopped.",e);  } else {    this.logConsumerException(e);  }} @TO@ catch (ShutdownSignalException e) {  if (RabbitUtils.isNormalShutdown(e)) {    logger.debug("Consumer received Shutdown Signal, processing stopped: " + e.getMessage());  } else {    this.logConsumerException(e);  }} @AT@ 30608 @LENGTH@ 445
---DEL VariableDeclarationStatement@@Object shutdownReason=e.getReason(); @AT@ 30648 @LENGTH@ 38
------DEL SimpleType@@Object @AT@ 30648 @LENGTH@ 6
------DEL VariableDeclarationFragment@@shutdownReason=e.getReason() @AT@ 30655 @LENGTH@ 30
---------DEL SimpleName@@shutdownReason @AT@ 30655 @LENGTH@ 14
---------DEL MethodInvocation@@e.getReason() @AT@ 30672 @LENGTH@ 13
------------DEL SimpleName@@Name:e @AT@ 30672 @LENGTH@ 1
------------DEL SimpleName@@MethodName:getReason:[] @AT@ 30674 @LENGTH@ 11
---UPD IfStatement@@if (shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText())) {  logger.debug("Consumer received Shutdown Signal, processing stopped.",e);} else {  this.logConsumerException(e);} @TO@ if (RabbitUtils.isNormalShutdown(e)) {  logger.debug("Consumer received Shutdown Signal, processing stopped: " + e.getMessage());} else {  this.logConsumerException(e);} @AT@ 30691 @LENGTH@ 357
------INS MethodInvocation@@RabbitUtils.isNormalShutdown(e) @TO@ IfStatement@@if (shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText())) {  logger.debug("Consumer received Shutdown Signal, processing stopped.",e);} else {  this.logConsumerException(e);} @AT@ 30682 @LENGTH@ 31
---------INS SimpleName@@Name:RabbitUtils @TO@ MethodInvocation@@RabbitUtils.isNormalShutdown(e) @AT@ 30682 @LENGTH@ 11
---------MOV SimpleName@@MethodName:getReplyCode:[] @TO@ MethodInvocation@@RabbitUtils.isNormalShutdown(e) @AT@ 30815 @LENGTH@ 14
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:getReplyCode:[] @AT@ 30711 @LENGTH@ 1
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:getReplyCode:[] @AT@ 30711 @LENGTH@ 1
------DEL InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 30695 @LENGTH@ 212
---------DEL InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 30695 @LENGTH@ 134
------------DEL InstanceofExpression@@shutdownReason instanceof AMQP.Connection.Close @AT@ 30695 @LENGTH@ 47
---------------DEL SimpleName@@shutdownReason @AT@ 30695 @LENGTH@ 14
---------------DEL Instanceof@@instanceof @AT@ 30710 @LENGTH@ 10
---------------DEL SimpleType@@AMQP.Connection.Close @AT@ 30721 @LENGTH@ 21
------------DEL Operator@@&& @AT@ 30742 @LENGTH@ 2
------------DEL InfixExpression@@AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 30752 @LENGTH@ 77
---------------DEL QualifiedName@@AMQP.REPLY_SUCCESS @AT@ 30752 @LENGTH@ 18
------------------DEL SimpleName@@AMQP @AT@ 30752 @LENGTH@ 4
------------------DEL SimpleName@@REPLY_SUCCESS @AT@ 30757 @LENGTH@ 13
---------------DEL Operator@@== @AT@ 30770 @LENGTH@ 2
---------------DEL MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 30774 @LENGTH@ 55
------------------DEL ParenthesizedExpression@@((AMQP.Connection.Close)shutdownReason) @AT@ 30774 @LENGTH@ 40
---------------------DEL CastExpression@@(AMQP.Connection.Close)shutdownReason @AT@ 30775 @LENGTH@ 38
------------------------DEL SimpleType@@AMQP.Connection.Close @AT@ 30776 @LENGTH@ 21
------------------------DEL SimpleName@@shutdownReason @AT@ 30799 @LENGTH@ 14
---------DEL Operator@@&& @AT@ 30829 @LENGTH@ 2
---------DEL MethodInvocation@@"OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 30839 @LENGTH@ 68
------------DEL StringLiteral@@"OK" @AT@ 30839 @LENGTH@ 4
------------DEL SimpleName@@MethodName:equals:[((AMQP.Connection.Close)shutdownReason).getReplyText()] @AT@ 30844 @LENGTH@ 63
---------------DEL MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyText() @AT@ 30851 @LENGTH@ 55
------------------DEL ParenthesizedExpression@@((AMQP.Connection.Close)shutdownReason) @AT@ 30851 @LENGTH@ 40
---------------------DEL CastExpression@@(AMQP.Connection.Close)shutdownReason @AT@ 30852 @LENGTH@ 38
------------------------DEL SimpleType@@AMQP.Connection.Close @AT@ 30853 @LENGTH@ 21
------------------------DEL SimpleName@@shutdownReason @AT@ 30876 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getReplyText:[] @AT@ 30892 @LENGTH@ 14
------UPD Block@@ThenBody:{  logger.debug("Consumer received Shutdown Signal, processing stopped.",e);} @TO@ ThenBody:{  logger.debug("Consumer received Shutdown Signal, processing stopped: " + e.getMessage());} @AT@ 30909 @LENGTH@ 87
---------UPD ExpressionStatement@@MethodInvocation:logger.debug("Consumer received Shutdown Signal, processing stopped.",e) @TO@ MethodInvocation:logger.debug("Consumer received Shutdown Signal, processing stopped: " + e.getMessage()) @AT@ 30916 @LENGTH@ 74
------------UPD MethodInvocation@@logger.debug("Consumer received Shutdown Signal, processing stopped.",e) @TO@ logger.debug("Consumer received Shutdown Signal, processing stopped: " + e.getMessage()) @AT@ 30916 @LENGTH@ 73
---------------UPD SimpleName@@MethodName:debug:["Consumer received Shutdown Signal, processing stopped.", e] @TO@ MethodName:debug:["Consumer received Shutdown Signal, processing stopped: " + e.getMessage()] @AT@ 30923 @LENGTH@ 66
------------------INS InfixExpression@@"Consumer received Shutdown Signal, processing stopped: " + e.getMessage() @TO@ SimpleName@@MethodName:debug:["Consumer received Shutdown Signal, processing stopped.", e] @AT@ 30735 @LENGTH@ 74
---------------------INS StringLiteral@@"Consumer received Shutdown Signal, processing stopped: " @TO@ InfixExpression@@"Consumer received Shutdown Signal, processing stopped: " + e.getMessage() @AT@ 30735 @LENGTH@ 57
---------------------INS Operator@@+ @TO@ InfixExpression@@"Consumer received Shutdown Signal, processing stopped: " + e.getMessage() @AT@ 30792 @LENGTH@ 1
---------------------INS MethodInvocation@@e.getMessage() @TO@ InfixExpression@@"Consumer received Shutdown Signal, processing stopped: " + e.getMessage() @AT@ 30795 @LENGTH@ 14
------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 30795 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 30797 @LENGTH@ 12
------------------DEL StringLiteral@@"Consumer received Shutdown Signal, processing stopped." @AT@ 30929 @LENGTH@ 56
------------------DEL SimpleName@@e @AT@ 30987 @LENGTH@ 1


UPD TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());  SessionFactoryImplementor sfi=(SessionFactoryImplementor)sessionFactory;  MetamodelImpl.buildMetamodel(configuration.getClassMappings(),sfi);  sessionFactory.getStatistics().setStatisticsEnabled(true);} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @TO@ try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  configuration.setProperty("hibernate.listeners.envers.autoRegister","false");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());  SessionFactoryImplementor sfi=(SessionFactoryImplementor)sessionFactory;  MetamodelImpl.buildMetamodel(configuration.getClassMappings(),sfi);  sessionFactory.getStatistics().setStatisticsEnabled(true);} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 2452 @LENGTH@ 1626
---INS ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());  SessionFactoryImplementor sfi=(SessionFactoryImplementor)sessionFactory;  MetamodelImpl.buildMetamodel(configuration.getClassMappings(),sfi);  sessionFactory.getStatistics().setStatisticsEnabled(true);} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 2843 @LENGTH@ 78
------INS MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2843 @LENGTH@ 77
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2843 @LENGTH@ 13
---------INS SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2857 @LENGTH@ 63
------------INS StringLiteral@@"hibernate.listeners.envers.autoRegister" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 2869 @LENGTH@ 41
------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 2912 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @TO@ TypeDeclaration@@[public]RepositoryMethodResourceMappingUnitTests,  @AT@ 3405 @LENGTH@ 345
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @AT@ 3405 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @AT@ 3412 @LENGTH@ 4
---INS SimpleName@@MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured @TO@ MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @AT@ 3417 @LENGTH@ 49
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @AT@ 3476 @LENGTH@ 9
---INS VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class); @TO@ MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @AT@ 3491 @LENGTH@ 101
------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class); @AT@ 3491 @LENGTH@ 6
------INS VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @TO@ VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class); @AT@ 3498 @LENGTH@ 93
---------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 3498 @LENGTH@ 6
---------INS MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @TO@ VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 3507 @LENGTH@ 84
------------INS TypeLiteral@@PersonRepository.class @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 3507 @LENGTH@ 22
------------INS SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByEmailAddress",String.class,Pageable.class) @AT@ 3530 @LENGTH@ 61
---------------INS StringLiteral@@"findByEmailAddress" @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @AT@ 3540 @LENGTH@ 20
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @AT@ 3562 @LENGTH@ 12
---------------INS TypeLiteral@@Pageable.class @TO@ SimpleName@@MethodName:getMethod:["findByEmailAddress", String.class, Pageable.class] @AT@ 3576 @LENGTH@ 14
---INS VariableDeclarationStatement@@MethodResourceMapping mapping=new RepositoryMethodResourceMapping(method,resourceMapping); @TO@ MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @AT@ 3595 @LENGTH@ 93
------INS SimpleType@@MethodResourceMapping @TO@ VariableDeclarationStatement@@MethodResourceMapping mapping=new RepositoryMethodResourceMapping(method,resourceMapping); @AT@ 3595 @LENGTH@ 21
------INS VariableDeclarationFragment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @TO@ VariableDeclarationStatement@@MethodResourceMapping mapping=new RepositoryMethodResourceMapping(method,resourceMapping); @AT@ 3617 @LENGTH@ 70
---------INS SimpleName@@mapping @TO@ VariableDeclarationFragment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 3617 @LENGTH@ 7
---------INS ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @TO@ VariableDeclarationFragment@@mapping=new RepositoryMethodResourceMapping(method,resourceMapping) @AT@ 3627 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 3627 @LENGTH@ 3
------------INS SimpleType@@RepositoryMethodResourceMapping @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 3631 @LENGTH@ 31
------------INS SimpleName@@method @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 3663 @LENGTH@ 6
------------INS SimpleName@@resourceMapping @TO@ ClassInstanceCreation@@RepositoryMethodResourceMapping[method, resourceMapping] @AT@ 3671 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(mapping.getRel(),is("findByEmailAddress")) @TO@ MethodDeclaration@@public, void, MethodName:usesMethodNameAsRelFallbackEvenIfPathIsConfigured, Exception,  @AT@ 3692 @LENGTH@ 55
------INS MethodInvocation@@assertThat(mapping.getRel(),is("findByEmailAddress")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(mapping.getRel(),is("findByEmailAddress")) @AT@ 3692 @LENGTH@ 54
---------INS SimpleName@@MethodName:assertThat:[mapping.getRel(), is("findByEmailAddress")] @TO@ MethodInvocation@@assertThat(mapping.getRel(),is("findByEmailAddress")) @AT@ 3692 @LENGTH@ 54
------------INS MethodInvocation@@mapping.getRel() @TO@ SimpleName@@MethodName:assertThat:[mapping.getRel(), is("findByEmailAddress")] @AT@ 3703 @LENGTH@ 16
---------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.getRel() @AT@ 3703 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getRel:[] @TO@ MethodInvocation@@mapping.getRel() @AT@ 3711 @LENGTH@ 8
------------INS MethodInvocation@@is("findByEmailAddress") @TO@ SimpleName@@MethodName:assertThat:[mapping.getRel(), is("findByEmailAddress")] @AT@ 3721 @LENGTH@ 24
---------------INS SimpleName@@MethodName:is:["findByEmailAddress"] @TO@ MethodInvocation@@is("findByEmailAddress") @AT@ 3721 @LENGTH@ 24
------------------INS StringLiteral@@"findByEmailAddress" @TO@ SimpleName@@MethodName:is:["findByEmailAddress"] @AT@ 3724 @LENGTH@ 20


UPD CatchClause@@catch (IOException e) {  SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot);} @TO@ catch (IOException e) {  throw SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot);} @AT@ 3476 @LENGTH@ 110
---INS ThrowStatement@@MethodInvocation:SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot) @TO@ CatchClause@@catch (IOException e) {  SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot);} @AT@ 3512 @LENGTH@ 70
------MOV MethodInvocation@@SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot) @TO@ ThrowStatement@@MethodInvocation:SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot) @AT@ 3512 @LENGTH@ 63
---DEL ExpressionStatement@@MethodInvocation:SarMessages.MESSAGES.failedToProcessSarChild(e,deploymentRoot) @AT@ 3512 @LENGTH@ 64


UPD FieldDeclaration@@private, Set<String>, [registeredZkPaths=new ConcurrentHashSet<String>()] @TO@ private, Set<String>, [registeredZkPaths=new ConcurrentSkipListSet<String>()] @AT@ 3790 @LENGTH@ 72
---UPD VariableDeclarationFragment@@registeredZkPaths=new ConcurrentHashSet<String>() @TO@ registeredZkPaths=new ConcurrentSkipListSet<String>() @AT@ 3810 @LENGTH@ 51
------UPD ClassInstanceCreation@@ConcurrentHashSet<String>[] @TO@ ConcurrentSkipListSet<String>[] @AT@ 3830 @LENGTH@ 31
---------UPD ParameterizedType@@ConcurrentHashSet<String> @TO@ ConcurrentSkipListSet<String> @AT@ 3834 @LENGTH@ 25
------------UPD SimpleType@@ConcurrentHashSet @TO@ ConcurrentSkipListSet @AT@ 3834 @LENGTH@ 17


UPD EnhancedForStatement@@for (ServiceController<?> controller : changeReport.getFailedControllers()) {  msg.append("      ").append(controller.getName());  if (controller.getStartException() != null) {    msg.append(": ").append(controller.getStartException().toString());  }  msg.append('\n');} @TO@ for (ServiceController<?> controller : changeReport.getFailedControllers()) {  msg.append("      ").append(controller.getName());  final StartException startException=controller.getStartException();  if (startException != null) {    msg.append(": ").append(startException.toString());  }  msg.append('\n');} @AT@ 8298 @LENGTH@ 360
---DEL IfStatement@@if (controller.getStartException() != null) {  msg.append(": ").append(controller.getStartException().toString());} @AT@ 8459 @LENGTH@ 151
------DEL InfixExpression@@controller.getStartException() != null @AT@ 8463 @LENGTH@ 38
---------DEL MethodInvocation@@controller.getStartException() @AT@ 8463 @LENGTH@ 30
---INS VariableDeclarationStatement@@final StartException startException=controller.getStartException(); @TO@ EnhancedForStatement@@for (ServiceController<?> controller : changeReport.getFailedControllers()) {  msg.append("      ").append(controller.getName());  if (controller.getStartException() != null) {    msg.append(": ").append(controller.getStartException().toString());  }  msg.append('\n');} @AT@ 8504 @LENGTH@ 69
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final StartException startException=controller.getStartException(); @AT@ 8504 @LENGTH@ 5
------INS SimpleType@@StartException @TO@ VariableDeclarationStatement@@final StartException startException=controller.getStartException(); @AT@ 8510 @LENGTH@ 14
------INS VariableDeclarationFragment@@startException=controller.getStartException() @TO@ VariableDeclarationStatement@@final StartException startException=controller.getStartException(); @AT@ 8525 @LENGTH@ 47
---------INS SimpleName@@startException @TO@ VariableDeclarationFragment@@startException=controller.getStartException() @AT@ 8525 @LENGTH@ 14
---------INS MethodInvocation@@controller.getStartException() @TO@ VariableDeclarationFragment@@startException=controller.getStartException() @AT@ 8542 @LENGTH@ 30
------------MOV SimpleName@@Name:controller @TO@ MethodInvocation@@controller.getStartException() @AT@ 8463 @LENGTH@ 10
------------MOV SimpleName@@MethodName:getStartException:[] @TO@ MethodInvocation@@controller.getStartException() @AT@ 8474 @LENGTH@ 19
---INS IfStatement@@if (startException != null) {  msg.append(": ").append(startException.toString());} @TO@ EnhancedForStatement@@for (ServiceController<?> controller : changeReport.getFailedControllers()) {  msg.append("      ").append(controller.getName());  if (controller.getStartException() != null) {    msg.append(": ").append(controller.getStartException().toString());  }  msg.append('\n');} @AT@ 8590 @LENGTH@ 119
------MOV Block@@ThenBody:{  msg.append(": ").append(controller.getStartException().toString());} @TO@ IfStatement@@if (startException != null) {  msg.append(": ").append(startException.toString());} @AT@ 8503 @LENGTH@ 107
---------UPD ExpressionStatement@@MethodInvocation:msg.append(": ").append(controller.getStartException().toString()) @TO@ MethodInvocation:msg.append(": ").append(startException.toString()) @AT@ 8525 @LENGTH@ 67
------------UPD MethodInvocation@@msg.append(": ").append(controller.getStartException().toString()) @TO@ msg.append(": ").append(startException.toString()) @AT@ 8525 @LENGTH@ 66
---------------UPD SimpleName@@MethodName:append:[controller.getStartException().toString()] @TO@ MethodName:append:[startException.toString()] @AT@ 8542 @LENGTH@ 49
------------------UPD MethodInvocation@@controller.getStartException().toString() @TO@ startException.toString() @AT@ 8549 @LENGTH@ 41
---------------------DEL MethodInvocation@@MethodName:getStartException:[] @AT@ 8549 @LENGTH@ 30
---------------------UPD SimpleName@@Name:controller @TO@ Name:startException @AT@ 8549 @LENGTH@ 10
------INS InfixExpression@@startException != null @TO@ IfStatement@@if (startException != null) {  msg.append(": ").append(startException.toString());} @AT@ 8594 @LENGTH@ 22
---------MOV Operator@@!= @TO@ InfixExpression@@startException != null @AT@ 8493 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@startException != null @AT@ 8497 @LENGTH@ 4
---------INS SimpleName@@startException @TO@ InfixExpression@@startException != null @AT@ 8594 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:container.stop() @TO@ MethodDeclaration@@public, void, MethodName:testSimpleMessageListenerContainerStoppedWithoutWarn, Exception,  @AT@ 13925 @LENGTH@ 17
---INS MethodInvocation@@container.stop() @TO@ ExpressionStatement@@MethodInvocation:container.stop() @AT@ 13925 @LENGTH@ 16
------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.stop() @AT@ 13925 @LENGTH@ 9
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@container.stop() @AT@ 13935 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:registrar.setEnvironment(new StandardEnvironment()) @TO@ MethodDeclaration@@public, void, MethodName:configuresRepositoriesCorrectly,  @AT@ 1830 @LENGTH@ 52
---INS MethodInvocation@@registrar.setEnvironment(new StandardEnvironment()) @TO@ ExpressionStatement@@MethodInvocation:registrar.setEnvironment(new StandardEnvironment()) @AT@ 1830 @LENGTH@ 51
------INS SimpleName@@Name:registrar @TO@ MethodInvocation@@registrar.setEnvironment(new StandardEnvironment()) @AT@ 1830 @LENGTH@ 9
------INS SimpleName@@MethodName:setEnvironment:[new StandardEnvironment()] @TO@ MethodInvocation@@registrar.setEnvironment(new StandardEnvironment()) @AT@ 1840 @LENGTH@ 41
---------INS ClassInstanceCreation@@StandardEnvironment[] @TO@ SimpleName@@MethodName:setEnvironment:[new StandardEnvironment()] @AT@ 1855 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@StandardEnvironment[] @AT@ 1855 @LENGTH@ 3
------------INS SimpleType@@StandardEnvironment @TO@ ClassInstanceCreation@@StandardEnvironment[] @AT@ 1859 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @TO@ TypeDeclaration@@[public]AggregationUnitTests,  @AT@ 5078 @LENGTH@ 522
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @AT@ 5078 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @AT@ 5085 @LENGTH@ 4
---INS SimpleName@@MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations @TO@ MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @AT@ 5090 @LENGTH@ 62
---INS VariableDeclarationStatement@@DBObject agg=newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT); @TO@ MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @AT@ 5160 @LENGTH@ 179
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject agg=newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT); @AT@ 5160 @LENGTH@ 8
------INS VariableDeclarationFragment@@agg=newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT) @TO@ VariableDeclarationStatement@@DBObject agg=newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT); @AT@ 5169 @LENGTH@ 169
---------INS SimpleName@@agg @TO@ VariableDeclarationFragment@@agg=newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT) @AT@ 5169 @LENGTH@ 3
---------INS MethodInvocation@@newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT) @TO@ VariableDeclarationFragment@@agg=newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT) @AT@ 5175 @LENGTH@ 163
------------INS MethodInvocation@@MethodName:newAggregation:[project("a").andExpression("b+c").as("foo"), group("a").sum("foo").as("foosum")] @TO@ MethodInvocation@@newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT) @AT@ 5175 @LENGTH@ 116
---------------INS MethodInvocation@@project("a").andExpression("b+c").as("foo") @TO@ MethodInvocation@@MethodName:newAggregation:[project("a").andExpression("b+c").as("foo"), group("a").sum("foo").as("foosum")] @AT@ 5198 @LENGTH@ 43
------------------INS MethodInvocation@@MethodName:andExpression:["b+c"] @TO@ MethodInvocation@@project("a").andExpression("b+c").as("foo") @AT@ 5198 @LENGTH@ 33
---------------------INS StringLiteral@@"b+c" @TO@ MethodInvocation@@MethodName:andExpression:["b+c"] @AT@ 5225 @LENGTH@ 5
------------------INS MethodInvocation@@MethodName:project:["a"] @TO@ MethodInvocation@@project("a").andExpression("b+c").as("foo") @AT@ 5198 @LENGTH@ 12
---------------------INS StringLiteral@@"a" @TO@ MethodInvocation@@MethodName:project:["a"] @AT@ 5206 @LENGTH@ 3
------------------INS SimpleName@@MethodName:as:["foo"] @TO@ MethodInvocation@@project("a").andExpression("b+c").as("foo") @AT@ 5232 @LENGTH@ 9
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:as:["foo"] @AT@ 5235 @LENGTH@ 5
---------------INS MethodInvocation@@group("a").sum("foo").as("foosum") @TO@ MethodInvocation@@MethodName:newAggregation:[project("a").andExpression("b+c").as("foo"), group("a").sum("foo").as("foosum")] @AT@ 5250 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:sum:["foo"] @TO@ MethodInvocation@@group("a").sum("foo").as("foosum") @AT@ 5250 @LENGTH@ 21
---------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:sum:["foo"] @AT@ 5265 @LENGTH@ 5
------------------INS MethodInvocation@@MethodName:group:["a"] @TO@ MethodInvocation@@group("a").sum("foo").as("foosum") @AT@ 5250 @LENGTH@ 10
---------------------INS StringLiteral@@"a" @TO@ MethodInvocation@@MethodName:group:["a"] @AT@ 5256 @LENGTH@ 3
------------------INS SimpleName@@MethodName:as:["foosum"] @TO@ MethodInvocation@@group("a").sum("foo").as("foosum") @AT@ 5272 @LENGTH@ 12
---------------------INS StringLiteral@@"foosum" @TO@ SimpleName@@MethodName:as:["foosum"] @AT@ 5275 @LENGTH@ 8
------------INS SimpleName@@MethodName:toDbObject:["foo", Aggregation.DEFAULT_CONTEXT] @TO@ MethodInvocation@@newAggregation(project("a").andExpression("b+c").as("foo"),group("a").sum("foo").as("foosum")).toDbObject("foo",Aggregation.DEFAULT_CONTEXT) @AT@ 5292 @LENGTH@ 46
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:toDbObject:["foo", Aggregation.DEFAULT_CONTEXT] @AT@ 5303 @LENGTH@ 5
---------------INS QualifiedName@@Aggregation.DEFAULT_CONTEXT @TO@ SimpleName@@MethodName:toDbObject:["foo", Aggregation.DEFAULT_CONTEXT] @AT@ 5310 @LENGTH@ 27
------------------INS SimpleName@@Aggregation @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 5310 @LENGTH@ 11
------------------INS SimpleName@@DEFAULT_CONTEXT @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 5322 @LENGTH@ 15
---INS VariableDeclarationStatement@@@SuppressWarnings("unchecked") DBObject secondProjection=((List<DBObject>)agg.get("pipeline")).get(1); @TO@ MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @AT@ 5343 @LENGTH@ 107
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@@SuppressWarnings("unchecked") DBObject secondProjection=((List<DBObject>)agg.get("pipeline")).get(1); @AT@ 5376 @LENGTH@ 8
------INS VariableDeclarationFragment@@secondProjection=((List<DBObject>)agg.get("pipeline")).get(1) @TO@ VariableDeclarationStatement@@@SuppressWarnings("unchecked") DBObject secondProjection=((List<DBObject>)agg.get("pipeline")).get(1); @AT@ 5385 @LENGTH@ 64
---------INS SimpleName@@secondProjection @TO@ VariableDeclarationFragment@@secondProjection=((List<DBObject>)agg.get("pipeline")).get(1) @AT@ 5385 @LENGTH@ 16
---------INS MethodInvocation@@((List<DBObject>)agg.get("pipeline")).get(1) @TO@ VariableDeclarationFragment@@secondProjection=((List<DBObject>)agg.get("pipeline")).get(1) @AT@ 5404 @LENGTH@ 45
------------INS ParenthesizedExpression@@((List<DBObject>)agg.get("pipeline")) @TO@ MethodInvocation@@((List<DBObject>)agg.get("pipeline")).get(1) @AT@ 5404 @LENGTH@ 38
---------------INS CastExpression@@(List<DBObject>)agg.get("pipeline") @TO@ ParenthesizedExpression@@((List<DBObject>)agg.get("pipeline")) @AT@ 5405 @LENGTH@ 36
------------------INS ParameterizedType@@List<DBObject> @TO@ CastExpression@@(List<DBObject>)agg.get("pipeline") @AT@ 5406 @LENGTH@ 14
---------------------INS SimpleType@@List @TO@ ParameterizedType@@List<DBObject> @AT@ 5406 @LENGTH@ 4
---------------------INS SimpleType@@DBObject @TO@ ParameterizedType@@List<DBObject> @AT@ 5411 @LENGTH@ 8
------------------INS MethodInvocation@@agg.get("pipeline") @TO@ CastExpression@@(List<DBObject>)agg.get("pipeline") @AT@ 5422 @LENGTH@ 19
---------------------INS SimpleName@@Name:agg @TO@ MethodInvocation@@agg.get("pipeline") @AT@ 5422 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:get:["pipeline"] @TO@ MethodInvocation@@agg.get("pipeline") @AT@ 5426 @LENGTH@ 15
------------------------INS StringLiteral@@"pipeline" @TO@ SimpleName@@MethodName:get:["pipeline"] @AT@ 5430 @LENGTH@ 10
------------INS SimpleName@@MethodName:get:[1] @TO@ MethodInvocation@@((List<DBObject>)agg.get("pipeline")).get(1) @AT@ 5443 @LENGTH@ 6
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:get:[1] @AT@ 5447 @LENGTH@ 1
---INS VariableDeclarationStatement@@DBObject fields=getAsDBObject(secondProjection,"$group"); @TO@ MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @AT@ 5453 @LENGTH@ 60
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject fields=getAsDBObject(secondProjection,"$group"); @AT@ 5453 @LENGTH@ 8
------INS VariableDeclarationFragment@@fields=getAsDBObject(secondProjection,"$group") @TO@ VariableDeclarationStatement@@DBObject fields=getAsDBObject(secondProjection,"$group"); @AT@ 5462 @LENGTH@ 50
---------INS SimpleName@@fields @TO@ VariableDeclarationFragment@@fields=getAsDBObject(secondProjection,"$group") @AT@ 5462 @LENGTH@ 6
---------INS MethodInvocation@@getAsDBObject(secondProjection,"$group") @TO@ VariableDeclarationFragment@@fields=getAsDBObject(secondProjection,"$group") @AT@ 5471 @LENGTH@ 41
------------INS SimpleName@@MethodName:getAsDBObject:[secondProjection, "$group"] @TO@ MethodInvocation@@getAsDBObject(secondProjection,"$group") @AT@ 5471 @LENGTH@ 41
---------------INS SimpleName@@secondProjection @TO@ SimpleName@@MethodName:getAsDBObject:[secondProjection, "$group"] @AT@ 5485 @LENGTH@ 16
---------------INS StringLiteral@@"$group" @TO@ SimpleName@@MethodName:getAsDBObject:[secondProjection, "$group"] @AT@ 5503 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(fields.get("foosum"),is((Object)new BasicDBObject("$sum","$foo"))) @TO@ MethodDeclaration@@public, void, MethodName:expressionBasedFieldsShouldBeReferencableInFollowingOperations,  @AT@ 5516 @LENGTH@ 81
------INS MethodInvocation@@assertThat(fields.get("foosum"),is((Object)new BasicDBObject("$sum","$foo"))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(fields.get("foosum"),is((Object)new BasicDBObject("$sum","$foo"))) @AT@ 5516 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertThat:[fields.get("foosum"), is((Object)new BasicDBObject("$sum","$foo"))] @TO@ MethodInvocation@@assertThat(fields.get("foosum"),is((Object)new BasicDBObject("$sum","$foo"))) @AT@ 5516 @LENGTH@ 80
------------INS MethodInvocation@@fields.get("foosum") @TO@ SimpleName@@MethodName:assertThat:[fields.get("foosum"), is((Object)new BasicDBObject("$sum","$foo"))] @AT@ 5527 @LENGTH@ 20
---------------INS SimpleName@@Name:fields @TO@ MethodInvocation@@fields.get("foosum") @AT@ 5527 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:["foosum"] @TO@ MethodInvocation@@fields.get("foosum") @AT@ 5534 @LENGTH@ 13
------------------INS StringLiteral@@"foosum" @TO@ SimpleName@@MethodName:get:["foosum"] @AT@ 5538 @LENGTH@ 8
------------INS MethodInvocation@@is((Object)new BasicDBObject("$sum","$foo")) @TO@ SimpleName@@MethodName:assertThat:[fields.get("foosum"), is((Object)new BasicDBObject("$sum","$foo"))] @AT@ 5549 @LENGTH@ 46
---------------INS SimpleName@@MethodName:is:[(Object)new BasicDBObject("$sum","$foo")] @TO@ MethodInvocation@@is((Object)new BasicDBObject("$sum","$foo")) @AT@ 5549 @LENGTH@ 46
------------------INS CastExpression@@(Object)new BasicDBObject("$sum","$foo") @TO@ SimpleName@@MethodName:is:[(Object)new BasicDBObject("$sum","$foo")] @AT@ 5552 @LENGTH@ 42
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)new BasicDBObject("$sum","$foo") @AT@ 5553 @LENGTH@ 6
---------------------INS ClassInstanceCreation@@BasicDBObject["$sum", "$foo"] @TO@ CastExpression@@(Object)new BasicDBObject("$sum","$foo") @AT@ 5561 @LENGTH@ 33
------------------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["$sum", "$foo"] @AT@ 5561 @LENGTH@ 3
------------------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["$sum", "$foo"] @AT@ 5565 @LENGTH@ 13
------------------------INS StringLiteral@@"$sum" @TO@ ClassInstanceCreation@@BasicDBObject["$sum", "$foo"] @AT@ 5579 @LENGTH@ 6
------------------------INS StringLiteral@@"$foo" @TO@ ClassInstanceCreation@@BasicDBObject["$sum", "$foo"] @AT@ 5587 @LENGTH@ 6


UPD VariableDeclarationStatement@@int port=exchange.getDestinationAddress().getPort(); @TO@ int port=exchange.getConnection().getLocalAddress(InetSocketAddress.class).getPort(); @AT@ 21878 @LENGTH@ 54
---UPD VariableDeclarationFragment@@port=exchange.getDestinationAddress().getPort() @TO@ port=exchange.getConnection().getLocalAddress(InetSocketAddress.class).getPort() @AT@ 21882 @LENGTH@ 49
------UPD MethodInvocation@@exchange.getDestinationAddress().getPort() @TO@ exchange.getConnection().getLocalAddress(InetSocketAddress.class).getPort() @AT@ 21889 @LENGTH@ 42
---------UPD MethodInvocation@@MethodName:getDestinationAddress:[] @TO@ MethodName:getConnection:[] @AT@ 21889 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getLocalAddress:[InetSocketAddress.class] @TO@ MethodInvocation@@exchange.getDestinationAddress().getPort() @AT@ 21924 @LENGTH@ 65
------------INS TypeLiteral@@InetSocketAddress.class @TO@ MethodInvocation@@MethodName:getLocalAddress:[InetSocketAddress.class] @AT@ 21965 @LENGTH@ 23


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster(configName="miniYarnConfiguration"), public]YarnClusterInjectingConfigBuilderTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster(configName="miniYarnConfiguration"), @DirtiesContext(classMode=ClassMode.AFTER_CLASS), public]YarnClusterInjectingConfigBuilderTests,  @AT@ 1727 @LENGTH@ 1189
---INS NormalAnnotation@@@DirtiesContext(classMode=ClassMode.AFTER_CLASS) @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster(configName="miniYarnConfiguration"), public]YarnClusterInjectingConfigBuilderTests,  @AT@ 2017 @LENGTH@ 48


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 14542 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 14549 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 14566 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 14579 @LENGTH@ 202
------------DEL New@@new @AT@ 14579 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 14583 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 14583 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 14600 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 14620 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 14656 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 14656 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 14663 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 14680 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 14666 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 14666 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 14690 @LENGTH@ 10


INS MethodDeclaration@@Page<Person>, MethodName:findByAddressIn, List<Address> address, Pageable page,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 7320 @LENGTH@ 54
---INS ParameterizedType@@Page<Person> @TO@ MethodDeclaration@@Page<Person>, MethodName:findByAddressIn, List<Address> address, Pageable page,  @AT@ 7307 @LENGTH@ 12
------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 7307 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 7312 @LENGTH@ 6
---INS SimpleName@@MethodName:findByAddressIn @TO@ MethodDeclaration@@Page<Person>, MethodName:findByAddressIn, List<Address> address, Pageable page,  @AT@ 7320 @LENGTH@ 15
---INS SingleVariableDeclaration@@List<Address> address @TO@ MethodDeclaration@@Page<Person>, MethodName:findByAddressIn, List<Address> address, Pageable page,  @AT@ 7336 @LENGTH@ 21
------INS ParameterizedType@@List<Address> @TO@ SingleVariableDeclaration@@List<Address> address @AT@ 7336 @LENGTH@ 13
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Address> @AT@ 7336 @LENGTH@ 4
---------INS SimpleType@@Address @TO@ ParameterizedType@@List<Address> @AT@ 7341 @LENGTH@ 7
------INS SimpleName@@address @TO@ SingleVariableDeclaration@@List<Address> address @AT@ 7350 @LENGTH@ 7
---INS SingleVariableDeclaration@@Pageable page @TO@ MethodDeclaration@@Page<Person>, MethodName:findByAddressIn, List<Address> address, Pageable page,  @AT@ 7359 @LENGTH@ 13
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable page @AT@ 7359 @LENGTH@ 8
------INS SimpleName@@page @TO@ SingleVariableDeclaration@@Pageable page @AT@ 7368 @LENGTH@ 4


UPD EnhancedForStatement@@for (OrderSpecifier<?> order : originalOrderSpecifiers) {  Path targetPath=((Path<?>)order.getTarget()).getMetadata().getParent();  boolean targetPathRootIsEntityRoot=targetPath.getRoot().equals(builder.getRoot());  boolean targetPathEqualsRootEnityPath=targetPath.toString().equals(builder.toString());  if (!targetPathRootIsEntityRoot) {    query.leftJoin((EntityPath)builder.get((String)targetPath.getMetadata().getElement()),targetPath);  } else   if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath) {    PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());    query.leftJoin((EntityPath)targetPath,joinPathBuilder);    OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());    modifiedOrderSpecifiers.add(modifiedOrder);    orderModificationNecessary=true;    continue;  }  modifiedOrderSpecifiers.add(order);} @TO@ for (OrderSpecifier<?> order : originalOrderSpecifiers) {  Path targetPath=((Path<?>)order.getTarget()).getMetadata().getParent();  boolean targetPathRootIsEntityRoot=targetPath.getRoot().equals(builder.getRoot());  boolean targetPathEqualsRootEnityPath=targetPath.toString().equals(builder.toString());  boolean targetPathIsEntityPath=targetPath instanceof EntityPath;  if (!targetPathRootIsEntityRoot) {    query.leftJoin((EntityPath)builder.get((String)targetPath.getMetadata().getElement()),targetPath);  } else   if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath && targetPathIsEntityPath) {    PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());    query.leftJoin((EntityPath)targetPath,joinPathBuilder);    OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());    modifiedOrderSpecifiers.add(modifiedOrder);    orderModificationNecessary=true;    continue;  }  modifiedOrderSpecifiers.add(order);} @AT@ 5009 @LENGTH@ 1080
---INS VariableDeclarationStatement@@boolean targetPathIsEntityPath=targetPath instanceof EntityPath; @TO@ EnhancedForStatement@@for (OrderSpecifier<?> order : originalOrderSpecifiers) {  Path targetPath=((Path<?>)order.getTarget()).getMetadata().getParent();  boolean targetPathRootIsEntityRoot=targetPath.getRoot().equals(builder.getRoot());  boolean targetPathEqualsRootEnityPath=targetPath.toString().equals(builder.toString());  if (!targetPathRootIsEntityRoot) {    query.leftJoin((EntityPath)builder.get((String)targetPath.getMetadata().getElement()),targetPath);  } else   if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath) {    PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());    query.leftJoin((EntityPath)targetPath,joinPathBuilder);    OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());    modifiedOrderSpecifiers.add(modifiedOrder);    orderModificationNecessary=true;    continue;  }  modifiedOrderSpecifiers.add(order);} @AT@ 5331 @LENGTH@ 66
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean targetPathIsEntityPath=targetPath instanceof EntityPath; @AT@ 5331 @LENGTH@ 7
------INS VariableDeclarationFragment@@targetPathIsEntityPath=targetPath instanceof EntityPath @TO@ VariableDeclarationStatement@@boolean targetPathIsEntityPath=targetPath instanceof EntityPath; @AT@ 5339 @LENGTH@ 57
---------INS SimpleName@@targetPathIsEntityPath @TO@ VariableDeclarationFragment@@targetPathIsEntityPath=targetPath instanceof EntityPath @AT@ 5339 @LENGTH@ 22
---------INS InstanceofExpression@@targetPath instanceof EntityPath @TO@ VariableDeclarationFragment@@targetPathIsEntityPath=targetPath instanceof EntityPath @AT@ 5364 @LENGTH@ 32
------------INS SimpleName@@targetPath @TO@ InstanceofExpression@@targetPath instanceof EntityPath @AT@ 5364 @LENGTH@ 10
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@targetPath instanceof EntityPath @AT@ 5375 @LENGTH@ 10
------------INS SimpleType@@EntityPath @TO@ InstanceofExpression@@targetPath instanceof EntityPath @AT@ 5386 @LENGTH@ 10
---UPD IfStatement@@if (!targetPathRootIsEntityRoot) {  query.leftJoin((EntityPath)builder.get((String)targetPath.getMetadata().getElement()),targetPath);} else if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath) {  PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());  query.leftJoin((EntityPath)targetPath,joinPathBuilder);  OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());  modifiedOrderSpecifiers.add(modifiedOrder);  orderModificationNecessary=true;  continue;} @TO@ if (!targetPathRootIsEntityRoot) {  query.leftJoin((EntityPath)builder.get((String)targetPath.getMetadata().getElement()),targetPath);} else if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath && targetPathIsEntityPath) {  PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());  query.leftJoin((EntityPath)targetPath,joinPathBuilder);  OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());  modifiedOrderSpecifiers.add(modifiedOrder);  orderModificationNecessary=true;  continue;} @AT@ 5332 @LENGTH@ 713
------UPD Block@@ElseBody:if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath) {  PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());  query.leftJoin((EntityPath)targetPath,joinPathBuilder);  OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());  modifiedOrderSpecifiers.add(modifiedOrder);  orderModificationNecessary=true;  continue;} @TO@ ElseBody:if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath && targetPathIsEntityPath) {  PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());  query.leftJoin((EntityPath)targetPath,joinPathBuilder);  OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());  modifiedOrderSpecifiers.add(modifiedOrder);  orderModificationNecessary=true;  continue;} @AT@ 5484 @LENGTH@ 561
---------UPD IfStatement@@if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath) {  PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());  query.leftJoin((EntityPath)targetPath,joinPathBuilder);  OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());  modifiedOrderSpecifiers.add(modifiedOrder);  orderModificationNecessary=true;  continue;} @TO@ if (targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath && targetPathIsEntityPath) {  PathBuilder joinPathBuilder=new PathBuilder(targetPath.getType(),targetPath.getMetadata().getElement().toString());  query.leftJoin((EntityPath)targetPath,joinPathBuilder);  OrderSpecifier<?> modifiedOrder=new OrderSpecifier(order.getOrder(),joinPathBuilder.get(((Path)order.getTarget()).getMetadata().getElement().toString()),order.getNullHandling());  modifiedOrderSpecifiers.add(modifiedOrder);  orderModificationNecessary=true;  continue;} @AT@ 5484 @LENGTH@ 561
------------UPD InfixExpression@@targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath @TO@ targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath && targetPathIsEntityPath @AT@ 5488 @LENGTH@ 60
---------------INS SimpleName@@targetPathIsEntityPath @TO@ InfixExpression@@targetPathRootIsEntityRoot && !targetPathEqualsRootEnityPath @AT@ 5622 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:getLog().warn("Couldn't destroy threadgroup " + threadGroup,e) @TO@ MethodInvocation:getLog().warn("Couldn't destroy thread group " + threadGroup,e) @AT@ 13983 @LENGTH@ 64
---UPD MethodInvocation@@getLog().warn("Couldn't destroy threadgroup " + threadGroup,e) @TO@ getLog().warn("Couldn't destroy thread group " + threadGroup,e) @AT@ 13983 @LENGTH@ 63
------UPD SimpleName@@MethodName:warn:["Couldn't destroy threadgroup " + threadGroup, e] @TO@ MethodName:warn:["Couldn't destroy thread group " + threadGroup, e] @AT@ 13992 @LENGTH@ 54
---------UPD InfixExpression@@"Couldn't destroy threadgroup " + threadGroup @TO@ "Couldn't destroy thread group " + threadGroup @AT@ 13997 @LENGTH@ 45
------------UPD StringLiteral@@"Couldn't destroy threadgroup " @TO@ "Couldn't destroy thread group " @AT@ 13997 @LENGTH@ 31


UPD ExpressionStatement@@Assignment:this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(Collections.<String,Object>emptyMap()) @TO@ Assignment:this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(new HashMap<String,Object>()) @AT@ 12998 @LENGTH@ 165
---UPD Assignment@@this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(Collections.<String,Object>emptyMap()) @TO@ this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(new HashMap<String,Object>()) @AT@ 12998 @LENGTH@ 164
------UPD ConditionalExpression@@(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(Collections.<String,Object>emptyMap()) @TO@ (attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(new HashMap<String,Object>()) @AT@ 13016 @LENGTH@ 146
---------UPD ClassInstanceCreation@@LocalAttributeMap<Object>[Collections.<String,Object>emptyMap()] @TO@ LocalAttributeMap<Object>[new HashMap<String,Object>()] @AT@ 13093 @LENGTH@ 69
------------DEL MethodInvocation@@Collections.<String,Object>emptyMap() @AT@ 13123 @LENGTH@ 38
---------------DEL SimpleName@@Name:Collections @AT@ 13123 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 13151 @LENGTH@ 10
------------INS ClassInstanceCreation@@HashMap<String,Object>[] @TO@ ClassInstanceCreation@@LocalAttributeMap<Object>[Collections.<String,Object>emptyMap()] @AT@ 13140 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 13140 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 13144 @LENGTH@ 23
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 13144 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 13152 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 13160 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ Assignment:br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2936 @LENGTH@ 109
---UPD Assignment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)) @AT@ 2936 @LENGTH@ 108
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(logFile),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(logFile),StandardCharsets.UTF_8)] @AT@ 2941 @LENGTH@ 103
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(logFile), StandardCharsets.UTF_8] @AT@ 2960 @LENGTH@ 83
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 3018 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 3018 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 3026 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 3034 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(logFile), Charset.forName("UTF-8")] @AT@ 3026 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3026 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3043 @LENGTH@ 5


INS IfStatement@@if (original != null) {  aggregationRepository.remove(aggregated.getContext(),key,original);} @TO@ MethodDeclaration@@protected, Exchange, MethodName:onCompletion, final String key, final Exchange original, final Exchange aggregated, boolean fromTimeout,  @AT@ 22100 @LENGTH@ 235
---INS InfixExpression@@original != null @TO@ IfStatement@@if (original != null) {  aggregationRepository.remove(aggregated.getContext(),key,original);} @AT@ 22104 @LENGTH@ 16
------INS SimpleName@@original @TO@ InfixExpression@@original != null @AT@ 22104 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@original != null @AT@ 22112 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@original != null @AT@ 22116 @LENGTH@ 4
---INS Block@@ThenBody:{  aggregationRepository.remove(aggregated.getContext(),key,original);} @TO@ IfStatement@@if (original != null) {  aggregationRepository.remove(aggregated.getContext(),key,original);} @AT@ 22122 @LENGTH@ 213
------MOV ExpressionStatement@@MethodInvocation:aggregationRepository.remove(aggregated.getContext(),key,original) @TO@ Block@@ThenBody:{  aggregationRepository.remove(aggregated.getContext(),key,original);} @AT@ 22029 @LENGTH@ 69


UPD TypeDeclaration@@[@Component(name="io.fabric8.gateway.http.mapping",immediate=true,metatype=true,policy=ConfigurationPolicy.REQUIRE,label="Fabric8 HTTP Gateway Mapping Rule",description="Provides a mapping between part of the fabric cluster and a HTTP URI template"), public]HttpMappingRuleConfiguration, AbstractComponent @TO@ [@Component(name="io.fabric8.gateway.http.mapping",immediate=true,metatype=true,policy=ConfigurationPolicy.REQUIRE,label="Fabric8 HTTP Gateway Mapping Rule",description="Provides a mapping between part of the fabric cluster and a HTTP URI template"), public]HttpMappingRuleConfiguration, AbstractComponent[HttpMappingRule] @AT@ 1831 @LENGTH@ 7392
---INS SimpleType@@HttpMappingRule @TO@ TypeDeclaration@@[@Component(name="io.fabric8.gateway.http.mapping",immediate=true,metatype=true,policy=ConfigurationPolicy.REQUIRE,label="Fabric8 HTTP Gateway Mapping Rule",description="Provides a mapping between part of the fabric cluster and a HTTP URI template"), public]HttpMappingRuleConfiguration, AbstractComponent @AT@ 2241 @LENGTH@ 15


UPD ReturnStatement@@InfixExpression:failureCount > maxFailed @TO@ InfixExpression:(servers.size() - successCount) > maxFailed @AT@ 6457 @LENGTH@ 32
---UPD InfixExpression@@failureCount > maxFailed @TO@ (servers.size() - successCount) > maxFailed @AT@ 6464 @LENGTH@ 24
------UPD SimpleName@@failureCount @TO@ successCount @AT@ 6464 @LENGTH@ 12
------INS ParenthesizedExpression@@(servers.size() - successCount) @TO@ InfixExpression@@failureCount > maxFailed @AT@ 6584 @LENGTH@ 31
---------INS InfixExpression@@servers.size() - successCount @TO@ ParenthesizedExpression@@(servers.size() - successCount) @AT@ 6585 @LENGTH@ 29
------------MOV SimpleName@@failureCount @TO@ InfixExpression@@servers.size() - successCount @AT@ 6464 @LENGTH@ 12
------------INS MethodInvocation@@servers.size() @TO@ InfixExpression@@servers.size() - successCount @AT@ 6585 @LENGTH@ 14
---------------INS SimpleName@@Name:servers @TO@ MethodInvocation@@servers.size() @AT@ 6585 @LENGTH@ 7
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@servers.size() @AT@ 6593 @LENGTH@ 6
------------INS Operator@@- @TO@ InfixExpression@@servers.size() - successCount @AT@ 6599 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @Transactional, @TransactionConfiguration(transactionManager="transactionManager"), public, abstract]AbstractTransactionalTestBase,  @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @Transactional, @TransactionConfiguration(transactionManager="transactionManager"), public, abstract]AbstractTransactionalTestBase,  @AT@ 1687 @LENGTH@ 2756
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1687 @LENGTH@ 39


UPD ThrowStatement@@ClassInstanceCreation:new InvalidGrantException("Unauthorized grant type: " + grantType) @TO@ ClassInstanceCreation:new InvalidClientException("Unauthorized grant type: " + grantType) @AT@ 3328 @LENGTH@ 73
---UPD ClassInstanceCreation@@InvalidGrantException["Unauthorized grant type: " + grantType] @TO@ InvalidClientException["Unauthorized grant type: " + grantType] @AT@ 3334 @LENGTH@ 66
------UPD SimpleType@@InvalidGrantException @TO@ InvalidClientException @AT@ 3338 @LENGTH@ 21


INS MethodDeclaration@@void, MethodName:interruptedAwaitingInitialResponse, String operation, PathAddress proxyNodeAddress,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYCTL",length=4), public]ControllerLogger, [BasicLogger] @AT@ 136349 @LENGTH@ 83
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingInitialResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136344 @LENGTH@ 4
---INS SimpleName@@MethodName:interruptedAwaitingInitialResponse @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingInitialResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136349 @LENGTH@ 34
---INS SingleVariableDeclaration@@String operation @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingInitialResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136384 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String operation @AT@ 136384 @LENGTH@ 6
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@String operation @AT@ 136391 @LENGTH@ 9
---INS SingleVariableDeclaration@@PathAddress proxyNodeAddress @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingInitialResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136402 @LENGTH@ 28
------INS SimpleType@@PathAddress @TO@ SingleVariableDeclaration@@PathAddress proxyNodeAddress @AT@ 136402 @LENGTH@ 11
------INS SimpleName@@proxyNodeAddress @TO@ SingleVariableDeclaration@@PathAddress proxyNodeAddress @AT@ 136414 @LENGTH@ 16


UPD MethodDeclaration@@public, PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, Exception,  @TO@ public, PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, List<String> userIdParts, Exception,  @AT@ 11010 @LENGTH@ 266
---UPD ReturnStatement@@MethodInvocation:PGPDataFormatUtil.findPublicKeyWithKeyId(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),keyId,false) @TO@ MethodInvocation:PGPDataFormatUtil.getPublicKeyWithKeyIdAndUserID(keyId,userIdParts,publicKeyringCollection) @AT@ 11101 @LENGTH@ 169
------UPD MethodInvocation@@PGPDataFormatUtil.findPublicKeyWithKeyId(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),keyId,false) @TO@ PGPDataFormatUtil.getPublicKeyRingCollection(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),false) @AT@ 11108 @LENGTH@ 161
------INS MethodInvocation@@PGPDataFormatUtil.getPublicKeyWithKeyIdAndUserID(keyId,userIdParts,publicKeyringCollection) @TO@ ReturnStatement@@MethodInvocation:PGPDataFormatUtil.findPublicKeyWithKeyId(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),keyId,false) @AT@ 11425 @LENGTH@ 93
---------INS SimpleName@@Name:PGPDataFormatUtil @TO@ MethodInvocation@@PGPDataFormatUtil.getPublicKeyWithKeyIdAndUserID(keyId,userIdParts,publicKeyringCollection) @AT@ 11425 @LENGTH@ 17
---------INS SimpleName@@MethodName:getPublicKeyWithKeyIdAndUserID:[keyId, userIdParts, publicKeyringCollection] @TO@ MethodInvocation@@PGPDataFormatUtil.getPublicKeyWithKeyIdAndUserID(keyId,userIdParts,publicKeyringCollection) @AT@ 11443 @LENGTH@ 75
------------INS SimpleName@@keyId @TO@ SimpleName@@MethodName:getPublicKeyWithKeyIdAndUserID:[keyId, userIdParts, publicKeyringCollection] @AT@ 11474 @LENGTH@ 5
------------INS SimpleName@@userIdParts @TO@ SimpleName@@MethodName:getPublicKeyWithKeyIdAndUserID:[keyId, userIdParts, publicKeyringCollection] @AT@ 11481 @LENGTH@ 11
------------INS SimpleName@@publicKeyringCollection @TO@ SimpleName@@MethodName:getPublicKeyWithKeyIdAndUserID:[keyId, userIdParts, publicKeyringCollection] @AT@ 11494 @LENGTH@ 23
---INS SingleVariableDeclaration@@List<String> userIdParts @TO@ MethodDeclaration@@public, PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, Exception,  @AT@ 11143 @LENGTH@ 24
------INS ParameterizedType@@List<String> @TO@ SingleVariableDeclaration@@List<String> userIdParts @AT@ 11143 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 11143 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 11148 @LENGTH@ 6
------INS SimpleName@@userIdParts @TO@ SingleVariableDeclaration@@List<String> userIdParts @AT@ 11156 @LENGTH@ 11
---INS VariableDeclarationStatement@@PGPPublicKeyRingCollection publicKeyringCollection=PGPDataFormatUtil.getPublicKeyRingCollection(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),false); @TO@ MethodDeclaration@@public, PGPPublicKey, MethodName:getPublicKey, Exchange exchange, long keyId, Exception,  @AT@ 11196 @LENGTH@ 213
------INS SimpleType@@PGPPublicKeyRingCollection @TO@ VariableDeclarationStatement@@PGPPublicKeyRingCollection publicKeyringCollection=PGPDataFormatUtil.getPublicKeyRingCollection(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),false); @AT@ 11196 @LENGTH@ 26
------INS VariableDeclarationFragment@@publicKeyringCollection=PGPDataFormatUtil.getPublicKeyRingCollection(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),false) @TO@ VariableDeclarationStatement@@PGPPublicKeyRingCollection publicKeyringCollection=PGPDataFormatUtil.getPublicKeyRingCollection(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),false); @AT@ 11223 @LENGTH@ 185
---------MOV MethodInvocation@@PGPDataFormatUtil.findPublicKeyWithKeyId(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),keyId,false) @TO@ VariableDeclarationFragment@@publicKeyringCollection=PGPDataFormatUtil.getPublicKeyRingCollection(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),false) @AT@ 11108 @LENGTH@ 161
------------UPD SimpleName@@MethodName:findPublicKeyWithKeyId:[exchange.getContext(), findSignatureKeyFileName(exchange), findSignatureKeyRing(exchange), keyId, false] @TO@ MethodName:getPublicKeyRingCollection:[exchange.getContext(), findSignatureKeyFileName(exchange), findSignatureKeyRing(exchange), false] @AT@ 11126 @LENGTH@ 143
---------------DEL SimpleName@@keyId @AT@ 11256 @LENGTH@ 5
---------INS SimpleName@@publicKeyringCollection @TO@ VariableDeclarationFragment@@publicKeyringCollection=PGPDataFormatUtil.getPublicKeyRingCollection(exchange.getContext(),findSignatureKeyFileName(exchange),findSignatureKeyRing(exchange),false) @AT@ 11223 @LENGTH@ 23


UPD ExpressionStatement@@Assignment:this.remainingBuffer=StringUtils.trimWhitespace(remainingBuffer) @TO@ Assignment:this.remainingBuffer=remainingBuffer @AT@ 2063 @LENGTH@ 67
---UPD Assignment@@this.remainingBuffer=StringUtils.trimWhitespace(remainingBuffer) @TO@ this.remainingBuffer=remainingBuffer @AT@ 2063 @LENGTH@ 66
------DEL MethodInvocation@@StringUtils.trimWhitespace(remainingBuffer) @AT@ 2086 @LENGTH@ 43
---------DEL SimpleName@@Name:StringUtils @AT@ 2086 @LENGTH@ 11
---------DEL SimpleName@@MethodName:trimWhitespace:[remainingBuffer] @AT@ 2098 @LENGTH@ 31
------------DEL SimpleName@@remainingBuffer @AT@ 2113 @LENGTH@ 15
------INS SimpleName@@remainingBuffer @TO@ Assignment@@this.remainingBuffer=StringUtils.trimWhitespace(remainingBuffer) @AT@ 2092 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:addressUri=UnsafeUriCharactersEncoder.encode(addressUri) @TO@ Assignment:addressUri=UnsafeUriCharactersEncoder.encodeHttpURI(addressUri) @AT@ 10884 @LENGTH@ 59
---UPD Assignment@@addressUri=UnsafeUriCharactersEncoder.encode(addressUri) @TO@ addressUri=UnsafeUriCharactersEncoder.encodeHttpURI(addressUri) @AT@ 10884 @LENGTH@ 58
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(addressUri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(addressUri) @AT@ 10897 @LENGTH@ 45
---------UPD SimpleName@@MethodName:encode:[addressUri] @TO@ MethodName:encodeHttpURI:[addressUri] @AT@ 10924 @LENGTH@ 18


INS MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @TO@ TypeDeclaration@@DefaultSetOperations, AbstractOperations<K,V>[SetOperations<K,V>] @AT@ 7539 @LENGTH@ 484
---INS Modifier@@public @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @AT@ 7539 @LENGTH@ 6
---INS ParameterizedType@@Cursor<V> @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @AT@ 7546 @LENGTH@ 9
------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<V> @AT@ 7546 @LENGTH@ 6
------INS SimpleType@@V @TO@ ParameterizedType@@Cursor<V> @AT@ 7553 @LENGTH@ 1
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @AT@ 7556 @LENGTH@ 5
---INS SingleVariableDeclaration@@K key @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @AT@ 7562 @LENGTH@ 5
------INS SimpleType@@K @TO@ SingleVariableDeclaration@@K key @AT@ 7562 @LENGTH@ 1
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@K key @AT@ 7564 @LENGTH@ 3
---INS SingleVariableDeclaration@@final ScanOptions options @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @AT@ 7569 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ScanOptions options @AT@ 7569 @LENGTH@ 5
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@final ScanOptions options @AT@ 7575 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@final ScanOptions options @AT@ 7587 @LENGTH@ 7
---INS VariableDeclarationStatement@@final byte[] rawKey=rawKey(key); @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @AT@ 7601 @LENGTH@ 34
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] rawKey=rawKey(key); @AT@ 7601 @LENGTH@ 5
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] rawKey=rawKey(key); @AT@ 7607 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 7607 @LENGTH@ 4
------INS VariableDeclarationFragment@@rawKey=rawKey(key) @TO@ VariableDeclarationStatement@@final byte[] rawKey=rawKey(key); @AT@ 7614 @LENGTH@ 20
---------INS SimpleName@@rawKey @TO@ VariableDeclarationFragment@@rawKey=rawKey(key) @AT@ 7614 @LENGTH@ 6
---------INS MethodInvocation@@rawKey(key) @TO@ VariableDeclarationFragment@@rawKey=rawKey(key) @AT@ 7623 @LENGTH@ 11
------------INS SimpleName@@MethodName:rawKey:[key] @TO@ MethodInvocation@@rawKey(key) @AT@ 7623 @LENGTH@ 11
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:rawKey:[key] @AT@ 7630 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:execute(new RedisCallback<Cursor<V>>(){
  @Override public Cursor<V> doInRedis(  RedisConnection connection) throws DataAccessException {
    return new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
      @Override public V convert(      byte[] source){
        return deserializeValue(source);
      }
    }
);
  }
}
,true) @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:sScan, K key, final ScanOptions options,  @AT@ 7638 @LENGTH@ 381
------INS MethodInvocation@@execute(new RedisCallback<Cursor<V>>(){
  @Override public Cursor<V> doInRedis(  RedisConnection connection) throws DataAccessException {
    return new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
      @Override public V convert(      byte[] source){
        return deserializeValue(source);
      }
    }
);
  }
}
,true) @TO@ ReturnStatement@@MethodInvocation:execute(new RedisCallback<Cursor<V>>(){
  @Override public Cursor<V> doInRedis(  RedisConnection connection) throws DataAccessException {
    return new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
      @Override public V convert(      byte[] source){
        return deserializeValue(source);
      }
    }
);
  }
}
,true) @AT@ 7645 @LENGTH@ 373
---------INS SimpleName@@MethodName:execute:[new RedisCallback<Cursor<V>>(){
  @Override public Cursor<V> doInRedis(  RedisConnection connection) throws DataAccessException {
    return new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
      @Override public V convert(      byte[] source){
        return deserializeValue(source);
      }
    }
);
  }
}
, true] @TO@ MethodInvocation@@execute(new RedisCallback<Cursor<V>>(){
  @Override public Cursor<V> doInRedis(  RedisConnection connection) throws DataAccessException {
    return new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
      @Override public V convert(      byte[] source){
        return deserializeValue(source);
      }
    }
);
  }
}
,true) @AT@ 7645 @LENGTH@ 373
------------INS ClassInstanceCreation@@RedisCallback<Cursor<V>>[] @TO@ SimpleName@@MethodName:execute:[new RedisCallback<Cursor<V>>(){
  @Override public Cursor<V> doInRedis(  RedisConnection connection) throws DataAccessException {
    return new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
      @Override public V convert(      byte[] source){
        return deserializeValue(source);
      }
    }
);
  }
}
, true] @AT@ 7653 @LENGTH@ 358
---------------INS New@@new @TO@ ClassInstanceCreation@@RedisCallback<Cursor<V>>[] @AT@ 7653 @LENGTH@ 3
---------------INS ParameterizedType@@RedisCallback<Cursor<V>> @TO@ ClassInstanceCreation@@RedisCallback<Cursor<V>>[] @AT@ 7657 @LENGTH@ 24
------------------INS SimpleType@@RedisCallback @TO@ ParameterizedType@@RedisCallback<Cursor<V>> @AT@ 7657 @LENGTH@ 13
------------------INS ParameterizedType@@Cursor<V> @TO@ ParameterizedType@@RedisCallback<Cursor<V>> @AT@ 7671 @LENGTH@ 9
---------------------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<V> @AT@ 7671 @LENGTH@ 6
---------------------INS SimpleType@@V @TO@ ParameterizedType@@Cursor<V> @AT@ 7678 @LENGTH@ 1
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@RedisCallback<Cursor<V>>[] @AT@ 7684 @LENGTH@ 327
------------------INS MethodDeclaration@@public, Cursor<V>, MethodName:doInRedis, RedisConnection connection, DataAccessException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7703 @LENGTH@ 304
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:doInRedis, RedisConnection connection, DataAccessException,  @AT@ 7703 @LENGTH@ 6
---------------------INS ParameterizedType@@Cursor<V> @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:doInRedis, RedisConnection connection, DataAccessException,  @AT@ 7710 @LENGTH@ 9
------------------------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<V> @AT@ 7710 @LENGTH@ 6
------------------------INS SimpleType@@V @TO@ ParameterizedType@@Cursor<V> @AT@ 7717 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:doInRedis @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:doInRedis, RedisConnection connection, DataAccessException,  @AT@ 7720 @LENGTH@ 9
---------------------INS SingleVariableDeclaration@@RedisConnection connection @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:doInRedis, RedisConnection connection, DataAccessException,  @AT@ 7730 @LENGTH@ 26
------------------------INS SimpleType@@RedisConnection @TO@ SingleVariableDeclaration@@RedisConnection connection @AT@ 7730 @LENGTH@ 15
------------------------INS SimpleName@@connection @TO@ SingleVariableDeclaration@@RedisConnection connection @AT@ 7746 @LENGTH@ 10
---------------------INS SimpleType@@DataAccessException @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:doInRedis, RedisConnection connection, DataAccessException,  @AT@ 7765 @LENGTH@ 19
---------------------INS ReturnStatement@@ClassInstanceCreation:new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
  @Override public V convert(  byte[] source){
    return deserializeValue(source);
  }
}
) @TO@ MethodDeclaration@@public, Cursor<V>, MethodName:doInRedis, RedisConnection connection, DataAccessException,  @AT@ 7791 @LENGTH@ 211
------------------------INS ClassInstanceCreation@@ConvertingCursor<byte[],V>[connection.sScan(rawKey,options), new Converter<byte[],V>(){
  @Override public V convert(  byte[] source){
    return deserializeValue(source);
  }
}
] @TO@ ReturnStatement@@ClassInstanceCreation:new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
  @Override public V convert(  byte[] source){
    return deserializeValue(source);
  }
}
) @AT@ 7798 @LENGTH@ 203
---------------------------INS New@@new @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],V>[connection.sScan(rawKey,options), new Converter<byte[],V>(){
  @Override public V convert(  byte[] source){
    return deserializeValue(source);
  }
}
] @AT@ 7798 @LENGTH@ 3
---------------------------INS ParameterizedType@@ConvertingCursor<byte[],V> @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],V>[connection.sScan(rawKey,options), new Converter<byte[],V>(){
  @Override public V convert(  byte[] source){
    return deserializeValue(source);
  }
}
] @AT@ 7802 @LENGTH@ 27
------------------------------INS SimpleType@@ConvertingCursor @TO@ ParameterizedType@@ConvertingCursor<byte[],V> @AT@ 7802 @LENGTH@ 16
------------------------------INS ArrayType@@byte[] @TO@ ParameterizedType@@ConvertingCursor<byte[],V> @AT@ 7819 @LENGTH@ 6
---------------------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 7819 @LENGTH@ 4
------------------------------INS SimpleType@@V @TO@ ParameterizedType@@ConvertingCursor<byte[],V> @AT@ 7827 @LENGTH@ 1
---------------------------INS MethodInvocation@@connection.sScan(rawKey,options) @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],V>[connection.sScan(rawKey,options), new Converter<byte[],V>(){
  @Override public V convert(  byte[] source){
    return deserializeValue(source);
  }
}
] @AT@ 7830 @LENGTH@ 33
------------------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.sScan(rawKey,options) @AT@ 7830 @LENGTH@ 10
------------------------------INS SimpleName@@MethodName:sScan:[rawKey, options] @TO@ MethodInvocation@@connection.sScan(rawKey,options) @AT@ 7841 @LENGTH@ 22
---------------------------------INS SimpleName@@rawKey @TO@ SimpleName@@MethodName:sScan:[rawKey, options] @AT@ 7847 @LENGTH@ 6
---------------------------------INS SimpleName@@options @TO@ SimpleName@@MethodName:sScan:[rawKey, options] @AT@ 7855 @LENGTH@ 7
---------------------------INS ClassInstanceCreation@@Converter<byte[],V>[] @TO@ ClassInstanceCreation@@ConvertingCursor<byte[],V>[connection.sScan(rawKey,options), new Converter<byte[],V>(){
  @Override public V convert(  byte[] source){
    return deserializeValue(source);
  }
}
] @AT@ 7865 @LENGTH@ 135
------------------------------INS New@@new @TO@ ClassInstanceCreation@@Converter<byte[],V>[] @AT@ 7865 @LENGTH@ 3
------------------------------INS ParameterizedType@@Converter<byte[],V> @TO@ ClassInstanceCreation@@Converter<byte[],V>[] @AT@ 7869 @LENGTH@ 20
---------------------------------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<byte[],V> @AT@ 7869 @LENGTH@ 9
---------------------------------INS ArrayType@@byte[] @TO@ ParameterizedType@@Converter<byte[],V> @AT@ 7879 @LENGTH@ 6
------------------------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 7879 @LENGTH@ 4
---------------------------------INS SimpleType@@V @TO@ ParameterizedType@@Converter<byte[],V> @AT@ 7887 @LENGTH@ 1
------------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Converter<byte[],V>[] @AT@ 7892 @LENGTH@ 108
---------------------------------INS MethodDeclaration@@public, V, MethodName:convert, byte[] source,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7915 @LENGTH@ 79
------------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, V, MethodName:convert, byte[] source,  @AT@ 7915 @LENGTH@ 6
------------------------------------INS SimpleType@@V @TO@ MethodDeclaration@@public, V, MethodName:convert, byte[] source,  @AT@ 7922 @LENGTH@ 1
------------------------------------INS SimpleName@@MethodName:convert @TO@ MethodDeclaration@@public, V, MethodName:convert, byte[] source,  @AT@ 7924 @LENGTH@ 7
------------------------------------INS SingleVariableDeclaration@@byte[] source @TO@ MethodDeclaration@@public, V, MethodName:convert, byte[] source,  @AT@ 7932 @LENGTH@ 13
---------------------------------------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] source @AT@ 7932 @LENGTH@ 6
------------------------------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 7932 @LENGTH@ 4
---------------------------------------INS SimpleName@@source @TO@ SingleVariableDeclaration@@byte[] source @AT@ 7939 @LENGTH@ 6
------------------------------------INS ReturnStatement@@MethodInvocation:deserializeValue(source) @TO@ MethodDeclaration@@public, V, MethodName:convert, byte[] source,  @AT@ 7955 @LENGTH@ 32
---------------------------------------INS MethodInvocation@@deserializeValue(source) @TO@ ReturnStatement@@MethodInvocation:deserializeValue(source) @AT@ 7962 @LENGTH@ 24
------------------------------------------INS SimpleName@@MethodName:deserializeValue:[source] @TO@ MethodInvocation@@deserializeValue(source) @AT@ 7962 @LENGTH@ 24
---------------------------------------------INS SimpleName@@source @TO@ SimpleName@@MethodName:deserializeValue:[source] @AT@ 7979 @LENGTH@ 6
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:execute:[new RedisCallback<Cursor<V>>(){
  @Override public Cursor<V> doInRedis(  RedisConnection connection) throws DataAccessException {
    return new ConvertingCursor<byte[],V>(connection.sScan(rawKey,options),new Converter<byte[],V>(){
      @Override public V convert(      byte[] source){
        return deserializeValue(source);
      }
    }
);
  }
}
, true] @AT@ 8013 @LENGTH@ 4


DEL MethodDeclaration@@public, String, MethodName:getValue, ParsedCommandLine args,  @AT@ 1868 @LENGTH@ 106
---DEL Modifier@@public @AT@ 1868 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1875 @LENGTH@ 6
---DEL SimpleName@@MethodName:getValue @AT@ 1882 @LENGTH@ 8
---DEL SingleVariableDeclaration@@ParsedCommandLine args @AT@ 1891 @LENGTH@ 22
------DEL SimpleType@@ParsedCommandLine @AT@ 1891 @LENGTH@ 17
------DEL SimpleName@@args @AT@ 1909 @LENGTH@ 4
---DEL ReturnStatement@@MethodInvocation:translatePath(super.getValue(args)) @AT@ 1925 @LENGTH@ 43
------DEL MethodInvocation@@translatePath(super.getValue(args)) @AT@ 1932 @LENGTH@ 35
---------DEL SimpleName@@MethodName:translatePath:[super.getValue(args)] @AT@ 1932 @LENGTH@ 35
------------DEL SuperMethodInvocation@@super.getValue(args) @AT@ 1946 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:getValue:[args] @AT@ 1952 @LENGTH@ 8
---------------DEL SimpleName@@args @AT@ 1961 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:sortKeys.put("S.STEP_EXECUTION_ID",Order.DESCENDING) @TO@ MethodInvocation:sortKeys.put("STEP_EXECUTION_ID",Order.DESCENDING) @AT@ 6853 @LENGTH@ 54
---UPD MethodInvocation@@sortKeys.put("S.STEP_EXECUTION_ID",Order.DESCENDING) @TO@ sortKeys.put("STEP_EXECUTION_ID",Order.DESCENDING) @AT@ 6853 @LENGTH@ 53
------UPD SimpleName@@MethodName:put:["S.STEP_EXECUTION_ID", Order.DESCENDING] @TO@ MethodName:put:["STEP_EXECUTION_ID", Order.DESCENDING] @AT@ 6862 @LENGTH@ 44
---------UPD StringLiteral@@"S.STEP_EXECUTION_ID" @TO@ "STEP_EXECUTION_ID" @AT@ 6866 @LENGTH@ 21


INS MethodDeclaration@@public, boolean, MethodName:cancelTask, ServerIdentity toCancel,  @TO@ TypeDeclaration@@[public, abstract]ServerTaskExecutor,  @AT@ 4226 @LENGTH@ 171
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:cancelTask, ServerIdentity toCancel,  @AT@ 4226 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:cancelTask, ServerIdentity toCancel,  @AT@ 4233 @LENGTH@ 7
---INS SimpleName@@MethodName:cancelTask @TO@ MethodDeclaration@@public, boolean, MethodName:cancelTask, ServerIdentity toCancel,  @AT@ 4241 @LENGTH@ 10
---INS SingleVariableDeclaration@@ServerIdentity toCancel @TO@ MethodDeclaration@@public, boolean, MethodName:cancelTask, ServerIdentity toCancel,  @AT@ 4252 @LENGTH@ 23
------INS SimpleType@@ServerIdentity @TO@ SingleVariableDeclaration@@ServerIdentity toCancel @AT@ 4252 @LENGTH@ 14
------INS SimpleName@@toCancel @TO@ SingleVariableDeclaration@@ServerIdentity toCancel @AT@ 4267 @LENGTH@ 8
---INS VariableDeclarationStatement@@ExecutedServerRequest task=submittedTasks.get(toCancel); @TO@ MethodDeclaration@@public, boolean, MethodName:cancelTask, ServerIdentity toCancel,  @AT@ 4287 @LENGTH@ 58
------INS SimpleType@@ExecutedServerRequest @TO@ VariableDeclarationStatement@@ExecutedServerRequest task=submittedTasks.get(toCancel); @AT@ 4287 @LENGTH@ 21
------INS VariableDeclarationFragment@@task=submittedTasks.get(toCancel) @TO@ VariableDeclarationStatement@@ExecutedServerRequest task=submittedTasks.get(toCancel); @AT@ 4309 @LENGTH@ 35
---------INS SimpleName@@task @TO@ VariableDeclarationFragment@@task=submittedTasks.get(toCancel) @AT@ 4309 @LENGTH@ 4
---------INS MethodInvocation@@submittedTasks.get(toCancel) @TO@ VariableDeclarationFragment@@task=submittedTasks.get(toCancel) @AT@ 4316 @LENGTH@ 28
------------INS SimpleName@@Name:submittedTasks @TO@ MethodInvocation@@submittedTasks.get(toCancel) @AT@ 4316 @LENGTH@ 14
------------INS SimpleName@@MethodName:get:[toCancel] @TO@ MethodInvocation@@submittedTasks.get(toCancel) @AT@ 4331 @LENGTH@ 13
---------------INS SimpleName@@toCancel @TO@ SimpleName@@MethodName:get:[toCancel] @AT@ 4335 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:task != null && task.cancel() @TO@ MethodDeclaration@@public, boolean, MethodName:cancelTask, ServerIdentity toCancel,  @AT@ 4354 @LENGTH@ 37
------INS InfixExpression@@task != null && task.cancel() @TO@ ReturnStatement@@InfixExpression:task != null && task.cancel() @AT@ 4361 @LENGTH@ 29
---------INS InfixExpression@@task != null @TO@ InfixExpression@@task != null && task.cancel() @AT@ 4361 @LENGTH@ 12
------------INS SimpleName@@task @TO@ InfixExpression@@task != null @AT@ 4361 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@task != null @AT@ 4365 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@task != null @AT@ 4369 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@task != null && task.cancel() @AT@ 4373 @LENGTH@ 2
---------INS MethodInvocation@@task.cancel() @TO@ InfixExpression@@task != null && task.cancel() @AT@ 4377 @LENGTH@ 13
------------INS SimpleName@@Name:task @TO@ MethodInvocation@@task.cancel() @AT@ 4377 @LENGTH@ 4
------------INS SimpleName@@MethodName:cancel:[] @TO@ MethodInvocation@@task.cancel() @AT@ 4382 @LENGTH@ 8


UPD VariableDeclarationStatement@@Direction direction=Direction.fromStringOrNull(elements[elements.length - 1]); @TO@ Direction direction=elements.length == 0 ? null : Direction.fromStringOrNull(elements[elements.length - 1]); @AT@ 9388 @LENGTH@ 80
---UPD VariableDeclarationFragment@@direction=Direction.fromStringOrNull(elements[elements.length - 1]) @TO@ direction=elements.length == 0 ? null : Direction.fromStringOrNull(elements[elements.length - 1]) @AT@ 9398 @LENGTH@ 69
------INS ConditionalExpression@@elements.length == 0 ? null : Direction.fromStringOrNull(elements[elements.length - 1]) @TO@ VariableDeclarationFragment@@direction=Direction.fromStringOrNull(elements[elements.length - 1]) @AT@ 9410 @LENGTH@ 87
---------MOV MethodInvocation@@Direction.fromStringOrNull(elements[elements.length - 1]) @TO@ ConditionalExpression@@elements.length == 0 ? null : Direction.fromStringOrNull(elements[elements.length - 1]) @AT@ 9410 @LENGTH@ 57
---------INS InfixExpression@@elements.length == 0 @TO@ ConditionalExpression@@elements.length == 0 ? null : Direction.fromStringOrNull(elements[elements.length - 1]) @AT@ 9410 @LENGTH@ 20
------------INS QualifiedName@@elements.length @TO@ InfixExpression@@elements.length == 0 @AT@ 9410 @LENGTH@ 15
---------------INS SimpleName@@elements @TO@ QualifiedName@@elements.length @AT@ 9410 @LENGTH@ 8
---------------INS SimpleName@@length @TO@ QualifiedName@@elements.length @AT@ 9419 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@elements.length == 0 @AT@ 9425 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@elements.length == 0 @AT@ 9429 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ ConditionalExpression@@elements.length == 0 ? null : Direction.fromStringOrNull(elements[elements.length - 1]) @AT@ 9433 @LENGTH@ 4


INS MethodDeclaration@@Set<String>, MethodName:getPersistentDeployments,  @TO@ TypeDeclaration@@[public]DeploymentOperations, [Closeable] @AT@ 1648 @LENGTH@ 27
---INS ParameterizedType@@Set<String> @TO@ MethodDeclaration@@Set<String>, MethodName:getPersistentDeployments,  @AT@ 1636 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 1636 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 1640 @LENGTH@ 6
---INS SimpleName@@MethodName:getPersistentDeployments @TO@ MethodDeclaration@@Set<String>, MethodName:getPersistentDeployments,  @AT@ 1648 @LENGTH@ 24


UPD MethodDeclaration@@public, void, MethodName:foo,  @TO@ public, void, MethodName:injectsEntityManagerIntoConstructors,  @AT@ 3057 @LENGTH@ 110
---UPD SimpleName@@MethodName:foo @TO@ MethodName:injectsEntityManagerIntoConstructors @AT@ 3069 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @TO@ TypeDeclaration@@[public]TestInMemoryNodeModel,  @AT@ 20205 @LENGTH@ 694
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20205 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20212 @LENGTH@ 4
---INS SimpleName@@MethodName:testClearTreeNonExistingKey @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20217 @LENGTH@ 27
---INS VariableDeclarationStatement@@NodeKeyResolver<ImmutableNode> resolver=createResolver(); @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20261 @LENGTH@ 59
------INS ParameterizedType@@NodeKeyResolver<ImmutableNode> @TO@ VariableDeclarationStatement@@NodeKeyResolver<ImmutableNode> resolver=createResolver(); @AT@ 20261 @LENGTH@ 30
---------INS SimpleType@@NodeKeyResolver @TO@ ParameterizedType@@NodeKeyResolver<ImmutableNode> @AT@ 20261 @LENGTH@ 15
---------INS SimpleType@@ImmutableNode @TO@ ParameterizedType@@NodeKeyResolver<ImmutableNode> @AT@ 20277 @LENGTH@ 13
------INS VariableDeclarationFragment@@resolver=createResolver() @TO@ VariableDeclarationStatement@@NodeKeyResolver<ImmutableNode> resolver=createResolver(); @AT@ 20292 @LENGTH@ 27
---------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@resolver=createResolver() @AT@ 20292 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:createResolver:[] @TO@ VariableDeclarationFragment@@resolver=createResolver() @AT@ 20303 @LENGTH@ 16
---INS VariableDeclarationStatement@@InMemoryNodeModel model=new InMemoryNodeModel(ROOT_PERSONAE_TREE); @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20329 @LENGTH@ 68
------INS SimpleType@@InMemoryNodeModel @TO@ VariableDeclarationStatement@@InMemoryNodeModel model=new InMemoryNodeModel(ROOT_PERSONAE_TREE); @AT@ 20329 @LENGTH@ 17
------INS VariableDeclarationFragment@@model=new InMemoryNodeModel(ROOT_PERSONAE_TREE) @TO@ VariableDeclarationStatement@@InMemoryNodeModel model=new InMemoryNodeModel(ROOT_PERSONAE_TREE); @AT@ 20347 @LENGTH@ 49
---------INS SimpleName@@model @TO@ VariableDeclarationFragment@@model=new InMemoryNodeModel(ROOT_PERSONAE_TREE) @AT@ 20347 @LENGTH@ 5
---------INS ClassInstanceCreation@@InMemoryNodeModel[ROOT_PERSONAE_TREE] @TO@ VariableDeclarationFragment@@model=new InMemoryNodeModel(ROOT_PERSONAE_TREE) @AT@ 20355 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@InMemoryNodeModel[ROOT_PERSONAE_TREE] @AT@ 20355 @LENGTH@ 3
------------INS SimpleType@@InMemoryNodeModel @TO@ ClassInstanceCreation@@InMemoryNodeModel[ROOT_PERSONAE_TREE] @AT@ 20359 @LENGTH@ 17
------------INS SimpleName@@ROOT_PERSONAE_TREE @TO@ ClassInstanceCreation@@InMemoryNodeModel[ROOT_PERSONAE_TREE] @AT@ 20377 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:EasyMock.expect(resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20406 @LENGTH@ 208
------INS MethodInvocation@@EasyMock.expect(resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @TO@ ExpressionStatement@@MethodInvocation:EasyMock.expect(resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 20406 @LENGTH@ 207
---------INS MethodInvocation@@MethodName:expect:[resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())] @TO@ MethodInvocation@@EasyMock.expect(resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 20406 @LENGTH@ 126
------------INS MethodInvocation@@resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler()) @TO@ MethodInvocation@@MethodName:expect:[resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())] @AT@ 20439 @LENGTH@ 92
---------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler()) @AT@ 20439 @LENGTH@ 8
---------------INS SimpleName@@MethodName:resolveKey:[ROOT_PERSONAE_TREE, KEY, model.getNodeHandler()] @TO@ MethodInvocation@@resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler()) @AT@ 20448 @LENGTH@ 83
------------------INS SimpleName@@ROOT_PERSONAE_TREE @TO@ SimpleName@@MethodName:resolveKey:[ROOT_PERSONAE_TREE, KEY, model.getNodeHandler()] @AT@ 20459 @LENGTH@ 18
------------------INS SimpleName@@KEY @TO@ SimpleName@@MethodName:resolveKey:[ROOT_PERSONAE_TREE, KEY, model.getNodeHandler()] @AT@ 20479 @LENGTH@ 3
------------------INS MethodInvocation@@model.getNodeHandler() @TO@ SimpleName@@MethodName:resolveKey:[ROOT_PERSONAE_TREE, KEY, model.getNodeHandler()] @AT@ 20508 @LENGTH@ 22
---------------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getNodeHandler() @AT@ 20508 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getNodeHandler:[] @TO@ MethodInvocation@@model.getNodeHandler() @AT@ 20514 @LENGTH@ 16
---------INS SimpleName@@Name:EasyMock @TO@ MethodInvocation@@EasyMock.expect(resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 20406 @LENGTH@ 8
---------INS SimpleName@@MethodName:andReturn:[Collections.<QueryResult<ImmutableNode>>emptyList()] @TO@ MethodInvocation@@EasyMock.expect(resolver.resolveKey(ROOT_PERSONAE_TREE,KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 20533 @LENGTH@ 80
------------INS MethodInvocation@@Collections.<QueryResult<ImmutableNode>>emptyList() @TO@ SimpleName@@MethodName:andReturn:[Collections.<QueryResult<ImmutableNode>>emptyList()] @AT@ 20560 @LENGTH@ 52
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<QueryResult<ImmutableNode>>emptyList() @AT@ 20560 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<QueryResult<ImmutableNode>>emptyList() @AT@ 20601 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:EasyMock.replay(resolver) @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20623 @LENGTH@ 26
------INS MethodInvocation@@EasyMock.replay(resolver) @TO@ ExpressionStatement@@MethodInvocation:EasyMock.replay(resolver) @AT@ 20623 @LENGTH@ 25
---------INS SimpleName@@Name:EasyMock @TO@ MethodInvocation@@EasyMock.replay(resolver) @AT@ 20623 @LENGTH@ 8
---------INS SimpleName@@MethodName:replay:[resolver] @TO@ MethodInvocation@@EasyMock.replay(resolver) @AT@ 20632 @LENGTH@ 16
------------INS SimpleName@@resolver @TO@ SimpleName@@MethodName:replay:[resolver] @AT@ 20639 @LENGTH@ 8
---INS VariableDeclarationStatement@@TreeData treeDataOld=model.getTreeData(); @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20659 @LENGTH@ 43
------INS SimpleType@@TreeData @TO@ VariableDeclarationStatement@@TreeData treeDataOld=model.getTreeData(); @AT@ 20659 @LENGTH@ 8
------INS VariableDeclarationFragment@@treeDataOld=model.getTreeData() @TO@ VariableDeclarationStatement@@TreeData treeDataOld=model.getTreeData(); @AT@ 20668 @LENGTH@ 33
---------INS SimpleName@@treeDataOld @TO@ VariableDeclarationFragment@@treeDataOld=model.getTreeData() @AT@ 20668 @LENGTH@ 11
---------INS MethodInvocation@@model.getTreeData() @TO@ VariableDeclarationFragment@@treeDataOld=model.getTreeData() @AT@ 20682 @LENGTH@ 19
------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getTreeData() @AT@ 20682 @LENGTH@ 5
------------INS SimpleName@@MethodName:getTreeData:[] @TO@ MethodInvocation@@model.getTreeData() @AT@ 20688 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:model.clearTree(KEY,resolver) @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20711 @LENGTH@ 31
------INS MethodInvocation@@model.clearTree(KEY,resolver) @TO@ ExpressionStatement@@MethodInvocation:model.clearTree(KEY,resolver) @AT@ 20711 @LENGTH@ 30
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.clearTree(KEY,resolver) @AT@ 20711 @LENGTH@ 5
---------INS SimpleName@@MethodName:clearTree:[KEY, resolver] @TO@ MethodInvocation@@model.clearTree(KEY,resolver) @AT@ 20717 @LENGTH@ 24
------------INS SimpleName@@KEY @TO@ SimpleName@@MethodName:clearTree:[KEY, resolver] @AT@ 20727 @LENGTH@ 3
------------INS SimpleName@@resolver @TO@ SimpleName@@MethodName:clearTree:[KEY, resolver] @AT@ 20732 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertNotNull("No root node",model.getNodeHandler().getRootNode()) @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20751 @LENGTH@ 68
------INS MethodInvocation@@assertNotNull("No root node",model.getNodeHandler().getRootNode()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("No root node",model.getNodeHandler().getRootNode()) @AT@ 20751 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertNotNull:["No root node", model.getNodeHandler().getRootNode()] @TO@ MethodInvocation@@assertNotNull("No root node",model.getNodeHandler().getRootNode()) @AT@ 20751 @LENGTH@ 67
------------INS StringLiteral@@"No root node" @TO@ SimpleName@@MethodName:assertNotNull:["No root node", model.getNodeHandler().getRootNode()] @AT@ 20765 @LENGTH@ 14
------------INS MethodInvocation@@model.getNodeHandler().getRootNode() @TO@ SimpleName@@MethodName:assertNotNull:["No root node", model.getNodeHandler().getRootNode()] @AT@ 20781 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getNodeHandler:[] @TO@ MethodInvocation@@model.getNodeHandler().getRootNode() @AT@ 20781 @LENGTH@ 22
---------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getNodeHandler().getRootNode() @AT@ 20781 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getRootNode:[] @TO@ MethodInvocation@@model.getNodeHandler().getRootNode() @AT@ 20804 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertSame("Data was changed",treeDataOld,model.getTreeData()) @TO@ MethodDeclaration@@public, void, MethodName:testClearTreeNonExistingKey,  @AT@ 20828 @LENGTH@ 65
------INS MethodInvocation@@assertSame("Data was changed",treeDataOld,model.getTreeData()) @TO@ ExpressionStatement@@MethodInvocation:assertSame("Data was changed",treeDataOld,model.getTreeData()) @AT@ 20828 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @TO@ MethodInvocation@@assertSame("Data was changed",treeDataOld,model.getTreeData()) @AT@ 20828 @LENGTH@ 64
------------INS StringLiteral@@"Data was changed" @TO@ SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @AT@ 20839 @LENGTH@ 18
------------INS SimpleName@@treeDataOld @TO@ SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @AT@ 20859 @LENGTH@ 11
------------INS MethodInvocation@@model.getTreeData() @TO@ SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @AT@ 20872 @LENGTH@ 19
---------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getTreeData() @AT@ 20872 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getTreeData:[] @TO@ MethodInvocation@@model.getTreeData() @AT@ 20878 @LENGTH@ 13


UPD FieldDeclaration@@private, boolean, [frozen=false] @TO@ private, final, boolean, [frozen=false] @AT@ 1957 @LENGTH@ 31
---INS Modifier@@final @TO@ FieldDeclaration@@private, boolean, [frozen=false] @AT@ 1966 @LENGTH@ 5


INS TryStatement@@try {  Thread.sleep(2000);} catch (Exception e) {} @TO@ MethodDeclaration@@protected, void, MethodName:assertProfileMinimumSize, String profile, Integer expected, IOException,  @AT@ 2980 @LENGTH@ 101
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ TryStatement@@try {  Thread.sleep(2000);} catch (Exception e) {} @AT@ 2998 @LENGTH@ 19
------INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 2998 @LENGTH@ 18
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 2998 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 3005 @LENGTH@ 11
------------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 3011 @LENGTH@ 4
---INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  Thread.sleep(2000);} catch (Exception e) {} @AT@ 3028 @LENGTH@ 53
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3035 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3035 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3045 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:shouldAllowBindingOfVarArgs, Exception,  @TO@ public, void, MethodName:shouldAllowBindingOfVarArgsAsIs, Exception,  @AT@ 7166 @LENGTH@ 389
---UPD SimpleName@@MethodName:shouldAllowBindingOfVarArgs @TO@ MethodName:shouldAllowBindingOfVarArgsAsIs @AT@ 7178 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:verify(query).setParameter(eq(1),eq(Arrays.asList(1,2,3))) @TO@ MethodInvocation:verify(query).setParameter(eq(1),eq(ids)) @AT@ 7490 @LENGTH@ 62
------UPD MethodInvocation@@verify(query).setParameter(eq(1),eq(Arrays.asList(1,2,3))) @TO@ verify(query).setParameter(eq(1),eq(ids)) @AT@ 7490 @LENGTH@ 61
---------UPD SimpleName@@MethodName:setParameter:[eq(1), eq(Arrays.asList(1,2,3))] @TO@ MethodName:setParameter:[eq(1), eq(ids)] @AT@ 7504 @LENGTH@ 47
------------UPD MethodInvocation@@eq(Arrays.asList(1,2,3)) @TO@ eq(ids) @AT@ 7524 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:eq:[Arrays.asList(1,2,3)] @TO@ MethodName:eq:[ids] @AT@ 7524 @LENGTH@ 26
------------------INS SimpleName@@ids @TO@ SimpleName@@MethodName:eq:[Arrays.asList(1,2,3)] @AT@ 7506 @LENGTH@ 3
------------------DEL MethodInvocation@@Arrays.asList(1,2,3) @AT@ 7527 @LENGTH@ 22
---------------------DEL SimpleName@@Name:Arrays @AT@ 7527 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:asList:[1, 2, 3] @AT@ 7534 @LENGTH@ 15
------------------------DEL NumberLiteral@@1 @AT@ 7541 @LENGTH@ 1
------------------------DEL NumberLiteral@@2 @AT@ 7544 @LENGTH@ 1
------------------------DEL NumberLiteral@@3 @AT@ 7547 @LENGTH@ 1


UPD VariableDeclarationStatement@@BufferedReader bufin=new BufferedReader(new InputStreamReader(in,"8859_1")); @TO@ BufferedReader bufin=new BufferedReader(new InputStreamReader(in,StandardCharsets.ISO_8859_1)); @AT@ 15590 @LENGTH@ 79
---UPD VariableDeclarationFragment@@bufin=new BufferedReader(new InputStreamReader(in,"8859_1")) @TO@ bufin=new BufferedReader(new InputStreamReader(in,StandardCharsets.ISO_8859_1)) @AT@ 15605 @LENGTH@ 63
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(in,"8859_1")] @TO@ BufferedReader[new InputStreamReader(in,StandardCharsets.ISO_8859_1)] @AT@ 15613 @LENGTH@ 55
---------UPD ClassInstanceCreation@@InputStreamReader[in, "8859_1"] @TO@ InputStreamReader[in, StandardCharsets.ISO_8859_1] @AT@ 15632 @LENGTH@ 35
------------DEL StringLiteral@@"8859_1" @AT@ 15658 @LENGTH@ 8
------------INS QualifiedName@@StandardCharsets.ISO_8859_1 @TO@ ClassInstanceCreation@@InputStreamReader[in, "8859_1"] @AT@ 15700 @LENGTH@ 27
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.ISO_8859_1 @AT@ 15700 @LENGTH@ 16
---------------INS SimpleName@@ISO_8859_1 @TO@ QualifiedName@@StandardCharsets.ISO_8859_1 @AT@ 15717 @LENGTH@ 10


UPD SuperConstructorInvocation@@super(environment);
 @TO@ super(environment,null);
 @AT@ 3647 @LENGTH@ 19
---INS NullLiteral@@null @TO@ SuperConstructorInvocation@@super(environment);
 @AT@ 3663 @LENGTH@ 4


INS MethodDeclaration@@void, MethodName:disablePropertyDeprecated,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]JaxrsLogger, [BasicLogger] @AT@ 4610 @LENGTH@ 28
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:disablePropertyDeprecated,  @AT@ 4605 @LENGTH@ 4
---INS SimpleName@@MethodName:disablePropertyDeprecated @TO@ MethodDeclaration@@void, MethodName:disablePropertyDeprecated,  @AT@ 4610 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:assertEquals("Quartz properties file not found in classpath: doesnotexist.properties",e.getMessage()) @TO@ MethodInvocation:assertEquals("Error loading Quartz properties file: doesnotexist.properties",e.getMessage()) @AT@ 2069 @LENGTH@ 103
---UPD MethodInvocation@@assertEquals("Quartz properties file not found in classpath: doesnotexist.properties",e.getMessage()) @TO@ assertEquals("Error loading Quartz properties file: doesnotexist.properties",e.getMessage()) @AT@ 2069 @LENGTH@ 102
------UPD SimpleName@@MethodName:assertEquals:["Quartz properties file not found in classpath: doesnotexist.properties", e.getMessage()] @TO@ MethodName:assertEquals:["Error loading Quartz properties file: doesnotexist.properties", e.getMessage()] @AT@ 2069 @LENGTH@ 102
---------UPD StringLiteral@@"Quartz properties file not found in classpath: doesnotexist.properties" @TO@ "Error loading Quartz properties file: doesnotexist.properties" @AT@ 2082 @LENGTH@ 72


UPD FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(ConfigurationUtils.class)] @TO@ private, static, final, Log, [LOG=LogFactory.getLog(FileLocatorUtils.class)] @AT@ 4240 @LENGTH@ 75
---UPD VariableDeclarationFragment@@LOG=LogFactory.getLog(ConfigurationUtils.class) @TO@ LOG=LogFactory.getLog(FileLocatorUtils.class) @AT@ 4265 @LENGTH@ 49
------UPD MethodInvocation@@LogFactory.getLog(ConfigurationUtils.class) @TO@ LogFactory.getLog(FileLocatorUtils.class) @AT@ 4271 @LENGTH@ 43
---------UPD SimpleName@@MethodName:getLog:[ConfigurationUtils.class] @TO@ MethodName:getLog:[FileLocatorUtils.class] @AT@ 4282 @LENGTH@ 32
------------UPD TypeLiteral@@ConfigurationUtils.class @TO@ FileLocatorUtils.class @AT@ 4289 @LENGTH@ 24


DEL MethodDeclaration@@public, boolean, MethodName:isLenient,  @AT@ 1603 @LENGTH@ 47
---DEL Modifier@@public @AT@ 1603 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1610 @LENGTH@ 7
---DEL SimpleName@@MethodName:isLenient @AT@ 1618 @LENGTH@ 9
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1634 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1641 @LENGTH@ 5


UPD IfStatement@@if (streamsHolder == null) {  streamsHolder.getStream().flush();} @TO@ if (streamsHolder != null) {  streamsHolder.getStream().flush();} @AT@ 2055 @LENGTH@ 70
---UPD InfixExpression@@streamsHolder == null @TO@ streamsHolder != null @AT@ 2059 @LENGTH@ 21
------UPD Operator@@== @TO@ != @AT@ 2072 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer) @TO@ Assignment:httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer,reverseHeaders) @AT@ 5889 @LENGTH@ 198
---UPD Assignment@@httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer) @TO@ httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer,reverseHeaders) @AT@ 5889 @LENGTH@ 197
------UPD ClassInstanceCreation@@HttpMappingRuleBase[zkPath, new SimplePathTemplate(uriTemplate), gateway.getGatewayVersion(), enabledVersion, loadBalancer] @TO@ HttpMappingRuleBase[zkPath, new SimplePathTemplate(uriTemplate), gateway.getGatewayVersion(), enabledVersion, loadBalancer, reverseHeaders] @AT@ 5911 @LENGTH@ 175
---------INS SimpleName@@reverseHeaders @TO@ ClassInstanceCreation@@HttpMappingRuleBase[zkPath, new SimplePathTemplate(uriTemplate), gateway.getGatewayVersion(), enabledVersion, loadBalancer] @AT@ 6505 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 32144 @LENGTH@ 309
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32144 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32151 @LENGTH@ 4
---INS SimpleName@@MethodName:findsUserByBinaryDataReference @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32156 @LENGTH@ 30
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32196 @LENGTH@ 9
---INS VariableDeclarationStatement@@byte[] data="Woho!!".getBytes("UTF-8"); @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32213 @LENGTH@ 41
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] data="Woho!!".getBytes("UTF-8"); @AT@ 32213 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 32213 @LENGTH@ 4
------INS VariableDeclarationFragment@@data="Woho!!".getBytes("UTF-8") @TO@ VariableDeclarationStatement@@byte[] data="Woho!!".getBytes("UTF-8"); @AT@ 32220 @LENGTH@ 33
---------INS SimpleName@@data @TO@ VariableDeclarationFragment@@data="Woho!!".getBytes("UTF-8") @AT@ 32220 @LENGTH@ 4
---------INS MethodInvocation@@"Woho!!".getBytes("UTF-8") @TO@ VariableDeclarationFragment@@data="Woho!!".getBytes("UTF-8") @AT@ 32227 @LENGTH@ 26
------------INS StringLiteral@@"Woho!!" @TO@ MethodInvocation@@"Woho!!".getBytes("UTF-8") @AT@ 32227 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodInvocation@@"Woho!!".getBytes("UTF-8") @AT@ 32236 @LENGTH@ 17
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 32245 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:firstUser.setBinaryData(data) @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32258 @LENGTH@ 30
------INS MethodInvocation@@firstUser.setBinaryData(data) @TO@ ExpressionStatement@@MethodInvocation:firstUser.setBinaryData(data) @AT@ 32258 @LENGTH@ 29
---------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.setBinaryData(data) @AT@ 32258 @LENGTH@ 9
---------INS SimpleName@@MethodName:setBinaryData:[data] @TO@ MethodInvocation@@firstUser.setBinaryData(data) @AT@ 32268 @LENGTH@ 19
------------INS SimpleName@@data @TO@ SimpleName@@MethodName:setBinaryData:[data] @AT@ 32282 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32294 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 32294 @LENGTH@ 16
---INS VariableDeclarationStatement@@List<User> result=repository.findByBinaryData(data); @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32317 @LENGTH@ 54
------INS ParameterizedType@@List<User> @TO@ VariableDeclarationStatement@@List<User> result=repository.findByBinaryData(data); @AT@ 32317 @LENGTH@ 10
---------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 32317 @LENGTH@ 4
---------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 32322 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findByBinaryData(data) @TO@ VariableDeclarationStatement@@List<User> result=repository.findByBinaryData(data); @AT@ 32328 @LENGTH@ 42
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByBinaryData(data) @AT@ 32328 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByBinaryData(data) @TO@ VariableDeclarationFragment@@result=repository.findByBinaryData(data) @AT@ 32337 @LENGTH@ 33
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByBinaryData(data) @AT@ 32337 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByBinaryData:[data] @TO@ MethodInvocation@@repository.findByBinaryData(data) @AT@ 32348 @LENGTH@ 22
---------------INS SimpleName@@data @TO@ SimpleName@@MethodName:findByBinaryData:[data] @AT@ 32365 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32375 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result,hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(1)) @AT@ 32375 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertThat:[result, hasSize(1)] @TO@ MethodInvocation@@assertThat(result,hasSize(1)) @AT@ 32375 @LENGTH@ 30
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(1)] @AT@ 32386 @LENGTH@ 6
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(1)] @AT@ 32394 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 32394 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 32402 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 32394 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 32402 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(firstUser)) @TO@ MethodDeclaration@@public, void, MethodName:findsUserByBinaryDataReference, Exception,  @AT@ 32410 @LENGTH@ 39
------INS MethodInvocation@@assertThat(result,hasItem(firstUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(firstUser)) @AT@ 32410 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertThat:[result, hasItem(firstUser)] @TO@ MethodInvocation@@assertThat(result,hasItem(firstUser)) @AT@ 32410 @LENGTH@ 38
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(firstUser)] @AT@ 32421 @LENGTH@ 6
------------INS MethodInvocation@@hasItem(firstUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(firstUser)] @AT@ 32429 @LENGTH@ 18
---------------INS SimpleName@@MethodName:hasItem:[firstUser] @TO@ MethodInvocation@@hasItem(firstUser) @AT@ 32429 @LENGTH@ 18
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItem:[firstUser] @AT@ 32437 @LENGTH@ 9


UPD EnhancedForStatement@@for (State state : flow.getStates()) {  if (state instanceof StepHolder) {    Step step=((StepHolder)state).getStep();    String name=step.getName();    stepMap.put(name,step);  } else   if (state instanceof FlowHolder) {    for (    Flow subflow : ((FlowHolder)state).getFlows()) {      findSteps(subflow,map);    }  } else   if (state instanceof StepLocator) {    StepLocator locator=(StepLocator)state;    for (    String name : locator.getStepNames()) {      map.put(name,locator.getStep(name));    }  }} @TO@ for (State state : flow.getStates()) {  if (state instanceof StepLocator) {    StepLocator locator=(StepLocator)state;    for (    String name : locator.getStepNames()) {      map.put(name,locator.getStep(name));    }  } else   if (state instanceof StepHolder) {    Step step=((StepHolder)state).getStep();    String name=step.getName();    stepMap.put(name,step);  } else   if (state instanceof FlowHolder) {    for (    Flow subflow : ((FlowHolder)state).getFlows()) {      findSteps(subflow,map);    }  }} @AT@ 2540 @LENGTH@ 550
---DEL IfStatement@@if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} else if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @AT@ 2583 @LENGTH@ 502
------DEL InstanceofExpression@@state instanceof StepHolder @AT@ 2587 @LENGTH@ 27
---------DEL SimpleName@@state @AT@ 2587 @LENGTH@ 5
---------DEL Instanceof@@instanceof @AT@ 2593 @LENGTH@ 10
---------DEL SimpleType@@StepHolder @AT@ 2604 @LENGTH@ 10
------DEL Block@@ElseBody:if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} else if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @AT@ 2747 @LENGTH@ 338
---MOV IfStatement@@if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} else if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @TO@ EnhancedForStatement@@for (State state : flow.getStates()) {  if (state instanceof StepHolder) {    Step step=((StepHolder)state).getStep();    String name=step.getName();    stepMap.put(name,step);  } else   if (state instanceof FlowHolder) {    for (    Flow subflow : ((FlowHolder)state).getFlows()) {      findSteps(subflow,map);    }  } else   if (state instanceof StepLocator) {    StepLocator locator=(StepLocator)state;    for (    String name : locator.getStepNames()) {      map.put(name,locator.getStep(name));    }  }} @AT@ 2747 @LENGTH@ 338
------INS InstanceofExpression@@state instanceof StepLocator @TO@ IfStatement@@if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} else if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @AT@ 2587 @LENGTH@ 28
---------INS SimpleName@@state @TO@ InstanceofExpression@@state instanceof StepLocator @AT@ 2587 @LENGTH@ 5
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@state instanceof StepLocator @AT@ 2593 @LENGTH@ 10
---------INS SimpleType@@StepLocator @TO@ InstanceofExpression@@state instanceof StepLocator @AT@ 2604 @LENGTH@ 11
------UPD InstanceofExpression@@state instanceof FlowHolder @TO@ state instanceof StepHolder @AT@ 2751 @LENGTH@ 27
------INS Block@@ElseBody:if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @TO@ IfStatement@@if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} else if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @AT@ 2779 @LENGTH@ 302
---------INS IfStatement@@if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @TO@ Block@@ElseBody:if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @AT@ 2779 @LENGTH@ 302
------------MOV Block@@ThenBody:{  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} @TO@ IfStatement@@if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @AT@ 2616 @LENGTH@ 121
------------MOV InstanceofExpression@@state instanceof FlowHolder @TO@ IfStatement@@if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @AT@ 2751 @LENGTH@ 27
---------------UPD SimpleType@@FlowHolder @TO@ StepHolder @AT@ 2768 @LENGTH@ 10
------------MOV Block@@ElseBody:if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @TO@ IfStatement@@if (state instanceof StepHolder) {  Step step=((StepHolder)state).getStep();  String name=step.getName();  stepMap.put(name,step);} else if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @AT@ 2895 @LENGTH@ 190
------UPD Block@@ElseBody:if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @TO@ ElseBody:if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} @AT@ 2895 @LENGTH@ 190
------MOV Block@@ThenBody:{  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @TO@ IfStatement@@if (state instanceof FlowHolder) {  for (  Flow subflow : ((FlowHolder)state).getFlows()) {    findSteps(subflow,map);  }} else if (state instanceof StepLocator) {  StepLocator locator=(StepLocator)state;  for (  String name : locator.getStepNames()) {    map.put(name,locator.getStep(name));  }} @AT@ 2929 @LENGTH@ 156


INS MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]UpdateMapperUnitTests,  @AT@ 12853 @LENGTH@ 423
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @AT@ 12853 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @AT@ 12860 @LENGTH@ 4
---INS SimpleName@@MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty @TO@ MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @AT@ 12865 @LENGTH@ 57
---INS VariableDeclarationStatement@@Update update=new Update().set("listOfInterface.$.value","expected-value"); @TO@ MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @AT@ 12930 @LENGTH@ 78
------INS SimpleType@@Update @TO@ VariableDeclarationStatement@@Update update=new Update().set("listOfInterface.$.value","expected-value"); @AT@ 12930 @LENGTH@ 6
------INS VariableDeclarationFragment@@update=new Update().set("listOfInterface.$.value","expected-value") @TO@ VariableDeclarationStatement@@Update update=new Update().set("listOfInterface.$.value","expected-value"); @AT@ 12937 @LENGTH@ 70
---------INS SimpleName@@update @TO@ VariableDeclarationFragment@@update=new Update().set("listOfInterface.$.value","expected-value") @AT@ 12937 @LENGTH@ 6
---------INS MethodInvocation@@new Update().set("listOfInterface.$.value","expected-value") @TO@ VariableDeclarationFragment@@update=new Update().set("listOfInterface.$.value","expected-value") @AT@ 12946 @LENGTH@ 61
------------INS ClassInstanceCreation@@Update[] @TO@ MethodInvocation@@new Update().set("listOfInterface.$.value","expected-value") @AT@ 12946 @LENGTH@ 12
---------------INS New@@new @TO@ ClassInstanceCreation@@Update[] @AT@ 12946 @LENGTH@ 3
---------------INS SimpleType@@Update @TO@ ClassInstanceCreation@@Update[] @AT@ 12950 @LENGTH@ 6
------------INS SimpleName@@MethodName:set:["listOfInterface.$.value", "expected-value"] @TO@ MethodInvocation@@new Update().set("listOfInterface.$.value","expected-value") @AT@ 12959 @LENGTH@ 48
---------------INS StringLiteral@@"listOfInterface.$.value" @TO@ SimpleName@@MethodName:set:["listOfInterface.$.value", "expected-value"] @AT@ 12963 @LENGTH@ 25
---------------INS StringLiteral@@"expected-value" @TO@ SimpleName@@MethodName:set:["listOfInterface.$.value", "expected-value"] @AT@ 12990 @LENGTH@ 16
---INS VariableDeclarationStatement@@DBObject mappedObject=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)); @TO@ MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @AT@ 13011 @LENGTH@ 125
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject mappedObject=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)); @AT@ 13011 @LENGTH@ 8
------INS VariableDeclarationFragment@@mappedObject=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)) @TO@ VariableDeclarationStatement@@DBObject mappedObject=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)); @AT@ 13020 @LENGTH@ 115
---------INS SimpleName@@mappedObject @TO@ VariableDeclarationFragment@@mappedObject=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)) @AT@ 13020 @LENGTH@ 12
---------INS MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)) @TO@ VariableDeclarationFragment@@mappedObject=mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)) @AT@ 13035 @LENGTH@ 100
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)) @AT@ 13035 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(ParentClass.class)] @TO@ MethodInvocation@@mapper.getMappedObject(update.getUpdateObject(),context.getPersistentEntity(ParentClass.class)) @AT@ 13042 @LENGTH@ 93
---------------INS MethodInvocation@@update.getUpdateObject() @TO@ SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(ParentClass.class)] @AT@ 13058 @LENGTH@ 24
------------------INS SimpleName@@Name:update @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 13058 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getUpdateObject:[] @TO@ MethodInvocation@@update.getUpdateObject() @AT@ 13065 @LENGTH@ 17
---------------INS MethodInvocation@@context.getPersistentEntity(ParentClass.class) @TO@ SimpleName@@MethodName:getMappedObject:[update.getUpdateObject(), context.getPersistentEntity(ParentClass.class)] @AT@ 13088 @LENGTH@ 46
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(ParentClass.class) @AT@ 13088 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[ParentClass.class] @TO@ MethodInvocation@@context.getPersistentEntity(ParentClass.class) @AT@ 13096 @LENGTH@ 38
---------------------INS TypeLiteral@@ParentClass.class @TO@ SimpleName@@MethodName:getPersistentEntity:[ParentClass.class] @AT@ 13116 @LENGTH@ 17
---INS VariableDeclarationStatement@@DBObject setClause=getAsDBObject(mappedObject,"$set"); @TO@ MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @AT@ 13140 @LENGTH@ 57
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject setClause=getAsDBObject(mappedObject,"$set"); @AT@ 13140 @LENGTH@ 8
------INS VariableDeclarationFragment@@setClause=getAsDBObject(mappedObject,"$set") @TO@ VariableDeclarationStatement@@DBObject setClause=getAsDBObject(mappedObject,"$set"); @AT@ 13149 @LENGTH@ 47
---------INS SimpleName@@setClause @TO@ VariableDeclarationFragment@@setClause=getAsDBObject(mappedObject,"$set") @AT@ 13149 @LENGTH@ 9
---------INS MethodInvocation@@getAsDBObject(mappedObject,"$set") @TO@ VariableDeclarationFragment@@setClause=getAsDBObject(mappedObject,"$set") @AT@ 13161 @LENGTH@ 35
------------INS SimpleName@@MethodName:getAsDBObject:[mappedObject, "$set"] @TO@ MethodInvocation@@getAsDBObject(mappedObject,"$set") @AT@ 13161 @LENGTH@ 35
---------------INS SimpleName@@mappedObject @TO@ SimpleName@@MethodName:getAsDBObject:[mappedObject, "$set"] @AT@ 13175 @LENGTH@ 12
---------------INS StringLiteral@@"$set" @TO@ SimpleName@@MethodName:getAsDBObject:[mappedObject, "$set"] @AT@ 13189 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(setClause.containsField("listOfInterface.$.value"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:rendersUpdateAndPreservesKeyForPathsNotPointingToProperty,  @AT@ 13200 @LENGTH@ 73
------INS MethodInvocation@@assertThat(setClause.containsField("listOfInterface.$.value"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(setClause.containsField("listOfInterface.$.value"),is(true)) @AT@ 13200 @LENGTH@ 72
---------INS SimpleName@@MethodName:assertThat:[setClause.containsField("listOfInterface.$.value"), is(true)] @TO@ MethodInvocation@@assertThat(setClause.containsField("listOfInterface.$.value"),is(true)) @AT@ 13200 @LENGTH@ 72
------------INS MethodInvocation@@setClause.containsField("listOfInterface.$.value") @TO@ SimpleName@@MethodName:assertThat:[setClause.containsField("listOfInterface.$.value"), is(true)] @AT@ 13211 @LENGTH@ 50
---------------INS SimpleName@@Name:setClause @TO@ MethodInvocation@@setClause.containsField("listOfInterface.$.value") @AT@ 13211 @LENGTH@ 9
---------------INS SimpleName@@MethodName:containsField:["listOfInterface.$.value"] @TO@ MethodInvocation@@setClause.containsField("listOfInterface.$.value") @AT@ 13221 @LENGTH@ 40
------------------INS StringLiteral@@"listOfInterface.$.value" @TO@ SimpleName@@MethodName:containsField:["listOfInterface.$.value"] @AT@ 13235 @LENGTH@ 25
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[setClause.containsField("listOfInterface.$.value"), is(true)] @AT@ 13263 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 13263 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 13266 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 13263 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 13266 @LENGTH@ 4


INS IfStatement@@if (value != null) {  Assert.isAssignable(type,value.getClass());} @TO@ MethodDeclaration@@public, static, T, T, MethodName:getPropertyValue, Object root, String propertyPath, Class<T> type,  @AT@ 2012 @LENGTH@ 72
---INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null) {  Assert.isAssignable(type,value.getClass());} @AT@ 2016 @LENGTH@ 13
------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 2016 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 2021 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 2025 @LENGTH@ 4
---INS Block@@ThenBody:{  Assert.isAssignable(type,value.getClass());} @TO@ IfStatement@@if (value != null) {  Assert.isAssignable(type,value.getClass());} @AT@ 2031 @LENGTH@ 53
------MOV ExpressionStatement@@MethodInvocation:Assert.isAssignable(type,value.getClass()) @TO@ Block@@ThenBody:{  Assert.isAssignable(type,value.getClass());} @AT@ 2012 @LENGTH@ 44


DEL ExpressionStatement@@MethodInvocation:Assume.assumeThat(SpringVersion.getVersion().startsWith("4"),is(true)) @AT@ 4935 @LENGTH@ 72
---DEL MethodInvocation@@Assume.assumeThat(SpringVersion.getVersion().startsWith("4"),is(true)) @AT@ 4935 @LENGTH@ 71
------DEL SimpleName@@Name:Assume @AT@ 4935 @LENGTH@ 6
------DEL SimpleName@@MethodName:assumeThat:[SpringVersion.getVersion().startsWith("4"), is(true)] @AT@ 4942 @LENGTH@ 64
---------DEL MethodInvocation@@SpringVersion.getVersion().startsWith("4") @AT@ 4953 @LENGTH@ 42
------------DEL MethodInvocation@@MethodName:getVersion:[] @AT@ 4953 @LENGTH@ 26
------------DEL SimpleName@@Name:SpringVersion @AT@ 4953 @LENGTH@ 13
------------DEL SimpleName@@MethodName:startsWith:["4"] @AT@ 4980 @LENGTH@ 15
---------------DEL StringLiteral@@"4" @AT@ 4991 @LENGTH@ 3
---------DEL MethodInvocation@@is(true) @AT@ 4997 @LENGTH@ 8
------------DEL SimpleName@@MethodName:is:[true] @AT@ 4997 @LENGTH@ 8
---------------DEL BooleanLiteral@@true @AT@ 5000 @LENGTH@ 4


UPD IfStatement@@if (endpoint.isTestConnectionOnStartup()) {  throw new RuntimeException("Could not connect to XMPP server.",e);} else {  LOG.warn(XmppEndpoint.getXmppExceptionLogMessage(e));  scheduleDelayedStart();  return;} @TO@ if (endpoint.isTestConnectionOnStartup()) {  throw new RuntimeException("Could not connect to XMPP server.",e);} else {  LOG.warn(XmppEndpoint.getXmppExceptionLogMessage(e));  getExceptionHandler().handleException(XmppEndpoint.getXmppExceptionLogMessage(e),e);  scheduleDelayedStart();  return;} @AT@ 2777 @LENGTH@ 297
---UPD Block@@ElseBody:{  LOG.warn(XmppEndpoint.getXmppExceptionLogMessage(e));  scheduleDelayedStart();  return;} @TO@ ElseBody:{  LOG.warn(XmppEndpoint.getXmppExceptionLogMessage(e));  getExceptionHandler().handleException(XmppEndpoint.getXmppExceptionLogMessage(e),e);  scheduleDelayedStart();  return;} @AT@ 2925 @LENGTH@ 149
------INS ExpressionStatement@@MethodInvocation:getExceptionHandler().handleException(XmppEndpoint.getXmppExceptionLogMessage(e),e) @TO@ Block@@ElseBody:{  LOG.warn(XmppEndpoint.getXmppExceptionLogMessage(e));  scheduleDelayedStart();  return;} @AT@ 3013 @LENGTH@ 84
---------INS MethodInvocation@@getExceptionHandler().handleException(XmppEndpoint.getXmppExceptionLogMessage(e),e) @TO@ ExpressionStatement@@MethodInvocation:getExceptionHandler().handleException(XmppEndpoint.getXmppExceptionLogMessage(e),e) @AT@ 3013 @LENGTH@ 83
------------INS MethodInvocation@@MethodName:getExceptionHandler:[] @TO@ MethodInvocation@@getExceptionHandler().handleException(XmppEndpoint.getXmppExceptionLogMessage(e),e) @AT@ 3013 @LENGTH@ 21
------------INS SimpleName@@MethodName:handleException:[XmppEndpoint.getXmppExceptionLogMessage(e), e] @TO@ MethodInvocation@@getExceptionHandler().handleException(XmppEndpoint.getXmppExceptionLogMessage(e),e) @AT@ 3035 @LENGTH@ 61
---------------INS MethodInvocation@@XmppEndpoint.getXmppExceptionLogMessage(e) @TO@ SimpleName@@MethodName:handleException:[XmppEndpoint.getXmppExceptionLogMessage(e), e] @AT@ 3051 @LENGTH@ 42
------------------INS SimpleName@@Name:XmppEndpoint @TO@ MethodInvocation@@XmppEndpoint.getXmppExceptionLogMessage(e) @AT@ 3051 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getXmppExceptionLogMessage:[e] @TO@ MethodInvocation@@XmppEndpoint.getXmppExceptionLogMessage(e) @AT@ 3064 @LENGTH@ 29
---------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:getXmppExceptionLogMessage:[e] @AT@ 3091 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:handleException:[XmppEndpoint.getXmppExceptionLogMessage(e), e] @AT@ 3094 @LENGTH@ 1


UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 14996 @LENGTH@ 13
---UPD BooleanLiteral@@false @TO@ true @AT@ 15003 @LENGTH@ 5


UPD Block@@ThenBody:{  deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain));} @TO@ ThenBody:{  String authMethod=null;  LoginConfig loginConfig=deploymentInfo.getLoginConfig();  if (loginConfig != null && loginConfig.getAuthMethods().size() > 0)   authMethod=loginConfig.getAuthMethods().get(0).getName();  deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain,authMethod));  deploymentInfo.setSecurityContextFactory(new JASPICSecurityContextFactory(this.securityDomain));} @AT@ 18715 @LENGTH@ 126
---UPD ExpressionStatement@@MethodInvocation:deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain)) @TO@ MethodInvocation:deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain,authMethod)) @AT@ 18729 @LENGTH@ 102
------UPD MethodInvocation@@deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain)) @TO@ deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain,authMethod)) @AT@ 18729 @LENGTH@ 101
---------UPD SimpleName@@MethodName:setJaspiAuthenticationMechanism:[new JASPIAuthenticationMechanism(this.securityDomain)] @TO@ MethodName:setJaspiAuthenticationMechanism:[new JASPIAuthenticationMechanism(this.securityDomain,authMethod)] @AT@ 18744 @LENGTH@ 86
------------UPD ClassInstanceCreation@@JASPIAuthenticationMechanism[this.securityDomain] @TO@ JASPIAuthenticationMechanism[this.securityDomain, authMethod] @AT@ 18776 @LENGTH@ 53
---------------INS SimpleName@@authMethod @TO@ ClassInstanceCreation@@JASPIAuthenticationMechanism[this.securityDomain] @AT@ 19181 @LENGTH@ 10
---INS VariableDeclarationStatement@@String authMethod=null; @TO@ Block@@ThenBody:{  deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain));} @AT@ 18814 @LENGTH@ 25
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String authMethod=null; @AT@ 18814 @LENGTH@ 6
------INS VariableDeclarationFragment@@authMethod=null @TO@ VariableDeclarationStatement@@String authMethod=null; @AT@ 18821 @LENGTH@ 17
---------INS SimpleName@@authMethod @TO@ VariableDeclarationFragment@@authMethod=null @AT@ 18821 @LENGTH@ 10
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@authMethod=null @AT@ 18834 @LENGTH@ 4
---INS VariableDeclarationStatement@@LoginConfig loginConfig=deploymentInfo.getLoginConfig(); @TO@ Block@@ThenBody:{  deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain));} @AT@ 18852 @LENGTH@ 58
------INS SimpleType@@LoginConfig @TO@ VariableDeclarationStatement@@LoginConfig loginConfig=deploymentInfo.getLoginConfig(); @AT@ 18852 @LENGTH@ 11
------INS VariableDeclarationFragment@@loginConfig=deploymentInfo.getLoginConfig() @TO@ VariableDeclarationStatement@@LoginConfig loginConfig=deploymentInfo.getLoginConfig(); @AT@ 18864 @LENGTH@ 45
---------INS SimpleName@@loginConfig @TO@ VariableDeclarationFragment@@loginConfig=deploymentInfo.getLoginConfig() @AT@ 18864 @LENGTH@ 11
---------INS MethodInvocation@@deploymentInfo.getLoginConfig() @TO@ VariableDeclarationFragment@@loginConfig=deploymentInfo.getLoginConfig() @AT@ 18878 @LENGTH@ 31
------------INS SimpleName@@Name:deploymentInfo @TO@ MethodInvocation@@deploymentInfo.getLoginConfig() @AT@ 18878 @LENGTH@ 14
------------INS SimpleName@@MethodName:getLoginConfig:[] @TO@ MethodInvocation@@deploymentInfo.getLoginConfig() @AT@ 18893 @LENGTH@ 16
---INS IfStatement@@if (loginConfig != null && loginConfig.getAuthMethods().size() > 0) authMethod=loginConfig.getAuthMethods().get(0).getName(); @TO@ Block@@ThenBody:{  deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain));} @AT@ 18923 @LENGTH@ 143
------INS InfixExpression@@loginConfig != null && loginConfig.getAuthMethods().size() > 0 @TO@ IfStatement@@if (loginConfig != null && loginConfig.getAuthMethods().size() > 0) authMethod=loginConfig.getAuthMethods().get(0).getName(); @AT@ 18927 @LENGTH@ 62
---------INS InfixExpression@@loginConfig != null @TO@ InfixExpression@@loginConfig != null && loginConfig.getAuthMethods().size() > 0 @AT@ 18927 @LENGTH@ 19
------------INS SimpleName@@loginConfig @TO@ InfixExpression@@loginConfig != null @AT@ 18927 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@loginConfig != null @AT@ 18938 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@loginConfig != null @AT@ 18942 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@loginConfig != null && loginConfig.getAuthMethods().size() > 0 @AT@ 18946 @LENGTH@ 2
---------INS InfixExpression@@loginConfig.getAuthMethods().size() > 0 @TO@ InfixExpression@@loginConfig != null && loginConfig.getAuthMethods().size() > 0 @AT@ 18950 @LENGTH@ 39
------------INS MethodInvocation@@loginConfig.getAuthMethods().size() @TO@ InfixExpression@@loginConfig.getAuthMethods().size() > 0 @AT@ 18950 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getAuthMethods:[] @TO@ MethodInvocation@@loginConfig.getAuthMethods().size() @AT@ 18950 @LENGTH@ 28
---------------INS SimpleName@@Name:loginConfig @TO@ MethodInvocation@@loginConfig.getAuthMethods().size() @AT@ 18950 @LENGTH@ 11
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@loginConfig.getAuthMethods().size() @AT@ 18979 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@loginConfig.getAuthMethods().size() > 0 @AT@ 18985 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@loginConfig.getAuthMethods().size() > 0 @AT@ 18988 @LENGTH@ 1
------INS Block@@ThenBody:authMethod=loginConfig.getAuthMethods().get(0).getName(); @TO@ IfStatement@@if (loginConfig != null && loginConfig.getAuthMethods().size() > 0) authMethod=loginConfig.getAuthMethods().get(0).getName(); @AT@ 19007 @LENGTH@ 59
---------INS ExpressionStatement@@Assignment:authMethod=loginConfig.getAuthMethods().get(0).getName() @TO@ Block@@ThenBody:authMethod=loginConfig.getAuthMethods().get(0).getName(); @AT@ 19007 @LENGTH@ 59
------------INS Assignment@@authMethod=loginConfig.getAuthMethods().get(0).getName() @TO@ ExpressionStatement@@Assignment:authMethod=loginConfig.getAuthMethods().get(0).getName() @AT@ 19007 @LENGTH@ 58
---------------INS SimpleName@@authMethod @TO@ Assignment@@authMethod=loginConfig.getAuthMethods().get(0).getName() @AT@ 19007 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@authMethod=loginConfig.getAuthMethods().get(0).getName() @AT@ 19017 @LENGTH@ 1
---------------INS MethodInvocation@@loginConfig.getAuthMethods().get(0).getName() @TO@ Assignment@@authMethod=loginConfig.getAuthMethods().get(0).getName() @AT@ 19020 @LENGTH@ 45
------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@loginConfig.getAuthMethods().get(0).getName() @AT@ 19020 @LENGTH@ 35
---------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 19053 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getAuthMethods:[] @TO@ MethodInvocation@@loginConfig.getAuthMethods().get(0).getName() @AT@ 19020 @LENGTH@ 28
------------------INS SimpleName@@Name:loginConfig @TO@ MethodInvocation@@loginConfig.getAuthMethods().get(0).getName() @AT@ 19020 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@loginConfig.getAuthMethods().get(0).getName() @AT@ 19056 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:deploymentInfo.setSecurityContextFactory(new JASPICSecurityContextFactory(this.securityDomain)) @TO@ Block@@ThenBody:{  deploymentInfo.setJaspiAuthenticationMechanism(new JASPIAuthenticationMechanism(this.securityDomain));} @AT@ 19207 @LENGTH@ 96
------INS MethodInvocation@@deploymentInfo.setSecurityContextFactory(new JASPICSecurityContextFactory(this.securityDomain)) @TO@ ExpressionStatement@@MethodInvocation:deploymentInfo.setSecurityContextFactory(new JASPICSecurityContextFactory(this.securityDomain)) @AT@ 19207 @LENGTH@ 95
---------INS SimpleName@@Name:deploymentInfo @TO@ MethodInvocation@@deploymentInfo.setSecurityContextFactory(new JASPICSecurityContextFactory(this.securityDomain)) @AT@ 19207 @LENGTH@ 14
---------INS SimpleName@@MethodName:setSecurityContextFactory:[new JASPICSecurityContextFactory(this.securityDomain)] @TO@ MethodInvocation@@deploymentInfo.setSecurityContextFactory(new JASPICSecurityContextFactory(this.securityDomain)) @AT@ 19222 @LENGTH@ 80
------------INS ClassInstanceCreation@@JASPICSecurityContextFactory[this.securityDomain] @TO@ SimpleName@@MethodName:setSecurityContextFactory:[new JASPICSecurityContextFactory(this.securityDomain)] @AT@ 19248 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@JASPICSecurityContextFactory[this.securityDomain] @AT@ 19248 @LENGTH@ 3
---------------INS SimpleType@@JASPICSecurityContextFactory @TO@ ClassInstanceCreation@@JASPICSecurityContextFactory[this.securityDomain] @AT@ 19252 @LENGTH@ 28
---------------INS FieldAccess@@this.securityDomain @TO@ ClassInstanceCreation@@JASPICSecurityContextFactory[this.securityDomain] @AT@ 19281 @LENGTH@ 19
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.securityDomain @AT@ 19281 @LENGTH@ 4
------------------INS SimpleName@@securityDomain @TO@ FieldAccess@@this.securityDomain @AT@ 19286 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:from("file:target/done?doneFileName=done-${file:name}&initialDelay=0&delay=10").to("mock:result") @TO@ MethodInvocation:from("file:target/done?doneFileName=done-${file:name}&initialDelay=0&delay=10").convertBodyTo(String.class).to("mock:result") @AT@ 2519 @LENGTH@ 98
---UPD MethodInvocation@@from("file:target/done?doneFileName=done-${file:name}&initialDelay=0&delay=10").to("mock:result") @TO@ from("file:target/done?doneFileName=done-${file:name}&initialDelay=0&delay=10").convertBodyTo(String.class).to("mock:result") @AT@ 2519 @LENGTH@ 97
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from("file:target/done?doneFileName=done-${file:name}&initialDelay=0&delay=10").to("mock:result") @AT@ 2519 @LENGTH@ 128
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 2634 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>") @TO@ MethodInvocation:template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>") @AT@ 5414 @LENGTH@ 341
---UPD MethodInvocation@@template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>") @TO@ template.sendBody("direct:start","<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>") @AT@ 5414 @LENGTH@ 340
------UPD SimpleName@@MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>"] @TO@ MethodName:sendBody:["direct:start", "<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>"] @AT@ 5423 @LENGTH@ 331
---------UPD StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>" @TO@ "<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>" @AT@ 5460 @LENGTH@ 293


DEL MethodDeclaration@@public, boolean, MethodName:isAllowedVerifyingKey, List<String> allowedUserIds, PGPPublicKey verifyingPublicKey,  @AT@ 19052 @LENGTH@ 1147
---DEL Modifier@@public @AT@ 19052 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 19059 @LENGTH@ 7
---DEL SimpleName@@MethodName:isAllowedVerifyingKey @AT@ 19067 @LENGTH@ 21
---DEL SingleVariableDeclaration@@List<String> allowedUserIds @AT@ 19089 @LENGTH@ 27
------DEL ParameterizedType@@List<String> @AT@ 19089 @LENGTH@ 12
---------DEL SimpleType@@List @AT@ 19089 @LENGTH@ 4
---------DEL SimpleType@@String @AT@ 19094 @LENGTH@ 6
------DEL SimpleName@@allowedUserIds @AT@ 19102 @LENGTH@ 14
---DEL SingleVariableDeclaration@@PGPPublicKey verifyingPublicKey @AT@ 19118 @LENGTH@ 31
------DEL SimpleType@@PGPPublicKey @AT@ 19118 @LENGTH@ 12
------DEL SimpleName@@verifyingPublicKey @AT@ 19131 @LENGTH@ 18
---DEL IfStatement@@if (allowedUserIds == null || allowedUserIds.isEmpty()) {  return true;} @AT@ 19162 @LENGTH@ 133
------DEL InfixExpression@@allowedUserIds == null || allowedUserIds.isEmpty() @AT@ 19166 @LENGTH@ 50
---------DEL InfixExpression@@allowedUserIds == null @AT@ 19166 @LENGTH@ 22
------------DEL SimpleName@@allowedUserIds @AT@ 19166 @LENGTH@ 14
------------DEL Operator@@== @AT@ 19180 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 19184 @LENGTH@ 4
---------DEL Operator@@|| @AT@ 19188 @LENGTH@ 2
---------DEL MethodInvocation@@allowedUserIds.isEmpty() @AT@ 19192 @LENGTH@ 24
------------DEL SimpleName@@Name:allowedUserIds @AT@ 19192 @LENGTH@ 14
------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 19207 @LENGTH@ 9
------DEL Block@@ThenBody:{  return true;} @AT@ 19218 @LENGTH@ 77
---------DEL ReturnStatement@@BooleanLiteral:true @AT@ 19273 @LENGTH@ 12
------------DEL BooleanLiteral@@true @AT@ 19280 @LENGTH@ 4
---DEL VariableDeclarationStatement@@String keyUserId=null; @AT@ 19304 @LENGTH@ 24
------DEL SimpleType@@String @AT@ 19304 @LENGTH@ 6
------DEL VariableDeclarationFragment@@keyUserId=null @AT@ 19311 @LENGTH@ 16
---------DEL SimpleName@@keyUserId @AT@ 19311 @LENGTH@ 9
---------DEL NullLiteral@@null @AT@ 19323 @LENGTH@ 4
---DEL ForStatement@@for (@SuppressWarnings("unchecked") Iterator<String> iterator=verifyingPublicKey.getUserIDs(); iterator.hasNext(); ) {  keyUserId=iterator.next();  for (  String userid : allowedUserIds) {    if (keyUserId != null && keyUserId.contains(userid)) {      LOG.debug("Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. ",keyUserId,allowedUserIds);      return true;    }  }} @AT@ 19337 @LENGTH@ 613
------DEL VariableDeclarationExpression@@@SuppressWarnings("unchecked") Iterator<String> iterator=verifyingPublicKey.getUserIDs() @AT@ 19342 @LENGTH@ 98
---------DEL ParameterizedType@@Iterator<String> @AT@ 19381 @LENGTH@ 16
------------DEL SimpleType@@Iterator @AT@ 19381 @LENGTH@ 8
------------DEL SimpleType@@String @AT@ 19390 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@iterator=verifyingPublicKey.getUserIDs() @AT@ 19398 @LENGTH@ 42
------------DEL SimpleName@@iterator @AT@ 19398 @LENGTH@ 8
------------DEL MethodInvocation@@verifyingPublicKey.getUserIDs() @AT@ 19409 @LENGTH@ 31
---------------DEL SimpleName@@Name:verifyingPublicKey @AT@ 19409 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:getUserIDs:[] @AT@ 19428 @LENGTH@ 12
------DEL MethodInvocation@@iterator.hasNext() @AT@ 19442 @LENGTH@ 18
---------DEL SimpleName@@Name:iterator @AT@ 19442 @LENGTH@ 8
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 19451 @LENGTH@ 9
------DEL ExpressionStatement@@Assignment:keyUserId=iterator.next() @AT@ 19477 @LENGTH@ 28
---------DEL Assignment@@keyUserId=iterator.next() @AT@ 19477 @LENGTH@ 27
------------DEL SimpleName@@keyUserId @AT@ 19477 @LENGTH@ 9
------------DEL Operator@@= @AT@ 19486 @LENGTH@ 1
------------DEL MethodInvocation@@iterator.next() @AT@ 19489 @LENGTH@ 15
---------------DEL SimpleName@@Name:iterator @AT@ 19489 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:next:[] @AT@ 19498 @LENGTH@ 6
------DEL EnhancedForStatement@@for (String userid : allowedUserIds) {  if (keyUserId != null && keyUserId.contains(userid)) {    LOG.debug("Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. ",keyUserId,allowedUserIds);    return true;  }} @AT@ 19518 @LENGTH@ 422
---------DEL SingleVariableDeclaration@@String userid @AT@ 19523 @LENGTH@ 13
------------DEL SimpleType@@String @AT@ 19523 @LENGTH@ 6
------------DEL SimpleName@@userid @AT@ 19530 @LENGTH@ 6
---------DEL SimpleName@@allowedUserIds @AT@ 19539 @LENGTH@ 14
---------DEL IfStatement@@if (keyUserId != null && keyUserId.contains(userid)) {  LOG.debug("Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. ",keyUserId,allowedUserIds);  return true;} @AT@ 19573 @LENGTH@ 353
------------DEL InfixExpression@@keyUserId != null && keyUserId.contains(userid) @AT@ 19577 @LENGTH@ 47
---------------DEL InfixExpression@@keyUserId != null @AT@ 19577 @LENGTH@ 17
------------------DEL SimpleName@@keyUserId @AT@ 19577 @LENGTH@ 9
------------------DEL Operator@@!= @AT@ 19586 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 19590 @LENGTH@ 4
---------------DEL Operator@@&& @AT@ 19594 @LENGTH@ 2
---------------DEL MethodInvocation@@keyUserId.contains(userid) @AT@ 19598 @LENGTH@ 26
------------------DEL SimpleName@@Name:keyUserId @AT@ 19598 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:contains:[userid] @AT@ 19608 @LENGTH@ 16
---------------------DEL SimpleName@@userid @AT@ 19617 @LENGTH@ 6
------------DEL Block@@ThenBody:{  LOG.debug("Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. ",keyUserId,allowedUserIds);  return true;} @AT@ 19626 @LENGTH@ 300
---------------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. ",keyUserId,allowedUserIds) @AT@ 19648 @LENGTH@ 227
------------------DEL MethodInvocation@@LOG.debug("Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. ",keyUserId,allowedUserIds) @AT@ 19648 @LENGTH@ 226
---------------------DEL SimpleName@@Name:LOG @AT@ 19648 @LENGTH@ 3
---------------------DEL SimpleName@@MethodName:debug:["Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. ", keyUserId, allowedUserIds] @AT@ 19652 @LENGTH@ 222
------------------------DEL StringLiteral@@"Public key with  user ID {} fulfills the User ID restriction {}. Therefore this key will be used for the signature verification. " @AT@ 19687 @LENGTH@ 131
------------------------DEL SimpleName@@keyUserId @AT@ 19848 @LENGTH@ 9
------------------------DEL SimpleName@@allowedUserIds @AT@ 19859 @LENGTH@ 14
---------------DEL ReturnStatement@@BooleanLiteral:true @AT@ 19896 @LENGTH@ 12
------------------DEL BooleanLiteral@@true @AT@ 19903 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:LOG.warn("Public key with User ID {} does not fulfill the User ID restriction {}. Therefore this key will not be used for the signature verification.",keyUserId,allowedUserIds) @AT@ 19959 @LENGTH@ 212
------DEL MethodInvocation@@LOG.warn("Public key with User ID {} does not fulfill the User ID restriction {}. Therefore this key will not be used for the signature verification.",keyUserId,allowedUserIds) @AT@ 19959 @LENGTH@ 211
---------DEL SimpleName@@Name:LOG @AT@ 19959 @LENGTH@ 3
---------DEL SimpleName@@MethodName:warn:["Public key with User ID {} does not fulfill the User ID restriction {}. Therefore this key will not be used for the signature verification.", keyUserId, allowedUserIds] @AT@ 19963 @LENGTH@ 207
------------DEL StringLiteral@@"Public key with User ID {} does not fulfill the User ID restriction {}. Therefore this key will not be used for the signature verification." @AT@ 19985 @LENGTH@ 141
------------DEL SimpleName@@keyUserId @AT@ 20144 @LENGTH@ 9
------------DEL SimpleName@@allowedUserIds @AT@ 20155 @LENGTH@ 14
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 20180 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 20187 @LENGTH@ 5


UPD CatchClause@@catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);} @TO@ catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} @AT@ 8662 @LENGTH@ 165


UPD MethodDeclaration@@private, ConnectionFactory, MethodName:getOrCreateConnectionFactory,  @TO@ protected, ConnectionFactory, MethodName:getOrCreateConnectionFactory,  @AT@ 5117 @LENGTH@ 2120
---UPD Modifier@@private @TO@ protected @AT@ 5117 @LENGTH@ 7


INS MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @TO@ TypeDeclaration@@[public]HCatUtil,  @AT@ 24970 @LENGTH@ 130
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 24970 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 24977 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 24984 @LENGTH@ 6
---INS SimpleName@@MethodName:makePathASafeFileName @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 24991 @LENGTH@ 21
---INS SingleVariableDeclaration@@String filePath @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 25013 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String filePath @AT@ 25013 @LENGTH@ 6
------INS SimpleName@@filePath @TO@ SingleVariableDeclaration@@String filePath @AT@ 25020 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:new File(filePath).getPath().replaceAll("\\\\","/") @TO@ MethodDeclaration@@public, static, String, MethodName:makePathASafeFileName, String filePath,  @AT@ 25036 @LENGTH@ 60
------INS MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @TO@ ReturnStatement@@MethodInvocation:new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 25043 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 25043 @LENGTH@ 28
---------INS ClassInstanceCreation@@File[filePath] @TO@ MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 25043 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@File[filePath] @AT@ 25043 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[filePath] @AT@ 25047 @LENGTH@ 4
------------INS SimpleName@@filePath @TO@ ClassInstanceCreation@@File[filePath] @AT@ 25052 @LENGTH@ 8
---------INS SimpleName@@MethodName:replaceAll:["\\\\", "/"] @TO@ MethodInvocation@@new File(filePath).getPath().replaceAll("\\\\","/") @AT@ 25072 @LENGTH@ 23
------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 25083 @LENGTH@ 6
------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 25091 @LENGTH@ 3


UPD FieldDeclaration@@String, [WILDFLY_TARGET_VERSION="8.0.0.Beta1"] @TO@ String, [WILDFLY_TARGET_VERSION="8.0.0.Final"] @AT@ 1644 @LENGTH@ 46
---UPD VariableDeclarationFragment@@WILDFLY_TARGET_VERSION="8.0.0.Beta1" @TO@ WILDFLY_TARGET_VERSION="8.0.0.Final" @AT@ 1651 @LENGTH@ 38
------UPD StringLiteral@@"8.0.0.Beta1" @TO@ "8.0.0.Final" @AT@ 1676 @LENGTH@ 13


INS FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @TO@ TypeDeclaration@@[public]CurrentServiceContainer,  @AT@ 1806 @LENGTH@ 227
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1806 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1813 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1820 @LENGTH@ 5
---INS ParameterizedType@@PrivilegedAction<ServiceContainer> @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1826 @LENGTH@ 34
------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1826 @LENGTH@ 16
------INS SimpleType@@ServiceContainer @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1843 @LENGTH@ 16
---INS VariableDeclarationFragment@@GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
 @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1861 @LENGTH@ 171
------INS SimpleName@@GET_ACTION @TO@ VariableDeclarationFragment@@GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
 @AT@ 1861 @LENGTH@ 10
------INS ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @TO@ VariableDeclarationFragment@@GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
 @AT@ 1874 @LENGTH@ 158
---------INS New@@new @TO@ ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 1874 @LENGTH@ 3
---------INS ParameterizedType@@PrivilegedAction<ServiceContainer> @TO@ ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 1878 @LENGTH@ 34
------------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1878 @LENGTH@ 16
------------INS SimpleType@@ServiceContainer @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1895 @LENGTH@ 16
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 1915 @LENGTH@ 117
------------INS MethodDeclaration@@public, ServiceContainer, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1943 @LENGTH@ 83
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1943 @LENGTH@ 6
---------------INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1950 @LENGTH@ 16
---------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1967 @LENGTH@ 3
---------------INS ReturnStatement@@MethodInvocation:getServiceContainer() @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1987 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:getServiceContainer:[] @TO@ ReturnStatement@@MethodInvocation:getServiceContainer() @AT@ 1994 @LENGTH@ 21


INS VariableDeclarationStatement@@boolean tryBlock=exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class); @TO@ MethodDeclaration@@protected, Processor, MethodName:createErrorHandler, RouteContext routeContext, Exchange exchange, Processor processor,  @AT@ 42556 @LENGTH@ 88
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean tryBlock=exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class); @AT@ 42556 @LENGTH@ 7
---INS VariableDeclarationFragment@@tryBlock=exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class) @TO@ VariableDeclarationStatement@@boolean tryBlock=exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class); @AT@ 42564 @LENGTH@ 79
------INS SimpleName@@tryBlock @TO@ VariableDeclarationFragment@@tryBlock=exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class) @AT@ 42564 @LENGTH@ 8
------INS MethodInvocation@@exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class) @TO@ VariableDeclarationFragment@@tryBlock=exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class) @AT@ 42575 @LENGTH@ 68
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class) @AT@ 42575 @LENGTH@ 8
---------INS SimpleName@@MethodName:getProperty:[Exchange.TRY_ROUTE_BLOCK, false, boolean.class] @TO@ MethodInvocation@@exchange.getProperty(Exchange.TRY_ROUTE_BLOCK,false,boolean.class) @AT@ 42584 @LENGTH@ 59
------------INS QualifiedName@@Exchange.TRY_ROUTE_BLOCK @TO@ SimpleName@@MethodName:getProperty:[Exchange.TRY_ROUTE_BLOCK, false, boolean.class] @AT@ 42596 @LENGTH@ 24
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.TRY_ROUTE_BLOCK @AT@ 42596 @LENGTH@ 8
---------------INS SimpleName@@TRY_ROUTE_BLOCK @TO@ QualifiedName@@Exchange.TRY_ROUTE_BLOCK @AT@ 42605 @LENGTH@ 15
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getProperty:[Exchange.TRY_ROUTE_BLOCK, false, boolean.class] @AT@ 42622 @LENGTH@ 5
------------INS TypeLiteral@@boolean.class @TO@ SimpleName@@MethodName:getProperty:[Exchange.TRY_ROUTE_BLOCK, false, boolean.class] @AT@ 42629 @LENGTH@ 13


INS MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @TO@ TypeDeclaration@@[public]ProfileFacade, [Profile, HasId] @AT@ 4414 @LENGTH@ 146
---INS Modifier@@public @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 4414 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 4421 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4421 @LENGTH@ 4
---INS SimpleName@@MethodName:getFileConfiguration @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 4428 @LENGTH@ 20
---INS SingleVariableDeclaration@@String fileName @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 4449 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String fileName @AT@ 4449 @LENGTH@ 6
------INS SimpleName@@fileName @TO@ SingleVariableDeclaration@@String fileName @AT@ 4456 @LENGTH@ 8
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 4476 @LENGTH@ 78
------INS ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @AT@ 4482 @LENGTH@ 71
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 4482 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 4486 @LENGTH@ 29
---------INS StringLiteral@@"The method is not yet implemented." @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 4516 @LENGTH@ 36


UPD EnhancedForStatement@@for (ContainerProvider containerProvider : providerCollection) {  if (containerProvider instanceof ContainerAutoScalerFactory) {    ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;    ContainerAutoScaler answer=provider.createAutoScaler();    if (answer != null) {      return answer;    }  }} @TO@ for (ContainerProvider containerProvider : providerCollection) {  SortedMap<Integer,ContainerAutoScaler> sortedAutoScalers=new TreeMap<Integer,ContainerAutoScaler>();  if (containerProvider instanceof ContainerAutoScalerFactory) {    ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;    ContainerAutoScaler autoScaler=provider.createAutoScaler();    if (autoScaler != null) {      int weight=autoScaler.getWeight();      sortedAutoScalers.put(weight,autoScaler);    }  }  if (!sortedAutoScalers.isEmpty()) {    Integer key=sortedAutoScalers.lastKey();    if (key != null) {      return sortedAutoScalers.get(key);    }  }} @AT@ 36318 @LENGTH@ 430
---UPD IfStatement@@if (containerProvider instanceof ContainerAutoScalerFactory) {  ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;  ContainerAutoScaler answer=provider.createAutoScaler();  if (answer != null) {    return answer;  }} @TO@ if (containerProvider instanceof ContainerAutoScalerFactory) {  ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;  ContainerAutoScaler autoScaler=provider.createAutoScaler();  if (autoScaler != null) {    int weight=autoScaler.getWeight();    sortedAutoScalers.put(weight,autoScaler);  }} @AT@ 36395 @LENGTH@ 343
------UPD Block@@ThenBody:{  ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;  ContainerAutoScaler answer=provider.createAutoScaler();  if (answer != null) {    return answer;  }} @TO@ ThenBody:{  ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;  ContainerAutoScaler autoScaler=provider.createAutoScaler();  if (autoScaler != null) {    int weight=autoScaler.getWeight();    sortedAutoScalers.put(weight,autoScaler);  }} @AT@ 36456 @LENGTH@ 282
---------UPD VariableDeclarationStatement@@ContainerAutoScaler answer=provider.createAutoScaler(); @TO@ ContainerAutoScaler autoScaler=provider.createAutoScaler(); @AT@ 36576 @LENGTH@ 57
------------UPD VariableDeclarationFragment@@answer=provider.createAutoScaler() @TO@ autoScaler=provider.createAutoScaler() @AT@ 36596 @LENGTH@ 36
---------------UPD SimpleName@@answer @TO@ autoScaler @AT@ 36596 @LENGTH@ 6
---------UPD IfStatement@@if (answer != null) {  return answer;} @TO@ if (autoScaler != null) {  int weight=autoScaler.getWeight();  sortedAutoScalers.put(weight,autoScaler);} @AT@ 36650 @LENGTH@ 74
------------UPD InfixExpression@@answer != null @TO@ autoScaler != null @AT@ 36654 @LENGTH@ 14
---------------UPD SimpleName@@answer @TO@ autoScaler @AT@ 36654 @LENGTH@ 6
------------UPD Block@@ThenBody:{  return answer;} @TO@ ThenBody:{  int weight=autoScaler.getWeight();  sortedAutoScalers.put(weight,autoScaler);} @AT@ 36670 @LENGTH@ 54
---------------DEL ReturnStatement@@SimpleName:answer @AT@ 36692 @LENGTH@ 14
------------------DEL SimpleName@@answer @AT@ 36699 @LENGTH@ 6
---------------INS VariableDeclarationStatement@@int weight=autoScaler.getWeight(); @TO@ Block@@ThenBody:{  return answer;} @AT@ 36973 @LENGTH@ 36
------------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int weight=autoScaler.getWeight(); @AT@ 36973 @LENGTH@ 3
------------------INS VariableDeclarationFragment@@weight=autoScaler.getWeight() @TO@ VariableDeclarationStatement@@int weight=autoScaler.getWeight(); @AT@ 36977 @LENGTH@ 31
---------------------INS SimpleName@@weight @TO@ VariableDeclarationFragment@@weight=autoScaler.getWeight() @AT@ 36977 @LENGTH@ 6
---------------------INS MethodInvocation@@autoScaler.getWeight() @TO@ VariableDeclarationFragment@@weight=autoScaler.getWeight() @AT@ 36986 @LENGTH@ 22
------------------------INS SimpleName@@Name:autoScaler @TO@ MethodInvocation@@autoScaler.getWeight() @AT@ 36986 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:getWeight:[] @TO@ MethodInvocation@@autoScaler.getWeight() @AT@ 36997 @LENGTH@ 11
---------------INS ExpressionStatement@@MethodInvocation:sortedAutoScalers.put(weight,autoScaler) @TO@ Block@@ThenBody:{  return answer;} @AT@ 37030 @LENGTH@ 42
------------------INS MethodInvocation@@sortedAutoScalers.put(weight,autoScaler) @TO@ ExpressionStatement@@MethodInvocation:sortedAutoScalers.put(weight,autoScaler) @AT@ 37030 @LENGTH@ 41
---------------------INS SimpleName@@Name:sortedAutoScalers @TO@ MethodInvocation@@sortedAutoScalers.put(weight,autoScaler) @AT@ 37030 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:put:[weight, autoScaler] @TO@ MethodInvocation@@sortedAutoScalers.put(weight,autoScaler) @AT@ 37048 @LENGTH@ 23
------------------------INS SimpleName@@weight @TO@ SimpleName@@MethodName:put:[weight, autoScaler] @AT@ 37052 @LENGTH@ 6
------------------------INS SimpleName@@autoScaler @TO@ SimpleName@@MethodName:put:[weight, autoScaler] @AT@ 37060 @LENGTH@ 10
---INS VariableDeclarationStatement@@SortedMap<Integer,ContainerAutoScaler> sortedAutoScalers=new TreeMap<Integer,ContainerAutoScaler>(); @TO@ EnhancedForStatement@@for (ContainerProvider containerProvider : providerCollection) {  if (containerProvider instanceof ContainerAutoScalerFactory) {    ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;    ContainerAutoScaler answer=provider.createAutoScaler();    if (answer != null) {      return answer;    }  }} @AT@ 36551 @LENGTH@ 104
------INS ParameterizedType@@SortedMap<Integer,ContainerAutoScaler> @TO@ VariableDeclarationStatement@@SortedMap<Integer,ContainerAutoScaler> sortedAutoScalers=new TreeMap<Integer,ContainerAutoScaler>(); @AT@ 36551 @LENGTH@ 39
---------INS SimpleType@@SortedMap @TO@ ParameterizedType@@SortedMap<Integer,ContainerAutoScaler> @AT@ 36551 @LENGTH@ 9
---------INS SimpleType@@Integer @TO@ ParameterizedType@@SortedMap<Integer,ContainerAutoScaler> @AT@ 36561 @LENGTH@ 7
---------INS SimpleType@@ContainerAutoScaler @TO@ ParameterizedType@@SortedMap<Integer,ContainerAutoScaler> @AT@ 36570 @LENGTH@ 19
------INS VariableDeclarationFragment@@sortedAutoScalers=new TreeMap<Integer,ContainerAutoScaler>() @TO@ VariableDeclarationStatement@@SortedMap<Integer,ContainerAutoScaler> sortedAutoScalers=new TreeMap<Integer,ContainerAutoScaler>(); @AT@ 36591 @LENGTH@ 63
---------INS SimpleName@@sortedAutoScalers @TO@ VariableDeclarationFragment@@sortedAutoScalers=new TreeMap<Integer,ContainerAutoScaler>() @AT@ 36591 @LENGTH@ 17
---------INS ClassInstanceCreation@@TreeMap<Integer,ContainerAutoScaler>[] @TO@ VariableDeclarationFragment@@sortedAutoScalers=new TreeMap<Integer,ContainerAutoScaler>() @AT@ 36611 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@TreeMap<Integer,ContainerAutoScaler>[] @AT@ 36611 @LENGTH@ 3
------------INS ParameterizedType@@TreeMap<Integer,ContainerAutoScaler> @TO@ ClassInstanceCreation@@TreeMap<Integer,ContainerAutoScaler>[] @AT@ 36615 @LENGTH@ 37
---------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<Integer,ContainerAutoScaler> @AT@ 36615 @LENGTH@ 7
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@TreeMap<Integer,ContainerAutoScaler> @AT@ 36623 @LENGTH@ 7
---------------INS SimpleType@@ContainerAutoScaler @TO@ ParameterizedType@@TreeMap<Integer,ContainerAutoScaler> @AT@ 36632 @LENGTH@ 19
---INS IfStatement@@if (!sortedAutoScalers.isEmpty()) {  Integer key=sortedAutoScalers.lastKey();  if (key != null) {    return sortedAutoScalers.get(key);  }} @TO@ EnhancedForStatement@@for (ContainerProvider containerProvider : providerCollection) {  if (containerProvider instanceof ContainerAutoScalerFactory) {    ContainerAutoScalerFactory provider=(ContainerAutoScalerFactory)containerProvider;    ContainerAutoScaler answer=provider.createAutoScaler();    if (answer != null) {      return answer;    }  }} @AT@ 37117 @LENGTH@ 216
------INS PrefixExpression@@!sortedAutoScalers.isEmpty() @TO@ IfStatement@@if (!sortedAutoScalers.isEmpty()) {  Integer key=sortedAutoScalers.lastKey();  if (key != null) {    return sortedAutoScalers.get(key);  }} @AT@ 37121 @LENGTH@ 28
---------INS Operator@@! @TO@ PrefixExpression@@!sortedAutoScalers.isEmpty() @AT@ 37121 @LENGTH@ 1
---------INS MethodInvocation@@sortedAutoScalers.isEmpty() @TO@ PrefixExpression@@!sortedAutoScalers.isEmpty() @AT@ 37122 @LENGTH@ 27
------------INS SimpleName@@Name:sortedAutoScalers @TO@ MethodInvocation@@sortedAutoScalers.isEmpty() @AT@ 37122 @LENGTH@ 17
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@sortedAutoScalers.isEmpty() @AT@ 37140 @LENGTH@ 9
------INS Block@@ThenBody:{  Integer key=sortedAutoScalers.lastKey();  if (key != null) {    return sortedAutoScalers.get(key);  }} @TO@ IfStatement@@if (!sortedAutoScalers.isEmpty()) {  Integer key=sortedAutoScalers.lastKey();  if (key != null) {    return sortedAutoScalers.get(key);  }} @AT@ 37151 @LENGTH@ 182
---------INS VariableDeclarationStatement@@Integer key=sortedAutoScalers.lastKey(); @TO@ Block@@ThenBody:{  Integer key=sortedAutoScalers.lastKey();  if (key != null) {    return sortedAutoScalers.get(key);  }} @AT@ 37169 @LENGTH@ 42
------------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer key=sortedAutoScalers.lastKey(); @AT@ 37169 @LENGTH@ 7
------------INS VariableDeclarationFragment@@key=sortedAutoScalers.lastKey() @TO@ VariableDeclarationStatement@@Integer key=sortedAutoScalers.lastKey(); @AT@ 37177 @LENGTH@ 33
---------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=sortedAutoScalers.lastKey() @AT@ 37177 @LENGTH@ 3
---------------INS MethodInvocation@@sortedAutoScalers.lastKey() @TO@ VariableDeclarationFragment@@key=sortedAutoScalers.lastKey() @AT@ 37183 @LENGTH@ 27
------------------INS SimpleName@@Name:sortedAutoScalers @TO@ MethodInvocation@@sortedAutoScalers.lastKey() @AT@ 37183 @LENGTH@ 17
------------------INS SimpleName@@MethodName:lastKey:[] @TO@ MethodInvocation@@sortedAutoScalers.lastKey() @AT@ 37201 @LENGTH@ 9
---------INS IfStatement@@if (key != null) {  return sortedAutoScalers.get(key);} @TO@ Block@@ThenBody:{  Integer key=sortedAutoScalers.lastKey();  if (key != null) {    return sortedAutoScalers.get(key);  }} @AT@ 37228 @LENGTH@ 91
------------INS InfixExpression@@key != null @TO@ IfStatement@@if (key != null) {  return sortedAutoScalers.get(key);} @AT@ 37232 @LENGTH@ 11
---------------INS SimpleName@@key @TO@ InfixExpression@@key != null @AT@ 37232 @LENGTH@ 3
---------------INS Operator@@!= @TO@ InfixExpression@@key != null @AT@ 37235 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@key != null @AT@ 37239 @LENGTH@ 4
------------INS Block@@ThenBody:{  return sortedAutoScalers.get(key);} @TO@ IfStatement@@if (key != null) {  return sortedAutoScalers.get(key);} @AT@ 37245 @LENGTH@ 74
---------------INS ReturnStatement@@MethodInvocation:sortedAutoScalers.get(key) @TO@ Block@@ThenBody:{  return sortedAutoScalers.get(key);} @AT@ 37267 @LENGTH@ 34
------------------INS MethodInvocation@@sortedAutoScalers.get(key) @TO@ ReturnStatement@@MethodInvocation:sortedAutoScalers.get(key) @AT@ 37274 @LENGTH@ 26
---------------------INS SimpleName@@Name:sortedAutoScalers @TO@ MethodInvocation@@sortedAutoScalers.get(key) @AT@ 37274 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@sortedAutoScalers.get(key) @AT@ 37292 @LENGTH@ 8
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 37296 @LENGTH@ 3


UPD TryStatement@@try (BufferedReader reader=Files.newBufferedReader(logFile,Charset.forName("utf-8"))){  final Pattern pattern=Pattern.compile("^(<message>)+(Test message: \\d)+(</message>)$");  final List<String> messages=new ArrayList<>(5);  String line;  while ((line=reader.readLine()) != null) {    final String trimmedLine=line.trim();    final Matcher m=pattern.matcher(trimmedLine);    if (m.matches()) {      messages.add(m.group(2));    }  }  Assert.assertEquals(5,messages.size());  int count=0;  for (  String msg : messages) {    Assert.assertEquals("Test message: " + count++,msg);  }}  @TO@ try (BufferedReader reader=Files.newBufferedReader(logFile,StandardCharsets.UTF_8)){  final Pattern pattern=Pattern.compile("^(<message>)+(Test message: \\d)+(</message>)$");  final List<String> messages=new ArrayList<>(5);  String line;  while ((line=reader.readLine()) != null) {    final String trimmedLine=line.trim();    final Matcher m=pattern.matcher(trimmedLine);    if (m.matches()) {      messages.add(m.group(2));    }  }  Assert.assertEquals(5,messages.size());  int count=0;  for (  String msg : messages) {    Assert.assertEquals("Test message: " + count++,msg);  }}  @AT@ 8393 @LENGTH@ 976
---UPD VariableDeclarationExpression@@BufferedReader reader=Files.newBufferedReader(logFile,Charset.forName("utf-8")) @TO@ BufferedReader reader=Files.newBufferedReader(logFile,StandardCharsets.UTF_8) @AT@ 8398 @LENGTH@ 82
------UPD VariableDeclarationFragment@@reader=Files.newBufferedReader(logFile,Charset.forName("utf-8")) @TO@ reader=Files.newBufferedReader(logFile,StandardCharsets.UTF_8) @AT@ 8413 @LENGTH@ 67
---------UPD MethodInvocation@@Files.newBufferedReader(logFile,Charset.forName("utf-8")) @TO@ Files.newBufferedReader(logFile,StandardCharsets.UTF_8) @AT@ 8422 @LENGTH@ 58
------------UPD SimpleName@@MethodName:newBufferedReader:[logFile, Charset.forName("utf-8")] @TO@ MethodName:newBufferedReader:[logFile, StandardCharsets.UTF_8] @AT@ 8428 @LENGTH@ 52
---------------DEL MethodInvocation@@Charset.forName("utf-8") @AT@ 8455 @LENGTH@ 24
------------------DEL SimpleName@@Name:Charset @AT@ 8455 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:forName:["utf-8"] @AT@ 8463 @LENGTH@ 16
---------------------DEL StringLiteral@@"utf-8" @AT@ 8471 @LENGTH@ 7
---------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:newBufferedReader:[logFile, Charset.forName("utf-8")] @AT@ 8464 @LENGTH@ 22
------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8464 @LENGTH@ 16
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8481 @LENGTH@ 5


DEL VariableDeclarationStatement@@Set<ContainerProxy> containers=null; @AT@ 1615 @LENGTH@ 38
---DEL ParameterizedType@@Set<ContainerProxy> @AT@ 1615 @LENGTH@ 19
------DEL SimpleType@@Set @AT@ 1615 @LENGTH@ 3
------DEL SimpleType@@ContainerProxy @AT@ 1619 @LENGTH@ 14
---DEL VariableDeclarationFragment@@containers=null @AT@ 1635 @LENGTH@ 17
------DEL SimpleName@@containers @AT@ 1635 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 1648 @LENGTH@ 4


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-683] Fix MQFabricTest"), public]MQFabricTest, MQTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQFabricTest, MQTestSupport @AT@ 1783 @LENGTH@ 1889
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-683] Fix MQFabricTest") @AT@ 1876 @LENGTH@ 40


UPD VariableDeclarationStatement@@final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()); @TO@ final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)); @AT@ 5405 @LENGTH@ 149
---UPD VariableDeclarationFragment@@transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 5443 @LENGTH@ 110
------UPD MethodInvocation@@SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 5455 @LENGTH@ 98
---------UPD SimpleName@@MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase()] @TO@ MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)] @AT@ 5487 @LENGTH@ 66
------------UPD MethodInvocation@@protocolAddress.getLastElement().getValue().toUpperCase() @TO@ protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH) @AT@ 5495 @LENGTH@ 57
---------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 5539 @LENGTH@ 13
------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 5576 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 5576 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 5583 @LENGTH@ 7


UPD FieldDeclaration@@private, OutputStream, [out, err] @TO@ private, final, OutputStream, [out, err] @AT@ 1106 @LENGTH@ 30
---INS Modifier@@final @TO@ FieldDeclaration@@private, OutputStream, [out, err] @AT@ 1114 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),"utf-8")) @TO@ Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8)) @AT@ 9931 @LENGTH@ 87
---UPD Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),"utf-8")) @TO@ reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8)) @AT@ 9931 @LENGTH@ 86
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(file),"utf-8")] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8)] @AT@ 9940 @LENGTH@ 77
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(file), "utf-8"] @TO@ InputStreamReader[new FileInputStream(file), StandardCharsets.UTF_8] @AT@ 9959 @LENGTH@ 57
------------DEL StringLiteral@@"utf-8" @AT@ 10008 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(file), "utf-8"] @AT@ 10050 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 10050 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 10067 @LENGTH@ 5


UPD VariableDeclarationStatement@@Set<String> serviceUrls=services.getServiceUrls(); @TO@ Collection<String> serviceUrls=services.getServiceUrls(); @AT@ 4311 @LENGTH@ 52
---UPD ParameterizedType@@Set<String> @TO@ Collection<String> @AT@ 4311 @LENGTH@ 11
------UPD SimpleType@@Set @TO@ Collection @AT@ 4311 @LENGTH@ 3


UPD Block@@ThenBody:{  Boolean reRun=(Boolean)stepExecution.getExecutionContext().get("batch.restart");  if (reRun != null && reRun && status == FlowExecutionStatus.STOPPED && stateNameEndsWithStepName(state,stepExecution)) {    continued=true;  }} @TO@ ThenBody:{  Boolean reRun=(Boolean)stepExecution.getExecutionContext().get("batch.restart");  Boolean executed=(Boolean)stepExecution.getExecutionContext().get("batch.executed");  if ((executed == null || !executed) && reRun != null && reRun && status == FlowExecutionStatus.STOPPED && !state.getName().endsWith(stepExecution.getStepName())) {    continued=true;  }} @AT@ 7154 @LENGTH@ 250
---INS VariableDeclarationStatement@@Boolean executed=(Boolean)stepExecution.getExecutionContext().get("batch.executed"); @TO@ Block@@ThenBody:{  Boolean reRun=(Boolean)stepExecution.getExecutionContext().get("batch.restart");  if (reRun != null && reRun && status == FlowExecutionStatus.STOPPED && stateNameEndsWithStepName(state,stepExecution)) {    continued=true;  }} @AT@ 7248 @LENGTH@ 87
------INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Boolean executed=(Boolean)stepExecution.getExecutionContext().get("batch.executed"); @AT@ 7248 @LENGTH@ 7
------INS VariableDeclarationFragment@@executed=(Boolean)stepExecution.getExecutionContext().get("batch.executed") @TO@ VariableDeclarationStatement@@Boolean executed=(Boolean)stepExecution.getExecutionContext().get("batch.executed"); @AT@ 7256 @LENGTH@ 78
---------INS SimpleName@@executed @TO@ VariableDeclarationFragment@@executed=(Boolean)stepExecution.getExecutionContext().get("batch.executed") @AT@ 7256 @LENGTH@ 8
---------INS CastExpression@@(Boolean)stepExecution.getExecutionContext().get("batch.executed") @TO@ VariableDeclarationFragment@@executed=(Boolean)stepExecution.getExecutionContext().get("batch.executed") @AT@ 7267 @LENGTH@ 67
------------INS SimpleType@@Boolean @TO@ CastExpression@@(Boolean)stepExecution.getExecutionContext().get("batch.executed") @AT@ 7268 @LENGTH@ 7
------------INS MethodInvocation@@stepExecution.getExecutionContext().get("batch.executed") @TO@ CastExpression@@(Boolean)stepExecution.getExecutionContext().get("batch.executed") @AT@ 7277 @LENGTH@ 57
---------------INS MethodInvocation@@MethodName:getExecutionContext:[] @TO@ MethodInvocation@@stepExecution.getExecutionContext().get("batch.executed") @AT@ 7277 @LENGTH@ 35
---------------INS SimpleName@@Name:stepExecution @TO@ MethodInvocation@@stepExecution.getExecutionContext().get("batch.executed") @AT@ 7277 @LENGTH@ 13
---------------INS SimpleName@@MethodName:get:["batch.executed"] @TO@ MethodInvocation@@stepExecution.getExecutionContext().get("batch.executed") @AT@ 7313 @LENGTH@ 21
------------------INS StringLiteral@@"batch.executed" @TO@ SimpleName@@MethodName:get:["batch.executed"] @AT@ 7317 @LENGTH@ 16
---UPD IfStatement@@if (reRun != null && reRun && status == FlowExecutionStatus.STOPPED && stateNameEndsWithStepName(state,stepExecution)) {  continued=true;} @TO@ if ((executed == null || !executed) && reRun != null && reRun && status == FlowExecutionStatus.STOPPED && !state.getName().endsWith(stepExecution.getStepName())) {  continued=true;} @AT@ 7250 @LENGTH@ 149
------UPD InfixExpression@@reRun != null && reRun && status == FlowExecutionStatus.STOPPED && stateNameEndsWithStepName(state,stepExecution) @TO@ (executed == null || !executed) && reRun != null && reRun && status == FlowExecutionStatus.STOPPED && !state.getName().endsWith(stepExecution.getStepName()) @AT@ 7253 @LENGTH@ 114
---------UPD InfixExpression@@reRun != null && reRun && status == FlowExecutionStatus.STOPPED @TO@ (executed == null || !executed) && reRun != null && reRun && status == FlowExecutionStatus.STOPPED @AT@ 7253 @LENGTH@ 63
------------UPD InfixExpression@@reRun != null && reRun @TO@ (executed == null || !executed) && reRun != null && reRun @AT@ 7253 @LENGTH@ 22
---------------INS InfixExpression@@(executed == null || !executed) && reRun != null @TO@ InfixExpression@@reRun != null && reRun @AT@ 7345 @LENGTH@ 48
------------------MOV InfixExpression@@reRun != null @TO@ InfixExpression@@(executed == null || !executed) && reRun != null @AT@ 7253 @LENGTH@ 13
------------------INS ParenthesizedExpression@@(executed == null || !executed) @TO@ InfixExpression@@(executed == null || !executed) && reRun != null @AT@ 7345 @LENGTH@ 31
---------------------INS InfixExpression@@executed == null || !executed @TO@ ParenthesizedExpression@@(executed == null || !executed) @AT@ 7346 @LENGTH@ 29
------------------------INS InfixExpression@@executed == null @TO@ InfixExpression@@executed == null || !executed @AT@ 7346 @LENGTH@ 16
---------------------------INS SimpleName@@executed @TO@ InfixExpression@@executed == null @AT@ 7346 @LENGTH@ 8
---------------------------INS Operator@@== @TO@ InfixExpression@@executed == null @AT@ 7354 @LENGTH@ 2
---------------------------INS NullLiteral@@null @TO@ InfixExpression@@executed == null @AT@ 7358 @LENGTH@ 4
------------------------INS Operator@@|| @TO@ InfixExpression@@executed == null || !executed @AT@ 7362 @LENGTH@ 2
------------------------INS PrefixExpression@@!executed @TO@ InfixExpression@@executed == null || !executed @AT@ 7366 @LENGTH@ 9
---------------------------INS Operator@@! @TO@ PrefixExpression@@!executed @AT@ 7366 @LENGTH@ 1
---------------------------INS SimpleName@@executed @TO@ PrefixExpression@@!executed @AT@ 7367 @LENGTH@ 8
------------------INS Operator@@&& @TO@ InfixExpression@@(executed == null || !executed) && reRun != null @AT@ 7376 @LENGTH@ 2
---------DEL MethodInvocation@@stateNameEndsWithStepName(state,stepExecution) @AT@ 7320 @LENGTH@ 47
---------INS PrefixExpression@@!state.getName().endsWith(stepExecution.getStepName()) @TO@ InfixExpression@@reRun != null && reRun && status == FlowExecutionStatus.STOPPED && stateNameEndsWithStepName(state,stepExecution) @AT@ 7447 @LENGTH@ 54
------------INS Operator@@! @TO@ PrefixExpression@@!state.getName().endsWith(stepExecution.getStepName()) @AT@ 7447 @LENGTH@ 1
------------INS MethodInvocation@@state.getName().endsWith(stepExecution.getStepName()) @TO@ PrefixExpression@@!state.getName().endsWith(stepExecution.getStepName()) @AT@ 7448 @LENGTH@ 53
---------------MOV SimpleName@@MethodName:stateNameEndsWithStepName:[state, stepExecution] @TO@ MethodInvocation@@state.getName().endsWith(stepExecution.getStepName()) @AT@ 7320 @LENGTH@ 47
------------------DEL SimpleName@@state @AT@ 7346 @LENGTH@ 5
------------------DEL SimpleName@@stepExecution @AT@ 7353 @LENGTH@ 13
------------------INS MethodInvocation@@stepExecution.getStepName() @TO@ SimpleName@@MethodName:stateNameEndsWithStepName:[state, stepExecution] @AT@ 7473 @LENGTH@ 27
---------------------INS SimpleName@@Name:stepExecution @TO@ MethodInvocation@@stepExecution.getStepName() @AT@ 7473 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getStepName:[] @TO@ MethodInvocation@@stepExecution.getStepName() @AT@ 7487 @LENGTH@ 13
---------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@state.getName().endsWith(stepExecution.getStepName()) @AT@ 7448 @LENGTH@ 15
---------------INS SimpleName@@Name:state @TO@ MethodInvocation@@state.getName().endsWith(stepExecution.getStepName()) @AT@ 7448 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertNotNull(ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler")) @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 5445 @LENGTH@ 113
---INS MethodInvocation@@assertNotNull(ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler")) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler")) @AT@ 5445 @LENGTH@ 112
------INS SimpleName@@MethodName:assertNotNull:[ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler")] @TO@ MethodInvocation@@assertNotNull(ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler")) @AT@ 5445 @LENGTH@ 112
---------INS MethodInvocation@@ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler") @TO@ SimpleName@@MethodName:assertNotNull:[ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler")] @AT@ 5459 @LENGTH@ 97
------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler") @AT@ 5459 @LENGTH@ 19
------------INS SimpleName@@MethodName:getField:[context.getBean(AuthorizationEndpoint.class), "userApprovalHandler"] @TO@ MethodInvocation@@ReflectionTestUtils.getField(context.getBean(AuthorizationEndpoint.class),"userApprovalHandler") @AT@ 5479 @LENGTH@ 77
---------------INS MethodInvocation@@context.getBean(AuthorizationEndpoint.class) @TO@ SimpleName@@MethodName:getField:[context.getBean(AuthorizationEndpoint.class), "userApprovalHandler"] @AT@ 5488 @LENGTH@ 44
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getBean(AuthorizationEndpoint.class) @AT@ 5488 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getBean:[AuthorizationEndpoint.class] @TO@ MethodInvocation@@context.getBean(AuthorizationEndpoint.class) @AT@ 5496 @LENGTH@ 36
---------------------INS TypeLiteral@@AuthorizationEndpoint.class @TO@ SimpleName@@MethodName:getBean:[AuthorizationEndpoint.class] @AT@ 5504 @LENGTH@ 27
---------------INS StringLiteral@@"userApprovalHandler" @TO@ SimpleName@@MethodName:getField:[context.getBean(AuthorizationEndpoint.class), "userApprovalHandler"] @AT@ 5534 @LENGTH@ 21


UPD IfStatement@@if (isJavaVersion("1.7") || isPlatform("aix") || isJavaVendor("ibm")) {  return;} @TO@ if (isPlatform("aix") || isJavaVendor("ibm")) {  return;} @AT@ 1086 @LENGTH@ 101
---UPD InfixExpression@@isJavaVersion("1.7") || isPlatform("aix") || isJavaVendor("ibm") @TO@ isPlatform("aix") || isJavaVendor("ibm") @AT@ 1090 @LENGTH@ 64
------DEL MethodInvocation@@isJavaVersion("1.7") @AT@ 1090 @LENGTH@ 20
---------DEL SimpleName@@MethodName:isJavaVersion:["1.7"] @AT@ 1090 @LENGTH@ 20
------------DEL StringLiteral@@"1.7" @AT@ 1104 @LENGTH@ 5
------MOV Operator@@|| @TO@ InfixExpression@@isJavaVersion("1.7") || isPlatform("aix") || isJavaVendor("ibm") @AT@ 1110 @LENGTH@ 2


UPD IfStatement@@if ("DB2".equals(databaseProductName)) {  String databaseProductVersion=JdbcUtils.extractDatabaseMetaData(dataSource,"getDatabaseProductVersion").toString();  if (!databaseProductVersion.startsWith("SQL")) {    databaseProductName="DB2ZOS";  } else {    databaseProductName=JdbcUtils.commonDatabaseName(databaseProductName);  }} else {  databaseProductName=JdbcUtils.commonDatabaseName(databaseProductName);} @TO@ if (StringUtils.hasText(databaseProductName) && !databaseProductName.equals("DB2/Linux") && databaseProductName.startsWith("DB2")) {  String databaseProductVersion=JdbcUtils.extractDatabaseMetaData(dataSource,"getDatabaseProductVersion").toString();  if (!databaseProductVersion.startsWith("SQL")) {    databaseProductName="DB2ZOS";  } else {    databaseProductName=JdbcUtils.commonDatabaseName(databaseProductName);  }} else {  databaseProductName=JdbcUtils.commonDatabaseName(databaseProductName);} @AT@ 2740 @LENGTH@ 445
---DEL MethodInvocation@@"DB2".equals(databaseProductName) @AT@ 2744 @LENGTH@ 33
------DEL StringLiteral@@"DB2" @AT@ 2744 @LENGTH@ 5
---INS InfixExpression@@StringUtils.hasText(databaseProductName) && !databaseProductName.equals("DB2/Linux") && databaseProductName.startsWith("DB2") @TO@ IfStatement@@if ("DB2".equals(databaseProductName)) {  String databaseProductVersion=JdbcUtils.extractDatabaseMetaData(dataSource,"getDatabaseProductVersion").toString();  if (!databaseProductVersion.startsWith("SQL")) {    databaseProductName="DB2ZOS";  } else {    databaseProductName=JdbcUtils.commonDatabaseName(databaseProductName);  }} else {  databaseProductName=JdbcUtils.commonDatabaseName(databaseProductName);} @AT@ 2788 @LENGTH@ 125
------INS MethodInvocation@@StringUtils.hasText(databaseProductName) @TO@ InfixExpression@@StringUtils.hasText(databaseProductName) && !databaseProductName.equals("DB2/Linux") && databaseProductName.startsWith("DB2") @AT@ 2788 @LENGTH@ 40
---------MOV SimpleName@@MethodName:equals:[databaseProductName] @TO@ MethodInvocation@@StringUtils.hasText(databaseProductName) @AT@ 2750 @LENGTH@ 27
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(databaseProductName) @AT@ 2788 @LENGTH@ 11
------INS Operator@@&& @TO@ InfixExpression@@StringUtils.hasText(databaseProductName) && !databaseProductName.equals("DB2/Linux") && databaseProductName.startsWith("DB2") @AT@ 2828 @LENGTH@ 2
------INS PrefixExpression@@!databaseProductName.equals("DB2/Linux") @TO@ InfixExpression@@StringUtils.hasText(databaseProductName) && !databaseProductName.equals("DB2/Linux") && databaseProductName.startsWith("DB2") @AT@ 2832 @LENGTH@ 40
---------INS Operator@@! @TO@ PrefixExpression@@!databaseProductName.equals("DB2/Linux") @AT@ 2832 @LENGTH@ 1
---------INS MethodInvocation@@databaseProductName.equals("DB2/Linux") @TO@ PrefixExpression@@!databaseProductName.equals("DB2/Linux") @AT@ 2833 @LENGTH@ 39
------------INS SimpleName@@Name:databaseProductName @TO@ MethodInvocation@@databaseProductName.equals("DB2/Linux") @AT@ 2833 @LENGTH@ 19
------------INS SimpleName@@MethodName:equals:["DB2/Linux"] @TO@ MethodInvocation@@databaseProductName.equals("DB2/Linux") @AT@ 2853 @LENGTH@ 19
---------------INS StringLiteral@@"DB2/Linux" @TO@ SimpleName@@MethodName:equals:["DB2/Linux"] @AT@ 2860 @LENGTH@ 11
------INS MethodInvocation@@databaseProductName.startsWith("DB2") @TO@ InfixExpression@@StringUtils.hasText(databaseProductName) && !databaseProductName.equals("DB2/Linux") && databaseProductName.startsWith("DB2") @AT@ 2876 @LENGTH@ 37
---------INS SimpleName@@Name:databaseProductName @TO@ MethodInvocation@@databaseProductName.startsWith("DB2") @AT@ 2876 @LENGTH@ 19
---------INS SimpleName@@MethodName:startsWith:["DB2"] @TO@ MethodInvocation@@databaseProductName.startsWith("DB2") @AT@ 2896 @LENGTH@ 17
------------INS StringLiteral@@"DB2" @TO@ SimpleName@@MethodName:startsWith:["DB2"] @AT@ 2907 @LENGTH@ 5


MOV MethodDeclaration@@public, boolean, MethodName:isSynthetic,  @TO@ TypeDeclaration@@[static]FieldReference,  @AT@ 8329 @LENGTH@ 61


INS ExpressionStatement@@MethodInvocation:assertEquals("Should get the right class name","",ObjectHelper.normalizeClassName("////")) @TO@ MethodDeclaration@@public, void, MethodName:testNormalizeClassName,  @AT@ 34297 @LENGTH@ 93
---INS MethodInvocation@@assertEquals("Should get the right class name","",ObjectHelper.normalizeClassName("////")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Should get the right class name","",ObjectHelper.normalizeClassName("////")) @AT@ 34297 @LENGTH@ 92
------INS SimpleName@@MethodName:assertEquals:["Should get the right class name", "", ObjectHelper.normalizeClassName("////")] @TO@ MethodInvocation@@assertEquals("Should get the right class name","",ObjectHelper.normalizeClassName("////")) @AT@ 34297 @LENGTH@ 92
---------INS StringLiteral@@"Should get the right class name" @TO@ SimpleName@@MethodName:assertEquals:["Should get the right class name", "", ObjectHelper.normalizeClassName("////")] @AT@ 34310 @LENGTH@ 33
---------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:assertEquals:["Should get the right class name", "", ObjectHelper.normalizeClassName("////")] @AT@ 34345 @LENGTH@ 2
---------INS MethodInvocation@@ObjectHelper.normalizeClassName("////") @TO@ SimpleName@@MethodName:assertEquals:["Should get the right class name", "", ObjectHelper.normalizeClassName("////")] @AT@ 34349 @LENGTH@ 39
------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.normalizeClassName("////") @AT@ 34349 @LENGTH@ 12
------------INS SimpleName@@MethodName:normalizeClassName:["////"] @TO@ MethodInvocation@@ObjectHelper.normalizeClassName("////") @AT@ 34362 @LENGTH@ 26
---------------INS StringLiteral@@"////" @TO@ SimpleName@@MethodName:normalizeClassName:["////"] @AT@ 34381 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:getEndpointUrl(UnsafeUriCharactersEncoder.encode(uri),query) @TO@ MethodInvocation:getEndpointUrl(UnsafeUriCharactersEncoder.encodeHttpURI(uri),query) @AT@ 7387 @LENGTH@ 69
---UPD MethodInvocation@@getEndpointUrl(UnsafeUriCharactersEncoder.encode(uri),query) @TO@ getEndpointUrl(UnsafeUriCharactersEncoder.encodeHttpURI(uri),query) @AT@ 7394 @LENGTH@ 61
------UPD SimpleName@@MethodName:getEndpointUrl:[UnsafeUriCharactersEncoder.encode(uri), query] @TO@ MethodName:getEndpointUrl:[UnsafeUriCharactersEncoder.encodeHttpURI(uri), query] @AT@ 7394 @LENGTH@ 61
---------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 7409 @LENGTH@ 38
------------UPD SimpleName@@MethodName:encode:[uri] @TO@ MethodName:encodeHttpURI:[uri] @AT@ 7436 @LENGTH@ 11


UPD MethodDeclaration@@SSO<I,D,L>, MethodName:createSSO, String ssoId,  @TO@ SSO<A,D,L>, MethodName:createSSO, String ssoId, A authentication,  @AT@ 1573 @LENGTH@ 24
---UPD ParameterizedType@@SSO<I,D,L> @TO@ SSO<A,D,L> @AT@ 1560 @LENGTH@ 12
------UPD SimpleType@@I @TO@ A @AT@ 1564 @LENGTH@ 1
---INS SingleVariableDeclaration@@A authentication @TO@ MethodDeclaration@@SSO<I,D,L>, MethodName:createSSO, String ssoId,  @AT@ 1597 @LENGTH@ 16
------INS SimpleType@@A @TO@ SingleVariableDeclaration@@A authentication @AT@ 1597 @LENGTH@ 1
------INS SimpleName@@authentication @TO@ SingleVariableDeclaration@@A authentication @AT@ 1599 @LENGTH@ 14


UPD TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Set<Container> containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build();  try {    LinkedList<Container> containerList=new LinkedList<Container>(containers);    Container broker=containerList.removeLast();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));    }    Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);    Assert.assertTrue(Provision.waitForCondition(containerList,new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));        System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));        String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");        System.err.println(completed);        if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {          return true;        } else {          return false;        }      }    },10000L));  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  curatorProxy.close();  fabricProxy.close();} @TO@ try {  FabricService fabricService=fabricProxy.getService();  CuratorFramework curator=fabricService.adapt(CuratorFramework.class);  Set<Container> containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build();  try {    LinkedList<Container> containerList=new LinkedList<Container>(containers);    Container broker=containerList.removeLast();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));    }    Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);    Assert.assertTrue(Provision.waitForCondition(containerList,new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));        System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));        String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");        System.err.println(completed);        if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {          return true;        } else {          return false;        }      }    },10000L));  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 2205 @LENGTH@ 2420
---INS VariableDeclarationStatement@@FabricService fabricService=fabricProxy.getService(); @TO@ TryStatement@@try {  CuratorFramework curator=curatorProxy.getService();  Set<Container> containers=ContainerBuilder.create(fabricProxy,2).withName("cnt").withProfiles("default").assertProvisioningResult().build();  try {    LinkedList<Container> containerList=new LinkedList<Container>(containers);    Container broker=containerList.removeLast();    setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(broker.getId()),"changing");    System.err.println(executeCommand("fabric:container-change-profile " + broker.getId() + " mq-default"));    Provision.provisioningSuccess(Arrays.asList(new Container[]{broker}),PROVISION_TIMEOUT);    System.err.println(executeCommand("fabric:cluster-list"));    for (    Container c : containerList) {      setData(curator,ZkPath.CONTAINER_PROVISION_RESULT.getPath(c.getId()),"changing");      System.err.println(executeCommand("fabric:container-change-profile " + c.getId() + " example-camel-mq"));    }    Provision.provisioningSuccess(containerList,PROVISION_TIMEOUT);    Assert.assertTrue(Provision.waitForCondition(containerList,new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " osgi:list"));        System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list"));        String completed=executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-info route2 | grep \"Exchanges Completed\"");        System.err.println(completed);        if (completed.contains("Exchanges Completed") && !completed.contains("Exchanges Completed: 0")) {          return true;        } else {          return false;        }      }    },10000L));  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  curatorProxy.close();  fabricProxy.close();} @AT@ 2097 @LENGTH@ 55
------INS SimpleType@@FabricService @TO@ VariableDeclarationStatement@@FabricService fabricService=fabricProxy.getService(); @AT@ 2097 @LENGTH@ 13
------INS VariableDeclarationFragment@@fabricService=fabricProxy.getService() @TO@ VariableDeclarationStatement@@FabricService fabricService=fabricProxy.getService(); @AT@ 2111 @LENGTH@ 40
---------INS SimpleName@@fabricService @TO@ VariableDeclarationFragment@@fabricService=fabricProxy.getService() @AT@ 2111 @LENGTH@ 13
---------INS MethodInvocation@@fabricProxy.getService() @TO@ VariableDeclarationFragment@@fabricService=fabricProxy.getService() @AT@ 2127 @LENGTH@ 24
------------INS SimpleName@@Name:fabricProxy @TO@ MethodInvocation@@fabricProxy.getService() @AT@ 2127 @LENGTH@ 11
------------INS SimpleName@@MethodName:getService:[] @TO@ MethodInvocation@@fabricProxy.getService() @AT@ 2139 @LENGTH@ 12
---UPD VariableDeclarationStatement@@CuratorFramework curator=curatorProxy.getService(); @TO@ CuratorFramework curator=fabricService.adapt(CuratorFramework.class); @AT@ 2223 @LENGTH@ 53
------UPD VariableDeclarationFragment@@curator=curatorProxy.getService() @TO@ curator=fabricService.adapt(CuratorFramework.class) @AT@ 2240 @LENGTH@ 35
---------UPD MethodInvocation@@curatorProxy.getService() @TO@ fabricService.adapt(CuratorFramework.class) @AT@ 2250 @LENGTH@ 25
------------UPD SimpleName@@Name:curatorProxy @TO@ Name:fabricService @AT@ 2250 @LENGTH@ 12
------------UPD SimpleName@@MethodName:getService:[] @TO@ MethodName:adapt:[CuratorFramework.class] @AT@ 2263 @LENGTH@ 12
---------------INS TypeLiteral@@CuratorFramework.class @TO@ SimpleName@@MethodName:getService:[] @AT@ 2212 @LENGTH@ 22
---UPD Block@@FinallyBody:{  curatorProxy.close();  fabricProxy.close();} @TO@ FinallyBody:{  fabricProxy.close();} @AT@ 4547 @LENGTH@ 78
------DEL ExpressionStatement@@MethodInvocation:curatorProxy.close() @AT@ 4561 @LENGTH@ 21
---------DEL MethodInvocation@@curatorProxy.close() @AT@ 4561 @LENGTH@ 20
------------DEL SimpleName@@Name:curatorProxy @AT@ 4561 @LENGTH@ 12
------------DEL SimpleName@@MethodName:close:[] @AT@ 4574 @LENGTH@ 7


UPD MethodDeclaration@@void, MethodName:visit, ConfigurationNodeVisitor visitor,  @TO@ void, MethodName:visit, ConfigurationNodeVisitor<ConfigurationNode> visitor,  @AT@ 7278 @LENGTH@ 40
---UPD SingleVariableDeclaration@@ConfigurationNodeVisitor visitor @TO@ ConfigurationNodeVisitor<ConfigurationNode> visitor @AT@ 7284 @LENGTH@ 32
------DEL SimpleType@@ConfigurationNodeVisitor @AT@ 7284 @LENGTH@ 24
------INS ParameterizedType@@ConfigurationNodeVisitor<ConfigurationNode> @TO@ SingleVariableDeclaration@@ConfigurationNodeVisitor visitor @AT@ 7284 @LENGTH@ 43
---------INS SimpleType@@ConfigurationNodeVisitor @TO@ ParameterizedType@@ConfigurationNodeVisitor<ConfigurationNode> @AT@ 7284 @LENGTH@ 24
---------INS SimpleType@@ConfigurationNode @TO@ ParameterizedType@@ConfigurationNodeVisitor<ConfigurationNode> @AT@ 7309 @LENGTH@ 17


INS MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @TO@ TypeDeclaration@@[public]ProfileImpl, [Profile] @AT@ 8469 @LENGTH@ 147
---INS Modifier@@public @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 8469 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 8476 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 8476 @LENGTH@ 4
---INS SimpleName@@MethodName:getFileConfiguration @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 8483 @LENGTH@ 20
---INS SingleVariableDeclaration@@String fileName @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 8504 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String fileName @AT@ 8504 @LENGTH@ 6
------INS SimpleName@@fileName @TO@ SingleVariableDeclaration@@String fileName @AT@ 8511 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:getService().getDataStore().getFileConfiguration(version,id,fileName) @TO@ MethodDeclaration@@public, byte[], MethodName:getFileConfiguration, String fileName,  @AT@ 8531 @LENGTH@ 79
------INS MethodInvocation@@getService().getDataStore().getFileConfiguration(version,id,fileName) @TO@ ReturnStatement@@MethodInvocation:getService().getDataStore().getFileConfiguration(version,id,fileName) @AT@ 8538 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:getDataStore:[] @TO@ MethodInvocation@@getService().getDataStore().getFileConfiguration(version,id,fileName) @AT@ 8538 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:getService:[] @TO@ MethodInvocation@@getService().getDataStore().getFileConfiguration(version,id,fileName) @AT@ 8538 @LENGTH@ 12
---------INS SimpleName@@MethodName:getFileConfiguration:[version, id, fileName] @TO@ MethodInvocation@@getService().getDataStore().getFileConfiguration(version,id,fileName) @AT@ 8566 @LENGTH@ 43
------------INS SimpleName@@version @TO@ SimpleName@@MethodName:getFileConfiguration:[version, id, fileName] @AT@ 8587 @LENGTH@ 7
------------INS SimpleName@@id @TO@ SimpleName@@MethodName:getFileConfiguration:[version, id, fileName] @AT@ 8596 @LENGTH@ 2
------------INS SimpleName@@fileName @TO@ SimpleName@@MethodName:getFileConfiguration:[version, id, fileName] @AT@ 8600 @LENGTH@ 8


UPD VariableDeclarationStatement@@String[] tokens=values.split("[\\s+,]"); @TO@ String[] tokens=values.split("[\\s+]"); @AT@ 2603 @LENGTH@ 42
---UPD VariableDeclarationFragment@@tokens=values.split("[\\s+,]") @TO@ tokens=values.split("[\\s+]") @AT@ 2612 @LENGTH@ 32
------UPD MethodInvocation@@values.split("[\\s+,]") @TO@ values.split("[\\s+]") @AT@ 2621 @LENGTH@ 23
---------UPD SimpleName@@MethodName:split:["[\\s+,]"] @TO@ MethodName:split:["[\\s+]"] @AT@ 2628 @LENGTH@ 16
------------UPD StringLiteral@@"[\\s+,]" @TO@ "[\\s+]" @AT@ 2634 @LENGTH@ 9


UPD VariableDeclarationStatement@@BasicConfigurationBuilder<? extends HierarchicalConfiguration> defBuilder=createDefinitionBuilder(defConfig); @TO@ BasicConfigurationBuilder<? extends HierarchicalConfiguration<ImmutableNode>> defBuilder=createDefinitionBuilder(defConfig); @AT@ 2680 @LENGTH@ 127
---UPD ParameterizedType@@BasicConfigurationBuilder<? extends HierarchicalConfiguration> @TO@ BasicConfigurationBuilder<? extends HierarchicalConfiguration<ImmutableNode>> @AT@ 2680 @LENGTH@ 62


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("mycomponent:foo?password=RAW(++%%w?rd)&username=scott").to("mock:result") @TO@ MethodInvocation:from("direct:start").to("mycomponent:foo?username=scott&password=RAW(++%%w?rd))").to("mock:result") @AT@ 3665 @LENGTH@ 141
---UPD MethodInvocation@@from("direct:start").to("mycomponent:foo?password=RAW(++%%w?rd)&username=scott").to("mock:result") @TO@ from("direct:start").to("mycomponent:foo?username=scott&password=RAW(++%%w?rd))").to("mock:result") @AT@ 3665 @LENGTH@ 140
------UPD MethodInvocation@@MethodName:to:["mycomponent:foo?password=RAW(++%%w?rd)&username=scott"] @TO@ MethodName:to:["mycomponent:foo?username=scott&password=RAW(++%%w?rd))"] @AT@ 3665 @LENGTH@ 101
---------UPD StringLiteral@@"mycomponent:foo?password=RAW(++%%w?rd)&username=scott" @TO@ "mycomponent:foo?username=scott&password=RAW(++%%w?rd))" @AT@ 3710 @LENGTH@ 55


INS MethodDeclaration@@void, MethodName:scannerDeploymentRedeployedButNotByScanner, String deploymentName, File marker,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYDS",length=4), public]DeploymentScannerLogger, [BasicLogger] @AT@ 16925 @LENGTH@ 79
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:scannerDeploymentRedeployedButNotByScanner, String deploymentName, File marker,  @AT@ 16920 @LENGTH@ 4
---INS SimpleName@@MethodName:scannerDeploymentRedeployedButNotByScanner @TO@ MethodDeclaration@@void, MethodName:scannerDeploymentRedeployedButNotByScanner, String deploymentName, File marker,  @AT@ 16925 @LENGTH@ 42
---INS SingleVariableDeclaration@@String deploymentName @TO@ MethodDeclaration@@void, MethodName:scannerDeploymentRedeployedButNotByScanner, String deploymentName, File marker,  @AT@ 16968 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String deploymentName @AT@ 16968 @LENGTH@ 6
------INS SimpleName@@deploymentName @TO@ SingleVariableDeclaration@@String deploymentName @AT@ 16975 @LENGTH@ 14
---INS SingleVariableDeclaration@@File marker @TO@ MethodDeclaration@@void, MethodName:scannerDeploymentRedeployedButNotByScanner, String deploymentName, File marker,  @AT@ 16991 @LENGTH@ 11
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File marker @AT@ 16991 @LENGTH@ 4
------INS SimpleName@@marker @TO@ SingleVariableDeclaration@@File marker @AT@ 16996 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @TO@ TypeDeclaration@@[public]TestInMemoryNodeModel,  @AT@ 29417 @LENGTH@ 736
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29417 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29424 @LENGTH@ 4
---INS SimpleName@@MethodName:testClearPropertyNonExisting @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29429 @LENGTH@ 28
---INS VariableDeclarationStatement@@NodeKeyResolver<ImmutableNode> resolver=createResolver(); @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29474 @LENGTH@ 59
------INS ParameterizedType@@NodeKeyResolver<ImmutableNode> @TO@ VariableDeclarationStatement@@NodeKeyResolver<ImmutableNode> resolver=createResolver(); @AT@ 29474 @LENGTH@ 30
---------INS SimpleType@@NodeKeyResolver @TO@ ParameterizedType@@NodeKeyResolver<ImmutableNode> @AT@ 29474 @LENGTH@ 15
---------INS SimpleType@@ImmutableNode @TO@ ParameterizedType@@NodeKeyResolver<ImmutableNode> @AT@ 29490 @LENGTH@ 13
------INS VariableDeclarationFragment@@resolver=createResolver() @TO@ VariableDeclarationStatement@@NodeKeyResolver<ImmutableNode> resolver=createResolver(); @AT@ 29505 @LENGTH@ 27
---------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@resolver=createResolver() @AT@ 29505 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:createResolver:[] @TO@ VariableDeclarationFragment@@resolver=createResolver() @AT@ 29516 @LENGTH@ 16
---INS VariableDeclarationStatement@@InMemoryNodeModel model=new InMemoryNodeModel(NodeStructureHelper.ROOT_PERSONAE_TREE); @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29542 @LENGTH@ 104
------INS SimpleType@@InMemoryNodeModel @TO@ VariableDeclarationStatement@@InMemoryNodeModel model=new InMemoryNodeModel(NodeStructureHelper.ROOT_PERSONAE_TREE); @AT@ 29542 @LENGTH@ 17
------INS VariableDeclarationFragment@@model=new InMemoryNodeModel(NodeStructureHelper.ROOT_PERSONAE_TREE) @TO@ VariableDeclarationStatement@@InMemoryNodeModel model=new InMemoryNodeModel(NodeStructureHelper.ROOT_PERSONAE_TREE); @AT@ 29560 @LENGTH@ 85
---------INS SimpleName@@model @TO@ VariableDeclarationFragment@@model=new InMemoryNodeModel(NodeStructureHelper.ROOT_PERSONAE_TREE) @AT@ 29560 @LENGTH@ 5
---------INS ClassInstanceCreation@@InMemoryNodeModel[NodeStructureHelper.ROOT_PERSONAE_TREE] @TO@ VariableDeclarationFragment@@model=new InMemoryNodeModel(NodeStructureHelper.ROOT_PERSONAE_TREE) @AT@ 29584 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@InMemoryNodeModel[NodeStructureHelper.ROOT_PERSONAE_TREE] @AT@ 29584 @LENGTH@ 3
------------INS SimpleType@@InMemoryNodeModel @TO@ ClassInstanceCreation@@InMemoryNodeModel[NodeStructureHelper.ROOT_PERSONAE_TREE] @AT@ 29588 @LENGTH@ 17
------------INS QualifiedName@@NodeStructureHelper.ROOT_PERSONAE_TREE @TO@ ClassInstanceCreation@@InMemoryNodeModel[NodeStructureHelper.ROOT_PERSONAE_TREE] @AT@ 29606 @LENGTH@ 38
---------------INS SimpleName@@NodeStructureHelper @TO@ QualifiedName@@NodeStructureHelper.ROOT_PERSONAE_TREE @AT@ 29606 @LENGTH@ 19
---------------INS SimpleName@@ROOT_PERSONAE_TREE @TO@ QualifiedName@@NodeStructureHelper.ROOT_PERSONAE_TREE @AT@ 29626 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:EasyMock.expect(resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29655 @LENGTH@ 209
------INS MethodInvocation@@EasyMock.expect(resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @TO@ ExpressionStatement@@MethodInvocation:EasyMock.expect(resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 29655 @LENGTH@ 208
---------INS MethodInvocation@@MethodName:expect:[resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())] @TO@ MethodInvocation@@EasyMock.expect(resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 29655 @LENGTH@ 127
------------INS MethodInvocation@@resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler()) @TO@ MethodInvocation@@MethodName:expect:[resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())] @AT@ 29688 @LENGTH@ 93
---------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler()) @AT@ 29688 @LENGTH@ 8
---------------INS SimpleName@@MethodName:resolveKey:[model.getRootNode(), KEY, model.getNodeHandler()] @TO@ MethodInvocation@@resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler()) @AT@ 29697 @LENGTH@ 84
------------------INS MethodInvocation@@model.getRootNode() @TO@ SimpleName@@MethodName:resolveKey:[model.getRootNode(), KEY, model.getNodeHandler()] @AT@ 29708 @LENGTH@ 19
---------------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getRootNode() @AT@ 29708 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getRootNode:[] @TO@ MethodInvocation@@model.getRootNode() @AT@ 29714 @LENGTH@ 13
------------------INS SimpleName@@KEY @TO@ SimpleName@@MethodName:resolveKey:[model.getRootNode(), KEY, model.getNodeHandler()] @AT@ 29729 @LENGTH@ 3
------------------INS MethodInvocation@@model.getNodeHandler() @TO@ SimpleName@@MethodName:resolveKey:[model.getRootNode(), KEY, model.getNodeHandler()] @AT@ 29758 @LENGTH@ 22
---------------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getNodeHandler() @AT@ 29758 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getNodeHandler:[] @TO@ MethodInvocation@@model.getNodeHandler() @AT@ 29764 @LENGTH@ 16
---------INS SimpleName@@Name:EasyMock @TO@ MethodInvocation@@EasyMock.expect(resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 29655 @LENGTH@ 8
---------INS SimpleName@@MethodName:andReturn:[Collections.<QueryResult<ImmutableNode>>emptyList()] @TO@ MethodInvocation@@EasyMock.expect(resolver.resolveKey(model.getRootNode(),KEY,model.getNodeHandler())).andReturn(Collections.<QueryResult<ImmutableNode>>emptyList()) @AT@ 29783 @LENGTH@ 80
------------INS MethodInvocation@@Collections.<QueryResult<ImmutableNode>>emptyList() @TO@ SimpleName@@MethodName:andReturn:[Collections.<QueryResult<ImmutableNode>>emptyList()] @AT@ 29810 @LENGTH@ 52
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<QueryResult<ImmutableNode>>emptyList() @AT@ 29810 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<QueryResult<ImmutableNode>>emptyList() @AT@ 29851 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:EasyMock.replay(resolver) @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29873 @LENGTH@ 26
------INS MethodInvocation@@EasyMock.replay(resolver) @TO@ ExpressionStatement@@MethodInvocation:EasyMock.replay(resolver) @AT@ 29873 @LENGTH@ 25
---------INS SimpleName@@Name:EasyMock @TO@ MethodInvocation@@EasyMock.replay(resolver) @AT@ 29873 @LENGTH@ 8
---------INS SimpleName@@MethodName:replay:[resolver] @TO@ MethodInvocation@@EasyMock.replay(resolver) @AT@ 29882 @LENGTH@ 16
------------INS SimpleName@@resolver @TO@ SimpleName@@MethodName:replay:[resolver] @AT@ 29889 @LENGTH@ 8
---INS VariableDeclarationStatement@@TreeData treeDataOld=model.getTreeData(); @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29909 @LENGTH@ 43
------INS SimpleType@@TreeData @TO@ VariableDeclarationStatement@@TreeData treeDataOld=model.getTreeData(); @AT@ 29909 @LENGTH@ 8
------INS VariableDeclarationFragment@@treeDataOld=model.getTreeData() @TO@ VariableDeclarationStatement@@TreeData treeDataOld=model.getTreeData(); @AT@ 29918 @LENGTH@ 33
---------INS SimpleName@@treeDataOld @TO@ VariableDeclarationFragment@@treeDataOld=model.getTreeData() @AT@ 29918 @LENGTH@ 11
---------INS MethodInvocation@@model.getTreeData() @TO@ VariableDeclarationFragment@@treeDataOld=model.getTreeData() @AT@ 29932 @LENGTH@ 19
------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getTreeData() @AT@ 29932 @LENGTH@ 5
------------INS SimpleName@@MethodName:getTreeData:[] @TO@ MethodInvocation@@model.getTreeData() @AT@ 29938 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:model.clearProperty(KEY,resolver) @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 29961 @LENGTH@ 35
------INS MethodInvocation@@model.clearProperty(KEY,resolver) @TO@ ExpressionStatement@@MethodInvocation:model.clearProperty(KEY,resolver) @AT@ 29961 @LENGTH@ 34
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.clearProperty(KEY,resolver) @AT@ 29961 @LENGTH@ 5
---------INS SimpleName@@MethodName:clearProperty:[KEY, resolver] @TO@ MethodInvocation@@model.clearProperty(KEY,resolver) @AT@ 29967 @LENGTH@ 28
------------INS SimpleName@@KEY @TO@ SimpleName@@MethodName:clearProperty:[KEY, resolver] @AT@ 29981 @LENGTH@ 3
------------INS SimpleName@@resolver @TO@ SimpleName@@MethodName:clearProperty:[KEY, resolver] @AT@ 29986 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertNotNull("No root node",model.getNodeHandler().getRootNode()) @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 30005 @LENGTH@ 68
------INS MethodInvocation@@assertNotNull("No root node",model.getNodeHandler().getRootNode()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("No root node",model.getNodeHandler().getRootNode()) @AT@ 30005 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertNotNull:["No root node", model.getNodeHandler().getRootNode()] @TO@ MethodInvocation@@assertNotNull("No root node",model.getNodeHandler().getRootNode()) @AT@ 30005 @LENGTH@ 67
------------INS StringLiteral@@"No root node" @TO@ SimpleName@@MethodName:assertNotNull:["No root node", model.getNodeHandler().getRootNode()] @AT@ 30019 @LENGTH@ 14
------------INS MethodInvocation@@model.getNodeHandler().getRootNode() @TO@ SimpleName@@MethodName:assertNotNull:["No root node", model.getNodeHandler().getRootNode()] @AT@ 30035 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getNodeHandler:[] @TO@ MethodInvocation@@model.getNodeHandler().getRootNode() @AT@ 30035 @LENGTH@ 22
---------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getNodeHandler().getRootNode() @AT@ 30035 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getRootNode:[] @TO@ MethodInvocation@@model.getNodeHandler().getRootNode() @AT@ 30058 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertSame("Data was changed",treeDataOld,model.getTreeData()) @TO@ MethodDeclaration@@public, void, MethodName:testClearPropertyNonExisting,  @AT@ 30082 @LENGTH@ 65
------INS MethodInvocation@@assertSame("Data was changed",treeDataOld,model.getTreeData()) @TO@ ExpressionStatement@@MethodInvocation:assertSame("Data was changed",treeDataOld,model.getTreeData()) @AT@ 30082 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @TO@ MethodInvocation@@assertSame("Data was changed",treeDataOld,model.getTreeData()) @AT@ 30082 @LENGTH@ 64
------------INS StringLiteral@@"Data was changed" @TO@ SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @AT@ 30093 @LENGTH@ 18
------------INS SimpleName@@treeDataOld @TO@ SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @AT@ 30113 @LENGTH@ 11
------------INS MethodInvocation@@model.getTreeData() @TO@ SimpleName@@MethodName:assertSame:["Data was changed", treeDataOld, model.getTreeData()] @AT@ 30126 @LENGTH@ 19
---------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.getTreeData() @AT@ 30126 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getTreeData:[] @TO@ MethodInvocation@@model.getTreeData() @AT@ 30132 @LENGTH@ 13


UPD VariableDeclarationStatement@@UriComponentsBuilder builder=baseUri != null ? UriComponentsBuilder.fromUri(baseUri) : ControllerLinkBuilder.linkTo(RepositoryController.class).toUriComponentsBuilder(); @TO@ ServletUriComponentsBuilder builder=ServletUriComponentsBuilder.fromCurrentServletMapping(); @AT@ 1607 @LENGTH@ 176
---UPD SimpleType@@UriComponentsBuilder @TO@ ServletUriComponentsBuilder @AT@ 1607 @LENGTH@ 20
---UPD VariableDeclarationFragment@@builder=baseUri != null ? UriComponentsBuilder.fromUri(baseUri) : ControllerLinkBuilder.linkTo(RepositoryController.class).toUriComponentsBuilder() @TO@ builder=ServletUriComponentsBuilder.fromCurrentServletMapping() @AT@ 1628 @LENGTH@ 154
------INS MethodInvocation@@ServletUriComponentsBuilder.fromCurrentServletMapping() @TO@ VariableDeclarationFragment@@builder=baseUri != null ? UriComponentsBuilder.fromUri(baseUri) : ControllerLinkBuilder.linkTo(RepositoryController.class).toUriComponentsBuilder() @AT@ 1593 @LENGTH@ 55
---------MOV SimpleName@@Name:UriComponentsBuilder @TO@ MethodInvocation@@ServletUriComponentsBuilder.fromCurrentServletMapping() @AT@ 1656 @LENGTH@ 20
---------MOV SimpleName@@MethodName:fromUri:[baseUri] @TO@ MethodInvocation@@ServletUriComponentsBuilder.fromCurrentServletMapping() @AT@ 1677 @LENGTH@ 16
------DEL ConditionalExpression@@baseUri != null ? UriComponentsBuilder.fromUri(baseUri) : ControllerLinkBuilder.linkTo(RepositoryController.class).toUriComponentsBuilder() @AT@ 1638 @LENGTH@ 144
---------DEL InfixExpression@@baseUri != null @AT@ 1638 @LENGTH@ 15
------------DEL SimpleName@@baseUri @AT@ 1638 @LENGTH@ 7
------------DEL Operator@@!= @AT@ 1645 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 1649 @LENGTH@ 4
---------DEL MethodInvocation@@UriComponentsBuilder.fromUri(baseUri) @AT@ 1656 @LENGTH@ 37
---------DEL MethodInvocation@@ControllerLinkBuilder.linkTo(RepositoryController.class).toUriComponentsBuilder() @AT@ 1696 @LENGTH@ 86
------------DEL MethodInvocation@@MethodName:linkTo:[RepositoryController.class] @AT@ 1696 @LENGTH@ 61
---------------DEL TypeLiteral@@RepositoryController.class @AT@ 1730 @LENGTH@ 26
------------DEL SimpleName@@Name:ControllerLinkBuilder @AT@ 1696 @LENGTH@ 21
------------DEL SimpleName@@MethodName:toUriComponentsBuilder:[] @AT@ 1758 @LENGTH@ 24


MOV FieldDeclaration@@private, int, [closeTimeout=30 * 1000] @TO@ TypeDeclaration@@[public]RabbitMQConsumer, DefaultConsumer @AT@ 1272 @LENGTH@ 37


UPD TypeDeclaration@@[@Command(name=CreateCommand.FUNCTION_VALUE,scope=CreateCommand.SCOPE_VALUE,description=CreateCommand.DESCRIPTION,detailedDescription="classpath:create.txt"), @Component(immediate=true,policy=ConfigurationPolicy.OPTIONAL), @Service({Function.class,CreateAvailable.class}), @org.apache.felix.scr.annotations.Properties({@Property(name="osgi.command.scope",value=CreateCommand.SCOPE_VALUE),@Property(name="osgi.command.function",value=CreateCommand.FUNCTION_VALUE)}), public, final]CreateCommand, AbstractCommandComponent[CreateAvailable] @TO@ [@Command(name=CreateCommand.FUNCTION_VALUE,scope=CreateCommand.SCOPE_VALUE,description=CreateCommand.DESCRIPTION,detailedDescription="classpath:create.txt"), @Component(immediate=true,policy=ConfigurationPolicy.OPTIONAL), @Service({Function.class,AbstractCommand.class,CreateAvailable.class}), @org.apache.felix.scr.annotations.Properties({@Property(name="osgi.command.scope",value=CreateCommand.SCOPE_VALUE),@Property(name="osgi.command.function",value=CreateCommand.FUNCTION_VALUE)}), public, final]CreateCommand, AbstractCommandComponent[CreateAvailable] @AT@ 1699 @LENGTH@ 2321
---UPD SingleMemberAnnotation@@@Service({Function.class,CreateAvailable.class}) @TO@ @Service({Function.class,AbstractCommand.class,CreateAvailable.class}) @AT@ 1935 @LENGTH@ 51


UPD ExpressionStatement@@MethodInvocation:from("cxf:bean:routerEndpoint?dataFormat=Message&publishedEndpointUrl=http://www.simple.com/services/test").to(serverAddress + "?throwExceptionOnFailure=false") @TO@ MethodInvocation:from("cxf:bean:routerEndpoint?dataFormat=Message&publishedEndpointUrl=http://www.simple.com/services/test").removeHeaders("CamelHttp*").to(serverAddress + "?throwExceptionOnFailure=false") @AT@ 1988 @LENGTH@ 182
---UPD MethodInvocation@@from("cxf:bean:routerEndpoint?dataFormat=Message&publishedEndpointUrl=http://www.simple.com/services/test").to(serverAddress + "?throwExceptionOnFailure=false") @TO@ from("cxf:bean:routerEndpoint?dataFormat=Message&publishedEndpointUrl=http://www.simple.com/services/test").removeHeaders("CamelHttp*").to(serverAddress + "?throwExceptionOnFailure=false") @AT@ 1988 @LENGTH@ 181
------INS MethodInvocation@@MethodName:removeHeaders:["CamelHttp*"] @TO@ MethodInvocation@@from("cxf:bean:routerEndpoint?dataFormat=Message&publishedEndpointUrl=http://www.simple.com/services/test").to(serverAddress + "?throwExceptionOnFailure=false") @AT@ 1988 @LENGTH@ 217
---------INS StringLiteral@@"CamelHttp*" @TO@ MethodInvocation@@MethodName:removeHeaders:["CamelHttp*"] @AT@ 2192 @LENGTH@ 12


INS MethodDeclaration@@private, void, MethodName:unregisterListenerAtChildren,  @TO@ TypeDeclaration@@[public]CombinedConfiguration, BaseHierarchicalConfiguration[ConfigurationListener, Cloneable] @AT@ 32972 @LENGTH@ 255
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:unregisterListenerAtChildren,  @AT@ 32972 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:unregisterListenerAtChildren,  @AT@ 32980 @LENGTH@ 4
---INS SimpleName@@MethodName:unregisterListenerAtChildren @TO@ MethodDeclaration@@private, void, MethodName:unregisterListenerAtChildren,  @AT@ 32985 @LENGTH@ 28
---INS IfStatement@@if (configurations != null) {  for (  ConfigData child : configurations) {    unregisterListenerAt(child.getConfiguration());  }} @TO@ MethodDeclaration@@private, void, MethodName:unregisterListenerAtChildren,  @AT@ 33030 @LENGTH@ 191
------INS InfixExpression@@configurations != null @TO@ IfStatement@@if (configurations != null) {  for (  ConfigData child : configurations) {    unregisterListenerAt(child.getConfiguration());  }} @AT@ 33034 @LENGTH@ 22
---------INS SimpleName@@configurations @TO@ InfixExpression@@configurations != null @AT@ 33034 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@configurations != null @AT@ 33048 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@configurations != null @AT@ 33052 @LENGTH@ 4
------INS Block@@ThenBody:{  for (  ConfigData child : configurations) {    unregisterListenerAt(child.getConfiguration());  }} @TO@ IfStatement@@if (configurations != null) {  for (  ConfigData child : configurations) {    unregisterListenerAt(child.getConfiguration());  }} @AT@ 33066 @LENGTH@ 155
---------INS EnhancedForStatement@@for (ConfigData child : configurations) {  unregisterListenerAt(child.getConfiguration());} @TO@ Block@@ThenBody:{  for (  ConfigData child : configurations) {    unregisterListenerAt(child.getConfiguration());  }} @AT@ 33080 @LENGTH@ 131
------------INS SingleVariableDeclaration@@ConfigData child @TO@ EnhancedForStatement@@for (ConfigData child : configurations) {  unregisterListenerAt(child.getConfiguration());} @AT@ 33085 @LENGTH@ 16
---------------INS SimpleType@@ConfigData @TO@ SingleVariableDeclaration@@ConfigData child @AT@ 33085 @LENGTH@ 10
---------------INS SimpleName@@child @TO@ SingleVariableDeclaration@@ConfigData child @AT@ 33096 @LENGTH@ 5
------------INS SimpleName@@configurations @TO@ EnhancedForStatement@@for (ConfigData child : configurations) {  unregisterListenerAt(child.getConfiguration());} @AT@ 33104 @LENGTH@ 14
------------INS ExpressionStatement@@MethodInvocation:unregisterListenerAt(child.getConfiguration()) @TO@ EnhancedForStatement@@for (ConfigData child : configurations) {  unregisterListenerAt(child.getConfiguration());} @AT@ 33150 @LENGTH@ 47
---------------INS MethodInvocation@@unregisterListenerAt(child.getConfiguration()) @TO@ ExpressionStatement@@MethodInvocation:unregisterListenerAt(child.getConfiguration()) @AT@ 33150 @LENGTH@ 46
------------------INS SimpleName@@MethodName:unregisterListenerAt:[child.getConfiguration()] @TO@ MethodInvocation@@unregisterListenerAt(child.getConfiguration()) @AT@ 33150 @LENGTH@ 46
---------------------INS MethodInvocation@@child.getConfiguration() @TO@ SimpleName@@MethodName:unregisterListenerAt:[child.getConfiguration()] @AT@ 33171 @LENGTH@ 24
------------------------INS SimpleName@@Name:child @TO@ MethodInvocation@@child.getConfiguration() @AT@ 33171 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@child.getConfiguration() @AT@ 33177 @LENGTH@ 18


UPD ReturnStatement@@ClassInstanceCreation:new VirtualFileResource(child,path) @TO@ ClassInstanceCreation:new VirtualFileResource(overlay.getPhysicalFile(),child,path) @AT@ 1575 @LENGTH@ 44
---UPD ClassInstanceCreation@@VirtualFileResource[child, path] @TO@ VirtualFileResource[overlay.getPhysicalFile(), child, path] @AT@ 1582 @LENGTH@ 36
------INS MethodInvocation@@overlay.getPhysicalFile() @TO@ ClassInstanceCreation@@VirtualFileResource[child, path] @AT@ 1606 @LENGTH@ 25
---------INS SimpleName@@Name:overlay @TO@ MethodInvocation@@overlay.getPhysicalFile() @AT@ 1606 @LENGTH@ 7
---------INS SimpleName@@MethodName:getPhysicalFile:[] @TO@ MethodInvocation@@overlay.getPhysicalFile() @AT@ 1614 @LENGTH@ 17


UPD MethodDeclaration@@private, Dataset<T>, T, MethodName:getOrCreateDataset, Class pojoClass, Class<T> recordClass,  @TO@ private, Dataset<T>, T, MethodName:getOrCreateDataset, Class<?> pojoClass, Class<T> recordClass,  @AT@ 4354 @LENGTH@ 939
---UPD SingleVariableDeclaration@@Class pojoClass @TO@ Class<?> pojoClass @AT@ 4396 @LENGTH@ 15
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class pojoClass @AT@ 4358 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 4358 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 4364 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 4396 @LENGTH@ 5


UPD VariableDeclarationStatement@@URI u=new URI(UnsafeUriCharactersEncoder.encode(remaining)); @TO@ URI u=new URI(UnsafeUriCharactersEncoder.encodeHttpURI(remaining)); @AT@ 4697 @LENGTH@ 62
---UPD VariableDeclarationFragment@@u=new URI(UnsafeUriCharactersEncoder.encode(remaining)) @TO@ u=new URI(UnsafeUriCharactersEncoder.encodeHttpURI(remaining)) @AT@ 4701 @LENGTH@ 57
------UPD ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(remaining)] @TO@ URI[UnsafeUriCharactersEncoder.encodeHttpURI(remaining)] @AT@ 4705 @LENGTH@ 53
---------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(remaining) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(remaining) @AT@ 4713 @LENGTH@ 44
------------UPD SimpleName@@MethodName:encode:[remaining] @TO@ MethodName:encodeHttpURI:[remaining] @AT@ 4740 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:DomainManagementLogger.ROOT_LOGGER.debugf("Cancel of %s requested",PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3050 @LENGTH@ 145
---INS MethodInvocation@@DomainManagementLogger.ROOT_LOGGER.debugf("Cancel of %s requested",PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()) @TO@ ExpressionStatement@@MethodInvocation:DomainManagementLogger.ROOT_LOGGER.debugf("Cancel of %s requested",PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()) @AT@ 3050 @LENGTH@ 144
------INS QualifiedName@@Name:DomainManagementLogger.ROOT_LOGGER @TO@ MethodInvocation@@DomainManagementLogger.ROOT_LOGGER.debugf("Cancel of %s requested",PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()) @AT@ 3050 @LENGTH@ 34
------INS SimpleName@@MethodName:debugf:["Cancel of %s requested", PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()] @TO@ MethodInvocation@@DomainManagementLogger.ROOT_LOGGER.debugf("Cancel of %s requested",PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()) @AT@ 3085 @LENGTH@ 109
---------INS StringLiteral@@"Cancel of %s requested" @TO@ SimpleName@@MethodName:debugf:["Cancel of %s requested", PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()] @AT@ 3092 @LENGTH@ 24
---------INS MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue() @TO@ SimpleName@@MethodName:debugf:["Cancel of %s requested", PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue()] @AT@ 3118 @LENGTH@ 75
------------INS MethodInvocation@@MethodName:getLastElement:[] @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue() @AT@ 3118 @LENGTH@ 64
------------INS MethodInvocation@@MethodName:pathAddress:[operation.get(OP_ADDR)] @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue() @AT@ 3118 @LENGTH@ 47
---------------INS MethodInvocation@@operation.get(OP_ADDR) @TO@ MethodInvocation@@MethodName:pathAddress:[operation.get(OP_ADDR)] @AT@ 3142 @LENGTH@ 22
------------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get(OP_ADDR) @AT@ 3142 @LENGTH@ 9
------------------INS SimpleName@@MethodName:get:[OP_ADDR] @TO@ MethodInvocation@@operation.get(OP_ADDR) @AT@ 3152 @LENGTH@ 12
---------------------INS SimpleName@@OP_ADDR @TO@ SimpleName@@MethodName:get:[OP_ADDR] @AT@ 3156 @LENGTH@ 7
------------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue() @AT@ 3118 @LENGTH@ 11
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).getLastElement().getValue() @AT@ 3183 @LENGTH@ 10


DEL VariableDeclarationStatement@@Set<ContainerProxy> containers=null; @AT@ 2648 @LENGTH@ 38
---DEL ParameterizedType@@Set<ContainerProxy> @AT@ 2648 @LENGTH@ 19
------DEL SimpleType@@Set @AT@ 2648 @LENGTH@ 3
------DEL SimpleType@@ContainerProxy @AT@ 2652 @LENGTH@ 14
---DEL VariableDeclarationFragment@@containers=null @AT@ 2668 @LENGTH@ 17
------DEL SimpleName@@containers @AT@ 2668 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 2681 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:assertUpdate, LinkedInNetworkUpdate update, UpdateType type, Class<? extends UpdateContent> updateClass, Date date, String updateKey,  @TO@ protected, void, MethodName:assertUpdate, LinkedInNetworkUpdate update, UpdateType type, Class<? extends UpdateContent> updateClass, Date date, String updateKey, boolean likable,  @AT@ 3575 @LENGTH@ 361
---INS SingleVariableDeclaration@@boolean likable @TO@ MethodDeclaration@@protected, void, MethodName:assertUpdate, LinkedInNetworkUpdate update, UpdateType type, Class<? extends UpdateContent> updateClass, Date date, String updateKey,  @AT@ 3723 @LENGTH@ 15
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean likable @AT@ 3723 @LENGTH@ 7
------INS SimpleName@@likable @TO@ SingleVariableDeclaration@@boolean likable @AT@ 3731 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals(likable,update.isLikable()) @TO@ MethodDeclaration@@protected, void, MethodName:assertUpdate, LinkedInNetworkUpdate update, UpdateType type, Class<? extends UpdateContent> updateClass, Date date, String updateKey,  @AT@ 3953 @LENGTH@ 42
------INS MethodInvocation@@assertEquals(likable,update.isLikable()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(likable,update.isLikable()) @AT@ 3953 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertEquals:[likable, update.isLikable()] @TO@ MethodInvocation@@assertEquals(likable,update.isLikable()) @AT@ 3953 @LENGTH@ 41
------------INS SimpleName@@likable @TO@ SimpleName@@MethodName:assertEquals:[likable, update.isLikable()] @AT@ 3966 @LENGTH@ 7
------------INS MethodInvocation@@update.isLikable() @TO@ SimpleName@@MethodName:assertEquals:[likable, update.isLikable()] @AT@ 3975 @LENGTH@ 18
---------------INS SimpleName@@Name:update @TO@ MethodInvocation@@update.isLikable() @AT@ 3975 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isLikable:[] @TO@ MethodInvocation@@update.isLikable() @AT@ 3982 @LENGTH@ 11


INS IfStatement@@if (producer.getConfiguration().getRequestTimeout() > 0) {  if (LOG.isTraceEnabled()) {    LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());  }  ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);  pipeline.addLast("timeout",timeout);} @TO@ MethodDeclaration@@public, ChannelPipeline, MethodName:getPipeline, Exception,  @AT@ 3328 @LENGTH@ 443
---INS InfixExpression@@producer.getConfiguration().getRequestTimeout() > 0 @TO@ IfStatement@@if (producer.getConfiguration().getRequestTimeout() > 0) {  if (LOG.isTraceEnabled()) {    LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());  }  ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);  pipeline.addLast("timeout",timeout);} @AT@ 3332 @LENGTH@ 51
------INS MethodInvocation@@producer.getConfiguration().getRequestTimeout() @TO@ InfixExpression@@producer.getConfiguration().getRequestTimeout() > 0 @AT@ 3332 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3332 @LENGTH@ 27
---------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3332 @LENGTH@ 8
---------INS SimpleName@@MethodName:getRequestTimeout:[] @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3360 @LENGTH@ 19
------INS Operator@@> @TO@ InfixExpression@@producer.getConfiguration().getRequestTimeout() > 0 @AT@ 3379 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ InfixExpression@@producer.getConfiguration().getRequestTimeout() > 0 @AT@ 3382 @LENGTH@ 1
---INS Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());  }  ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);  pipeline.addLast("timeout",timeout);} @TO@ IfStatement@@if (producer.getConfiguration().getRequestTimeout() > 0) {  if (LOG.isTraceEnabled()) {    LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());  }  ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);  pipeline.addLast("timeout",timeout);} @AT@ 3385 @LENGTH@ 386
------INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());} @TO@ Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());  }  ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);  pipeline.addLast("timeout",timeout);} @AT@ 3399 @LENGTH@ 152
---------INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());} @AT@ 3403 @LENGTH@ 20
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3403 @LENGTH@ 3
------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3407 @LENGTH@ 16
---------INS Block@@ThenBody:{  LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());} @AT@ 3425 @LENGTH@ 126
------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout()) @TO@ Block@@ThenBody:{  LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());} @AT@ 3443 @LENGTH@ 94
---------------INS MethodInvocation@@LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout()) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout()) @AT@ 3443 @LENGTH@ 93
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout()) @AT@ 3443 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trace:["Using request timeout {} millis", producer.getConfiguration().getRequestTimeout()] @TO@ MethodInvocation@@LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout()) @AT@ 3447 @LENGTH@ 89
---------------------INS StringLiteral@@"Using request timeout {} millis" @TO@ SimpleName@@MethodName:trace:["Using request timeout {} millis", producer.getConfiguration().getRequestTimeout()] @AT@ 3453 @LENGTH@ 33
---------------------INS MethodInvocation@@producer.getConfiguration().getRequestTimeout() @TO@ SimpleName@@MethodName:trace:["Using request timeout {} millis", producer.getConfiguration().getRequestTimeout()] @AT@ 3488 @LENGTH@ 47
------------------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3488 @LENGTH@ 27
------------------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3488 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getRequestTimeout:[] @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3516 @LENGTH@ 19
------INS VariableDeclarationStatement@@ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS); @TO@ Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());  }  ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);  pipeline.addLast("timeout",timeout);} @AT@ 3564 @LENGTH@ 147
---------INS SimpleType@@ChannelHandler @TO@ VariableDeclarationStatement@@ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS); @AT@ 3564 @LENGTH@ 14
---------INS VariableDeclarationFragment@@timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS) @TO@ VariableDeclarationStatement@@ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS); @AT@ 3579 @LENGTH@ 131
------------INS SimpleName@@timeout @TO@ VariableDeclarationFragment@@timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS) @AT@ 3579 @LENGTH@ 7
------------INS ClassInstanceCreation@@ReadTimeoutHandler[NettyComponent.getTimer(), producer.getConfiguration().getRequestTimeout(), TimeUnit.MILLISECONDS] @TO@ VariableDeclarationFragment@@timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS) @AT@ 3589 @LENGTH@ 121
---------------INS New@@new @TO@ ClassInstanceCreation@@ReadTimeoutHandler[NettyComponent.getTimer(), producer.getConfiguration().getRequestTimeout(), TimeUnit.MILLISECONDS] @AT@ 3589 @LENGTH@ 3
---------------INS SimpleType@@ReadTimeoutHandler @TO@ ClassInstanceCreation@@ReadTimeoutHandler[NettyComponent.getTimer(), producer.getConfiguration().getRequestTimeout(), TimeUnit.MILLISECONDS] @AT@ 3593 @LENGTH@ 18
---------------INS MethodInvocation@@NettyComponent.getTimer() @TO@ ClassInstanceCreation@@ReadTimeoutHandler[NettyComponent.getTimer(), producer.getConfiguration().getRequestTimeout(), TimeUnit.MILLISECONDS] @AT@ 3612 @LENGTH@ 25
------------------INS SimpleName@@Name:NettyComponent @TO@ MethodInvocation@@NettyComponent.getTimer() @AT@ 3612 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getTimer:[] @TO@ MethodInvocation@@NettyComponent.getTimer() @AT@ 3627 @LENGTH@ 10
---------------INS MethodInvocation@@producer.getConfiguration().getRequestTimeout() @TO@ ClassInstanceCreation@@ReadTimeoutHandler[NettyComponent.getTimer(), producer.getConfiguration().getRequestTimeout(), TimeUnit.MILLISECONDS] @AT@ 3639 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3639 @LENGTH@ 27
------------------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3639 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getRequestTimeout:[] @TO@ MethodInvocation@@producer.getConfiguration().getRequestTimeout() @AT@ 3667 @LENGTH@ 19
---------------INS QualifiedName@@TimeUnit.MILLISECONDS @TO@ ClassInstanceCreation@@ReadTimeoutHandler[NettyComponent.getTimer(), producer.getConfiguration().getRequestTimeout(), TimeUnit.MILLISECONDS] @AT@ 3688 @LENGTH@ 21
------------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.MILLISECONDS @AT@ 3688 @LENGTH@ 8
------------------INS SimpleName@@MILLISECONDS @TO@ QualifiedName@@TimeUnit.MILLISECONDS @AT@ 3697 @LENGTH@ 12
------INS ExpressionStatement@@MethodInvocation:pipeline.addLast("timeout",timeout) @TO@ Block@@ThenBody:{  if (LOG.isTraceEnabled()) {    LOG.trace("Using request timeout {} millis",producer.getConfiguration().getRequestTimeout());  }  ChannelHandler timeout=new ReadTimeoutHandler(NettyComponent.getTimer(),producer.getConfiguration().getRequestTimeout(),TimeUnit.MILLISECONDS);  pipeline.addLast("timeout",timeout);} @AT@ 3724 @LENGTH@ 37
---------INS MethodInvocation@@pipeline.addLast("timeout",timeout) @TO@ ExpressionStatement@@MethodInvocation:pipeline.addLast("timeout",timeout) @AT@ 3724 @LENGTH@ 36
------------INS SimpleName@@Name:pipeline @TO@ MethodInvocation@@pipeline.addLast("timeout",timeout) @AT@ 3724 @LENGTH@ 8
------------INS SimpleName@@MethodName:addLast:["timeout", timeout] @TO@ MethodInvocation@@pipeline.addLast("timeout",timeout) @AT@ 3733 @LENGTH@ 27
---------------INS StringLiteral@@"timeout" @TO@ SimpleName@@MethodName:addLast:["timeout", timeout] @AT@ 3741 @LENGTH@ 9
---------------INS SimpleName@@timeout @TO@ SimpleName@@MethodName:addLast:["timeout", timeout] @AT@ 3752 @LENGTH@ 7


UPD IfStatement@@if (streamsHolder == null) {  streamsHolder.getStream().flush();} @TO@ if (streamsHolder != null) {  streamsHolder.getStream().flush();} @AT@ 2601 @LENGTH@ 70
---UPD InfixExpression@@streamsHolder == null @TO@ streamsHolder != null @AT@ 2605 @LENGTH@ 21
------UPD Operator@@== @TO@ != @AT@ 2618 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @TO@ TypeDeclaration@@[public]XmlConverterTest, ContextTestSupport @AT@ 16334 @LENGTH@ 475
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16334 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16341 @LENGTH@ 4
---INS SimpleName@@MethodName:testToInputStreamNonAsciiFromDocument @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16346 @LENGTH@ 37
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16393 @LENGTH@ 9
---INS VariableDeclarationStatement@@XmlConverter conv=new XmlConverter(); @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16413 @LENGTH@ 39
------INS SimpleType@@XmlConverter @TO@ VariableDeclarationStatement@@XmlConverter conv=new XmlConverter(); @AT@ 16413 @LENGTH@ 12
------INS VariableDeclarationFragment@@conv=new XmlConverter() @TO@ VariableDeclarationStatement@@XmlConverter conv=new XmlConverter(); @AT@ 16426 @LENGTH@ 25
---------INS SimpleName@@conv @TO@ VariableDeclarationFragment@@conv=new XmlConverter() @AT@ 16426 @LENGTH@ 4
---------INS ClassInstanceCreation@@XmlConverter[] @TO@ VariableDeclarationFragment@@conv=new XmlConverter() @AT@ 16433 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@XmlConverter[] @AT@ 16433 @LENGTH@ 3
------------INS SimpleType@@XmlConverter @TO@ ClassInstanceCreation@@XmlConverter[] @AT@ 16437 @LENGTH@ 12
---INS VariableDeclarationStatement@@Document doc=context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>"); @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16461 @LENGTH@ 145
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document doc=context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>"); @AT@ 16461 @LENGTH@ 8
------INS VariableDeclarationFragment@@doc=context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>") @TO@ VariableDeclarationStatement@@Document doc=context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>"); @AT@ 16470 @LENGTH@ 135
---------INS SimpleName@@doc @TO@ VariableDeclarationFragment@@doc=context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 16470 @LENGTH@ 3
---------INS MethodInvocation@@context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>") @TO@ VariableDeclarationFragment@@doc=context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 16476 @LENGTH@ 129
------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 16476 @LENGTH@ 26
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 16476 @LENGTH@ 7
------------INS SimpleName@@MethodName:convertTo:[Document.class, "<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>"] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(Document.class,"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>") @AT@ 16503 @LENGTH@ 102
---------------INS TypeLiteral@@Document.class @TO@ SimpleName@@MethodName:convertTo:[Document.class, "<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>"] @AT@ 16513 @LENGTH@ 14
---------------INS StringLiteral@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>" @TO@ SimpleName@@MethodName:convertTo:[Document.class, "<?xml version=\"1.0\" encoding=\"UTF-8\"?><foo>\u99f1\u99ddb\u00e4r</foo>"] @AT@ 16529 @LENGTH@ 75
---INS VariableDeclarationStatement@@InputStream is=conv.toInputStream(doc,null); @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16616 @LENGTH@ 47
------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream is=conv.toInputStream(doc,null); @AT@ 16616 @LENGTH@ 11
------INS VariableDeclarationFragment@@is=conv.toInputStream(doc,null) @TO@ VariableDeclarationStatement@@InputStream is=conv.toInputStream(doc,null); @AT@ 16628 @LENGTH@ 34
---------INS SimpleName@@is @TO@ VariableDeclarationFragment@@is=conv.toInputStream(doc,null) @AT@ 16628 @LENGTH@ 2
---------INS MethodInvocation@@conv.toInputStream(doc,null) @TO@ VariableDeclarationFragment@@is=conv.toInputStream(doc,null) @AT@ 16633 @LENGTH@ 29
------------INS SimpleName@@Name:conv @TO@ MethodInvocation@@conv.toInputStream(doc,null) @AT@ 16633 @LENGTH@ 4
------------INS SimpleName@@MethodName:toInputStream:[doc, null] @TO@ MethodInvocation@@conv.toInputStream(doc,null) @AT@ 16638 @LENGTH@ 24
---------------INS SimpleName@@doc @TO@ SimpleName@@MethodName:toInputStream:[doc, null] @AT@ 16652 @LENGTH@ 3
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toInputStream:[doc, null] @AT@ 16657 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertNotNull(is) @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16672 @LENGTH@ 18
------INS MethodInvocation@@assertNotNull(is) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(is) @AT@ 16672 @LENGTH@ 17
---------INS SimpleName@@MethodName:assertNotNull:[is] @TO@ MethodInvocation@@assertNotNull(is) @AT@ 16672 @LENGTH@ 17
------------INS SimpleName@@is @TO@ SimpleName@@MethodName:assertNotNull:[is] @AT@ 16686 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",context.getTypeConverter().convertTo(String.class,is)) @TO@ MethodDeclaration@@public, void, MethodName:testToInputStreamNonAsciiFromDocument, Exception,  @AT@ 16699 @LENGTH@ 104
------INS MethodInvocation@@assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",context.getTypeConverter().convertTo(String.class,is)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",context.getTypeConverter().convertTo(String.class,is)) @AT@ 16699 @LENGTH@ 103
---------INS SimpleName@@MethodName:assertEquals:["<foo>\u99f1\u99ddb\u00e4r</foo>", context.getTypeConverter().convertTo(String.class,is)] @TO@ MethodInvocation@@assertEquals("<foo>\u99f1\u99ddb\u00e4r</foo>",context.getTypeConverter().convertTo(String.class,is)) @AT@ 16699 @LENGTH@ 103
------------INS StringLiteral@@"<foo>\u99f1\u99ddb\u00e4r</foo>" @TO@ SimpleName@@MethodName:assertEquals:["<foo>\u99f1\u99ddb\u00e4r</foo>", context.getTypeConverter().convertTo(String.class,is)] @AT@ 16712 @LENGTH@ 33
------------INS MethodInvocation@@context.getTypeConverter().convertTo(String.class,is) @TO@ SimpleName@@MethodName:assertEquals:["<foo>\u99f1\u99ddb\u00e4r</foo>", context.getTypeConverter().convertTo(String.class,is)] @AT@ 16747 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,is) @AT@ 16747 @LENGTH@ 26
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,is) @AT@ 16747 @LENGTH@ 7
---------------INS SimpleName@@MethodName:convertTo:[String.class, is] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,is) @AT@ 16774 @LENGTH@ 27
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:convertTo:[String.class, is] @AT@ 16784 @LENGTH@ 12
------------------INS SimpleName@@is @TO@ SimpleName@@MethodName:convertTo:[String.class, is] @AT@ 16798 @LENGTH@ 2


UPD SwitchStatement@@switch (attribute) {case BINDING:  TransactionSubsystemRootResourceDefinition.BINDING.parseAndSetParameter(value,operation,reader);break;case STATUS_BINDING:TransactionSubsystemRootResourceDefinition.STATUS_BINDING.parseAndSetParameter(value,operation,reader);break;case RECOVERY_LISTENER:TransactionSubsystemRootResourceDefinition.RECOVERY_LISTENER.parseAndSetParameter(value,operation,reader);break;default :unexpectedAttribute(reader,i);} @TO@ switch (attribute) {case BINDING:  TransactionSubsystemRootResourceDefinition.BINDING.parseAndSetParameter(value,operation,reader);break;case STATUS_BINDING:TransactionSubsystemRootResourceDefinition.STATUS_BINDING.parseAndSetParameter(value,operation,reader);break;case RECOVERY_LISTENER:TransactionSubsystemRootResourceDefinition.RECOVERY_LISTENER.parseAndSetParameter(value,operation,reader);break;default :throw unexpectedAttribute(reader,i);} @AT@ 13339 @LENGTH@ 673
---INS ThrowStatement@@MethodInvocation:unexpectedAttribute(reader,i) @TO@ SwitchStatement@@switch (attribute) {case BINDING:  TransactionSubsystemRootResourceDefinition.BINDING.parseAndSetParameter(value,operation,reader);break;case STATUS_BINDING:TransactionSubsystemRootResourceDefinition.STATUS_BINDING.parseAndSetParameter(value,operation,reader);break;case RECOVERY_LISTENER:TransactionSubsystemRootResourceDefinition.RECOVERY_LISTENER.parseAndSetParameter(value,operation,reader);break;default :unexpectedAttribute(reader,i);} @AT@ 13967 @LENGTH@ 37
------MOV MethodInvocation@@unexpectedAttribute(reader,i) @TO@ ThrowStatement@@MethodInvocation:unexpectedAttribute(reader,i) @AT@ 13967 @LENGTH@ 30
---DEL ExpressionStatement@@MethodInvocation:unexpectedAttribute(reader,i) @AT@ 13967 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:LOGGER.error("Fail hasNext()",e) @TO@ MethodInvocation:LOGGER.warn("Fail hasNext()",e) @AT@ 2906 @LENGTH@ 34
---UPD MethodInvocation@@LOGGER.error("Fail hasNext()",e) @TO@ LOGGER.warn("Fail hasNext()",e) @AT@ 2906 @LENGTH@ 33
------UPD SimpleName@@MethodName:error:["Fail hasNext()", e] @TO@ MethodName:warn:["Fail hasNext()", e] @AT@ 2913 @LENGTH@ 26


UPD IfStatement@@if (!c.equals(old)) {  LOGGER.info("Updating configuration {}",config.getPid());  c.put(FABRIC_ZOOKEEPER_PID,pid);  Object password=c.get(ZOOKEEPER_PASSWORD);  if (password != null) {    c.put(ZOOKEEPER_PASSWORD,PasswordEncoder.decode(password.toString()));  }  if (config.getBundleLocation() != null) {    config.setBundleLocation(null);  }  config.update(c);} else {  if (LOGGER.isDebugEnabled()) {    LOGGER.debug("Ignoring configuration {} (no changes)",config.getPid());  }} @TO@ if (!c.equals(old)) {  LOGGER.info("Updating configuration {}",config.getPid());  c.put(FABRIC_ZOOKEEPER_PID,pid);  if (config.getBundleLocation() != null) {    config.setBundleLocation(null);  }  config.update(c);} else {  if (LOGGER.isDebugEnabled()) {    LOGGER.debug("Ignoring configuration {} (no changes)",config.getPid());  }} @AT@ 7482 @LENGTH@ 665
---UPD Block@@ThenBody:{  LOGGER.info("Updating configuration {}",config.getPid());  c.put(FABRIC_ZOOKEEPER_PID,pid);  Object password=c.get(ZOOKEEPER_PASSWORD);  if (password != null) {    c.put(ZOOKEEPER_PASSWORD,PasswordEncoder.decode(password.toString()));  }  if (config.getBundleLocation() != null) {    config.setBundleLocation(null);  }  config.update(c);} @TO@ ThenBody:{  LOGGER.info("Updating configuration {}",config.getPid());  c.put(FABRIC_ZOOKEEPER_PID,pid);  if (config.getBundleLocation() != null) {    config.setBundleLocation(null);  }  config.update(c);} @AT@ 7502 @LENGTH@ 482
------DEL VariableDeclarationStatement@@Object password=c.get(ZOOKEEPER_PASSWORD); @AT@ 7646 @LENGTH@ 44
---------DEL SimpleType@@Object @AT@ 7646 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@password=c.get(ZOOKEEPER_PASSWORD) @AT@ 7653 @LENGTH@ 36
------------DEL SimpleName@@password @AT@ 7653 @LENGTH@ 8
------------DEL MethodInvocation@@c.get(ZOOKEEPER_PASSWORD) @AT@ 7664 @LENGTH@ 25
---------------DEL SimpleName@@Name:c @AT@ 7664 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:get:[ZOOKEEPER_PASSWORD] @AT@ 7666 @LENGTH@ 23
------------------DEL SimpleName@@ZOOKEEPER_PASSWORD @AT@ 7670 @LENGTH@ 18
------DEL IfStatement@@if (password != null) {  c.put(ZOOKEEPER_PASSWORD,PasswordEncoder.decode(password.toString()));} @AT@ 7703 @LENGTH@ 125
---------DEL InfixExpression@@password != null @AT@ 7707 @LENGTH@ 16
------------DEL SimpleName@@password @AT@ 7707 @LENGTH@ 8
------------DEL Operator@@!= @AT@ 7715 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 7719 @LENGTH@ 4
---------DEL Block@@ThenBody:{  c.put(ZOOKEEPER_PASSWORD,PasswordEncoder.decode(password.toString()));} @AT@ 7725 @LENGTH@ 103
------------DEL ExpressionStatement@@MethodInvocation:c.put(ZOOKEEPER_PASSWORD,PasswordEncoder.decode(password.toString())) @AT@ 7743 @LENGTH@ 71
---------------DEL MethodInvocation@@c.put(ZOOKEEPER_PASSWORD,PasswordEncoder.decode(password.toString())) @AT@ 7743 @LENGTH@ 70
------------------DEL SimpleName@@Name:c @AT@ 7743 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:put:[ZOOKEEPER_PASSWORD, PasswordEncoder.decode(password.toString())] @AT@ 7745 @LENGTH@ 68
---------------------DEL SimpleName@@ZOOKEEPER_PASSWORD @AT@ 7749 @LENGTH@ 18
---------------------DEL MethodInvocation@@PasswordEncoder.decode(password.toString()) @AT@ 7769 @LENGTH@ 43
------------------------DEL SimpleName@@Name:PasswordEncoder @AT@ 7769 @LENGTH@ 15
------------------------DEL SimpleName@@MethodName:decode:[password.toString()] @AT@ 7785 @LENGTH@ 27
---------------------------DEL MethodInvocation@@password.toString() @AT@ 7792 @LENGTH@ 19
------------------------------DEL SimpleName@@Name:password @AT@ 7792 @LENGTH@ 8
------------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 7801 @LENGTH@ 10


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ImageHistoryItem,  @TO@ [@Data, public]ImageHistoryItem, AbstractDockerDTO @AT@ 807 @LENGTH@ 169
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ImageHistoryItem,  @AT@ 771 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 813 @LENGTH@ 47


INS ExpressionStatement@@MethodInvocation:client.getParams().setBooleanParameter(ClientPNames.HANDLE_AUTHENTICATION,false) @TO@ MethodDeclaration@@public, HttpClient, MethodName:getHttpClient,  @AT@ 10700 @LENGTH@ 82
---INS MethodInvocation@@client.getParams().setBooleanParameter(ClientPNames.HANDLE_AUTHENTICATION,false) @TO@ ExpressionStatement@@MethodInvocation:client.getParams().setBooleanParameter(ClientPNames.HANDLE_AUTHENTICATION,false) @AT@ 10700 @LENGTH@ 81
------INS MethodInvocation@@MethodName:getParams:[] @TO@ MethodInvocation@@client.getParams().setBooleanParameter(ClientPNames.HANDLE_AUTHENTICATION,false) @AT@ 10700 @LENGTH@ 18
------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getParams().setBooleanParameter(ClientPNames.HANDLE_AUTHENTICATION,false) @AT@ 10700 @LENGTH@ 6
------INS SimpleName@@MethodName:setBooleanParameter:[ClientPNames.HANDLE_AUTHENTICATION, false] @TO@ MethodInvocation@@client.getParams().setBooleanParameter(ClientPNames.HANDLE_AUTHENTICATION,false) @AT@ 10719 @LENGTH@ 62
---------INS QualifiedName@@ClientPNames.HANDLE_AUTHENTICATION @TO@ SimpleName@@MethodName:setBooleanParameter:[ClientPNames.HANDLE_AUTHENTICATION, false] @AT@ 10739 @LENGTH@ 34
------------INS SimpleName@@ClientPNames @TO@ QualifiedName@@ClientPNames.HANDLE_AUTHENTICATION @AT@ 10739 @LENGTH@ 12
------------INS SimpleName@@HANDLE_AUTHENTICATION @TO@ QualifiedName@@ClientPNames.HANDLE_AUTHENTICATION @AT@ 10752 @LENGTH@ 21
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setBooleanParameter:[ClientPNames.HANDLE_AUTHENTICATION, false] @AT@ 10775 @LENGTH@ 5


UPD IfStatement@@if (step.getName().equals(stepName)) {  return step;} @TO@ if (step.getName().equals(stepName)) {  return step;} else if (step instanceof StepLocator) {  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @AT@ 2745 @LENGTH@ 60
---INS Block@@ElseBody:if (step instanceof StepLocator) {  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @TO@ IfStatement@@if (step.getName().equals(stepName)) {  return step;} @AT@ 2991 @LENGTH@ 146
------INS IfStatement@@if (step instanceof StepLocator) {  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @TO@ Block@@ElseBody:if (step instanceof StepLocator) {  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @AT@ 2991 @LENGTH@ 146
---------INS InstanceofExpression@@step instanceof StepLocator @TO@ IfStatement@@if (step instanceof StepLocator) {  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @AT@ 2994 @LENGTH@ 27
------------INS SimpleName@@step @TO@ InstanceofExpression@@step instanceof StepLocator @AT@ 2994 @LENGTH@ 4
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@step instanceof StepLocator @AT@ 2999 @LENGTH@ 10
------------INS SimpleType@@StepLocator @TO@ InstanceofExpression@@step instanceof StepLocator @AT@ 3010 @LENGTH@ 11
---------INS Block@@ThenBody:{  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @TO@ IfStatement@@if (step instanceof StepLocator) {  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @AT@ 3023 @LENGTH@ 114
------------INS VariableDeclarationStatement@@Step result=((StepLocator)step).getStep(stepName); @TO@ Block@@ThenBody:{  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @AT@ 3029 @LENGTH@ 52
---------------INS SimpleType@@Step @TO@ VariableDeclarationStatement@@Step result=((StepLocator)step).getStep(stepName); @AT@ 3029 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@result=((StepLocator)step).getStep(stepName) @TO@ VariableDeclarationStatement@@Step result=((StepLocator)step).getStep(stepName); @AT@ 3034 @LENGTH@ 46
------------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=((StepLocator)step).getStep(stepName) @AT@ 3034 @LENGTH@ 6
------------------INS MethodInvocation@@((StepLocator)step).getStep(stepName) @TO@ VariableDeclarationFragment@@result=((StepLocator)step).getStep(stepName) @AT@ 3043 @LENGTH@ 37
---------------------INS ParenthesizedExpression@@((StepLocator)step) @TO@ MethodInvocation@@((StepLocator)step).getStep(stepName) @AT@ 3043 @LENGTH@ 19
------------------------INS CastExpression@@(StepLocator)step @TO@ ParenthesizedExpression@@((StepLocator)step) @AT@ 3044 @LENGTH@ 17
---------------------------INS SimpleType@@StepLocator @TO@ CastExpression@@(StepLocator)step @AT@ 3045 @LENGTH@ 11
---------------------------INS SimpleName@@step @TO@ CastExpression@@(StepLocator)step @AT@ 3057 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getStep:[stepName] @TO@ MethodInvocation@@((StepLocator)step).getStep(stepName) @AT@ 3063 @LENGTH@ 17
------------------------INS SimpleName@@stepName @TO@ SimpleName@@MethodName:getStep:[stepName] @AT@ 3071 @LENGTH@ 8
------------INS IfStatement@@if (result != null) {  return result;} @TO@ Block@@ThenBody:{  Step result=((StepLocator)step).getStep(stepName);  if (result != null) {    return result;  }} @AT@ 3086 @LENGTH@ 46
---------------INS InfixExpression@@result != null @TO@ IfStatement@@if (result != null) {  return result;} @AT@ 3089 @LENGTH@ 14
------------------INS SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 3089 @LENGTH@ 6
------------------INS Operator@@!= @TO@ InfixExpression@@result != null @AT@ 3095 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 3099 @LENGTH@ 4
---------------INS Block@@ThenBody:{  return result;} @TO@ IfStatement@@if (result != null) {  return result;} @AT@ 3105 @LENGTH@ 27
------------------INS ReturnStatement@@SimpleName:result @TO@ Block@@ThenBody:{  return result;} @AT@ 3112 @LENGTH@ 14
---------------------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 3119 @LENGTH@ 6


UPD VariableDeclarationStatement@@PurchaseOrderType order=((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes("utf-8")))).getValue(); @TO@ PurchaseOrderType order=((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8)))).getValue(); @AT@ 3804 @LENGTH@ 143
---UPD VariableDeclarationFragment@@order=((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes("utf-8")))).getValue() @TO@ order=((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8)))).getValue() @AT@ 3822 @LENGTH@ 124
------UPD MethodInvocation@@((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes("utf-8")))).getValue() @TO@ ((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8)))).getValue() @AT@ 3830 @LENGTH@ 116
---------UPD ParenthesizedExpression@@((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes("utf-8")))) @TO@ ((JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8)))) @AT@ 3830 @LENGTH@ 105
------------UPD CastExpression@@(JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes("utf-8"))) @TO@ (JAXBElement<PurchaseOrderType>)unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8))) @AT@ 3831 @LENGTH@ 103
---------------UPD MethodInvocation@@unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes("utf-8"))) @TO@ unmarshaller.unmarshal(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8))) @AT@ 3863 @LENGTH@ 71
------------------UPD SimpleName@@MethodName:unmarshal:[new ByteArrayInputStream(xml.getBytes("utf-8"))] @TO@ MethodName:unmarshal:[new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8))] @AT@ 3876 @LENGTH@ 58
---------------------UPD ClassInstanceCreation@@ByteArrayInputStream[xml.getBytes("utf-8")] @TO@ ByteArrayInputStream[xml.getBytes(StandardCharsets.UTF_8)] @AT@ 3886 @LENGTH@ 47
------------------------UPD MethodInvocation@@xml.getBytes("utf-8") @TO@ xml.getBytes(StandardCharsets.UTF_8) @AT@ 3911 @LENGTH@ 21
---------------------------UPD SimpleName@@MethodName:getBytes:["utf-8"] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 3915 @LENGTH@ 17
------------------------------DEL StringLiteral@@"utf-8" @AT@ 3924 @LENGTH@ 7
------------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:["utf-8"] @AT@ 3966 @LENGTH@ 22
---------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3966 @LENGTH@ 16
---------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 3983 @LENGTH@ 5


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[public]ConcurrentContext,  @AT@ 10787 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 10787 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 10795 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 10802 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 10819 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 10855 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 10858 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 10858 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 10858 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 10865 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 10885 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 10889 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 10895 @LENGTH@ 77
---------INS ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 10909 @LENGTH@ 53
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 10916 @LENGTH@ 45
---------------INS SimpleName@@Name:CurrentServiceContainer @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 10916 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 10940 @LENGTH@ 21
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 10981 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 10988 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 10988 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 11005 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 11018 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 11018 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 11042 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:ctx.close() @TO@ MethodDeclaration@@public, void, MethodName:executePOC, Exception,  @AT@ 1546 @LENGTH@ 12
---INS MethodInvocation@@ctx.close() @TO@ ExpressionStatement@@MethodInvocation:ctx.close() @AT@ 1546 @LENGTH@ 11
------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.close() @AT@ 1546 @LENGTH@ 3
------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@ctx.close() @AT@ 1550 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, String, [PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>"] @TO@ TypeDeclaration@@[public]PluginTest, XmlTestCase @AT@ 3506 @LENGTH@ 491
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>"] @AT@ 3506 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>"] @AT@ 3514 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>"] @AT@ 3521 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>"] @AT@ 3527 @LENGTH@ 6
---INS VariableDeclarationFragment@@PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @TO@ FieldDeclaration@@private, static, final, String, [PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>"] @AT@ 3534 @LENGTH@ 462
------INS SimpleName@@PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY @TO@ VariableDeclarationFragment@@PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3534 @LENGTH@ 38
------INS InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @TO@ VariableDeclarationFragment@@PLUGIN_WITHOUT_VERSION_WITH_DEPENDENCY="<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3575 @LENGTH@ 421
---------INS InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3575 @LENGTH@ 174
------------INS StringLiteral@@"<plugin>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @AT@ 3575 @LENGTH@ 10
------------INS Operator@@+ @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @AT@ 3585 @LENGTH@ 1
------------INS StringLiteral@@"<groupId>com.example</groupId>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @AT@ 3600 @LENGTH@ 32
------------INS StringLiteral@@"<artifactId>ball-of-mud</artifactId>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @AT@ 3647 @LENGTH@ 38
------------INS StringLiteral@@"<dependencies>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @AT@ 3702 @LENGTH@ 16
------------INS StringLiteral@@"<dependency>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @AT@ 3721 @LENGTH@ 14
------------INS StringLiteral@@"<groupId>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" @AT@ 3738 @LENGTH@ 11
---------INS Operator@@+ @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3749 @LENGTH@ 1
---------INS SimpleName@@DEPENDENCY_GROUP_ID @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3764 @LENGTH@ 19
---------INS StringLiteral@@"</groupId>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3786 @LENGTH@ 12
---------INS StringLiteral@@"<artifactId>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3801 @LENGTH@ 14
---------INS SimpleName@@DEPENDENCY_ARTIFACT_ID @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3830 @LENGTH@ 22
---------INS StringLiteral@@"</artifactId>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3855 @LENGTH@ 15
---------INS StringLiteral@@"<version>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3873 @LENGTH@ 11
---------INS SimpleName@@DEPENDENCY_VERSION @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3899 @LENGTH@ 18
---------INS StringLiteral@@"</version>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3920 @LENGTH@ 12
---------INS StringLiteral@@"</dependency>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3935 @LENGTH@ 15
---------INS StringLiteral@@"</dependencies>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3965 @LENGTH@ 17
---------INS StringLiteral@@"</plugin>" @TO@ InfixExpression@@"<plugin>" + "<groupId>com.example</groupId>" + "<artifactId>ball-of-mud</artifactId>"+ "<dependencies>"+ "<dependency>"+ "<groupId>" + DEPENDENCY_GROUP_ID + "</groupId>"+ "<artifactId>"+ DEPENDENCY_ARTIFACT_ID+ "</artifactId>"+ "<version>"+ DEPENDENCY_VERSION+ "</version>"+ "</dependency>"+ "</dependencies>"+ "</plugin>" @AT@ 3985 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:watcher.addKey(((LongWritable)orc.getFieldValue(OrcRecordUpdater.ORIGINAL_TRANSACTION)).get(),((IntWritable)orc.getFieldValue(OrcRecordUpdater.BUCKET)).get(),((LongWritable)orc.getFieldValue(OrcRecordUpdater.ROW_ID)).get()) @TO@ MethodInvocation:watcher.addKey(((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)).get(),((LongWritable)orc.getFieldValue(OrcRecordUpdater.ORIGINAL_TRANSACTION)).get(),((IntWritable)orc.getFieldValue(OrcRecordUpdater.BUCKET)).get(),((LongWritable)orc.getFieldValue(OrcRecordUpdater.ROW_ID)).get()) @AT@ 11208 @LENGTH@ 282
---UPD MethodInvocation@@watcher.addKey(((LongWritable)orc.getFieldValue(OrcRecordUpdater.ORIGINAL_TRANSACTION)).get(),((IntWritable)orc.getFieldValue(OrcRecordUpdater.BUCKET)).get(),((LongWritable)orc.getFieldValue(OrcRecordUpdater.ROW_ID)).get()) @TO@ watcher.addKey(((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)).get(),((LongWritable)orc.getFieldValue(OrcRecordUpdater.ORIGINAL_TRANSACTION)).get(),((IntWritable)orc.getFieldValue(OrcRecordUpdater.BUCKET)).get(),((LongWritable)orc.getFieldValue(OrcRecordUpdater.ROW_ID)).get()) @AT@ 11208 @LENGTH@ 281
------UPD SimpleName@@MethodName:addKey:[((LongWritable)orc.getFieldValue(OrcRecordUpdater.ORIGINAL_TRANSACTION)).get(), ((IntWritable)orc.getFieldValue(OrcRecordUpdater.BUCKET)).get(), ((LongWritable)orc.getFieldValue(OrcRecordUpdater.ROW_ID)).get()] @TO@ MethodName:addKey:[((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)).get(), ((LongWritable)orc.getFieldValue(OrcRecordUpdater.ORIGINAL_TRANSACTION)).get(), ((IntWritable)orc.getFieldValue(OrcRecordUpdater.BUCKET)).get(), ((LongWritable)orc.getFieldValue(OrcRecordUpdater.ROW_ID)).get()] @AT@ 11216 @LENGTH@ 273
---------INS MethodInvocation@@((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)).get() @TO@ SimpleName@@MethodName:addKey:[((LongWritable)orc.getFieldValue(OrcRecordUpdater.ORIGINAL_TRANSACTION)).get(), ((IntWritable)orc.getFieldValue(OrcRecordUpdater.BUCKET)).get(), ((LongWritable)orc.getFieldValue(OrcRecordUpdater.ROW_ID)).get()] @AT@ 11236 @LENGTH@ 67
------------INS ParenthesizedExpression@@((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)) @TO@ MethodInvocation@@((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)).get() @AT@ 11236 @LENGTH@ 61
---------------INS CastExpression@@(IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION) @TO@ ParenthesizedExpression@@((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)) @AT@ 11237 @LENGTH@ 59
------------------INS SimpleType@@IntWritable @TO@ CastExpression@@(IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION) @AT@ 11238 @LENGTH@ 11
------------------INS MethodInvocation@@orc.getFieldValue(OrcRecordUpdater.OPERATION) @TO@ CastExpression@@(IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION) @AT@ 11251 @LENGTH@ 45
---------------------INS SimpleName@@Name:orc @TO@ MethodInvocation@@orc.getFieldValue(OrcRecordUpdater.OPERATION) @AT@ 11251 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getFieldValue:[OrcRecordUpdater.OPERATION] @TO@ MethodInvocation@@orc.getFieldValue(OrcRecordUpdater.OPERATION) @AT@ 11255 @LENGTH@ 41
------------------------INS QualifiedName@@OrcRecordUpdater.OPERATION @TO@ SimpleName@@MethodName:getFieldValue:[OrcRecordUpdater.OPERATION] @AT@ 11269 @LENGTH@ 26
---------------------------INS SimpleName@@OrcRecordUpdater @TO@ QualifiedName@@OrcRecordUpdater.OPERATION @AT@ 11269 @LENGTH@ 16
---------------------------INS SimpleName@@OPERATION @TO@ QualifiedName@@OrcRecordUpdater.OPERATION @AT@ 11286 @LENGTH@ 9
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@((IntWritable)orc.getFieldValue(OrcRecordUpdater.OPERATION)).get() @AT@ 11298 @LENGTH@ 5


INS MethodDeclaration@@void, MethodName:interruptedAwaitingFinalResponse, String operation, PathAddress proxyNodeAddress,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYCTL",length=4), public]ControllerLogger, [BasicLogger] @AT@ 136674 @LENGTH@ 81
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingFinalResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136669 @LENGTH@ 4
---INS SimpleName@@MethodName:interruptedAwaitingFinalResponse @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingFinalResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136674 @LENGTH@ 32
---INS SingleVariableDeclaration@@String operation @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingFinalResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136707 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String operation @AT@ 136707 @LENGTH@ 6
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@String operation @AT@ 136714 @LENGTH@ 9
---INS SingleVariableDeclaration@@PathAddress proxyNodeAddress @TO@ MethodDeclaration@@void, MethodName:interruptedAwaitingFinalResponse, String operation, PathAddress proxyNodeAddress,  @AT@ 136725 @LENGTH@ 28
------INS SimpleType@@PathAddress @TO@ SingleVariableDeclaration@@PathAddress proxyNodeAddress @AT@ 136725 @LENGTH@ 11
------INS SimpleName@@proxyNodeAddress @TO@ SingleVariableDeclaration@@PathAddress proxyNodeAddress @AT@ 136737 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 15455 @LENGTH@ 608
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15455 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15462 @LENGTH@ 4
---INS SimpleName@@MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15467 @LENGTH@ 74
---INS VariableDeclarationStatement@@BasicMongoPersistentEntity<?> persistentEntity=context.getPersistentEntity(Sample.class); @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15549 @LENGTH@ 91
------INS ParameterizedType@@BasicMongoPersistentEntity<?> @TO@ VariableDeclarationStatement@@BasicMongoPersistentEntity<?> persistentEntity=context.getPersistentEntity(Sample.class); @AT@ 15549 @LENGTH@ 29
---------INS SimpleType@@BasicMongoPersistentEntity @TO@ ParameterizedType@@BasicMongoPersistentEntity<?> @AT@ 15549 @LENGTH@ 26
---------INS WildcardType@@? @TO@ ParameterizedType@@BasicMongoPersistentEntity<?> @AT@ 15576 @LENGTH@ 1
------INS VariableDeclarationFragment@@persistentEntity=context.getPersistentEntity(Sample.class) @TO@ VariableDeclarationStatement@@BasicMongoPersistentEntity<?> persistentEntity=context.getPersistentEntity(Sample.class); @AT@ 15579 @LENGTH@ 60
---------INS SimpleName@@persistentEntity @TO@ VariableDeclarationFragment@@persistentEntity=context.getPersistentEntity(Sample.class) @AT@ 15579 @LENGTH@ 16
---------INS MethodInvocation@@context.getPersistentEntity(Sample.class) @TO@ VariableDeclarationFragment@@persistentEntity=context.getPersistentEntity(Sample.class) @AT@ 15598 @LENGTH@ 41
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(Sample.class) @AT@ 15598 @LENGTH@ 7
------------INS SimpleName@@MethodName:getPersistentEntity:[Sample.class] @TO@ MethodInvocation@@context.getPersistentEntity(Sample.class) @AT@ 15606 @LENGTH@ 33
---------------INS TypeLiteral@@Sample.class @TO@ SimpleName@@MethodName:getPersistentEntity:[Sample.class] @AT@ 15626 @LENGTH@ 12
---INS VariableDeclarationStatement@@String idPropertyName=persistentEntity.getIdProperty().getName(); @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15643 @LENGTH@ 67
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String idPropertyName=persistentEntity.getIdProperty().getName(); @AT@ 15643 @LENGTH@ 6
------INS VariableDeclarationFragment@@idPropertyName=persistentEntity.getIdProperty().getName() @TO@ VariableDeclarationStatement@@String idPropertyName=persistentEntity.getIdProperty().getName(); @AT@ 15650 @LENGTH@ 59
---------INS SimpleName@@idPropertyName @TO@ VariableDeclarationFragment@@idPropertyName=persistentEntity.getIdProperty().getName() @AT@ 15650 @LENGTH@ 14
---------INS MethodInvocation@@persistentEntity.getIdProperty().getName() @TO@ VariableDeclarationFragment@@idPropertyName=persistentEntity.getIdProperty().getName() @AT@ 15667 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@persistentEntity.getIdProperty().getName() @AT@ 15667 @LENGTH@ 32
------------INS SimpleName@@Name:persistentEntity @TO@ MethodInvocation@@persistentEntity.getIdProperty().getName() @AT@ 15667 @LENGTH@ 16
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@persistentEntity.getIdProperty().getName() @AT@ 15700 @LENGTH@ 9
---INS VariableDeclarationStatement@@DBObject queryObject=query(where(idPropertyName).in("42")).getQueryObject(); @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15713 @LENGTH@ 78
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject queryObject=query(where(idPropertyName).in("42")).getQueryObject(); @AT@ 15713 @LENGTH@ 8
------INS VariableDeclarationFragment@@queryObject=query(where(idPropertyName).in("42")).getQueryObject() @TO@ VariableDeclarationStatement@@DBObject queryObject=query(where(idPropertyName).in("42")).getQueryObject(); @AT@ 15722 @LENGTH@ 68
---------INS SimpleName@@queryObject @TO@ VariableDeclarationFragment@@queryObject=query(where(idPropertyName).in("42")).getQueryObject() @AT@ 15722 @LENGTH@ 11
---------INS MethodInvocation@@query(where(idPropertyName).in("42")).getQueryObject() @TO@ VariableDeclarationFragment@@queryObject=query(where(idPropertyName).in("42")).getQueryObject() @AT@ 15736 @LENGTH@ 54
------------INS MethodInvocation@@MethodName:query:[where(idPropertyName).in("42")] @TO@ MethodInvocation@@query(where(idPropertyName).in("42")).getQueryObject() @AT@ 15736 @LENGTH@ 37
---------------INS MethodInvocation@@where(idPropertyName).in("42") @TO@ MethodInvocation@@MethodName:query:[where(idPropertyName).in("42")] @AT@ 15742 @LENGTH@ 30
------------------INS MethodInvocation@@MethodName:where:[idPropertyName] @TO@ MethodInvocation@@where(idPropertyName).in("42") @AT@ 15742 @LENGTH@ 21
---------------------INS SimpleName@@idPropertyName @TO@ MethodInvocation@@MethodName:where:[idPropertyName] @AT@ 15748 @LENGTH@ 14
------------------INS SimpleName@@MethodName:in:["42"] @TO@ MethodInvocation@@where(idPropertyName).in("42") @AT@ 15764 @LENGTH@ 8
---------------------INS StringLiteral@@"42" @TO@ SimpleName@@MethodName:in:["42"] @AT@ 15767 @LENGTH@ 4
------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query(where(idPropertyName).in("42")).getQueryObject() @AT@ 15774 @LENGTH@ 16
---INS VariableDeclarationStatement@@Object idValuesBefore=getAsDBObject(queryObject,idPropertyName).get("$in"); @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15795 @LENGTH@ 78
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object idValuesBefore=getAsDBObject(queryObject,idPropertyName).get("$in"); @AT@ 15795 @LENGTH@ 6
------INS VariableDeclarationFragment@@idValuesBefore=getAsDBObject(queryObject,idPropertyName).get("$in") @TO@ VariableDeclarationStatement@@Object idValuesBefore=getAsDBObject(queryObject,idPropertyName).get("$in"); @AT@ 15802 @LENGTH@ 70
---------INS SimpleName@@idValuesBefore @TO@ VariableDeclarationFragment@@idValuesBefore=getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15802 @LENGTH@ 14
---------INS MethodInvocation@@getAsDBObject(queryObject,idPropertyName).get("$in") @TO@ VariableDeclarationFragment@@idValuesBefore=getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15819 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:getAsDBObject:[queryObject, idPropertyName] @TO@ MethodInvocation@@getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15819 @LENGTH@ 42
---------------INS SimpleName@@queryObject @TO@ MethodInvocation@@MethodName:getAsDBObject:[queryObject, idPropertyName] @AT@ 15833 @LENGTH@ 11
---------------INS SimpleName@@idPropertyName @TO@ MethodInvocation@@MethodName:getAsDBObject:[queryObject, idPropertyName] @AT@ 15846 @LENGTH@ 14
------------INS SimpleName@@MethodName:get:["$in"] @TO@ MethodInvocation@@getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15862 @LENGTH@ 10
---------------INS StringLiteral@@"$in" @TO@ SimpleName@@MethodName:get:["$in"] @AT@ 15866 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:mapper.getMappedObject(queryObject,persistentEntity) @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15876 @LENGTH@ 54
------INS MethodInvocation@@mapper.getMappedObject(queryObject,persistentEntity) @TO@ ExpressionStatement@@MethodInvocation:mapper.getMappedObject(queryObject,persistentEntity) @AT@ 15876 @LENGTH@ 53
---------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(queryObject,persistentEntity) @AT@ 15876 @LENGTH@ 6
---------INS SimpleName@@MethodName:getMappedObject:[queryObject, persistentEntity] @TO@ MethodInvocation@@mapper.getMappedObject(queryObject,persistentEntity) @AT@ 15883 @LENGTH@ 46
------------INS SimpleName@@queryObject @TO@ SimpleName@@MethodName:getMappedObject:[queryObject, persistentEntity] @AT@ 15899 @LENGTH@ 11
------------INS SimpleName@@persistentEntity @TO@ SimpleName@@MethodName:getMappedObject:[queryObject, persistentEntity] @AT@ 15912 @LENGTH@ 16
---INS VariableDeclarationStatement@@Object idValuesAfter=getAsDBObject(queryObject,idPropertyName).get("$in"); @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 15933 @LENGTH@ 77
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object idValuesAfter=getAsDBObject(queryObject,idPropertyName).get("$in"); @AT@ 15933 @LENGTH@ 6
------INS VariableDeclarationFragment@@idValuesAfter=getAsDBObject(queryObject,idPropertyName).get("$in") @TO@ VariableDeclarationStatement@@Object idValuesAfter=getAsDBObject(queryObject,idPropertyName).get("$in"); @AT@ 15940 @LENGTH@ 69
---------INS SimpleName@@idValuesAfter @TO@ VariableDeclarationFragment@@idValuesAfter=getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15940 @LENGTH@ 13
---------INS MethodInvocation@@getAsDBObject(queryObject,idPropertyName).get("$in") @TO@ VariableDeclarationFragment@@idValuesAfter=getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15956 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:getAsDBObject:[queryObject, idPropertyName] @TO@ MethodInvocation@@getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15956 @LENGTH@ 42
---------------INS SimpleName@@queryObject @TO@ MethodInvocation@@MethodName:getAsDBObject:[queryObject, idPropertyName] @AT@ 15970 @LENGTH@ 11
---------------INS SimpleName@@idPropertyName @TO@ MethodInvocation@@MethodName:getAsDBObject:[queryObject, idPropertyName] @AT@ 15983 @LENGTH@ 14
------------INS SimpleName@@MethodName:get:["$in"] @TO@ MethodInvocation@@getAsDBObject(queryObject,idPropertyName).get("$in") @AT@ 15999 @LENGTH@ 10
---------------INS StringLiteral@@"$in" @TO@ SimpleName@@MethodName:get:["$in"] @AT@ 16003 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(idValuesAfter,is(idValuesBefore)) @TO@ MethodDeclaration@@public, void, MethodName:queryMapperShouldNotChangeStateInGivenQueryObjectWhenIdConstrainedByInList,  @AT@ 16014 @LENGTH@ 46
------INS MethodInvocation@@assertThat(idValuesAfter,is(idValuesBefore)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(idValuesAfter,is(idValuesBefore)) @AT@ 16014 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[idValuesAfter, is(idValuesBefore)] @TO@ MethodInvocation@@assertThat(idValuesAfter,is(idValuesBefore)) @AT@ 16014 @LENGTH@ 45
------------INS SimpleName@@idValuesAfter @TO@ SimpleName@@MethodName:assertThat:[idValuesAfter, is(idValuesBefore)] @AT@ 16025 @LENGTH@ 13
------------INS MethodInvocation@@is(idValuesBefore) @TO@ SimpleName@@MethodName:assertThat:[idValuesAfter, is(idValuesBefore)] @AT@ 16040 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[idValuesBefore] @TO@ MethodInvocation@@is(idValuesBefore) @AT@ 16040 @LENGTH@ 18
------------------INS SimpleName@@idValuesBefore @TO@ SimpleName@@MethodName:is:[idValuesBefore] @AT@ 16043 @LENGTH@ 14


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]HostConfig,  @TO@ [@Data, public]HostConfig, AbstractDockerDTO @AT@ 834 @LENGTH@ 340
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]HostConfig,  @AT@ 793 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 840 @LENGTH@ 47


UPD TypeDeclaration@@[public]WebsocketConstants,  @TO@ [public, final]WebsocketConstants,  @AT@ 81 @LENGTH@ 178
---INS Modifier@@final @TO@ TypeDeclaration@@[public]WebsocketConstants,  @AT@ 880 @LENGTH@ 5


UPD IfStatement@@if (refreshToken != null) {  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @TO@ if (refreshToken != null) {  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  encodedRefreshToken.setValue(refreshToken.getValue());  Map<String,Object> refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation());  refreshTokenInfo.put(TOKEN_ID,encodedRefreshToken.getValue());  encodedRefreshToken.setAdditionalInformation(refreshTokenInfo);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @AT@ 6497 @LENGTH@ 579
---UPD Block@@ThenBody:{  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @TO@ ThenBody:{  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  encodedRefreshToken.setValue(refreshToken.getValue());  Map<String,Object> refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation());  refreshTokenInfo.put(TOKEN_ID,encodedRefreshToken.getValue());  encodedRefreshToken.setAdditionalInformation(refreshTokenInfo);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @AT@ 6523 @LENGTH@ 553
------INS ExpressionStatement@@MethodInvocation:encodedRefreshToken.setValue(refreshToken.getValue()) @TO@ Block@@ThenBody:{  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @AT@ 6621 @LENGTH@ 54
---------INS MethodInvocation@@encodedRefreshToken.setValue(refreshToken.getValue()) @TO@ ExpressionStatement@@MethodInvocation:encodedRefreshToken.setValue(refreshToken.getValue()) @AT@ 6621 @LENGTH@ 53
------------INS SimpleName@@Name:encodedRefreshToken @TO@ MethodInvocation@@encodedRefreshToken.setValue(refreshToken.getValue()) @AT@ 6621 @LENGTH@ 19
------------INS SimpleName@@MethodName:setValue:[refreshToken.getValue()] @TO@ MethodInvocation@@encodedRefreshToken.setValue(refreshToken.getValue()) @AT@ 6641 @LENGTH@ 33
---------------INS MethodInvocation@@refreshToken.getValue() @TO@ SimpleName@@MethodName:setValue:[refreshToken.getValue()] @AT@ 6650 @LENGTH@ 23
------------------INS SimpleName@@Name:refreshToken @TO@ MethodInvocation@@refreshToken.getValue() @AT@ 6650 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@refreshToken.getValue() @AT@ 6663 @LENGTH@ 10
------INS VariableDeclarationStatement@@Map<String,Object> refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation()); @TO@ Block@@ThenBody:{  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @AT@ 6679 @LENGTH@ 113
---------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation()); @AT@ 6679 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 6679 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 6683 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 6691 @LENGTH@ 6
---------INS VariableDeclarationFragment@@refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation()) @TO@ VariableDeclarationStatement@@Map<String,Object> refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation()); @AT@ 6699 @LENGTH@ 92
------------INS SimpleName@@refreshTokenInfo @TO@ VariableDeclarationFragment@@refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation()) @AT@ 6699 @LENGTH@ 16
------------INS ClassInstanceCreation@@LinkedHashMap<String,Object>[accessToken.getAdditionalInformation()] @TO@ VariableDeclarationFragment@@refreshTokenInfo=new LinkedHashMap<String,Object>(accessToken.getAdditionalInformation()) @AT@ 6718 @LENGTH@ 73
---------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<String,Object>[accessToken.getAdditionalInformation()] @AT@ 6718 @LENGTH@ 3
---------------INS ParameterizedType@@LinkedHashMap<String,Object> @TO@ ClassInstanceCreation@@LinkedHashMap<String,Object>[accessToken.getAdditionalInformation()] @AT@ 6722 @LENGTH@ 29
------------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 6722 @LENGTH@ 13
------------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 6736 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@LinkedHashMap<String,Object> @AT@ 6744 @LENGTH@ 6
---------------INS MethodInvocation@@accessToken.getAdditionalInformation() @TO@ ClassInstanceCreation@@LinkedHashMap<String,Object>[accessToken.getAdditionalInformation()] @AT@ 6752 @LENGTH@ 38
------------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getAdditionalInformation() @AT@ 6752 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getAdditionalInformation:[] @TO@ MethodInvocation@@accessToken.getAdditionalInformation() @AT@ 6764 @LENGTH@ 26
------INS ExpressionStatement@@MethodInvocation:refreshTokenInfo.put(TOKEN_ID,encodedRefreshToken.getValue()) @TO@ Block@@ThenBody:{  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @AT@ 6796 @LENGTH@ 63
---------INS MethodInvocation@@refreshTokenInfo.put(TOKEN_ID,encodedRefreshToken.getValue()) @TO@ ExpressionStatement@@MethodInvocation:refreshTokenInfo.put(TOKEN_ID,encodedRefreshToken.getValue()) @AT@ 6796 @LENGTH@ 62
------------INS SimpleName@@Name:refreshTokenInfo @TO@ MethodInvocation@@refreshTokenInfo.put(TOKEN_ID,encodedRefreshToken.getValue()) @AT@ 6796 @LENGTH@ 16
------------INS SimpleName@@MethodName:put:[TOKEN_ID, encodedRefreshToken.getValue()] @TO@ MethodInvocation@@refreshTokenInfo.put(TOKEN_ID,encodedRefreshToken.getValue()) @AT@ 6813 @LENGTH@ 45
---------------INS SimpleName@@TOKEN_ID @TO@ SimpleName@@MethodName:put:[TOKEN_ID, encodedRefreshToken.getValue()] @AT@ 6817 @LENGTH@ 8
---------------INS MethodInvocation@@encodedRefreshToken.getValue() @TO@ SimpleName@@MethodName:put:[TOKEN_ID, encodedRefreshToken.getValue()] @AT@ 6827 @LENGTH@ 30
------------------INS SimpleName@@Name:encodedRefreshToken @TO@ MethodInvocation@@encodedRefreshToken.getValue() @AT@ 6827 @LENGTH@ 19
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@encodedRefreshToken.getValue() @AT@ 6847 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:encodedRefreshToken.setAdditionalInformation(refreshTokenInfo) @TO@ Block@@ThenBody:{  DefaultOAuth2AccessToken encodedRefreshToken=new DefaultOAuth2AccessToken(accessToken);  DefaultOAuth2RefreshToken token=new DefaultOAuth2RefreshToken(encode(encodedRefreshToken,authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    Date expiration=((ExpiringOAuth2RefreshToken)refreshToken).getExpiration();    encodedRefreshToken.setExpiration(expiration);    token=new DefaultExpiringOAuth2RefreshToken(encode(encodedRefreshToken,authentication),expiration);  }  result.setRefreshToken(token);} @AT@ 6863 @LENGTH@ 63
---------INS MethodInvocation@@encodedRefreshToken.setAdditionalInformation(refreshTokenInfo) @TO@ ExpressionStatement@@MethodInvocation:encodedRefreshToken.setAdditionalInformation(refreshTokenInfo) @AT@ 6863 @LENGTH@ 62
------------INS SimpleName@@Name:encodedRefreshToken @TO@ MethodInvocation@@encodedRefreshToken.setAdditionalInformation(refreshTokenInfo) @AT@ 6863 @LENGTH@ 19
------------INS SimpleName@@MethodName:setAdditionalInformation:[refreshTokenInfo] @TO@ MethodInvocation@@encodedRefreshToken.setAdditionalInformation(refreshTokenInfo) @AT@ 6883 @LENGTH@ 42
---------------INS SimpleName@@refreshTokenInfo @TO@ SimpleName@@MethodName:setAdditionalInformation:[refreshTokenInfo] @AT@ 6908 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:assertTrue(1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis()) @TO@ MethodDeclaration@@public, void, MethodName:testDefaultTokenExpiry, Exception,  @AT@ 7280 @LENGTH@ 148
---INS MethodInvocation@@assertTrue(1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis()) @AT@ 7280 @LENGTH@ 147
------INS SimpleName@@MethodName:assertTrue:[1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis()] @TO@ MethodInvocation@@assertTrue(1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis()) @AT@ 7280 @LENGTH@ 147
---------INS InfixExpression@@1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @TO@ SimpleName@@MethodName:assertTrue:[1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis()] @AT@ 7291 @LENGTH@ 135
------------INS InfixExpression@@1000 * 1000 @TO@ InfixExpression@@1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @AT@ 7291 @LENGTH@ 11
---------------INS NumberLiteral@@1000 @TO@ InfixExpression@@1000 * 1000 @AT@ 7291 @LENGTH@ 4
---------------INS Operator@@* @TO@ InfixExpression@@1000 * 1000 @AT@ 7295 @LENGTH@ 1
---------------INS NumberLiteral@@1000 @TO@ InfixExpression@@1000 * 1000 @AT@ 7298 @LENGTH@ 4
------------INS Operator@@>= @TO@ InfixExpression@@1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @AT@ 7302 @LENGTH@ 2
------------INS InfixExpression@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @TO@ InfixExpression@@1000 * 1000 >= ((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @AT@ 7306 @LENGTH@ 120
---------------INS MethodInvocation@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() @TO@ InfixExpression@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @AT@ 7306 @LENGTH@ 91
------------------INS MethodInvocation@@MethodName:getExpiration:[] @TO@ MethodInvocation@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() @AT@ 7306 @LENGTH@ 76
------------------INS ParenthesizedExpression@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()) @TO@ MethodInvocation@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() @AT@ 7306 @LENGTH@ 60
---------------------INS CastExpression@@(ExpiringOAuth2RefreshToken)accessToken.getRefreshToken() @TO@ ParenthesizedExpression@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()) @AT@ 7307 @LENGTH@ 58
------------------------INS SimpleType@@ExpiringOAuth2RefreshToken @TO@ CastExpression@@(ExpiringOAuth2RefreshToken)accessToken.getRefreshToken() @AT@ 7308 @LENGTH@ 26
------------------------INS MethodInvocation@@accessToken.getRefreshToken() @TO@ CastExpression@@(ExpiringOAuth2RefreshToken)accessToken.getRefreshToken() @AT@ 7336 @LENGTH@ 29
---------------------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 7336 @LENGTH@ 11
---------------------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 7348 @LENGTH@ 17
------------------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() @AT@ 7388 @LENGTH@ 9
---------------INS Operator@@- @TO@ InfixExpression@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @AT@ 7397 @LENGTH@ 1
---------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@((ExpiringOAuth2RefreshToken)accessToken.getRefreshToken()).getExpiration().getTime() - System.currentTimeMillis() @AT@ 7400 @LENGTH@ 26
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 7400 @LENGTH@ 6
------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 7407 @LENGTH@ 19


UPD ExpressionStatement@@Assignment:delegate=findDelegate(name) @TO@ Assignment:delegate=findDelegateForNewObject(name) @AT@ 11724 @LENGTH@ 30
---UPD Assignment@@delegate=findDelegate(name) @TO@ delegate=findDelegateForNewObject(name) @AT@ 11724 @LENGTH@ 29
------UPD MethodInvocation@@findDelegate(name) @TO@ findDelegateForNewObject(name) @AT@ 11735 @LENGTH@ 18
---------UPD SimpleName@@MethodName:findDelegate:[name] @TO@ MethodName:findDelegateForNewObject:[name] @AT@ 11735 @LENGTH@ 18


DEL MethodDeclaration@@NameValidator, MethodName:createNameValidator, CreateDockerContainerOptions options,  @AT@ 10398 @LENGTH@ 252
---DEL SimpleType@@NameValidator @AT@ 10384 @LENGTH@ 13
---DEL SimpleName@@MethodName:createNameValidator @AT@ 10398 @LENGTH@ 19
---DEL SingleVariableDeclaration@@CreateDockerContainerOptions options @AT@ 10418 @LENGTH@ 36
------DEL SimpleType@@CreateDockerContainerOptions @AT@ 10418 @LENGTH@ 28
------DEL SimpleName@@options @AT@ 10447 @LENGTH@ 7
---DEL ReturnStatement@@ClassInstanceCreation:new NameValidator(){
  @Override public boolean isValid(  String name){
    return true;
  }
}
 @AT@ 10466 @LENGTH@ 178
------DEL ClassInstanceCreation@@NameValidator[] @AT@ 10473 @LENGTH@ 170
---------DEL New@@new @AT@ 10473 @LENGTH@ 3
---------DEL SimpleType@@NameValidator @AT@ 10477 @LENGTH@ 13
---------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 10493 @LENGTH@ 150
------------DEL MethodDeclaration@@public, boolean, MethodName:isValid, String name,  @AT@ 10529 @LENGTH@ 104
---------------DEL Modifier@@public @AT@ 10529 @LENGTH@ 6
---------------DEL PrimitiveType@@boolean @AT@ 10536 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:isValid @AT@ 10544 @LENGTH@ 7
---------------DEL SingleVariableDeclaration@@String name @AT@ 10552 @LENGTH@ 11
------------------DEL SimpleType@@String @AT@ 10552 @LENGTH@ 6
------------------DEL SimpleName@@name @AT@ 10559 @LENGTH@ 4
---------------DEL ReturnStatement@@BooleanLiteral:true @AT@ 10607 @LENGTH@ 12
------------------DEL BooleanLiteral@@true @AT@ 10614 @LENGTH@ 4


UPD VariableDeclarationStatement@@File mainJar=getFile(mainJarDependency); @TO@ File mainJar=mavenResolver.resolveArtifact(parameters.isOffline(),mainPomArtifact.getGroupId(),mainPomArtifact.getArtifactId(),mainPomArtifact.getVersion(),mainPomArtifact.getClassifier(),"jar").getFile(); @AT@ 2770 @LENGTH@ 42
---UPD VariableDeclarationFragment@@mainJar=getFile(mainJarDependency) @TO@ mainJar=mavenResolver.resolveArtifact(parameters.isOffline(),mainPomArtifact.getGroupId(),mainPomArtifact.getArtifactId(),mainPomArtifact.getVersion(),mainPomArtifact.getClassifier(),"jar").getFile() @AT@ 2775 @LENGTH@ 36
------UPD MethodInvocation@@getFile(mainJarDependency) @TO@ mavenResolver.resolveArtifact(parameters.isOffline(),mainPomArtifact.getGroupId(),mainPomArtifact.getArtifactId(),mainPomArtifact.getVersion(),mainPomArtifact.getClassifier(),"jar").getFile() @AT@ 2785 @LENGTH@ 26
---------UPD SimpleName@@MethodName:getFile:[mainJarDependency] @TO@ MethodName:getFile:[] @AT@ 2785 @LENGTH@ 26
------------DEL SimpleName@@mainJarDependency @AT@ 2793 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:resolveArtifact:[parameters.isOffline(), mainPomArtifact.getGroupId(), mainPomArtifact.getArtifactId(), mainPomArtifact.getVersion(), mainPomArtifact.getClassifier(), "jar"] @TO@ MethodInvocation@@getFile(mainJarDependency) @AT@ 2869 @LENGTH@ 218
------------INS MethodInvocation@@parameters.isOffline() @TO@ MethodInvocation@@MethodName:resolveArtifact:[parameters.isOffline(), mainPomArtifact.getGroupId(), mainPomArtifact.getArtifactId(), mainPomArtifact.getVersion(), mainPomArtifact.getClassifier(), "jar"] @AT@ 2899 @LENGTH@ 22
---------------INS SimpleName@@Name:parameters @TO@ MethodInvocation@@parameters.isOffline() @AT@ 2899 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isOffline:[] @TO@ MethodInvocation@@parameters.isOffline() @AT@ 2910 @LENGTH@ 11
------------INS MethodInvocation@@mainPomArtifact.getGroupId() @TO@ MethodInvocation@@MethodName:resolveArtifact:[parameters.isOffline(), mainPomArtifact.getGroupId(), mainPomArtifact.getArtifactId(), mainPomArtifact.getVersion(), mainPomArtifact.getClassifier(), "jar"] @AT@ 2939 @LENGTH@ 28
---------------INS SimpleName@@Name:mainPomArtifact @TO@ MethodInvocation@@mainPomArtifact.getGroupId() @AT@ 2939 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getGroupId:[] @TO@ MethodInvocation@@mainPomArtifact.getGroupId() @AT@ 2955 @LENGTH@ 12
------------INS MethodInvocation@@mainPomArtifact.getArtifactId() @TO@ MethodInvocation@@MethodName:resolveArtifact:[parameters.isOffline(), mainPomArtifact.getGroupId(), mainPomArtifact.getArtifactId(), mainPomArtifact.getVersion(), mainPomArtifact.getClassifier(), "jar"] @AT@ 2969 @LENGTH@ 31
---------------INS SimpleName@@Name:mainPomArtifact @TO@ MethodInvocation@@mainPomArtifact.getArtifactId() @AT@ 2969 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getArtifactId:[] @TO@ MethodInvocation@@mainPomArtifact.getArtifactId() @AT@ 2985 @LENGTH@ 15
------------INS MethodInvocation@@mainPomArtifact.getVersion() @TO@ MethodInvocation@@MethodName:resolveArtifact:[parameters.isOffline(), mainPomArtifact.getGroupId(), mainPomArtifact.getArtifactId(), mainPomArtifact.getVersion(), mainPomArtifact.getClassifier(), "jar"] @AT@ 3018 @LENGTH@ 28
---------------INS SimpleName@@Name:mainPomArtifact @TO@ MethodInvocation@@mainPomArtifact.getVersion() @AT@ 3018 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@mainPomArtifact.getVersion() @AT@ 3034 @LENGTH@ 12
------------INS MethodInvocation@@mainPomArtifact.getClassifier() @TO@ MethodInvocation@@MethodName:resolveArtifact:[parameters.isOffline(), mainPomArtifact.getGroupId(), mainPomArtifact.getArtifactId(), mainPomArtifact.getVersion(), mainPomArtifact.getClassifier(), "jar"] @AT@ 3048 @LENGTH@ 31
---------------INS SimpleName@@Name:mainPomArtifact @TO@ MethodInvocation@@mainPomArtifact.getClassifier() @AT@ 3048 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getClassifier:[] @TO@ MethodInvocation@@mainPomArtifact.getClassifier() @AT@ 3064 @LENGTH@ 15
------------INS StringLiteral@@"jar" @TO@ MethodInvocation@@MethodName:resolveArtifact:[parameters.isOffline(), mainPomArtifact.getGroupId(), mainPomArtifact.getArtifactId(), mainPomArtifact.getVersion(), mainPomArtifact.getClassifier(), "jar"] @AT@ 3081 @LENGTH@ 5
---------INS SimpleName@@Name:mavenResolver @TO@ MethodInvocation@@getFile(mainJarDependency) @AT@ 2869 @LENGTH@ 13


UPD ReturnStatement@@SimpleName:declaredAccessableFields @TO@ SimpleName:declaredAccessibleFields @AT@ 2345 @LENGTH@ 32
---UPD SimpleName@@declaredAccessableFields @TO@ declaredAccessibleFields @AT@ 2352 @LENGTH@ 24


UPD ReturnStatement@@MethodInvocation:String.format("Point [x=%f, y=%f]",x,y) @TO@ MethodInvocation:String.format(Locale.ENGLISH,"Point [x=%f, y=%f]",x,y) @AT@ 2681 @LENGTH@ 49
---UPD MethodInvocation@@String.format("Point [x=%f, y=%f]",x,y) @TO@ String.format(Locale.ENGLISH,"Point [x=%f, y=%f]",x,y) @AT@ 2688 @LENGTH@ 41
------UPD SimpleName@@MethodName:format:["Point [x=%f, y=%f]", x, y] @TO@ MethodName:format:[Locale.ENGLISH, "Point [x=%f, y=%f]", x, y] @AT@ 2695 @LENGTH@ 34
---------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:format:["Point [x=%f, y=%f]", x, y] @AT@ 2730 @LENGTH@ 14
------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2730 @LENGTH@ 6
------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2737 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, String, [TEST_DATA_DIR=System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @TO@ private, static, final, String, [TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis())] @AT@ 2289 @LENGTH@ 181
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @TO@ TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 2317 @LENGTH@ 152
------INS MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @TO@ VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 2382 @LENGTH@ 191
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 2382 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 2391 @LENGTH@ 182
------------MOV InfixExpression@@System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @TO@ SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @AT@ 2333 @LENGTH@ 136


UPD FieldDeclaration@@private, String, [peerNodeName] @TO@ private, final, String, [peerNodeName] @AT@ 3728 @LENGTH@ 28
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [peerNodeName] @AT@ 3743 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:this.delegate=Collections.emptyIterator() @TO@ Assignment:this.delegate=Collections.<T>emptyList().iterator() @AT@ 2299 @LENGTH@ 44
---UPD Assignment@@this.delegate=Collections.emptyIterator() @TO@ this.delegate=Collections.<T>emptyList().iterator() @AT@ 2299 @LENGTH@ 43
------UPD MethodInvocation@@Collections.emptyIterator() @TO@ Collections.<T>emptyList().iterator() @AT@ 2315 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyIterator() @AT@ 2315 @LENGTH@ 27
---------UPD SimpleName@@MethodName:emptyIterator:[] @TO@ MethodName:iterator:[] @AT@ 2327 @LENGTH@ 15


UPD TryStatement@@try {  Result result=null;  if (isInputStreamNeeded(exchange)) {    is=getContentToValidate(exchange,InputStream.class);    if (is != null) {      source=getSource(exchange,is);    }  } else {    Object content=getContentToValidate(exchange);    if (content != null) {      source=getSource(exchange,content);    }  }  if (shouldUseHeader()) {    if (source == null && isFailOnNullHeader()) {      throw new NoXmlHeaderValidationException(exchange,headerName);    }  } else {    if (source == null && isFailOnNullBody()) {      throw new NoXmlBodyValidationException(exchange);    }  }  if (source instanceof DOMSource) {    result=new DOMResult();  } else   if (source instanceof StreamSource) {    result=new StreamResult(new StringWriter());  } else   if (source instanceof SAXSource) {    result=new SAXResult();  } else   if (source instanceof StAXSource) {    result=null;  }  if (source != null) {    ValidatorErrorHandler handler=errorHandler.getClass().newInstance();    validator.setErrorHandler(handler);    try {      LOG.trace("Validating {}",source);      validator.validate(source,result);      handler.handleErrors(exchange,schema,result);    } catch (    SAXParseException e) {      throw new SchemaValidationException(exchange,schema,Collections.singletonList(e),Collections.<SAXParseException>emptyList(),Collections.<SAXParseException>emptyList());    }  }}  finally {  IOHelper.close(is);} @TO@ try {  Result result=null;  if (isInputStreamNeeded(exchange)) {    is=getContentToValidate(exchange,InputStream.class);    if (is != null) {      source=getSource(exchange,is);    }  } else {    Object content=getContentToValidate(exchange);    if (content != null) {      source=getSource(exchange,content);    }  }  if (shouldUseHeader()) {    if (source == null && isFailOnNullHeader()) {      throw new NoXmlHeaderValidationException(exchange,headerName);    }  } else {    if (source == null && isFailOnNullBody()) {      throw new NoXmlBodyValidationException(exchange);    }  }  if (source instanceof DOMSource) {    result=new DOMResult();  } else   if (source instanceof SAXSource) {    result=new SAXResult();  } else   if (source instanceof StAXSource || source instanceof StreamSource) {    result=null;  }  if (source != null) {    ValidatorErrorHandler handler=errorHandler.getClass().newInstance();    validator.setErrorHandler(handler);    try {      LOG.trace("Validating {}",source);      validator.validate(source,result);      handler.handleErrors(exchange,schema,result);    } catch (    SAXParseException e) {      throw new SchemaValidationException(exchange,schema,Collections.singletonList(e),Collections.<SAXParseException>emptyList(),Collections.<SAXParseException>emptyList());    }  }}  finally {  IOHelper.close(is);} @AT@ 3988 @LENGTH@ 2354
---DEL IfStatement@@if (source instanceof DOMSource) {  result=new DOMResult();} else if (source instanceof StreamSource) {  result=new StreamResult(new StringWriter());} else if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource) {  result=null;} @AT@ 4930 @LENGTH@ 392
------DEL InstanceofExpression@@source instanceof DOMSource @AT@ 4934 @LENGTH@ 27
---------DEL SimpleName@@source @AT@ 4934 @LENGTH@ 6
---------DEL Instanceof@@instanceof @AT@ 4941 @LENGTH@ 10
---------DEL SimpleType@@DOMSource @AT@ 4952 @LENGTH@ 9
------DEL Block@@ElseBody:if (source instanceof StreamSource) {  result=new StreamResult(new StringWriter());} else if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource) {  result=null;} @AT@ 5026 @LENGTH@ 296
---MOV IfStatement@@if (source instanceof StreamSource) {  result=new StreamResult(new StringWriter());} else if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource) {  result=null;} @TO@ TryStatement@@try {  Result result=null;  if (isInputStreamNeeded(exchange)) {    is=getContentToValidate(exchange,InputStream.class);    if (is != null) {      source=getSource(exchange,is);    }  } else {    Object content=getContentToValidate(exchange);    if (content != null) {      source=getSource(exchange,content);    }  }  if (shouldUseHeader()) {    if (source == null && isFailOnNullHeader()) {      throw new NoXmlHeaderValidationException(exchange,headerName);    }  } else {    if (source == null && isFailOnNullBody()) {      throw new NoXmlBodyValidationException(exchange);    }  }  if (source instanceof DOMSource) {    result=new DOMResult();  } else   if (source instanceof StreamSource) {    result=new StreamResult(new StringWriter());  } else   if (source instanceof SAXSource) {    result=new SAXResult();  } else   if (source instanceof StAXSource) {    result=null;  }  if (source != null) {    ValidatorErrorHandler handler=errorHandler.getClass().newInstance();    validator.setErrorHandler(handler);    try {      LOG.trace("Validating {}",source);      validator.validate(source,result);      handler.handleErrors(exchange,schema,result);    } catch (    SAXParseException e) {      throw new SchemaValidationException(exchange,schema,Collections.singletonList(e),Collections.<SAXParseException>emptyList(),Collections.<SAXParseException>emptyList());    }  }}  finally {  IOHelper.close(is);} @AT@ 5026 @LENGTH@ 296
------MOV Block@@ThenBody:{  result=new DOMResult();} @TO@ IfStatement@@if (source instanceof StreamSource) {  result=new StreamResult(new StringWriter());} else if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource) {  result=null;} @AT@ 4963 @LENGTH@ 57
------UPD InstanceofExpression@@source instanceof StreamSource @TO@ source instanceof DOMSource @AT@ 5030 @LENGTH@ 30
---------UPD SimpleType@@StreamSource @TO@ DOMSource @AT@ 5048 @LENGTH@ 12
------DEL Block@@ThenBody:{  result=new StreamResult(new StringWriter());} @AT@ 5062 @LENGTH@ 78
---------DEL ExpressionStatement@@Assignment:result=new StreamResult(new StringWriter()) @AT@ 5080 @LENGTH@ 46
------------DEL Assignment@@result=new StreamResult(new StringWriter()) @AT@ 5080 @LENGTH@ 45
---------------DEL SimpleName@@result @AT@ 5080 @LENGTH@ 6
---------------DEL Operator@@= @AT@ 5086 @LENGTH@ 1
---------------DEL ClassInstanceCreation@@StreamResult[new StringWriter()] @AT@ 5089 @LENGTH@ 36
------------------DEL New@@new @AT@ 5089 @LENGTH@ 3
------------------DEL SimpleType@@StreamResult @AT@ 5093 @LENGTH@ 12
------------------DEL ClassInstanceCreation@@StringWriter[] @AT@ 5106 @LENGTH@ 18
---------------------DEL New@@new @AT@ 5106 @LENGTH@ 3
---------------------DEL SimpleType@@StringWriter @AT@ 5110 @LENGTH@ 12
------UPD Block@@ElseBody:if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource) {  result=null;} @TO@ ElseBody:if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource || source instanceof StreamSource) {  result=null;} @AT@ 5146 @LENGTH@ 176
---------UPD IfStatement@@if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource) {  result=null;} @TO@ if (source instanceof SAXSource) {  result=new SAXResult();} else if (source instanceof StAXSource || source instanceof StreamSource) {  result=null;} @AT@ 5146 @LENGTH@ 176
------------UPD Block@@ElseBody:if (source instanceof StAXSource) {  result=null;} @TO@ ElseBody:if (source instanceof StAXSource || source instanceof StreamSource) {  result=null;} @AT@ 5242 @LENGTH@ 80
---------------UPD IfStatement@@if (source instanceof StAXSource) {  result=null;} @TO@ if (source instanceof StAXSource || source instanceof StreamSource) {  result=null;} @AT@ 5242 @LENGTH@ 80
------------------INS InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @TO@ IfStatement@@if (source instanceof StAXSource) {  result=null;} @AT@ 5228 @LENGTH@ 62
---------------------INS InstanceofExpression@@source instanceof StAXSource @TO@ InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @AT@ 5228 @LENGTH@ 28
------------------------MOV SimpleName@@source @TO@ InstanceofExpression@@source instanceof StAXSource @AT@ 5246 @LENGTH@ 6
------------------------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof StAXSource @AT@ 5253 @LENGTH@ 10
------------------------MOV SimpleType@@StAXSource @TO@ InstanceofExpression@@source instanceof StAXSource @AT@ 5264 @LENGTH@ 10
---------------------INS Operator@@|| @TO@ InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @AT@ 5256 @LENGTH@ 2
---------------------INS InstanceofExpression@@source instanceof StreamSource @TO@ InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @AT@ 5260 @LENGTH@ 30
------------------------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof StreamSource @AT@ 5260 @LENGTH@ 6
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof StreamSource @AT@ 5267 @LENGTH@ 10
------------------------INS SimpleType@@StreamSource @TO@ InstanceofExpression@@source instanceof StreamSource @AT@ 5278 @LENGTH@ 12
------------------DEL InstanceofExpression@@source instanceof StAXSource @AT@ 5246 @LENGTH@ 28
---------------UPD IfStatement@@if (source instanceof StAXSource) {  result=null;} @TO@ if (source instanceof StAXSource || source instanceof StreamSource) {  result=null;} @AT@ 5242 @LENGTH@ 80
------------------INS InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @TO@ IfStatement@@if (source instanceof StAXSource) {  result=null;} @AT@ 5228 @LENGTH@ 62
---------------------INS InstanceofExpression@@source instanceof StAXSource @TO@ InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @AT@ 5228 @LENGTH@ 28
------------------------MOV SimpleName@@source @TO@ InstanceofExpression@@source instanceof StAXSource @AT@ 5246 @LENGTH@ 6
------------------------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof StAXSource @AT@ 5253 @LENGTH@ 10
------------------------MOV SimpleType@@StAXSource @TO@ InstanceofExpression@@source instanceof StAXSource @AT@ 5264 @LENGTH@ 10
---------------------INS Operator@@|| @TO@ InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @AT@ 5256 @LENGTH@ 2
---------------------INS InstanceofExpression@@source instanceof StreamSource @TO@ InfixExpression@@source instanceof StAXSource || source instanceof StreamSource @AT@ 5260 @LENGTH@ 30
------------------------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof StreamSource @AT@ 5260 @LENGTH@ 6
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof StreamSource @AT@ 5267 @LENGTH@ 10
------------------------INS SimpleType@@StreamSource @TO@ InstanceofExpression@@source instanceof StreamSource @AT@ 5278 @LENGTH@ 12
------------------DEL InstanceofExpression@@source instanceof StAXSource @AT@ 5246 @LENGTH@ 28


UPD IfStatement@@if (property == null || source == null || source instanceof DBRef) {  return source;} @TO@ if (property == null || source == null || source instanceof DBRef || source instanceof DBObject) {  return source;} @AT@ 10265 @LENGTH@ 90
---INS InfixExpression@@property == null || source == null || source instanceof DBRef || source instanceof DBObject @TO@ IfStatement@@if (property == null || source == null || source instanceof DBRef) {  return source;} @AT@ 10269 @LENGTH@ 91
------MOV InfixExpression@@property == null || source == null || source instanceof DBRef @TO@ InfixExpression@@property == null || source == null || source instanceof DBRef || source instanceof DBObject @AT@ 10269 @LENGTH@ 61
------INS Operator@@|| @TO@ InfixExpression@@property == null || source == null || source instanceof DBRef || source instanceof DBObject @AT@ 10330 @LENGTH@ 2
------INS InstanceofExpression@@source instanceof DBObject @TO@ InfixExpression@@property == null || source == null || source instanceof DBRef || source instanceof DBObject @AT@ 10334 @LENGTH@ 26
---------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof DBObject @AT@ 10334 @LENGTH@ 6
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof DBObject @AT@ 10341 @LENGTH@ 10
---------INS SimpleType@@DBObject @TO@ InstanceofExpression@@source instanceof DBObject @AT@ 10352 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:delegate=findDelegate(name) @TO@ Assignment:delegate=findDelegateForNewObject(name) @AT@ 10294 @LENGTH@ 30
---UPD Assignment@@delegate=findDelegate(name) @TO@ delegate=findDelegateForNewObject(name) @AT@ 10294 @LENGTH@ 29
------UPD MethodInvocation@@findDelegate(name) @TO@ findDelegateForNewObject(name) @AT@ 10305 @LENGTH@ 18
---------UPD SimpleName@@MethodName:findDelegate:[name] @TO@ MethodName:findDelegateForNewObject:[name] @AT@ 10305 @LENGTH@ 18


INS ExpressionStatement@@MethodInvocation:traceExchange(node,target,traceInterceptor,exchange) @TO@ MethodDeclaration@@public, Object, MethodName:traceExchangeIn, ProcessorDefinition<?> node, Processor target, TraceInterceptor traceInterceptor, Exchange exchange, Exception,  @AT@ 2357 @LENGTH@ 56
---INS MethodInvocation@@traceExchange(node,target,traceInterceptor,exchange) @TO@ ExpressionStatement@@MethodInvocation:traceExchange(node,target,traceInterceptor,exchange) @AT@ 2357 @LENGTH@ 55
------INS SimpleName@@MethodName:traceExchange:[node, target, traceInterceptor, exchange] @TO@ MethodInvocation@@traceExchange(node,target,traceInterceptor,exchange) @AT@ 2357 @LENGTH@ 55
---------INS SimpleName@@node @TO@ SimpleName@@MethodName:traceExchange:[node, target, traceInterceptor, exchange] @AT@ 2371 @LENGTH@ 4
---------INS SimpleName@@target @TO@ SimpleName@@MethodName:traceExchange:[node, target, traceInterceptor, exchange] @AT@ 2377 @LENGTH@ 6
---------INS SimpleName@@traceInterceptor @TO@ SimpleName@@MethodName:traceExchange:[node, target, traceInterceptor, exchange] @AT@ 2385 @LENGTH@ 16
---------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:traceExchange:[node, target, traceInterceptor, exchange] @AT@ 2403 @LENGTH@ 8


UPD IfStatement@@if (lazyCreateEngineForEndpoint == null) lazyCreateEngineForEndpoint=isLazyCreateEngines(); @TO@ if (lazyCreateEngineForEndpoint == null) {  lazyCreateEngineForEndpoint=isLazyCreateEngines();} @AT@ 3350 @LENGTH@ 117
---UPD Block@@ThenBody:lazyCreateEngineForEndpoint=isLazyCreateEngines(); @TO@ ThenBody:{  lazyCreateEngineForEndpoint=isLazyCreateEngines();} @AT@ 3415 @LENGTH@ 52


DEL WhileStatement@@while (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  unexpectedContent(reader);}} @AT@ 34421 @LENGTH@ 243
---DEL MethodInvocation@@reader.hasNext() @AT@ 34428 @LENGTH@ 16


UPD Block@@WhileBody:{  JLineLogHandler.resetMessageTracking();  setShellStatus(Status.USER_INPUT);  if ("".equals(line)) {    continue;  }  executeCommand(line);  String newPrmpt=getPromptText();  if (!ObjectUtils.nullSafeEquals(prompt,newPrmpt)) {    prompt=newPrmpt;    setPromptPath(null);  }} @TO@ WhileBody:{  JLineLogHandler.resetMessageTracking();  setShellStatus(Status.USER_INPUT);  if (!StringUtils.hasText(line)) {    generatePromptUpdate(prompt);    continue;  }  executeCommand(line);  generatePromptUpdate(prompt);} @AT@ 16223 @LENGTH@ 373
---UPD IfStatement@@if ("".equals(line)) {  continue;} @TO@ if (!StringUtils.hasText(line)) {  generatePromptUpdate(prompt);  continue;} @AT@ 16313 @LENGTH@ 43
------INS PrefixExpression@@!StringUtils.hasText(line) @TO@ IfStatement@@if ("".equals(line)) {  continue;} @AT@ 16317 @LENGTH@ 26
---------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(line) @AT@ 16317 @LENGTH@ 1
---------INS MethodInvocation@@StringUtils.hasText(line) @TO@ PrefixExpression@@!StringUtils.hasText(line) @AT@ 16318 @LENGTH@ 25
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(line) @AT@ 16318 @LENGTH@ 11
------------MOV SimpleName@@MethodName:equals:[line] @TO@ MethodInvocation@@StringUtils.hasText(line) @AT@ 16320 @LENGTH@ 12
------DEL MethodInvocation@@"".equals(line) @AT@ 16317 @LENGTH@ 15
---------DEL StringLiteral@@"" @AT@ 16317 @LENGTH@ 2
------UPD Block@@ThenBody:{  continue;} @TO@ ThenBody:{  generatePromptUpdate(prompt);  continue;} @AT@ 16334 @LENGTH@ 22
---------INS ExpressionStatement@@MethodInvocation:generatePromptUpdate(prompt) @TO@ Block@@ThenBody:{  continue;} @AT@ 16512 @LENGTH@ 29
------------INS MethodInvocation@@generatePromptUpdate(prompt) @TO@ ExpressionStatement@@MethodInvocation:generatePromptUpdate(prompt) @AT@ 16512 @LENGTH@ 28
---------------INS SimpleName@@MethodName:generatePromptUpdate:[prompt] @TO@ MethodInvocation@@generatePromptUpdate(prompt) @AT@ 16512 @LENGTH@ 28
------------------INS SimpleName@@prompt @TO@ SimpleName@@MethodName:generatePromptUpdate:[prompt] @AT@ 16533 @LENGTH@ 6
---DEL VariableDeclarationStatement@@String newPrmpt=getPromptText(); @AT@ 16389 @LENGTH@ 34
------DEL SimpleType@@String @AT@ 16389 @LENGTH@ 6
------DEL VariableDeclarationFragment@@newPrmpt=getPromptText() @AT@ 16396 @LENGTH@ 26
---------DEL SimpleName@@newPrmpt @AT@ 16396 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:getPromptText:[] @AT@ 16407 @LENGTH@ 15
---DEL IfStatement@@if (!ObjectUtils.nullSafeEquals(prompt,newPrmpt)) {  prompt=newPrmpt;  setPromptPath(null);} @AT@ 16428 @LENGTH@ 108
------DEL PrefixExpression@@!ObjectUtils.nullSafeEquals(prompt,newPrmpt) @AT@ 16432 @LENGTH@ 45
---------DEL Operator@@! @AT@ 16432 @LENGTH@ 1
---------DEL MethodInvocation@@ObjectUtils.nullSafeEquals(prompt,newPrmpt) @AT@ 16433 @LENGTH@ 44
------------DEL SimpleName@@Name:ObjectUtils @AT@ 16433 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:generatePromptUpdate(prompt) @TO@ Block@@WhileBody:{  JLineLogHandler.resetMessageTracking();  setShellStatus(Status.USER_INPUT);  if ("".equals(line)) {    continue;  }  executeCommand(line);  String newPrmpt=getPromptText();  if (!ObjectUtils.nullSafeEquals(prompt,newPrmpt)) {    prompt=newPrmpt;    setPromptPath(null);  }} @AT@ 16751 @LENGTH@ 29
------INS MethodInvocation@@generatePromptUpdate(prompt) @TO@ ExpressionStatement@@MethodInvocation:generatePromptUpdate(prompt) @AT@ 16751 @LENGTH@ 28
---------MOV SimpleName@@MethodName:nullSafeEquals:[prompt, newPrmpt] @TO@ MethodInvocation@@generatePromptUpdate(prompt) @AT@ 16445 @LENGTH@ 32
------------DEL SimpleName@@newPrmpt @AT@ 16468 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertFalse(MutableDetector.isMutable(AuthenticationType.BASIC)) @TO@ MethodInvocation:assertFalse(MutableDetector.isMutable(TimeUnit.DAYS)) @AT@ 2786 @LENGTH@ 65
---UPD MethodInvocation@@assertFalse(MutableDetector.isMutable(AuthenticationType.BASIC)) @TO@ assertFalse(MutableDetector.isMutable(TimeUnit.DAYS)) @AT@ 2786 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertFalse:[MutableDetector.isMutable(AuthenticationType.BASIC)] @TO@ MethodName:assertFalse:[MutableDetector.isMutable(TimeUnit.DAYS)] @AT@ 2786 @LENGTH@ 64
---------UPD MethodInvocation@@MutableDetector.isMutable(AuthenticationType.BASIC) @TO@ MutableDetector.isMutable(TimeUnit.DAYS) @AT@ 2798 @LENGTH@ 51
------------UPD SimpleName@@MethodName:isMutable:[AuthenticationType.BASIC] @TO@ MethodName:isMutable:[TimeUnit.DAYS] @AT@ 2814 @LENGTH@ 35
---------------UPD QualifiedName@@AuthenticationType.BASIC @TO@ TimeUnit.DAYS @AT@ 2824 @LENGTH@ 24
------------------UPD SimpleName@@AuthenticationType @TO@ TimeUnit @AT@ 2824 @LENGTH@ 18
------------------UPD SimpleName@@BASIC @TO@ DAYS @AT@ 2843 @LENGTH@ 5


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Auth,  @TO@ [@Data, public]Auth, AbstractDockerDTO @AT@ 801 @LENGTH@ 160
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Auth,  @AT@ 705 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 807 @LENGTH@ 47


UPD FieldDeclaration@@public, static, final, String, [FABRIC_ZOOKEEPER_PID="fabric.zookeeper.id"] @TO@ public, static, final, String, [FABRIC_ZOOKEEPER_PID="fabric.zookeeper.pid"] @AT@ 3077 @LENGTH@ 72
---UPD VariableDeclarationFragment@@FABRIC_ZOOKEEPER_PID="fabric.zookeeper.id" @TO@ FABRIC_ZOOKEEPER_PID="fabric.zookeeper.pid" @AT@ 3104 @LENGTH@ 44
------UPD StringLiteral@@"fabric.zookeeper.id" @TO@ "fabric.zookeeper.pid" @AT@ 3127 @LENGTH@ 21


UPD VariableDeclarationStatement@@Job j=new Job(conf,"tool-test"); @TO@ @SuppressWarnings("deprecation") Job j=new Job(conf,"tool-test"); @AT@ 2158 @LENGTH@ 35


UPD Block@@ThenBody:{  EndElement endElement=event.asEndElement();  QName name=endElement.getName();  String nsPrefix=!StringUtils.hasText(name.getPrefix()) ? "" : name.getPrefix() + ":";  try {    super.flush();    ioWriter.write("</" + nsPrefix + name.getLocalPart()+ ">");    ioWriter.flush();  } catch (  IOException ioe) {    throw new DataAccessResourceFailureException("Unable to close tag: " + name,ioe);  }  unopenedElements.removeLast();} @TO@ ThenBody:{  QName element=unopenedElements.removeLast();  String nsPrefix=!StringUtils.hasText(element.getPrefix()) ? "" : element.getPrefix() + ":";  try {    super.flush();    ioWriter.write("</" + nsPrefix + element.getLocalPart()+ ">");    ioWriter.flush();  } catch (  IOException ioe) {    throw new DataAccessResourceFailureException("Unable to close tag: " + element,ioe);  }} @AT@ 1903 @LENGTH@ 522
---DEL VariableDeclarationStatement@@EndElement endElement=event.asEndElement(); @AT@ 1912 @LENGTH@ 45
------DEL SimpleType@@EndElement @AT@ 1912 @LENGTH@ 10
------DEL VariableDeclarationFragment@@endElement=event.asEndElement() @AT@ 1923 @LENGTH@ 33
---------DEL SimpleName@@endElement @AT@ 1923 @LENGTH@ 10
---------DEL MethodInvocation@@event.asEndElement() @AT@ 1936 @LENGTH@ 20
------------DEL SimpleName@@Name:event @AT@ 1936 @LENGTH@ 5
------------DEL SimpleName@@MethodName:asEndElement:[] @AT@ 1942 @LENGTH@ 14
---UPD VariableDeclarationStatement@@QName name=endElement.getName(); @TO@ QName element=unopenedElements.removeLast(); @AT@ 1965 @LENGTH@ 34
------UPD VariableDeclarationFragment@@name=endElement.getName() @TO@ element=unopenedElements.removeLast() @AT@ 1971 @LENGTH@ 27
---------UPD SimpleName@@name @TO@ element @AT@ 1971 @LENGTH@ 4
---------UPD MethodInvocation@@endElement.getName() @TO@ unopenedElements.removeLast() @AT@ 1978 @LENGTH@ 20
------------UPD SimpleName@@Name:endElement @TO@ Name:unopenedElements @AT@ 1978 @LENGTH@ 10
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:removeLast:[] @AT@ 1989 @LENGTH@ 9
---UPD VariableDeclarationStatement@@String nsPrefix=!StringUtils.hasText(name.getPrefix()) ? "" : name.getPrefix() + ":"; @TO@ String nsPrefix=!StringUtils.hasText(element.getPrefix()) ? "" : element.getPrefix() + ":"; @AT@ 2007 @LENGTH@ 87
------UPD VariableDeclarationFragment@@nsPrefix=!StringUtils.hasText(name.getPrefix()) ? "" : name.getPrefix() + ":" @TO@ nsPrefix=!StringUtils.hasText(element.getPrefix()) ? "" : element.getPrefix() + ":" @AT@ 2014 @LENGTH@ 79
---------UPD ConditionalExpression@@!StringUtils.hasText(name.getPrefix()) ? "" : name.getPrefix() + ":" @TO@ !StringUtils.hasText(element.getPrefix()) ? "" : element.getPrefix() + ":" @AT@ 2025 @LENGTH@ 68
------------UPD PrefixExpression@@!StringUtils.hasText(name.getPrefix()) @TO@ !StringUtils.hasText(element.getPrefix()) @AT@ 2025 @LENGTH@ 38
---------------UPD MethodInvocation@@StringUtils.hasText(name.getPrefix()) @TO@ StringUtils.hasText(element.getPrefix()) @AT@ 2026 @LENGTH@ 37
------------------UPD SimpleName@@MethodName:hasText:[name.getPrefix()] @TO@ MethodName:hasText:[element.getPrefix()] @AT@ 2038 @LENGTH@ 25
---------------------UPD MethodInvocation@@name.getPrefix() @TO@ element.getPrefix() @AT@ 2046 @LENGTH@ 16
------------------------UPD SimpleName@@Name:name @TO@ Name:element @AT@ 2046 @LENGTH@ 4
------------UPD InfixExpression@@name.getPrefix() + ":" @TO@ element.getPrefix() + ":" @AT@ 2071 @LENGTH@ 22
---------------UPD MethodInvocation@@name.getPrefix() @TO@ element.getPrefix() @AT@ 2071 @LENGTH@ 16
------------------UPD SimpleName@@Name:name @TO@ Name:element @AT@ 2071 @LENGTH@ 4
---UPD TryStatement@@try {  super.flush();  ioWriter.write("</" + nsPrefix + name.getLocalPart()+ ">");  ioWriter.flush();} catch (IOException ioe) {  throw new DataAccessResourceFailureException("Unable to close tag: " + name,ioe);} @TO@ try {  super.flush();  ioWriter.write("</" + nsPrefix + element.getLocalPart()+ ">");  ioWriter.flush();} catch (IOException ioe) {  throw new DataAccessResourceFailureException("Unable to close tag: " + element,ioe);} @AT@ 2108 @LENGTH@ 265
------UPD ExpressionStatement@@MethodInvocation:ioWriter.write("</" + nsPrefix + name.getLocalPart()+ ">") @TO@ MethodInvocation:ioWriter.write("</" + nsPrefix + element.getLocalPart()+ ">") @AT@ 2145 @LENGTH@ 60
---------UPD MethodInvocation@@ioWriter.write("</" + nsPrefix + name.getLocalPart()+ ">") @TO@ ioWriter.write("</" + nsPrefix + element.getLocalPart()+ ">") @AT@ 2145 @LENGTH@ 59
------------UPD SimpleName@@MethodName:write:["</" + nsPrefix + name.getLocalPart()+ ">"] @TO@ MethodName:write:["</" + nsPrefix + element.getLocalPart()+ ">"] @AT@ 2154 @LENGTH@ 50
---------------UPD InfixExpression@@"</" + nsPrefix + name.getLocalPart()+ ">" @TO@ "</" + nsPrefix + element.getLocalPart()+ ">" @AT@ 2160 @LENGTH@ 43
------------------UPD MethodInvocation@@name.getLocalPart() @TO@ element.getLocalPart() @AT@ 2178 @LENGTH@ 19
---------------------UPD SimpleName@@Name:name @TO@ Name:element @AT@ 2178 @LENGTH@ 4
------UPD CatchClause@@catch (IOException ioe) {  throw new DataAccessResourceFailureException("Unable to close tag: " + name,ioe);} @TO@ catch (IOException ioe) {  throw new DataAccessResourceFailureException("Unable to close tag: " + element,ioe);} @AT@ 2248 @LENGTH@ 125
---------UPD ThrowStatement@@ClassInstanceCreation:new DataAccessResourceFailureException("Unable to close tag: " + name,ioe) @TO@ ClassInstanceCreation:new DataAccessResourceFailureException("Unable to close tag: " + element,ioe) @AT@ 2282 @LENGTH@ 82
------------UPD ClassInstanceCreation@@DataAccessResourceFailureException["Unable to close tag: " + name, ioe] @TO@ DataAccessResourceFailureException["Unable to close tag: " + element, ioe] @AT@ 2288 @LENGTH@ 75
---------------UPD InfixExpression@@"Unable to close tag: " + name @TO@ "Unable to close tag: " + element @AT@ 2327 @LENGTH@ 30
------------------UPD SimpleName@@name @TO@ element @AT@ 2353 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:unopenedElements.removeLast() @AT@ 2387 @LENGTH@ 30
------DEL MethodInvocation@@unopenedElements.removeLast() @AT@ 2387 @LENGTH@ 29
---------DEL SimpleName@@Name:unopenedElements @AT@ 2387 @LENGTH@ 16
---------DEL SimpleName@@MethodName:removeLast:[] @AT@ 2404 @LENGTH@ 12


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-673] Fix fabric basic ExampleMQProfileTest"), public]ExampleMQProfileTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleMQProfileTest, FabricTestSupport @AT@ 1568 @LENGTH@ 2232
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-673] Fix fabric basic ExampleMQProfileTest") @AT@ 1661 @LENGTH@ 61


INS IfStatement@@if (nl.getLength() == 1) {  return toDOMDocument(nl.item(0));} else if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @TO@ MethodDeclaration@@public, Document, MethodName:toDOMDocumentFromSingleNodeList, NodeList nl, ParserConfigurationException, TransformerException,  @AT@ 26349 @LENGTH@ 439
---MOV InfixExpression@@nl.getLength() == 1 @TO@ IfStatement@@if (nl.getLength() == 1) {  return toDOMDocument(nl.item(0));} else if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @AT@ 26356 @LENGTH@ 19
---INS Block@@ThenBody:{  return toDOMDocument(nl.item(0));} @TO@ IfStatement@@if (nl.getLength() == 1) {  return toDOMDocument(nl.item(0));} else if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @AT@ 26374 @LENGTH@ 57
------MOV ReturnStatement@@ConditionalExpression:nl.getLength() == 1 ? toDOMDocument(nl.item(0)) : null @TO@ Block@@ThenBody:{  return toDOMDocument(nl.item(0));} @AT@ 26349 @LENGTH@ 62
---------DEL ConditionalExpression@@nl.getLength() == 1 ? toDOMDocument(nl.item(0)) : null @AT@ 26356 @LENGTH@ 54
------------DEL NullLiteral@@null @AT@ 26406 @LENGTH@ 4
---------MOV MethodInvocation@@toDOMDocument(nl.item(0)) @TO@ ReturnStatement@@ConditionalExpression:nl.getLength() == 1 ? toDOMDocument(nl.item(0)) : null @AT@ 26378 @LENGTH@ 25
---INS Block@@ElseBody:if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @TO@ IfStatement@@if (nl.getLength() == 1) {  return toDOMDocument(nl.item(0));} else if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @AT@ 26437 @LENGTH@ 351
------INS IfStatement@@if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @TO@ Block@@ElseBody:if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @AT@ 26437 @LENGTH@ 351
---------INS InstanceofExpression@@nl instanceof Node @TO@ IfStatement@@if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @AT@ 26441 @LENGTH@ 18
------------INS SimpleName@@nl @TO@ InstanceofExpression@@nl instanceof Node @AT@ 26441 @LENGTH@ 2
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@nl instanceof Node @AT@ 26444 @LENGTH@ 10
------------INS SimpleType@@Node @TO@ InstanceofExpression@@nl instanceof Node @AT@ 26455 @LENGTH@ 4
---------INS Block@@ThenBody:{  return toDOMDocument((Node)nl);} @TO@ IfStatement@@if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @AT@ 26461 @LENGTH@ 285
------------INS ReturnStatement@@MethodInvocation:toDOMDocument((Node)nl) @TO@ Block@@ThenBody:{  return toDOMDocument((Node)nl);} @AT@ 26704 @LENGTH@ 32
---------------INS MethodInvocation@@toDOMDocument((Node)nl) @TO@ ReturnStatement@@MethodInvocation:toDOMDocument((Node)nl) @AT@ 26711 @LENGTH@ 24
------------------INS SimpleName@@MethodName:toDOMDocument:[(Node)nl] @TO@ MethodInvocation@@toDOMDocument((Node)nl) @AT@ 26711 @LENGTH@ 24
---------------------INS CastExpression@@(Node)nl @TO@ SimpleName@@MethodName:toDOMDocument:[(Node)nl] @AT@ 26725 @LENGTH@ 9
------------------------INS SimpleType@@Node @TO@ CastExpression@@(Node)nl @AT@ 26726 @LENGTH@ 4
------------------------INS SimpleName@@nl @TO@ CastExpression@@(Node)nl @AT@ 26732 @LENGTH@ 2
------------------INS SimpleName@@MethodName:toDOMDocument:[(Node)nl] @TO@ MethodInvocation@@toDOMDocument((Node)nl) @AT@ 26711 @LENGTH@ 24
---------------------INS CastExpression@@(Node)nl @TO@ SimpleName@@MethodName:toDOMDocument:[(Node)nl] @AT@ 26725 @LENGTH@ 9
------------------------INS SimpleType@@Node @TO@ CastExpression@@(Node)nl @AT@ 26726 @LENGTH@ 4
------------------------INS SimpleName@@nl @TO@ CastExpression@@(Node)nl @AT@ 26732 @LENGTH@ 2
---------INS Block@@ElseBody:{  return null;} @TO@ IfStatement@@if (nl instanceof Node) {  return toDOMDocument((Node)nl);} else {  return null;} @AT@ 26752 @LENGTH@ 36
------------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  return null;} @AT@ 26766 @LENGTH@ 12
---------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 26773 @LENGTH@ 4


DEL IfStatement@@if (ref == null) {  LOG.warn("There was no queue reference for the endpoint {0}",getEndpointUri());} @AT@ 7958 @LENGTH@ 121
---DEL InfixExpression@@ref == null @AT@ 7962 @LENGTH@ 11
------DEL SimpleName@@ref @AT@ 7962 @LENGTH@ 3
------DEL Operator@@== @AT@ 7965 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 7969 @LENGTH@ 4
---DEL Block@@ThenBody:{  LOG.warn("There was no queue reference for the endpoint {0}",getEndpointUri());} @AT@ 7975 @LENGTH@ 104
------DEL ExpressionStatement@@MethodInvocation:LOG.warn("There was no queue reference for the endpoint {0}",getEndpointUri()) @AT@ 7989 @LENGTH@ 80
---------DEL MethodInvocation@@LOG.warn("There was no queue reference for the endpoint {0}",getEndpointUri()) @AT@ 7989 @LENGTH@ 79
------------DEL SimpleName@@Name:LOG @AT@ 7989 @LENGTH@ 3
------------DEL SimpleName@@MethodName:warn:["There was no queue reference for the endpoint {0}", getEndpointUri()] @AT@ 7993 @LENGTH@ 75
---------------DEL StringLiteral@@"There was no queue reference for the endpoint {0}" @AT@ 7998 @LENGTH@ 51
---------------DEL MethodInvocation@@MethodName:getEndpointUri:[] @AT@ 8051 @LENGTH@ 16


INS MethodDeclaration@@Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @TO@ TypeDeclaration@@[public]RedisSetCommands,  @AT@ 4104 @LENGTH@ 39
---INS ParameterizedType@@Cursor<byte[]> @TO@ MethodDeclaration@@Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 4089 @LENGTH@ 14
------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 4089 @LENGTH@ 6
------INS ArrayType@@byte[] @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 4096 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4096 @LENGTH@ 4
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 4104 @LENGTH@ 5
---INS SingleVariableDeclaration@@byte[] key @TO@ MethodDeclaration@@Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 4110 @LENGTH@ 10
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] key @AT@ 4110 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4110 @LENGTH@ 4
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@byte[] key @AT@ 4117 @LENGTH@ 3
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 4122 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 4122 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 4134 @LENGTH@ 7


UPD VariableDeclarationStatement@@final ServiceController<?> serviceController=CurrentServiceContainer.getServiceContainer().getService(ConcurrentServiceNames.TRANSACTION_SETUP_PROVIDER_SERVICE_NAME); @TO@ final ServiceController<?> serviceController=currentServiceContainer().getService(ConcurrentServiceNames.TRANSACTION_SETUP_PROVIDER_SERVICE_NAME); @AT@ 3487 @LENGTH@ 168
---UPD VariableDeclarationFragment@@serviceController=CurrentServiceContainer.getServiceContainer().getService(ConcurrentServiceNames.TRANSACTION_SETUP_PROVIDER_SERVICE_NAME) @TO@ serviceController=currentServiceContainer().getService(ConcurrentServiceNames.TRANSACTION_SETUP_PROVIDER_SERVICE_NAME) @AT@ 3514 @LENGTH@ 140
------UPD MethodInvocation@@CurrentServiceContainer.getServiceContainer().getService(ConcurrentServiceNames.TRANSACTION_SETUP_PROVIDER_SERVICE_NAME) @TO@ currentServiceContainer().getService(ConcurrentServiceNames.TRANSACTION_SETUP_PROVIDER_SERVICE_NAME) @AT@ 3534 @LENGTH@ 120
---------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:currentServiceContainer:[] @AT@ 3534 @LENGTH@ 45
---------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 3534 @LENGTH@ 23


UPD MethodDeclaration@@protected, String, MethodName:stripSyslogHeader, byte[] bytes, UnsupportedEncodingException,  @TO@ protected, String, MethodName:stripSyslogHeader, byte[] bytes,  @AT@ 5724 @LENGTH@ 210
---DEL SimpleType@@UnsupportedEncodingException @AT@ 5780 @LENGTH@ 28
---UPD VariableDeclarationStatement@@String s=new String(bytes,"utf-8"); @TO@ String s=new String(bytes,StandardCharsets.UTF_8); @AT@ 5819 @LENGTH@ 38
------UPD VariableDeclarationFragment@@s=new String(bytes,"utf-8") @TO@ s=new String(bytes,StandardCharsets.UTF_8) @AT@ 5826 @LENGTH@ 30
---------UPD ClassInstanceCreation@@String[bytes, "utf-8"] @TO@ String[bytes, StandardCharsets.UTF_8] @AT@ 5830 @LENGTH@ 26
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[bytes, "utf-8"] @AT@ 5809 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5809 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5826 @LENGTH@ 5
------------DEL StringLiteral@@"utf-8" @AT@ 5848 @LENGTH@ 7


UPD VariableDeclarationStatement@@TarArchiveEntry sEntry=new TarArchiveEntry(file1); @TO@ TarArchiveEntry sEntry=new TarArchiveEntry(file1,file1.getName()); @AT@ 1886 @LENGTH@ 52
---UPD VariableDeclarationFragment@@sEntry=new TarArchiveEntry(file1) @TO@ sEntry=new TarArchiveEntry(file1,file1.getName()) @AT@ 1902 @LENGTH@ 35
------UPD ClassInstanceCreation@@TarArchiveEntry[file1] @TO@ TarArchiveEntry[file1, file1.getName()] @AT@ 1911 @LENGTH@ 26
---------INS MethodInvocation@@file1.getName() @TO@ ClassInstanceCreation@@TarArchiveEntry[file1] @AT@ 1938 @LENGTH@ 15
------------INS SimpleName@@Name:file1 @TO@ MethodInvocation@@file1.getName() @AT@ 1938 @LENGTH@ 5
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@file1.getName() @AT@ 1944 @LENGTH@ 9


DEL VariableDeclarationStatement@@Set<ContainerProxy> containers=null; @AT@ 2758 @LENGTH@ 38
---DEL ParameterizedType@@Set<ContainerProxy> @AT@ 2758 @LENGTH@ 19
------DEL SimpleType@@Set @AT@ 2758 @LENGTH@ 3
------DEL SimpleType@@ContainerProxy @AT@ 2762 @LENGTH@ 14
---DEL VariableDeclarationFragment@@containers=null @AT@ 2778 @LENGTH@ 17
------DEL SimpleName@@containers @AT@ 2778 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 2791 @LENGTH@ 4


UPD TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @TO@ try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  configuration.setProperty("hibernate.listeners.envers.autoRegister","false");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 2167 @LENGTH@ 1392
---INS ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ TryStatement@@try {  Configuration configuration=new Configuration().setProperty(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,"true");  configuration.setProperty(Environment.HBM2DDL_AUTO,"create-drop");  configuration.setProperty(Environment.DATASOURCE,"java:jboss/datasources/ExampleDS");  Properties properties=new Properties();  configuration=configuration.configure("hibernate.cfg.xml");  properties.putAll(configuration.getProperties());  Environment.verifyProperties(properties);  ConfigurationHelper.resolvePlaceHolders(properties);  StandardServiceRegistryBuilder registry=new StandardServiceRegistryBuilder().applySettings(properties);  sessionFactory=configuration.buildSessionFactory(registry.build());} catch (Throwable ex) {  System.err.println("Initial SessionFactory creation failed." + ex);  throw new ExceptionInInitializerError(ex);} @AT@ 2558 @LENGTH@ 78
------INS MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @TO@ ExpressionStatement@@MethodInvocation:configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2558 @LENGTH@ 77
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2558 @LENGTH@ 13
---------INS SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @TO@ MethodInvocation@@configuration.setProperty("hibernate.listeners.envers.autoRegister","false") @AT@ 2572 @LENGTH@ 63
------------INS StringLiteral@@"hibernate.listeners.envers.autoRegister" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 2584 @LENGTH@ 41
------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:setProperty:["hibernate.listeners.envers.autoRegister", "false"] @AT@ 2627 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:smallTinyIntBoundsCheckHelper(writeDataFile.getAbsolutePath(),ExecJob.JOB_STATUS.COMPLETED) @TO@ MethodInvocation:smallTinyIntBoundsCheckHelper(writeDataFile.getPath().replaceAll("\\\\","/"),ExecJob.JOB_STATUS.COMPLETED) @AT@ 4706 @LENGTH@ 93
---UPD MethodInvocation@@smallTinyIntBoundsCheckHelper(writeDataFile.getAbsolutePath(),ExecJob.JOB_STATUS.COMPLETED) @TO@ smallTinyIntBoundsCheckHelper(writeDataFile.getPath().replaceAll("\\\\","/"),ExecJob.JOB_STATUS.COMPLETED) @AT@ 4706 @LENGTH@ 92
------UPD SimpleName@@MethodName:smallTinyIntBoundsCheckHelper:[writeDataFile.getAbsolutePath(), ExecJob.JOB_STATUS.COMPLETED] @TO@ MethodName:smallTinyIntBoundsCheckHelper:[writeDataFile.getPath().replaceAll("\\\\","/"), ExecJob.JOB_STATUS.COMPLETED] @AT@ 4706 @LENGTH@ 92
---------UPD MethodInvocation@@writeDataFile.getAbsolutePath() @TO@ writeDataFile.getPath().replaceAll("\\\\","/") @AT@ 4736 @LENGTH@ 31
------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:replaceAll:["\\\\", "/"] @AT@ 4750 @LENGTH@ 17
---------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 4787 @LENGTH@ 6
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 4795 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@writeDataFile.getAbsolutePath() @AT@ 4752 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @TO@ TypeDeclaration@@[public]NIOConverterTest, ContextTestSupport @AT@ 1489 @LENGTH@ 267
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1489 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1496 @LENGTH@ 4
---INS SimpleName@@MethodName:testToByteArrayBigBuffer @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1501 @LENGTH@ 24
---INS VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.allocate(100); @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1538 @LENGTH@ 41
------INS SimpleType@@ByteBuffer @TO@ VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.allocate(100); @AT@ 1538 @LENGTH@ 10
------INS VariableDeclarationFragment@@bb=ByteBuffer.allocate(100) @TO@ VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.allocate(100); @AT@ 1549 @LENGTH@ 29
---------INS SimpleName@@bb @TO@ VariableDeclarationFragment@@bb=ByteBuffer.allocate(100) @AT@ 1549 @LENGTH@ 2
---------INS MethodInvocation@@ByteBuffer.allocate(100) @TO@ VariableDeclarationFragment@@bb=ByteBuffer.allocate(100) @AT@ 1554 @LENGTH@ 24
------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.allocate(100) @AT@ 1554 @LENGTH@ 10
------------INS SimpleName@@MethodName:allocate:[100] @TO@ MethodInvocation@@ByteBuffer.allocate(100) @AT@ 1565 @LENGTH@ 13
---------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:allocate:[100] @AT@ 1574 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:bb.put("Hello".getBytes()) @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1588 @LENGTH@ 27
------INS MethodInvocation@@bb.put("Hello".getBytes()) @TO@ ExpressionStatement@@MethodInvocation:bb.put("Hello".getBytes()) @AT@ 1588 @LENGTH@ 26
---------INS SimpleName@@Name:bb @TO@ MethodInvocation@@bb.put("Hello".getBytes()) @AT@ 1588 @LENGTH@ 2
---------INS SimpleName@@MethodName:put:["Hello".getBytes()] @TO@ MethodInvocation@@bb.put("Hello".getBytes()) @AT@ 1591 @LENGTH@ 23
------------INS MethodInvocation@@"Hello".getBytes() @TO@ SimpleName@@MethodName:put:["Hello".getBytes()] @AT@ 1595 @LENGTH@ 18
---------------INS StringLiteral@@"Hello" @TO@ MethodInvocation@@"Hello".getBytes() @AT@ 1595 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"Hello".getBytes() @AT@ 1603 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:bb.flip() @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1624 @LENGTH@ 10
------INS MethodInvocation@@bb.flip() @TO@ ExpressionStatement@@MethodInvocation:bb.flip() @AT@ 1624 @LENGTH@ 9
---------INS SimpleName@@Name:bb @TO@ MethodInvocation@@bb.flip() @AT@ 1624 @LENGTH@ 2
---------INS SimpleName@@MethodName:flip:[] @TO@ MethodInvocation@@bb.flip() @AT@ 1627 @LENGTH@ 6
---INS VariableDeclarationStatement@@byte[] out=NIOConverter.toByteArray(bb); @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1643 @LENGTH@ 42
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] out=NIOConverter.toByteArray(bb); @AT@ 1643 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1643 @LENGTH@ 4
------INS VariableDeclarationFragment@@out=NIOConverter.toByteArray(bb) @TO@ VariableDeclarationStatement@@byte[] out=NIOConverter.toByteArray(bb); @AT@ 1650 @LENGTH@ 34
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=NIOConverter.toByteArray(bb) @AT@ 1650 @LENGTH@ 3
---------INS MethodInvocation@@NIOConverter.toByteArray(bb) @TO@ VariableDeclarationFragment@@out=NIOConverter.toByteArray(bb) @AT@ 1656 @LENGTH@ 28
------------INS SimpleName@@Name:NIOConverter @TO@ MethodInvocation@@NIOConverter.toByteArray(bb) @AT@ 1656 @LENGTH@ 12
------------INS SimpleName@@MethodName:toByteArray:[bb] @TO@ MethodInvocation@@NIOConverter.toByteArray(bb) @AT@ 1669 @LENGTH@ 15
---------------INS SimpleName@@bb @TO@ SimpleName@@MethodName:toByteArray:[bb] @AT@ 1681 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertNotNull(out) @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1694 @LENGTH@ 19
------INS MethodInvocation@@assertNotNull(out) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(out) @AT@ 1694 @LENGTH@ 18
---------INS SimpleName@@MethodName:assertNotNull:[out] @TO@ MethodInvocation@@assertNotNull(out) @AT@ 1694 @LENGTH@ 18
------------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertNotNull:[out] @AT@ 1708 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals(5,out.length) @TO@ MethodDeclaration@@public, void, MethodName:testToByteArrayBigBuffer,  @AT@ 1722 @LENGTH@ 28
------INS MethodInvocation@@assertEquals(5,out.length) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(5,out.length) @AT@ 1722 @LENGTH@ 27
---------INS SimpleName@@MethodName:assertEquals:[5, out.length] @TO@ MethodInvocation@@assertEquals(5,out.length) @AT@ 1722 @LENGTH@ 27
------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:assertEquals:[5, out.length] @AT@ 1735 @LENGTH@ 1
------------INS QualifiedName@@out.length @TO@ SimpleName@@MethodName:assertEquals:[5, out.length] @AT@ 1738 @LENGTH@ 10
---------------INS SimpleName@@out @TO@ QualifiedName@@out.length @AT@ 1738 @LENGTH@ 3
---------------INS SimpleName@@length @TO@ QualifiedName@@out.length @AT@ 1742 @LENGTH@ 6


INS FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @TO@ TypeDeclaration@@[public]CurrentServiceContainer,  @AT@ 1806 @LENGTH@ 227
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1806 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1813 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1820 @LENGTH@ 5
---INS ParameterizedType@@PrivilegedAction<ServiceContainer> @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1826 @LENGTH@ 34
------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1826 @LENGTH@ 16
------INS SimpleType@@ServiceContainer @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1843 @LENGTH@ 16
---INS VariableDeclarationFragment@@GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
 @TO@ FieldDeclaration@@public, static, final, PrivilegedAction<ServiceContainer>, [GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
] @AT@ 1861 @LENGTH@ 171
------INS SimpleName@@GET_ACTION @TO@ VariableDeclarationFragment@@GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
 @AT@ 1861 @LENGTH@ 10
------INS ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @TO@ VariableDeclarationFragment@@GET_ACTION=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return getServiceContainer();
  }
}
 @AT@ 1874 @LENGTH@ 158
---------INS New@@new @TO@ ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 1874 @LENGTH@ 3
---------INS ParameterizedType@@PrivilegedAction<ServiceContainer> @TO@ ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 1878 @LENGTH@ 34
------------INS SimpleType@@PrivilegedAction @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1878 @LENGTH@ 16
------------INS SimpleType@@ServiceContainer @TO@ ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 1895 @LENGTH@ 16
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 1915 @LENGTH@ 117
------------INS MethodDeclaration@@public, ServiceContainer, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1943 @LENGTH@ 83
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1943 @LENGTH@ 6
---------------INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1950 @LENGTH@ 16
---------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1967 @LENGTH@ 3
---------------INS ReturnStatement@@MethodInvocation:getServiceContainer() @TO@ MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 1987 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:getServiceContainer:[] @TO@ ReturnStatement@@MethodInvocation:getServiceContainer() @AT@ 1994 @LENGTH@ 21


INS MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @TO@ TypeDeclaration@@[public]DefaultStringRedisConnection, [StringRedisConnection] @AT@ 60768 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 60768 @LENGTH@ 6
---INS ParameterizedType@@Cursor<byte[]> @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 60775 @LENGTH@ 14
------INS SimpleType@@Cursor @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 60775 @LENGTH@ 6
------INS ArrayType@@byte[] @TO@ ParameterizedType@@Cursor<byte[]> @AT@ 60782 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 60782 @LENGTH@ 4
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 60790 @LENGTH@ 5
---INS SingleVariableDeclaration@@byte[] key @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 60796 @LENGTH@ 10
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] key @AT@ 60796 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 60796 @LENGTH@ 4
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@byte[] key @AT@ 60803 @LENGTH@ 3
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 60808 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 60808 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 60820 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:this.delegate.sScan(key,options) @TO@ MethodDeclaration@@public, Cursor<byte[]>, MethodName:sScan, byte[] key, ScanOptions options,  @AT@ 60833 @LENGTH@ 41
------INS MethodInvocation@@this.delegate.sScan(key,options) @TO@ ReturnStatement@@MethodInvocation:this.delegate.sScan(key,options) @AT@ 60840 @LENGTH@ 33
---------INS FieldAccess@@this.delegate @TO@ MethodInvocation@@this.delegate.sScan(key,options) @AT@ 60840 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 60840 @LENGTH@ 4
------------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 60845 @LENGTH@ 8
---------INS SimpleName@@MethodName:sScan:[key, options] @TO@ MethodInvocation@@this.delegate.sScan(key,options) @AT@ 60854 @LENGTH@ 19
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:sScan:[key, options] @AT@ 60860 @LENGTH@ 3
------------INS SimpleName@@options @TO@ SimpleName@@MethodName:sScan:[key, options] @AT@ 60865 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, String, [SCAN_BLOCK_TOKEN_REGEX_TEMPLATE="<{0}(\\s+[^/^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*>"] @TO@ private, static, final, String, [SCAN_BLOCK_TOKEN_REGEX_TEMPLATE="<{0}(\\s+[^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*>"] @AT@ 2134 @LENGTH@ 135
---UPD VariableDeclarationFragment@@SCAN_BLOCK_TOKEN_REGEX_TEMPLATE="<{0}(\\s+[^/^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*>" @TO@ SCAN_BLOCK_TOKEN_REGEX_TEMPLATE="<{0}(\\s+[^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*>" @AT@ 2162 @LENGTH@ 106
------UPD StringLiteral@@"<{0}(\\s+[^/^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*>" @TO@ "<{0}(\\s+[^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*>" @AT@ 2196 @LENGTH@ 72


UPD ExpressionStatement@@MethodInvocation:binding.setAdminsThatShouldDeclare(this.adminsThatShouldDeclare) @TO@ MethodInvocation:binding.setAdminsThatShouldDeclare((Object[])this.adminsThatShouldDeclare) @AT@ 2646 @LENGTH@ 65
---UPD MethodInvocation@@binding.setAdminsThatShouldDeclare(this.adminsThatShouldDeclare) @TO@ binding.setAdminsThatShouldDeclare((Object[])this.adminsThatShouldDeclare) @AT@ 2646 @LENGTH@ 64
------UPD SimpleName@@MethodName:setAdminsThatShouldDeclare:[this.adminsThatShouldDeclare] @TO@ MethodName:setAdminsThatShouldDeclare:[(Object[])this.adminsThatShouldDeclare] @AT@ 2654 @LENGTH@ 56
---------INS CastExpression@@(Object[])this.adminsThatShouldDeclare @TO@ SimpleName@@MethodName:setAdminsThatShouldDeclare:[this.adminsThatShouldDeclare] @AT@ 2681 @LENGTH@ 39
------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])this.adminsThatShouldDeclare @AT@ 2682 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 2682 @LENGTH@ 6
------------INS FieldAccess@@this.adminsThatShouldDeclare @TO@ CastExpression@@(Object[])this.adminsThatShouldDeclare @AT@ 2692 @LENGTH@ 28
---------------MOV ThisExpression@@this @TO@ FieldAccess@@this.adminsThatShouldDeclare @AT@ 2681 @LENGTH@ 4
---------------MOV SimpleName@@adminsThatShouldDeclare @TO@ FieldAccess@@this.adminsThatShouldDeclare @AT@ 2686 @LENGTH@ 23
---------DEL FieldAccess@@this.adminsThatShouldDeclare @AT@ 2681 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:testHttpEndpointURLWithIPv6,  @TO@ TypeDeclaration@@[public]HttpEndpointURLTest, CamelTestSupport @AT@ 2096 @LENGTH@ 286
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHttpEndpointURLWithIPv6,  @AT@ 2096 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHttpEndpointURLWithIPv6,  @AT@ 2103 @LENGTH@ 4
---INS SimpleName@@MethodName:testHttpEndpointURLWithIPv6 @TO@ MethodDeclaration@@public, void, MethodName:testHttpEndpointURLWithIPv6,  @AT@ 2108 @LENGTH@ 27
---INS VariableDeclarationStatement@@HttpEndpoint endpoint=(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true"); @TO@ MethodDeclaration@@public, void, MethodName:testHttpEndpointURLWithIPv6,  @AT@ 2148 @LENGTH@ 115
------INS SimpleType@@HttpEndpoint @TO@ VariableDeclarationStatement@@HttpEndpoint endpoint=(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true"); @AT@ 2148 @LENGTH@ 12
------INS VariableDeclarationFragment@@endpoint=(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @TO@ VariableDeclarationStatement@@HttpEndpoint endpoint=(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true"); @AT@ 2161 @LENGTH@ 101
---------INS SimpleName@@endpoint @TO@ VariableDeclarationFragment@@endpoint=(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @AT@ 2161 @LENGTH@ 8
---------INS CastExpression@@(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @TO@ VariableDeclarationFragment@@endpoint=(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @AT@ 2172 @LENGTH@ 90
------------INS SimpleType@@HttpEndpoint @TO@ CastExpression@@(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @AT@ 2173 @LENGTH@ 12
------------INS MethodInvocation@@context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @TO@ CastExpression@@(HttpEndpoint)context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @AT@ 2186 @LENGTH@ 76
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @AT@ 2186 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getEndpoint:["http://[2a00:8a00:6000:40::1413]:30300/test?test=true"] @TO@ MethodInvocation@@context.getEndpoint("http://[2a00:8a00:6000:40::1413]:30300/test?test=true") @AT@ 2194 @LENGTH@ 68
------------------INS StringLiteral@@"http://[2a00:8a00:6000:40::1413]:30300/test?test=true" @TO@ SimpleName@@MethodName:getEndpoint:["http://[2a00:8a00:6000:40::1413]:30300/test?test=true"] @AT@ 2206 @LENGTH@ 55
---INS ExpressionStatement@@MethodInvocation:assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test?test=true",endpoint.getHttpUri().toString()) @TO@ MethodDeclaration@@public, void, MethodName:testHttpEndpointURLWithIPv6,  @AT@ 2272 @LENGTH@ 104
------INS MethodInvocation@@assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test?test=true",endpoint.getHttpUri().toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test?test=true",endpoint.getHttpUri().toString()) @AT@ 2272 @LENGTH@ 103
---------INS SimpleName@@MethodName:assertEquals:["http://[2a00:8a00:6000:40::1413]:30300/test?test=true", endpoint.getHttpUri().toString()] @TO@ MethodInvocation@@assertEquals("http://[2a00:8a00:6000:40::1413]:30300/test?test=true",endpoint.getHttpUri().toString()) @AT@ 2272 @LENGTH@ 103
------------INS StringLiteral@@"http://[2a00:8a00:6000:40::1413]:30300/test?test=true" @TO@ SimpleName@@MethodName:assertEquals:["http://[2a00:8a00:6000:40::1413]:30300/test?test=true", endpoint.getHttpUri().toString()] @AT@ 2285 @LENGTH@ 55
------------INS MethodInvocation@@endpoint.getHttpUri().toString() @TO@ SimpleName@@MethodName:assertEquals:["http://[2a00:8a00:6000:40::1413]:30300/test?test=true", endpoint.getHttpUri().toString()] @AT@ 2342 @LENGTH@ 32
---------------INS MethodInvocation@@MethodName:getHttpUri:[] @TO@ MethodInvocation@@endpoint.getHttpUri().toString() @AT@ 2342 @LENGTH@ 21
---------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getHttpUri().toString() @AT@ 2342 @LENGTH@ 8
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@endpoint.getHttpUri().toString() @AT@ 2364 @LENGTH@ 10


UPD MethodDeclaration@@public, ClientDetails, MethodName:loadClientByClientId, String clientId, OAuth2Exception,  @TO@ public, ClientDetails, MethodName:loadClientByClientId, String clientId, ClientRegistrationException,  @AT@ 1277 @LENGTH@ 285
---UPD SimpleType@@OAuth2Exception @TO@ ClientRegistrationException @AT@ 1343 @LENGTH@ 15


UPD TryStatement@@try {  Container client=containers.iterator().next();  containers.remove(client);  Set<Container> servers=new LinkedHashSet<Container>(containers);  for (  Container c : servers) {    Profile p=c.getVersion().getProfile("example-camel-cluster.server");    c.setProfiles(new Profile[]{p});  }  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);  Profile p=client.getVersion().getProfile("example-camel-cluster.client");  client.setProfiles(new Profile[]{p});  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));    Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-list"));    String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();    System.err.println(response);    int failed=Integer.parseInt(response.replaceAll("[^0-9]",""));    Assert.assertEquals("Failed exchanges found on client",0,failed);    Container lastActiveServerContainer=servers.iterator().next();    servers.remove(lastActiveServerContainer);    for (    Container c : servers) {      c.destroy();      Thread.sleep(25000);      response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Completed")).getPlain().toString();      System.err.println(response);      response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();      System.err.println(response);      failed=Integer.parseInt(response.replaceAll("[^0-9]",""));      Assert.assertEquals("Failed exchanges found after container:" + c.getId() + " shut down",0,failed);    }    System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());  }  finally {    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);} @TO@ try {  LinkedList<Container> containerList=new LinkedList<Container>(containers);  Container client=containerList.removeLast();  Set<Container> servers=new LinkedHashSet<Container>(containerList);  for (  Container c : servers) {    Profile p=c.getVersion().getProfile("example-camel-cluster.server");    c.setProfiles(new Profile[]{p});  }  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);  Profile p=client.getVersion().getProfile("example-camel-cluster.client");  client.setProfiles(new Profile[]{p});  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));    Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-list"));    String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();    System.err.println(response);    int failed=Integer.parseInt(response.replaceAll("[^0-9]",""));    Assert.assertEquals("Failed exchanges found on client",0,failed);    Container lastActiveServerContainer=servers.iterator().next();    servers.remove(lastActiveServerContainer);    for (    Container c : servers) {      c.destroy();      Thread.sleep(25000);      response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Completed")).getPlain().toString();      System.err.println(response);      response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();      System.err.println(response);      failed=Integer.parseInt(response.replaceAll("[^0-9]",""));      Assert.assertEquals("Failed exchanges found after container:" + c.getId() + " shut down",0,failed);    }    System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());  }  finally {    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 1726 @LENGTH@ 3426
---UPD VariableDeclarationStatement@@Container client=containers.iterator().next(); @TO@ LinkedList<Container> containerList=new LinkedList<Container>(containers); @AT@ 1827 @LENGTH@ 48
------DEL SimpleType@@Container @AT@ 1827 @LENGTH@ 9
------UPD VariableDeclarationFragment@@client=containers.iterator().next() @TO@ containerList=new LinkedList<Container>(containers) @AT@ 1837 @LENGTH@ 37
---------UPD SimpleName@@client @TO@ containerList @AT@ 1837 @LENGTH@ 6
---------DEL MethodInvocation@@containers.iterator().next() @AT@ 1846 @LENGTH@ 28
------------DEL MethodInvocation@@MethodName:iterator:[] @AT@ 1846 @LENGTH@ 21
------------DEL SimpleName@@Name:containers @AT@ 1846 @LENGTH@ 10
------------DEL SimpleName@@MethodName:next:[] @AT@ 1868 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedList<Container>[containers] @TO@ VariableDeclarationFragment@@client=containers.iterator().next() @AT@ 1894 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 1894 @LENGTH@ 3
------------INS ParameterizedType@@LinkedList<Container> @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 1898 @LENGTH@ 21
---------------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<Container> @AT@ 1898 @LENGTH@ 10
---------------INS SimpleType@@Container @TO@ ParameterizedType@@LinkedList<Container> @AT@ 1909 @LENGTH@ 9
------------INS SimpleName@@containers @TO@ ClassInstanceCreation@@LinkedList<Container>[containers] @AT@ 1920 @LENGTH@ 10
------INS ParameterizedType@@LinkedList<Container> @TO@ VariableDeclarationStatement@@Container client=containers.iterator().next(); @AT@ 1856 @LENGTH@ 21
---------INS SimpleType@@LinkedList @TO@ ParameterizedType@@LinkedList<Container> @AT@ 1856 @LENGTH@ 10
---------INS SimpleType@@Container @TO@ ParameterizedType@@LinkedList<Container> @AT@ 1867 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:containers.remove(client) @AT@ 1888 @LENGTH@ 26
------DEL MethodInvocation@@containers.remove(client) @AT@ 1888 @LENGTH@ 25
---UPD VariableDeclarationStatement@@Set<Container> servers=new LinkedHashSet<Container>(containers); @TO@ Set<Container> servers=new LinkedHashSet<Container>(containerList); @AT@ 1927 @LENGTH@ 66
------UPD VariableDeclarationFragment@@servers=new LinkedHashSet<Container>(containers) @TO@ servers=new LinkedHashSet<Container>(containerList) @AT@ 1942 @LENGTH@ 50
---------UPD ClassInstanceCreation@@LinkedHashSet<Container>[containers] @TO@ LinkedHashSet<Container>[containerList] @AT@ 1952 @LENGTH@ 40
------------UPD SimpleName@@containers @TO@ containerList @AT@ 1981 @LENGTH@ 10
---INS VariableDeclarationStatement@@Container client=containerList.removeLast(); @TO@ TryStatement@@try {  Container client=containers.iterator().next();  containers.remove(client);  Set<Container> servers=new LinkedHashSet<Container>(containers);  for (  Container c : servers) {    Profile p=c.getVersion().getProfile("example-camel-cluster.server");    c.setProfiles(new Profile[]{p});  }  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);  Profile p=client.getVersion().getProfile("example-camel-cluster.client");  client.setProfiles(new Profile[]{p});  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);  try {    CuratorFramework curator=curatorProxy.getService();    Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));    Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-list"));    String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();    System.err.println(response);    int failed=Integer.parseInt(response.replaceAll("[^0-9]",""));    Assert.assertEquals("Failed exchanges found on client",0,failed);    Container lastActiveServerContainer=servers.iterator().next();    servers.remove(lastActiveServerContainer);    for (    Container c : servers) {      c.destroy();      Thread.sleep(25000);      response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Completed")).getPlain().toString();      System.err.println(response);      response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();      System.err.println(response);      failed=Integer.parseInt(response.replaceAll("[^0-9]",""));      Assert.assertEquals("Failed exchanges found after container:" + c.getId() + " shut down",0,failed);    }    System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());  }  finally {    curatorProxy.close();  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 1945 @LENGTH@ 46
------INS SimpleType@@Container @TO@ VariableDeclarationStatement@@Container client=containerList.removeLast(); @AT@ 1945 @LENGTH@ 9
------INS VariableDeclarationFragment@@client=containerList.removeLast() @TO@ VariableDeclarationStatement@@Container client=containerList.removeLast(); @AT@ 1955 @LENGTH@ 35
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=containerList.removeLast() @AT@ 1955 @LENGTH@ 6
---------INS MethodInvocation@@containerList.removeLast() @TO@ VariableDeclarationFragment@@client=containerList.removeLast() @AT@ 1964 @LENGTH@ 26
------------MOV SimpleName@@Name:containers @TO@ MethodInvocation@@containerList.removeLast() @AT@ 1888 @LENGTH@ 10
------------MOV SimpleName@@MethodName:remove:[client] @TO@ MethodInvocation@@containerList.removeLast() @AT@ 1899 @LENGTH@ 14
---------------DEL SimpleName@@client @AT@ 1906 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:builder.append("\\(?") @TO@ Initializer@@Initializer @AT@ 4255 @LENGTH@ 23
---INS MethodInvocation@@builder.append("\\(?") @TO@ ExpressionStatement@@MethodInvocation:builder.append("\\(?") @AT@ 4255 @LENGTH@ 22
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append("\\(?") @AT@ 4255 @LENGTH@ 7
------INS SimpleName@@MethodName:append:["\\(?"] @TO@ MethodInvocation@@builder.append("\\(?") @AT@ 4263 @LENGTH@ 14
---------INS StringLiteral@@"\\(?" @TO@ SimpleName@@MethodName:append:["\\(?"] @AT@ 4270 @LENGTH@ 6


DEL MethodDeclaration@@private, Set<String>, MethodName:getScope, Map<String,String> parameters,  @AT@ 4725 @LENGTH@ 199
---DEL Modifier@@private @AT@ 4725 @LENGTH@ 7
---DEL ParameterizedType@@Set<String> @AT@ 4733 @LENGTH@ 11
------DEL SimpleType@@Set @AT@ 4733 @LENGTH@ 3
------DEL SimpleType@@String @AT@ 4737 @LENGTH@ 6
---DEL SimpleName@@MethodName:getScope @AT@ 4745 @LENGTH@ 8
---DEL SingleVariableDeclaration@@Map<String,String> parameters @AT@ 4754 @LENGTH@ 30
------DEL ParameterizedType@@Map<String,String> @AT@ 4754 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 4754 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 4758 @LENGTH@ 6
---------DEL SimpleType@@String @AT@ 4766 @LENGTH@ 6
------DEL SimpleName@@parameters @AT@ 4774 @LENGTH@ 10
---DEL IfStatement@@if (!parameters.containsKey("scope")) {  return getScope();} @AT@ 4790 @LENGTH@ 65
------DEL PrefixExpression@@!parameters.containsKey("scope") @AT@ 4794 @LENGTH@ 32
---------DEL Operator@@! @AT@ 4794 @LENGTH@ 1
---------DEL MethodInvocation@@parameters.containsKey("scope") @AT@ 4795 @LENGTH@ 31
------------DEL SimpleName@@Name:parameters @AT@ 4795 @LENGTH@ 10
------------DEL SimpleName@@MethodName:containsKey:["scope"] @AT@ 4806 @LENGTH@ 20
---------------DEL StringLiteral@@"scope" @AT@ 4818 @LENGTH@ 7
------DEL Block@@ThenBody:{  return getScope();} @AT@ 4828 @LENGTH@ 27
---------DEL ReturnStatement@@MethodInvocation:getScope() @AT@ 4833 @LENGTH@ 18
------------DEL MethodInvocation@@MethodName:getScope:[] @AT@ 4840 @LENGTH@ 10
---DEL ReturnStatement@@MethodInvocation:OAuth2Utils.parseParameterList(parameters.get("scope")) @AT@ 4858 @LENGTH@ 63
------DEL MethodInvocation@@OAuth2Utils.parseParameterList(parameters.get("scope")) @AT@ 4865 @LENGTH@ 55
---------DEL SimpleName@@Name:OAuth2Utils @AT@ 4865 @LENGTH@ 11
---------DEL SimpleName@@MethodName:parseParameterList:[parameters.get("scope")] @AT@ 4877 @LENGTH@ 43
------------DEL MethodInvocation@@parameters.get("scope") @AT@ 4896 @LENGTH@ 23
---------------DEL SimpleName@@Name:parameters @AT@ 4896 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:get:["scope"] @AT@ 4907 @LENGTH@ 12
------------------DEL StringLiteral@@"scope" @AT@ 4911 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Validate.configurationDirectoryExists(javaHome,"controllerJavaHome must exist at " + controllerJavaHome) @TO@ MethodInvocation:Validate.configurationDirectoryExists(controllerJavaHome,"controllerJavaHome must exist at " + controllerJavaHome) @AT@ 4525 @LENGTH@ 106
---UPD MethodInvocation@@Validate.configurationDirectoryExists(javaHome,"controllerJavaHome must exist at " + controllerJavaHome) @TO@ Validate.configurationDirectoryExists(controllerJavaHome,"controllerJavaHome must exist at " + controllerJavaHome) @AT@ 4525 @LENGTH@ 105
------UPD SimpleName@@MethodName:configurationDirectoryExists:[javaHome, "controllerJavaHome must exist at " + controllerJavaHome] @TO@ MethodName:configurationDirectoryExists:[controllerJavaHome, "controllerJavaHome must exist at " + controllerJavaHome] @AT@ 4534 @LENGTH@ 96
---------UPD SimpleName@@javaHome @TO@ controllerJavaHome @AT@ 4563 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:RepositoryAwareResourceInformation, Repositories repositories, CollectionResourceMapping mapping, ResourceMappings provider, RepositoryMetadata repositoryMetadata,  @TO@ public, voidMethodName:RepositoryAwareResourceInformation, Repositories repositories, CollectionResourceMapping mapping, RepositoryResourceMappings provider, RepositoryMetadata repositoryMetadata,  @AT@ 1841 @LENGTH@ 610
---UPD SingleVariableDeclaration@@ResourceMappings provider @TO@ RepositoryResourceMappings provider @AT@ 1948 @LENGTH@ 25
------UPD SimpleType@@ResourceMappings @TO@ RepositoryResourceMappings @AT@ 1948 @LENGTH@ 16


DEL IfStatement@@if (it instanceof Closeable) {  IOHelper.close((Closeable)it);} else if (it instanceof Scanner) {  ((Scanner)it).close();} @AT@ 2665 @LENGTH@ 234


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[public]WSEndpointDeploymentUnit, SimpleAttachable[DeploymentUnit] @AT@ 5925 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5925 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5933 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5940 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5957 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 5993 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 5996 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 5996 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 5996 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 6003 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 6023 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 6027 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 6033 @LENGTH@ 77
---------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 5141 @LENGTH@ 53
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 6119 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6126 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6126 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6143 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 6156 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 6156 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 6180 @LENGTH@ 10


DEL MethodDeclaration@@private, void, MethodName:registerImplicitBeans, ParserContext parserContext,  @AT@ 3492 @LENGTH@ 685
---DEL Modifier@@private @AT@ 3492 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 3500 @LENGTH@ 4
---DEL SimpleName@@MethodName:registerImplicitBeans @AT@ 3505 @LENGTH@ 21
---DEL SingleVariableDeclaration@@ParserContext parserContext @AT@ 3527 @LENGTH@ 27
------DEL SimpleType@@ParserContext @AT@ 3527 @LENGTH@ 13
------DEL SimpleName@@parserContext @AT@ 3541 @LENGTH@ 13
---DEL VariableDeclarationStatement@@BeanDefinitionRegistry registry=parserContext.getRegistry(); @AT@ 3560 @LENGTH@ 62
------DEL SimpleType@@BeanDefinitionRegistry @AT@ 3560 @LENGTH@ 22
------DEL VariableDeclarationFragment@@registry=parserContext.getRegistry() @AT@ 3583 @LENGTH@ 38
---------DEL SimpleName@@registry @AT@ 3583 @LENGTH@ 8
---------DEL MethodInvocation@@parserContext.getRegistry() @AT@ 3594 @LENGTH@ 27
------------DEL SimpleName@@Name:parserContext @AT@ 3594 @LENGTH@ 13
------------DEL SimpleName@@MethodName:getRegistry:[] @AT@ 3608 @LENGTH@ 13
---DEL IfStatement@@if (!registry.containsBeanDefinition(DEFAULT_CONVERTER)) {  BeanDefinition def=BeanDefinitionBuilder.genericBeanDefinition(CustomEditorConfigurer.class).setRole(BeanDefinition.ROLE_INFRASTRUCTURE).addPropertyValue("propertyEditorRegistrars",BeanDefinitionBuilder.genericBeanDefinition("org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar").setRole(BeanDefinition.ROLE_INFRASTRUCTURE).getBeanDefinition()).getBeanDefinition();  registry.registerBeanDefinition(DEFAULT_CONVERTER,def);} @AT@ 3625 @LENGTH@ 549
------DEL PrefixExpression@@!registry.containsBeanDefinition(DEFAULT_CONVERTER) @AT@ 3629 @LENGTH@ 51
---------DEL Operator@@! @AT@ 3629 @LENGTH@ 1
---------DEL MethodInvocation@@registry.containsBeanDefinition(DEFAULT_CONVERTER) @AT@ 3630 @LENGTH@ 50
------------DEL SimpleName@@Name:registry @AT@ 3630 @LENGTH@ 8
------------DEL SimpleName@@MethodName:containsBeanDefinition:[DEFAULT_CONVERTER] @AT@ 3639 @LENGTH@ 41
---------------DEL SimpleName@@DEFAULT_CONVERTER @AT@ 3662 @LENGTH@ 17
------DEL Block@@ThenBody:{  BeanDefinition def=BeanDefinitionBuilder.genericBeanDefinition(CustomEditorConfigurer.class).setRole(BeanDefinition.ROLE_INFRASTRUCTURE).addPropertyValue("propertyEditorRegistrars",BeanDefinitionBuilder.genericBeanDefinition("org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar").setRole(BeanDefinition.ROLE_INFRASTRUCTURE).getBeanDefinition()).getBeanDefinition();  registry.registerBeanDefinition(DEFAULT_CONVERTER,def);} @AT@ 3682 @LENGTH@ 492
---------DEL VariableDeclarationStatement@@BeanDefinition def=BeanDefinitionBuilder.genericBeanDefinition(CustomEditorConfigurer.class).setRole(BeanDefinition.ROLE_INFRASTRUCTURE).addPropertyValue("propertyEditorRegistrars",BeanDefinitionBuilder.genericBeanDefinition("org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar").setRole(BeanDefinition.ROLE_INFRASTRUCTURE).getBeanDefinition()).getBeanDefinition(); @AT@ 3687 @LENGTH@ 423
------------DEL SimpleType@@BeanDefinition @AT@ 3687 @LENGTH@ 14
------------DEL VariableDeclarationFragment@@def=BeanDefinitionBuilder.genericBeanDefinition(CustomEditorConfigurer.class).setRole(BeanDefinition.ROLE_INFRASTRUCTURE).addPropertyValue("propertyEditorRegistrars",BeanDefinitionBuilder.genericBeanDefinition("org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar").setRole(BeanDefinition.ROLE_INFRASTRUCTURE).getBeanDefinition()).getBeanDefinition() @AT@ 3702 @LENGTH@ 407
---------------DEL SimpleName@@def @AT@ 3702 @LENGTH@ 3
---------------DEL MethodInvocation@@BeanDefinitionBuilder.genericBeanDefinition(CustomEditorConfigurer.class).setRole(BeanDefinition.ROLE_INFRASTRUCTURE).addPropertyValue("propertyEditorRegistrars",BeanDefinitionBuilder.genericBeanDefinition("org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar").setRole(BeanDefinition.ROLE_INFRASTRUCTURE).getBeanDefinition()).getBeanDefinition() @AT@ 3708 @LENGTH@ 401
------------------DEL MethodInvocation@@MethodName:addPropertyValue:["propertyEditorRegistrars", BeanDefinitionBuilder.genericBeanDefinition("org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar").setRole(BeanDefinition.ROLE_INFRASTRUCTURE).getBeanDefinition()] @AT@ 3708 @LENGTH@ 381
---------------------DEL StringLiteral@@"propertyEditorRegistrars" @AT@ 3855 @LENGTH@ 26
---------------------DEL MethodInvocation@@BeanDefinitionBuilder.genericBeanDefinition("org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar").setRole(BeanDefinition.ROLE_INFRASTRUCTURE).getBeanDefinition() @AT@ 3888 @LENGTH@ 200
------------------------DEL MethodInvocation@@MethodName:setRole:[BeanDefinition.ROLE_INFRASTRUCTURE] @AT@ 3888 @LENGTH@ 180
---------------------------DEL QualifiedName@@BeanDefinition.ROLE_INFRASTRUCTURE @AT@ 4033 @LENGTH@ 34
------------------------------DEL SimpleName@@BeanDefinition @AT@ 4033 @LENGTH@ 14
------------------------------DEL SimpleName@@ROLE_INFRASTRUCTURE @AT@ 4048 @LENGTH@ 19
------------------------DEL MethodInvocation@@MethodName:genericBeanDefinition:["org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar"] @AT@ 3888 @LENGTH@ 129
---------------------------DEL StringLiteral@@"org.springframework.data.hadoop.mapreduce.MapReducePropertyEditorRegistrar" @AT@ 3940 @LENGTH@ 76
------------------------DEL SimpleName@@Name:BeanDefinitionBuilder @AT@ 3888 @LENGTH@ 21
------------------------DEL SimpleName@@MethodName:getBeanDefinition:[] @AT@ 4069 @LENGTH@ 19
------------------DEL MethodInvocation@@MethodName:setRole:[BeanDefinition.ROLE_INFRASTRUCTURE] @AT@ 3708 @LENGTH@ 123
---------------------DEL QualifiedName@@BeanDefinition.ROLE_INFRASTRUCTURE @AT@ 3796 @LENGTH@ 34
------------------------DEL SimpleName@@BeanDefinition @AT@ 3796 @LENGTH@ 14
------------------------DEL SimpleName@@ROLE_INFRASTRUCTURE @AT@ 3811 @LENGTH@ 19
------------------DEL MethodInvocation@@MethodName:genericBeanDefinition:[CustomEditorConfigurer.class] @AT@ 3708 @LENGTH@ 73
---------------------DEL TypeLiteral@@CustomEditorConfigurer.class @AT@ 3752 @LENGTH@ 28
------------------DEL SimpleName@@Name:BeanDefinitionBuilder @AT@ 3708 @LENGTH@ 21
------------------DEL SimpleName@@MethodName:getBeanDefinition:[] @AT@ 4090 @LENGTH@ 19
---------DEL ExpressionStatement@@MethodInvocation:registry.registerBeanDefinition(DEFAULT_CONVERTER,def) @AT@ 4114 @LENGTH@ 56
------------DEL MethodInvocation@@registry.registerBeanDefinition(DEFAULT_CONVERTER,def) @AT@ 4114 @LENGTH@ 55
---------------DEL SimpleName@@Name:registry @AT@ 4114 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:registerBeanDefinition:[DEFAULT_CONVERTER, def] @AT@ 4123 @LENGTH@ 46
------------------DEL SimpleName@@DEFAULT_CONVERTER @AT@ 4146 @LENGTH@ 17
------------------DEL SimpleName@@def @AT@ 4165 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertTrue(stopWatch.taken() < 100) @TO@ MethodInvocation:assertTrue(stopWatch.taken() < 1000) @AT@ 3834 @LENGTH@ 36
---UPD MethodInvocation@@assertTrue(stopWatch.taken() < 100) @TO@ assertTrue(stopWatch.taken() < 1000) @AT@ 3834 @LENGTH@ 35
------UPD SimpleName@@MethodName:assertTrue:[stopWatch.taken() < 100] @TO@ MethodName:assertTrue:[stopWatch.taken() < 1000] @AT@ 3834 @LENGTH@ 35
---------UPD InfixExpression@@stopWatch.taken() < 100 @TO@ stopWatch.taken() < 1000 @AT@ 3845 @LENGTH@ 23
------------UPD NumberLiteral@@100 @TO@ 1000 @AT@ 3865 @LENGTH@ 3


INS MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @TO@ TypeDeclaration@@[private, static]BootTimeScannerDeployment, [DeploymentOperations] @AT@ 16570 @LENGTH@ 100
---INS Modifier@@public @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 16570 @LENGTH@ 6
---INS ParameterizedType@@Set<String> @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 16577 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 16577 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 16581 @LENGTH@ 6
---INS SimpleName@@MethodName:getPersistentDeployments @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 16589 @LENGTH@ 24
---INS ReturnStatement@@MethodInvocation:Collections.emptySet() @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 16630 @LENGTH@ 30
------INS MethodInvocation@@Collections.emptySet() @TO@ ReturnStatement@@MethodInvocation:Collections.emptySet() @AT@ 16637 @LENGTH@ 22
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptySet() @AT@ 16637 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.emptySet() @AT@ 16649 @LENGTH@ 10


INS MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @TO@ TypeDeclaration@@[public, abstract]RabbitUtils,  @AT@ 4728 @LENGTH@ 335
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @AT@ 4728 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @AT@ 4735 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @AT@ 4742 @LENGTH@ 7
---INS SimpleName@@MethodName:isNormalShutdown @TO@ MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @AT@ 4750 @LENGTH@ 16
---INS SingleVariableDeclaration@@ShutdownSignalException sig @TO@ MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @AT@ 4767 @LENGTH@ 27
------INS SimpleType@@ShutdownSignalException @TO@ SingleVariableDeclaration@@ShutdownSignalException sig @AT@ 4767 @LENGTH@ 23
------INS SimpleName@@sig @TO@ SingleVariableDeclaration@@ShutdownSignalException sig @AT@ 4791 @LENGTH@ 3
---INS VariableDeclarationStatement@@Object shutdownReason=sig.getReason(); @TO@ MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @AT@ 4800 @LENGTH@ 40
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object shutdownReason=sig.getReason(); @AT@ 4800 @LENGTH@ 6
------INS VariableDeclarationFragment@@shutdownReason=sig.getReason() @TO@ VariableDeclarationStatement@@Object shutdownReason=sig.getReason(); @AT@ 4807 @LENGTH@ 32
---------INS SimpleName@@shutdownReason @TO@ VariableDeclarationFragment@@shutdownReason=sig.getReason() @AT@ 4807 @LENGTH@ 14
---------INS MethodInvocation@@sig.getReason() @TO@ VariableDeclarationFragment@@shutdownReason=sig.getReason() @AT@ 4824 @LENGTH@ 15
------------INS SimpleName@@Name:sig @TO@ MethodInvocation@@sig.getReason() @AT@ 4824 @LENGTH@ 3
------------INS SimpleName@@MethodName:getReason:[] @TO@ MethodInvocation@@sig.getReason() @AT@ 4828 @LENGTH@ 11
---INS ReturnStatement@@InfixExpression:shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @TO@ MethodDeclaration@@public, static, boolean, MethodName:isNormalShutdown, ShutdownSignalException sig,  @AT@ 4844 @LENGTH@ 216
------INS InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @TO@ ReturnStatement@@InfixExpression:shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 4851 @LENGTH@ 208
---------INS InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @TO@ InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 4851 @LENGTH@ 132
------------INS InstanceofExpression@@shutdownReason instanceof AMQP.Connection.Close @TO@ InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4851 @LENGTH@ 47
---------------INS SimpleName@@shutdownReason @TO@ InstanceofExpression@@shutdownReason instanceof AMQP.Connection.Close @AT@ 4851 @LENGTH@ 14
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@shutdownReason instanceof AMQP.Connection.Close @AT@ 4866 @LENGTH@ 10
---------------INS SimpleType@@AMQP.Connection.Close @TO@ InstanceofExpression@@shutdownReason instanceof AMQP.Connection.Close @AT@ 4877 @LENGTH@ 21
------------INS Operator@@&& @TO@ InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4898 @LENGTH@ 2
------------INS InfixExpression@@AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @TO@ InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4906 @LENGTH@ 77
---------------INS QualifiedName@@AMQP.REPLY_SUCCESS @TO@ InfixExpression@@AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4906 @LENGTH@ 18
------------------INS SimpleName@@AMQP @TO@ QualifiedName@@AMQP.REPLY_SUCCESS @AT@ 4906 @LENGTH@ 4
------------------INS SimpleName@@REPLY_SUCCESS @TO@ QualifiedName@@AMQP.REPLY_SUCCESS @AT@ 4911 @LENGTH@ 13
---------------INS Operator@@== @TO@ InfixExpression@@AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4924 @LENGTH@ 2
---------------INS MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyCode() @TO@ InfixExpression@@AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4928 @LENGTH@ 55
------------------INS ParenthesizedExpression@@((AMQP.Connection.Close)shutdownReason) @TO@ MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4928 @LENGTH@ 40
---------------------INS CastExpression@@(AMQP.Connection.Close)shutdownReason @TO@ ParenthesizedExpression@@((AMQP.Connection.Close)shutdownReason) @AT@ 4929 @LENGTH@ 38
------------------------INS SimpleType@@AMQP.Connection.Close @TO@ CastExpression@@(AMQP.Connection.Close)shutdownReason @AT@ 4930 @LENGTH@ 21
------------------------INS SimpleName@@shutdownReason @TO@ CastExpression@@(AMQP.Connection.Close)shutdownReason @AT@ 4953 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getReplyCode:[] @TO@ MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyCode() @AT@ 4969 @LENGTH@ 14
---------INS Operator@@&& @TO@ InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 4983 @LENGTH@ 2
---------INS MethodInvocation@@"OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @TO@ InfixExpression@@shutdownReason instanceof AMQP.Connection.Close && AMQP.REPLY_SUCCESS == ((AMQP.Connection.Close)shutdownReason).getReplyCode() && "OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 4991 @LENGTH@ 68
------------INS StringLiteral@@"OK" @TO@ MethodInvocation@@"OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 4991 @LENGTH@ 4
------------INS SimpleName@@MethodName:equals:[((AMQP.Connection.Close)shutdownReason).getReplyText()] @TO@ MethodInvocation@@"OK".equals(((AMQP.Connection.Close)shutdownReason).getReplyText()) @AT@ 4996 @LENGTH@ 63
---------------INS MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyText() @TO@ SimpleName@@MethodName:equals:[((AMQP.Connection.Close)shutdownReason).getReplyText()] @AT@ 5003 @LENGTH@ 55
------------------INS ParenthesizedExpression@@((AMQP.Connection.Close)shutdownReason) @TO@ MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyText() @AT@ 5003 @LENGTH@ 40
---------------------INS CastExpression@@(AMQP.Connection.Close)shutdownReason @TO@ ParenthesizedExpression@@((AMQP.Connection.Close)shutdownReason) @AT@ 5004 @LENGTH@ 38
------------------------INS SimpleType@@AMQP.Connection.Close @TO@ CastExpression@@(AMQP.Connection.Close)shutdownReason @AT@ 5005 @LENGTH@ 21
------------------------INS SimpleName@@shutdownReason @TO@ CastExpression@@(AMQP.Connection.Close)shutdownReason @AT@ 5028 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getReplyText:[] @TO@ MethodInvocation@@((AMQP.Connection.Close)shutdownReason).getReplyText() @AT@ 5044 @LENGTH@ 14


UPD VariableDeclarationStatement@@String safe=UnsafeUriCharactersEncoder.encode(remaining); @TO@ String safe=UnsafeUriCharactersEncoder.encodeHttpURI(remaining); @AT@ 6383 @LENGTH@ 59
---UPD VariableDeclarationFragment@@safe=UnsafeUriCharactersEncoder.encode(remaining) @TO@ safe=UnsafeUriCharactersEncoder.encodeHttpURI(remaining) @AT@ 6390 @LENGTH@ 51
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(remaining) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(remaining) @AT@ 6397 @LENGTH@ 44
---------UPD SimpleName@@MethodName:encode:[remaining] @TO@ MethodName:encodeHttpURI:[remaining] @AT@ 6424 @LENGTH@ 17


UPD ExpressionStatement@@Assignment:oauthException=new UnauthorizedClientException(DETAILS) @TO@ Assignment:oauthException=new UnauthorizedUserException(DETAILS) @AT@ 3524 @LENGTH@ 58
---UPD Assignment@@oauthException=new UnauthorizedClientException(DETAILS) @TO@ oauthException=new UnauthorizedUserException(DETAILS) @AT@ 3524 @LENGTH@ 57
------UPD ClassInstanceCreation@@UnauthorizedClientException[DETAILS] @TO@ UnauthorizedUserException[DETAILS] @AT@ 3541 @LENGTH@ 40
---------UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 3545 @LENGTH@ 27


UPD ExpressionStatement@@Assignment:zookeeperPassword=System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,newUserPassword) @TO@ Assignment:zookeeperPassword=PasswordEncoder.decode(System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword))) @AT@ 12348 @LENGTH@ 98
---UPD Assignment@@zookeeperPassword=System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,newUserPassword) @TO@ zookeeperPassword=PasswordEncoder.decode(System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword))) @AT@ 12348 @LENGTH@ 97
------DEL MethodInvocation@@System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,newUserPassword) @AT@ 12368 @LENGTH@ 77
------INS MethodInvocation@@PasswordEncoder.decode(System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword))) @TO@ Assignment@@zookeeperPassword=System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,newUserPassword) @AT@ 12409 @LENGTH@ 125
---------INS SimpleName@@Name:PasswordEncoder @TO@ MethodInvocation@@PasswordEncoder.decode(System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword))) @AT@ 12409 @LENGTH@ 15
---------INS SimpleName@@MethodName:decode:[System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword))] @TO@ MethodInvocation@@PasswordEncoder.decode(System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword))) @AT@ 12425 @LENGTH@ 109
------------INS MethodInvocation@@System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword)) @TO@ SimpleName@@MethodName:decode:[System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword))] @AT@ 12432 @LENGTH@ 101
---------------MOV SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword)) @AT@ 12368 @LENGTH@ 6
---------------MOV SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword)) @AT@ 12368 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:getProperty:[CreateEnsembleOptions.ZOOKEEPER_PASSWORD, newUserPassword] @TO@ MethodInvocation@@System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword)) @AT@ 12375 @LENGTH@ 70
------------------INS MethodInvocation@@PasswordEncoder.encode(newUserPassword) @TO@ SimpleName@@MethodName:getProperty:[CreateEnsembleOptions.ZOOKEEPER_PASSWORD, newUserPassword] @AT@ 12493 @LENGTH@ 39
---------------------INS SimpleName@@Name:PasswordEncoder @TO@ MethodInvocation@@PasswordEncoder.encode(newUserPassword) @AT@ 12493 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:encode:[newUserPassword] @TO@ MethodInvocation@@PasswordEncoder.encode(newUserPassword) @AT@ 12509 @LENGTH@ 23
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
---------------MOV SimpleName@@MethodName:getProperty:[CreateEnsembleOptions.ZOOKEEPER_PASSWORD, newUserPassword] @TO@ MethodInvocation@@System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,PasswordEncoder.encode(newUserPassword)) @AT@ 12375 @LENGTH@ 70
------------------INS MethodInvocation@@PasswordEncoder.encode(newUserPassword) @TO@ SimpleName@@MethodName:getProperty:[CreateEnsembleOptions.ZOOKEEPER_PASSWORD, newUserPassword] @AT@ 12493 @LENGTH@ 39
---------------------INS SimpleName@@Name:PasswordEncoder @TO@ MethodInvocation@@PasswordEncoder.encode(newUserPassword) @AT@ 12493 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:encode:[newUserPassword] @TO@ MethodInvocation@@PasswordEncoder.encode(newUserPassword) @AT@ 12509 @LENGTH@ 23
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15
------------------------MOV SimpleName@@newUserPassword @TO@ SimpleName@@MethodName:encode:[newUserPassword] @AT@ 12429 @LENGTH@ 15


INS MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK, Long employeeId, Long departmentId,  @TO@ TypeDeclaration@@[@Embeddable, public]EmbeddedIdExampleEmployeePK, [Serializable] @AT@ 1091 @LENGTH@ 143
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK, Long employeeId, Long departmentId,  @AT@ 1091 @LENGTH@ 6
---INS SimpleName@@MethodName:EmbeddedIdExampleEmployeePK @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK, Long employeeId, Long departmentId,  @AT@ 1098 @LENGTH@ 27
---INS SingleVariableDeclaration@@Long employeeId @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK, Long employeeId, Long departmentId,  @AT@ 1126 @LENGTH@ 15
------INS SimpleType@@Long @TO@ SingleVariableDeclaration@@Long employeeId @AT@ 1126 @LENGTH@ 4
------INS SimpleName@@employeeId @TO@ SingleVariableDeclaration@@Long employeeId @AT@ 1131 @LENGTH@ 10
---INS SingleVariableDeclaration@@Long departmentId @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK, Long employeeId, Long departmentId,  @AT@ 1143 @LENGTH@ 17
------INS SimpleType@@Long @TO@ SingleVariableDeclaration@@Long departmentId @AT@ 1143 @LENGTH@ 4
------INS SimpleName@@departmentId @TO@ SingleVariableDeclaration@@Long departmentId @AT@ 1148 @LENGTH@ 12
---INS ExpressionStatement@@Assignment:this.employeeId=employeeId @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK, Long employeeId, Long departmentId,  @AT@ 1166 @LENGTH@ 29
------INS Assignment@@this.employeeId=employeeId @TO@ ExpressionStatement@@Assignment:this.employeeId=employeeId @AT@ 1166 @LENGTH@ 28
---------INS FieldAccess@@this.employeeId @TO@ Assignment@@this.employeeId=employeeId @AT@ 1166 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.employeeId @AT@ 1166 @LENGTH@ 4
------------INS SimpleName@@employeeId @TO@ FieldAccess@@this.employeeId @AT@ 1171 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.employeeId=employeeId @AT@ 1181 @LENGTH@ 1
---------INS SimpleName@@employeeId @TO@ Assignment@@this.employeeId=employeeId @AT@ 1184 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:this.departmentId=departmentId @TO@ MethodDeclaration@@public, voidMethodName:EmbeddedIdExampleEmployeePK, Long employeeId, Long departmentId,  @AT@ 1198 @LENGTH@ 33
------INS Assignment@@this.departmentId=departmentId @TO@ ExpressionStatement@@Assignment:this.departmentId=departmentId @AT@ 1198 @LENGTH@ 32
---------INS FieldAccess@@this.departmentId @TO@ Assignment@@this.departmentId=departmentId @AT@ 1198 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ FieldAccess@@this.departmentId @AT@ 1198 @LENGTH@ 4
------------INS SimpleName@@departmentId @TO@ FieldAccess@@this.departmentId @AT@ 1203 @LENGTH@ 12
---------INS Operator@@= @TO@ Assignment@@this.departmentId=departmentId @AT@ 1215 @LENGTH@ 1
---------INS SimpleName@@departmentId @TO@ Assignment@@this.departmentId=departmentId @AT@ 1218 @LENGTH@ 12


INS VariableDeclarationStatement@@String sortParameter=getSortParameter(parameter); @TO@ MethodDeclaration@@public, void, MethodName:enhance, UriComponentsBuilder builder, MethodParameter parameter, Object value,  @AT@ 1700 @LENGTH@ 51
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sortParameter=getSortParameter(parameter); @AT@ 1700 @LENGTH@ 6
---INS VariableDeclarationFragment@@sortParameter=getSortParameter(parameter) @TO@ VariableDeclarationStatement@@String sortParameter=getSortParameter(parameter); @AT@ 1707 @LENGTH@ 43
------INS SimpleName@@sortParameter @TO@ VariableDeclarationFragment@@sortParameter=getSortParameter(parameter) @AT@ 1707 @LENGTH@ 13
------MOV MethodInvocation@@getSortParameter(parameter) @TO@ VariableDeclarationFragment@@sortParameter=getSortParameter(parameter) @AT@ 1946 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:controller.createNewEntity(request,null) @TO@ MethodInvocation:controller.postEntity(request,null) @AT@ 2106 @LENGTH@ 42
---UPD MethodInvocation@@controller.createNewEntity(request,null) @TO@ controller.postEntity(request,null) @AT@ 2106 @LENGTH@ 41
------UPD SimpleName@@MethodName:createNewEntity:[request, null] @TO@ MethodName:postEntity:[request, null] @AT@ 2117 @LENGTH@ 30


UPD ExpressionStatement@@Assignment:queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ Assignment:queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 9071 @LENGTH@ 61
---UPD Assignment@@queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 9071 @LENGTH@ 60
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(queryString) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 9085 @LENGTH@ 46
---------UPD SimpleName@@MethodName:encode:[queryString] @TO@ MethodName:encodeHttpURI:[queryString] @AT@ 9112 @LENGTH@ 19


UPD IfStatement@@if (name == null) {  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @TO@ if (name == null) {  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @AT@ 8292 @LENGTH@ 123
---UPD Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @TO@ ThenBody:{  throw ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @AT@ 8310 @LENGTH@ 105
------INS ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @TO@ Block@@ThenBody:{  ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME));} @AT@ 8324 @LENGTH@ 87
---------MOV MethodInvocation@@ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @AT@ 8324 @LENGTH@ 80
------DEL ExpressionStatement@@MethodInvocation:ParseUtils.missingRequired(reader,Collections.singleton(CommonAttributes.NAME)) @AT@ 8324 @LENGTH@ 81


UPD VariableDeclarationStatement@@URI addressUri=new URI(UnsafeUriCharactersEncoder.encode(address)); @TO@ URI addressUri=new URI(UnsafeUriCharactersEncoder.encodeHttpURI(address)); @AT@ 8583 @LENGTH@ 69
---UPD VariableDeclarationFragment@@addressUri=new URI(UnsafeUriCharactersEncoder.encode(address)) @TO@ addressUri=new URI(UnsafeUriCharactersEncoder.encodeHttpURI(address)) @AT@ 8587 @LENGTH@ 64
------UPD ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(address)] @TO@ URI[UnsafeUriCharactersEncoder.encodeHttpURI(address)] @AT@ 8600 @LENGTH@ 51
---------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(address) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(address) @AT@ 8608 @LENGTH@ 42
------------UPD SimpleName@@MethodName:encode:[address] @TO@ MethodName:encodeHttpURI:[address] @AT@ 8635 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ Assignment:uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 7456 @LENGTH@ 45
---UPD Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ uri=UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 7456 @LENGTH@ 44
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(uri) @AT@ 7462 @LENGTH@ 38
---------UPD SimpleName@@MethodName:encode:[uri] @TO@ MethodName:encodeHttpURI:[uri] @AT@ 7489 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testWatcher, Exception,  @AT@ 2228 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 2228 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 2228 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 2235 @LENGTH@ 11
---------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 2241 @LENGTH@ 4


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-683] Fix mq smoke MQFabricTest"), public]MQFabricTest, MQTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQFabricTest, MQTestSupport @AT@ 1783 @LENGTH@ 1898
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-683] Fix mq smoke MQFabricTest") @AT@ 1876 @LENGTH@ 49


UPD TypeDeclaration@@[@ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]ClusterBaseTestClassTests, AbstractYarnClusterTests @TO@ [@ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, @DirtiesContext(classMode=ClassMode.AFTER_CLASS), public]ClusterBaseTestClassTests, AbstractYarnClusterTests @AT@ 1141 @LENGTH@ 538
---INS NormalAnnotation@@@DirtiesContext(classMode=ClassMode.AFTER_CLASS) @TO@ TypeDeclaration@@[@ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]ClusterBaseTestClassTests, AbstractYarnClusterTests @AT@ 1354 @LENGTH@ 48


UPD TryStatement@@try {  URI uploadUri=fabric.getMavenRepoUploadURI();  List<PatchDescriptor> descriptors=new ArrayList<PatchDescriptor>();  ZipInputStream zis=new ZipInputStream(new BufferedInputStream(patch.openStream()));  try {    ZipEntry entry=zis.getNextEntry();    while (entry != null) {      if (!entry.isDirectory()) {        String entryName=entry.getName();        if (entryName.startsWith("repository/")) {          String fileName=entryName.substring("repository/".length());          while (fileName.startsWith("/")) {            fileName=fileName.substring(1);          }          URL uploadUrl=uploadUri.resolve(fileName).toURL();          URLConnection con=uploadUrl.openConnection();          if (con instanceof HttpURLConnection) {            ((HttpURLConnection)con).setRequestMethod("PUT");          }          if (login != null && password != null) {            con.setRequestProperty("Authorization","Basic " + Base64Encoder.encode(login + ":" + password));          }          con.setDoInput(true);          con.setDoOutput(true);          con.connect();          OutputStream os=con.getOutputStream();          try {            try {              copy(zis,os);              if (con instanceof HttpURLConnection) {                int code=((HttpURLConnection)con).getResponseCode();                if (code < 200 || code >= 300) {                  throw new IOException("Error uploading patched jars: " + ((HttpURLConnection)con).getResponseMessage());                }              }            }  finally {              zis.closeEntry();            }          }  finally {            close(os);          }        } else         if (entryName.endsWith(".patch") && !entryName.contains("/")) {          try {            Properties patchMetadata=new Properties();            patchMetadata.load(zis);            descriptors.add(new PatchDescriptor(patchMetadata));          }  finally {            zis.closeEntry();          }        }      }      entry=zis.getNextEntry();    }  }  finally {    close(zis);  }  for (  PatchDescriptor descriptor : descriptors) {    String profileId="patch-" + descriptor.getId();    Profile profile=version.getProfile(profileId);    if (profile == null) {      profile=version.createProfile(profileId);      profile.setOverrides(descriptor.getBundles());      Profile defaultProfile=version.getProfile("default");      List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));      if (!parents.contains(profile)) {        parents.add(profile);        defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));      }    }  }} catch (Exception e) {  throw new RuntimeException("Unable to apply patch",e);} @TO@ try {  URI uploadUri=fabric.getMavenRepoUploadURI();  List<PatchDescriptor> descriptors=new ArrayList<PatchDescriptor>();  ZipInputStream zis=new ZipInputStream(new BufferedInputStream(patch.openStream()));  try {    ZipEntry entry=zis.getNextEntry();    while (entry != null) {      if (!entry.isDirectory()) {        String entryName=entry.getName();        if (entryName.startsWith("repository/")) {          String fileName=entryName.substring("repository/".length());          while (fileName.startsWith("/")) {            fileName=fileName.substring(1);          }          URL uploadUrl=uploadUri.resolve(fileName).toURL();          URLConnection con=uploadUrl.openConnection();          if (con instanceof HttpURLConnection) {            ((HttpURLConnection)con).setRequestMethod("PUT");          }          if (login != null && password != null) {            con.setRequestProperty("Authorization","Basic " + Base64Encoder.encode(login + ":" + password));          }          con.setDoInput(true);          con.setDoOutput(true);          con.connect();          OutputStream os=con.getOutputStream();          try {            try {              copy(zis,os);              if (con instanceof HttpURLConnection) {                int code=((HttpURLConnection)con).getResponseCode();                if (code < 200 || code >= 300) {                  throw new IOException("Error uploading patched jars: " + ((HttpURLConnection)con).getResponseMessage());                }              }            }  finally {              zis.closeEntry();            }          }  finally {            close(os);          }        } else         if (entryName.endsWith(".patch") && !entryName.contains("/")) {          try {            Properties patchMetadata=new Properties();            patchMetadata.load(zis);            descriptors.add(new PatchDescriptor(patchMetadata));          }  finally {            zis.closeEntry();          }        }      }      entry=zis.getNextEntry();    }  }  finally {    close(zis);  }  Profile[] profiles=version.getProfiles();  for (  PatchDescriptor descriptor : descriptors) {    String profileId="patch-" + descriptor.getId();    Profile profile=null;    for (    Profile p : profiles) {      if (profileId.equals(p.getId())) {        profile=p;        break;      }    }    if (profile == null) {      profile=version.createProfile(profileId);      profile.setOverrides(descriptor.getBundles());      Profile defaultProfile=version.getProfile("default");      List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));      if (!parents.contains(profile)) {        parents.add(profile);        defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));      }    } else {      LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId());    }  }} catch (Exception e) {  throw new RuntimeException("Unable to apply patch",e);} @AT@ 1987 @LENGTH@ 4025
---UPD EnhancedForStatement@@for (PatchDescriptor descriptor : descriptors) {  String profileId="patch-" + descriptor.getId();  Profile profile=version.getProfile(profileId);  if (profile == null) {    profile=version.createProfile(profileId);    profile.setOverrides(descriptor.getBundles());    Profile defaultProfile=version.getProfile("default");    List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));    if (!parents.contains(profile)) {      parents.add(profile);      defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));    }  }} @TO@ for (PatchDescriptor descriptor : descriptors) {  String profileId="patch-" + descriptor.getId();  Profile profile=null;  for (  Profile p : profiles) {    if (profileId.equals(p.getId())) {      profile=p;      break;    }  }  if (profile == null) {    profile=version.createProfile(profileId);    profile.setOverrides(descriptor.getBundles());    Profile defaultProfile=version.getProfile("default");    List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));    if (!parents.contains(profile)) {      parents.add(profile);      defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));    }  } else {    LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId());  }} @AT@ 5114 @LENGTH@ 788
------DEL VariableDeclarationStatement@@Profile profile=version.getProfile(profileId); @AT@ 5245 @LENGTH@ 48
---------DEL VariableDeclarationFragment@@profile=version.getProfile(profileId) @AT@ 5253 @LENGTH@ 39
------------DEL MethodInvocation@@version.getProfile(profileId) @AT@ 5263 @LENGTH@ 29
------INS VariableDeclarationStatement@@Profile profile=null; @TO@ EnhancedForStatement@@for (PatchDescriptor descriptor : descriptors) {  String profileId="patch-" + descriptor.getId();  Profile profile=version.getProfile(profileId);  if (profile == null) {    profile=version.createProfile(profileId);    profile.setOverrides(descriptor.getBundles());    Profile defaultProfile=version.getProfile("default");    List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));    if (!parents.contains(profile)) {      parents.add(profile);      defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));    }  }} @AT@ 5301 @LENGTH@ 23
---------MOV SimpleType@@Profile @TO@ VariableDeclarationStatement@@Profile profile=null; @AT@ 5245 @LENGTH@ 7
---------INS VariableDeclarationFragment@@profile=null @TO@ VariableDeclarationStatement@@Profile profile=null; @AT@ 5309 @LENGTH@ 14
------------MOV SimpleName@@profile @TO@ VariableDeclarationFragment@@profile=null @AT@ 5253 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@profile=null @AT@ 5319 @LENGTH@ 4
------UPD IfStatement@@if (profile == null) {  profile=version.createProfile(profileId);  profile.setOverrides(descriptor.getBundles());  Profile defaultProfile=version.getProfile("default");  List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));  if (!parents.contains(profile)) {    parents.add(profile);    defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));  }} @TO@ if (profile == null) {  profile=version.createProfile(profileId);  profile.setOverrides(descriptor.getBundles());  Profile defaultProfile=version.getProfile("default");  List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));  if (!parents.contains(profile)) {    parents.add(profile);    defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));  }} else {  LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId());} @AT@ 5310 @LENGTH@ 578
---------INS Block@@ElseBody:{  LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId());} @TO@ IfStatement@@if (profile == null) {  profile=version.createProfile(profileId);  profile.setOverrides(descriptor.getBundles());  Profile defaultProfile=version.getProfile("default");  List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));  if (!parents.contains(profile)) {    parents.add(profile);    defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));  }} @AT@ 6133 @LENGTH@ 155
------------INS ExpressionStatement@@MethodInvocation:LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId()) @TO@ Block@@ElseBody:{  LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId());} @AT@ 6155 @LENGTH@ 115
---------------INS MethodInvocation@@LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId()) @TO@ ExpressionStatement@@MethodInvocation:LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId()) @AT@ 6155 @LENGTH@ 114
------------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId()) @AT@ 6155 @LENGTH@ 6
------------------INS SimpleName@@MethodName:info:["The patch {} has already been applied to version {}, ignoring.", descriptor.getId(), version.getId()] @TO@ MethodInvocation@@LOGGER.info("The patch {} has already been applied to version {}, ignoring.",descriptor.getId(),version.getId()) @AT@ 6162 @LENGTH@ 107
---------------------INS StringLiteral@@"The patch {} has already been applied to version {}, ignoring." @TO@ SimpleName@@MethodName:info:["The patch {} has already been applied to version {}, ignoring.", descriptor.getId(), version.getId()] @AT@ 6167 @LENGTH@ 64
---------------------INS MethodInvocation@@descriptor.getId() @TO@ SimpleName@@MethodName:info:["The patch {} has already been applied to version {}, ignoring.", descriptor.getId(), version.getId()] @AT@ 6233 @LENGTH@ 18
------------------------INS SimpleName@@Name:descriptor @TO@ MethodInvocation@@descriptor.getId() @AT@ 6233 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@descriptor.getId() @AT@ 6244 @LENGTH@ 7
---------------------INS MethodInvocation@@version.getId() @TO@ SimpleName@@MethodName:info:["The patch {} has already been applied to version {}, ignoring.", descriptor.getId(), version.getId()] @AT@ 6253 @LENGTH@ 15
------------------------INS SimpleName@@Name:version @TO@ MethodInvocation@@version.getId() @AT@ 6253 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@version.getId() @AT@ 6261 @LENGTH@ 7
------INS EnhancedForStatement@@for (Profile p : profiles) {  if (profileId.equals(p.getId())) {    profile=p;    break;  }} @TO@ EnhancedForStatement@@for (PatchDescriptor descriptor : descriptors) {  String profileId="patch-" + descriptor.getId();  Profile profile=version.getProfile(profileId);  if (profile == null) {    profile=version.createProfile(profileId);    profile.setOverrides(descriptor.getBundles());    Profile defaultProfile=version.getProfile("default");    List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));    if (!parents.contains(profile)) {      parents.add(profile);      defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));    }  }} @AT@ 5341 @LENGTH@ 191
---------INS SingleVariableDeclaration@@Profile p @TO@ EnhancedForStatement@@for (Profile p : profiles) {  if (profileId.equals(p.getId())) {    profile=p;    break;  }} @AT@ 5346 @LENGTH@ 9
------------INS SimpleType@@Profile @TO@ SingleVariableDeclaration@@Profile p @AT@ 5346 @LENGTH@ 7
------------INS SimpleName@@p @TO@ SingleVariableDeclaration@@Profile p @AT@ 5354 @LENGTH@ 1
---------INS SimpleName@@profiles @TO@ EnhancedForStatement@@for (Profile p : profiles) {  if (profileId.equals(p.getId())) {    profile=p;    break;  }} @AT@ 5358 @LENGTH@ 8
---------INS IfStatement@@if (profileId.equals(p.getId())) {  profile=p;  break;} @TO@ EnhancedForStatement@@for (Profile p : profiles) {  if (profileId.equals(p.getId())) {    profile=p;    break;  }} @AT@ 5390 @LENGTH@ 124
------------INS MethodInvocation@@profileId.equals(p.getId()) @TO@ IfStatement@@if (profileId.equals(p.getId())) {  profile=p;  break;} @AT@ 5394 @LENGTH@ 27
---------------MOV SimpleName@@Name:version @TO@ MethodInvocation@@profileId.equals(p.getId()) @AT@ 5263 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getProfile:[profileId] @TO@ MethodInvocation@@profileId.equals(p.getId()) @AT@ 5271 @LENGTH@ 21
------------------DEL SimpleName@@profileId @AT@ 5282 @LENGTH@ 9
------------------INS MethodInvocation@@p.getId() @TO@ SimpleName@@MethodName:getProfile:[profileId] @AT@ 5411 @LENGTH@ 9
---------------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getId() @AT@ 5411 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@p.getId() @AT@ 5413 @LENGTH@ 7
------------INS Block@@ThenBody:{  profile=p;  break;} @TO@ IfStatement@@if (profileId.equals(p.getId())) {  profile=p;  break;} @AT@ 5423 @LENGTH@ 91
---------------INS ExpressionStatement@@Assignment:profile=p @TO@ Block@@ThenBody:{  profile=p;  break;} @AT@ 5449 @LENGTH@ 12
------------------INS Assignment@@profile=p @TO@ ExpressionStatement@@Assignment:profile=p @AT@ 5449 @LENGTH@ 11
---------------------INS SimpleName@@profile @TO@ Assignment@@profile=p @AT@ 5449 @LENGTH@ 7
---------------------INS Operator@@= @TO@ Assignment@@profile=p @AT@ 5456 @LENGTH@ 1
---------------------INS SimpleName@@p @TO@ Assignment@@profile=p @AT@ 5459 @LENGTH@ 1
---------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  profile=p;  break;} @AT@ 5486 @LENGTH@ 6
---INS VariableDeclarationStatement@@Profile[] profiles=version.getProfiles(); @TO@ TryStatement@@try {  URI uploadUri=fabric.getMavenRepoUploadURI();  List<PatchDescriptor> descriptors=new ArrayList<PatchDescriptor>();  ZipInputStream zis=new ZipInputStream(new BufferedInputStream(patch.openStream()));  try {    ZipEntry entry=zis.getNextEntry();    while (entry != null) {      if (!entry.isDirectory()) {        String entryName=entry.getName();        if (entryName.startsWith("repository/")) {          String fileName=entryName.substring("repository/".length());          while (fileName.startsWith("/")) {            fileName=fileName.substring(1);          }          URL uploadUrl=uploadUri.resolve(fileName).toURL();          URLConnection con=uploadUrl.openConnection();          if (con instanceof HttpURLConnection) {            ((HttpURLConnection)con).setRequestMethod("PUT");          }          if (login != null && password != null) {            con.setRequestProperty("Authorization","Basic " + Base64Encoder.encode(login + ":" + password));          }          con.setDoInput(true);          con.setDoOutput(true);          con.connect();          OutputStream os=con.getOutputStream();          try {            try {              copy(zis,os);              if (con instanceof HttpURLConnection) {                int code=((HttpURLConnection)con).getResponseCode();                if (code < 200 || code >= 300) {                  throw new IOException("Error uploading patched jars: " + ((HttpURLConnection)con).getResponseMessage());                }              }            }  finally {              zis.closeEntry();            }          }  finally {            close(os);          }        } else         if (entryName.endsWith(".patch") && !entryName.contains("/")) {          try {            Properties patchMetadata=new Properties();            patchMetadata.load(zis);            descriptors.add(new PatchDescriptor(patchMetadata));          }  finally {            zis.closeEntry();          }        }      }      entry=zis.getNextEntry();    }  }  finally {    close(zis);  }  for (  PatchDescriptor descriptor : descriptors) {    String profileId="patch-" + descriptor.getId();    Profile profile=version.getProfile(profileId);    if (profile == null) {      profile=version.createProfile(profileId);      profile.setOverrides(descriptor.getBundles());      Profile defaultProfile=version.getProfile("default");      List<Profile> parents=new ArrayList<Profile>(Arrays.asList(defaultProfile.getParents()));      if (!parents.contains(profile)) {        parents.add(profile);        defaultProfile.setParents(parents.toArray(new Profile[parents.size()]));      }    }  }} catch (Exception e) {  throw new RuntimeException("Unable to apply patch",e);} @AT@ 5114 @LENGTH@ 43
------INS ArrayType@@Profile[] @TO@ VariableDeclarationStatement@@Profile[] profiles=version.getProfiles(); @AT@ 5114 @LENGTH@ 9
---------INS SimpleType@@Profile @TO@ ArrayType@@Profile[] @AT@ 5114 @LENGTH@ 7
------INS VariableDeclarationFragment@@profiles=version.getProfiles() @TO@ VariableDeclarationStatement@@Profile[] profiles=version.getProfiles(); @AT@ 5124 @LENGTH@ 32
---------INS SimpleName@@profiles @TO@ VariableDeclarationFragment@@profiles=version.getProfiles() @AT@ 5124 @LENGTH@ 8
---------INS MethodInvocation@@version.getProfiles() @TO@ VariableDeclarationFragment@@profiles=version.getProfiles() @AT@ 5135 @LENGTH@ 21
------------INS SimpleName@@Name:version @TO@ MethodInvocation@@version.getProfiles() @AT@ 5135 @LENGTH@ 7
------------INS SimpleName@@MethodName:getProfiles:[] @TO@ MethodInvocation@@version.getProfiles() @AT@ 5143 @LENGTH@ 13


INS IfStatement@@if (approvalStore != null) {  OAuth2Authentication authentication=readAuthentication(tokenValue);  if (authentication.getUserAuthentication() != null) {    String userId=authentication.getUserAuthentication().getName();    String clientId=authentication.getOAuth2Request().getClientId();    Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);    Collection<String> approvedScopes=new HashSet<String>();    for (    Approval approval : approvals) {      if (approval.isApproved()) {        approvedScopes.add(approval.getScope());      }    }    if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {      return null;    }  }} @TO@ MethodDeclaration@@public, OAuth2RefreshToken, MethodName:readRefreshToken, String tokenValue,  @AT@ 4351 @LENGTH@ 699
---INS InfixExpression@@approvalStore != null @TO@ IfStatement@@if (approvalStore != null) {  OAuth2Authentication authentication=readAuthentication(tokenValue);  if (authentication.getUserAuthentication() != null) {    String userId=authentication.getUserAuthentication().getName();    String clientId=authentication.getOAuth2Request().getClientId();    Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);    Collection<String> approvedScopes=new HashSet<String>();    for (    Approval approval : approvals) {      if (approval.isApproved()) {        approvedScopes.add(approval.getScope());      }    }    if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {      return null;    }  }} @AT@ 4355 @LENGTH@ 21
------INS SimpleName@@approvalStore @TO@ InfixExpression@@approvalStore != null @AT@ 4355 @LENGTH@ 13
------INS Operator@@!= @TO@ InfixExpression@@approvalStore != null @AT@ 4368 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@approvalStore != null @AT@ 4372 @LENGTH@ 4
---INS Block@@ThenBody:{  OAuth2Authentication authentication=readAuthentication(tokenValue);  if (authentication.getUserAuthentication() != null) {    String userId=authentication.getUserAuthentication().getName();    String clientId=authentication.getOAuth2Request().getClientId();    Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);    Collection<String> approvedScopes=new HashSet<String>();    for (    Approval approval : approvals) {      if (approval.isApproved()) {        approvedScopes.add(approval.getScope());      }    }    if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {      return null;    }  }} @TO@ IfStatement@@if (approvalStore != null) {  OAuth2Authentication authentication=readAuthentication(tokenValue);  if (authentication.getUserAuthentication() != null) {    String userId=authentication.getUserAuthentication().getName();    String clientId=authentication.getOAuth2Request().getClientId();    Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);    Collection<String> approvedScopes=new HashSet<String>();    for (    Approval approval : approvals) {      if (approval.isApproved()) {        approvedScopes.add(approval.getScope());      }    }    if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {      return null;    }  }} @AT@ 4378 @LENGTH@ 672
------INS VariableDeclarationStatement@@OAuth2Authentication authentication=readAuthentication(tokenValue); @TO@ Block@@ThenBody:{  OAuth2Authentication authentication=readAuthentication(tokenValue);  if (authentication.getUserAuthentication() != null) {    String userId=authentication.getUserAuthentication().getName();    String clientId=authentication.getOAuth2Request().getClientId();    Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);    Collection<String> approvedScopes=new HashSet<String>();    for (    Approval approval : approvals) {      if (approval.isApproved()) {        approvedScopes.add(approval.getScope());      }    }    if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {      return null;    }  }} @AT@ 4383 @LENGTH@ 69
---------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=readAuthentication(tokenValue); @AT@ 4383 @LENGTH@ 20
---------INS VariableDeclarationFragment@@authentication=readAuthentication(tokenValue) @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=readAuthentication(tokenValue); @AT@ 4404 @LENGTH@ 47
------------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=readAuthentication(tokenValue) @AT@ 4404 @LENGTH@ 14
------------INS MethodInvocation@@readAuthentication(tokenValue) @TO@ VariableDeclarationFragment@@authentication=readAuthentication(tokenValue) @AT@ 4421 @LENGTH@ 30
---------------INS SimpleName@@MethodName:readAuthentication:[tokenValue] @TO@ MethodInvocation@@readAuthentication(tokenValue) @AT@ 4421 @LENGTH@ 30
------------------INS SimpleName@@tokenValue @TO@ SimpleName@@MethodName:readAuthentication:[tokenValue] @AT@ 4440 @LENGTH@ 10
------INS IfStatement@@if (authentication.getUserAuthentication() != null) {  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @TO@ Block@@ThenBody:{  OAuth2Authentication authentication=readAuthentication(tokenValue);  if (authentication.getUserAuthentication() != null) {    String userId=authentication.getUserAuthentication().getName();    String clientId=authentication.getOAuth2Request().getClientId();    Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);    Collection<String> approvedScopes=new HashSet<String>();    for (    Approval approval : approvals) {      if (approval.isApproved()) {        approvedScopes.add(approval.getScope());      }    }    if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {      return null;    }  }} @AT@ 4456 @LENGTH@ 590
---------INS InfixExpression@@authentication.getUserAuthentication() != null @TO@ IfStatement@@if (authentication.getUserAuthentication() != null) {  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4460 @LENGTH@ 46
------------INS MethodInvocation@@authentication.getUserAuthentication() @TO@ InfixExpression@@authentication.getUserAuthentication() != null @AT@ 4460 @LENGTH@ 38
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 4460 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getUserAuthentication:[] @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 4475 @LENGTH@ 23
------------INS Operator@@!= @TO@ InfixExpression@@authentication.getUserAuthentication() != null @AT@ 4498 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@authentication.getUserAuthentication() != null @AT@ 4502 @LENGTH@ 4
---------INS Block@@ThenBody:{  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @TO@ IfStatement@@if (authentication.getUserAuthentication() != null) {  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4508 @LENGTH@ 538
------------INS VariableDeclarationStatement@@String userId=authentication.getUserAuthentication().getName(); @TO@ Block@@ThenBody:{  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4514 @LENGTH@ 65
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String userId=authentication.getUserAuthentication().getName(); @AT@ 4514 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@userId=authentication.getUserAuthentication().getName() @TO@ VariableDeclarationStatement@@String userId=authentication.getUserAuthentication().getName(); @AT@ 4521 @LENGTH@ 57
------------------INS SimpleName@@userId @TO@ VariableDeclarationFragment@@userId=authentication.getUserAuthentication().getName() @AT@ 4521 @LENGTH@ 6
------------------INS MethodInvocation@@authentication.getUserAuthentication().getName() @TO@ VariableDeclarationFragment@@userId=authentication.getUserAuthentication().getName() @AT@ 4530 @LENGTH@ 48
---------------------INS MethodInvocation@@MethodName:getUserAuthentication:[] @TO@ MethodInvocation@@authentication.getUserAuthentication().getName() @AT@ 4530 @LENGTH@ 38
---------------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getUserAuthentication().getName() @AT@ 4530 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getUserAuthentication().getName() @AT@ 4569 @LENGTH@ 9
------------INS VariableDeclarationStatement@@String clientId=authentication.getOAuth2Request().getClientId(); @TO@ Block@@ThenBody:{  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4584 @LENGTH@ 66
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String clientId=authentication.getOAuth2Request().getClientId(); @AT@ 4584 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@clientId=authentication.getOAuth2Request().getClientId() @TO@ VariableDeclarationStatement@@String clientId=authentication.getOAuth2Request().getClientId(); @AT@ 4591 @LENGTH@ 58
------------------INS SimpleName@@clientId @TO@ VariableDeclarationFragment@@clientId=authentication.getOAuth2Request().getClientId() @AT@ 4591 @LENGTH@ 8
------------------INS MethodInvocation@@authentication.getOAuth2Request().getClientId() @TO@ VariableDeclarationFragment@@clientId=authentication.getOAuth2Request().getClientId() @AT@ 4602 @LENGTH@ 47
---------------------INS MethodInvocation@@MethodName:getOAuth2Request:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 4602 @LENGTH@ 33
---------------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 4602 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:getClientId:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 4636 @LENGTH@ 13
------------INS VariableDeclarationStatement@@Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId); @TO@ Block@@ThenBody:{  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4655 @LENGTH@ 78
---------------INS ParameterizedType@@Collection<Approval> @TO@ VariableDeclarationStatement@@Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId); @AT@ 4655 @LENGTH@ 20
------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Approval> @AT@ 4655 @LENGTH@ 10
------------------INS SimpleType@@Approval @TO@ ParameterizedType@@Collection<Approval> @AT@ 4666 @LENGTH@ 8
---------------INS VariableDeclarationFragment@@approvals=approvalStore.getApprovals(userId,clientId) @TO@ VariableDeclarationStatement@@Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId); @AT@ 4676 @LENGTH@ 56
------------------INS SimpleName@@approvals @TO@ VariableDeclarationFragment@@approvals=approvalStore.getApprovals(userId,clientId) @AT@ 4676 @LENGTH@ 9
------------------INS MethodInvocation@@approvalStore.getApprovals(userId,clientId) @TO@ VariableDeclarationFragment@@approvals=approvalStore.getApprovals(userId,clientId) @AT@ 4688 @LENGTH@ 44
---------------------INS SimpleName@@Name:approvalStore @TO@ MethodInvocation@@approvalStore.getApprovals(userId,clientId) @AT@ 4688 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getApprovals:[userId, clientId] @TO@ MethodInvocation@@approvalStore.getApprovals(userId,clientId) @AT@ 4702 @LENGTH@ 30
------------------------INS SimpleName@@userId @TO@ SimpleName@@MethodName:getApprovals:[userId, clientId] @AT@ 4715 @LENGTH@ 6
------------------------INS SimpleName@@clientId @TO@ SimpleName@@MethodName:getApprovals:[userId, clientId] @AT@ 4723 @LENGTH@ 8
------------INS VariableDeclarationStatement@@Collection<String> approvedScopes=new HashSet<String>(); @TO@ Block@@ThenBody:{  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4738 @LENGTH@ 58
---------------INS ParameterizedType@@Collection<String> @TO@ VariableDeclarationStatement@@Collection<String> approvedScopes=new HashSet<String>(); @AT@ 4738 @LENGTH@ 18
------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<String> @AT@ 4738 @LENGTH@ 10
------------------INS SimpleType@@String @TO@ ParameterizedType@@Collection<String> @AT@ 4749 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@approvedScopes=new HashSet<String>() @TO@ VariableDeclarationStatement@@Collection<String> approvedScopes=new HashSet<String>(); @AT@ 4757 @LENGTH@ 38
------------------INS SimpleName@@approvedScopes @TO@ VariableDeclarationFragment@@approvedScopes=new HashSet<String>() @AT@ 4757 @LENGTH@ 14
------------------INS ClassInstanceCreation@@HashSet<String>[] @TO@ VariableDeclarationFragment@@approvedScopes=new HashSet<String>() @AT@ 4774 @LENGTH@ 21
---------------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[] @AT@ 4774 @LENGTH@ 3
---------------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[] @AT@ 4778 @LENGTH@ 15
------------------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 4778 @LENGTH@ 7
------------------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 4786 @LENGTH@ 6
------------INS EnhancedForStatement@@for (Approval approval : approvals) {  if (approval.isApproved()) {    approvedScopes.add(approval.getScope());  }} @TO@ Block@@ThenBody:{  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4801 @LENGTH@ 131
---------------INS SingleVariableDeclaration@@Approval approval @TO@ EnhancedForStatement@@for (Approval approval : approvals) {  if (approval.isApproved()) {    approvedScopes.add(approval.getScope());  }} @AT@ 4806 @LENGTH@ 17
------------------INS SimpleType@@Approval @TO@ SingleVariableDeclaration@@Approval approval @AT@ 4806 @LENGTH@ 8
------------------INS SimpleName@@approval @TO@ SingleVariableDeclaration@@Approval approval @AT@ 4815 @LENGTH@ 8
---------------INS SimpleName@@approvals @TO@ EnhancedForStatement@@for (Approval approval : approvals) {  if (approval.isApproved()) {    approvedScopes.add(approval.getScope());  }} @AT@ 4826 @LENGTH@ 9
---------------INS IfStatement@@if (approval.isApproved()) {  approvedScopes.add(approval.getScope());} @TO@ EnhancedForStatement@@for (Approval approval : approvals) {  if (approval.isApproved()) {    approvedScopes.add(approval.getScope());  }} @AT@ 4844 @LENGTH@ 82
------------------INS MethodInvocation@@approval.isApproved() @TO@ IfStatement@@if (approval.isApproved()) {  approvedScopes.add(approval.getScope());} @AT@ 4848 @LENGTH@ 21
---------------------INS SimpleName@@Name:approval @TO@ MethodInvocation@@approval.isApproved() @AT@ 4848 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:isApproved:[] @TO@ MethodInvocation@@approval.isApproved() @AT@ 4857 @LENGTH@ 12
------------------INS Block@@ThenBody:{  approvedScopes.add(approval.getScope());} @TO@ IfStatement@@if (approval.isApproved()) {  approvedScopes.add(approval.getScope());} @AT@ 4871 @LENGTH@ 55
---------------------INS ExpressionStatement@@MethodInvocation:approvedScopes.add(approval.getScope()) @TO@ Block@@ThenBody:{  approvedScopes.add(approval.getScope());} @AT@ 4879 @LENGTH@ 40
------------------------INS MethodInvocation@@approvedScopes.add(approval.getScope()) @TO@ ExpressionStatement@@MethodInvocation:approvedScopes.add(approval.getScope()) @AT@ 4879 @LENGTH@ 39
---------------------------INS SimpleName@@Name:approvedScopes @TO@ MethodInvocation@@approvedScopes.add(approval.getScope()) @AT@ 4879 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:add:[approval.getScope()] @TO@ MethodInvocation@@approvedScopes.add(approval.getScope()) @AT@ 4894 @LENGTH@ 24
------------------------------INS MethodInvocation@@approval.getScope() @TO@ SimpleName@@MethodName:add:[approval.getScope()] @AT@ 4898 @LENGTH@ 19
---------------------------------INS SimpleName@@Name:approval @TO@ MethodInvocation@@approval.getScope() @AT@ 4898 @LENGTH@ 8
---------------------------------INS SimpleName@@MethodName:getScope:[] @TO@ MethodInvocation@@approval.getScope() @AT@ 4907 @LENGTH@ 10
------------INS IfStatement@@if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {  return null;} @TO@ Block@@ThenBody:{  String userId=authentication.getUserAuthentication().getName();  String clientId=authentication.getOAuth2Request().getClientId();  Collection<Approval> approvals=approvalStore.getApprovals(userId,clientId);  Collection<String> approvedScopes=new HashSet<String>();  for (  Approval approval : approvals) {    if (approval.isApproved()) {      approvedScopes.add(approval.getScope());    }  }  if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {    return null;  }} @AT@ 4937 @LENGTH@ 104
---------------INS PrefixExpression@@!approvedScopes.containsAll(authentication.getOAuth2Request().getScope()) @TO@ IfStatement@@if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {  return null;} @AT@ 4941 @LENGTH@ 73
------------------INS Operator@@! @TO@ PrefixExpression@@!approvedScopes.containsAll(authentication.getOAuth2Request().getScope()) @AT@ 4941 @LENGTH@ 1
------------------INS MethodInvocation@@approvedScopes.containsAll(authentication.getOAuth2Request().getScope()) @TO@ PrefixExpression@@!approvedScopes.containsAll(authentication.getOAuth2Request().getScope()) @AT@ 4942 @LENGTH@ 72
---------------------INS SimpleName@@Name:approvedScopes @TO@ MethodInvocation@@approvedScopes.containsAll(authentication.getOAuth2Request().getScope()) @AT@ 4942 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:containsAll:[authentication.getOAuth2Request().getScope()] @TO@ MethodInvocation@@approvedScopes.containsAll(authentication.getOAuth2Request().getScope()) @AT@ 4957 @LENGTH@ 57
------------------------INS MethodInvocation@@authentication.getOAuth2Request().getScope() @TO@ SimpleName@@MethodName:containsAll:[authentication.getOAuth2Request().getScope()] @AT@ 4969 @LENGTH@ 44
---------------------------INS MethodInvocation@@MethodName:getOAuth2Request:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getScope() @AT@ 4969 @LENGTH@ 33
---------------------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getOAuth2Request().getScope() @AT@ 4969 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:getScope:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getScope() @AT@ 5003 @LENGTH@ 10
---------------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (!approvedScopes.containsAll(authentication.getOAuth2Request().getScope())) {  return null;} @AT@ 5016 @LENGTH@ 25
------------------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 5023 @LENGTH@ 12
---------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5030 @LENGTH@ 4


UPD Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @TO@ ThenBody:{  final Throwable deploymentException=actionResult.getDeploymentException();  if (deploymentException != null) {    throw new RuntimeException(deploymentException);  }} @AT@ 3346 @LENGTH@ 190
---DEL IfStatement@@if (actionResult.getDeploymentException() != null) {  throw new RuntimeException(actionResult.getDeploymentException());} @AT@ 3364 @LENGTH@ 158
------DEL InfixExpression@@actionResult.getDeploymentException() != null @AT@ 3368 @LENGTH@ 45
---------DEL MethodInvocation@@actionResult.getDeploymentException() @AT@ 3368 @LENGTH@ 37
---INS VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @TO@ Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @AT@ 3364 @LENGTH@ 76
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 3364 @LENGTH@ 5
------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 3370 @LENGTH@ 9
------INS VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @TO@ VariableDeclarationStatement@@final Throwable deploymentException=actionResult.getDeploymentException(); @AT@ 3380 @LENGTH@ 59
---------INS SimpleName@@deploymentException @TO@ VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @AT@ 3380 @LENGTH@ 19
---------INS MethodInvocation@@actionResult.getDeploymentException() @TO@ VariableDeclarationFragment@@deploymentException=actionResult.getDeploymentException() @AT@ 3402 @LENGTH@ 37
------------MOV SimpleName@@Name:actionResult @TO@ MethodInvocation@@actionResult.getDeploymentException() @AT@ 3368 @LENGTH@ 12
------------MOV SimpleName@@MethodName:getDeploymentException:[] @TO@ MethodInvocation@@actionResult.getDeploymentException() @AT@ 3381 @LENGTH@ 24
---INS IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @TO@ Block@@ThenBody:{  if (actionResult.getDeploymentException() != null) {    throw new RuntimeException(actionResult.getDeploymentException());  }} @AT@ 3457 @LENGTH@ 122
------MOV Block@@ThenBody:{  throw new RuntimeException(actionResult.getDeploymentException());} @TO@ IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @AT@ 3415 @LENGTH@ 107
---------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(actionResult.getDeploymentException()) @TO@ ClassInstanceCreation:new RuntimeException(deploymentException) @AT@ 3437 @LENGTH@ 67
------------UPD ClassInstanceCreation@@RuntimeException[actionResult.getDeploymentException()] @TO@ RuntimeException[deploymentException] @AT@ 3443 @LENGTH@ 60
---------------DEL MethodInvocation@@actionResult.getDeploymentException() @AT@ 3465 @LENGTH@ 37
------------------DEL SimpleName@@Name:actionResult @AT@ 3465 @LENGTH@ 12
------------------DEL SimpleName@@MethodName:getDeploymentException:[] @AT@ 3478 @LENGTH@ 24
---------------INS SimpleName@@deploymentException @TO@ ClassInstanceCreation@@RuntimeException[actionResult.getDeploymentException()] @AT@ 3540 @LENGTH@ 19
------INS InfixExpression@@deploymentException != null @TO@ IfStatement@@if (deploymentException != null) {  throw new RuntimeException(deploymentException);} @AT@ 3461 @LENGTH@ 27
---------MOV Operator@@!= @TO@ InfixExpression@@deploymentException != null @AT@ 3405 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@deploymentException != null @AT@ 3409 @LENGTH@ 4
---------INS SimpleName@@deploymentException @TO@ InfixExpression@@deploymentException != null @AT@ 3461 @LENGTH@ 19


UPD TypeDeclaration@@[@Lazy, public]EmployeeRepositoryWithIdClass, [JpaRepository<IdClassExampleEmployee,IdClassExampleEmployeePK>] @TO@ [@Lazy, public]EmployeeRepositoryWithIdClass, [JpaRepository<IdClassExampleEmployee,IdClassExampleEmployeePK>, QueryDslPredicateExecutor<IdClassExampleEmployee>] @AT@ 1055 @LENGTH@ 127
---INS ParameterizedType@@QueryDslPredicateExecutor<IdClassExampleEmployee> @TO@ TypeDeclaration@@[@Lazy, public]EmployeeRepositoryWithIdClass, [JpaRepository<IdClassExampleEmployee,IdClassExampleEmployeePK>] @AT@ 1368 @LENGTH@ 49
------INS SimpleType@@QueryDslPredicateExecutor @TO@ ParameterizedType@@QueryDslPredicateExecutor<IdClassExampleEmployee> @AT@ 1368 @LENGTH@ 25
------INS SimpleType@@IdClassExampleEmployee @TO@ ParameterizedType@@QueryDslPredicateExecutor<IdClassExampleEmployee> @AT@ 1394 @LENGTH@ 22


DEL ExpressionStatement@@MethodInvocation:assertNotSame("Root node not copied",config.getRootNode(),cc2.getRootNode()) @AT@ 13651 @LENGTH@ 79
---DEL MethodInvocation@@assertNotSame("Root node not copied",config.getRootNode(),cc2.getRootNode()) @AT@ 13651 @LENGTH@ 78
------DEL SimpleName@@MethodName:assertNotSame:["Root node not copied", config.getRootNode(), cc2.getRootNode()] @AT@ 13651 @LENGTH@ 78
---------DEL StringLiteral@@"Root node not copied" @AT@ 13665 @LENGTH@ 22
---------DEL MethodInvocation@@config.getRootNode() @AT@ 13689 @LENGTH@ 20
------------DEL SimpleName@@Name:config @AT@ 13689 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getRootNode:[] @AT@ 13696 @LENGTH@ 13
---------DEL MethodInvocation@@cc2.getRootNode() @AT@ 13711 @LENGTH@ 17
------------DEL SimpleName@@Name:cc2 @AT@ 13711 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getRootNode:[] @AT@ 13715 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:setRepository, PagingAndSortingRepository<T,?> repository,  @TO@ public, void, MethodName:setRepository, PagingAndSortingRepository<?,?> repository,  @AT@ 3961 @LENGTH@ 107
---UPD SingleVariableDeclaration@@PagingAndSortingRepository<T,?> repository @TO@ PagingAndSortingRepository<?,?> repository @AT@ 3987 @LENGTH@ 43
------UPD ParameterizedType@@PagingAndSortingRepository<T,?> @TO@ PagingAndSortingRepository<?,?> @AT@ 3987 @LENGTH@ 32
---------DEL SimpleType@@T @AT@ 4014 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@PagingAndSortingRepository<T,?> @AT@ 4017 @LENGTH@ 1


UPD Block@@ElseBody:if (field.getCustomData().keySet().contains(PARAMETER_TYPE_KEY)) {  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} else if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {  builder.getImportRegistrationResolver().addImports(PRIMEFACES_STREAMED_CONTENT,PRIMEFACES_DEFAULT_STREAMED_CONTENT,BYTE_ARRAY_INPUT_STREAM);  final String fieldName=field.getFieldName().getSymbolName();  final JavaSymbolName streamedContentFieldName=new JavaSymbolName(fieldName + "StreamedContent");  builderMethods.add(getFileUploadListenerMethod(field));  final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);  final String contentType=(String)annotation.getAttribute("contentType").getValue();  final String fileExtension=StringUtils.lowerCase(UploadedFileContentType.getFileExtension(contentType).name());  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + entityName.getSymbolName() + " != null && "+ entityName.getSymbolName()+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(" + entityName.getSymbolName() + ".get"+ StringUtils.capitalize(fieldName)+ "()), \""+ contentType+ "\", \""+ fieldName+ "."+ fileExtension+ "\");");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(\"\".getBytes()));");  builderMethods.add(getAccessorMethod(streamedContentFieldName,PRIMEFACES_STREAMED_CONTENT,bodyBuilder));} @TO@ ElseBody:if (field.getCustomData().keySet().contains(PARAMETER_TYPE_KEY)) {  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  JavaType realListType=HASH_SET;  if (listType.equals(LIST)) {    realListType=ARRAY_LIST;  }  builder.getImportRegistrationResolver().addImport(realListType);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} else if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {  builder.getImportRegistrationResolver().addImports(PRIMEFACES_STREAMED_CONTENT,PRIMEFACES_DEFAULT_STREAMED_CONTENT,BYTE_ARRAY_INPUT_STREAM);  final String fieldName=field.getFieldName().getSymbolName();  final JavaSymbolName streamedContentFieldName=new JavaSymbolName(fieldName + "StreamedContent");  builderMethods.add(getFileUploadListenerMethod(field));  final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);  final String contentType=(String)annotation.getAttribute("contentType").getValue();  final String fileExtension=StringUtils.lowerCase(UploadedFileContentType.getFileExtension(contentType).name());  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + entityName.getSymbolName() + " != null && "+ entityName.getSymbolName()+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(" + entityName.getSymbolName() + ".get"+ StringUtils.capitalize(fieldName)+ "()), \""+ contentType+ "\", \""+ fieldName+ "."+ fileExtension+ "\");");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(\"\".getBytes()));");  builderMethods.add(getAccessorMethod(streamedContentFieldName,PRIMEFACES_STREAMED_CONTENT,bodyBuilder));} @AT@ 16823 @LENGTH@ 4142
---UPD IfStatement@@if (field.getCustomData().keySet().contains(PARAMETER_TYPE_KEY)) {  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} else if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {  builder.getImportRegistrationResolver().addImports(PRIMEFACES_STREAMED_CONTENT,PRIMEFACES_DEFAULT_STREAMED_CONTENT,BYTE_ARRAY_INPUT_STREAM);  final String fieldName=field.getFieldName().getSymbolName();  final JavaSymbolName streamedContentFieldName=new JavaSymbolName(fieldName + "StreamedContent");  builderMethods.add(getFileUploadListenerMethod(field));  final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);  final String contentType=(String)annotation.getAttribute("contentType").getValue();  final String fileExtension=StringUtils.lowerCase(UploadedFileContentType.getFileExtension(contentType).name());  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + entityName.getSymbolName() + " != null && "+ entityName.getSymbolName()+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(" + entityName.getSymbolName() + ".get"+ StringUtils.capitalize(fieldName)+ "()), \""+ contentType+ "\", \""+ fieldName+ "."+ fileExtension+ "\");");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(\"\".getBytes()));");  builderMethods.add(getAccessorMethod(streamedContentFieldName,PRIMEFACES_STREAMED_CONTENT,bodyBuilder));} @TO@ if (field.getCustomData().keySet().contains(PARAMETER_TYPE_KEY)) {  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  JavaType realListType=HASH_SET;  if (listType.equals(LIST)) {    realListType=ARRAY_LIST;  }  builder.getImportRegistrationResolver().addImport(realListType);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} else if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {  builder.getImportRegistrationResolver().addImports(PRIMEFACES_STREAMED_CONTENT,PRIMEFACES_DEFAULT_STREAMED_CONTENT,BYTE_ARRAY_INPUT_STREAM);  final String fieldName=field.getFieldName().getSymbolName();  final JavaSymbolName streamedContentFieldName=new JavaSymbolName(fieldName + "StreamedContent");  builderMethods.add(getFileUploadListenerMethod(field));  final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);  final String contentType=(String)annotation.getAttribute("contentType").getValue();  final String fileExtension=StringUtils.lowerCase(UploadedFileContentType.getFileExtension(contentType).name());  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + entityName.getSymbolName() + " != null && "+ entityName.getSymbolName()+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(" + entityName.getSymbolName() + ".get"+ StringUtils.capitalize(fieldName)+ "()), \""+ contentType+ "\", \""+ fieldName+ "."+ fileExtension+ "\");");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(\"\".getBytes()));");  builderMethods.add(getAccessorMethod(streamedContentFieldName,PRIMEFACES_STREAMED_CONTENT,bodyBuilder));} @AT@ 16823 @LENGTH@ 4142
------UPD Block@@ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @TO@ ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  JavaType realListType=HASH_SET;  if (listType.equals(LIST)) {    realListType=ARRAY_LIST;  }  builder.getImportRegistrationResolver().addImport(realListType);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @AT@ 16909 @LENGTH@ 1640
---------UPD ExpressionStatement@@MethodInvocation:builder.getImportRegistrationResolver().addImport(HASH_SET) @TO@ MethodInvocation:builder.getImportRegistrationResolver().addImport(realListType) @AT@ 17525 @LENGTH@ 60
------------UPD MethodInvocation@@builder.getImportRegistrationResolver().addImport(HASH_SET) @TO@ builder.getImportRegistrationResolver().addImport(realListType) @AT@ 17525 @LENGTH@ 59
---------------UPD SimpleName@@MethodName:addImport:[HASH_SET] @TO@ MethodName:addImport:[realListType] @AT@ 17565 @LENGTH@ 19
------------------UPD SimpleName@@HASH_SET @TO@ realListType @AT@ 17575 @LENGTH@ 8
---------INS VariableDeclarationStatement@@JavaType realListType=HASH_SET; @TO@ Block@@ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @AT@ 17525 @LENGTH@ 33
------------INS SimpleType@@JavaType @TO@ VariableDeclarationStatement@@JavaType realListType=HASH_SET; @AT@ 17525 @LENGTH@ 8
------------INS VariableDeclarationFragment@@realListType=HASH_SET @TO@ VariableDeclarationStatement@@JavaType realListType=HASH_SET; @AT@ 17534 @LENGTH@ 23
---------------INS SimpleName@@realListType @TO@ VariableDeclarationFragment@@realListType=HASH_SET @AT@ 17534 @LENGTH@ 12
---------------INS SimpleName@@HASH_SET @TO@ VariableDeclarationFragment@@realListType=HASH_SET @AT@ 17549 @LENGTH@ 8
---------INS IfStatement@@if (listType.equals(LIST)) {  realListType=ARRAY_LIST;} @TO@ Block@@ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @AT@ 17575 @LENGTH@ 93
------------INS MethodInvocation@@listType.equals(LIST) @TO@ IfStatement@@if (listType.equals(LIST)) {  realListType=ARRAY_LIST;} @AT@ 17579 @LENGTH@ 21
---------------INS SimpleName@@Name:listType @TO@ MethodInvocation@@listType.equals(LIST) @AT@ 17579 @LENGTH@ 8
---------------INS SimpleName@@MethodName:equals:[LIST] @TO@ MethodInvocation@@listType.equals(LIST) @AT@ 17588 @LENGTH@ 12
------------------INS SimpleName@@LIST @TO@ SimpleName@@MethodName:equals:[LIST] @AT@ 17595 @LENGTH@ 4
------------INS Block@@ThenBody:{  realListType=ARRAY_LIST;} @TO@ IfStatement@@if (listType.equals(LIST)) {  realListType=ARRAY_LIST;} @AT@ 17602 @LENGTH@ 66
---------------INS ExpressionStatement@@Assignment:realListType=ARRAY_LIST @TO@ Block@@ThenBody:{  realListType=ARRAY_LIST;} @AT@ 17624 @LENGTH@ 26
------------------INS Assignment@@realListType=ARRAY_LIST @TO@ ExpressionStatement@@Assignment:realListType=ARRAY_LIST @AT@ 17624 @LENGTH@ 25
---------------------INS SimpleName@@realListType @TO@ Assignment@@realListType=ARRAY_LIST @AT@ 17624 @LENGTH@ 12
---------------------INS Operator@@= @TO@ Assignment@@realListType=ARRAY_LIST @AT@ 17636 @LENGTH@ 1
---------------------INS SimpleName@@ARRAY_LIST @TO@ Assignment@@realListType=ARRAY_LIST @AT@ 17639 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @TO@ MethodInvocation:bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @AT@ 17868 @LENGTH@ 263
------------UPD MethodInvocation@@bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @TO@ bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @AT@ 17868 @LENGTH@ 262
---------------UPD SimpleName@@MethodName:appendFormalLine:[entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));"] @TO@ MethodName:appendFormalLine:[entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));"] @AT@ 17880 @LENGTH@ 250
------------------UPD InfixExpression@@entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @TO@ entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @AT@ 17897 @LENGTH@ 232
---------------------UPD StringLiteral@@"(new HashSet<" @TO@ "(new " @AT@ 18019 @LENGTH@ 15
---------------------INS MethodInvocation@@realListType.getSimpleTypeName() @TO@ InfixExpression@@entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @AT@ 18193 @LENGTH@ 32
------------------------INS SimpleName@@Name:realListType @TO@ MethodInvocation@@realListType.getSimpleTypeName() @AT@ 18193 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:getSimpleTypeName:[] @TO@ MethodInvocation@@realListType.getSimpleTypeName() @AT@ 18206 @LENGTH@ 19
---------------------INS StringLiteral@@"<" @TO@ InfixExpression@@entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @AT@ 18228 @LENGTH@ 3
---UPD IfStatement@@if (field.getCustomData().keySet().contains(PARAMETER_TYPE_KEY)) {  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} else if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {  builder.getImportRegistrationResolver().addImports(PRIMEFACES_STREAMED_CONTENT,PRIMEFACES_DEFAULT_STREAMED_CONTENT,BYTE_ARRAY_INPUT_STREAM);  final String fieldName=field.getFieldName().getSymbolName();  final JavaSymbolName streamedContentFieldName=new JavaSymbolName(fieldName + "StreamedContent");  builderMethods.add(getFileUploadListenerMethod(field));  final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);  final String contentType=(String)annotation.getAttribute("contentType").getValue();  final String fileExtension=StringUtils.lowerCase(UploadedFileContentType.getFileExtension(contentType).name());  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + entityName.getSymbolName() + " != null && "+ entityName.getSymbolName()+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(" + entityName.getSymbolName() + ".get"+ StringUtils.capitalize(fieldName)+ "()), \""+ contentType+ "\", \""+ fieldName+ "."+ fileExtension+ "\");");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(\"\".getBytes()));");  builderMethods.add(getAccessorMethod(streamedContentFieldName,PRIMEFACES_STREAMED_CONTENT,bodyBuilder));} @TO@ if (field.getCustomData().keySet().contains(PARAMETER_TYPE_KEY)) {  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  JavaType realListType=HASH_SET;  if (listType.equals(LIST)) {    realListType=ARRAY_LIST;  }  builder.getImportRegistrationResolver().addImport(realListType);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} else if (field.getAnnotation(ROO_UPLOADED_FILE) != null) {  builder.getImportRegistrationResolver().addImports(PRIMEFACES_STREAMED_CONTENT,PRIMEFACES_DEFAULT_STREAMED_CONTENT,BYTE_ARRAY_INPUT_STREAM);  final String fieldName=field.getFieldName().getSymbolName();  final JavaSymbolName streamedContentFieldName=new JavaSymbolName(fieldName + "StreamedContent");  builderMethods.add(getFileUploadListenerMethod(field));  final AnnotationMetadata annotation=field.getAnnotation(ROO_UPLOADED_FILE);  final String contentType=(String)annotation.getAttribute("contentType").getValue();  final String fileExtension=StringUtils.lowerCase(UploadedFileContentType.getFileExtension(contentType).name());  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + entityName.getSymbolName() + " != null && "+ entityName.getSymbolName()+ ".get"+ StringUtils.capitalize(fieldName)+ "() != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(" + entityName.getSymbolName() + ".get"+ StringUtils.capitalize(fieldName)+ "()), \""+ contentType+ "\", \""+ fieldName+ "."+ fileExtension+ "\");");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("return new DefaultStreamedContent(new ByteArrayInputStream(\"\".getBytes()));");  builderMethods.add(getAccessorMethod(streamedContentFieldName,PRIMEFACES_STREAMED_CONTENT,bodyBuilder));} @AT@ 16823 @LENGTH@ 4142
------UPD Block@@ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @TO@ ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  JavaType realListType=HASH_SET;  if (listType.equals(LIST)) {    realListType=ARRAY_LIST;  }  builder.getImportRegistrationResolver().addImport(realListType);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @AT@ 16909 @LENGTH@ 1640
---------UPD ExpressionStatement@@MethodInvocation:builder.getImportRegistrationResolver().addImport(HASH_SET) @TO@ MethodInvocation:builder.getImportRegistrationResolver().addImport(realListType) @AT@ 17525 @LENGTH@ 60
------------UPD MethodInvocation@@builder.getImportRegistrationResolver().addImport(HASH_SET) @TO@ builder.getImportRegistrationResolver().addImport(realListType) @AT@ 17525 @LENGTH@ 59
---------------UPD SimpleName@@MethodName:addImport:[HASH_SET] @TO@ MethodName:addImport:[realListType] @AT@ 17565 @LENGTH@ 19
------------------UPD SimpleName@@HASH_SET @TO@ realListType @AT@ 17575 @LENGTH@ 8
---------INS VariableDeclarationStatement@@JavaType realListType=HASH_SET; @TO@ Block@@ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @AT@ 17525 @LENGTH@ 33
------------INS SimpleType@@JavaType @TO@ VariableDeclarationStatement@@JavaType realListType=HASH_SET; @AT@ 17525 @LENGTH@ 8
------------INS VariableDeclarationFragment@@realListType=HASH_SET @TO@ VariableDeclarationStatement@@JavaType realListType=HASH_SET; @AT@ 17534 @LENGTH@ 23
---------------INS SimpleName@@realListType @TO@ VariableDeclarationFragment@@realListType=HASH_SET @AT@ 17534 @LENGTH@ 12
---------------INS SimpleName@@HASH_SET @TO@ VariableDeclarationFragment@@realListType=HASH_SET @AT@ 17549 @LENGTH@ 8
---------INS IfStatement@@if (listType.equals(LIST)) {  realListType=ARRAY_LIST;} @TO@ Block@@ThenBody:{  final String fieldName=field.getFieldName().getSymbolName();  final JavaType parameterType=(JavaType)field.getCustomData().get(PARAMETER_TYPE_KEY);  final JavaSymbolName selectedFieldName=new JavaSymbolName(getSelectedFieldName(fieldName));  final JavaType listType=getListType(parameterType);  builderFields.add(getField(selectedFieldName,listType));  builderMethods.add(getAccessorMethod(selectedFieldName,listType));  builder.getImportRegistrationResolver().addImport(HASH_SET);  final InvocableMemberBodyBuilder bodyBuilder=new InvocableMemberBodyBuilder();  bodyBuilder.appendFormalLine("if (" + selectedFieldName.getSymbolName() + " != null) {");  bodyBuilder.indent();  bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));");  bodyBuilder.indentRemove();  bodyBuilder.appendFormalLine("}");  bodyBuilder.appendFormalLine("this." + selectedFieldName.getSymbolName() + " = "+ selectedFieldName.getSymbolName()+ ";");  builderMethods.add(getMutatorMethod(selectedFieldName,listType,bodyBuilder));} @AT@ 17575 @LENGTH@ 93
------------INS MethodInvocation@@listType.equals(LIST) @TO@ IfStatement@@if (listType.equals(LIST)) {  realListType=ARRAY_LIST;} @AT@ 17579 @LENGTH@ 21
---------------INS SimpleName@@Name:listType @TO@ MethodInvocation@@listType.equals(LIST) @AT@ 17579 @LENGTH@ 8
---------------INS SimpleName@@MethodName:equals:[LIST] @TO@ MethodInvocation@@listType.equals(LIST) @AT@ 17588 @LENGTH@ 12
------------------INS SimpleName@@LIST @TO@ SimpleName@@MethodName:equals:[LIST] @AT@ 17595 @LENGTH@ 4
------------INS Block@@ThenBody:{  realListType=ARRAY_LIST;} @TO@ IfStatement@@if (listType.equals(LIST)) {  realListType=ARRAY_LIST;} @AT@ 17602 @LENGTH@ 66
---------------INS ExpressionStatement@@Assignment:realListType=ARRAY_LIST @TO@ Block@@ThenBody:{  realListType=ARRAY_LIST;} @AT@ 17624 @LENGTH@ 26
------------------INS Assignment@@realListType=ARRAY_LIST @TO@ ExpressionStatement@@Assignment:realListType=ARRAY_LIST @AT@ 17624 @LENGTH@ 25
---------------------INS SimpleName@@realListType @TO@ Assignment@@realListType=ARRAY_LIST @AT@ 17624 @LENGTH@ 12
---------------------INS Operator@@= @TO@ Assignment@@realListType=ARRAY_LIST @AT@ 17636 @LENGTH@ 1
---------------------INS SimpleName@@ARRAY_LIST @TO@ Assignment@@realListType=ARRAY_LIST @AT@ 17639 @LENGTH@ 10
---------UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @TO@ MethodInvocation:bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @AT@ 17868 @LENGTH@ 263
------------UPD MethodInvocation@@bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @TO@ bodyBuilder.appendFormalLine(entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));") @AT@ 17868 @LENGTH@ 262
---------------UPD SimpleName@@MethodName:appendFormalLine:[entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));"] @TO@ MethodName:appendFormalLine:[entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));"] @AT@ 17880 @LENGTH@ 250
------------------UPD InfixExpression@@entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @TO@ entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new "+ realListType.getSimpleTypeName()+ "<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @AT@ 17897 @LENGTH@ 232
---------------------UPD StringLiteral@@"(new HashSet<" @TO@ "(new " @AT@ 18019 @LENGTH@ 15
---------------------INS MethodInvocation@@realListType.getSimpleTypeName() @TO@ InfixExpression@@entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @AT@ 18193 @LENGTH@ 32
------------------------INS SimpleName@@Name:realListType @TO@ MethodInvocation@@realListType.getSimpleTypeName() @AT@ 18193 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:getSimpleTypeName:[] @TO@ MethodInvocation@@realListType.getSimpleTypeName() @AT@ 18206 @LENGTH@ 19
---------------------INS StringLiteral@@"<" @TO@ InfixExpression@@entityName.getSymbolName() + ".set" + StringUtils.capitalize(fieldName)+ "(new HashSet<"+ parameterType.getSimpleTypeName()+ ">("+ selectedFieldName+ "));" @AT@ 18228 @LENGTH@ 3


UPD MethodDeclaration@@protected, Object, MethodName:getMappedObjectForField, Field field, Object rawValue,  @TO@ protected, Entry<String,Object>, MethodName:getMappedObjectForField, Field field, Object rawValue,  @AT@ 4131 @LENGTH@ 279
---DEL SimpleType@@Object @AT@ 4141 @LENGTH@ 6
---INS ParameterizedType@@Entry<String,Object> @TO@ MethodDeclaration@@protected, Object, MethodName:getMappedObjectForField, Field field, Object rawValue,  @AT@ 4185 @LENGTH@ 21
------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,Object> @AT@ 4185 @LENGTH@ 5
------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,Object> @AT@ 4191 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Entry<String,Object> @AT@ 4199 @LENGTH@ 6
---UPD IfStatement@@if (isNestedKeyword(rawValue) && !field.isIdField()) {  Keyword keyword=new Keyword((DBObject)rawValue);  return getMappedKeyword(field,keyword);} @TO@ if (isNestedKeyword(rawValue) && !field.isIdField()) {  Keyword keyword=new Keyword((DBObject)rawValue);  value=getMappedKeyword(field,keyword);} else {  value=getMappedValue(field,rawValue);} @AT@ 4207 @LENGTH@ 157
------UPD Block@@ThenBody:{  Keyword keyword=new Keyword((DBObject)rawValue);  return getMappedKeyword(field,keyword);} @TO@ ThenBody:{  Keyword keyword=new Keyword((DBObject)rawValue);  value=getMappedKeyword(field,keyword);} @AT@ 4260 @LENGTH@ 104
---------DEL ReturnStatement@@MethodInvocation:getMappedKeyword(field,keyword) @AT@ 4320 @LENGTH@ 40
---------INS ExpressionStatement@@Assignment:value=getMappedKeyword(field,keyword) @TO@ Block@@ThenBody:{  Keyword keyword=new Keyword((DBObject)rawValue);  return getMappedKeyword(field,keyword);} @AT@ 4433 @LENGTH@ 41
------------INS Assignment@@value=getMappedKeyword(field,keyword) @TO@ ExpressionStatement@@Assignment:value=getMappedKeyword(field,keyword) @AT@ 4433 @LENGTH@ 40
---------------MOV MethodInvocation@@getMappedKeyword(field,keyword) @TO@ Assignment@@value=getMappedKeyword(field,keyword) @AT@ 4327 @LENGTH@ 32
---------------INS SimpleName@@value @TO@ Assignment@@value=getMappedKeyword(field,keyword) @AT@ 4433 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value=getMappedKeyword(field,keyword) @AT@ 4438 @LENGTH@ 1
------INS Block@@ElseBody:{  value=getMappedValue(field,rawValue);} @TO@ IfStatement@@if (isNestedKeyword(rawValue) && !field.isIdField()) {  Keyword keyword=new Keyword((DBObject)rawValue);  return getMappedKeyword(field,keyword);} @AT@ 4484 @LENGTH@ 49
---------INS ExpressionStatement@@Assignment:value=getMappedValue(field,rawValue) @TO@ Block@@ElseBody:{  value=getMappedValue(field,rawValue);} @AT@ 4489 @LENGTH@ 40
------------INS Assignment@@value=getMappedValue(field,rawValue) @TO@ ExpressionStatement@@Assignment:value=getMappedValue(field,rawValue) @AT@ 4489 @LENGTH@ 39
---------------INS SimpleName@@value @TO@ Assignment@@value=getMappedValue(field,rawValue) @AT@ 4489 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value=getMappedValue(field,rawValue) @AT@ 4494 @LENGTH@ 1
---------------INS MethodInvocation@@getMappedValue(field,rawValue) @TO@ Assignment@@value=getMappedValue(field,rawValue) @AT@ 4497 @LENGTH@ 31
------------------MOV SimpleName@@MethodName:getMappedValue:[field, rawValue] @TO@ MethodInvocation@@getMappedValue(field,rawValue) @AT@ 4375 @LENGTH@ 31
---INS VariableDeclarationStatement@@String key=field.getMappedKey(); @TO@ MethodDeclaration@@protected, Object, MethodName:getMappedObjectForField, Field field, Object rawValue,  @AT@ 4266 @LENGTH@ 34
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key=field.getMappedKey(); @AT@ 4266 @LENGTH@ 6
------INS VariableDeclarationFragment@@key=field.getMappedKey() @TO@ VariableDeclarationStatement@@String key=field.getMappedKey(); @AT@ 4273 @LENGTH@ 26
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=field.getMappedKey() @AT@ 4273 @LENGTH@ 3
---------INS MethodInvocation@@field.getMappedKey() @TO@ VariableDeclarationFragment@@key=field.getMappedKey() @AT@ 4279 @LENGTH@ 20
------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getMappedKey() @AT@ 4279 @LENGTH@ 5
------------INS SimpleName@@MethodName:getMappedKey:[] @TO@ MethodInvocation@@field.getMappedKey() @AT@ 4285 @LENGTH@ 14
---INS VariableDeclarationStatement@@Object value; @TO@ MethodDeclaration@@protected, Object, MethodName:getMappedObjectForField, Field field, Object rawValue,  @AT@ 4303 @LENGTH@ 13
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value; @AT@ 4303 @LENGTH@ 6
------INS VariableDeclarationFragment@@value @TO@ VariableDeclarationStatement@@Object value; @AT@ 4310 @LENGTH@ 5
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value @AT@ 4310 @LENGTH@ 5
---UPD ReturnStatement@@MethodInvocation:getMappedValue(field,rawValue) @TO@ MethodInvocation:Collections.singletonMap(key,value).entrySet().iterator().next() @AT@ 4368 @LENGTH@ 39
------UPD MethodInvocation@@getMappedValue(field,rawValue) @TO@ Collections.singletonMap(key,value).entrySet().iterator().next() @AT@ 4375 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@getMappedValue(field,rawValue) @AT@ 4544 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:entrySet:[] @TO@ MethodInvocation@@getMappedValue(field,rawValue) @AT@ 4544 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:singletonMap:[key, value] @TO@ MethodInvocation@@getMappedValue(field,rawValue) @AT@ 4544 @LENGTH@ 36
------------INS SimpleName@@key @TO@ MethodInvocation@@MethodName:singletonMap:[key, value] @AT@ 4569 @LENGTH@ 3
------------INS SimpleName@@value @TO@ MethodInvocation@@MethodName:singletonMap:[key, value] @AT@ 4574 @LENGTH@ 5
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@getMappedValue(field,rawValue) @AT@ 4544 @LENGTH@ 11
---------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@getMappedValue(field,rawValue) @AT@ 4603 @LENGTH@ 6


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]YarnClusterTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @DirtiesContext(classMode=ClassMode.AFTER_CLASS), public]YarnClusterTests,  @AT@ 2156 @LENGTH@ 3852
---INS NormalAnnotation@@@DirtiesContext(classMode=ClassMode.AFTER_CLASS) @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]YarnClusterTests,  @AT@ 2346 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:when(config.getTimeout()).thenReturn(new Time(0,TimeUnit.SECONDS)) @TO@ MethodInvocation:when(config.getTimeout()).thenReturn(new Time(-1,TimeUnit.SECONDS)) @AT@ 2162 @LENGTH@ 68
---UPD MethodInvocation@@when(config.getTimeout()).thenReturn(new Time(0,TimeUnit.SECONDS)) @TO@ when(config.getTimeout()).thenReturn(new Time(-1,TimeUnit.SECONDS)) @AT@ 2162 @LENGTH@ 67
------UPD SimpleName@@MethodName:thenReturn:[new Time(0,TimeUnit.SECONDS)] @TO@ MethodName:thenReturn:[new Time(-1,TimeUnit.SECONDS)] @AT@ 2188 @LENGTH@ 41
---------UPD ClassInstanceCreation@@Time[0, TimeUnit.SECONDS] @TO@ Time[-1, TimeUnit.SECONDS] @AT@ 2199 @LENGTH@ 29
------------DEL NumberLiteral@@0 @AT@ 2208 @LENGTH@ 1
------------INS PrefixExpression@@-1 @TO@ ClassInstanceCreation@@Time[0, TimeUnit.SECONDS] @AT@ 2330 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 2330 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 2331 @LENGTH@ 1


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 12010 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 12013 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 12013 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 12013 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 12020 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 12040 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 12044 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 12050 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 12211 @LENGTH@ 53


UPD VariableDeclarationStatement@@String key=address.getElement(2).getKey(); @TO@ PathAddress newAddr=PathAddress.EMPTY_ADDRESS; @AT@ 41885 @LENGTH@ 44


INS MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @TO@ TypeDeclaration@@[public]SortHandlerMethodArgumentResolverUnitTests, SortDefaultUnitTests @AT@ 6124 @LENGTH@ 231
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @AT@ 6124 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @AT@ 6131 @LENGTH@ 4
---INS SimpleName@@MethodName:parsesCommaParameterForSort @TO@ MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @AT@ 6136 @LENGTH@ 27
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @AT@ 6173 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @AT@ 6188 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 6188 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 6211 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 6211 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 6221 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 6221 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 6225 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addParameter("sort",",") @TO@ MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @AT@ 6253 @LENGTH@ 34
------INS MethodInvocation@@request.addParameter("sort",",") @TO@ ExpressionStatement@@MethodInvocation:request.addParameter("sort",",") @AT@ 6253 @LENGTH@ 33
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter("sort",",") @AT@ 6253 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:["sort", ","] @TO@ MethodInvocation@@request.addParameter("sort",",") @AT@ 6261 @LENGTH@ 25
------------INS StringLiteral@@"sort" @TO@ SimpleName@@MethodName:addParameter:["sort", ","] @AT@ 6274 @LENGTH@ 6
------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:addParameter:["sort", ","] @AT@ 6282 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(resolveSort(request,PARAMETER),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:parsesCommaParameterForSort, Exception,  @AT@ 6291 @LENGTH@ 61
------INS MethodInvocation@@assertThat(resolveSort(request,PARAMETER),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(resolveSort(request,PARAMETER),is(nullValue())) @AT@ 6291 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertThat:[resolveSort(request,PARAMETER), is(nullValue())] @TO@ MethodInvocation@@assertThat(resolveSort(request,PARAMETER),is(nullValue())) @AT@ 6291 @LENGTH@ 60
------------INS MethodInvocation@@resolveSort(request,PARAMETER) @TO@ SimpleName@@MethodName:assertThat:[resolveSort(request,PARAMETER), is(nullValue())] @AT@ 6302 @LENGTH@ 31
---------------INS SimpleName@@MethodName:resolveSort:[request, PARAMETER] @TO@ MethodInvocation@@resolveSort(request,PARAMETER) @AT@ 6302 @LENGTH@ 31
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:resolveSort:[request, PARAMETER] @AT@ 6314 @LENGTH@ 7
------------------INS SimpleName@@PARAMETER @TO@ SimpleName@@MethodName:resolveSort:[request, PARAMETER] @AT@ 6323 @LENGTH@ 9
---------------INS SimpleName@@MethodName:resolveSort:[request, PARAMETER] @TO@ MethodInvocation@@resolveSort(request,PARAMETER) @AT@ 6302 @LENGTH@ 31
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:resolveSort:[request, PARAMETER] @AT@ 6314 @LENGTH@ 7
------------------INS SimpleName@@PARAMETER @TO@ SimpleName@@MethodName:resolveSort:[request, PARAMETER] @AT@ 6323 @LENGTH@ 9
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[resolveSort(request,PARAMETER), is(nullValue())] @AT@ 6335 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 6335 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 6338 @LENGTH@ 11
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 6335 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 6338 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:testOutOfSequenceAfterCapacityReachedComplex, Exception,  @AT@ 3187 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(500) @AT@ 3187 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 3187 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 3194 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 3200 @LENGTH@ 3


UPD MethodDeclaration@@DeploymentUnitProcessingException, MethodName:equivilentNamespacesInJBossXml, QName key, QName s,  @TO@ DeploymentUnitProcessingException, MethodName:equivalentNamespacesInJBossXml, QName key, QName s,  @AT@ 29901 @LENGTH@ 51
---UPD SimpleName@@MethodName:equivilentNamespacesInJBossXml @TO@ MethodName:equivalentNamespacesInJBossXml @AT@ 29901 @LENGTH@ 30


INS MethodDeclaration@@Map<String,String>, MethodName:getProvisionStatusMap,  @TO@ TypeDeclaration@@[public]Container, [HasId] @AT@ 3830 @LENGTH@ 24
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@Map<String,String>, MethodName:getProvisionStatusMap,  @AT@ 3810 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 3810 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3814 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3822 @LENGTH@ 6
---INS SimpleName@@MethodName:getProvisionStatusMap @TO@ MethodDeclaration@@Map<String,String>, MethodName:getProvisionStatusMap,  @AT@ 3830 @LENGTH@ 21


INS MethodDeclaration@@public, Path, MethodName:init, Path path,  @TO@ TypeDeclaration@@[public, abstract]AbstractFileNamingStrategy, [FileNamingStrategy, Ordered] @AT@ 1531 @LENGTH@ 47
---INS Modifier@@public @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 1531 @LENGTH@ 6
---INS SimpleType@@Path @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 1538 @LENGTH@ 4
---INS SimpleName@@MethodName:init @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 1543 @LENGTH@ 4
---INS SingleVariableDeclaration@@Path path @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 1548 @LENGTH@ 9
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path path @AT@ 1548 @LENGTH@ 4
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@Path path @AT@ 1553 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:path @TO@ MethodDeclaration@@public, Path, MethodName:init, Path path,  @AT@ 1563 @LENGTH@ 12
------INS SimpleName@@path @TO@ ReturnStatement@@SimpleName:path @AT@ 1570 @LENGTH@ 4


INS IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @TO@ MethodDeclaration@@public, void, MethodName:testPersist, Exception,  @AT@ 3671 @LENGTH@ 199
---INS InfixExpression@@keyOps instanceof List || keyOps instanceof Set @TO@ IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3674 @LENGTH@ 47
------INS InstanceofExpression@@keyOps instanceof List @TO@ InfixExpression@@keyOps instanceof List || keyOps instanceof Set @AT@ 3674 @LENGTH@ 22
---------INS SimpleName@@keyOps @TO@ InstanceofExpression@@keyOps instanceof List @AT@ 3674 @LENGTH@ 6
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@keyOps instanceof List @AT@ 3681 @LENGTH@ 10
---------INS SimpleType@@List @TO@ InstanceofExpression@@keyOps instanceof List @AT@ 3692 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@keyOps instanceof List || keyOps instanceof Set @AT@ 3696 @LENGTH@ 2
------INS InstanceofExpression@@keyOps instanceof Set @TO@ InfixExpression@@keyOps instanceof List || keyOps instanceof Set @AT@ 3700 @LENGTH@ 21
---------INS SimpleName@@keyOps @TO@ InstanceofExpression@@keyOps instanceof Set @AT@ 3700 @LENGTH@ 6
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@keyOps instanceof Set @AT@ 3707 @LENGTH@ 10
---------INS SimpleType@@Set @TO@ InstanceofExpression@@keyOps instanceof Set @AT@ 3718 @LENGTH@ 3
---INS Block@@ThenBody:{  ((Collection)keyOps).add("dummy");} @TO@ IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3722 @LENGTH@ 59
------INS ExpressionStatement@@MethodInvocation:((Collection)keyOps).add("dummy") @TO@ Block@@ThenBody:{  ((Collection)keyOps).add("dummy");} @AT@ 3736 @LENGTH@ 35
---------INS MethodInvocation@@((Collection)keyOps).add("dummy") @TO@ ExpressionStatement@@MethodInvocation:((Collection)keyOps).add("dummy") @AT@ 3736 @LENGTH@ 34
------------INS ParenthesizedExpression@@((Collection)keyOps) @TO@ MethodInvocation@@((Collection)keyOps).add("dummy") @AT@ 3736 @LENGTH@ 21
---------------INS CastExpression@@(Collection)keyOps @TO@ ParenthesizedExpression@@((Collection)keyOps) @AT@ 3737 @LENGTH@ 19
------------------INS SimpleType@@Collection @TO@ CastExpression@@(Collection)keyOps @AT@ 3738 @LENGTH@ 10
------------------INS SimpleName@@keyOps @TO@ CastExpression@@(Collection)keyOps @AT@ 3750 @LENGTH@ 6
------------INS SimpleName@@MethodName:add:["dummy"] @TO@ MethodInvocation@@((Collection)keyOps).add("dummy") @AT@ 3758 @LENGTH@ 12
---------------INS StringLiteral@@"dummy" @TO@ SimpleName@@MethodName:add:["dummy"] @AT@ 3762 @LENGTH@ 7
---INS Block@@ElseBody:if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @TO@ IfStatement@@if (keyOps instanceof List || keyOps instanceof Set) {  ((Collection)keyOps).add("dummy");} else if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3786 @LENGTH@ 84
------INS IfStatement@@if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @TO@ Block@@ElseBody:if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3786 @LENGTH@ 84
---------INS InstanceofExpression@@keyOps instanceof Map @TO@ IfStatement@@if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3789 @LENGTH@ 21
------------INS SimpleName@@keyOps @TO@ InstanceofExpression@@keyOps instanceof Map @AT@ 3789 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@keyOps instanceof Map @AT@ 3796 @LENGTH@ 10
------------INS SimpleType@@Map @TO@ InstanceofExpression@@keyOps instanceof Map @AT@ 3807 @LENGTH@ 3
---------INS Block@@ThenBody:{  ((Map)keyOps).put("dummy","dummy");} @TO@ IfStatement@@if (keyOps instanceof Map) {  ((Map)keyOps).put("dummy","dummy");} @AT@ 3811 @LENGTH@ 59
------------INS ExpressionStatement@@MethodInvocation:((Map)keyOps).put("dummy","dummy") @TO@ Block@@ThenBody:{  ((Map)keyOps).put("dummy","dummy");} @AT@ 3825 @LENGTH@ 35
---------------INS MethodInvocation@@((Map)keyOps).put("dummy","dummy") @TO@ ExpressionStatement@@MethodInvocation:((Map)keyOps).put("dummy","dummy") @AT@ 3825 @LENGTH@ 34
------------------INS ParenthesizedExpression@@((Map)keyOps) @TO@ MethodInvocation@@((Map)keyOps).put("dummy","dummy") @AT@ 3825 @LENGTH@ 13
---------------------INS CastExpression@@(Map)keyOps @TO@ ParenthesizedExpression@@((Map)keyOps) @AT@ 3826 @LENGTH@ 11
------------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)keyOps @AT@ 3827 @LENGTH@ 3
------------------------INS SimpleName@@keyOps @TO@ CastExpression@@(Map)keyOps @AT@ 3831 @LENGTH@ 6
------------------INS SimpleName@@MethodName:put:["dummy", "dummy"] @TO@ MethodInvocation@@((Map)keyOps).put("dummy","dummy") @AT@ 3839 @LENGTH@ 20
---------------------INS StringLiteral@@"dummy" @TO@ SimpleName@@MethodName:put:["dummy", "dummy"] @AT@ 3843 @LENGTH@ 7
---------------------INS StringLiteral@@"dummy" @TO@ SimpleName@@MethodName:put:["dummy", "dummy"] @AT@ 3851 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:result.setValue(encode(result,authentication)) @TO@ SimpleName:result @AT@ 4698 @LENGTH@ 55
---INS SimpleName@@result @TO@ ReturnStatement@@MethodInvocation:result.setValue(encode(result,authentication)) @AT@ 4756 @LENGTH@ 6


UPD MethodDeclaration@@private, LikeBinding, MethodName:getBindingFor, Query jpaQuery, int position, Parameter methodParameter,  @TO@ private, ParameterBinding, MethodName:getBindingFor, Query jpaQuery, int position, Parameter methodParameter,  @AT@ 2754 @LENGTH@ 349
---UPD SimpleType@@LikeBinding @TO@ ParameterBinding @AT@ 2762 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:Validate.configurationDirectoryExists(jbossHome,"modulePath '" + modulePath + "' must exist") @TO@ MethodInvocation:Validate.configurationDirectoryExists(modulePath,"modulePath '" + modulePath + "' must exist") @AT@ 3458 @LENGTH@ 95
---UPD MethodInvocation@@Validate.configurationDirectoryExists(jbossHome,"modulePath '" + modulePath + "' must exist") @TO@ Validate.configurationDirectoryExists(modulePath,"modulePath '" + modulePath + "' must exist") @AT@ 3458 @LENGTH@ 94
------UPD SimpleName@@MethodName:configurationDirectoryExists:[jbossHome, "modulePath '" + modulePath + "' must exist"] @TO@ MethodName:configurationDirectoryExists:[modulePath, "modulePath '" + modulePath + "' must exist"] @AT@ 3467 @LENGTH@ 85
---------UPD SimpleName@@jbossHome @TO@ modulePath @AT@ 3496 @LENGTH@ 9


UPD EnhancedForStatement@@for (String key : query.keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=(Set<Class<?>>)query.get(key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  Field field=createPropertyField(entity,key,mappingContext);  Object rawValue=query.get(key);  String newKey=field.getMappedKey();  result.put(newKey,getMappedObjectForField(field,rawValue));} @TO@ for (String key : query.keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=(Set<Class<?>>)query.get(key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} @AT@ 3235 @LENGTH@ 695
---UPD VariableDeclarationStatement@@Object rawValue=query.get(key); @TO@ Entry<String,Object> entry=getMappedObjectForField(field,query.get(key)); @AT@ 3786 @LENGTH@ 33
------DEL SimpleType@@Object @AT@ 3786 @LENGTH@ 6
------UPD VariableDeclarationFragment@@rawValue=query.get(key) @TO@ entry=getMappedObjectForField(field,query.get(key)) @AT@ 3793 @LENGTH@ 25
---------UPD SimpleName@@rawValue @TO@ entry @AT@ 3793 @LENGTH@ 8
---------INS MethodInvocation@@getMappedObjectForField(field,query.get(key)) @TO@ VariableDeclarationFragment@@rawValue=query.get(key) @AT@ 3873 @LENGTH@ 46
------------INS SimpleName@@MethodName:getMappedObjectForField:[field, query.get(key)] @TO@ MethodInvocation@@getMappedObjectForField(field,query.get(key)) @AT@ 3873 @LENGTH@ 46
---------------MOV MethodInvocation@@query.get(key) @TO@ SimpleName@@MethodName:getMappedObjectForField:[field, query.get(key)] @AT@ 3804 @LENGTH@ 14
---------------INS SimpleName@@field @TO@ SimpleName@@MethodName:getMappedObjectForField:[field, query.get(key)] @AT@ 3897 @LENGTH@ 5
------INS ParameterizedType@@Entry<String,Object> @TO@ VariableDeclarationStatement@@Object rawValue=query.get(key); @AT@ 3843 @LENGTH@ 21
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,Object> @AT@ 3843 @LENGTH@ 5
---------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,Object> @AT@ 3849 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Entry<String,Object> @AT@ 3857 @LENGTH@ 6
---DEL VariableDeclarationStatement@@String newKey=field.getMappedKey(); @AT@ 3823 @LENGTH@ 37
------DEL SimpleType@@String @AT@ 3823 @LENGTH@ 6
------DEL VariableDeclarationFragment@@newKey=field.getMappedKey() @AT@ 3830 @LENGTH@ 29
---------DEL SimpleName@@newKey @AT@ 3830 @LENGTH@ 6
---------DEL MethodInvocation@@field.getMappedKey() @AT@ 3839 @LENGTH@ 20
------------DEL SimpleName@@Name:field @AT@ 3839 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getMappedKey:[] @AT@ 3845 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:result.put(newKey,getMappedObjectForField(field,rawValue)) @TO@ MethodInvocation:result.put(entry.getKey(),entry.getValue()) @AT@ 3865 @LENGTH@ 61
------UPD MethodInvocation@@result.put(newKey,getMappedObjectForField(field,rawValue)) @TO@ result.put(entry.getKey(),entry.getValue()) @AT@ 3865 @LENGTH@ 60
---------UPD SimpleName@@MethodName:put:[newKey, getMappedObjectForField(field,rawValue)] @TO@ MethodName:put:[entry.getKey(), entry.getValue()] @AT@ 3872 @LENGTH@ 53
------------DEL SimpleName@@newKey @AT@ 3876 @LENGTH@ 6
------------UPD MethodInvocation@@getMappedObjectForField(field,rawValue) @TO@ entry.getValue() @AT@ 3884 @LENGTH@ 40
---------------DEL SimpleName@@MethodName:getMappedObjectForField:[field, rawValue] @AT@ 3884 @LENGTH@ 40
------------------DEL SimpleName@@field @AT@ 3908 @LENGTH@ 5
------------------DEL SimpleName@@rawValue @AT@ 3915 @LENGTH@ 8
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@getMappedObjectForField(field,rawValue) @AT@ 3952 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@getMappedObjectForField(field,rawValue) @AT@ 3958 @LENGTH@ 10
------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[newKey, getMappedObjectForField(field,rawValue)] @AT@ 3936 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 3936 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 3942 @LENGTH@ 8


UPD VariableDeclarationStatement@@String routeId=routeDefinition.getId(); @TO@ String routeId=routeDefinition != null ? routeDefinition.getId() : null; @AT@ 21469 @LENGTH@ 41
---UPD VariableDeclarationFragment@@routeId=routeDefinition.getId() @TO@ routeId=routeDefinition != null ? routeDefinition.getId() : null @AT@ 21476 @LENGTH@ 33
------INS ConditionalExpression@@routeDefinition != null ? routeDefinition.getId() : null @TO@ VariableDeclarationFragment@@routeId=routeDefinition.getId() @AT@ 21486 @LENGTH@ 56
---------INS InfixExpression@@routeDefinition != null @TO@ ConditionalExpression@@routeDefinition != null ? routeDefinition.getId() : null @AT@ 21486 @LENGTH@ 23
------------INS SimpleName@@routeDefinition @TO@ InfixExpression@@routeDefinition != null @AT@ 21486 @LENGTH@ 15
------------INS Operator@@!= @TO@ InfixExpression@@routeDefinition != null @AT@ 21501 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@routeDefinition != null @AT@ 21505 @LENGTH@ 4
---------INS MethodInvocation@@routeDefinition.getId() @TO@ ConditionalExpression@@routeDefinition != null ? routeDefinition.getId() : null @AT@ 21512 @LENGTH@ 23
------------MOV SimpleName@@Name:routeDefinition @TO@ MethodInvocation@@routeDefinition.getId() @AT@ 21486 @LENGTH@ 15
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@routeDefinition.getId() @AT@ 21502 @LENGTH@ 7
---------INS NullLiteral@@null @TO@ ConditionalExpression@@routeDefinition != null ? routeDefinition.getId() : null @AT@ 21538 @LENGTH@ 4
------DEL MethodInvocation@@routeDefinition.getId() @AT@ 21486 @LENGTH@ 23


UPD ExpressionStatement@@Assignment:this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(Collections.<String,Object>emptyMap()) @TO@ Assignment:this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(new HashMap<String,Object>()) @AT@ 12345 @LENGTH@ 165
---UPD Assignment@@this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(Collections.<String,Object>emptyMap()) @TO@ this.attributes=(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(new HashMap<String,Object>()) @AT@ 12345 @LENGTH@ 164
------UPD ConditionalExpression@@(attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(Collections.<String,Object>emptyMap()) @TO@ (attributes != null) ? new LocalAttributeMap<Object>(attributes) : new LocalAttributeMap<Object>(new HashMap<String,Object>()) @AT@ 12363 @LENGTH@ 146
---------UPD ClassInstanceCreation@@LocalAttributeMap<Object>[Collections.<String,Object>emptyMap()] @TO@ LocalAttributeMap<Object>[new HashMap<String,Object>()] @AT@ 12440 @LENGTH@ 69
------------DEL MethodInvocation@@Collections.<String,Object>emptyMap() @AT@ 12470 @LENGTH@ 38
---------------DEL SimpleName@@Name:Collections @AT@ 12470 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 12498 @LENGTH@ 10
------------INS ClassInstanceCreation@@HashMap<String,Object>[] @TO@ ClassInstanceCreation@@LocalAttributeMap<Object>[Collections.<String,Object>emptyMap()] @AT@ 12496 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 12496 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<String,Object> @TO@ ClassInstanceCreation@@HashMap<String,Object>[] @AT@ 12500 @LENGTH@ 23
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 12500 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 12508 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<String,Object> @AT@ 12516 @LENGTH@ 6


UPD TryStatement@@try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);  response.setContentLength(0);  response.flushBuffer();} catch (IOException ioe) {} @TO@ try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.sendError(HttpServletResponse.SC_UNAUTHORIZED);} catch (IOException ioe) {} @AT@ 6663 @LENGTH@ 393
---UPD ExpressionStatement@@MethodInvocation:response.setStatus(HttpServletResponse.SC_UNAUTHORIZED) @TO@ MethodInvocation:response.sendError(HttpServletResponse.SC_UNAUTHORIZED) @AT@ 6801 @LENGTH@ 56
------UPD MethodInvocation@@response.setStatus(HttpServletResponse.SC_UNAUTHORIZED) @TO@ response.sendError(HttpServletResponse.SC_UNAUTHORIZED) @AT@ 6801 @LENGTH@ 55
---------UPD SimpleName@@MethodName:setStatus:[HttpServletResponse.SC_UNAUTHORIZED] @TO@ MethodName:sendError:[HttpServletResponse.SC_UNAUTHORIZED] @AT@ 6810 @LENGTH@ 46
---DEL ExpressionStatement@@MethodInvocation:response.setContentLength(0) @AT@ 6870 @LENGTH@ 29
------DEL MethodInvocation@@response.setContentLength(0) @AT@ 6870 @LENGTH@ 28
---------DEL SimpleName@@Name:response @AT@ 6870 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setContentLength:[0] @AT@ 6879 @LENGTH@ 19
------------DEL NumberLiteral@@0 @AT@ 6896 @LENGTH@ 1
---DEL ExpressionStatement@@MethodInvocation:response.flushBuffer() @AT@ 6912 @LENGTH@ 23
------DEL MethodInvocation@@response.flushBuffer() @AT@ 6912 @LENGTH@ 22
---------DEL SimpleName@@Name:response @AT@ 6912 @LENGTH@ 8
---------DEL SimpleName@@MethodName:flushBuffer:[] @AT@ 6921 @LENGTH@ 13


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("This object has already been built") @TO@ ClassInstanceCreation:new AlreadyBuiltException("This object has already been built") @AT@ 1365 @LENGTH@ 70
---UPD ClassInstanceCreation@@IllegalStateException["This object has already been built"] @TO@ AlreadyBuiltException["This object has already been built"] @AT@ 1371 @LENGTH@ 63
------UPD SimpleType@@IllegalStateException @TO@ AlreadyBuiltException @AT@ 1375 @LENGTH@ 21


UPD VariableDeclarationStatement@@org.springframework.data.mongodb.core.mapping.DBRef annotation=mock(org.springframework.data.mongodb.core.mapping.DBRef.class); @TO@ MongoPersistentProperty property=mock(MongoPersistentProperty.class); @AT@ 35557 @LENGTH@ 129
---UPD SimpleType@@org.springframework.data.mongodb.core.mapping.DBRef @TO@ MongoPersistentProperty @AT@ 35557 @LENGTH@ 51
---UPD VariableDeclarationFragment@@annotation=mock(org.springframework.data.mongodb.core.mapping.DBRef.class) @TO@ property=mock(MongoPersistentProperty.class) @AT@ 35609 @LENGTH@ 76
------UPD SimpleName@@annotation @TO@ property @AT@ 35609 @LENGTH@ 10
------UPD MethodInvocation@@mock(org.springframework.data.mongodb.core.mapping.DBRef.class) @TO@ mock(MongoPersistentProperty.class) @AT@ 35622 @LENGTH@ 63
---------UPD SimpleName@@MethodName:mock:[org.springframework.data.mongodb.core.mapping.DBRef.class] @TO@ MethodName:mock:[MongoPersistentProperty.class] @AT@ 35622 @LENGTH@ 63
------------UPD TypeLiteral@@org.springframework.data.mongodb.core.mapping.DBRef.class @TO@ MongoPersistentProperty.class @AT@ 35627 @LENGTH@ 57


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-727] Fix fabric basic ProfileScalingTest"), public]ProfileScalingTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ProfileScalingTest, FabricTestSupport @AT@ 1344 @LENGTH@ 2262
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-727] Fix fabric basic ProfileScalingTest") @AT@ 1437 @LENGTH@ 59


UPD VariableDeclarationStatement@@Map contexts=(Map)ReflectionUtils.getField(field,null); @TO@ Map<?,?> contexts=(Map<?,?>)ReflectionUtils.getField(field,null); @AT@ 9881 @LENGTH@ 59
---DEL SimpleType@@Map @AT@ 9881 @LENGTH@ 3
---UPD VariableDeclarationFragment@@contexts=(Map)ReflectionUtils.getField(field,null) @TO@ contexts=(Map<?,?>)ReflectionUtils.getField(field,null) @AT@ 9885 @LENGTH@ 54
------UPD CastExpression@@(Map)ReflectionUtils.getField(field,null) @TO@ (Map<?,?>)ReflectionUtils.getField(field,null) @AT@ 9896 @LENGTH@ 43
---------DEL SimpleType@@Map @AT@ 9897 @LENGTH@ 3
---------INS ParameterizedType@@Map<?,?> @TO@ CastExpression@@(Map)ReflectionUtils.getField(field,null) @AT@ 9981 @LENGTH@ 9
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 9981 @LENGTH@ 3
------------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 9985 @LENGTH@ 1
------------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 9988 @LENGTH@ 1
---INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@Map contexts=(Map)ReflectionUtils.getField(field,null); @AT@ 9959 @LENGTH@ 9
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 9959 @LENGTH@ 3
------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 9963 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 9966 @LENGTH@ 1


UPD TypeDeclaration@@[public]InitialContext, InitialDirContext @TO@ [public]InitialContext, InitialLdapContext @AT@ 1767 @LENGTH@ 10662
---UPD SimpleType@@InitialDirContext @TO@ InitialLdapContext @AT@ 1803 @LENGTH@ 17


UPD IfStatement@@if (uri.contains("&&")) {  throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");} @TO@ if (!m.find()) {  throw new ResolveEndpointFailedException(uri,"Invalid uri syntax: Double && marker found. " + "Check the uri and remove the duplicate & marker.");} @AT@ 8983 @LENGTH@ 211


UPD VariableDeclarationStatement@@final NodeList versionElements=plugin.getElementsByTagName("version"); @TO@ final List<Element> versionElements=XmlUtils.findElements("./version",plugin); @AT@ 6369 @LENGTH@ 72
---INS ParameterizedType@@List<Element> @TO@ VariableDeclarationStatement@@final NodeList versionElements=plugin.getElementsByTagName("version"); @AT@ 6375 @LENGTH@ 13
------INS SimpleType@@List @TO@ ParameterizedType@@List<Element> @AT@ 6375 @LENGTH@ 4
------INS SimpleType@@Element @TO@ ParameterizedType@@List<Element> @AT@ 6380 @LENGTH@ 7
---DEL SimpleType@@NodeList @AT@ 6375 @LENGTH@ 8
---UPD VariableDeclarationFragment@@versionElements=plugin.getElementsByTagName("version") @TO@ versionElements=XmlUtils.findElements("./version",plugin) @AT@ 6384 @LENGTH@ 56
------UPD MethodInvocation@@plugin.getElementsByTagName("version") @TO@ XmlUtils.findElements("./version",plugin) @AT@ 6402 @LENGTH@ 38
---------UPD SimpleName@@Name:plugin @TO@ Name:XmlUtils @AT@ 6402 @LENGTH@ 6
---------UPD SimpleName@@MethodName:getElementsByTagName:["version"] @TO@ MethodName:findElements:["./version", plugin] @AT@ 6409 @LENGTH@ 31
------------UPD StringLiteral@@"version" @TO@ "./version" @AT@ 6430 @LENGTH@ 9
------------INS SimpleName@@plugin @TO@ SimpleName@@MethodName:getElementsByTagName:["version"] @AT@ 6442 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertTrue(serviceLatch.await(20,TimeUnit.SECONDS)) @TO@ MethodInvocation:assertTrue(serviceLatch.await(60,TimeUnit.SECONDS)) @AT@ 3296 @LENGTH@ 53
---UPD MethodInvocation@@assertTrue(serviceLatch.await(20,TimeUnit.SECONDS)) @TO@ assertTrue(serviceLatch.await(60,TimeUnit.SECONDS)) @AT@ 3296 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertTrue:[serviceLatch.await(20,TimeUnit.SECONDS)] @TO@ MethodName:assertTrue:[serviceLatch.await(60,TimeUnit.SECONDS)] @AT@ 3296 @LENGTH@ 52
---------UPD MethodInvocation@@serviceLatch.await(20,TimeUnit.SECONDS) @TO@ serviceLatch.await(60,TimeUnit.SECONDS) @AT@ 3307 @LENGTH@ 40
------------UPD SimpleName@@MethodName:await:[20, TimeUnit.SECONDS] @TO@ MethodName:await:[60, TimeUnit.SECONDS] @AT@ 3320 @LENGTH@ 27
---------------UPD NumberLiteral@@20 @TO@ 60 @AT@ 3326 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:aliasesIdFieldCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]TypeBasedAggregationOperationContextUnitTests,  @AT@ 2717 @LENGTH@ 223
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:aliasesIdFieldCorrectly,  @AT@ 2717 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:aliasesIdFieldCorrectly,  @AT@ 2724 @LENGTH@ 4
---INS SimpleName@@MethodName:aliasesIdFieldCorrectly @TO@ MethodDeclaration@@public, void, MethodName:aliasesIdFieldCorrectly,  @AT@ 2729 @LENGTH@ 23
---INS VariableDeclarationStatement@@AggregationOperationContext context=getContext(Foo.class); @TO@ MethodDeclaration@@public, void, MethodName:aliasesIdFieldCorrectly,  @AT@ 2760 @LENGTH@ 60
------INS SimpleType@@AggregationOperationContext @TO@ VariableDeclarationStatement@@AggregationOperationContext context=getContext(Foo.class); @AT@ 2760 @LENGTH@ 27
------INS VariableDeclarationFragment@@context=getContext(Foo.class) @TO@ VariableDeclarationStatement@@AggregationOperationContext context=getContext(Foo.class); @AT@ 2788 @LENGTH@ 31
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=getContext(Foo.class) @AT@ 2788 @LENGTH@ 7
---------INS MethodInvocation@@getContext(Foo.class) @TO@ VariableDeclarationFragment@@context=getContext(Foo.class) @AT@ 2798 @LENGTH@ 21
------------INS SimpleName@@MethodName:getContext:[Foo.class] @TO@ MethodInvocation@@getContext(Foo.class) @AT@ 2798 @LENGTH@ 21
---------------INS TypeLiteral@@Foo.class @TO@ SimpleName@@MethodName:getContext:[Foo.class] @AT@ 2809 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(context.getReference("id"),is(new FieldReference(new ExposedField(Fields.field("id","_id"),true)))) @TO@ MethodDeclaration@@public, void, MethodName:aliasesIdFieldCorrectly,  @AT@ 2823 @LENGTH@ 114
------INS MethodInvocation@@assertThat(context.getReference("id"),is(new FieldReference(new ExposedField(Fields.field("id","_id"),true)))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(context.getReference("id"),is(new FieldReference(new ExposedField(Fields.field("id","_id"),true)))) @AT@ 2823 @LENGTH@ 113
---------INS SimpleName@@MethodName:assertThat:[context.getReference("id"), is(new FieldReference(new ExposedField(Fields.field("id","_id"),true)))] @TO@ MethodInvocation@@assertThat(context.getReference("id"),is(new FieldReference(new ExposedField(Fields.field("id","_id"),true)))) @AT@ 2823 @LENGTH@ 113
------------INS MethodInvocation@@context.getReference("id") @TO@ SimpleName@@MethodName:assertThat:[context.getReference("id"), is(new FieldReference(new ExposedField(Fields.field("id","_id"),true)))] @AT@ 2834 @LENGTH@ 26
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getReference("id") @AT@ 2834 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getReference:["id"] @TO@ MethodInvocation@@context.getReference("id") @AT@ 2842 @LENGTH@ 18
------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:getReference:["id"] @AT@ 2855 @LENGTH@ 4
------------INS MethodInvocation@@is(new FieldReference(new ExposedField(Fields.field("id","_id"),true))) @TO@ SimpleName@@MethodName:assertThat:[context.getReference("id"), is(new FieldReference(new ExposedField(Fields.field("id","_id"),true)))] @AT@ 2862 @LENGTH@ 73
---------------INS SimpleName@@MethodName:is:[new FieldReference(new ExposedField(Fields.field("id","_id"),true))] @TO@ MethodInvocation@@is(new FieldReference(new ExposedField(Fields.field("id","_id"),true))) @AT@ 2862 @LENGTH@ 73
------------------INS ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @TO@ SimpleName@@MethodName:is:[new FieldReference(new ExposedField(Fields.field("id","_id"),true))] @AT@ 2865 @LENGTH@ 69
---------------------INS New@@new @TO@ ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @AT@ 2865 @LENGTH@ 3
---------------------INS SimpleType@@FieldReference @TO@ ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @AT@ 2869 @LENGTH@ 14
---------------------INS ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @TO@ ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @AT@ 2884 @LENGTH@ 49
------------------------INS New@@new @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2884 @LENGTH@ 3
------------------------INS SimpleType@@ExposedField @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2888 @LENGTH@ 12
------------------------INS MethodInvocation@@Fields.field("id","_id") @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2901 @LENGTH@ 25
---------------------------INS SimpleName@@Name:Fields @TO@ MethodInvocation@@Fields.field("id","_id") @AT@ 2901 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:field:["id", "_id"] @TO@ MethodInvocation@@Fields.field("id","_id") @AT@ 2908 @LENGTH@ 18
------------------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:field:["id", "_id"] @AT@ 2914 @LENGTH@ 4
------------------------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:field:["id", "_id"] @AT@ 2920 @LENGTH@ 5
------------------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2928 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[new FieldReference(new ExposedField(Fields.field("id","_id"),true))] @TO@ MethodInvocation@@is(new FieldReference(new ExposedField(Fields.field("id","_id"),true))) @AT@ 2862 @LENGTH@ 73
------------------INS ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @TO@ SimpleName@@MethodName:is:[new FieldReference(new ExposedField(Fields.field("id","_id"),true))] @AT@ 2865 @LENGTH@ 69
---------------------INS New@@new @TO@ ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @AT@ 2865 @LENGTH@ 3
---------------------INS SimpleType@@FieldReference @TO@ ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @AT@ 2869 @LENGTH@ 14
---------------------INS ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @TO@ ClassInstanceCreation@@FieldReference[new ExposedField(Fields.field("id","_id"),true)] @AT@ 2884 @LENGTH@ 49
------------------------INS New@@new @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2884 @LENGTH@ 3
------------------------INS SimpleType@@ExposedField @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2888 @LENGTH@ 12
------------------------INS MethodInvocation@@Fields.field("id","_id") @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2901 @LENGTH@ 25
---------------------------INS SimpleName@@Name:Fields @TO@ MethodInvocation@@Fields.field("id","_id") @AT@ 2901 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:field:["id", "_id"] @TO@ MethodInvocation@@Fields.field("id","_id") @AT@ 2908 @LENGTH@ 18
------------------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:field:["id", "_id"] @AT@ 2914 @LENGTH@ 4
------------------------------INS StringLiteral@@"_id" @TO@ SimpleName@@MethodName:field:["id", "_id"] @AT@ 2920 @LENGTH@ 5
------------------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@ExposedField[Fields.field("id","_id"), true] @AT@ 2928 @LENGTH@ 4


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Change,  @TO@ [@Data, public]Change, AbstractDockerDTO @AT@ 811 @LENGTH@ 127
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Change,  @AT@ 765 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 817 @LENGTH@ 47


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]NetworkSettings,  @TO@ [@Data, public]NetworkSettings, AbstractDockerDTO @AT@ 888 @LENGTH@ 362
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]NetworkSettings,  @AT@ 853 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 894 @LENGTH@ 47


UPD CatchClause@@catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);} @TO@ catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} @AT@ 18478 @LENGTH@ 165


DEL VariableDeclarationStatement@@Set<ContainerProxy> containers=null; @AT@ 922 @LENGTH@ 38
---DEL ParameterizedType@@Set<ContainerProxy> @AT@ 922 @LENGTH@ 19
------DEL SimpleType@@Set @AT@ 922 @LENGTH@ 3
------DEL SimpleType@@ContainerProxy @AT@ 926 @LENGTH@ 14
---DEL VariableDeclarationFragment@@containers=null @AT@ 942 @LENGTH@ 17
------DEL SimpleName@@containers @AT@ 942 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 955 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6143 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 6150 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 6167 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 6180 @LENGTH@ 202
------------DEL New@@new @AT@ 6180 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 6184 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 6184 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 6201 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 6221 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 6257 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 6257 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 6264 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 6281 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 6266 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 6266 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 6290 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, Map<RepositoryInformationCacheKey,RepositoryInformation>, [REPOSITORY_INFORMATION_CACHE=new HashMap<RepositoryInformationCacheKey,RepositoryInformation>()] @TO@ private, final, Map<RepositoryInformationCacheKey,RepositoryInformation>, [REPOSITORY_INFORMATION_CACHE=new HashMap<RepositoryInformationCacheKey,RepositoryInformation>()] @AT@ 2397 @LENGTH@ 178
---DEL Modifier@@static @AT@ 2405 @LENGTH@ 6


INS MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @TO@ TypeDeclaration@@[final]DefaultDeploymentOperations, [DeploymentOperations] @AT@ 3588 @LENGTH@ 801
---INS Modifier@@public @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3588 @LENGTH@ 6
---INS ParameterizedType@@Set<String> @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3595 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 3595 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 3599 @LENGTH@ 6
---INS SimpleName@@MethodName:getPersistentDeployments @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3607 @LENGTH@ 24
---INS VariableDeclarationStatement@@final ModelNode op=Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()); @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3644 @LENGTH@ 96
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode op=Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()); @AT@ 3644 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode op=Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()); @AT@ 3650 @LENGTH@ 9
------INS VariableDeclarationFragment@@op=Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()) @TO@ VariableDeclarationStatement@@final ModelNode op=Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()); @AT@ 3660 @LENGTH@ 79
---------INS SimpleName@@op @TO@ VariableDeclarationFragment@@op=Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()) @AT@ 3660 @LENGTH@ 2
---------INS MethodInvocation@@Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()) @TO@ VariableDeclarationFragment@@op=Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()) @AT@ 3665 @LENGTH@ 74
------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()) @AT@ 3665 @LENGTH@ 4
------------INS SimpleName@@MethodName:getEmptyOperation:[READ_CHILDREN_RESOURCES_OPERATION, new ModelNode()] @TO@ MethodInvocation@@Util.getEmptyOperation(READ_CHILDREN_RESOURCES_OPERATION,new ModelNode()) @AT@ 3670 @LENGTH@ 69
---------------INS SimpleName@@READ_CHILDREN_RESOURCES_OPERATION @TO@ SimpleName@@MethodName:getEmptyOperation:[READ_CHILDREN_RESOURCES_OPERATION, new ModelNode()] @AT@ 3688 @LENGTH@ 33
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ SimpleName@@MethodName:getEmptyOperation:[READ_CHILDREN_RESOURCES_OPERATION, new ModelNode()] @AT@ 3723 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3723 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3727 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:op.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3749 @LENGTH@ 35
------INS MethodInvocation@@op.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ ExpressionStatement@@MethodInvocation:op.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 3749 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:get:[CHILD_TYPE] @TO@ MethodInvocation@@op.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 3749 @LENGTH@ 18
------------INS SimpleName@@CHILD_TYPE @TO@ MethodInvocation@@MethodName:get:[CHILD_TYPE] @AT@ 3756 @LENGTH@ 10
---------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 3749 @LENGTH@ 2
---------INS SimpleName@@MethodName:set:[DEPLOYMENT] @TO@ MethodInvocation@@op.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 3768 @LENGTH@ 15
------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:set:[DEPLOYMENT] @AT@ 3772 @LENGTH@ 10
---INS VariableDeclarationStatement@@ModelNode response; @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3793 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode response; @AT@ 3793 @LENGTH@ 9
------INS VariableDeclarationFragment@@response @TO@ VariableDeclarationStatement@@ModelNode response; @AT@ 3803 @LENGTH@ 8
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response @AT@ 3803 @LENGTH@ 8
---INS TryStatement@@try {  response=controllerClient.execute(op);} catch (IOException e) {  throw new RuntimeException(e);} @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3821 @LENGTH@ 145
------INS ExpressionStatement@@Assignment:response=controllerClient.execute(op) @TO@ TryStatement@@try {  response=controllerClient.execute(op);} catch (IOException e) {  throw new RuntimeException(e);} @AT@ 3839 @LENGTH@ 40
---------INS Assignment@@response=controllerClient.execute(op) @TO@ ExpressionStatement@@Assignment:response=controllerClient.execute(op) @AT@ 3839 @LENGTH@ 39
------------INS SimpleName@@response @TO@ Assignment@@response=controllerClient.execute(op) @AT@ 3839 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@response=controllerClient.execute(op) @AT@ 3847 @LENGTH@ 1
------------INS MethodInvocation@@controllerClient.execute(op) @TO@ Assignment@@response=controllerClient.execute(op) @AT@ 3850 @LENGTH@ 28
---------------INS SimpleName@@Name:controllerClient @TO@ MethodInvocation@@controllerClient.execute(op) @AT@ 3850 @LENGTH@ 16
---------------INS SimpleName@@MethodName:execute:[op] @TO@ MethodInvocation@@controllerClient.execute(op) @AT@ 3867 @LENGTH@ 11
------------------INS SimpleName@@op @TO@ SimpleName@@MethodName:execute:[op] @AT@ 3875 @LENGTH@ 2
------INS CatchClause@@catch (IOException e) {  throw new RuntimeException(e);} @TO@ TryStatement@@try {  response=controllerClient.execute(op);} catch (IOException e) {  throw new RuntimeException(e);} @AT@ 3890 @LENGTH@ 76
---------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw new RuntimeException(e);} @AT@ 3897 @LENGTH@ 13
------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 3897 @LENGTH@ 11
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 3909 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ CatchClause@@catch (IOException e) {  throw new RuntimeException(e);} @AT@ 3926 @LENGTH@ 30
------------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 3932 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3932 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3936 @LENGTH@ 16
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3953 @LENGTH@ 1
---INS VariableDeclarationStatement@@final ModelNode result=response.get(RESULT); @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 3975 @LENGTH@ 46
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode result=response.get(RESULT); @AT@ 3975 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode result=response.get(RESULT); @AT@ 3981 @LENGTH@ 9
------INS VariableDeclarationFragment@@result=response.get(RESULT) @TO@ VariableDeclarationStatement@@final ModelNode result=response.get(RESULT); @AT@ 3991 @LENGTH@ 29
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=response.get(RESULT) @AT@ 3991 @LENGTH@ 6
---------INS MethodInvocation@@response.get(RESULT) @TO@ VariableDeclarationFragment@@result=response.get(RESULT) @AT@ 4000 @LENGTH@ 20
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.get(RESULT) @AT@ 4000 @LENGTH@ 8
------------INS SimpleName@@MethodName:get:[RESULT] @TO@ MethodInvocation@@response.get(RESULT) @AT@ 4009 @LENGTH@ 11
---------------INS SimpleName@@RESULT @TO@ SimpleName@@MethodName:get:[RESULT] @AT@ 4013 @LENGTH@ 6
---INS VariableDeclarationStatement@@final Set<String> deployments=new HashSet<String>(); @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 4030 @LENGTH@ 54
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Set<String> deployments=new HashSet<String>(); @AT@ 4030 @LENGTH@ 5
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@final Set<String> deployments=new HashSet<String>(); @AT@ 4036 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 4036 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 4040 @LENGTH@ 6
------INS VariableDeclarationFragment@@deployments=new HashSet<String>() @TO@ VariableDeclarationStatement@@final Set<String> deployments=new HashSet<String>(); @AT@ 4048 @LENGTH@ 35
---------INS SimpleName@@deployments @TO@ VariableDeclarationFragment@@deployments=new HashSet<String>() @AT@ 4048 @LENGTH@ 11
---------INS ClassInstanceCreation@@HashSet<String>[] @TO@ VariableDeclarationFragment@@deployments=new HashSet<String>() @AT@ 4062 @LENGTH@ 21
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[] @AT@ 4062 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[] @AT@ 4066 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 4066 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 4074 @LENGTH@ 6
---INS IfStatement@@if (result.isDefined()) {  for (  Property property : result.asPropertyList()) {    if (property.getValue().get(PERSISTENT).asBoolean(true)) {      deployments.add(property.getName());    }  }} @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 4093 @LENGTH@ 262
------INS MethodInvocation@@result.isDefined() @TO@ IfStatement@@if (result.isDefined()) {  for (  Property property : result.asPropertyList()) {    if (property.getValue().get(PERSISTENT).asBoolean(true)) {      deployments.add(property.getName());    }  }} @AT@ 4097 @LENGTH@ 18
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.isDefined() @AT@ 4097 @LENGTH@ 6
---------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@result.isDefined() @AT@ 4104 @LENGTH@ 11
------INS Block@@ThenBody:{  for (  Property property : result.asPropertyList()) {    if (property.getValue().get(PERSISTENT).asBoolean(true)) {      deployments.add(property.getName());    }  }} @TO@ IfStatement@@if (result.isDefined()) {  for (  Property property : result.asPropertyList()) {    if (property.getValue().get(PERSISTENT).asBoolean(true)) {      deployments.add(property.getName());    }  }} @AT@ 4117 @LENGTH@ 238
---------INS EnhancedForStatement@@for (Property property : result.asPropertyList()) {  if (property.getValue().get(PERSISTENT).asBoolean(true)) {    deployments.add(property.getName());  }} @TO@ Block@@ThenBody:{  for (  Property property : result.asPropertyList()) {    if (property.getValue().get(PERSISTENT).asBoolean(true)) {      deployments.add(property.getName());    }  }} @AT@ 4131 @LENGTH@ 214
------------INS SingleVariableDeclaration@@Property property @TO@ EnhancedForStatement@@for (Property property : result.asPropertyList()) {  if (property.getValue().get(PERSISTENT).asBoolean(true)) {    deployments.add(property.getName());  }} @AT@ 4136 @LENGTH@ 17
---------------INS SimpleType@@Property @TO@ SingleVariableDeclaration@@Property property @AT@ 4136 @LENGTH@ 8
---------------INS SimpleName@@property @TO@ SingleVariableDeclaration@@Property property @AT@ 4145 @LENGTH@ 8
------------INS MethodInvocation@@result.asPropertyList() @TO@ EnhancedForStatement@@for (Property property : result.asPropertyList()) {  if (property.getValue().get(PERSISTENT).asBoolean(true)) {    deployments.add(property.getName());  }} @AT@ 4156 @LENGTH@ 23
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.asPropertyList() @AT@ 4156 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@result.asPropertyList() @AT@ 4163 @LENGTH@ 16
------------INS IfStatement@@if (property.getValue().get(PERSISTENT).asBoolean(true)) {  deployments.add(property.getName());} @TO@ EnhancedForStatement@@for (Property property : result.asPropertyList()) {  if (property.getValue().get(PERSISTENT).asBoolean(true)) {    deployments.add(property.getName());  }} @AT@ 4199 @LENGTH@ 132
---------------INS MethodInvocation@@property.getValue().get(PERSISTENT).asBoolean(true) @TO@ IfStatement@@if (property.getValue().get(PERSISTENT).asBoolean(true)) {  deployments.add(property.getName());} @AT@ 4202 @LENGTH@ 51
------------------INS MethodInvocation@@MethodName:get:[PERSISTENT] @TO@ MethodInvocation@@property.getValue().get(PERSISTENT).asBoolean(true) @AT@ 4202 @LENGTH@ 35
---------------------INS SimpleName@@PERSISTENT @TO@ MethodInvocation@@MethodName:get:[PERSISTENT] @AT@ 4226 @LENGTH@ 10
------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@property.getValue().get(PERSISTENT).asBoolean(true) @AT@ 4202 @LENGTH@ 19
------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getValue().get(PERSISTENT).asBoolean(true) @AT@ 4202 @LENGTH@ 8
------------------INS SimpleName@@MethodName:asBoolean:[true] @TO@ MethodInvocation@@property.getValue().get(PERSISTENT).asBoolean(true) @AT@ 4238 @LENGTH@ 15
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:asBoolean:[true] @AT@ 4248 @LENGTH@ 4
---------------INS Block@@ThenBody:{  deployments.add(property.getName());} @TO@ IfStatement@@if (property.getValue().get(PERSISTENT).asBoolean(true)) {  deployments.add(property.getName());} @AT@ 4255 @LENGTH@ 76
------------------INS ExpressionStatement@@MethodInvocation:deployments.add(property.getName()) @TO@ Block@@ThenBody:{  deployments.add(property.getName());} @AT@ 4277 @LENGTH@ 36
---------------------INS MethodInvocation@@deployments.add(property.getName()) @TO@ ExpressionStatement@@MethodInvocation:deployments.add(property.getName()) @AT@ 4277 @LENGTH@ 35
------------------------INS SimpleName@@Name:deployments @TO@ MethodInvocation@@deployments.add(property.getName()) @AT@ 4277 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:add:[property.getName()] @TO@ MethodInvocation@@deployments.add(property.getName()) @AT@ 4289 @LENGTH@ 23
---------------------------INS MethodInvocation@@property.getName() @TO@ SimpleName@@MethodName:add:[property.getName()] @AT@ 4293 @LENGTH@ 18
------------------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 4293 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 4302 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:deployments @TO@ MethodDeclaration@@public, Set<String>, MethodName:getPersistentDeployments,  @AT@ 4364 @LENGTH@ 19
------INS SimpleName@@deployments @TO@ ReturnStatement@@SimpleName:deployments @AT@ 4371 @LENGTH@ 11


UPD IfStatement@@if (outputType == SqlOutputType.SelectList) {  List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet());  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else {    exchange.getOut().setBody(data);  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());} else if (outputType == SqlOutputType.SelectOne) {  Object data=getEndpoint().queryForObject(ps.getResultSet());  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} else {  throw new IllegalArgumentException("Invalid outputType=" + outputType);} @TO@ if (outputType == SqlOutputType.SelectList) {  List<Map<String,Object>> data=getEndpoint().queryForList(rs);  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else {    exchange.getOut().setBody(data);  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());} else if (outputType == SqlOutputType.SelectOne) {  Object data=getEndpoint().queryForObject(rs);  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} else {  throw new IllegalArgumentException("Invalid outputType=" + outputType);} @AT@ 4830 @LENGTH@ 1515
---UPD Block@@ThenBody:{  List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet());  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else {    exchange.getOut().setBody(data);  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());} @TO@ ThenBody:{  List<Map<String,Object>> data=getEndpoint().queryForList(rs);  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else {    exchange.getOut().setBody(data);  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,data.size());} @AT@ 4874 @LENGTH@ 605
------UPD VariableDeclarationStatement@@List<Map<String,Object>> data=getEndpoint().queryForList(ps.getResultSet()); @TO@ List<Map<String,Object>> data=getEndpoint().queryForList(rs); @AT@ 4904 @LENGTH@ 79
---------UPD VariableDeclarationFragment@@data=getEndpoint().queryForList(ps.getResultSet()) @TO@ data=getEndpoint().queryForList(rs) @AT@ 4930 @LENGTH@ 52
------------UPD MethodInvocation@@getEndpoint().queryForList(ps.getResultSet()) @TO@ getEndpoint().queryForList(rs) @AT@ 4937 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:queryForList:[ps.getResultSet()] @TO@ MethodName:queryForList:[rs] @AT@ 4951 @LENGTH@ 31
------------------DEL MethodInvocation@@ps.getResultSet() @AT@ 4964 @LENGTH@ 17
---------------------DEL SimpleName@@Name:ps @AT@ 4964 @LENGTH@ 2
---------------------DEL SimpleName@@MethodName:getResultSet:[] @AT@ 4967 @LENGTH@ 14
------------------INS SimpleName@@rs @TO@ SimpleName@@MethodName:queryForList:[ps.getResultSet()] @AT@ 4964 @LENGTH@ 2
---UPD Block@@ElseBody:if (outputType == SqlOutputType.SelectOne) {  Object data=getEndpoint().queryForObject(ps.getResultSet());  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} else {  throw new IllegalArgumentException("Invalid outputType=" + outputType);} @TO@ ElseBody:if (outputType == SqlOutputType.SelectOne) {  Object data=getEndpoint().queryForObject(rs);  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} else {  throw new IllegalArgumentException("Invalid outputType=" + outputType);} @AT@ 5485 @LENGTH@ 860
------UPD IfStatement@@if (outputType == SqlOutputType.SelectOne) {  Object data=getEndpoint().queryForObject(ps.getResultSet());  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} else {  throw new IllegalArgumentException("Invalid outputType=" + outputType);} @TO@ if (outputType == SqlOutputType.SelectOne) {  Object data=getEndpoint().queryForObject(rs);  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} else {  throw new IllegalArgumentException("Invalid outputType=" + outputType);} @AT@ 5485 @LENGTH@ 860
---------UPD Block@@ThenBody:{  Object data=getEndpoint().queryForObject(ps.getResultSet());  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} @TO@ ThenBody:{  Object data=getEndpoint().queryForObject(rs);  if (data != null) {    if (getEndpoint().isNoop()) {      exchange.getOut().setBody(exchange.getIn().getBody());    } else {      exchange.getOut().setBody(data);    }    exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);  }} @AT@ 5528 @LENGTH@ 684
------------UPD VariableDeclarationStatement@@Object data=getEndpoint().queryForObject(ps.getResultSet()); @TO@ Object data=getEndpoint().queryForObject(rs); @AT@ 5558 @LENGTH@ 62
---------------UPD VariableDeclarationFragment@@data=getEndpoint().queryForObject(ps.getResultSet()) @TO@ data=getEndpoint().queryForObject(rs) @AT@ 5565 @LENGTH@ 54
------------------UPD MethodInvocation@@getEndpoint().queryForObject(ps.getResultSet()) @TO@ getEndpoint().queryForObject(rs) @AT@ 5572 @LENGTH@ 47
---------------------UPD SimpleName@@MethodName:queryForObject:[ps.getResultSet()] @TO@ MethodName:queryForObject:[rs] @AT@ 5586 @LENGTH@ 33
------------------------INS SimpleName@@rs @TO@ SimpleName@@MethodName:queryForObject:[ps.getResultSet()] @AT@ 5586 @LENGTH@ 2
------------------------DEL MethodInvocation@@ps.getResultSet() @AT@ 5601 @LENGTH@ 17
---------------------------DEL SimpleName@@Name:ps @AT@ 5601 @LENGTH@ 2
---------------------------DEL SimpleName@@MethodName:getResultSet:[] @AT@ 5604 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:validEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setOutBody(Builder.constant("validResult"))) @TO@ MethodInvocation:validEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setBody(Builder.constant("validResult"))) @AT@ 3573 @LENGTH@ 100
---UPD MethodInvocation@@validEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setOutBody(Builder.constant("validResult"))) @TO@ validEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setBody(Builder.constant("validResult"))) @AT@ 3573 @LENGTH@ 99
------UPD SimpleName@@MethodName:whenAnyExchangeReceived:[ProcessorBuilder.setOutBody(Builder.constant("validResult"))] @TO@ MethodName:whenAnyExchangeReceived:[ProcessorBuilder.setBody(Builder.constant("validResult"))] @AT@ 3587 @LENGTH@ 85
---------UPD MethodInvocation@@ProcessorBuilder.setOutBody(Builder.constant("validResult")) @TO@ ProcessorBuilder.setBody(Builder.constant("validResult")) @AT@ 3611 @LENGTH@ 60
------------UPD SimpleName@@MethodName:setOutBody:[Builder.constant("validResult")] @TO@ MethodName:setBody:[Builder.constant("validResult")] @AT@ 3628 @LENGTH@ 43


DEL VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @AT@ 2621 @LENGTH@ 117
---DEL ParameterizedType@@ServiceProxy<CuratorFramework> @AT@ 2621 @LENGTH@ 30
------DEL SimpleType@@ServiceProxy @AT@ 2621 @LENGTH@ 12
------DEL SimpleType@@CuratorFramework @AT@ 2634 @LENGTH@ 16
---DEL VariableDeclarationFragment@@curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 2652 @LENGTH@ 85
------DEL SimpleName@@curatorProxy @AT@ 2652 @LENGTH@ 12
------DEL MethodInvocation@@ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 2667 @LENGTH@ 70
---------DEL SimpleName@@Name:ServiceProxy @AT@ 2667 @LENGTH@ 12
---------DEL SimpleName@@MethodName:createServiceProxy:[bundleContext, CuratorFramework.class] @AT@ 2680 @LENGTH@ 57
------------DEL SimpleName@@bundleContext @AT@ 2699 @LENGTH@ 13
------------DEL TypeLiteral@@CuratorFramework.class @AT@ 2714 @LENGTH@ 22


UPD FieldDeclaration@@private, static, final, String, [TEST_DATA_DIR="/tmp/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()] @TO@ public, static, final, String, [TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis())] @AT@ 1490 @LENGTH@ 119
---UPD Modifier@@private @TO@ public @AT@ 1490 @LENGTH@ 7
---UPD VariableDeclarationFragment@@TEST_DATA_DIR="/tmp/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @TO@ TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 1518 @LENGTH@ 90
------DEL InfixExpression@@"/tmp/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @AT@ 1538 @LENGTH@ 70
---------DEL StringLiteral@@"/tmp/build/test/data/" @AT@ 1538 @LENGTH@ 23
------INS MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @TO@ VariableDeclarationFragment@@TEST_DATA_DIR="/tmp/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @AT@ 1582 @LENGTH@ 195
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 1582 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 1591 @LENGTH@ 186
------------INS InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @TO@ SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @AT@ 1624 @LENGTH@ 152
---------------MOV Operator@@+ @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1561 @LENGTH@ 1
---------------MOV MethodInvocation@@TestHCatStorerMulti.class.getCanonicalName() @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1564 @LENGTH@ 44
---------------INS MethodInvocation@@System.getProperty("user.dir") @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1624 @LENGTH@ 30
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 1624 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getProperty:["user.dir"] @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 1631 @LENGTH@ 23
---------------------INS StringLiteral@@"user.dir" @TO@ SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 1643 @LENGTH@ 10
---------------INS StringLiteral@@"/build/test/data/" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1657 @LENGTH@ 19
---------------INS StringLiteral@@"-" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1744 @LENGTH@ 3
---------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1750 @LENGTH@ 26
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1750 @LENGTH@ 6
------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1757 @LENGTH@ 19


UPD VariableDeclarationStatement@@final RaDeploymentActivator raDeploymentActivator=new RaDeploymentActivator(); @TO@ final RaDeploymentActivator raDeploymentActivator=new RaDeploymentActivator(appclient); @AT@ 2692 @LENGTH@ 80
---UPD VariableDeclarationFragment@@raDeploymentActivator=new RaDeploymentActivator() @TO@ raDeploymentActivator=new RaDeploymentActivator(appclient) @AT@ 2720 @LENGTH@ 51
------UPD ClassInstanceCreation@@RaDeploymentActivator[] @TO@ RaDeploymentActivator[appclient] @AT@ 2744 @LENGTH@ 27
---------INS SimpleName@@appclient @TO@ ClassInstanceCreation@@RaDeploymentActivator[] @AT@ 2908 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:cidBuilder.addImplementsType(JsfJavaType.CONVERTER) @TO@ MethodDeclaration@@private, void, MethodName:createConverter, final JavaPackage javaPackage, final JavaType entity,  @AT@ 11619 @LENGTH@ 52
---INS MethodInvocation@@cidBuilder.addImplementsType(JsfJavaType.CONVERTER) @TO@ ExpressionStatement@@MethodInvocation:cidBuilder.addImplementsType(JsfJavaType.CONVERTER) @AT@ 11619 @LENGTH@ 51
------INS SimpleName@@Name:cidBuilder @TO@ MethodInvocation@@cidBuilder.addImplementsType(JsfJavaType.CONVERTER) @AT@ 11619 @LENGTH@ 10
------INS SimpleName@@MethodName:addImplementsType:[JsfJavaType.CONVERTER] @TO@ MethodInvocation@@cidBuilder.addImplementsType(JsfJavaType.CONVERTER) @AT@ 11630 @LENGTH@ 40
---------INS QualifiedName@@JsfJavaType.CONVERTER @TO@ SimpleName@@MethodName:addImplementsType:[JsfJavaType.CONVERTER] @AT@ 11648 @LENGTH@ 21
------------INS SimpleName@@JsfJavaType @TO@ QualifiedName@@JsfJavaType.CONVERTER @AT@ 11648 @LENGTH@ 11
------------INS SimpleName@@CONVERTER @TO@ QualifiedName@@JsfJavaType.CONVERTER @AT@ 11660 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new StepState(stateName,((StepState)state).getStep()) @TO@ ClassInstanceCreation:new StepState(stateName,((StepState)state).getStep(oldName)) @AT@ 4829 @LENGTH@ 63
---UPD ClassInstanceCreation@@StepState[stateName, ((StepState)state).getStep()] @TO@ StepState[stateName, ((StepState)state).getStep(oldName)] @AT@ 4836 @LENGTH@ 55
------UPD MethodInvocation@@((StepState)state).getStep() @TO@ ((StepState)state).getStep(oldName) @AT@ 4861 @LENGTH@ 29
---------UPD SimpleName@@MethodName:getStep:[] @TO@ MethodName:getStep:[oldName] @AT@ 4881 @LENGTH@ 9
------------INS SimpleName@@oldName @TO@ SimpleName@@MethodName:getStep:[] @AT@ 4889 @LENGTH@ 7


UPD IfStatement@@if (versionElements.getLength() > 0) {  return versionElements.item(0).getTextContent();} @TO@ if (!versionElements.isEmpty()) {  return versionElements.get(0).getTextContent();} @AT@ 6450 @LENGTH@ 109
---DEL InfixExpression@@versionElements.getLength() > 0 @AT@ 6454 @LENGTH@ 31
------DEL MethodInvocation@@versionElements.getLength() @AT@ 6454 @LENGTH@ 27
------DEL Operator@@> @AT@ 6481 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 6484 @LENGTH@ 1
---INS PrefixExpression@@!versionElements.isEmpty() @TO@ IfStatement@@if (versionElements.getLength() > 0) {  return versionElements.item(0).getTextContent();} @AT@ 6463 @LENGTH@ 26
------INS Operator@@! @TO@ PrefixExpression@@!versionElements.isEmpty() @AT@ 6463 @LENGTH@ 1
------INS MethodInvocation@@versionElements.isEmpty() @TO@ PrefixExpression@@!versionElements.isEmpty() @AT@ 6464 @LENGTH@ 25
---------MOV SimpleName@@Name:versionElements @TO@ MethodInvocation@@versionElements.isEmpty() @AT@ 6454 @LENGTH@ 15
---------MOV SimpleName@@MethodName:getLength:[] @TO@ MethodInvocation@@versionElements.isEmpty() @AT@ 6470 @LENGTH@ 11
---UPD Block@@ThenBody:{  return versionElements.item(0).getTextContent();} @TO@ ThenBody:{  return versionElements.get(0).getTextContent();} @AT@ 6487 @LENGTH@ 72
------UPD ReturnStatement@@MethodInvocation:versionElements.item(0).getTextContent() @TO@ MethodInvocation:versionElements.get(0).getTextContent() @AT@ 6501 @LENGTH@ 48
---------UPD MethodInvocation@@versionElements.item(0).getTextContent() @TO@ versionElements.get(0).getTextContent() @AT@ 6508 @LENGTH@ 40
------------UPD MethodInvocation@@MethodName:item:[0] @TO@ MethodName:get:[0] @AT@ 6508 @LENGTH@ 23


UPD MethodDeclaration@@public, void, MethodName:getCredentials,  @TO@ public, void, MethodName:getAuthentication,  @AT@ 2308 @LENGTH@ 107
---UPD SimpleName@@MethodName:getCredentials @TO@ MethodName:getAuthentication @AT@ 2320 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 6528 @LENGTH@ 756
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 6528 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 6535 @LENGTH@ 4
---INS SimpleName@@MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 6540 @LENGTH@ 56
---INS VariableDeclarationStatement@@StringQuery query=new StringQuery("SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"); @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 6604 @LENGTH@ 209
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"); @AT@ 6604 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new StringQuery("SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC") @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"); @AT@ 6616 @LENGTH@ 196
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new StringQuery("SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC") @AT@ 6616 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringQuery["SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @TO@ VariableDeclarationFragment@@query=new StringQuery("SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC") @AT@ 6624 @LENGTH@ 188
------------INS New@@new @TO@ ClassInstanceCreation@@StringQuery["SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @AT@ 6624 @LENGTH@ 3
------------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery["SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @AT@ 6628 @LENGTH@ 11
------------INS InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @TO@ ClassInstanceCreation@@StringQuery["SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @AT@ 6640 @LENGTH@ 171
---------------INS StringLiteral@@"SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 6640 @LENGTH@ 73
---------------INS Operator@@+ @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 6713 @LENGTH@ 1
---------------INS StringLiteral@@" OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE %:escapedWord% ESCAPE '~'" + " OR a.content LIKE %:escapedWord% ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 6720 @LENGTH@ 91
---INS VariableDeclarationStatement@@List<ParameterBinding> bindings=query.getParameterBindings(); @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 6817 @LENGTH@ 63
------INS ParameterizedType@@List<ParameterBinding> @TO@ VariableDeclarationStatement@@List<ParameterBinding> bindings=query.getParameterBindings(); @AT@ 6817 @LENGTH@ 22
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ParameterBinding> @AT@ 6817 @LENGTH@ 4
---------INS SimpleType@@ParameterBinding @TO@ ParameterizedType@@List<ParameterBinding> @AT@ 6822 @LENGTH@ 16
------INS VariableDeclarationFragment@@bindings=query.getParameterBindings() @TO@ VariableDeclarationStatement@@List<ParameterBinding> bindings=query.getParameterBindings(); @AT@ 6840 @LENGTH@ 39
---------INS SimpleName@@bindings @TO@ VariableDeclarationFragment@@bindings=query.getParameterBindings() @AT@ 6840 @LENGTH@ 8
---------INS MethodInvocation@@query.getParameterBindings() @TO@ VariableDeclarationFragment@@bindings=query.getParameterBindings() @AT@ 6851 @LENGTH@ 28
------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 6851 @LENGTH@ 5
------------INS SimpleName@@MethodName:getParameterBindings:[] @TO@ MethodInvocation@@query.getParameterBindings() @AT@ 6857 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertThat(bindings,hasSize(2)) @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 6884 @LENGTH@ 33
------INS MethodInvocation@@assertThat(bindings,hasSize(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(bindings,hasSize(2)) @AT@ 6884 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[bindings, hasSize(2)] @TO@ MethodInvocation@@assertThat(bindings,hasSize(2)) @AT@ 6884 @LENGTH@ 32
------------INS SimpleName@@bindings @TO@ SimpleName@@MethodName:assertThat:[bindings, hasSize(2)] @AT@ 6895 @LENGTH@ 8
------------INS MethodInvocation@@hasSize(2) @TO@ SimpleName@@MethodName:assertThat:[bindings, hasSize(2)] @AT@ 6905 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 6905 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 6913 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 6905 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 6913 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertNamedBinding(LikeParameterBinding.class,"escapedWord",bindings.get(0)) @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 6920 @LENGTH@ 79
------INS MethodInvocation@@assertNamedBinding(LikeParameterBinding.class,"escapedWord",bindings.get(0)) @TO@ ExpressionStatement@@MethodInvocation:assertNamedBinding(LikeParameterBinding.class,"escapedWord",bindings.get(0)) @AT@ 6920 @LENGTH@ 78
---------INS SimpleName@@MethodName:assertNamedBinding:[LikeParameterBinding.class, "escapedWord", bindings.get(0)] @TO@ MethodInvocation@@assertNamedBinding(LikeParameterBinding.class,"escapedWord",bindings.get(0)) @AT@ 6920 @LENGTH@ 78
------------INS TypeLiteral@@LikeParameterBinding.class @TO@ SimpleName@@MethodName:assertNamedBinding:[LikeParameterBinding.class, "escapedWord", bindings.get(0)] @AT@ 6939 @LENGTH@ 26
------------INS StringLiteral@@"escapedWord" @TO@ SimpleName@@MethodName:assertNamedBinding:[LikeParameterBinding.class, "escapedWord", bindings.get(0)] @AT@ 6967 @LENGTH@ 13
------------INS MethodInvocation@@bindings.get(0) @TO@ SimpleName@@MethodName:assertNamedBinding:[LikeParameterBinding.class, "escapedWord", bindings.get(0)] @AT@ 6982 @LENGTH@ 15
---------------INS SimpleName@@Name:bindings @TO@ MethodInvocation@@bindings.get(0) @AT@ 6982 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@bindings.get(0) @AT@ 6991 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 6995 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertNamedBinding(ParameterBinding.class,"word",bindings.get(1)) @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 7002 @LENGTH@ 68
------INS MethodInvocation@@assertNamedBinding(ParameterBinding.class,"word",bindings.get(1)) @TO@ ExpressionStatement@@MethodInvocation:assertNamedBinding(ParameterBinding.class,"word",bindings.get(1)) @AT@ 7002 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertNamedBinding:[ParameterBinding.class, "word", bindings.get(1)] @TO@ MethodInvocation@@assertNamedBinding(ParameterBinding.class,"word",bindings.get(1)) @AT@ 7002 @LENGTH@ 67
------------INS TypeLiteral@@ParameterBinding.class @TO@ SimpleName@@MethodName:assertNamedBinding:[ParameterBinding.class, "word", bindings.get(1)] @AT@ 7021 @LENGTH@ 22
------------INS StringLiteral@@"word" @TO@ SimpleName@@MethodName:assertNamedBinding:[ParameterBinding.class, "word", bindings.get(1)] @AT@ 7045 @LENGTH@ 6
------------INS MethodInvocation@@bindings.get(1) @TO@ SimpleName@@MethodName:assertNamedBinding:[ParameterBinding.class, "word", bindings.get(1)] @AT@ 7053 @LENGTH@ 15
---------------INS SimpleName@@Name:bindings @TO@ MethodInvocation@@bindings.get(1) @AT@ 7053 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:[1] @TO@ MethodInvocation@@bindings.get(1) @AT@ 7062 @LENGTH@ 6
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:get:[1] @AT@ 7066 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getQueryString(),is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC")) @TO@ MethodDeclaration@@public, void, MethodName:removesLikeBindingsFromQueryIfQueryContainsSimpleBinding,  @AT@ 7073 @LENGTH@ 208
------INS MethodInvocation@@assertThat(query.getQueryString(),is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getQueryString(),is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC")) @AT@ 7073 @LENGTH@ 207
---------INS SimpleName@@MethodName:assertThat:[query.getQueryString(), is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC")] @TO@ MethodInvocation@@assertThat(query.getQueryString(),is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC")) @AT@ 7073 @LENGTH@ 207
------------INS MethodInvocation@@query.getQueryString() @TO@ SimpleName@@MethodName:assertThat:[query.getQueryString(), is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC")] @AT@ 7084 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryString() @AT@ 7084 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQueryString:[] @TO@ MethodInvocation@@query.getQueryString() @AT@ 7090 @LENGTH@ 16
------------INS MethodInvocation@@is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC") @TO@ SimpleName@@MethodName:assertThat:[query.getQueryString(), is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC")] @AT@ 7108 @LENGTH@ 171
---------------INS SimpleName@@MethodName:is:["SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @TO@ MethodInvocation@@is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC") @AT@ 7108 @LENGTH@ 171
------------------INS InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @TO@ SimpleName@@MethodName:is:["SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @AT@ 7111 @LENGTH@ 167
---------------------INS StringLiteral@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 7111 @LENGTH@ 71
---------------------INS Operator@@+ @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 7182 @LENGTH@ 1
---------------------INS StringLiteral@@" OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 7189 @LENGTH@ 89
---------------INS SimpleName@@MethodName:is:["SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @TO@ MethodInvocation@@is("SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC") @AT@ 7108 @LENGTH@ 171
------------------INS InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @TO@ SimpleName@@MethodName:is:["SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC"] @AT@ 7111 @LENGTH@ 167
---------------------INS StringLiteral@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 7111 @LENGTH@ 71
---------------------INS Operator@@+ @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 7182 @LENGTH@ 1
---------------------INS StringLiteral@@" OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @TO@ InfixExpression@@"SELECT a FROM Article a WHERE a.overview LIKE :escapedWord ESCAPE '~'" + " OR a.content LIKE :escapedWord ESCAPE '~' OR a.title = :word ORDER BY a.articleId DESC" @AT@ 7189 @LENGTH@ 89


UPD FieldDeclaration@@private, final, Map<Integer,MarshallingConfiguration>, [configurations=new HashMap<>()] @TO@ private, final, Map<Integer,MarshallingConfiguration>, [configurations=new ConcurrentHashMap<>()] @AT@ 2111 @LENGTH@ 86
---UPD VariableDeclarationFragment@@configurations=new HashMap<>() @TO@ configurations=new ConcurrentHashMap<>() @AT@ 2164 @LENGTH@ 32
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ ConcurrentHashMap<>[] @AT@ 2181 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ ConcurrentHashMap<> @AT@ 2185 @LENGTH@ 9
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 2185 @LENGTH@ 7


UPD TypeDeclaration@@[@SuppressWarnings("unused"), private, static]EverythingIsLostException, Exception @TO@ [private, static, final]EverythingIsLostException, Exception @AT@ 3867 @LENGTH@ 697
---DEL SingleMemberAnnotation@@@SuppressWarnings("unused") @AT@ 3867 @LENGTH@ 27
---INS Modifier@@final @TO@ TypeDeclaration@@[@SuppressWarnings("unused"), private, static]EverythingIsLostException, Exception @AT@ 4627 @LENGTH@ 5


UPD Block@@ThenBody:{  LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile());  InputStream is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile());  if (is == null) {    throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());  }  answer=new Properties();  try {    answer.load(is);  } catch (  IOException e) {    throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);  } finally {    IOHelper.close(is);  }} @TO@ ThenBody:{  LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile());  InputStream is=null;  try {    is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());    answer=new Properties();    answer.load(is);  } catch (  IOException e) {    throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);  } finally {    IOHelper.close(is);  }} @AT@ 8188 @LENGTH@ 709
---UPD VariableDeclarationStatement@@InputStream is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()); @TO@ InputStream is=null; @AT@ 8298 @LENGTH@ 96
------UPD VariableDeclarationFragment@@is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()) @TO@ is=null @AT@ 8310 @LENGTH@ 83
---------DEL MethodInvocation@@getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()) @AT@ 8315 @LENGTH@ 78
------------DEL MethodInvocation@@MethodName:getClassResolver:[] @AT@ 8315 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 8315 @LENGTH@ 17
------------DEL SimpleName@@MethodName:loadResourceAsStream:[getPropertiesFile()] @AT@ 8352 @LENGTH@ 41
---------------DEL MethodInvocation@@MethodName:getPropertiesFile:[] @AT@ 8373 @LENGTH@ 19
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile()) @AT@ 8360 @LENGTH@ 4
---INS TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @TO@ Block@@ThenBody:{  LOG.info("Loading Quartz properties file from classpath: {}",getPropertiesFile());  InputStream is=getCamelContext().getClassResolver().loadResourceAsStream(getPropertiesFile());  if (is == null) {    throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());  }  answer=new Properties();  try {    answer.load(is);  } catch (  IOException e) {    throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);  } finally {    IOHelper.close(is);  }} @AT@ 8378 @LENGTH@ 440
------INS ExpressionStatement@@Assignment:is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 8400 @LENGTH@ 117
---------INS Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @TO@ ExpressionStatement@@Assignment:is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 8400 @LENGTH@ 116
------------INS SimpleName@@is @TO@ Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 8400 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 8402 @LENGTH@ 1
------------INS MethodInvocation@@ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @TO@ Assignment@@is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 8405 @LENGTH@ 111
---------------INS SimpleName@@Name:ResourceHelper @TO@ MethodInvocation@@ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 8405 @LENGTH@ 14
---------------INS SimpleName@@MethodName:resolveMandatoryResourceAsInputStream:[getCamelContext().getClassResolver(), getPropertiesFile()] @TO@ MethodInvocation@@ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile()) @AT@ 8420 @LENGTH@ 96
------------------INS MethodInvocation@@getCamelContext().getClassResolver() @TO@ SimpleName@@MethodName:resolveMandatoryResourceAsInputStream:[getCamelContext().getClassResolver(), getPropertiesFile()] @AT@ 8458 @LENGTH@ 36
---------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().getClassResolver() @AT@ 8458 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getClassResolver:[] @TO@ MethodInvocation@@getCamelContext().getClassResolver() @AT@ 8476 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:getPropertiesFile:[] @TO@ SimpleName@@MethodName:resolveMandatoryResourceAsInputStream:[getCamelContext().getClassResolver(), getPropertiesFile()] @AT@ 8496 @LENGTH@ 19
------MOV ExpressionStatement@@Assignment:answer=new Properties() @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 8570 @LENGTH@ 26
------MOV ExpressionStatement@@MethodInvocation:answer.load(is) @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 8631 @LENGTH@ 16
------MOV CatchClause@@catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);} @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 8662 @LENGTH@ 165
------MOV Block@@FinallyBody:{  IOHelper.close(is);} @TO@ TryStatement@@try {  is=ResourceHelper.resolveMandatoryResourceAsInputStream(getCamelContext().getClassResolver(),getPropertiesFile());  answer=new Properties();  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 8836 @LENGTH@ 51
---DEL IfStatement@@if (is == null) {  throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());} @AT@ 8407 @LENGTH@ 150
------DEL InfixExpression@@is == null @AT@ 8411 @LENGTH@ 10
---------DEL SimpleName@@is @AT@ 8411 @LENGTH@ 2
---------DEL Operator@@== @AT@ 8413 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 8417 @LENGTH@ 4
------DEL Block@@ThenBody:{  throw new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile());} @AT@ 8423 @LENGTH@ 134
---------DEL ThrowStatement@@ClassInstanceCreation:new SchedulerException("Quartz properties file not found in classpath: " + getPropertiesFile()) @AT@ 8441 @LENGTH@ 102
------------DEL ClassInstanceCreation@@SchedulerException["Quartz properties file not found in classpath: " + getPropertiesFile()] @AT@ 8447 @LENGTH@ 95
---------------DEL New@@new @AT@ 8447 @LENGTH@ 3
---------------DEL SimpleType@@SchedulerException @AT@ 8451 @LENGTH@ 18
---------------DEL InfixExpression@@"Quartz properties file not found in classpath: " + getPropertiesFile() @AT@ 8470 @LENGTH@ 71
------------------DEL StringLiteral@@"Quartz properties file not found in classpath: " @AT@ 8470 @LENGTH@ 49
------------------DEL Operator@@+ @AT@ 8519 @LENGTH@ 1
------------------DEL MethodInvocation@@MethodName:getPropertiesFile:[] @AT@ 8522 @LENGTH@ 19
---DEL TryStatement@@try {  answer.load(is);} catch (IOException e) {  throw new SchedulerException("Error loading Quartz properties file from classpath: " + getPropertiesFile(),e);} finally {  IOHelper.close(is);} @AT@ 8609 @LENGTH@ 278


UPD ExpressionStatement@@MethodInvocation:invalidEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setOutBody(Builder.constant("invalidResult"))) @TO@ MethodInvocation:invalidEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setBody(Builder.constant("invalidResult"))) @AT@ 3682 @LENGTH@ 104
---UPD MethodInvocation@@invalidEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setOutBody(Builder.constant("invalidResult"))) @TO@ invalidEndpoint.whenAnyExchangeReceived(ProcessorBuilder.setBody(Builder.constant("invalidResult"))) @AT@ 3682 @LENGTH@ 103
------UPD SimpleName@@MethodName:whenAnyExchangeReceived:[ProcessorBuilder.setOutBody(Builder.constant("invalidResult"))] @TO@ MethodName:whenAnyExchangeReceived:[ProcessorBuilder.setBody(Builder.constant("invalidResult"))] @AT@ 3698 @LENGTH@ 87
---------UPD MethodInvocation@@ProcessorBuilder.setOutBody(Builder.constant("invalidResult")) @TO@ ProcessorBuilder.setBody(Builder.constant("invalidResult")) @AT@ 3722 @LENGTH@ 62
------------UPD SimpleName@@MethodName:setOutBody:[Builder.constant("invalidResult")] @TO@ MethodName:setBody:[Builder.constant("invalidResult")] @AT@ 3739 @LENGTH@ 45


MOV ExpressionStatement@@MethodInvocation:getEndpoint().declareExchangeAndQueue(channel) @TO@ MethodDeclaration@@private, void, MethodName:openConnectionAndChannel, IOException,  @AT@ 2444 @LENGTH@ 47


UPD Block@@ThenBody:{  for (  Entry<BlockingQueueConsumer,Boolean> consumer : this.consumers.entrySet()) {    if (logger.isDebugEnabled()) {      logger.debug("Queues changed; stopping consumer: " + consumer.getKey());    }    consumer.getKey().setQuiesce(this.shutdownTimeout);    consumer.setValue(false);    this.addAndStartConsumers(1);  }} @TO@ ThenBody:{  int count=0;  for (  Entry<BlockingQueueConsumer,Boolean> consumer : this.consumers.entrySet()) {    if (consumer.getValue()) {      if (logger.isDebugEnabled()) {        logger.debug("Queues changed; stopping consumer: " + consumer.getKey());      }      consumer.getKey().setQuiesce(this.shutdownTimeout);      consumer.setValue(false);      count++;    }  }  this.addAndStartConsumers(count);} @AT@ 27225 @LENGTH@ 344
---UPD EnhancedForStatement@@for (Entry<BlockingQueueConsumer,Boolean> consumer : this.consumers.entrySet()) {  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  this.addAndStartConsumers(1);} @TO@ for (Entry<BlockingQueueConsumer,Boolean> consumer : this.consumers.entrySet()) {  if (consumer.getValue()) {    if (logger.isDebugEnabled()) {      logger.debug("Queues changed; stopping consumer: " + consumer.getKey());    }    consumer.getKey().setQuiesce(this.shutdownTimeout);    consumer.setValue(false);    count++;  }} @AT@ 27231 @LENGTH@ 333
------INS IfStatement@@if (consumer.getValue()) {  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @TO@ EnhancedForStatement@@for (Entry<BlockingQueueConsumer,Boolean> consumer : this.consumers.entrySet()) {  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  this.addAndStartConsumers(1);} @AT@ 27338 @LENGTH@ 263
---------INS MethodInvocation@@consumer.getValue() @TO@ IfStatement@@if (consumer.getValue()) {  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @AT@ 27342 @LENGTH@ 19
------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.getValue() @AT@ 27342 @LENGTH@ 8
------------MOV SimpleName@@MethodName:addAndStartConsumers:[1] @TO@ MethodInvocation@@consumer.getValue() @AT@ 27534 @LENGTH@ 23
---------INS Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @TO@ IfStatement@@if (consumer.getValue()) {  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @AT@ 27363 @LENGTH@ 238
------------MOV IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Queues changed; stopping consumer: " + consumer.getKey());} @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @AT@ 27319 @LENGTH@ 116
------------MOV ExpressionStatement@@MethodInvocation:consumer.getKey().setQuiesce(this.shutdownTimeout) @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @AT@ 27441 @LENGTH@ 51
------------MOV ExpressionStatement@@MethodInvocation:consumer.setValue(false) @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @AT@ 27498 @LENGTH@ 25
------------INS ExpressionStatement@@PostfixExpression:count++ @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Queues changed; stopping consumer: " + consumer.getKey());  }  consumer.getKey().setQuiesce(this.shutdownTimeout);  consumer.setValue(false);  count++;} @AT@ 27586 @LENGTH@ 8
---------------INS PostfixExpression@@count++ @TO@ ExpressionStatement@@PostfixExpression:count++ @AT@ 27586 @LENGTH@ 7
------------------INS SimpleName@@count @TO@ PostfixExpression@@count++ @AT@ 27586 @LENGTH@ 5
------------------INS Operator@@++ @TO@ PostfixExpression@@count++ @AT@ 27592 @LENGTH@ 2
------DEL ExpressionStatement@@MethodInvocation:this.addAndStartConsumers(1) @AT@ 27529 @LENGTH@ 29
---------DEL MethodInvocation@@this.addAndStartConsumers(1) @AT@ 27529 @LENGTH@ 28
------------DEL ThisExpression@@this @AT@ 27529 @LENGTH@ 4
---INS VariableDeclarationStatement@@int count=0; @TO@ Block@@ThenBody:{  for (  Entry<BlockingQueueConsumer,Boolean> consumer : this.consumers.entrySet()) {    if (logger.isDebugEnabled()) {      logger.debug("Queues changed; stopping consumer: " + consumer.getKey());    }    consumer.getKey().setQuiesce(this.shutdownTimeout);    consumer.setValue(false);    this.addAndStartConsumers(1);  }} @AT@ 27231 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int count=0; @AT@ 27231 @LENGTH@ 3
------INS VariableDeclarationFragment@@count=0 @TO@ VariableDeclarationStatement@@int count=0; @AT@ 27235 @LENGTH@ 9
---------INS SimpleName@@count @TO@ VariableDeclarationFragment@@count=0 @AT@ 27235 @LENGTH@ 5
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@count=0 @AT@ 27243 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:this.addAndStartConsumers(count) @TO@ Block@@ThenBody:{  for (  Entry<BlockingQueueConsumer,Boolean> consumer : this.consumers.entrySet()) {    if (logger.isDebugEnabled()) {      logger.debug("Queues changed; stopping consumer: " + consumer.getKey());    }    consumer.getKey().setQuiesce(this.shutdownTimeout);    consumer.setValue(false);    this.addAndStartConsumers(1);  }} @AT@ 27612 @LENGTH@ 33
------INS MethodInvocation@@this.addAndStartConsumers(count) @TO@ ExpressionStatement@@MethodInvocation:this.addAndStartConsumers(count) @AT@ 27612 @LENGTH@ 32
---------INS ThisExpression@@this @TO@ MethodInvocation@@this.addAndStartConsumers(count) @AT@ 27612 @LENGTH@ 4
---------INS SimpleName@@MethodName:addAndStartConsumers:[count] @TO@ MethodInvocation@@this.addAndStartConsumers(count) @AT@ 27617 @LENGTH@ 27
------------INS SimpleName@@count @TO@ SimpleName@@MethodName:addAndStartConsumers:[count] @AT@ 27638 @LENGTH@ 5


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ContainerConfig,  @TO@ [@Data, public]ContainerConfig, AbstractDockerDTO @AT@ 856 @LENGTH@ 795
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]ContainerConfig,  @AT@ 820 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 862 @LENGTH@ 47


UPD ThrowStatement@@ClassInstanceCreation:new IOException("cannot find dir = " + dir.toString() + " in partToPartitionInfo!") @TO@ ClassInstanceCreation:new IOException("cannot find dir = " + dir.toString() + " in "+ pathToPartitionInfo) @AT@ 13786 @LENGTH@ 100
---UPD ClassInstanceCreation@@IOException["cannot find dir = " + dir.toString() + " in partToPartitionInfo!"] @TO@ IOException["cannot find dir = " + dir.toString() + " in "+ pathToPartitionInfo] @AT@ 13792 @LENGTH@ 93
------UPD InfixExpression@@"cannot find dir = " + dir.toString() + " in partToPartitionInfo!" @TO@ "cannot find dir = " + dir.toString() + " in "+ pathToPartitionInfo @AT@ 13808 @LENGTH@ 76
---------UPD StringLiteral@@" in partToPartitionInfo!" @TO@ " in " @AT@ 13858 @LENGTH@ 26
---------INS SimpleName@@pathToPartitionInfo @TO@ InfixExpression@@"cannot find dir = " + dir.toString() + " in partToPartitionInfo!" @AT@ 13867 @LENGTH@ 19


UPD FieldDeclaration@@private, final, OAuth1ServiceProvider<A>, [serviceProvider] @TO@ private, transient, final, OAuth1ServiceProvider<A>, [serviceProvider] @AT@ 1369 @LENGTH@ 55
---INS Modifier@@transient @TO@ FieldDeclaration@@private, final, OAuth1ServiceProvider<A>, [serviceProvider] @AT@ 1377 @LENGTH@ 9


MOV MethodDeclaration@@public, voidMethodName:FileComponent,  @TO@ TypeDeclaration@@[public]FileComponent, GenericFileComponent<File>[EndpointCompleter] @AT@ 1325 @LENGTH@ 93


INS MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 69865 @LENGTH@ 441
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 69865 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 69872 @LENGTH@ 4
---INS SimpleName@@MethodName:itShouldBePossibleToReuseAnExistingQuery @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 69877 @LENGTH@ 40
---INS VariableDeclarationStatement@@Sample sample=new Sample(); @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 69925 @LENGTH@ 29
------INS SimpleType@@Sample @TO@ VariableDeclarationStatement@@Sample sample=new Sample(); @AT@ 69925 @LENGTH@ 6
------INS VariableDeclarationFragment@@sample=new Sample() @TO@ VariableDeclarationStatement@@Sample sample=new Sample(); @AT@ 69932 @LENGTH@ 21
---------INS SimpleName@@sample @TO@ VariableDeclarationFragment@@sample=new Sample() @AT@ 69932 @LENGTH@ 6
---------INS ClassInstanceCreation@@Sample[] @TO@ VariableDeclarationFragment@@sample=new Sample() @AT@ 69941 @LENGTH@ 12
------------INS New@@new @TO@ ClassInstanceCreation@@Sample[] @AT@ 69941 @LENGTH@ 3
------------INS SimpleType@@Sample @TO@ ClassInstanceCreation@@Sample[] @AT@ 69945 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:sample.id="42" @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 69957 @LENGTH@ 17
------INS Assignment@@sample.id="42" @TO@ ExpressionStatement@@Assignment:sample.id="42" @AT@ 69957 @LENGTH@ 16
---------INS QualifiedName@@sample.id @TO@ Assignment@@sample.id="42" @AT@ 69957 @LENGTH@ 9
------------INS SimpleName@@sample @TO@ QualifiedName@@sample.id @AT@ 69957 @LENGTH@ 6
------------INS SimpleName@@id @TO@ QualifiedName@@sample.id @AT@ 69964 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@sample.id="42" @AT@ 69966 @LENGTH@ 1
---------INS StringLiteral@@"42" @TO@ Assignment@@sample.id="42" @AT@ 69969 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:sample.field="A" @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 69977 @LENGTH@ 19
------INS Assignment@@sample.field="A" @TO@ ExpressionStatement@@Assignment:sample.field="A" @AT@ 69977 @LENGTH@ 18
---------INS QualifiedName@@sample.field @TO@ Assignment@@sample.field="A" @AT@ 69977 @LENGTH@ 12
------------INS SimpleName@@sample @TO@ QualifiedName@@sample.field @AT@ 69977 @LENGTH@ 6
------------INS SimpleName@@field @TO@ QualifiedName@@sample.field @AT@ 69984 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@sample.field="A" @AT@ 69989 @LENGTH@ 1
---------INS StringLiteral@@"A" @TO@ Assignment@@sample.field="A" @AT@ 69992 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:template.save(sample) @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 70000 @LENGTH@ 22
------INS MethodInvocation@@template.save(sample) @TO@ ExpressionStatement@@MethodInvocation:template.save(sample) @AT@ 70000 @LENGTH@ 21
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.save(sample) @AT@ 70000 @LENGTH@ 8
---------INS SimpleName@@MethodName:save:[sample] @TO@ MethodInvocation@@template.save(sample) @AT@ 70009 @LENGTH@ 12
------------INS SimpleName@@sample @TO@ SimpleName@@MethodName:save:[sample] @AT@ 70014 @LENGTH@ 6
---INS VariableDeclarationStatement@@Query query=new Query(); @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 70026 @LENGTH@ 26
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=new Query(); @AT@ 70026 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=new Query() @TO@ VariableDeclarationStatement@@Query query=new Query(); @AT@ 70032 @LENGTH@ 19
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new Query() @AT@ 70032 @LENGTH@ 5
---------INS ClassInstanceCreation@@Query[] @TO@ VariableDeclarationFragment@@query=new Query() @AT@ 70040 @LENGTH@ 11
------------INS New@@new @TO@ ClassInstanceCreation@@Query[] @AT@ 70040 @LENGTH@ 3
------------INS SimpleType@@Query @TO@ ClassInstanceCreation@@Query[] @AT@ 70044 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:query.addCriteria(where("_id").in("42","43")) @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 70055 @LENGTH@ 47
------INS MethodInvocation@@query.addCriteria(where("_id").in("42","43")) @TO@ ExpressionStatement@@MethodInvocation:query.addCriteria(where("_id").in("42","43")) @AT@ 70055 @LENGTH@ 46
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.addCriteria(where("_id").in("42","43")) @AT@ 70055 @LENGTH@ 5
---------INS SimpleName@@MethodName:addCriteria:[where("_id").in("42","43")] @TO@ MethodInvocation@@query.addCriteria(where("_id").in("42","43")) @AT@ 70061 @LENGTH@ 40
------------INS MethodInvocation@@where("_id").in("42","43") @TO@ SimpleName@@MethodName:addCriteria:[where("_id").in("42","43")] @AT@ 70073 @LENGTH@ 27
---------------INS MethodInvocation@@MethodName:where:["_id"] @TO@ MethodInvocation@@where("_id").in("42","43") @AT@ 70073 @LENGTH@ 12
------------------INS StringLiteral@@"_id" @TO@ MethodInvocation@@MethodName:where:["_id"] @AT@ 70079 @LENGTH@ 5
---------------INS SimpleName@@MethodName:in:["42", "43"] @TO@ MethodInvocation@@where("_id").in("42","43") @AT@ 70086 @LENGTH@ 14
------------------INS StringLiteral@@"42" @TO@ SimpleName@@MethodName:in:["42", "43"] @AT@ 70089 @LENGTH@ 4
------------------INS StringLiteral@@"43" @TO@ SimpleName@@MethodName:in:["42", "43"] @AT@ 70095 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(template.count(query,Sample.class),is(1L)) @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 70106 @LENGTH@ 56
------INS MethodInvocation@@assertThat(template.count(query,Sample.class),is(1L)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.count(query,Sample.class),is(1L)) @AT@ 70106 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertThat:[template.count(query,Sample.class), is(1L)] @TO@ MethodInvocation@@assertThat(template.count(query,Sample.class),is(1L)) @AT@ 70106 @LENGTH@ 55
------------INS MethodInvocation@@template.count(query,Sample.class) @TO@ SimpleName@@MethodName:assertThat:[template.count(query,Sample.class), is(1L)] @AT@ 70117 @LENGTH@ 35
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.count(query,Sample.class) @AT@ 70117 @LENGTH@ 8
---------------INS SimpleName@@MethodName:count:[query, Sample.class] @TO@ MethodInvocation@@template.count(query,Sample.class) @AT@ 70126 @LENGTH@ 26
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:count:[query, Sample.class] @AT@ 70132 @LENGTH@ 5
------------------INS TypeLiteral@@Sample.class @TO@ SimpleName@@MethodName:count:[query, Sample.class] @AT@ 70139 @LENGTH@ 12
------------INS MethodInvocation@@is(1L) @TO@ SimpleName@@MethodName:assertThat:[template.count(query,Sample.class), is(1L)] @AT@ 70154 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[1L] @TO@ MethodInvocation@@is(1L) @AT@ 70154 @LENGTH@ 6
------------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:is:[1L] @AT@ 70157 @LENGTH@ 2
---------------INS SimpleName@@MethodName:is:[1L] @TO@ MethodInvocation@@is(1L) @AT@ 70154 @LENGTH@ 6
------------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:is:[1L] @AT@ 70157 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:query.with(new PageRequest(0,10)) @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 70166 @LENGTH@ 35
------INS MethodInvocation@@query.with(new PageRequest(0,10)) @TO@ ExpressionStatement@@MethodInvocation:query.with(new PageRequest(0,10)) @AT@ 70166 @LENGTH@ 34
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.with(new PageRequest(0,10)) @AT@ 70166 @LENGTH@ 5
---------INS SimpleName@@MethodName:with:[new PageRequest(0,10)] @TO@ MethodInvocation@@query.with(new PageRequest(0,10)) @AT@ 70172 @LENGTH@ 28
------------INS ClassInstanceCreation@@PageRequest[0, 10] @TO@ SimpleName@@MethodName:with:[new PageRequest(0,10)] @AT@ 70177 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 70177 @LENGTH@ 3
---------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 70181 @LENGTH@ 11
---------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 70193 @LENGTH@ 1
---------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@PageRequest[0, 10] @AT@ 70196 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:query.with(new Sort("field")) @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 70204 @LENGTH@ 30
------INS MethodInvocation@@query.with(new Sort("field")) @TO@ ExpressionStatement@@MethodInvocation:query.with(new Sort("field")) @AT@ 70204 @LENGTH@ 29
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.with(new Sort("field")) @AT@ 70204 @LENGTH@ 5
---------INS SimpleName@@MethodName:with:[new Sort("field")] @TO@ MethodInvocation@@query.with(new Sort("field")) @AT@ 70210 @LENGTH@ 23
------------INS ClassInstanceCreation@@Sort["field"] @TO@ SimpleName@@MethodName:with:[new Sort("field")] @AT@ 70215 @LENGTH@ 17
---------------INS New@@new @TO@ ClassInstanceCreation@@Sort["field"] @AT@ 70215 @LENGTH@ 3
---------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["field"] @AT@ 70219 @LENGTH@ 4
---------------INS StringLiteral@@"field" @TO@ ClassInstanceCreation@@Sort["field"] @AT@ 70224 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(template.find(query,Sample.class),is(not(empty()))) @TO@ MethodDeclaration@@public, void, MethodName:itShouldBePossibleToReuseAnExistingQuery,  @AT@ 70238 @LENGTH@ 65
------INS MethodInvocation@@assertThat(template.find(query,Sample.class),is(not(empty()))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.find(query,Sample.class),is(not(empty()))) @AT@ 70238 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertThat:[template.find(query,Sample.class), is(not(empty()))] @TO@ MethodInvocation@@assertThat(template.find(query,Sample.class),is(not(empty()))) @AT@ 70238 @LENGTH@ 64
------------INS MethodInvocation@@template.find(query,Sample.class) @TO@ SimpleName@@MethodName:assertThat:[template.find(query,Sample.class), is(not(empty()))] @AT@ 70249 @LENGTH@ 34
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.find(query,Sample.class) @AT@ 70249 @LENGTH@ 8
---------------INS SimpleName@@MethodName:find:[query, Sample.class] @TO@ MethodInvocation@@template.find(query,Sample.class) @AT@ 70258 @LENGTH@ 25
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:find:[query, Sample.class] @AT@ 70263 @LENGTH@ 5
------------------INS TypeLiteral@@Sample.class @TO@ SimpleName@@MethodName:find:[query, Sample.class] @AT@ 70270 @LENGTH@ 12
------------INS MethodInvocation@@is(not(empty())) @TO@ SimpleName@@MethodName:assertThat:[template.find(query,Sample.class), is(not(empty()))] @AT@ 70285 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:[not(empty())] @TO@ MethodInvocation@@is(not(empty())) @AT@ 70285 @LENGTH@ 16
------------------INS MethodInvocation@@not(empty()) @TO@ SimpleName@@MethodName:is:[not(empty())] @AT@ 70288 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:not:[empty()] @TO@ MethodInvocation@@not(empty()) @AT@ 70288 @LENGTH@ 12
------------------------INS MethodInvocation@@MethodName:empty:[] @TO@ SimpleName@@MethodName:not:[empty()] @AT@ 70292 @LENGTH@ 7


INS MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @TO@ TypeDeclaration@@[@Configuration, static]ExtendingConfiguration, RepositoryRestMvcConfiguration @AT@ 3831 @LENGTH@ 275
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 3831 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 3841 @LENGTH@ 4
---INS SimpleName@@MethodName:configureRepositoryRestConfiguration @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 3846 @LENGTH@ 36
---INS SingleVariableDeclaration@@RepositoryRestConfiguration config @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 3883 @LENGTH@ 34
------INS SimpleType@@RepositoryRestConfiguration @TO@ SingleVariableDeclaration@@RepositoryRestConfiguration config @AT@ 3883 @LENGTH@ 27
------INS SimpleName@@config @TO@ SingleVariableDeclaration@@RepositoryRestConfiguration config @AT@ 3911 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:config.setDefaultPageSize(45) @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 3925 @LENGTH@ 30
------INS MethodInvocation@@config.setDefaultPageSize(45) @TO@ ExpressionStatement@@MethodInvocation:config.setDefaultPageSize(45) @AT@ 3925 @LENGTH@ 29
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setDefaultPageSize(45) @AT@ 3925 @LENGTH@ 6
---------INS SimpleName@@MethodName:setDefaultPageSize:[45] @TO@ MethodInvocation@@config.setDefaultPageSize(45) @AT@ 3932 @LENGTH@ 22
------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:setDefaultPageSize:[45] @AT@ 3951 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:config.setMaxPageSize(7000) @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 3959 @LENGTH@ 28
------INS MethodInvocation@@config.setMaxPageSize(7000) @TO@ ExpressionStatement@@MethodInvocation:config.setMaxPageSize(7000) @AT@ 3959 @LENGTH@ 27
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setMaxPageSize(7000) @AT@ 3959 @LENGTH@ 6
---------INS SimpleName@@MethodName:setMaxPageSize:[7000] @TO@ MethodInvocation@@config.setMaxPageSize(7000) @AT@ 3966 @LENGTH@ 20
------------INS NumberLiteral@@7000 @TO@ SimpleName@@MethodName:setMaxPageSize:[7000] @AT@ 3981 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:config.setPageParamName("myPage") @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 3991 @LENGTH@ 34
------INS MethodInvocation@@config.setPageParamName("myPage") @TO@ ExpressionStatement@@MethodInvocation:config.setPageParamName("myPage") @AT@ 3991 @LENGTH@ 33
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setPageParamName("myPage") @AT@ 3991 @LENGTH@ 6
---------INS SimpleName@@MethodName:setPageParamName:["myPage"] @TO@ MethodInvocation@@config.setPageParamName("myPage") @AT@ 3998 @LENGTH@ 26
------------INS StringLiteral@@"myPage" @TO@ SimpleName@@MethodName:setPageParamName:["myPage"] @AT@ 4015 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:config.setLimitParamName("mySize") @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 4029 @LENGTH@ 35
------INS MethodInvocation@@config.setLimitParamName("mySize") @TO@ ExpressionStatement@@MethodInvocation:config.setLimitParamName("mySize") @AT@ 4029 @LENGTH@ 34
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setLimitParamName("mySize") @AT@ 4029 @LENGTH@ 6
---------INS SimpleName@@MethodName:setLimitParamName:["mySize"] @TO@ MethodInvocation@@config.setLimitParamName("mySize") @AT@ 4036 @LENGTH@ 27
------------INS StringLiteral@@"mySize" @TO@ SimpleName@@MethodName:setLimitParamName:["mySize"] @AT@ 4054 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:config.setSortParamName("mySort") @TO@ MethodDeclaration@@protected, void, MethodName:configureRepositoryRestConfiguration, RepositoryRestConfiguration config,  @AT@ 4068 @LENGTH@ 34
------INS MethodInvocation@@config.setSortParamName("mySort") @TO@ ExpressionStatement@@MethodInvocation:config.setSortParamName("mySort") @AT@ 4068 @LENGTH@ 33
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setSortParamName("mySort") @AT@ 4068 @LENGTH@ 6
---------INS SimpleName@@MethodName:setSortParamName:["mySort"] @TO@ MethodInvocation@@config.setSortParamName("mySort") @AT@ 4075 @LENGTH@ 26
------------INS StringLiteral@@"mySort" @TO@ SimpleName@@MethodName:setSortParamName:["mySort"] @AT@ 4092 @LENGTH@ 8


UPD VariableDeclarationStatement@@Collection<PigScript> scripts=(Collection<PigScript>)ReflectionUtils.getField(findField,psfb); @TO@ @SuppressWarnings("unchecked") Collection<PigScript> scripts=(Collection<PigScript>)ReflectionUtils.getField(findField,psfb); @AT@ 3103 @LENGTH@ 98


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration, public]JedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 2238 @LENGTH@ 9037
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 2238 @LENGTH@ 39


UPD ExpressionStatement@@Assignment:queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ Assignment:queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 8043 @LENGTH@ 61
---UPD Assignment@@queryString=UnsafeUriCharactersEncoder.encode(queryString) @TO@ queryString=UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 8043 @LENGTH@ 60
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(queryString) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(queryString) @AT@ 8057 @LENGTH@ 46
---------UPD SimpleName@@MethodName:encode:[queryString] @TO@ MethodName:encodeHttpURI:[queryString] @AT@ 8084 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @TO@ TypeDeclaration@@[@ContextConfiguration("classpath:eclipselink.xml"), public]EclipseLinkMetamodelIntegrationTests, MetamodelIntegrationTests @AT@ 1119 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 1119 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 1126 @LENGTH@ 4
---INS SimpleName@@MethodName:canAccessParametersByIndexForNativeQueries @TO@ MethodDeclaration@@public, void, MethodName:canAccessParametersByIndexForNativeQueries,  @AT@ 1131 @LENGTH@ 42


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 11410 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 11413 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 11413 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 11413 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 11420 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 11440 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 11444 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 11450 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 11611 @LENGTH@ 53


INS IfStatement@@if (exchange == null) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:messageReceived, ChannelHandlerContext ctx, MessageEvent messageEvent, Exception,  @AT@ 5567 @LENGTH@ 129
---INS InfixExpression@@exchange == null @TO@ IfStatement@@if (exchange == null) {  return;} @AT@ 5571 @LENGTH@ 16
------INS SimpleName@@exchange @TO@ InfixExpression@@exchange == null @AT@ 5571 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@exchange == null @AT@ 5579 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exchange == null @AT@ 5583 @LENGTH@ 4
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (exchange == null) {  return;} @AT@ 5589 @LENGTH@ 107
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 5679 @LENGTH@ 7


DEL MethodDeclaration@@public, String, MethodName:getValue, ParsedCommandLine args,  @AT@ 1868 @LENGTH@ 106
---DEL Modifier@@public @AT@ 1868 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1875 @LENGTH@ 6
---DEL SimpleName@@MethodName:getValue @AT@ 1882 @LENGTH@ 8
---DEL SingleVariableDeclaration@@ParsedCommandLine args @AT@ 1891 @LENGTH@ 22
------DEL SimpleType@@ParsedCommandLine @AT@ 1891 @LENGTH@ 17
------DEL SimpleName@@args @AT@ 1909 @LENGTH@ 4
---DEL ReturnStatement@@MethodInvocation:translatePath(super.getValue(args)) @AT@ 1925 @LENGTH@ 43
------DEL MethodInvocation@@translatePath(super.getValue(args)) @AT@ 1932 @LENGTH@ 35
---------DEL SimpleName@@MethodName:translatePath:[super.getValue(args)] @AT@ 1932 @LENGTH@ 35
------------DEL SuperMethodInvocation@@super.getValue(args) @AT@ 1946 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:getValue:[args] @AT@ 1952 @LENGTH@ 8
---------------DEL SimpleName@@args @AT@ 1961 @LENGTH@ 4


UPD TryStatement@@try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'2',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMap().size());  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','2','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals("{'2':'d\\tf','-1':null,'0':'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMap().size());  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @TO@ try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'2',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMapSize());    assertEquals(3,b.getMap().size());  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','2','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals("{'2':'d\\tf','-1':null,'0':'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMapSize());    assertEquals(3,b.getMap().size());  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 8535 @LENGTH@ 2362
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,b.getMapSize()) @TO@ TryStatement@@try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'2',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMap().size());  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','2','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals("{'2':'d\\tf','-1':null,'0':'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMap().size());  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 9745 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(3,b.getMapSize()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,b.getMapSize()) @AT@ 9745 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[3, b.getMapSize()] @TO@ MethodInvocation@@assertEquals(3,b.getMapSize()) @AT@ 9745 @LENGTH@ 31
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, b.getMapSize()] @AT@ 9758 @LENGTH@ 1
------------INS MethodInvocation@@b.getMapSize() @TO@ SimpleName@@MethodName:assertEquals:[3, b.getMapSize()] @AT@ 9761 @LENGTH@ 14
---------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.getMapSize() @AT@ 9761 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getMapSize:[] @TO@ MethodInvocation@@b.getMapSize() @AT@ 9763 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,b.getMapSize()) @TO@ TryStatement@@try {{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<int,string>").get(0),new byte[]{(byte)1,(byte)2},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2',2,'d','e','f',1,'-','1',2,'\\','N',1,'0',2,'0',1,'2',2,'a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("def"),((LazyString)b.getMapValueElement(new IntWritable(2))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(-1)));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new IntWritable(0))).getWritableObject());    assertNull(b.getMapValueElement(new IntWritable(12345)));    assertEquals("{2:'def',-1:null,0:'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMap().size());  }{    Text nullSequence=new Text("\\N");    ObjectInspector oi=LazyFactory.createLazyObjectInspector(TypeInfoUtils.getTypeInfosFromTypeString("map<string,string>").get(0),new byte[]{(byte)'#',(byte)'\t'},0,nullSequence,false,(byte)0);    LazyMap b=(LazyMap)LazyFactory.createLazyObject(oi);    byte[] data=new byte[]{'2','\t','d','\t','f','#','2','\t','d','#','-','1','#','0','\t','0','#','2','\t','a','b','c'};    TestLazyPrimitive.initLazyObject(b,data,0,data.length);    assertEquals(new Text("d\tf"),((LazyString)b.getMapValueElement(new Text("2"))).getWritableObject());    assertNull(b.getMapValueElement(new Text("-1")));    assertEquals(new Text("0"),((LazyString)b.getMapValueElement(new Text("0"))).getWritableObject());    assertEquals("{'2':'d\\tf','-1':null,'0':'0'}".replace('\'','\"'),SerDeUtils.getJSONString(b,oi));    assertEquals(3,b.getMap().size());  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 10900 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(3,b.getMapSize()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,b.getMapSize()) @AT@ 10900 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[3, b.getMapSize()] @TO@ MethodInvocation@@assertEquals(3,b.getMapSize()) @AT@ 10900 @LENGTH@ 31
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, b.getMapSize()] @AT@ 10913 @LENGTH@ 1
------------INS MethodInvocation@@b.getMapSize() @TO@ SimpleName@@MethodName:assertEquals:[3, b.getMapSize()] @AT@ 10916 @LENGTH@ 14
---------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.getMapSize() @AT@ 10916 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getMapSize:[] @TO@ MethodInvocation@@b.getMapSize() @AT@ 10918 @LENGTH@ 12


INS FieldDeclaration@@private, boolean, [reverseHeaders=true] @TO@ TypeDeclaration@@[public]MappingConfigurationTest,  @AT@ 1585 @LENGTH@ 38
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 1585 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 1593 @LENGTH@ 7
---INS VariableDeclarationFragment@@reverseHeaders=true @TO@ FieldDeclaration@@private, boolean, [reverseHeaders=true] @AT@ 1601 @LENGTH@ 21
------INS SimpleName@@reverseHeaders @TO@ VariableDeclarationFragment@@reverseHeaders=true @AT@ 1601 @LENGTH@ 14
------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@reverseHeaders=true @AT@ 1618 @LENGTH@ 4


UPD FieldDeclaration@@static, final, Charset, [CHARSET=Charset.forName("UTF-8")] @TO@ static, final, Charset, [CHARSET=StandardCharsets.UTF_8] @AT@ 1776 @LENGTH@ 56
---UPD VariableDeclarationFragment@@CHARSET=Charset.forName("UTF-8") @TO@ CHARSET=StandardCharsets.UTF_8 @AT@ 1797 @LENGTH@ 34
------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 1807 @LENGTH@ 24
---------DEL SimpleName@@Name:Charset @AT@ 1807 @LENGTH@ 7
---------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 1815 @LENGTH@ 16
------------DEL StringLiteral@@"UTF-8" @AT@ 1823 @LENGTH@ 7
------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ VariableDeclarationFragment@@CHARSET=Charset.forName("UTF-8") @AT@ 1849 @LENGTH@ 22
---------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 1849 @LENGTH@ 16
---------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 1866 @LENGTH@ 5


UPD IfStatement@@if (encode) {  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} else {  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @TO@ if (encode) {  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} else {  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @AT@ 3153 @LENGTH@ 1612
---UPD Block@@ThenBody:{  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} @TO@ ThenBody:{  try {    ModelNode response=new ModelNode();    response.set(msg);    ByteArrayOutputStream bout=new ByteArrayOutputStream();    response.writeBase64(bout);    byte[] bytes=bout.toByteArray();    exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8);    exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));    exchange.setResponseCode(errorCode);    exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);  } catch (  IOException e) {    sendError(exchange,false,msg);  }} @AT@ 3164 @LENGTH@ 805
------UPD TryStatement@@try {  ModelNode response=new ModelNode();  response.set(msg);  ByteArrayOutputStream bout=new ByteArrayOutputStream();  response.writeBase64(bout);  byte[] bytes=bout.toByteArray();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);} catch (IOException e) {  sendError(exchange,false,msg);} @TO@ try {  ModelNode response=new ModelNode();  response.set(msg);  ByteArrayOutputStream bout=new ByteArrayOutputStream();  response.writeBase64(bout);  byte[] bytes=bout.toByteArray();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(new String(bytes),IoCallback.END_EXCHANGE);} catch (IOException e) {  sendError(exchange,false,msg);} @AT@ 3179 @LENGTH@ 779
---------UPD ExpressionStatement@@MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8) @TO@ MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8) @AT@ 3461 @LENGTH@ 94
------------UPD MethodInvocation@@exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + ";" + UTF_8) @TO@ exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,APPLICATION_DMR_ENCODED + "; charset=" + UTF_8) @AT@ 3461 @LENGTH@ 93
---------------UPD SimpleName@@MethodName:put:[Headers.CONTENT_TYPE, APPLICATION_DMR_ENCODED + ";" + UTF_8] @TO@ MethodName:put:[Headers.CONTENT_TYPE, APPLICATION_DMR_ENCODED + "; charset=" + UTF_8] @AT@ 3491 @LENGTH@ 63
------------------UPD InfixExpression@@APPLICATION_DMR_ENCODED + ";" + UTF_8 @TO@ APPLICATION_DMR_ENCODED + "; charset=" + UTF_8 @AT@ 3517 @LENGTH@ 36
---------------------UPD StringLiteral@@";" @TO@ "; charset=" @AT@ 3542 @LENGTH@ 3
---UPD Block@@ElseBody:{  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @TO@ ElseBody:{  StringWriter stringWriter=new StringWriter();  final PrintWriter print=new PrintWriter(stringWriter);  try {    msg.writeJSONString(print,false);  }  finally {    print.flush();    stringWriter.flush();    print.close();  }  String msgString=stringWriter.toString();  byte[] bytes=msgString.getBytes();  exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8);  exchange.getResponseHeaders().put(Headers.CONTENT_LENGTH,String.valueOf(bytes.length));  exchange.setResponseCode(errorCode);  exchange.getResponseSender().send(msgString,IoCallback.END_EXCHANGE);} @AT@ 3983 @LENGTH@ 782
------UPD ExpressionStatement@@MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8) @TO@ MethodInvocation:exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8) @AT@ 4439 @LENGTH@ 82
---------UPD MethodInvocation@@exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + ";" + UTF_8) @TO@ exchange.getResponseHeaders().put(Headers.CONTENT_TYPE,TEXT_PLAIN + "; charset=" + UTF_8) @AT@ 4439 @LENGTH@ 81
------------UPD SimpleName@@MethodName:put:[Headers.CONTENT_TYPE, TEXT_PLAIN + ";" + UTF_8] @TO@ MethodName:put:[Headers.CONTENT_TYPE, TEXT_PLAIN + "; charset=" + UTF_8] @AT@ 4469 @LENGTH@ 51
---------------UPD InfixExpression@@TEXT_PLAIN + ";" + UTF_8 @TO@ TEXT_PLAIN + "; charset=" + UTF_8 @AT@ 4495 @LENGTH@ 24
------------------UPD StringLiteral@@";" @TO@ "; charset=" @AT@ 4508 @LENGTH@ 3


UPD IfStatement@@if (!StringUtils.hasText(uri) || uri.equals("/")) {  return super.lookupHandlerMethod("/",request);} @TO@ if (uri.equals("/")) {  return super.lookupHandlerMethod("/",request);} @AT@ 4332 @LENGTH@ 106
---DEL InfixExpression@@!StringUtils.hasText(uri) || uri.equals("/") @AT@ 4336 @LENGTH@ 44
------DEL PrefixExpression@@!StringUtils.hasText(uri) @AT@ 4336 @LENGTH@ 25
---------DEL Operator@@! @AT@ 4336 @LENGTH@ 1
------DEL Operator@@|| @AT@ 4361 @LENGTH@ 2
---MOV MethodInvocation@@uri.equals("/") @TO@ IfStatement@@if (!StringUtils.hasText(uri) || uri.equals("/")) {  return super.lookupHandlerMethod("/",request);} @AT@ 4365 @LENGTH@ 15


UPD FieldDeclaration@@private, boolean, [lazy=false] @TO@ private, boolean, [lazy] @AT@ 4077 @LENGTH@ 29
---UPD VariableDeclarationFragment@@lazy=false @TO@ lazy @AT@ 4093 @LENGTH@ 12
------DEL BooleanLiteral@@false @AT@ 4100 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("LettuceConnectionIntegrationTests-context.xml"), public]LettuceConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration("LettuceConnectionIntegrationTests-context.xml"), public]LettuceConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @AT@ 1417 @LENGTH@ 1173
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 1417 @LENGTH@ 39


DEL MethodDeclaration@@public, static, ServiceContainer, MethodName:getCurrentServiceContainer,  @AT@ 2764 @LENGTH@ 377
---DEL Modifier@@public @AT@ 2764 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2771 @LENGTH@ 6
---DEL SimpleType@@ServiceContainer @AT@ 2778 @LENGTH@ 16
---DEL SimpleName@@MethodName:getCurrentServiceContainer @AT@ 2795 @LENGTH@ 26
---DEL VariableDeclarationStatement@@PrivilegedAction<ServiceContainer> action=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
; @AT@ 2834 @LENGTH@ 247
------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 2834 @LENGTH@ 34
---------DEL SimpleType@@PrivilegedAction @AT@ 2834 @LENGTH@ 16
---------DEL SimpleType@@ServiceContainer @AT@ 2851 @LENGTH@ 16
------DEL VariableDeclarationFragment@@action=new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
 @AT@ 2869 @LENGTH@ 211
---------DEL SimpleName@@action @AT@ 2869 @LENGTH@ 6
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 2878 @LENGTH@ 202
------------DEL New@@new @AT@ 2878 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 2882 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 2882 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 2899 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2919 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 2955 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 2955 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 2962 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 2979 @LENGTH@ 3
------------------DEL ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 3003 @LENGTH@ 53
---------------------DEL MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 3010 @LENGTH@ 45
------------------------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 3010 @LENGTH@ 23
------------------------DEL SimpleName@@MethodName:getServiceContainer:[] @AT@ 3034 @LENGTH@ 21
---DEL ReturnStatement@@MethodInvocation:AccessController.doPrivileged(action) @AT@ 3090 @LENGTH@ 45
------DEL MethodInvocation@@AccessController.doPrivileged(action) @AT@ 3097 @LENGTH@ 37
---------DEL SimpleName@@Name:AccessController @AT@ 3097 @LENGTH@ 16
---------DEL SimpleName@@MethodName:doPrivileged:[action] @AT@ 3114 @LENGTH@ 20
------------DEL SimpleName@@action @AT@ 3127 @LENGTH@ 6


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HazelcastAggregationRepository.class.getName())] @TO@ TypeDeclaration@@[public, final]HazelcastAggregationRepository, ServiceSupport[RecoverableAggregationRepository, OptimisticLockingAggregationRepository] @AT@ 2389 @LENGTH@ 107


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Port,  @TO@ [@Data, public]Port, AbstractDockerDTO @AT@ 1047 @LENGTH@ 212
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Port,  @AT@ 1000 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 1053 @LENGTH@ 47


DEL VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @AT@ 2468 @LENGTH@ 117
---DEL ParameterizedType@@ServiceProxy<CuratorFramework> @AT@ 2468 @LENGTH@ 30
------DEL SimpleType@@ServiceProxy @AT@ 2468 @LENGTH@ 12
------DEL SimpleType@@CuratorFramework @AT@ 2481 @LENGTH@ 16
---DEL VariableDeclarationFragment@@curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 2499 @LENGTH@ 85
------DEL SimpleName@@curatorProxy @AT@ 2499 @LENGTH@ 12
------DEL MethodInvocation@@ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 2514 @LENGTH@ 70
---------DEL SimpleName@@Name:ServiceProxy @AT@ 2514 @LENGTH@ 12
---------DEL SimpleName@@MethodName:createServiceProxy:[bundleContext, CuratorFramework.class] @AT@ 2527 @LENGTH@ 57
------------DEL SimpleName@@bundleContext @AT@ 2546 @LENGTH@ 13
------------DEL TypeLiteral@@CuratorFramework.class @AT@ 2561 @LENGTH@ 22


INS MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @TO@ TypeDeclaration@@[public, abstract]TokenStoreBaseTests,  @AT@ 2797 @LENGTH@ 995
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 2797 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 2804 @LENGTH@ 4
---INS SimpleName@@MethodName:testStoreAccessTokenTwice @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 2809 @LENGTH@ 25
---INS VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null),new TestAuthentication("test2",false)); @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 2841 @LENGTH@ 207
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null),new TestAuthentication("test2",false)); @AT@ 2841 @LENGTH@ 20
------INS VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null),new TestAuthentication("test2",false)) @TO@ VariableDeclarationStatement@@OAuth2Authentication expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null),new TestAuthentication("test2",false)); @AT@ 2862 @LENGTH@ 185
---------INS SimpleName@@expectedAuthentication @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null),new TestAuthentication("test2",false)) @AT@ 2862 @LENGTH@ 22
---------INS ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null), new TestAuthentication("test2",false)] @TO@ VariableDeclarationFragment@@expectedAuthentication=new OAuth2Authentication(RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null),new TestAuthentication("test2",false)) @AT@ 2887 @LENGTH@ 160
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null), new TestAuthentication("test2",false)] @AT@ 2887 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null), new TestAuthentication("test2",false)] @AT@ 2891 @LENGTH@ 20
------------INS MethodInvocation@@RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null) @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null), new TestAuthentication("test2",false)] @AT@ 2912 @LENGTH@ 94
---------------INS SimpleName@@Name:RequestTokenFactory @TO@ MethodInvocation@@RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null) @AT@ 2912 @LENGTH@ 19
---------------INS SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @TO@ MethodInvocation@@RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null) @AT@ 2932 @LENGTH@ 74
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2952 @LENGTH@ 4
------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2958 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2964 @LENGTH@ 4
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2970 @LENGTH@ 5
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2977 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2983 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2989 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 2995 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "id", null, false, null, null, null, null, null] @AT@ 3001 @LENGTH@ 4
------------INS ClassInstanceCreation@@TestAuthentication["test2", false] @TO@ ClassInstanceCreation@@OAuth2Authentication[RequestTokenFactory.createOAuth2Request(null,"id",null,false,null,null,null,null,null), new TestAuthentication("test2",false)] @AT@ 3008 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 3008 @LENGTH@ 3
---------------INS SimpleType@@TestAuthentication @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 3012 @LENGTH@ 18
---------------INS StringLiteral@@"test2" @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 3031 @LENGTH@ 7
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@TestAuthentication["test2", false] @AT@ 3040 @LENGTH@ 5
---INS VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3051 @LENGTH@ 88
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @AT@ 3051 @LENGTH@ 17
------INS VariableDeclarationFragment@@expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken") @TO@ VariableDeclarationStatement@@OAuth2AccessToken expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken"); @AT@ 3069 @LENGTH@ 69
---------INS SimpleName@@expectedOAuth2AccessToken @TO@ VariableDeclarationFragment@@expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken") @AT@ 3069 @LENGTH@ 25
---------INS ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @TO@ VariableDeclarationFragment@@expectedOAuth2AccessToken=new DefaultOAuth2AccessToken("testToken") @AT@ 3097 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @AT@ 3097 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @AT@ 3101 @LENGTH@ 24
------------INS StringLiteral@@"testToken" @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["testToken"] @AT@ 3126 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3142 @LENGTH@ 84
------INS MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 3142 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 3142 @LENGTH@ 15
---------INS SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 3158 @LENGTH@ 67
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 3175 @LENGTH@ 25
------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 3202 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3229 @LENGTH@ 84
------INS MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @TO@ ExpressionStatement@@MethodInvocation:getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 3229 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 3229 @LENGTH@ 15
---------INS SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @TO@ MethodInvocation@@getTokenStore().storeAccessToken(expectedOAuth2AccessToken,expectedAuthentication) @AT@ 3245 @LENGTH@ 67
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 3262 @LENGTH@ 25
------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:storeAccessToken:[expectedOAuth2AccessToken, expectedAuthentication] @AT@ 3289 @LENGTH@ 22
---INS VariableDeclarationStatement@@OAuth2AccessToken actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken"); @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3317 @LENGTH@ 89
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken"); @AT@ 3317 @LENGTH@ 17
------INS VariableDeclarationFragment@@actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken") @TO@ VariableDeclarationStatement@@OAuth2AccessToken actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken"); @AT@ 3335 @LENGTH@ 70
---------INS SimpleName@@actualOAuth2AccessToken @TO@ VariableDeclarationFragment@@actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken") @AT@ 3335 @LENGTH@ 23
---------INS MethodInvocation@@getTokenStore().readAccessToken("testToken") @TO@ VariableDeclarationFragment@@actualOAuth2AccessToken=getTokenStore().readAccessToken("testToken") @AT@ 3361 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().readAccessToken("testToken") @AT@ 3361 @LENGTH@ 15
------------INS SimpleName@@MethodName:readAccessToken:["testToken"] @TO@ MethodInvocation@@getTokenStore().readAccessToken("testToken") @AT@ 3377 @LENGTH@ 28
---------------INS StringLiteral@@"testToken" @TO@ SimpleName@@MethodName:readAccessToken:["testToken"] @AT@ 3393 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedOAuth2AccessToken,actualOAuth2AccessToken) @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3409 @LENGTH@ 65
------INS MethodInvocation@@assertEquals(expectedOAuth2AccessToken,actualOAuth2AccessToken) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedOAuth2AccessToken,actualOAuth2AccessToken) @AT@ 3409 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertEquals:[expectedOAuth2AccessToken, actualOAuth2AccessToken] @TO@ MethodInvocation@@assertEquals(expectedOAuth2AccessToken,actualOAuth2AccessToken) @AT@ 3409 @LENGTH@ 64
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:assertEquals:[expectedOAuth2AccessToken, actualOAuth2AccessToken] @AT@ 3422 @LENGTH@ 25
------------INS SimpleName@@actualOAuth2AccessToken @TO@ SimpleName@@MethodName:assertEquals:[expectedOAuth2AccessToken, actualOAuth2AccessToken] @AT@ 3449 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedAuthentication,getTokenStore().readAuthentication(expectedOAuth2AccessToken)) @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3477 @LENGTH@ 100
------INS MethodInvocation@@assertEquals(expectedAuthentication,getTokenStore().readAuthentication(expectedOAuth2AccessToken)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedAuthentication,getTokenStore().readAuthentication(expectedOAuth2AccessToken)) @AT@ 3477 @LENGTH@ 99
---------INS SimpleName@@MethodName:assertEquals:[expectedAuthentication, getTokenStore().readAuthentication(expectedOAuth2AccessToken)] @TO@ MethodInvocation@@assertEquals(expectedAuthentication,getTokenStore().readAuthentication(expectedOAuth2AccessToken)) @AT@ 3477 @LENGTH@ 99
------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:assertEquals:[expectedAuthentication, getTokenStore().readAuthentication(expectedOAuth2AccessToken)] @AT@ 3490 @LENGTH@ 22
------------INS MethodInvocation@@getTokenStore().readAuthentication(expectedOAuth2AccessToken) @TO@ SimpleName@@MethodName:assertEquals:[expectedAuthentication, getTokenStore().readAuthentication(expectedOAuth2AccessToken)] @AT@ 3514 @LENGTH@ 61
---------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().readAuthentication(expectedOAuth2AccessToken) @AT@ 3514 @LENGTH@ 15
---------------INS SimpleName@@MethodName:readAuthentication:[expectedOAuth2AccessToken] @TO@ MethodInvocation@@getTokenStore().readAuthentication(expectedOAuth2AccessToken) @AT@ 3530 @LENGTH@ 45
------------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:readAuthentication:[expectedOAuth2AccessToken] @AT@ 3549 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:getTokenStore().removeAccessToken(expectedOAuth2AccessToken) @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3580 @LENGTH@ 61
------INS MethodInvocation@@getTokenStore().removeAccessToken(expectedOAuth2AccessToken) @TO@ ExpressionStatement@@MethodInvocation:getTokenStore().removeAccessToken(expectedOAuth2AccessToken) @AT@ 3580 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().removeAccessToken(expectedOAuth2AccessToken) @AT@ 3580 @LENGTH@ 15
---------INS SimpleName@@MethodName:removeAccessToken:[expectedOAuth2AccessToken] @TO@ MethodInvocation@@getTokenStore().removeAccessToken(expectedOAuth2AccessToken) @AT@ 3596 @LENGTH@ 44
------------INS SimpleName@@expectedOAuth2AccessToken @TO@ SimpleName@@MethodName:removeAccessToken:[expectedOAuth2AccessToken] @AT@ 3614 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readAccessToken("testToken")) @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3644 @LENGTH@ 57
------INS MethodInvocation@@assertNull(getTokenStore().readAccessToken("testToken")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readAccessToken("testToken")) @AT@ 3644 @LENGTH@ 56
---------INS SimpleName@@MethodName:assertNull:[getTokenStore().readAccessToken("testToken")] @TO@ MethodInvocation@@assertNull(getTokenStore().readAccessToken("testToken")) @AT@ 3644 @LENGTH@ 56
------------INS MethodInvocation@@getTokenStore().readAccessToken("testToken") @TO@ SimpleName@@MethodName:assertNull:[getTokenStore().readAccessToken("testToken")] @AT@ 3655 @LENGTH@ 44
---------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().readAccessToken("testToken") @AT@ 3655 @LENGTH@ 15
---------------INS SimpleName@@MethodName:readAccessToken:["testToken"] @TO@ MethodInvocation@@getTokenStore().readAccessToken("testToken") @AT@ 3671 @LENGTH@ 28
------------------INS StringLiteral@@"testToken" @TO@ SimpleName@@MethodName:readAccessToken:["testToken"] @AT@ 3687 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue())) @TO@ MethodDeclaration@@public, void, MethodName:testStoreAccessTokenTwice,  @AT@ 3704 @LENGTH@ 85
------INS MethodInvocation@@assertNull(getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue())) @TO@ ExpressionStatement@@MethodInvocation:assertNull(getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue())) @AT@ 3704 @LENGTH@ 84
---------INS SimpleName@@MethodName:assertNull:[getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue())] @TO@ MethodInvocation@@assertNull(getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue())) @AT@ 3704 @LENGTH@ 84
------------INS MethodInvocation@@getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue()) @TO@ SimpleName@@MethodName:assertNull:[getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue())] @AT@ 3715 @LENGTH@ 72
---------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue()) @AT@ 3715 @LENGTH@ 15
---------------INS SimpleName@@MethodName:readAuthentication:[expectedOAuth2AccessToken.getValue()] @TO@ MethodInvocation@@getTokenStore().readAuthentication(expectedOAuth2AccessToken.getValue()) @AT@ 3731 @LENGTH@ 56
------------------INS MethodInvocation@@expectedOAuth2AccessToken.getValue() @TO@ SimpleName@@MethodName:readAuthentication:[expectedOAuth2AccessToken.getValue()] @AT@ 3750 @LENGTH@ 36
---------------------INS SimpleName@@Name:expectedOAuth2AccessToken @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 3750 @LENGTH@ 25
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 3776 @LENGTH@ 10


DEL MethodDeclaration@@private, static, Environment, MethodName:defaultEnvironment, Environment environment, ResourceLoader resourceLoader,  @AT@ 3614 @LENGTH@ 308
---DEL Modifier@@private @AT@ 3614 @LENGTH@ 7
---DEL Modifier@@static @AT@ 3622 @LENGTH@ 6
---DEL SimpleType@@Environment @AT@ 3629 @LENGTH@ 11
---DEL SimpleName@@MethodName:defaultEnvironment @AT@ 3641 @LENGTH@ 18
---DEL SingleVariableDeclaration@@Environment environment @AT@ 3660 @LENGTH@ 23
------DEL SimpleType@@Environment @AT@ 3660 @LENGTH@ 11
------DEL SimpleName@@environment @AT@ 3672 @LENGTH@ 11
---DEL SingleVariableDeclaration@@ResourceLoader resourceLoader @AT@ 3685 @LENGTH@ 29
------DEL SimpleType@@ResourceLoader @AT@ 3685 @LENGTH@ 14
------DEL SimpleName@@resourceLoader @AT@ 3700 @LENGTH@ 14
---DEL IfStatement@@if (environment != null) {  return environment;} @AT@ 3721 @LENGTH@ 53
------DEL InfixExpression@@environment != null @AT@ 3725 @LENGTH@ 19
---------DEL SimpleName@@environment @AT@ 3725 @LENGTH@ 11
---------DEL Operator@@!= @AT@ 3736 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3740 @LENGTH@ 4
------DEL Block@@ThenBody:{  return environment;} @AT@ 3746 @LENGTH@ 28
---------DEL ReturnStatement@@SimpleName:environment @AT@ 3751 @LENGTH@ 19
------------DEL SimpleName@@environment @AT@ 3758 @LENGTH@ 11
---DEL ReturnStatement@@ConditionalExpression:resourceLoader instanceof EnvironmentCapable ? ((EnvironmentCapable)resourceLoader).getEnvironment() : new StandardEnvironment() @AT@ 3778 @LENGTH@ 141
------DEL ConditionalExpression@@resourceLoader instanceof EnvironmentCapable ? ((EnvironmentCapable)resourceLoader).getEnvironment() : new StandardEnvironment() @AT@ 3785 @LENGTH@ 133
---------DEL InstanceofExpression@@resourceLoader instanceof EnvironmentCapable @AT@ 3785 @LENGTH@ 44
------------DEL SimpleName@@resourceLoader @AT@ 3785 @LENGTH@ 14
------------DEL Instanceof@@instanceof @AT@ 3800 @LENGTH@ 10
------------DEL SimpleType@@EnvironmentCapable @AT@ 3811 @LENGTH@ 18
---------DEL MethodInvocation@@((EnvironmentCapable)resourceLoader).getEnvironment() @AT@ 3832 @LENGTH@ 54
------------DEL ParenthesizedExpression@@((EnvironmentCapable)resourceLoader) @AT@ 3832 @LENGTH@ 37
---------------DEL CastExpression@@(EnvironmentCapable)resourceLoader @AT@ 3833 @LENGTH@ 35
------------------DEL SimpleType@@EnvironmentCapable @AT@ 3834 @LENGTH@ 18
------------------DEL SimpleName@@resourceLoader @AT@ 3854 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getEnvironment:[] @AT@ 3870 @LENGTH@ 16
---------DEL ClassInstanceCreation@@StandardEnvironment[] @AT@ 3893 @LENGTH@ 25
------------DEL New@@new @AT@ 3893 @LENGTH@ 3
------------DEL SimpleType@@StandardEnvironment @AT@ 3897 @LENGTH@ 19


UPD FieldDeclaration@@protected, static, final, String, [TEST_DATA_DIR="/tmp/build/test/data/" + HCatBaseTest.class.getCanonicalName()] @TO@ public, static, final, String, [TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis())] @AT@ 1555 @LENGTH@ 116
---UPD Modifier@@protected @TO@ public @AT@ 1555 @LENGTH@ 9
---UPD VariableDeclarationFragment@@TEST_DATA_DIR="/tmp/build/test/data/" + HCatBaseTest.class.getCanonicalName() @TO@ TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 1585 @LENGTH@ 85
------DEL InfixExpression@@"/tmp/build/test/data/" + HCatBaseTest.class.getCanonicalName() @AT@ 1607 @LENGTH@ 63
---------DEL StringLiteral@@"/tmp/build/test/data/" @AT@ 1607 @LENGTH@ 23
------INS MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @TO@ VariableDeclarationFragment@@TEST_DATA_DIR="/tmp/build/test/data/" + HCatBaseTest.class.getCanonicalName() @AT@ 1647 @LENGTH@ 169
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 1647 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 1656 @LENGTH@ 160
------------INS InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @TO@ SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @AT@ 1678 @LENGTH@ 137
---------------MOV Operator@@+ @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1630 @LENGTH@ 1
---------------MOV MethodInvocation@@HCatBaseTest.class.getCanonicalName() @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1633 @LENGTH@ 37
---------------INS MethodInvocation@@System.getProperty("user.dir") @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1678 @LENGTH@ 30
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 1678 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getProperty:["user.dir"] @TO@ MethodInvocation@@System.getProperty("user.dir") @AT@ 1685 @LENGTH@ 23
---------------------INS StringLiteral@@"user.dir" @TO@ SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 1697 @LENGTH@ 10
---------------INS StringLiteral@@"/build/test/data/" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1721 @LENGTH@ 19
---------------INS StringLiteral@@"-" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1783 @LENGTH@ 3
---------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 1789 @LENGTH@ 26
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1789 @LENGTH@ 6
------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1796 @LENGTH@ 19


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Image,  @TO@ [@Data, public]Image, AbstractDockerDTO @AT@ 825 @LENGTH@ 297
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]Image,  @AT@ 730 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 831 @LENGTH@ 47


INS ExpressionStatement@@MethodInvocation:logger.info("Job parameters from boot properties, parameters" + jobProperties.getParameters()) @TO@ MethodDeclaration@@private, void, MethodName:executeJob, Job job, JobParameters jobParameters, JobExecutionException,  @AT@ 5937 @LENGTH@ 95
---INS MethodInvocation@@logger.info("Job parameters from boot properties, parameters" + jobProperties.getParameters()) @TO@ ExpressionStatement@@MethodInvocation:logger.info("Job parameters from boot properties, parameters" + jobProperties.getParameters()) @AT@ 5937 @LENGTH@ 94
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.info("Job parameters from boot properties, parameters" + jobProperties.getParameters()) @AT@ 5937 @LENGTH@ 6
------INS SimpleName@@MethodName:info:["Job parameters from boot properties, parameters" + jobProperties.getParameters()] @TO@ MethodInvocation@@logger.info("Job parameters from boot properties, parameters" + jobProperties.getParameters()) @AT@ 5944 @LENGTH@ 87
---------INS InfixExpression@@"Job parameters from boot properties, parameters" + jobProperties.getParameters() @TO@ SimpleName@@MethodName:info:["Job parameters from boot properties, parameters" + jobProperties.getParameters()] @AT@ 5949 @LENGTH@ 81
------------INS StringLiteral@@"Job parameters from boot properties, parameters" @TO@ InfixExpression@@"Job parameters from boot properties, parameters" + jobProperties.getParameters() @AT@ 5949 @LENGTH@ 49
------------INS Operator@@+ @TO@ InfixExpression@@"Job parameters from boot properties, parameters" + jobProperties.getParameters() @AT@ 5998 @LENGTH@ 1
------------INS MethodInvocation@@jobProperties.getParameters() @TO@ InfixExpression@@"Job parameters from boot properties, parameters" + jobProperties.getParameters() @AT@ 6001 @LENGTH@ 29
---------------INS SimpleName@@Name:jobProperties @TO@ MethodInvocation@@jobProperties.getParameters() @AT@ 6001 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@jobProperties.getParameters() @AT@ 6015 @LENGTH@ 15


UPD MethodDeclaration@@private, static, Set<String>, MethodName:findMissingProfiles, Container[] containers,  @TO@ private, Set<String>, MethodName:findMissingProfiles, Container[] containers,  @AT@ 7535 @LENGTH@ 405
---DEL Modifier@@static @AT@ 7543 @LENGTH@ 6
---UPD EnhancedForStatement@@for (Container container : containers) {  for (  Profile p : container.getProfiles()) {    if (!p.exists()) {      missingProfiles.add(p.getId());    }  }} @TO@ for (Container container : containers) {  for (  String p : fabricService.getDataStore().getContainerProfiles(container.getId())) {    if (!container.getVersion().hasProfile(p)) {      missingProfiles.add(p);    }  }} @AT@ 7677 @LENGTH@ 225
------UPD EnhancedForStatement@@for (Profile p : container.getProfiles()) {  if (!p.exists()) {    missingProfiles.add(p.getId());  }} @TO@ for (String p : fabricService.getDataStore().getContainerProfiles(container.getId())) {  if (!container.getVersion().hasProfile(p)) {    missingProfiles.add(p);  }} @AT@ 7730 @LENGTH@ 162
---------UPD SingleVariableDeclaration@@Profile p @TO@ String p @AT@ 7735 @LENGTH@ 9
------------UPD SimpleType@@Profile @TO@ String @AT@ 7735 @LENGTH@ 7
---------DEL MethodInvocation@@container.getProfiles() @AT@ 7747 @LENGTH@ 23
---------INS MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @TO@ EnhancedForStatement@@for (Profile p : container.getProfiles()) {  if (!p.exists()) {    missingProfiles.add(p.getId());  }} @AT@ 7784 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getDataStore:[] @TO@ MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @AT@ 7784 @LENGTH@ 28
------------INS SimpleName@@Name:fabricService @TO@ MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @AT@ 7784 @LENGTH@ 13
------------INS SimpleName@@MethodName:getContainerProfiles:[container.getId()] @TO@ MethodInvocation@@fabricService.getDataStore().getContainerProfiles(container.getId()) @AT@ 7813 @LENGTH@ 39
---------------INS MethodInvocation@@container.getId() @TO@ SimpleName@@MethodName:getContainerProfiles:[container.getId()] @AT@ 7834 @LENGTH@ 17
------------------MOV SimpleName@@Name:container @TO@ MethodInvocation@@container.getId() @AT@ 7747 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:getProfiles:[] @TO@ MethodInvocation@@container.getId() @AT@ 7757 @LENGTH@ 13
---------UPD IfStatement@@if (!p.exists()) {  missingProfiles.add(p.getId());} @TO@ if (!container.getVersion().hasProfile(p)) {  missingProfiles.add(p);} @AT@ 7790 @LENGTH@ 88
------------UPD PrefixExpression@@!p.exists() @TO@ !container.getVersion().hasProfile(p) @AT@ 7794 @LENGTH@ 11
---------------UPD MethodInvocation@@p.exists() @TO@ container.getVersion().hasProfile(p) @AT@ 7795 @LENGTH@ 10
------------------UPD SimpleName@@Name:p @TO@ Name:container @AT@ 7795 @LENGTH@ 1
------------------UPD SimpleName@@MethodName:exists:[] @TO@ MethodName:hasProfile:[p] @AT@ 7797 @LENGTH@ 8
---------------------INS SimpleName@@p @TO@ SimpleName@@MethodName:exists:[] @AT@ 7911 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getVersion:[] @TO@ MethodInvocation@@p.exists() @AT@ 7877 @LENGTH@ 22
------------UPD Block@@ThenBody:{  missingProfiles.add(p.getId());} @TO@ ThenBody:{  missingProfiles.add(p);} @AT@ 7807 @LENGTH@ 71
---------------UPD ExpressionStatement@@MethodInvocation:missingProfiles.add(p.getId()) @TO@ MethodInvocation:missingProfiles.add(p) @AT@ 7829 @LENGTH@ 31
------------------UPD MethodInvocation@@missingProfiles.add(p.getId()) @TO@ missingProfiles.add(p) @AT@ 7829 @LENGTH@ 30
---------------------UPD SimpleName@@MethodName:add:[p.getId()] @TO@ MethodName:add:[p] @AT@ 7845 @LENGTH@ 14
------------------------DEL MethodInvocation@@p.getId() @AT@ 7849 @LENGTH@ 9
---------------------------DEL SimpleName@@Name:p @AT@ 7849 @LENGTH@ 1
---------------------------DEL SimpleName@@MethodName:getId:[] @AT@ 7851 @LENGTH@ 7
------------------------INS SimpleName@@p @TO@ SimpleName@@MethodName:add:[p.getId()] @AT@ 7957 @LENGTH@ 1


UPD VariableDeclarationStatement@@TarArchiveEntry sEntry=new TarArchiveEntry(file1); @TO@ TarArchiveEntry sEntry=new TarArchiveEntry(file1,file1.getName()); @AT@ 23950 @LENGTH@ 52
---UPD VariableDeclarationFragment@@sEntry=new TarArchiveEntry(file1) @TO@ sEntry=new TarArchiveEntry(file1,file1.getName()) @AT@ 23966 @LENGTH@ 35
------UPD ClassInstanceCreation@@TarArchiveEntry[file1] @TO@ TarArchiveEntry[file1, file1.getName()] @AT@ 23975 @LENGTH@ 26
---------INS MethodInvocation@@file1.getName() @TO@ ClassInstanceCreation@@TarArchiveEntry[file1] @AT@ 24019 @LENGTH@ 15
------------INS SimpleName@@Name:file1 @TO@ MethodInvocation@@file1.getName() @AT@ 24019 @LENGTH@ 5
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@file1.getName() @AT@ 24025 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 32842 @LENGTH@ 293
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @AT@ 32842 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @AT@ 32849 @LENGTH@ 4
---INS SimpleName@@MethodName:customFindByQueryWithNamedVarargsParameters @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @AT@ 32854 @LENGTH@ 43
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @AT@ 32907 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 32907 @LENGTH@ 16
---INS VariableDeclarationStatement@@Collection<User> result=repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()); @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @AT@ 32930 @LENGTH@ 108
------INS ParameterizedType@@Collection<User> @TO@ VariableDeclarationStatement@@Collection<User> result=repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()); @AT@ 32930 @LENGTH@ 16
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<User> @AT@ 32930 @LENGTH@ 10
---------INS SimpleType@@User @TO@ ParameterizedType@@Collection<User> @AT@ 32941 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()) @TO@ VariableDeclarationStatement@@Collection<User> result=repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()); @AT@ 32947 @LENGTH@ 90
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32947 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()) @TO@ VariableDeclarationFragment@@result=repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32956 @LENGTH@ 81
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32956 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByIdsCustomWithNamedVarArgs:[firstUser.getId(), secondUser.getId()] @TO@ MethodInvocation@@repository.findByIdsCustomWithNamedVarArgs(firstUser.getId(),secondUser.getId()) @AT@ 32967 @LENGTH@ 70
---------------INS MethodInvocation@@firstUser.getId() @TO@ SimpleName@@MethodName:findByIdsCustomWithNamedVarArgs:[firstUser.getId(), secondUser.getId()] @AT@ 32999 @LENGTH@ 17
------------------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.getId() @AT@ 32999 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@firstUser.getId() @AT@ 33009 @LENGTH@ 7
---------------INS MethodInvocation@@secondUser.getId() @TO@ SimpleName@@MethodName:findByIdsCustomWithNamedVarArgs:[firstUser.getId(), secondUser.getId()] @AT@ 33018 @LENGTH@ 18
------------------INS SimpleName@@Name:secondUser @TO@ MethodInvocation@@secondUser.getId() @AT@ 33018 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@secondUser.getId() @AT@ 33029 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @AT@ 33044 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result,hasSize(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @AT@ 33044 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertThat:[result, hasSize(2)] @TO@ MethodInvocation@@assertThat(result,hasSize(2)) @AT@ 33044 @LENGTH@ 30
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 33055 @LENGTH@ 6
------------INS MethodInvocation@@hasSize(2) @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 33063 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 33063 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 33071 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 33063 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 33071 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @TO@ MethodDeclaration@@public, void, MethodName:customFindByQueryWithNamedVarargsParameters,  @AT@ 33079 @LENGTH@ 52
------INS MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @AT@ 33079 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @TO@ MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @AT@ 33079 @LENGTH@ 51
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 33090 @LENGTH@ 6
------------INS MethodInvocation@@hasItems(firstUser,secondUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 33098 @LENGTH@ 31
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 33098 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 33107 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 33118 @LENGTH@ 10


UPD FieldDeclaration@@private, static, AttachmentKey<Boolean>, [WRITTEN_KEY=AttachmentKey.create(Boolean.class)] @TO@ private, static, final, AttachmentKey<Boolean>, [WRITTEN_KEY=AttachmentKey.create(Boolean.class)] @AT@ 3538 @LENGTH@ 88
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, AttachmentKey<Boolean>, [WRITTEN_KEY=AttachmentKey.create(Boolean.class)] @AT@ 3553 @LENGTH@ 5


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[final]WSEndpointMetrics, [OperationStepHandler] @AT@ 7802 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 7802 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 7810 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 7817 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 7834 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 7870 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 7873 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 7873 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 7873 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 7880 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 7900 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 7904 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 7910 @LENGTH@ 77
---------INS ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 7924 @LENGTH@ 53
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 7931 @LENGTH@ 45
---------------INS SimpleName@@Name:CurrentServiceContainer @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 7931 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 7955 @LENGTH@ 21
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 7996 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 8003 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 8003 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 8020 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 8033 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 8033 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 8057 @LENGTH@ 10


UPD VariableDeclarationStatement@@BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(profileLog),Charset.forName("UTF-8"))); @TO@ BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(profileLog),StandardCharsets.UTF_8)); @AT@ 8184 @LENGTH@ 126
---UPD VariableDeclarationFragment@@br=new BufferedReader(new InputStreamReader(new FileInputStream(profileLog),Charset.forName("UTF-8"))) @TO@ br=new BufferedReader(new InputStreamReader(new FileInputStream(profileLog),StandardCharsets.UTF_8)) @AT@ 8199 @LENGTH@ 110
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(profileLog),Charset.forName("UTF-8"))] @TO@ BufferedReader[new InputStreamReader(new FileInputStream(profileLog),StandardCharsets.UTF_8)] @AT@ 8204 @LENGTH@ 105
---------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(profileLog), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(profileLog), StandardCharsets.UTF_8] @AT@ 8223 @LENGTH@ 85
------------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 8283 @LENGTH@ 24
---------------DEL SimpleName@@Name:Charset @AT@ 8283 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 8291 @LENGTH@ 16
------------------DEL StringLiteral@@"UTF-8" @AT@ 8299 @LENGTH@ 7
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(profileLog), Charset.forName("UTF-8")] @AT@ 8292 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8292 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 8309 @LENGTH@ 5


INS SynchronizedStatement@@synchronized (this) {  BeanExpirationScheduler.this.expirationFutures.remove(this.id);} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 4541 @LENGTH@ 115
---INS ThisExpression@@this @TO@ SynchronizedStatement@@synchronized (this) {  BeanExpirationScheduler.this.expirationFutures.remove(this.id);} @AT@ 4555 @LENGTH@ 4
---INS Block@@SyncBody:{  BeanExpirationScheduler.this.expirationFutures.remove(this.id);} @TO@ SynchronizedStatement@@synchronized (this) {  BeanExpirationScheduler.this.expirationFutures.remove(this.id);} @AT@ 4561 @LENGTH@ 95
------MOV ExpressionStatement@@MethodInvocation:BeanExpirationScheduler.this.expirationFutures.remove(this.id) @TO@ Block@@SyncBody:{  BeanExpirationScheduler.this.expirationFutures.remove(this.id);} @AT@ 4335 @LENGTH@ 63


DEL ExpressionStatement@@MethodInvocation:saveState() @AT@ 3362 @LENGTH@ 12
---DEL MethodInvocation@@MethodName:saveState:[] @AT@ 3362 @LENGTH@ 11


UPD VariableDeclarationStatement@@int result=(int)serialized >>> 3; @TO@ int result=(int)(serialized >>> 3); @AT@ 34077 @LENGTH@ 36
---UPD VariableDeclarationFragment@@result=(int)serialized >>> 3 @TO@ result=(int)(serialized >>> 3) @AT@ 34081 @LENGTH@ 31
------INS CastExpression@@(int)(serialized >>> 3) @TO@ VariableDeclarationFragment@@result=(int)serialized >>> 3 @AT@ 34090 @LENGTH@ 24
---------MOV PrimitiveType@@int @TO@ CastExpression@@(int)(serialized >>> 3) @AT@ 34091 @LENGTH@ 3
---------INS ParenthesizedExpression@@(serialized >>> 3) @TO@ CastExpression@@(int)(serialized >>> 3) @AT@ 34096 @LENGTH@ 18
------------INS InfixExpression@@serialized >>> 3 @TO@ ParenthesizedExpression@@(serialized >>> 3) @AT@ 34097 @LENGTH@ 16
---------------INS SimpleName@@serialized @TO@ InfixExpression@@serialized >>> 3 @AT@ 34097 @LENGTH@ 10
---------------MOV Operator@@>>> @TO@ InfixExpression@@serialized >>> 3 @AT@ 34106 @LENGTH@ 3
---------------MOV NumberLiteral@@3 @TO@ InfixExpression@@serialized >>> 3 @AT@ 34111 @LENGTH@ 1
------DEL InfixExpression@@(int)serialized >>> 3 @AT@ 34090 @LENGTH@ 22
---------DEL CastExpression@@(int)serialized @AT@ 34090 @LENGTH@ 16
------------DEL SimpleName@@serialized @AT@ 34096 @LENGTH@ 10


UPD TryStatement@@try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.sendError(HttpServletResponse.SC_UNAUTHORIZED);} catch (IOException ioe) {} @TO@ try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);  response.setContentLength(0);  response.flushBuffer();} catch (IOException ioe) {} @AT@ 4245 @LENGTH@ 315
---UPD ExpressionStatement@@MethodInvocation:response.sendError(HttpServletResponse.SC_UNAUTHORIZED) @TO@ MethodInvocation:response.setStatus(HttpServletResponse.SC_UNAUTHORIZED) @AT@ 4383 @LENGTH@ 56
------UPD MethodInvocation@@response.sendError(HttpServletResponse.SC_UNAUTHORIZED) @TO@ response.setStatus(HttpServletResponse.SC_UNAUTHORIZED) @AT@ 4383 @LENGTH@ 55
---------UPD SimpleName@@MethodName:sendError:[HttpServletResponse.SC_UNAUTHORIZED] @TO@ MethodName:setStatus:[HttpServletResponse.SC_UNAUTHORIZED] @AT@ 4392 @LENGTH@ 46
---INS ExpressionStatement@@MethodInvocation:response.setContentLength(0) @TO@ TryStatement@@try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.sendError(HttpServletResponse.SC_UNAUTHORIZED);} catch (IOException ioe) {} @AT@ 4583 @LENGTH@ 29
------INS MethodInvocation@@response.setContentLength(0) @TO@ ExpressionStatement@@MethodInvocation:response.setContentLength(0) @AT@ 4583 @LENGTH@ 28
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setContentLength(0) @AT@ 4583 @LENGTH@ 8
---------INS SimpleName@@MethodName:setContentLength:[0] @TO@ MethodInvocation@@response.setContentLength(0) @AT@ 4592 @LENGTH@ 19
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setContentLength:[0] @AT@ 4609 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:response.flushBuffer() @TO@ TryStatement@@try {  response.setHeader(HEADER_WWW_AUTHENTICATE,AUTHENTICATION_SCHEME_BASIC + " realm=\"" + this.realm+ "\"");  response.sendError(HttpServletResponse.SC_UNAUTHORIZED);} catch (IOException ioe) {} @AT@ 4625 @LENGTH@ 23
------INS MethodInvocation@@response.flushBuffer() @TO@ ExpressionStatement@@MethodInvocation:response.flushBuffer() @AT@ 4625 @LENGTH@ 22
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.flushBuffer() @AT@ 4625 @LENGTH@ 8
---------INS SimpleName@@MethodName:flushBuffer:[] @TO@ MethodInvocation@@response.flushBuffer() @AT@ 4634 @LENGTH@ 13


INS IfStatement@@if (skipWriteDelegate != null && t instanceof Exception) {  try {    skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);  } catch (  Exception e) {    throw new BatchRuntimeException(e);  }} @TO@ MethodDeclaration@@public, void, MethodName:onSkipInWrite, S item, Throwable t,  @AT@ 1178 @LENGTH@ 217
---INS InfixExpression@@skipWriteDelegate != null && t instanceof Exception @TO@ IfStatement@@if (skipWriteDelegate != null && t instanceof Exception) {  try {    skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);  } catch (  Exception e) {    throw new BatchRuntimeException(e);  }} @AT@ 1181 @LENGTH@ 51
------INS InfixExpression@@skipWriteDelegate != null @TO@ InfixExpression@@skipWriteDelegate != null && t instanceof Exception @AT@ 1181 @LENGTH@ 25
---------INS SimpleName@@skipWriteDelegate @TO@ InfixExpression@@skipWriteDelegate != null @AT@ 1181 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@skipWriteDelegate != null @AT@ 1198 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@skipWriteDelegate != null @AT@ 1202 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@skipWriteDelegate != null && t instanceof Exception @AT@ 1206 @LENGTH@ 2
------INS InstanceofExpression@@t instanceof Exception @TO@ InfixExpression@@skipWriteDelegate != null && t instanceof Exception @AT@ 1210 @LENGTH@ 22
---------INS SimpleName@@t @TO@ InstanceofExpression@@t instanceof Exception @AT@ 1210 @LENGTH@ 1
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@t instanceof Exception @AT@ 1212 @LENGTH@ 10
---------INS SimpleType@@Exception @TO@ InstanceofExpression@@t instanceof Exception @AT@ 1223 @LENGTH@ 9
---INS Block@@ThenBody:{  try {    skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);  } catch (  Exception e) {    throw new BatchRuntimeException(e);  }} @TO@ IfStatement@@if (skipWriteDelegate != null && t instanceof Exception) {  try {    skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);  } catch (  Exception e) {    throw new BatchRuntimeException(e);  }} @AT@ 1234 @LENGTH@ 161
------INS TryStatement@@try {  skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);} catch (Exception e) {  throw new BatchRuntimeException(e);} @TO@ Block@@ThenBody:{  try {    skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);  } catch (  Exception e) {    throw new BatchRuntimeException(e);  }} @AT@ 1239 @LENGTH@ 152
---------INS ExpressionStatement@@MethodInvocation:skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t) @TO@ TryStatement@@try {  skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);} catch (Exception e) {  throw new BatchRuntimeException(e);} @AT@ 1249 @LENGTH@ 70
------------INS MethodInvocation@@skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t) @TO@ ExpressionStatement@@MethodInvocation:skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t) @AT@ 1249 @LENGTH@ 69
---------------INS SimpleName@@Name:skipWriteDelegate @TO@ MethodInvocation@@skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t) @AT@ 1249 @LENGTH@ 17
---------------INS SimpleName@@MethodName:onSkipWriteItem:[(List<Object>)item, (Exception)t] @TO@ MethodInvocation@@skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t) @AT@ 1267 @LENGTH@ 51
------------------INS CastExpression@@(List<Object>)item @TO@ SimpleName@@MethodName:onSkipWriteItem:[(List<Object>)item, (Exception)t] @AT@ 1283 @LENGTH@ 19
---------------------INS ParameterizedType@@List<Object> @TO@ CastExpression@@(List<Object>)item @AT@ 1284 @LENGTH@ 12
------------------------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 1284 @LENGTH@ 4
------------------------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 1289 @LENGTH@ 6
---------------------INS SimpleName@@item @TO@ CastExpression@@(List<Object>)item @AT@ 1298 @LENGTH@ 4
------------------INS CastExpression@@(Exception)t @TO@ SimpleName@@MethodName:onSkipWriteItem:[(List<Object>)item, (Exception)t] @AT@ 1304 @LENGTH@ 13
---------------------INS SimpleType@@Exception @TO@ CastExpression@@(Exception)t @AT@ 1305 @LENGTH@ 9
---------------------INS SimpleName@@t @TO@ CastExpression@@(Exception)t @AT@ 1316 @LENGTH@ 1
---------INS CatchClause@@catch (Exception e) {  throw new BatchRuntimeException(e);} @TO@ TryStatement@@try {  skipWriteDelegate.onSkipWriteItem((List<Object>)item,(Exception)t);} catch (Exception e) {  throw new BatchRuntimeException(e);} @AT@ 1325 @LENGTH@ 66
------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new BatchRuntimeException(e);} @AT@ 1332 @LENGTH@ 11
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 1332 @LENGTH@ 9
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 1342 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new BatchRuntimeException(e) @TO@ CatchClause@@catch (Exception e) {  throw new BatchRuntimeException(e);} @AT@ 1351 @LENGTH@ 35
---------------INS ClassInstanceCreation@@BatchRuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new BatchRuntimeException(e) @AT@ 1357 @LENGTH@ 28
------------------INS New@@new @TO@ ClassInstanceCreation@@BatchRuntimeException[e] @AT@ 1357 @LENGTH@ 3
------------------INS SimpleType@@BatchRuntimeException @TO@ ClassInstanceCreation@@BatchRuntimeException[e] @AT@ 1361 @LENGTH@ 21
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@BatchRuntimeException[e] @AT@ 1383 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @TO@ TypeDeclaration@@[public]JwtTokenServicesTests,  @AT@ 3287 @LENGTH@ 751
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3287 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3294 @LENGTH@ 4
---INS SimpleName@@MethodName:testLoadAuthenticationWithTokenConverter @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3299 @LENGTH@ 40
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3349 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:services.setAccessTokenConverter(new DefaultAccessTokenConverter(){
  @Override public OAuth2Authentication extractAuthentication(  Map<String,?> map){
    AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet());
    return new OAuth2Authentication(tokenRequest.createOAuth2Request(),null);
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3363 @LENGTH@ 356
------INS MethodInvocation@@services.setAccessTokenConverter(new DefaultAccessTokenConverter(){
  @Override public OAuth2Authentication extractAuthentication(  Map<String,?> map){
    AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet());
    return new OAuth2Authentication(tokenRequest.createOAuth2Request(),null);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:services.setAccessTokenConverter(new DefaultAccessTokenConverter(){
  @Override public OAuth2Authentication extractAuthentication(  Map<String,?> map){
    AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet());
    return new OAuth2Authentication(tokenRequest.createOAuth2Request(),null);
  }
}
) @AT@ 3363 @LENGTH@ 355
---------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.setAccessTokenConverter(new DefaultAccessTokenConverter(){
  @Override public OAuth2Authentication extractAuthentication(  Map<String,?> map){
    AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet());
    return new OAuth2Authentication(tokenRequest.createOAuth2Request(),null);
  }
}
) @AT@ 3363 @LENGTH@ 8
---------INS SimpleName@@MethodName:setAccessTokenConverter:[new DefaultAccessTokenConverter(){
  @Override public OAuth2Authentication extractAuthentication(  Map<String,?> map){
    AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet());
    return new OAuth2Authentication(tokenRequest.createOAuth2Request(),null);
  }
}
] @TO@ MethodInvocation@@services.setAccessTokenConverter(new DefaultAccessTokenConverter(){
  @Override public OAuth2Authentication extractAuthentication(  Map<String,?> map){
    AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet());
    return new OAuth2Authentication(tokenRequest.createOAuth2Request(),null);
  }
}
) @AT@ 3372 @LENGTH@ 346
------------INS ClassInstanceCreation@@DefaultAccessTokenConverter[] @TO@ SimpleName@@MethodName:setAccessTokenConverter:[new DefaultAccessTokenConverter(){
  @Override public OAuth2Authentication extractAuthentication(  Map<String,?> map){
    AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet());
    return new OAuth2Authentication(tokenRequest.createOAuth2Request(),null);
  }
}
] @AT@ 3396 @LENGTH@ 321
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultAccessTokenConverter[] @AT@ 3396 @LENGTH@ 3
---------------INS SimpleType@@DefaultAccessTokenConverter @TO@ ClassInstanceCreation@@DefaultAccessTokenConverter[] @AT@ 3400 @LENGTH@ 27
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@DefaultAccessTokenConverter[] @AT@ 3430 @LENGTH@ 287
------------------INS MethodDeclaration@@public, OAuth2Authentication, MethodName:extractAuthentication, Map<String,?> map,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3448 @LENGTH@ 265
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:extractAuthentication, Map<String,?> map,  @AT@ 3448 @LENGTH@ 6
---------------------INS SimpleType@@OAuth2Authentication @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:extractAuthentication, Map<String,?> map,  @AT@ 3455 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:extractAuthentication @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:extractAuthentication, Map<String,?> map,  @AT@ 3476 @LENGTH@ 21
---------------------INS SingleVariableDeclaration@@Map<String,?> map @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:extractAuthentication, Map<String,?> map,  @AT@ 3498 @LENGTH@ 18
------------------------INS ParameterizedType@@Map<String,?> @TO@ SingleVariableDeclaration@@Map<String,?> map @AT@ 3498 @LENGTH@ 14
---------------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,?> @AT@ 3498 @LENGTH@ 3
---------------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,?> @AT@ 3502 @LENGTH@ 6
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Map<String,?> @AT@ 3510 @LENGTH@ 1
------------------------INS SimpleName@@map @TO@ SingleVariableDeclaration@@Map<String,?> map @AT@ 3513 @LENGTH@ 3
---------------------INS VariableDeclarationStatement@@AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet()); @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:extractAuthentication, Map<String,?> map,  @AT@ 3524 @LENGTH@ 105
------------------------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet()); @AT@ 3524 @LENGTH@ 20
------------------------INS VariableDeclarationFragment@@tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet()) @TO@ VariableDeclarationStatement@@AuthorizationRequest tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet()); @AT@ 3545 @LENGTH@ 83
---------------------------INS SimpleName@@tokenRequest @TO@ VariableDeclarationFragment@@tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet()) @AT@ 3545 @LENGTH@ 12
---------------------------INS ClassInstanceCreation@@AuthorizationRequest["different", Collections.<String>emptySet()] @TO@ VariableDeclarationFragment@@tokenRequest=new AuthorizationRequest("different",Collections.<String>emptySet()) @AT@ 3560 @LENGTH@ 68
------------------------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["different", Collections.<String>emptySet()] @AT@ 3560 @LENGTH@ 3
------------------------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["different", Collections.<String>emptySet()] @AT@ 3564 @LENGTH@ 20
------------------------------INS StringLiteral@@"different" @TO@ ClassInstanceCreation@@AuthorizationRequest["different", Collections.<String>emptySet()] @AT@ 3585 @LENGTH@ 11
------------------------------INS MethodInvocation@@Collections.<String>emptySet() @TO@ ClassInstanceCreation@@AuthorizationRequest["different", Collections.<String>emptySet()] @AT@ 3597 @LENGTH@ 30
---------------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 3597 @LENGTH@ 11
---------------------------------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 3617 @LENGTH@ 10
---------------------INS ReturnStatement@@ClassInstanceCreation:new OAuth2Authentication(tokenRequest.createOAuth2Request(),null) @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:extractAuthentication, Map<String,?> map,  @AT@ 3634 @LENGTH@ 74
------------------------INS ClassInstanceCreation@@OAuth2Authentication[tokenRequest.createOAuth2Request(), null] @TO@ ReturnStatement@@ClassInstanceCreation:new OAuth2Authentication(tokenRequest.createOAuth2Request(),null) @AT@ 3641 @LENGTH@ 66
---------------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[tokenRequest.createOAuth2Request(), null] @AT@ 3641 @LENGTH@ 3
---------------------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[tokenRequest.createOAuth2Request(), null] @AT@ 3645 @LENGTH@ 20
---------------------------INS MethodInvocation@@tokenRequest.createOAuth2Request() @TO@ ClassInstanceCreation@@OAuth2Authentication[tokenRequest.createOAuth2Request(), null] @AT@ 3666 @LENGTH@ 34
------------------------------INS SimpleName@@Name:tokenRequest @TO@ MethodInvocation@@tokenRequest.createOAuth2Request() @AT@ 3666 @LENGTH@ 12
------------------------------INS SimpleName@@MethodName:createOAuth2Request:[] @TO@ MethodInvocation@@tokenRequest.createOAuth2Request() @AT@ 3679 @LENGTH@ 21
---------------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@OAuth2Authentication[tokenRequest.createOAuth2Request(), null] @AT@ 3702 @LENGTH@ 4
---INS VariableDeclarationStatement@@String token=JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded(); @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3722 @LENGTH@ 97
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String token=JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded(); @AT@ 3722 @LENGTH@ 6
------INS VariableDeclarationFragment@@token=JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded() @TO@ VariableDeclarationStatement@@String token=JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded(); @AT@ 3729 @LENGTH@ 89
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded() @AT@ 3729 @LENGTH@ 5
---------INS MethodInvocation@@JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded() @TO@ VariableDeclarationFragment@@token=JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded() @AT@ 3737 @LENGTH@ 81
------------INS MethodInvocation@@MethodName:encode:["{\"client_id\":\"client\"}", new MacSigner("FOO")] @TO@ MethodInvocation@@JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded() @AT@ 3737 @LENGTH@ 68
---------------INS StringLiteral@@"{\"client_id\":\"client\"}" @TO@ MethodInvocation@@MethodName:encode:["{\"client_id\":\"client\"}", new MacSigner("FOO")] @AT@ 3754 @LENGTH@ 28
---------------INS ClassInstanceCreation@@MacSigner["FOO"] @TO@ MethodInvocation@@MethodName:encode:["{\"client_id\":\"client\"}", new MacSigner("FOO")] @AT@ 3784 @LENGTH@ 20
------------------INS New@@new @TO@ ClassInstanceCreation@@MacSigner["FOO"] @AT@ 3784 @LENGTH@ 3
------------------INS SimpleType@@MacSigner @TO@ ClassInstanceCreation@@MacSigner["FOO"] @AT@ 3788 @LENGTH@ 9
------------------INS StringLiteral@@"FOO" @TO@ ClassInstanceCreation@@MacSigner["FOO"] @AT@ 3798 @LENGTH@ 5
------------INS SimpleName@@Name:JwtHelper @TO@ MethodInvocation@@JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded() @AT@ 3737 @LENGTH@ 9
------------INS SimpleName@@MethodName:getEncoded:[] @TO@ MethodInvocation@@JwtHelper.encode("{\"client_id\":\"client\"}",new MacSigner("FOO")).getEncoded() @AT@ 3806 @LENGTH@ 12
---INS VariableDeclarationStatement@@OAuth2Authentication authentication=services.loadAuthentication(token); @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3822 @LENGTH@ 73
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=services.loadAuthentication(token); @AT@ 3822 @LENGTH@ 20
------INS VariableDeclarationFragment@@authentication=services.loadAuthentication(token) @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=services.loadAuthentication(token); @AT@ 3843 @LENGTH@ 51
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=services.loadAuthentication(token) @AT@ 3843 @LENGTH@ 14
---------INS MethodInvocation@@services.loadAuthentication(token) @TO@ VariableDeclarationFragment@@authentication=services.loadAuthentication(token) @AT@ 3860 @LENGTH@ 34
------------INS SimpleName@@Name:services @TO@ MethodInvocation@@services.loadAuthentication(token) @AT@ 3860 @LENGTH@ 8
------------INS SimpleName@@MethodName:loadAuthentication:[token] @TO@ MethodInvocation@@services.loadAuthentication(token) @AT@ 3869 @LENGTH@ 25
---------------INS SimpleName@@token @TO@ SimpleName@@MethodName:loadAuthentication:[token] @AT@ 3888 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(null,authentication.getUserAuthentication()) @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3898 @LENGTH@ 59
------INS MethodInvocation@@assertEquals(null,authentication.getUserAuthentication()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(null,authentication.getUserAuthentication()) @AT@ 3898 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertEquals:[null, authentication.getUserAuthentication()] @TO@ MethodInvocation@@assertEquals(null,authentication.getUserAuthentication()) @AT@ 3898 @LENGTH@ 58
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:assertEquals:[null, authentication.getUserAuthentication()] @AT@ 3911 @LENGTH@ 4
------------INS MethodInvocation@@authentication.getUserAuthentication() @TO@ SimpleName@@MethodName:assertEquals:[null, authentication.getUserAuthentication()] @AT@ 3917 @LENGTH@ 38
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 3917 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getUserAuthentication:[] @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 3932 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertEquals("different",authentication.getOAuth2Request().getClientId()) @TO@ MethodDeclaration@@public, void, MethodName:testLoadAuthenticationWithTokenConverter, Exception,  @AT@ 3960 @LENGTH@ 75
------INS MethodInvocation@@assertEquals("different",authentication.getOAuth2Request().getClientId()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("different",authentication.getOAuth2Request().getClientId()) @AT@ 3960 @LENGTH@ 74
---------INS SimpleName@@MethodName:assertEquals:["different", authentication.getOAuth2Request().getClientId()] @TO@ MethodInvocation@@assertEquals("different",authentication.getOAuth2Request().getClientId()) @AT@ 3960 @LENGTH@ 74
------------INS StringLiteral@@"different" @TO@ SimpleName@@MethodName:assertEquals:["different", authentication.getOAuth2Request().getClientId()] @AT@ 3973 @LENGTH@ 11
------------INS MethodInvocation@@authentication.getOAuth2Request().getClientId() @TO@ SimpleName@@MethodName:assertEquals:["different", authentication.getOAuth2Request().getClientId()] @AT@ 3986 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:getOAuth2Request:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 3986 @LENGTH@ 33
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 3986 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getClientId:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 4020 @LENGTH@ 13


UPD TypeDeclaration@@[@author, public]NameRewriter,  @TO@ [public]NameRewriter,  @AT@ 1254 @LENGTH@ 461
---DEL MarkerAnnotation@@@author @AT@ 1254 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:ex=new UnauthorizedClientException(errorMessage) @TO@ Assignment:ex=new UnauthorizedUserException(errorMessage) @AT@ 2647 @LENGTH@ 51
---UPD Assignment@@ex=new UnauthorizedClientException(errorMessage) @TO@ ex=new UnauthorizedUserException(errorMessage) @AT@ 2647 @LENGTH@ 50
------UPD ClassInstanceCreation@@UnauthorizedClientException[errorMessage] @TO@ UnauthorizedUserException[errorMessage] @AT@ 2652 @LENGTH@ 45
---------UPD SimpleType@@UnauthorizedClientException @TO@ UnauthorizedUserException @AT@ 2656 @LENGTH@ 27


INS MethodDeclaration@@Iterator<V>, MethodName:sScan, K key, ScanOptions options,  @TO@ TypeDeclaration@@[public]SetOperations,  @AT@ 2055 @LENGTH@ 34
---INS ParameterizedType@@Iterator<V> @TO@ MethodDeclaration@@Iterator<V>, MethodName:sScan, K key, ScanOptions options,  @AT@ 2043 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<V> @AT@ 2043 @LENGTH@ 8
------INS SimpleType@@V @TO@ ParameterizedType@@Iterator<V> @AT@ 2052 @LENGTH@ 1
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@Iterator<V>, MethodName:sScan, K key, ScanOptions options,  @AT@ 2055 @LENGTH@ 5
---INS SingleVariableDeclaration@@K key @TO@ MethodDeclaration@@Iterator<V>, MethodName:sScan, K key, ScanOptions options,  @AT@ 2061 @LENGTH@ 5
------INS SimpleType@@K @TO@ SingleVariableDeclaration@@K key @AT@ 2061 @LENGTH@ 1
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@K key @AT@ 2063 @LENGTH@ 3
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@Iterator<V>, MethodName:sScan, K key, ScanOptions options,  @AT@ 2068 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 2068 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 2080 @LENGTH@ 7


UPD EnhancedForStatement@@for (String container : containers) {  Container c=fabricService.get().getContainer(container);  if (exists(curator.get(),ZkPath.CONTAINER_ALIVE.getPath(container)) == null) {    throw new EnsembleModificationFailed("The container " + container + " is not alive",EnsembleModificationFailed.Reason.CONTAINERS_NOT_ALIVE);  }  String containerVersion=getStringData(curator.get(),ZkPath.CONFIG_CONTAINER.getPath(container));  if (!version.equals(containerVersion)) {    throw new EnsembleModificationFailed("The container " + container + " is not using the default-version:"+ version,EnsembleModificationFailed.Reason.ILLEGAL_STATE);  }} @TO@ for (String container : containers) {  Container c=fabricService.get().getContainer(container);  if (exists(curator.get(),ZkPath.CONTAINER_ALIVE.getPath(container)) == null) {    throw new EnsembleModificationFailed("The container " + container + " is not alive",EnsembleModificationFailed.Reason.CONTAINERS_NOT_ALIVE);  }} @AT@ 8732 @LENGTH@ 779
---DEL VariableDeclarationStatement@@String containerVersion=getStringData(curator.get(),ZkPath.CONFIG_CONTAINER.getPath(container)); @AT@ 9137 @LENGTH@ 99
------DEL SimpleType@@String @AT@ 9137 @LENGTH@ 6
------DEL VariableDeclarationFragment@@containerVersion=getStringData(curator.get(),ZkPath.CONFIG_CONTAINER.getPath(container)) @AT@ 9144 @LENGTH@ 91
---------DEL SimpleName@@containerVersion @AT@ 9144 @LENGTH@ 16
---------DEL MethodInvocation@@getStringData(curator.get(),ZkPath.CONFIG_CONTAINER.getPath(container)) @AT@ 9163 @LENGTH@ 72
------------DEL SimpleName@@MethodName:getStringData:[curator.get(), ZkPath.CONFIG_CONTAINER.getPath(container)] @AT@ 9163 @LENGTH@ 72
---------------DEL MethodInvocation@@curator.get() @AT@ 9177 @LENGTH@ 13
------------------DEL SimpleName@@Name:curator @AT@ 9177 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:get:[] @AT@ 9185 @LENGTH@ 5
---------------DEL MethodInvocation@@ZkPath.CONFIG_CONTAINER.getPath(container) @AT@ 9192 @LENGTH@ 42
------------------DEL QualifiedName@@Name:ZkPath.CONFIG_CONTAINER @AT@ 9192 @LENGTH@ 23
------------------DEL SimpleName@@MethodName:getPath:[container] @AT@ 9216 @LENGTH@ 18
---------------------DEL SimpleName@@container @AT@ 9224 @LENGTH@ 9
---DEL IfStatement@@if (!version.equals(containerVersion)) {  throw new EnsembleModificationFailed("The container " + container + " is not using the default-version:"+ version,EnsembleModificationFailed.Reason.ILLEGAL_STATE);} @AT@ 9253 @LENGTH@ 244
------DEL PrefixExpression@@!version.equals(containerVersion) @AT@ 9257 @LENGTH@ 33
---------DEL Operator@@! @AT@ 9257 @LENGTH@ 1
---------DEL MethodInvocation@@version.equals(containerVersion) @AT@ 9258 @LENGTH@ 32
------------DEL SimpleName@@Name:version @AT@ 9258 @LENGTH@ 7
------------DEL SimpleName@@MethodName:equals:[containerVersion] @AT@ 9266 @LENGTH@ 24
---------------DEL SimpleName@@containerVersion @AT@ 9273 @LENGTH@ 16
------DEL Block@@ThenBody:{  throw new EnsembleModificationFailed("The container " + container + " is not using the default-version:"+ version,EnsembleModificationFailed.Reason.ILLEGAL_STATE);} @AT@ 9292 @LENGTH@ 205
---------DEL ThrowStatement@@ClassInstanceCreation:new EnsembleModificationFailed("The container " + container + " is not using the default-version:"+ version,EnsembleModificationFailed.Reason.ILLEGAL_STATE) @AT@ 9314 @LENGTH@ 165
------------DEL ClassInstanceCreation@@EnsembleModificationFailed["The container " + container + " is not using the default-version:"+ version, EnsembleModificationFailed.Reason.ILLEGAL_STATE] @AT@ 9320 @LENGTH@ 158
---------------DEL New@@new @AT@ 9320 @LENGTH@ 3
---------------DEL SimpleType@@EnsembleModificationFailed @AT@ 9324 @LENGTH@ 26
---------------DEL InfixExpression@@"The container " + container + " is not using the default-version:"+ version @AT@ 9351 @LENGTH@ 77
------------------DEL StringLiteral@@"The container " @AT@ 9351 @LENGTH@ 16
------------------DEL Operator@@+ @AT@ 9367 @LENGTH@ 1
------------------DEL SimpleName@@container @AT@ 9370 @LENGTH@ 9
------------------DEL StringLiteral@@" is not using the default-version:" @AT@ 9382 @LENGTH@ 36
------------------DEL SimpleName@@version @AT@ 9421 @LENGTH@ 7
---------------DEL QualifiedName@@EnsembleModificationFailed.Reason.ILLEGAL_STATE @AT@ 9430 @LENGTH@ 47
------------------DEL QualifiedName@@EnsembleModificationFailed.Reason @AT@ 9430 @LENGTH@ 33
---------------------DEL SimpleName@@EnsembleModificationFailed @AT@ 9430 @LENGTH@ 26
---------------------DEL SimpleName@@Reason @AT@ 9457 @LENGTH@ 6
------------------DEL SimpleName@@ILLEGAL_STATE @AT@ 9464 @LENGTH@ 13


UPD FieldDeclaration@@private, static, final, String, [TEST_DATA_DIR=System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @TO@ private, static, final, String, [TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis())] @AT@ 2215 @LENGTH@ 181
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @TO@ TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 2243 @LENGTH@ 152
------INS MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @TO@ VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @AT@ 2308 @LENGTH@ 172
---------INS SimpleName@@Name:HCatUtil @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 2308 @LENGTH@ 8
---------INS SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @TO@ MethodInvocation@@HCatUtil.makePathASafeFileName(System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()) @AT@ 2317 @LENGTH@ 163
------------MOV InfixExpression@@System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis() @TO@ SimpleName@@MethodName:makePathASafeFileName:[System.getProperty("java.io.tmpdir") + File.separator + TestHCatLoader.class.getCanonicalName()+ "-"+ System.currentTimeMillis()] @AT@ 2259 @LENGTH@ 136


UPD MethodDeclaration@@public, boolean, MethodName:isPostConstructCalled,  @TO@ public, static, boolean, MethodName:isPostConstructCalled,  @AT@ 1661 @LENGTH@ 82
---INS Modifier@@static @TO@ MethodDeclaration@@public, boolean, MethodName:isPostConstructCalled,  @AT@ 1668 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer) @TO@ Assignment:httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer,reverseHeaders) @AT@ 6662 @LENGTH@ 198
---UPD Assignment@@httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer) @TO@ httpMappingRuleBase=new HttpMappingRuleBase(zkPath,new SimplePathTemplate(uriTemplate),gateway.getGatewayVersion(),enabledVersion,loadBalancer,reverseHeaders) @AT@ 6662 @LENGTH@ 197
------UPD ClassInstanceCreation@@HttpMappingRuleBase[zkPath, new SimplePathTemplate(uriTemplate), gateway.getGatewayVersion(), enabledVersion, loadBalancer] @TO@ HttpMappingRuleBase[zkPath, new SimplePathTemplate(uriTemplate), gateway.getGatewayVersion(), enabledVersion, loadBalancer, reverseHeaders] @AT@ 6684 @LENGTH@ 175
---------INS SimpleName@@reverseHeaders @TO@ ClassInstanceCreation@@HttpMappingRuleBase[zkPath, new SimplePathTemplate(uriTemplate), gateway.getGatewayVersion(), enabledVersion, loadBalancer] @AT@ 7278 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:Assert.isTrue(txSize > 0,"'txSize' must be > 0") @TO@ MethodDeclaration@@public, void, MethodName:setTxSize, int txSize,  @AT@ 14307 @LENGTH@ 50
---INS MethodInvocation@@Assert.isTrue(txSize > 0,"'txSize' must be > 0") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(txSize > 0,"'txSize' must be > 0") @AT@ 14307 @LENGTH@ 49
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(txSize > 0,"'txSize' must be > 0") @AT@ 14307 @LENGTH@ 6
------INS SimpleName@@MethodName:isTrue:[txSize > 0, "'txSize' must be > 0"] @TO@ MethodInvocation@@Assert.isTrue(txSize > 0,"'txSize' must be > 0") @AT@ 14314 @LENGTH@ 42
---------INS InfixExpression@@txSize > 0 @TO@ SimpleName@@MethodName:isTrue:[txSize > 0, "'txSize' must be > 0"] @AT@ 14321 @LENGTH@ 10
------------INS SimpleName@@txSize @TO@ InfixExpression@@txSize > 0 @AT@ 14321 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@txSize > 0 @AT@ 14327 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@txSize > 0 @AT@ 14330 @LENGTH@ 1
---------INS StringLiteral@@"'txSize' must be > 0" @TO@ SimpleName@@MethodName:isTrue:[txSize > 0, "'txSize' must be > 0"] @AT@ 14333 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:initTestCase,  @TO@ public, void, MethodName:doPostSetup,  @AT@ 16271 @LENGTH@ 345
---UPD SimpleName@@MethodName:initTestCase @TO@ MethodName:doPostSetup @AT@ 16283 @LENGTH@ 12
---UPD ExpressionStatement@@SuperMethodInvocation:super.initTestCase() @TO@ SuperMethodInvocation:super.doPostSetup() @AT@ 16308 @LENGTH@ 21
------UPD SuperMethodInvocation@@super.initTestCase() @TO@ super.doPostSetup() @AT@ 16308 @LENGTH@ 20
---------UPD SimpleName@@MethodName:initTestCase:[] @TO@ MethodName:doPostSetup:[] @AT@ 16314 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></greatparent></g:greatgreatparent>","<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>") @TO@ MethodInvocation:getMockEndpoint("mock:result").expectedBodiesReceived("<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></grandparent></g:greatgrandparent>","<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>") @AT@ 6182 @LENGTH@ 581
---UPD MethodInvocation@@getMockEndpoint("mock:result").expectedBodiesReceived("<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></greatparent></g:greatgreatparent>","<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>") @TO@ getMockEndpoint("mock:result").expectedBodiesReceived("<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></grandparent></g:greatgrandparent>","<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>") @AT@ 6182 @LENGTH@ 580
------UPD SimpleName@@MethodName:expectedBodiesReceived:["<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></greatparent></g:greatgreatparent>", "<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>"] @TO@ MethodName:expectedBodiesReceived:["<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></grandparent></g:greatgrandparent>", "<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>"] @AT@ 6213 @LENGTH@ 549
---------UPD StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></greatparent></g:greatgreatparent>" @TO@ "<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='a' anotherAttr='a'></c:child></c:parent></grandparent></g:greatgrandparent>" @AT@ 6249 @LENGTH@ 253
---------UPD StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?><g:greatgreatparent xmlns:g='urn:g'><greatparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></greatparent></g:greatgreatparent>" @TO@ "<?xml version='1.0' encoding='UTF-8'?><g:greatgrandparent xmlns:g='urn:g'><grandparent><uncle/><aunt>emma</aunt><c:parent xmlns:c='urn:c' xmlns:d=\"urn:d\"><c:child some_attr='b' anotherAttr='b'/></c:parent></grandparent></g:greatgrandparent>" @AT@ 6517 @LENGTH@ 244


UPD TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build();  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ try {  Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build();  try {    System.err.println(executeCommand("fabric:container-list"));    Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){      @Override public Boolean checkConditionOnContainer(      final Container c){        String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();        return response.contains("fabric-camel-cxf");      }    },60000L));    for (    Container container : containers) {      System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));      String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");      System.err.println(response);      Assert.assertTrue(response.contains("Started"));    }  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 1976 @LENGTH@ 1321
---INS VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build();  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 1947 @LENGTH@ 157
------INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build(); @AT@ 1947 @LENGTH@ 19
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1947 @LENGTH@ 3
---------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1951 @LENGTH@ 14
------INS VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build() @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build(); @AT@ 1967 @LENGTH@ 136
---------INS SimpleName@@containers @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build() @AT@ 1967 @LENGTH@ 10
---------MOV MethodInvocation@@ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build() @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build() @AT@ 2007 @LENGTH@ 123
---DEL ExpressionStatement@@Assignment:containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build() @AT@ 1994 @LENGTH@ 137
------DEL Assignment@@containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build() @AT@ 1994 @LENGTH@ 136
---------DEL SimpleName@@containers @AT@ 1994 @LENGTH@ 10
---------DEL Operator@@= @AT@ 2004 @LENGTH@ 1
---INS TryStatement@@try {  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build();  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 2117 @LENGTH@ 1205
------MOV ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:container-list")) @TO@ TryStatement@@try {  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 2144 @LENGTH@ 60
------MOV ExpressionStatement@@MethodInvocation:Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){
  @Override public Boolean checkConditionOnContainer(  final Container c){
    String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();
    return response.contains("fabric-camel-cxf");
  }
}
,60000L)) @TO@ TryStatement@@try {  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 2219 @LENGTH@ 489
------MOV EnhancedForStatement@@for (Container container : containers) {  System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));  String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");  System.err.println(response);  Assert.assertTrue(response.contains("Started"));} @TO@ TryStatement@@try {  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 2722 @LENGTH@ 462
------MOV Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ TryStatement@@try {  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 3203 @LENGTH@ 94
---UPD Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ FinallyBody:{  ContainerBuilder.destroy(containers);} @AT@ 3203 @LENGTH@ 94
---INS Block@@FinallyBody:{  fabricProxy.close();} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("child").withProfiles("example-camel-cxf").assertProvisioningResult().build();  System.err.println(executeCommand("fabric:container-list"));  Assert.assertTrue(Provision.waitForCondition(containers,new ContainerCondition(){    @Override public Boolean checkConditionOnContainer(    final Container c){      String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + c.getId() + " camel:route-list | grep fabric-camel-cxf")).getPlain().toString();      return response.contains("fabric-camel-cxf");    }  },60000L));  for (  Container container : containers) {    System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " osgi:list"));    String response=executeCommand("fabric:container-connect -u admin -p admin " + container.getId() + " camel:route-list | grep fabric-camel-cxf");    System.err.println(response);    Assert.assertTrue(response.contains("Started"));  }}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 3341 @LENGTH@ 44
------MOV ExpressionStatement@@MethodInvocation:fabricProxy.close() @TO@ Block@@FinallyBody:{  fabricProxy.close();} @AT@ 3267 @LENGTH@ 20


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 6103 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 6106 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 6106 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 6106 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 6113 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 6133 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 6137 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 6143 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 6305 @LENGTH@ 53


UPD MethodDeclaration@@private, Error, MethodName:handleThrowableInTxSync, final EntityBeanComponentInstance instance, final Throwable t,  @TO@ private, void, MethodName:handleThrowableInTxSync, final EntityBeanComponentInstance instance, final Throwable t,  @AT@ 11544 @LENGTH@ 743
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, Error, MethodName:handleThrowableInTxSync, final EntityBeanComponentInstance instance, final Throwable t,  @AT@ 11533 @LENGTH@ 4
---DEL SimpleType@@Error @AT@ 11552 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer().getService(WSServices.CONFIG_SERVICE).getServiceContainer() @TO@ MethodInvocation:currentServiceContainer().getService(WSServices.CONFIG_SERVICE).getServiceContainer() @AT@ 5384 @LENGTH@ 113
---UPD MethodInvocation@@CurrentServiceContainer.getServiceContainer().getService(WSServices.CONFIG_SERVICE).getServiceContainer() @TO@ currentServiceContainer().getService(WSServices.CONFIG_SERVICE).getServiceContainer() @AT@ 5391 @LENGTH@ 105
------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:currentServiceContainer:[] @AT@ 5391 @LENGTH@ 45
------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 5391 @LENGTH@ 23


UPD VariableDeclarationStatement@@Set containers=ContainerBuilder.create(fabricProxy,2).withName("ens").withProfiles("fabric").assertProvisioningResult().build(); @TO@ Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,2).withName("ens").withProfiles("fabric").assertProvisioningResult().build(); @AT@ 6379 @LENGTH@ 131
---DEL SimpleType@@Set @AT@ 6379 @LENGTH@ 3
---INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set containers=ContainerBuilder.create(fabricProxy,2).withName("ens").withProfiles("fabric").assertProvisioningResult().build(); @AT@ 6436 @LENGTH@ 19
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 6436 @LENGTH@ 3
------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 6440 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @TO@ TypeDeclaration@@[@ContextConfiguration(value="classpath:eclipselink.xml"), public]EclipseLinkNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 2206 @LENGTH@ 49
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 2206 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 2213 @LENGTH@ 4
---INS SimpleName@@MethodName:findByElementCollectionAttribute @TO@ MethodDeclaration@@public, void, MethodName:findByElementCollectionAttribute,  @AT@ 2218 @LENGTH@ 32


INS VariableDeclarationStatement@@DataFormat dataFormat=camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class); @TO@ MethodDeclaration@@public, void, MethodName:populateCxfRequestFromExchange, org.apache.cxf.message.Exchange cxfExchange, Exchange camelExchange, Map<String,Object> requestContext,  @AT@ 5129 @LENGTH@ 163
---INS SimpleType@@DataFormat @TO@ VariableDeclarationStatement@@DataFormat dataFormat=camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class); @AT@ 5129 @LENGTH@ 10
---INS VariableDeclarationFragment@@dataFormat=camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class) @TO@ VariableDeclarationStatement@@DataFormat dataFormat=camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class); @AT@ 5140 @LENGTH@ 151
------INS SimpleName@@dataFormat @TO@ VariableDeclarationFragment@@dataFormat=camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class) @AT@ 5140 @LENGTH@ 10
------INS MethodInvocation@@camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class) @TO@ VariableDeclarationFragment@@dataFormat=camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class) @AT@ 5153 @LENGTH@ 138
---------INS SimpleName@@Name:camelExchange @TO@ MethodInvocation@@camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class) @AT@ 5153 @LENGTH@ 13
---------INS SimpleName@@MethodName:getProperty:[CxfConstants.DATA_FORMAT_PROPERTY, DataFormat.class] @TO@ MethodInvocation@@camelExchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,DataFormat.class) @AT@ 5167 @LENGTH@ 124
------------INS QualifiedName@@CxfConstants.DATA_FORMAT_PROPERTY @TO@ SimpleName@@MethodName:getProperty:[CxfConstants.DATA_FORMAT_PROPERTY, DataFormat.class] @AT@ 5179 @LENGTH@ 33
---------------INS SimpleName@@CxfConstants @TO@ QualifiedName@@CxfConstants.DATA_FORMAT_PROPERTY @AT@ 5179 @LENGTH@ 12
---------------INS SimpleName@@DATA_FORMAT_PROPERTY @TO@ QualifiedName@@CxfConstants.DATA_FORMAT_PROPERTY @AT@ 5192 @LENGTH@ 20
------------INS TypeLiteral@@DataFormat.class @TO@ SimpleName@@MethodName:getProperty:[CxfConstants.DATA_FORMAT_PROPERTY, DataFormat.class] @AT@ 5274 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:UnsafeUriCharactersEncoder.encode(path) @TO@ MethodInvocation:UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 6713 @LENGTH@ 47
---UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(path) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(path) @AT@ 6720 @LENGTH@ 39
------UPD SimpleName@@MethodName:encode:[path] @TO@ MethodName:encodeHttpURI:[path] @AT@ 6747 @LENGTH@ 12


DEL TryStatement@@try {  final Manifest manifest=is.getManifest();  Assert.assertNotNull(manifest);}  finally {  IoUtils.safeClose(is);} @AT@ 7052 @LENGTH@ 170
---DEL VariableDeclarationStatement@@final Manifest manifest=is.getManifest(); @AT@ 7070 @LENGTH@ 43
------DEL Modifier@@final @AT@ 7070 @LENGTH@ 5
------DEL SimpleType@@Manifest @AT@ 7076 @LENGTH@ 8
------DEL VariableDeclarationFragment@@manifest=is.getManifest() @AT@ 7085 @LENGTH@ 27
---------DEL SimpleName@@manifest @AT@ 7085 @LENGTH@ 8
---------DEL MethodInvocation@@is.getManifest() @AT@ 7096 @LENGTH@ 16
------------DEL SimpleName@@Name:is @AT@ 7096 @LENGTH@ 2
------------DEL SimpleName@@MethodName:getManifest:[] @AT@ 7099 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:Assert.assertNotNull(manifest) @AT@ 7126 @LENGTH@ 31
------DEL MethodInvocation@@Assert.assertNotNull(manifest) @AT@ 7126 @LENGTH@ 30
---------DEL SimpleName@@Name:Assert @AT@ 7126 @LENGTH@ 6
---------DEL SimpleName@@MethodName:assertNotNull:[manifest] @AT@ 7133 @LENGTH@ 23
------------DEL SimpleName@@manifest @AT@ 7147 @LENGTH@ 8
---DEL Block@@FinallyBody:{  IoUtils.safeClose(is);} @AT@ 7176 @LENGTH@ 46
------DEL ExpressionStatement@@MethodInvocation:IoUtils.safeClose(is) @AT@ 7190 @LENGTH@ 22
---------DEL MethodInvocation@@IoUtils.safeClose(is) @AT@ 7190 @LENGTH@ 21
------------DEL SimpleName@@Name:IoUtils @AT@ 7190 @LENGTH@ 7
------------DEL SimpleName@@MethodName:safeClose:[is] @AT@ 7198 @LENGTH@ 13
---------------DEL SimpleName@@is @AT@ 7208 @LENGTH@ 2


UPD ExpressionStatement@@SuperMethodInvocation:super.setEndpointUri(UnsafeUriCharactersEncoder.encode(endpointUri)) @TO@ SuperMethodInvocation:super.setEndpointUri(UnsafeUriCharactersEncoder.encodeHttpURI(endpointUri)) @AT@ 8000 @LENGTH@ 69
---UPD SuperMethodInvocation@@super.setEndpointUri(UnsafeUriCharactersEncoder.encode(endpointUri)) @TO@ super.setEndpointUri(UnsafeUriCharactersEncoder.encodeHttpURI(endpointUri)) @AT@ 8000 @LENGTH@ 68
------UPD SimpleName@@MethodName:setEndpointUri:[UnsafeUriCharactersEncoder.encode(endpointUri)] @TO@ MethodName:setEndpointUri:[UnsafeUriCharactersEncoder.encodeHttpURI(endpointUri)] @AT@ 8006 @LENGTH@ 14
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(endpointUri) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(endpointUri) @AT@ 8021 @LENGTH@ 46
---------UPD SimpleName@@MethodName:encode:[endpointUri] @TO@ MethodName:encodeHttpURI:[endpointUri] @AT@ 8048 @LENGTH@ 19


UPD Block@@ThenBody:{  String before=(String)jmsReplyTo;  String replyTo=normalizeDestinationName(before);  jmsReplyTo=null;  LOG.trace("Normalized JMSReplyTo destination name {} -> {}",before,replyTo);  if (endpoint.getDestinationResolver() != null) {    jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain());    if (LOG.isDebugEnabled()) {      LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo});    }  }  if (jmsReplyTo == null) {    if (endpoint.isPubSubDomain()) {      LOG.debug("Creating JMSReplyTo topic: {}",replyTo);      jmsReplyTo=session.createTopic(replyTo);    } else {      LOG.debug("Creating JMSReplyTo queue: {}",replyTo);      jmsReplyTo=session.createQueue(replyTo);    }  }} @TO@ ThenBody:{  String replyTo=(String)jmsReplyTo;  jmsReplyTo=null;  boolean isPubSub=isTopicPrefix(replyTo) || (!isQueuePrefix(replyTo) && endpoint.isPubSubDomain());  if (endpoint.getDestinationResolver() != null) {    jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,isPubSub);    if (LOG.isDebugEnabled()) {      LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo});    }  }  if (jmsReplyTo == null) {    String before=replyTo;    replyTo=normalizeDestinationName(replyTo);    LOG.trace("Normalized JMSReplyTo destination name {} -> {}",before,replyTo);    if (isPubSub) {      LOG.debug("Creating JMSReplyTo topic: {}",replyTo);      jmsReplyTo=session.createTopic(replyTo);    } else {      LOG.debug("Creating JMSReplyTo queue: {}",replyTo);      jmsReplyTo=session.createQueue(replyTo);    }  }} @AT@ 15965 @LENGTH@ 1656
---UPD VariableDeclarationStatement@@String before=(String)jmsReplyTo; @TO@ String replyTo=(String)jmsReplyTo; @AT@ 16046 @LENGTH@ 36
------UPD VariableDeclarationFragment@@before=(String)jmsReplyTo @TO@ replyTo=(String)jmsReplyTo @AT@ 16053 @LENGTH@ 28
---------UPD SimpleName@@before @TO@ replyTo @AT@ 16053 @LENGTH@ 6
---UPD VariableDeclarationStatement@@String replyTo=normalizeDestinationName(before); @TO@ boolean isPubSub=isTopicPrefix(replyTo) || (!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()); @AT@ 16103 @LENGTH@ 50
------DEL SimpleType@@String @AT@ 16103 @LENGTH@ 6
------UPD VariableDeclarationFragment@@replyTo=normalizeDestinationName(before) @TO@ isPubSub=isTopicPrefix(replyTo) || (!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()) @AT@ 16110 @LENGTH@ 42
---------DEL SimpleName@@replyTo @AT@ 16110 @LENGTH@ 7
---------DEL MethodInvocation@@normalizeDestinationName(before) @AT@ 16120 @LENGTH@ 32
---------INS SimpleName@@isPubSub @TO@ VariableDeclarationFragment@@replyTo=normalizeDestinationName(before) @AT@ 16349 @LENGTH@ 8
---------INS InfixExpression@@isTopicPrefix(replyTo) || (!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()) @TO@ VariableDeclarationFragment@@replyTo=normalizeDestinationName(before) @AT@ 16360 @LENGTH@ 80
------------INS MethodInvocation@@isTopicPrefix(replyTo) @TO@ InfixExpression@@isTopicPrefix(replyTo) || (!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()) @AT@ 16360 @LENGTH@ 22
---------------INS SimpleName@@MethodName:isTopicPrefix:[replyTo] @TO@ MethodInvocation@@isTopicPrefix(replyTo) @AT@ 16360 @LENGTH@ 22
------------------INS SimpleName@@replyTo @TO@ SimpleName@@MethodName:isTopicPrefix:[replyTo] @AT@ 16374 @LENGTH@ 7
------------INS Operator@@|| @TO@ InfixExpression@@isTopicPrefix(replyTo) || (!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()) @AT@ 16382 @LENGTH@ 2
------------INS ParenthesizedExpression@@(!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()) @TO@ InfixExpression@@isTopicPrefix(replyTo) || (!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()) @AT@ 16386 @LENGTH@ 54
---------------INS InfixExpression@@!isQueuePrefix(replyTo) && endpoint.isPubSubDomain() @TO@ ParenthesizedExpression@@(!isQueuePrefix(replyTo) && endpoint.isPubSubDomain()) @AT@ 16387 @LENGTH@ 52
------------------INS PrefixExpression@@!isQueuePrefix(replyTo) @TO@ InfixExpression@@!isQueuePrefix(replyTo) && endpoint.isPubSubDomain() @AT@ 16387 @LENGTH@ 23
---------------------INS Operator@@! @TO@ PrefixExpression@@!isQueuePrefix(replyTo) @AT@ 16387 @LENGTH@ 1
---------------------INS MethodInvocation@@isQueuePrefix(replyTo) @TO@ PrefixExpression@@!isQueuePrefix(replyTo) @AT@ 16388 @LENGTH@ 22
------------------------MOV SimpleName@@MethodName:normalizeDestinationName:[before] @TO@ MethodInvocation@@isQueuePrefix(replyTo) @AT@ 16120 @LENGTH@ 32
---------------------------UPD SimpleName@@before @TO@ replyTo @AT@ 16145 @LENGTH@ 6
------------------INS Operator@@&& @TO@ InfixExpression@@!isQueuePrefix(replyTo) && endpoint.isPubSubDomain() @AT@ 16410 @LENGTH@ 2
------------------INS MethodInvocation@@endpoint.isPubSubDomain() @TO@ InfixExpression@@!isQueuePrefix(replyTo) && endpoint.isPubSubDomain() @AT@ 16414 @LENGTH@ 25
---------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isPubSubDomain() @AT@ 16414 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:isPubSubDomain:[] @TO@ MethodInvocation@@endpoint.isPubSubDomain() @AT@ 16423 @LENGTH@ 16
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@String replyTo=normalizeDestinationName(before); @AT@ 16341 @LENGTH@ 7
---MOV VariableDeclarationStatement@@String replyTo=normalizeDestinationName(before); @TO@ Block@@ThenBody:{  String before=(String)jmsReplyTo;  String replyTo=normalizeDestinationName(before);  jmsReplyTo=null;  LOG.trace("Normalized JMSReplyTo destination name {} -> {}",before,replyTo);  if (endpoint.getDestinationResolver() != null) {    jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain());    if (LOG.isDebugEnabled()) {      LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo});    }  }  if (jmsReplyTo == null) {    if (endpoint.isPubSubDomain()) {      LOG.debug("Creating JMSReplyTo topic: {}",replyTo);      jmsReplyTo=session.createTopic(replyTo);    } else {      LOG.debug("Creating JMSReplyTo queue: {}",replyTo);      jmsReplyTo=session.createQueue(replyTo);    }  }} @AT@ 16103 @LENGTH@ 50
---UPD IfStatement@@if (endpoint.getDestinationResolver() != null) {  jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain());  if (LOG.isDebugEnabled()) {    LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo});  }} @TO@ if (endpoint.getDestinationResolver() != null) {  jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,isPubSub);  if (LOG.isDebugEnabled()) {    LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo});  }} @AT@ 16496 @LENGTH@ 552
------UPD Block@@ThenBody:{  jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain());  if (LOG.isDebugEnabled()) {    LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo});  }} @TO@ ThenBody:{  jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,isPubSub);  if (LOG.isDebugEnabled()) {    LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo});  }} @AT@ 16543 @LENGTH@ 505
---------UPD ExpressionStatement@@Assignment:jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain()) @TO@ Assignment:jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,isPubSub) @AT@ 16569 @LENGTH@ 115
------------UPD Assignment@@jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain()) @TO@ jmsReplyTo=endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,isPubSub) @AT@ 16569 @LENGTH@ 114
---------------UPD MethodInvocation@@endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,endpoint.isPubSubDomain()) @TO@ endpoint.getDestinationResolver().resolveDestinationName(session,replyTo,isPubSub) @AT@ 16582 @LENGTH@ 101
------------------UPD SimpleName@@MethodName:resolveDestinationName:[session, replyTo, endpoint.isPubSubDomain()] @TO@ MethodName:resolveDestinationName:[session, replyTo, isPubSub] @AT@ 16616 @LENGTH@ 67
---------------------DEL MethodInvocation@@endpoint.isPubSubDomain() @AT@ 16657 @LENGTH@ 25
------------------------DEL SimpleName@@Name:endpoint @AT@ 16657 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:isPubSubDomain:[] @AT@ 16666 @LENGTH@ 16
---------------------INS SimpleName@@isPubSub @TO@ SimpleName@@MethodName:resolveDestinationName:[session, replyTo, endpoint.isPubSubDomain()] @AT@ 16703 @LENGTH@ 8
---------UPD IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo});} @TO@ if (LOG.isDebugEnabled()) {  LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo});} @AT@ 16709 @LENGTH@ 317
------------UPD Block@@ThenBody:{  LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo});} @TO@ ThenBody:{  LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo});} @AT@ 16735 @LENGTH@ 291
---------------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo}) @TO@ MethodInvocation:LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo}) @AT@ 16765 @LENGTH@ 235
------------------UPD MethodInvocation@@LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo}) @TO@ LOG.debug("Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}",new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo}) @AT@ 16765 @LENGTH@ 234
---------------------UPD SimpleName@@MethodName:debug:["Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}", new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo}] @TO@ MethodName:debug:["Resolved JMSReplyTo destination {} using DestinationResolver {} as PubSubDomain {} -> {}", new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo}] @AT@ 16769 @LENGTH@ 230
------------------------UPD ArrayCreation@@new Object[]{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo} @TO@ new Object[]{replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo} @AT@ 16903 @LENGTH@ 95
---------------------------UPD ArrayInitializer@@{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo} @TO@ {replyTo,endpoint.getDestinationResolver(),isPubSub,jmsReplyTo} @AT@ 16915 @LENGTH@ 83
------------------------------DEL MethodInvocation@@endpoint.isPubSubDomain() @AT@ 16960 @LENGTH@ 25
---------------------------------DEL SimpleName@@Name:endpoint @AT@ 16960 @LENGTH@ 8
---------------------------------DEL SimpleName@@MethodName:isPubSubDomain:[] @AT@ 16969 @LENGTH@ 16
------------------------------INS SimpleName@@isPubSub @TO@ ArrayInitializer@@{replyTo,endpoint.getDestinationResolver(),endpoint.isPubSubDomain(),jmsReplyTo} @AT@ 16989 @LENGTH@ 8
---UPD IfStatement@@if (jmsReplyTo == null) {  if (endpoint.isPubSubDomain()) {    LOG.debug("Creating JMSReplyTo topic: {}",replyTo);    jmsReplyTo=session.createTopic(replyTo);  } else {    LOG.debug("Creating JMSReplyTo queue: {}",replyTo);    jmsReplyTo=session.createQueue(replyTo);  }} @TO@ if (jmsReplyTo == null) {  String before=replyTo;  replyTo=normalizeDestinationName(replyTo);  LOG.trace("Normalized JMSReplyTo destination name {} -> {}",before,replyTo);  if (isPubSub) {    LOG.debug("Creating JMSReplyTo topic: {}",replyTo);    jmsReplyTo=session.createTopic(replyTo);  } else {    LOG.debug("Creating JMSReplyTo queue: {}",replyTo);    jmsReplyTo=session.createQueue(replyTo);  }} @AT@ 17069 @LENGTH@ 534
------UPD Block@@ThenBody:{  if (endpoint.isPubSubDomain()) {    LOG.debug("Creating JMSReplyTo topic: {}",replyTo);    jmsReplyTo=session.createTopic(replyTo);  } else {    LOG.debug("Creating JMSReplyTo queue: {}",replyTo);    jmsReplyTo=session.createQueue(replyTo);  }} @TO@ ThenBody:{  String before=replyTo;  replyTo=normalizeDestinationName(replyTo);  LOG.trace("Normalized JMSReplyTo destination name {} -> {}",before,replyTo);  if (isPubSub) {    LOG.debug("Creating JMSReplyTo topic: {}",replyTo);    jmsReplyTo=session.createTopic(replyTo);  } else {    LOG.debug("Creating JMSReplyTo queue: {}",replyTo);    jmsReplyTo=session.createQueue(replyTo);  }} @AT@ 17093 @LENGTH@ 510
---------MOV ExpressionStatement@@MethodInvocation:LOG.trace("Normalized JMSReplyTo destination name {} -> {}",before,replyTo) @TO@ Block@@ThenBody:{  if (endpoint.isPubSubDomain()) {    LOG.debug("Creating JMSReplyTo topic: {}",replyTo);    jmsReplyTo=session.createTopic(replyTo);  } else {    LOG.debug("Creating JMSReplyTo queue: {}",replyTo);    jmsReplyTo=session.createQueue(replyTo);  }} @AT@ 16316 @LENGTH@ 78
---------UPD IfStatement@@if (endpoint.isPubSubDomain()) {  LOG.debug("Creating JMSReplyTo topic: {}",replyTo);  jmsReplyTo=session.createTopic(replyTo);} else {  LOG.debug("Creating JMSReplyTo queue: {}",replyTo);  jmsReplyTo=session.createQueue(replyTo);} @TO@ if (isPubSub) {  LOG.debug("Creating JMSReplyTo topic: {}",replyTo);  jmsReplyTo=session.createTopic(replyTo);} else {  LOG.debug("Creating JMSReplyTo queue: {}",replyTo);  jmsReplyTo=session.createQueue(replyTo);} @AT@ 17186 @LENGTH@ 395
------------DEL MethodInvocation@@endpoint.isPubSubDomain() @AT@ 17190 @LENGTH@ 25
---------------DEL SimpleName@@Name:endpoint @AT@ 17190 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:isPubSubDomain:[] @AT@ 17199 @LENGTH@ 16
------------INS SimpleName@@isPubSub @TO@ IfStatement@@if (endpoint.isPubSubDomain()) {  LOG.debug("Creating JMSReplyTo topic: {}",replyTo);  jmsReplyTo=session.createTopic(replyTo);} else {  LOG.debug("Creating JMSReplyTo queue: {}",replyTo);  jmsReplyTo=session.createQueue(replyTo);} @AT@ 17493 @LENGTH@ 8
---------INS VariableDeclarationStatement@@String before=replyTo; @TO@ Block@@ThenBody:{  if (endpoint.isPubSubDomain()) {    LOG.debug("Creating JMSReplyTo topic: {}",replyTo);    jmsReplyTo=session.createTopic(replyTo);  } else {    LOG.debug("Creating JMSReplyTo queue: {}",replyTo);    jmsReplyTo=session.createQueue(replyTo);  }} @AT@ 17194 @LENGTH@ 24
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String before=replyTo; @AT@ 17194 @LENGTH@ 6
------------INS VariableDeclarationFragment@@before=replyTo @TO@ VariableDeclarationStatement@@String before=replyTo; @AT@ 17201 @LENGTH@ 16
---------------INS SimpleName@@before @TO@ VariableDeclarationFragment@@before=replyTo @AT@ 17201 @LENGTH@ 6
---------------INS SimpleName@@replyTo @TO@ VariableDeclarationFragment@@before=replyTo @AT@ 17210 @LENGTH@ 7
---------INS ExpressionStatement@@Assignment:replyTo=normalizeDestinationName(replyTo) @TO@ Block@@ThenBody:{  if (endpoint.isPubSubDomain()) {    LOG.debug("Creating JMSReplyTo topic: {}",replyTo);    jmsReplyTo=session.createTopic(replyTo);  } else {    LOG.debug("Creating JMSReplyTo queue: {}",replyTo);    jmsReplyTo=session.createQueue(replyTo);  }} @AT@ 17243 @LENGTH@ 44
------------INS Assignment@@replyTo=normalizeDestinationName(replyTo) @TO@ ExpressionStatement@@Assignment:replyTo=normalizeDestinationName(replyTo) @AT@ 17243 @LENGTH@ 43
---------------INS SimpleName@@replyTo @TO@ Assignment@@replyTo=normalizeDestinationName(replyTo) @AT@ 17243 @LENGTH@ 7
---------------INS Operator@@= @TO@ Assignment@@replyTo=normalizeDestinationName(replyTo) @AT@ 17250 @LENGTH@ 1
---------------INS MethodInvocation@@normalizeDestinationName(replyTo) @TO@ Assignment@@replyTo=normalizeDestinationName(replyTo) @AT@ 17253 @LENGTH@ 33
------------------INS SimpleName@@MethodName:normalizeDestinationName:[replyTo] @TO@ MethodInvocation@@normalizeDestinationName(replyTo) @AT@ 17253 @LENGTH@ 33
---------------------INS SimpleName@@replyTo @TO@ SimpleName@@MethodName:normalizeDestinationName:[replyTo] @AT@ 17278 @LENGTH@ 7


INS FieldDeclaration@@public, MinimumRedisVersionRule, [versionRule=new MinimumRedisVersionRule()] @TO@ TypeDeclaration@@[@RunWith(Parameterized.class), public]DefaultSetOperationsTests,  @AT@ 2018 @LENGTH@ 81
---INS Modifier@@public @TO@ FieldDeclaration@@public, MinimumRedisVersionRule, [versionRule=new MinimumRedisVersionRule()] @AT@ 2018 @LENGTH@ 6
---INS SimpleType@@MinimumRedisVersionRule @TO@ FieldDeclaration@@public, MinimumRedisVersionRule, [versionRule=new MinimumRedisVersionRule()] @AT@ 2031 @LENGTH@ 23
---INS VariableDeclarationFragment@@versionRule=new MinimumRedisVersionRule() @TO@ FieldDeclaration@@public, MinimumRedisVersionRule, [versionRule=new MinimumRedisVersionRule()] @AT@ 2055 @LENGTH@ 43
------INS SimpleName@@versionRule @TO@ VariableDeclarationFragment@@versionRule=new MinimumRedisVersionRule() @AT@ 2055 @LENGTH@ 11
------INS ClassInstanceCreation@@MinimumRedisVersionRule[] @TO@ VariableDeclarationFragment@@versionRule=new MinimumRedisVersionRule() @AT@ 2069 @LENGTH@ 29
---------INS New@@new @TO@ ClassInstanceCreation@@MinimumRedisVersionRule[] @AT@ 2069 @LENGTH@ 3
---------INS SimpleType@@MinimumRedisVersionRule @TO@ ClassInstanceCreation@@MinimumRedisVersionRule[] @AT@ 2073 @LENGTH@ 23


INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 14503 @LENGTH@ 117
---INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 14506 @LENGTH@ 35
------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 14506 @LENGTH@ 27
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 14506 @LENGTH@ 6
---------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 14513 @LENGTH@ 20
------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 14533 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 14537 @LENGTH@ 4
---INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 14543 @LENGTH@ 77
------MOV ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 14704 @LENGTH@ 53


UPD IfStatement@@if (routeContext != null) {  final PreparedErrorHandler key=new PreparedErrorHandler(routeContext,processor);  answer=errorHandlers.get(key);  if (answer != null) {    LOG.trace("Using existing error handler for: {}",processor);    return answer;  }  LOG.trace("Creating error handler for: {}",processor);  ErrorHandlerFactory builder=routeContext.getRoute().getErrorHandlerBuilder();  try {    processor=builder.createErrorHandler(routeContext,processor);    answer=createUnitOfWorkProcessor(routeContext,processor,exchange);    boolean child=exchange.getProperty(Exchange.PARENT_UNIT_OF_WORK,UnitOfWork.class) != null;    ServiceHelper.startServices(answer);    if (!child) {      errorHandlers.putIfAbsent(key,answer);    }  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }} else {  answer=createUnitOfWorkProcessor(routeContext,processor,exchange);} @TO@ if (!tryBlock && routeContext != null) {  final PreparedErrorHandler key=new PreparedErrorHandler(routeContext,processor);  answer=errorHandlers.get(key);  if (answer != null) {    LOG.trace("Using existing error handler for: {}",processor);    return answer;  }  LOG.trace("Creating error handler for: {}",processor);  ErrorHandlerFactory builder=routeContext.getRoute().getErrorHandlerBuilder();  try {    processor=builder.createErrorHandler(routeContext,processor);    answer=createUnitOfWorkProcessor(routeContext,processor,exchange);    boolean child=exchange.getProperty(Exchange.PARENT_UNIT_OF_WORK,UnitOfWork.class) != null;    ServiceHelper.startServices(answer);    if (!child) {      errorHandlers.putIfAbsent(key,answer);    }  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }} else {  answer=createUnitOfWorkProcessor(routeContext,processor,exchange);} @AT@ 42556 @LENGTH@ 2112
---DEL InfixExpression@@routeContext != null @AT@ 42560 @LENGTH@ 20
---INS InfixExpression@@!tryBlock && routeContext != null @TO@ IfStatement@@if (routeContext != null) {  final PreparedErrorHandler key=new PreparedErrorHandler(routeContext,processor);  answer=errorHandlers.get(key);  if (answer != null) {    LOG.trace("Using existing error handler for: {}",processor);    return answer;  }  LOG.trace("Creating error handler for: {}",processor);  ErrorHandlerFactory builder=routeContext.getRoute().getErrorHandlerBuilder();  try {    processor=builder.createErrorHandler(routeContext,processor);    answer=createUnitOfWorkProcessor(routeContext,processor,exchange);    boolean child=exchange.getProperty(Exchange.PARENT_UNIT_OF_WORK,UnitOfWork.class) != null;    ServiceHelper.startServices(answer);    if (!child) {      errorHandlers.putIfAbsent(key,answer);    }  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }} else {  answer=createUnitOfWorkProcessor(routeContext,processor,exchange);} @AT@ 42727 @LENGTH@ 33
------INS PrefixExpression@@!tryBlock @TO@ InfixExpression@@!tryBlock && routeContext != null @AT@ 42727 @LENGTH@ 9
---------INS Operator@@! @TO@ PrefixExpression@@!tryBlock @AT@ 42727 @LENGTH@ 1
---------INS SimpleName@@tryBlock @TO@ PrefixExpression@@!tryBlock @AT@ 42728 @LENGTH@ 8
------INS Operator@@&& @TO@ InfixExpression@@!tryBlock && routeContext != null @AT@ 42736 @LENGTH@ 2
------INS InfixExpression@@routeContext != null @TO@ InfixExpression@@!tryBlock && routeContext != null @AT@ 42740 @LENGTH@ 20
---------MOV SimpleName@@routeContext @TO@ InfixExpression@@routeContext != null @AT@ 42560 @LENGTH@ 12
---------MOV Operator@@!= @TO@ InfixExpression@@routeContext != null @AT@ 42572 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@routeContext != null @AT@ 42576 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]StringBasedMongoQueryUnitTests,  @AT@ 5138 @LENGTH@ 459
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5138 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5145 @LENGTH@ 4
---INS SimpleName@@MethodName:bindsDbrefCorrectly @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5150 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5179 @LENGTH@ 9
---INS VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("findByHavingSizeFansNotZero"); @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5194 @LENGTH@ 87
------INS SimpleType@@StringBasedMongoQuery @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("findByHavingSizeFansNotZero"); @AT@ 5194 @LENGTH@ 21
------INS VariableDeclarationFragment@@mongoQuery=createQueryForMethod("findByHavingSizeFansNotZero") @TO@ VariableDeclarationStatement@@StringBasedMongoQuery mongoQuery=createQueryForMethod("findByHavingSizeFansNotZero"); @AT@ 5216 @LENGTH@ 64
---------INS SimpleName@@mongoQuery @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("findByHavingSizeFansNotZero") @AT@ 5216 @LENGTH@ 10
---------INS MethodInvocation@@createQueryForMethod("findByHavingSizeFansNotZero") @TO@ VariableDeclarationFragment@@mongoQuery=createQueryForMethod("findByHavingSizeFansNotZero") @AT@ 5229 @LENGTH@ 51
------------INS SimpleName@@MethodName:createQueryForMethod:["findByHavingSizeFansNotZero"] @TO@ MethodInvocation@@createQueryForMethod("findByHavingSizeFansNotZero") @AT@ 5229 @LENGTH@ 51
---------------INS StringLiteral@@"findByHavingSizeFansNotZero" @TO@ SimpleName@@MethodName:createQueryForMethod:["findByHavingSizeFansNotZero"] @AT@ 5250 @LENGTH@ 29
---INS VariableDeclarationStatement@@ConvertingParameterAccessor accessor=StubParameterAccessor.getAccessor(converter,new Object[]{}); @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5284 @LENGTH@ 101
------INS SimpleType@@ConvertingParameterAccessor @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor accessor=StubParameterAccessor.getAccessor(converter,new Object[]{}); @AT@ 5284 @LENGTH@ 27
------INS VariableDeclarationFragment@@accessor=StubParameterAccessor.getAccessor(converter,new Object[]{}) @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor accessor=StubParameterAccessor.getAccessor(converter,new Object[]{}); @AT@ 5312 @LENGTH@ 72
---------INS SimpleName@@accessor @TO@ VariableDeclarationFragment@@accessor=StubParameterAccessor.getAccessor(converter,new Object[]{}) @AT@ 5312 @LENGTH@ 8
---------INS MethodInvocation@@StubParameterAccessor.getAccessor(converter,new Object[]{}) @TO@ VariableDeclarationFragment@@accessor=StubParameterAccessor.getAccessor(converter,new Object[]{}) @AT@ 5323 @LENGTH@ 61
------------INS SimpleName@@Name:StubParameterAccessor @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,new Object[]{}) @AT@ 5323 @LENGTH@ 21
------------INS SimpleName@@MethodName:getAccessor:[converter, new Object[]{}] @TO@ MethodInvocation@@StubParameterAccessor.getAccessor(converter,new Object[]{}) @AT@ 5345 @LENGTH@ 39
---------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, new Object[]{}] @AT@ 5357 @LENGTH@ 9
---------------INS ArrayCreation@@new Object[]{} @TO@ SimpleName@@MethodName:getAccessor:[converter, new Object[]{}] @AT@ 5368 @LENGTH@ 15
------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{} @AT@ 5372 @LENGTH@ 8
---------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5372 @LENGTH@ 6
------------------INS ArrayInitializer@@{} @TO@ ArrayCreation@@new Object[]{} @AT@ 5381 @LENGTH@ 2
---INS VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(accessor); @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5389 @LENGTH@ 91
------INS SimpleType@@org.springframework.data.mongodb.core.query.Query @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(accessor); @AT@ 5389 @LENGTH@ 49
------INS VariableDeclarationFragment@@query=mongoQuery.createQuery(accessor) @TO@ VariableDeclarationStatement@@org.springframework.data.mongodb.core.query.Query query=mongoQuery.createQuery(accessor); @AT@ 5439 @LENGTH@ 40
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(accessor) @AT@ 5439 @LENGTH@ 5
---------INS MethodInvocation@@mongoQuery.createQuery(accessor) @TO@ VariableDeclarationFragment@@query=mongoQuery.createQuery(accessor) @AT@ 5447 @LENGTH@ 32
------------INS SimpleName@@Name:mongoQuery @TO@ MethodInvocation@@mongoQuery.createQuery(accessor) @AT@ 5447 @LENGTH@ 10
------------INS SimpleName@@MethodName:createQuery:[accessor] @TO@ MethodInvocation@@mongoQuery.createQuery(accessor) @AT@ 5458 @LENGTH@ 21
---------------INS SimpleName@@accessor @TO@ SimpleName@@MethodName:createQuery:[accessor] @AT@ 5470 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject(),is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject())) @TO@ MethodDeclaration@@public, void, MethodName:bindsDbrefCorrectly, Exception,  @AT@ 5483 @LENGTH@ 111
------INS MethodInvocation@@assertThat(query.getQueryObject(),is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getQueryObject(),is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject())) @AT@ 5483 @LENGTH@ 110
---------INS SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject())] @TO@ MethodInvocation@@assertThat(query.getQueryObject(),is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject())) @AT@ 5483 @LENGTH@ 110
------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject())] @AT@ 5494 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 5494 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 5500 @LENGTH@ 16
------------INS MethodInvocation@@is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject()) @TO@ SimpleName@@MethodName:assertThat:[query.getQueryObject(), is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject())] @AT@ 5518 @LENGTH@ 74
---------------INS SimpleName@@MethodName:is:[new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject()] @TO@ MethodInvocation@@is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject()) @AT@ 5518 @LENGTH@ 74
------------------INS MethodInvocation@@new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject() @TO@ SimpleName@@MethodName:is:[new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject()] @AT@ 5521 @LENGTH@ 70
---------------------INS ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @TO@ MethodInvocation@@new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject() @AT@ 5521 @LENGTH@ 53
------------------------INS New@@new @TO@ ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @AT@ 5521 @LENGTH@ 3
------------------------INS SimpleType@@BasicQuery @TO@ ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @AT@ 5525 @LENGTH@ 10
------------------------INS StringLiteral@@"{ fans : { $not : { $size : 0 } } }" @TO@ ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @AT@ 5536 @LENGTH@ 37
---------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject() @AT@ 5575 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:[new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject()] @TO@ MethodInvocation@@is(new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject()) @AT@ 5518 @LENGTH@ 74
------------------INS MethodInvocation@@new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject() @TO@ SimpleName@@MethodName:is:[new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject()] @AT@ 5521 @LENGTH@ 70
---------------------INS ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @TO@ MethodInvocation@@new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject() @AT@ 5521 @LENGTH@ 53
------------------------INS New@@new @TO@ ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @AT@ 5521 @LENGTH@ 3
------------------------INS SimpleType@@BasicQuery @TO@ ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @AT@ 5525 @LENGTH@ 10
------------------------INS StringLiteral@@"{ fans : { $not : { $size : 0 } } }" @TO@ ClassInstanceCreation@@BasicQuery["{ fans : { $not : { $size : 0 } } }"] @AT@ 5536 @LENGTH@ 37
---------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@new BasicQuery("{ fans : { $not : { $size : 0 } } }").getQueryObject() @AT@ 5575 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:ProtocolLogger.CONNECTION_LOGGER.debugf("Operation (%d) cancelled",operationId) @TO@ MethodDeclaration@@public, void, MethodName:cancel,  @AT@ 10886 @LENGTH@ 81
---INS MethodInvocation@@ProtocolLogger.CONNECTION_LOGGER.debugf("Operation (%d) cancelled",operationId) @TO@ ExpressionStatement@@MethodInvocation:ProtocolLogger.CONNECTION_LOGGER.debugf("Operation (%d) cancelled",operationId) @AT@ 10886 @LENGTH@ 80
------INS QualifiedName@@Name:ProtocolLogger.CONNECTION_LOGGER @TO@ MethodInvocation@@ProtocolLogger.CONNECTION_LOGGER.debugf("Operation (%d) cancelled",operationId) @AT@ 10886 @LENGTH@ 32
------INS SimpleName@@MethodName:debugf:["Operation (%d) cancelled", operationId] @TO@ MethodInvocation@@ProtocolLogger.CONNECTION_LOGGER.debugf("Operation (%d) cancelled",operationId) @AT@ 10919 @LENGTH@ 47
---------INS StringLiteral@@"Operation (%d) cancelled" @TO@ SimpleName@@MethodName:debugf:["Operation (%d) cancelled", operationId] @AT@ 10926 @LENGTH@ 26
---------INS SimpleName@@operationId @TO@ SimpleName@@MethodName:debugf:["Operation (%d) cancelled", operationId] @AT@ 10954 @LENGTH@ 11


DEL VariableDeclarationStatement@@Set<ContainerProxy> containers=null; @AT@ 1940 @LENGTH@ 38
---DEL ParameterizedType@@Set<ContainerProxy> @AT@ 1940 @LENGTH@ 19
------DEL SimpleType@@Set @AT@ 1940 @LENGTH@ 3
------DEL SimpleType@@ContainerProxy @AT@ 1944 @LENGTH@ 14
---DEL VariableDeclarationFragment@@containers=null @AT@ 1960 @LENGTH@ 17
------DEL SimpleName@@containers @AT@ 1960 @LENGTH@ 10
------DEL NullLiteral@@null @AT@ 1973 @LENGTH@ 4


INS ExpressionStatement@@SuperMethodInvocation:super.doStop() @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 2757 @LENGTH@ 15
---INS SuperMethodInvocation@@super.doStop() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doStop() @AT@ 2757 @LENGTH@ 14
------INS SimpleName@@MethodName:doStop:[] @TO@ SuperMethodInvocation@@super.doStop() @AT@ 2763 @LENGTH@ 6


UPD IfStatement@@if (xsltBuilder.isXalanTransformer(xsltBuilder.getTemplate().newTransformer())) {  return;} @TO@ if (xsltBuilder.isXalanTransformer(xsltBuilder.getConverter().getTransformerFactory().newTransformer())) {  return;} @AT@ 1543 @LENGTH@ 111
---UPD MethodInvocation@@xsltBuilder.isXalanTransformer(xsltBuilder.getTemplate().newTransformer()) @TO@ xsltBuilder.isXalanTransformer(xsltBuilder.getConverter().getTransformerFactory().newTransformer()) @AT@ 1547 @LENGTH@ 74
------UPD SimpleName@@MethodName:isXalanTransformer:[xsltBuilder.getTemplate().newTransformer()] @TO@ MethodName:isXalanTransformer:[xsltBuilder.getConverter().getTransformerFactory().newTransformer()] @AT@ 1559 @LENGTH@ 62
---------UPD MethodInvocation@@xsltBuilder.getTemplate().newTransformer() @TO@ xsltBuilder.getConverter().getTransformerFactory().newTransformer() @AT@ 1578 @LENGTH@ 42
------------UPD MethodInvocation@@MethodName:getTemplate:[] @TO@ MethodName:getConverter:[] @AT@ 1578 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:getTransformerFactory:[] @TO@ MethodInvocation@@xsltBuilder.getTemplate().newTransformer() @AT@ 1578 @LENGTH@ 50


INS ExpressionStatement@@MethodInvocation:persistentAttributeTypes.put(ELEMENT_COLLECTION,null) @TO@ Initializer@@Initializer @AT@ 4847 @LENGTH@ 55
---INS MethodInvocation@@persistentAttributeTypes.put(ELEMENT_COLLECTION,null) @TO@ ExpressionStatement@@MethodInvocation:persistentAttributeTypes.put(ELEMENT_COLLECTION,null) @AT@ 4847 @LENGTH@ 54
------INS SimpleName@@Name:persistentAttributeTypes @TO@ MethodInvocation@@persistentAttributeTypes.put(ELEMENT_COLLECTION,null) @AT@ 4847 @LENGTH@ 24
------INS SimpleName@@MethodName:put:[ELEMENT_COLLECTION, null] @TO@ MethodInvocation@@persistentAttributeTypes.put(ELEMENT_COLLECTION,null) @AT@ 4872 @LENGTH@ 29
---------INS SimpleName@@ELEMENT_COLLECTION @TO@ SimpleName@@MethodName:put:[ELEMENT_COLLECTION, null] @AT@ 4876 @LENGTH@ 18
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:put:[ELEMENT_COLLECTION, null] @AT@ 4896 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:rendersCorrectSearchLinksForPersons,  @TO@ public, void, MethodName:rendersCorrectSearchLinksForPersons, Exception,  @AT@ 2074 @LENGTH@ 712
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:rendersCorrectSearchLinksForPersons,  @AT@ 2131 @LENGTH@ 9


UPD VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,1).withName("node").withProfiles("jboss-fuse-full").assertProvisioningResult().build(); @TO@ Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy,1).withJvmOpts("-Xmx512m -XX:MaxPermSize=128m").withName("node").withProfiles("jboss-fuse-full").assertProvisioningResult().build(); @AT@ 2391 @LENGTH@ 157
---UPD VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy,1).withName("node").withProfiles("jboss-fuse-full").assertProvisioningResult().build() @TO@ containers=ContainerBuilder.create(fabricProxy,1).withJvmOpts("-Xmx512m -XX:MaxPermSize=128m").withName("node").withProfiles("jboss-fuse-full").assertProvisioningResult().build() @AT@ 2411 @LENGTH@ 136
------UPD MethodInvocation@@ContainerBuilder.create(fabricProxy,1).withName("node").withProfiles("jboss-fuse-full").assertProvisioningResult().build() @TO@ ContainerBuilder.create(fabricProxy,1).withJvmOpts("-Xmx512m -XX:MaxPermSize=128m").withName("node").withProfiles("jboss-fuse-full").assertProvisioningResult().build() @AT@ 2424 @LENGTH@ 123
---------INS MethodInvocation@@MethodName:withJvmOpts:["-Xmx512m -XX:MaxPermSize=128m"] @TO@ MethodInvocation@@ContainerBuilder.create(fabricProxy,1).withName("node").withProfiles("jboss-fuse-full").assertProvisioningResult().build() @AT@ 2424 @LENGTH@ 84
------------INS StringLiteral@@"-Xmx512m -XX:MaxPermSize=128m" @TO@ MethodInvocation@@MethodName:withJvmOpts:["-Xmx512m -XX:MaxPermSize=128m"] @AT@ 2476 @LENGTH@ 31


UPD VariableDeclarationStatement@@final ServiceController<?> endpointService=CurrentServiceContainer.getServiceContainer().getService(serviceName); @TO@ final ServiceController<?> endpointService=currentServiceContainer().getService(serviceName); @AT@ 11434 @LENGTH@ 115
---UPD VariableDeclarationFragment@@endpointService=CurrentServiceContainer.getServiceContainer().getService(serviceName) @TO@ endpointService=currentServiceContainer().getService(serviceName) @AT@ 11461 @LENGTH@ 87
------UPD MethodInvocation@@CurrentServiceContainer.getServiceContainer().getService(serviceName) @TO@ currentServiceContainer().getService(serviceName) @AT@ 11479 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodName:currentServiceContainer:[] @AT@ 11479 @LENGTH@ 45
---------DEL SimpleName@@Name:CurrentServiceContainer @AT@ 11479 @LENGTH@ 23


UPD VariableDeclarationStatement@@InputStreamReader is=new InputStreamReader(new FileInputStream(propertiesFile),Charset.forName("UTF-8")); @TO@ InputStreamReader is=new InputStreamReader(new FileInputStream(propertiesFile),StandardCharsets.UTF_8); @AT@ 5402 @LENGTH@ 108
---UPD VariableDeclarationFragment@@is=new InputStreamReader(new FileInputStream(propertiesFile),Charset.forName("UTF-8")) @TO@ is=new InputStreamReader(new FileInputStream(propertiesFile),StandardCharsets.UTF_8) @AT@ 5420 @LENGTH@ 89
------UPD ClassInstanceCreation@@InputStreamReader[new FileInputStream(propertiesFile), Charset.forName("UTF-8")] @TO@ InputStreamReader[new FileInputStream(propertiesFile), StandardCharsets.UTF_8] @AT@ 5425 @LENGTH@ 84
---------DEL MethodInvocation@@Charset.forName("UTF-8") @AT@ 5484 @LENGTH@ 24
------------DEL SimpleName@@Name:Charset @AT@ 5484 @LENGTH@ 7
------------DEL SimpleName@@MethodName:forName:["UTF-8"] @AT@ 5492 @LENGTH@ 16
---------------DEL StringLiteral@@"UTF-8" @AT@ 5500 @LENGTH@ 7
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@InputStreamReader[new FileInputStream(propertiesFile), Charset.forName("UTF-8")] @AT@ 5493 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5493 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 5510 @LENGTH@ 5


UPD VariableDeclarationStatement@@final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()); @TO@ final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)); @AT@ 5405 @LENGTH@ 149
---UPD VariableDeclarationFragment@@transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ transport=SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 5443 @LENGTH@ 110
------UPD MethodInvocation@@SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase()) @TO@ SyslogAuditLogHandler.Transport.valueOf(protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 5455 @LENGTH@ 98
---------UPD SimpleName@@MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase()] @TO@ MethodName:valueOf:[protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH)] @AT@ 5487 @LENGTH@ 66
------------UPD MethodInvocation@@protocolAddress.getLastElement().getValue().toUpperCase() @TO@ protocolAddress.getLastElement().getValue().toUpperCase(Locale.ENGLISH) @AT@ 5495 @LENGTH@ 57
---------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 5539 @LENGTH@ 13
------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 5576 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 5576 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 5583 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[@SuppressWarnings("unused"), private, static]EverythingIsLostException, Exception @AT@ 4693 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 4693 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 4701 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 4708 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 4714 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 4719 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 4719 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 4738 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ MethodInvocation:AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(GlobalComponentRegistryService.getServiceName(containerName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3295 @LENGTH@ 363
---UPD MethodInvocation@@AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @TO@ AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(GlobalComponentRegistryService.getServiceName(containerName)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3295 @LENGTH@ 353
------INS MethodInvocation@@MethodName:addDependency:[GlobalComponentRegistryService.getServiceName(containerName)] @TO@ MethodInvocation@@AsynchronousService.addService(target,cacheServiceName,new CacheService<>(cacheName,dependencies)).addDependency(cacheConfigurationServiceName).addDependency(containerServiceName,EmbeddedCacheManager.class,cacheContainer).setInitialMode(ServiceController.Mode.ON_DEMAND).install() @AT@ 3379 @LENGTH@ 194
---------INS MethodInvocation@@GlobalComponentRegistryService.getServiceName(containerName) @TO@ MethodInvocation@@MethodName:addDependency:[GlobalComponentRegistryService.getServiceName(containerName)] @AT@ 3512 @LENGTH@ 60
------------INS SimpleName@@Name:GlobalComponentRegistryService @TO@ MethodInvocation@@GlobalComponentRegistryService.getServiceName(containerName) @AT@ 3512 @LENGTH@ 30
------------INS SimpleName@@MethodName:getServiceName:[containerName] @TO@ MethodInvocation@@GlobalComponentRegistryService.getServiceName(containerName) @AT@ 3543 @LENGTH@ 29
---------------INS SimpleName@@containerName @TO@ SimpleName@@MethodName:getServiceName:[containerName] @AT@ 3558 @LENGTH@ 13


INS MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @TO@ TypeDeclaration@@[public, final]JmsMessageHelper,  @AT@ 6409 @LENGTH@ 247
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @AT@ 6409 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @AT@ 6416 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @AT@ 6423 @LENGTH@ 7
---INS SimpleName@@MethodName:isQueuePrefix @TO@ MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @AT@ 6431 @LENGTH@ 13
---INS SingleVariableDeclaration@@String destination @TO@ MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @AT@ 6445 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String destination @AT@ 6445 @LENGTH@ 6
------INS SimpleName@@destination @TO@ SingleVariableDeclaration@@String destination @AT@ 6452 @LENGTH@ 11
---INS IfStatement@@if (ObjectHelper.isEmpty(destination)) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @AT@ 6475 @LENGTH@ 76
------INS MethodInvocation@@ObjectHelper.isEmpty(destination) @TO@ IfStatement@@if (ObjectHelper.isEmpty(destination)) {  return false;} @AT@ 6479 @LENGTH@ 33
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(destination) @AT@ 6479 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[destination] @TO@ MethodInvocation@@ObjectHelper.isEmpty(destination) @AT@ 6492 @LENGTH@ 20
------------INS SimpleName@@destination @TO@ SimpleName@@MethodName:isEmpty:[destination] @AT@ 6500 @LENGTH@ 11
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (ObjectHelper.isEmpty(destination)) {  return false;} @AT@ 6514 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 6528 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 6535 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX) @TO@ MethodDeclaration@@public, static, boolean, MethodName:isQueuePrefix, String destination,  @AT@ 6561 @LENGTH@ 89
------INS InfixExpression@@destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX) @TO@ ReturnStatement@@InfixExpression:destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX) @AT@ 6568 @LENGTH@ 81
---------INS MethodInvocation@@destination.startsWith(QUEUE_PREFIX) @TO@ InfixExpression@@destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX) @AT@ 6568 @LENGTH@ 36
------------INS SimpleName@@Name:destination @TO@ MethodInvocation@@destination.startsWith(QUEUE_PREFIX) @AT@ 6568 @LENGTH@ 11
------------INS SimpleName@@MethodName:startsWith:[QUEUE_PREFIX] @TO@ MethodInvocation@@destination.startsWith(QUEUE_PREFIX) @AT@ 6580 @LENGTH@ 24
---------------INS SimpleName@@QUEUE_PREFIX @TO@ SimpleName@@MethodName:startsWith:[QUEUE_PREFIX] @AT@ 6591 @LENGTH@ 12
---------INS Operator@@|| @TO@ InfixExpression@@destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX) @AT@ 6604 @LENGTH@ 2
---------INS MethodInvocation@@destination.startsWith(TEMP_QUEUE_PREFIX) @TO@ InfixExpression@@destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX) @AT@ 6608 @LENGTH@ 41
------------INS SimpleName@@Name:destination @TO@ MethodInvocation@@destination.startsWith(TEMP_QUEUE_PREFIX) @AT@ 6608 @LENGTH@ 11
------------INS SimpleName@@MethodName:startsWith:[TEMP_QUEUE_PREFIX] @TO@ MethodInvocation@@destination.startsWith(TEMP_QUEUE_PREFIX) @AT@ 6620 @LENGTH@ 29
---------------INS SimpleName@@TEMP_QUEUE_PREFIX @TO@ SimpleName@@MethodName:startsWith:[TEMP_QUEUE_PREFIX] @AT@ 6631 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:multiplyDestructive, Decimal128 right, short newScale,  @TO@ public, void, MethodName:multiplyDestructiveNativeDecimal128, Decimal128 right, short newScale,  @AT@ 32209 @LENGTH@ 1490
---UPD SimpleName@@MethodName:multiplyDestructive @TO@ MethodName:multiplyDestructiveNativeDecimal128 @AT@ 32221 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:merger.merge(incoming,existingDomainObject,DomainObjectMerger.MergeNullPolicy.APPLY_NULLS) @TO@ MethodInvocation:merger.merge(incoming,existingDomainObject,APPLY_NULLS) @AT@ 2931 @LENGTH@ 93
---UPD MethodInvocation@@merger.merge(incoming,existingDomainObject,DomainObjectMerger.MergeNullPolicy.APPLY_NULLS) @TO@ merger.merge(incoming,existingDomainObject,APPLY_NULLS) @AT@ 2931 @LENGTH@ 92
------UPD SimpleName@@MethodName:merge:[incoming, existingDomainObject, DomainObjectMerger.MergeNullPolicy.APPLY_NULLS] @TO@ MethodName:merge:[incoming, existingDomainObject, APPLY_NULLS] @AT@ 2938 @LENGTH@ 85
---------DEL QualifiedName@@DomainObjectMerger.MergeNullPolicy.APPLY_NULLS @AT@ 2976 @LENGTH@ 46
------------DEL QualifiedName@@DomainObjectMerger.MergeNullPolicy @AT@ 2976 @LENGTH@ 34
---------------DEL SimpleName@@DomainObjectMerger @AT@ 2976 @LENGTH@ 18
---------------DEL SimpleName@@MergeNullPolicy @AT@ 2995 @LENGTH@ 15
------------DEL SimpleName@@APPLY_NULLS @AT@ 3011 @LENGTH@ 11
---------INS SimpleName@@APPLY_NULLS @TO@ SimpleName@@MethodName:merge:[incoming, existingDomainObject, DomainObjectMerger.MergeNullPolicy.APPLY_NULLS] @AT@ 3039 @LENGTH@ 11


INS IfStatement@@if (getReadPreference() == null) {  String msg="Could not resolve specified ReadPreference of type " + readPreference + ". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.";  throw new IllegalArgumentException(msg);} @TO@ MethodDeclaration@@public, void, MethodName:setReadPreference, String readPreference,  @AT@ 16603 @LENGTH@ 300
---INS InfixExpression@@getReadPreference() == null @TO@ IfStatement@@if (getReadPreference() == null) {  String msg="Could not resolve specified ReadPreference of type " + readPreference + ". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.";  throw new IllegalArgumentException(msg);} @AT@ 16607 @LENGTH@ 27
------INS MethodInvocation@@MethodName:getReadPreference:[] @TO@ InfixExpression@@getReadPreference() == null @AT@ 16607 @LENGTH@ 19
------INS Operator@@== @TO@ InfixExpression@@getReadPreference() == null @AT@ 16626 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@getReadPreference() == null @AT@ 16630 @LENGTH@ 4
---INS Block@@ThenBody:{  String msg="Could not resolve specified ReadPreference of type " + readPreference + ". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.";  throw new IllegalArgumentException(msg);} @TO@ IfStatement@@if (getReadPreference() == null) {  String msg="Could not resolve specified ReadPreference of type " + readPreference + ". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.";  throw new IllegalArgumentException(msg);} @AT@ 16636 @LENGTH@ 267
------MOV VariableDeclarationStatement@@String msg="Could not resolve specified ReadPreference of type " + readPreference + ". Read preferences are resolved from inner classes of com.mongodb.ReadPreference."; @TO@ Block@@ThenBody:{  String msg="Could not resolve specified ReadPreference of type " + readPreference + ". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.";  throw new IllegalArgumentException(msg);} @AT@ 16459 @LENGTH@ 186
------MOV ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(msg) @TO@ Block@@ThenBody:{  String msg="Could not resolve specified ReadPreference of type " + readPreference + ". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.";  throw new IllegalArgumentException(msg);} @AT@ 16654 @LENGTH@ 40


UPD IfStatement@@if (address.size() == 3) {  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @TO@ if (address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41719 @LENGTH@ 956
---UPD InfixExpression@@address.size() == 3 @TO@ address.size() >= 3 @AT@ 41723 @LENGTH@ 19
---UPD Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @TO@ ThenBody:{  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41744 @LENGTH@ 931
---MOV InfixExpression@@address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT) @TO@ IfStatement@@if (address.size() == 3) {  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 41766 @LENGTH@ 95
------INS InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @TO@ InfixExpression@@address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT) @AT@ 41677 @LENGTH@ 68
---------INS InfixExpression@@address.size() >= 2 @TO@ InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @AT@ 41677 @LENGTH@ 19
------------INS MethodInvocation@@address.size() @TO@ InfixExpression@@address.size() >= 2 @AT@ 41677 @LENGTH@ 14
---------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.size() @AT@ 41677 @LENGTH@ 7
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@address.size() @AT@ 41685 @LENGTH@ 6
------------INS Operator@@>= @TO@ InfixExpression@@address.size() >= 2 @AT@ 41691 @LENGTH@ 2
------------INS NumberLiteral@@2 @TO@ InfixExpression@@address.size() >= 2 @AT@ 41695 @LENGTH@ 1
---------MOV MethodInvocation@@address.getElement(1).getKey().equals(ACCESS) @TO@ InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @AT@ 41766 @LENGTH@ 45
---------MOV Operator@@&& @TO@ InfixExpression@@address.size() >= 2 && address.getElement(1).getKey().equals(ACCESS) @AT@ 41811 @LENGTH@ 2
------INS Operator@@&& @TO@ InfixExpression@@address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT) @AT@ 41745 @LENGTH@ 2
---INS Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @TO@ IfStatement@@if (address.size() == 3) {  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 41797 @LENGTH@ 1895
------MOV VariableDeclarationStatement@@ModelNode op=operation.clone(); @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41673 @LENGTH@ 33
------INS ExpressionStatement@@MethodInvocation:op.get(OP_ADDR).set(address.toModelNode()) @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41865 @LENGTH@ 43
---------INS MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @TO@ ExpressionStatement@@MethodInvocation:op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41865 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:get:[OP_ADDR] @TO@ MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41865 @LENGTH@ 15
---------------INS SimpleName@@OP_ADDR @TO@ MethodInvocation@@MethodName:get:[OP_ADDR] @AT@ 41872 @LENGTH@ 7
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41865 @LENGTH@ 2
------------INS SimpleName@@MethodName:set:[address.toModelNode()] @TO@ MethodInvocation@@op.get(OP_ADDR).set(address.toModelNode()) @AT@ 41881 @LENGTH@ 26
---------------INS MethodInvocation@@address.toModelNode() @TO@ SimpleName@@MethodName:set:[address.toModelNode()] @AT@ 41885 @LENGTH@ 21
------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.toModelNode() @AT@ 41885 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toModelNode:[] @TO@ MethodInvocation@@address.toModelNode() @AT@ 41893 @LENGTH@ 13
------INS IfStatement@@if (address.size() >= 3) {  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41925 @LENGTH@ 938
---------MOV InfixExpression@@address.size() == 3 @TO@ IfStatement@@if (address.size() >= 3) {  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41723 @LENGTH@ 19
------------UPD Operator@@== @TO@ >= @AT@ 41737 @LENGTH@ 2
---------MOV Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @TO@ IfStatement@@if (address.size() >= 3) {  PathAddress newAddr=PathAddress.EMPTY_ADDRESS;  for (  PathElement element : address) {    if (element.getKey().equals(LOGGER)) {      return Collections.emptyMap();    } else {      PathElement myElement=element;      if (myElement.getKey().equals(SERVER_LOGGER)) {        myElement=PathElement.pathElement(LOGGER,element.getValue());      }      newAddr=newAddr.append(myElement);    }  }  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41744 @LENGTH@ 931
------------DEL IfStatement@@if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {  String key=address.getElement(2).getKey();  if (key.equals(LOGGER)) {    return Collections.emptyMap();  } else   if (key.equals(SERVER_LOGGER)) {    PathAddress newAddr=address.subAddress(0,2);    newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41762 @LENGTH@ 899
---------------DEL Block@@ThenBody:{  String key=address.getElement(2).getKey();  if (key.equals(LOGGER)) {    return Collections.emptyMap();  } else   if (key.equals(SERVER_LOGGER)) {    PathAddress newAddr=address.subAddress(0,2);    newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 41863 @LENGTH@ 798
------------------DEL IfStatement@@if (key.equals(LOGGER)) {  return Collections.emptyMap();} else if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 41950 @LENGTH@ 578
------------MOV VariableDeclarationStatement@@String key=address.getElement(2).getKey(); @TO@ Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 41885 @LENGTH@ 44
---------------UPD SimpleType@@String @TO@ PathAddress @AT@ 41885 @LENGTH@ 6
---------------UPD VariableDeclarationFragment@@key=address.getElement(2).getKey() @TO@ newAddr=PathAddress.EMPTY_ADDRESS @AT@ 41892 @LENGTH@ 36
------------------UPD SimpleName@@key @TO@ newAddr @AT@ 41892 @LENGTH@ 3
------------------DEL MethodInvocation@@address.getElement(2).getKey() @AT@ 41898 @LENGTH@ 30
---------------------DEL MethodInvocation@@MethodName:getElement:[2] @AT@ 41898 @LENGTH@ 21
------------------------DEL NumberLiteral@@2 @AT@ 41917 @LENGTH@ 1
---------------------DEL SimpleName@@Name:address @AT@ 41898 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getKey:[] @AT@ 41920 @LENGTH@ 8
------------------INS QualifiedName@@PathAddress.EMPTY_ADDRESS @TO@ VariableDeclarationFragment@@key=address.getElement(2).getKey() @AT@ 41994 @LENGTH@ 25
---------------------INS SimpleName@@PathAddress @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 41994 @LENGTH@ 11
---------------------INS SimpleName@@EMPTY_ADDRESS @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 42006 @LENGTH@ 13
------------INS EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @TO@ Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 42041 @LENGTH@ 740
---------------INS SingleVariableDeclaration@@PathElement element @TO@ EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @AT@ 42046 @LENGTH@ 19
------------------INS SimpleType@@PathElement @TO@ SingleVariableDeclaration@@PathElement element @AT@ 42046 @LENGTH@ 11
------------------INS SimpleName@@element @TO@ SingleVariableDeclaration@@PathElement element @AT@ 42058 @LENGTH@ 7
---------------INS SimpleName@@address @TO@ EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @AT@ 42068 @LENGTH@ 7
---------------INS IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @TO@ EnhancedForStatement@@for (PathElement element : address) {  if (element.getKey().equals(LOGGER)) {    return Collections.emptyMap();  } else {    PathElement myElement=element;    if (myElement.getKey().equals(SERVER_LOGGER)) {      myElement=PathElement.pathElement(LOGGER,element.getValue());    }    newAddr=newAddr.append(myElement);  }} @AT@ 42103 @LENGTH@ 656
------------------MOV MethodInvocation@@key.equals(LOGGER) @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41954 @LENGTH@ 18
---------------------UPD SimpleName@@Name:key @TO@ Name:element @AT@ 41954 @LENGTH@ 3
---------------------INS MethodInvocation@@MethodName:getKey:[] @TO@ MethodInvocation@@key.equals(LOGGER) @AT@ 42107 @LENGTH@ 16
------------------MOV MethodInvocation@@key.equals(LOGGER) @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41954 @LENGTH@ 18
---------------------UPD SimpleName@@Name:key @TO@ Name:element @AT@ 41954 @LENGTH@ 3
---------------------INS MethodInvocation@@MethodName:getKey:[] @TO@ MethodInvocation@@key.equals(LOGGER) @AT@ 42107 @LENGTH@ 16
------------------MOV Block@@ThenBody:{  return Collections.emptyMap();} @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41974 @LENGTH@ 141
------------------MOV Block@@ThenBody:{  return Collections.emptyMap();} @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 41974 @LENGTH@ 141
------------------MOV Block@@ElseBody:if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @TO@ IfStatement@@if (element.getKey().equals(LOGGER)) {  return Collections.emptyMap();} else {  PathElement myElement=element;  if (myElement.getKey().equals(SERVER_LOGGER)) {    myElement=PathElement.pathElement(LOGGER,element.getValue());  }  newAddr=newAddr.append(myElement);} @AT@ 42121 @LENGTH@ 407
---------------------INS VariableDeclarationStatement@@PathElement myElement=element; @TO@ Block@@ElseBody:if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 42329 @LENGTH@ 32
------------------------INS SimpleType@@PathElement @TO@ VariableDeclarationStatement@@PathElement myElement=element; @AT@ 42329 @LENGTH@ 11
------------------------INS VariableDeclarationFragment@@myElement=element @TO@ VariableDeclarationStatement@@PathElement myElement=element; @AT@ 42341 @LENGTH@ 19
---------------------------INS SimpleName@@myElement @TO@ VariableDeclarationFragment@@myElement=element @AT@ 42341 @LENGTH@ 9
---------------------------INS SimpleName@@element @TO@ VariableDeclarationFragment@@myElement=element @AT@ 42353 @LENGTH@ 7
---------------------INS ExpressionStatement@@Assignment:newAddr=newAddr.append(myElement) @TO@ Block@@ElseBody:if (key.equals(SERVER_LOGGER)) {  PathAddress newAddr=address.subAddress(0,2);  newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));  op.get(OP_ADDR).set(newAddr.toModelNode());} @AT@ 42697 @LENGTH@ 36
------------------------INS Assignment@@newAddr=newAddr.append(myElement) @TO@ ExpressionStatement@@Assignment:newAddr=newAddr.append(myElement) @AT@ 42697 @LENGTH@ 35
---------------------------INS SimpleName@@newAddr @TO@ Assignment@@newAddr=newAddr.append(myElement) @AT@ 42697 @LENGTH@ 7
---------------------------INS Operator@@= @TO@ Assignment@@newAddr=newAddr.append(myElement) @AT@ 42704 @LENGTH@ 1
---------------------------INS MethodInvocation@@newAddr.append(myElement) @TO@ Assignment@@newAddr=newAddr.append(myElement) @AT@ 42707 @LENGTH@ 25
------------------------------INS SimpleName@@Name:newAddr @TO@ MethodInvocation@@newAddr.append(myElement) @AT@ 42707 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:append:[myElement] @TO@ MethodInvocation@@newAddr.append(myElement) @AT@ 42715 @LENGTH@ 17
---------------------------------INS SimpleName@@myElement @TO@ SimpleName@@MethodName:append:[myElement] @AT@ 42722 @LENGTH@ 9
------------MOV ExpressionStatement@@MethodInvocation:op.get(OP_ADDR).set(newAddr.toModelNode()) @TO@ Block@@ThenBody:{  if (address.getElement(1).getKey().equals(ACCESS) && address.getElement(1).getValue().equals(AUDIT)) {    String key=address.getElement(2).getKey();    if (key.equals(LOGGER)) {      return Collections.emptyMap();    } else     if (key.equals(SERVER_LOGGER)) {      PathAddress newAddr=address.subAddress(0,2);      newAddr=newAddr.append(PathElement.pathElement(LOGGER,address.getElement(2).getValue()));      op.get(OP_ADDR).set(newAddr.toModelNode());    }    return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);  }} @AT@ 42463 @LENGTH@ 43
------MOV ReturnStatement@@MethodInvocation:Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op) @TO@ Block@@ThenBody:{  ModelNode op=operation.clone();  op.get(OP_ADDR).set(address.toModelNode());  if (address.size() >= 3) {    PathAddress newAddr=PathAddress.EMPTY_ADDRESS;    for (    PathElement element : address) {      if (element.getKey().equals(LOGGER)) {        return Collections.emptyMap();      } else {        PathElement myElement=element;        if (myElement.getKey().equals(SERVER_LOGGER)) {          myElement=PathElement.pathElement(LOGGER,element.getValue());        }        newAddr=newAddr.append(myElement);      }    }    op.get(OP_ADDR).set(newAddr.toModelNode());  }  return Collections.singletonMap(getAllRunningServers(host,localHostName,serverProxies),op);} @AT@ 42549 @LENGTH@ 94


UPD ExpressionStatement@@MethodInvocation:log.warn("access-control/default is missing operations: " + accessControl) @TO@ MethodInvocation:log.warn("access-control/default is missing operations: " + defaults) @AT@ 2298 @LENGTH@ 75
---UPD MethodInvocation@@log.warn("access-control/default is missing operations: " + accessControl) @TO@ log.warn("access-control/default is missing operations: " + defaults) @AT@ 2298 @LENGTH@ 74
------UPD SimpleName@@MethodName:warn:["access-control/default is missing operations: " + accessControl] @TO@ MethodName:warn:["access-control/default is missing operations: " + defaults] @AT@ 2302 @LENGTH@ 70
---------UPD InfixExpression@@"access-control/default is missing operations: " + accessControl @TO@ "access-control/default is missing operations: " + defaults @AT@ 2307 @LENGTH@ 64
------------UPD SimpleName@@accessControl @TO@ defaults @AT@ 2358 @LENGTH@ 13


UPD TypeDeclaration@@[final]JoinAction, AbstractAction @TO@ [@Command(name="join",scope="fabric",description="Join a container to an existing fabric",detailedDescription="classpath:join.txt"), final]JoinAction, AbstractAction @AT@ 1799 @LENGTH@ 10948
---INS NormalAnnotation@@@Command(name="join",scope="fabric",description="Join a container to an existing fabric",detailedDescription="classpath:join.txt") @TO@ TypeDeclaration@@[final]JoinAction, AbstractAction @AT@ 1846 @LENGTH@ 141


DEL VariableDeclarationStatement@@Resource res=TestUtils.writeToFS(cfg,name1); @AT@ 4055 @LENGTH@ 47
---DEL SimpleType@@Resource @AT@ 4055 @LENGTH@ 8
---DEL VariableDeclarationFragment@@res=TestUtils.writeToFS(cfg,name1) @AT@ 4064 @LENGTH@ 37
------DEL SimpleName@@res @AT@ 4064 @LENGTH@ 3


UPD FieldDeclaration@@private, String, [selfNodeName] @TO@ private, final, String, [selfNodeName] @AT@ 3672 @LENGTH@ 28
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [selfNodeName] @AT@ 3681 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:authorizationEndpoint.setImplicitGrantService(getImplicitGrantService()) @TO@ MethodInvocation:authorizationEndpoint.setImplicitGrantService(implicitGrantService()) @AT@ 4868 @LENGTH@ 73
---UPD MethodInvocation@@authorizationEndpoint.setImplicitGrantService(getImplicitGrantService()) @TO@ authorizationEndpoint.setImplicitGrantService(implicitGrantService()) @AT@ 4868 @LENGTH@ 72
------UPD SimpleName@@MethodName:setImplicitGrantService:[getImplicitGrantService()] @TO@ MethodName:setImplicitGrantService:[implicitGrantService()] @AT@ 4890 @LENGTH@ 50
---------UPD MethodInvocation@@MethodName:getImplicitGrantService:[] @TO@ MethodName:implicitGrantService:[] @AT@ 4914 @LENGTH@ 25


UPD VariableDeclarationStatement@@byte[] auth=("fabric:" + curatorConfig.getZookeeperPassword()).getBytes(); @TO@ byte[] auth=("fabric:" + PasswordEncoder.decode(curatorConfig.getZookeeperPassword())).getBytes(); @AT@ 10089 @LENGTH@ 76
---UPD VariableDeclarationFragment@@auth=("fabric:" + curatorConfig.getZookeeperPassword()).getBytes() @TO@ auth=("fabric:" + PasswordEncoder.decode(curatorConfig.getZookeeperPassword())).getBytes() @AT@ 10096 @LENGTH@ 68
------UPD MethodInvocation@@("fabric:" + curatorConfig.getZookeeperPassword()).getBytes() @TO@ ("fabric:" + PasswordEncoder.decode(curatorConfig.getZookeeperPassword())).getBytes() @AT@ 10103 @LENGTH@ 61
---------UPD ParenthesizedExpression@@("fabric:" + curatorConfig.getZookeeperPassword()) @TO@ ("fabric:" + PasswordEncoder.decode(curatorConfig.getZookeeperPassword())) @AT@ 10103 @LENGTH@ 50
------------UPD InfixExpression@@"fabric:" + curatorConfig.getZookeeperPassword() @TO@ "fabric:" + PasswordEncoder.decode(curatorConfig.getZookeeperPassword()) @AT@ 10104 @LENGTH@ 48
---------------DEL MethodInvocation@@curatorConfig.getZookeeperPassword() @AT@ 10116 @LENGTH@ 36
---------------INS MethodInvocation@@PasswordEncoder.decode(curatorConfig.getZookeeperPassword()) @TO@ InfixExpression@@"fabric:" + curatorConfig.getZookeeperPassword() @AT@ 10157 @LENGTH@ 60
------------------INS SimpleName@@Name:PasswordEncoder @TO@ MethodInvocation@@PasswordEncoder.decode(curatorConfig.getZookeeperPassword()) @AT@ 10157 @LENGTH@ 15
------------------INS SimpleName@@MethodName:decode:[curatorConfig.getZookeeperPassword()] @TO@ MethodInvocation@@PasswordEncoder.decode(curatorConfig.getZookeeperPassword()) @AT@ 10173 @LENGTH@ 44
---------------------INS MethodInvocation@@curatorConfig.getZookeeperPassword() @TO@ SimpleName@@MethodName:decode:[curatorConfig.getZookeeperPassword()] @AT@ 10180 @LENGTH@ 36
------------------------MOV SimpleName@@Name:curatorConfig @TO@ MethodInvocation@@curatorConfig.getZookeeperPassword() @AT@ 10116 @LENGTH@ 13
------------------------MOV SimpleName@@MethodName:getZookeeperPassword:[] @TO@ MethodInvocation@@curatorConfig.getZookeeperPassword() @AT@ 10130 @LENGTH@ 22


UPD TryStatement@@try {  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);  boolean existingConnection=TransactionSynchronizationManager.hasResource(factory);  RedisConnection connToUse=preProcessConnection(conn,existingConnection);  boolean pipelineStatus=connToUse.isPipelined();  if (pipeline && !pipelineStatus) {    connToUse.openPipeline();  }  RedisConnection connToExpose=(exposeConnection ? connToUse : createRedisConnectionProxy(connToUse));  T result=action.doInRedis(connToExpose);  if (pipeline && !pipelineStatus) {    connToUse.closePipeline();  }  return postProcessResult(result,connToUse,existingConnection);}  finally {  RedisConnectionUtils.releaseConnection(conn,factory);} @TO@ try {  if (enableTransactionSupport) {    conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);  } else {    conn=RedisConnectionUtils.getConnection(factory);  }  boolean existingConnection=TransactionSynchronizationManager.hasResource(factory);  RedisConnection connToUse=preProcessConnection(conn,existingConnection);  boolean pipelineStatus=connToUse.isPipelined();  if (pipeline && !pipelineStatus) {    connToUse.openPipeline();  }  RedisConnection connToExpose=(exposeConnection ? connToUse : createRedisConnectionProxy(connToUse));  T result=action.doInRedis(connToExpose);  if (pipeline && !pipelineStatus) {    connToUse.closePipeline();  }  return postProcessResult(result,connToUse,existingConnection);}  finally {  if (enableTransactionSupport) {    RedisConnectionUtils.unbindConnection(factory);  } else {    RedisConnectionUtils.releaseConnection(conn,factory);  }} @AT@ 7071 @LENGTH@ 822
---INS IfStatement@@if (enableTransactionSupport) {  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);} else {  conn=RedisConnectionUtils.getConnection(factory);} @TO@ TryStatement@@try {  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);  boolean existingConnection=TransactionSynchronizationManager.hasResource(factory);  RedisConnection connToUse=preProcessConnection(conn,existingConnection);  boolean pipelineStatus=connToUse.isPipelined();  if (pipeline && !pipelineStatus) {    connToUse.openPipeline();  }  RedisConnection connToExpose=(exposeConnection ? connToUse : createRedisConnectionProxy(connToUse));  T result=action.doInRedis(connToExpose);  if (pipeline && !pipelineStatus) {    connToUse.closePipeline();  }  return postProcessResult(result,connToUse,existingConnection);}  finally {  RedisConnectionUtils.releaseConnection(conn,factory);} @AT@ 7081 @LENGTH@ 263
------INS SimpleName@@enableTransactionSupport @TO@ IfStatement@@if (enableTransactionSupport) {  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);} else {  conn=RedisConnectionUtils.getConnection(factory);} @AT@ 7085 @LENGTH@ 24
------INS Block@@ThenBody:{  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);} @TO@ IfStatement@@if (enableTransactionSupport) {  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);} else {  conn=RedisConnectionUtils.getConnection(factory);} @AT@ 7111 @LENGTH@ 165
---------MOV ExpressionStatement@@Assignment:conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport) @TO@ Block@@ThenBody:{  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);} @AT@ 7080 @LENGTH@ 78
------INS Block@@ElseBody:{  conn=RedisConnectionUtils.getConnection(factory);} @TO@ IfStatement@@if (enableTransactionSupport) {  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);} else {  conn=RedisConnectionUtils.getConnection(factory);} @AT@ 7282 @LENGTH@ 62
---------INS ExpressionStatement@@Assignment:conn=RedisConnectionUtils.getConnection(factory) @TO@ Block@@ElseBody:{  conn=RedisConnectionUtils.getConnection(factory);} @AT@ 7288 @LENGTH@ 51
------------INS Assignment@@conn=RedisConnectionUtils.getConnection(factory) @TO@ ExpressionStatement@@Assignment:conn=RedisConnectionUtils.getConnection(factory) @AT@ 7288 @LENGTH@ 50
---------------INS SimpleName@@conn @TO@ Assignment@@conn=RedisConnectionUtils.getConnection(factory) @AT@ 7288 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@conn=RedisConnectionUtils.getConnection(factory) @AT@ 7292 @LENGTH@ 1
---------------INS MethodInvocation@@RedisConnectionUtils.getConnection(factory) @TO@ Assignment@@conn=RedisConnectionUtils.getConnection(factory) @AT@ 7295 @LENGTH@ 43
------------------INS SimpleName@@Name:RedisConnectionUtils @TO@ MethodInvocation@@RedisConnectionUtils.getConnection(factory) @AT@ 7295 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getConnection:[factory] @TO@ MethodInvocation@@RedisConnectionUtils.getConnection(factory) @AT@ 7316 @LENGTH@ 22
---------------------INS SimpleName@@factory @TO@ SimpleName@@MethodName:getConnection:[factory] @AT@ 7330 @LENGTH@ 7
---UPD Block@@FinallyBody:{  RedisConnectionUtils.releaseConnection(conn,factory);} @TO@ ElseBody:{  RedisConnectionUtils.releaseConnection(conn,factory);} @AT@ 7830 @LENGTH@ 63
---INS Block@@FinallyBody:{  if (enableTransactionSupport) {    RedisConnectionUtils.unbindConnection(factory);  } else {    RedisConnectionUtils.releaseConnection(conn,factory);  }} @TO@ TryStatement@@try {  conn=RedisConnectionUtils.bindConnection(factory,enableTransactionSupport);  boolean existingConnection=TransactionSynchronizationManager.hasResource(factory);  RedisConnection connToUse=preProcessConnection(conn,existingConnection);  boolean pipelineStatus=connToUse.isPipelined();  if (pipeline && !pipelineStatus) {    connToUse.openPipeline();  }  RedisConnection connToExpose=(exposeConnection ? connToUse : createRedisConnectionProxy(connToUse));  T result=action.doInRedis(connToExpose);  if (pipeline && !pipelineStatus) {    connToUse.closePipeline();  }  return postProcessResult(result,connToUse,existingConnection);}  finally {  RedisConnectionUtils.releaseConnection(conn,factory);} @AT@ 8016 @LENGTH@ 169
------INS IfStatement@@if (enableTransactionSupport) {  RedisConnectionUtils.unbindConnection(factory);} else {  RedisConnectionUtils.releaseConnection(conn,factory);} @TO@ Block@@FinallyBody:{  if (enableTransactionSupport) {    RedisConnectionUtils.unbindConnection(factory);  } else {    RedisConnectionUtils.releaseConnection(conn,factory);  }} @AT@ 8022 @LENGTH@ 159
---------MOV Block@@FinallyBody:{  RedisConnectionUtils.releaseConnection(conn,factory);} @TO@ IfStatement@@if (enableTransactionSupport) {  RedisConnectionUtils.unbindConnection(factory);} else {  RedisConnectionUtils.releaseConnection(conn,factory);} @AT@ 7830 @LENGTH@ 63
---------INS SimpleName@@enableTransactionSupport @TO@ IfStatement@@if (enableTransactionSupport) {  RedisConnectionUtils.unbindConnection(factory);} else {  RedisConnectionUtils.releaseConnection(conn,factory);} @AT@ 8026 @LENGTH@ 24
---------INS Block@@ThenBody:{  RedisConnectionUtils.unbindConnection(factory);} @TO@ IfStatement@@if (enableTransactionSupport) {  RedisConnectionUtils.unbindConnection(factory);} else {  RedisConnectionUtils.releaseConnection(conn,factory);} @AT@ 8052 @LENGTH@ 58
------------INS ExpressionStatement@@MethodInvocation:RedisConnectionUtils.unbindConnection(factory) @TO@ Block@@ThenBody:{  RedisConnectionUtils.unbindConnection(factory);} @AT@ 8058 @LENGTH@ 47
---------------INS MethodInvocation@@RedisConnectionUtils.unbindConnection(factory) @TO@ ExpressionStatement@@MethodInvocation:RedisConnectionUtils.unbindConnection(factory) @AT@ 8058 @LENGTH@ 46
------------------INS SimpleName@@Name:RedisConnectionUtils @TO@ MethodInvocation@@RedisConnectionUtils.unbindConnection(factory) @AT@ 8058 @LENGTH@ 20
------------------INS SimpleName@@MethodName:unbindConnection:[factory] @TO@ MethodInvocation@@RedisConnectionUtils.unbindConnection(factory) @AT@ 8079 @LENGTH@ 25
---------------------INS SimpleName@@factory @TO@ SimpleName@@MethodName:unbindConnection:[factory] @AT@ 8096 @LENGTH@ 7


UPD FieldDeclaration@@public, static, final, String, [CHAR_ENC="UTF-8"] @TO@ public, static, final, Charset, [CHAR_ENC=StandardCharsets.UTF_8] @AT@ 1709 @LENGTH@ 46
---UPD SimpleType@@String @TO@ Charset @AT@ 1729 @LENGTH@ 6
---UPD VariableDeclarationFragment@@CHAR_ENC="UTF-8" @TO@ CHAR_ENC=StandardCharsets.UTF_8 @AT@ 1736 @LENGTH@ 18
------DEL StringLiteral@@"UTF-8" @AT@ 1747 @LENGTH@ 7
------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ VariableDeclarationFragment@@CHAR_ENC="UTF-8" @AT@ 1823 @LENGTH@ 22
---------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 1823 @LENGTH@ 16
---------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 1840 @LENGTH@ 5


UPD TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build();}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ try {  Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build();  try {  }  finally {    ContainerBuilder.destroy(containers);  }}  finally {  fabricProxy.close();} @AT@ 1769 @LENGTH@ 317
---INS VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build(); @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build();}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 1707 @LENGTH@ 156
------INS ParameterizedType@@Set<ContainerProxy> @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build(); @AT@ 1707 @LENGTH@ 19
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1707 @LENGTH@ 3
---------INS SimpleType@@ContainerProxy @TO@ ParameterizedType@@Set<ContainerProxy> @AT@ 1711 @LENGTH@ 14
------INS VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build() @TO@ VariableDeclarationStatement@@Set<ContainerProxy> containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build(); @AT@ 1727 @LENGTH@ 135
---------INS SimpleName@@containers @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build() @AT@ 1727 @LENGTH@ 10
---------MOV MethodInvocation@@ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build() @TO@ VariableDeclarationFragment@@containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build() @AT@ 1800 @LENGTH@ 122
---DEL ExpressionStatement@@Assignment:containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build() @AT@ 1787 @LENGTH@ 136
------DEL Assignment@@containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build() @AT@ 1787 @LENGTH@ 135
---------DEL SimpleName@@containers @AT@ 1787 @LENGTH@ 10
---------DEL Operator@@= @AT@ 1797 @LENGTH@ 1
---INS TryStatement@@try {}  finally {  ContainerBuilder.destroy(containers);} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build();}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 1876 @LENGTH@ 151
------MOV Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ TryStatement@@try {}  finally {  ContainerBuilder.destroy(containers);} @AT@ 1992 @LENGTH@ 94
---UPD Block@@FinallyBody:{  ContainerBuilder.destroy(containers);  fabricProxy.close();} @TO@ FinallyBody:{  ContainerBuilder.destroy(containers);} @AT@ 1992 @LENGTH@ 94
---INS Block@@FinallyBody:{  fabricProxy.close();} @TO@ TryStatement@@try {  containers=ContainerBuilder.create(fabricProxy).withName("esb").withProfiles("jboss-fuse-minimal").assertProvisioningResult().build();}  finally {  ContainerBuilder.destroy(containers);  fabricProxy.close();} @AT@ 2046 @LENGTH@ 44
------MOV ExpressionStatement@@MethodInvocation:fabricProxy.close() @TO@ Block@@FinallyBody:{  fabricProxy.close();} @AT@ 2056 @LENGTH@ 20


INS MethodDeclaration@@public, Iterator<V>, MethodName:sScan, ScanOptions options,  @TO@ TypeDeclaration@@DefaultBoundSetOperations, DefaultBoundKeyOperations<K>[BoundSetOperations<K,V>] @AT@ 3544 @LENGTH@ 89
---INS Modifier@@public @TO@ MethodDeclaration@@public, Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 3544 @LENGTH@ 6
---INS ParameterizedType@@Iterator<V> @TO@ MethodDeclaration@@public, Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 3551 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<V> @AT@ 3551 @LENGTH@ 8
------INS SimpleType@@V @TO@ ParameterizedType@@Iterator<V> @AT@ 3560 @LENGTH@ 1
---INS SimpleName@@MethodName:sScan @TO@ MethodDeclaration@@public, Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 3563 @LENGTH@ 5
---INS SingleVariableDeclaration@@ScanOptions options @TO@ MethodDeclaration@@public, Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 3569 @LENGTH@ 19
------INS SimpleType@@ScanOptions @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 3569 @LENGTH@ 11
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@ScanOptions options @AT@ 3581 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:ops.sScan(getKey(),options) @TO@ MethodDeclaration@@public, Iterator<V>, MethodName:sScan, ScanOptions options,  @AT@ 3594 @LENGTH@ 36
------INS MethodInvocation@@ops.sScan(getKey(),options) @TO@ ReturnStatement@@MethodInvocation:ops.sScan(getKey(),options) @AT@ 3601 @LENGTH@ 28
---------INS SimpleName@@Name:ops @TO@ MethodInvocation@@ops.sScan(getKey(),options) @AT@ 3601 @LENGTH@ 3
---------INS SimpleName@@MethodName:sScan:[getKey(), options] @TO@ MethodInvocation@@ops.sScan(getKey(),options) @AT@ 3605 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getKey:[] @TO@ SimpleName@@MethodName:sScan:[getKey(), options] @AT@ 3611 @LENGTH@ 8
------------INS SimpleName@@options @TO@ SimpleName@@MethodName:sScan:[getKey(), options] @AT@ 3621 @LENGTH@ 7


DEL VariableDeclarationStatement@@ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class); @AT@ 2154 @LENGTH@ 117
---DEL ParameterizedType@@ServiceProxy<CuratorFramework> @AT@ 2154 @LENGTH@ 30
------DEL SimpleType@@ServiceProxy @AT@ 2154 @LENGTH@ 12
------DEL SimpleType@@CuratorFramework @AT@ 2167 @LENGTH@ 16
---DEL VariableDeclarationFragment@@curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 2185 @LENGTH@ 85
------DEL SimpleName@@curatorProxy @AT@ 2185 @LENGTH@ 12
------DEL MethodInvocation@@ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class) @AT@ 2200 @LENGTH@ 70
---------DEL SimpleName@@Name:ServiceProxy @AT@ 2200 @LENGTH@ 12
---------DEL SimpleName@@MethodName:createServiceProxy:[bundleContext, CuratorFramework.class] @AT@ 2213 @LENGTH@ 57
------------DEL SimpleName@@bundleContext @AT@ 2232 @LENGTH@ 13
------------DEL TypeLiteral@@CuratorFramework.class @AT@ 2247 @LENGTH@ 22


INS TryStatement@@try {  final InitialContext initialContext=new InitialContext();  initialContext.lookup("java:module/env/" + EnvEntryManagedBean.class.getName() + "/nonExistentString");  Assert.fail();} catch (NamingException expected) {} @TO@ MethodDeclaration@@public, void, MethodName:testNonExistentResourceCannotBeLookedUp, NamingException,  @AT@ 3648 @LENGTH@ 276
---MOV VariableDeclarationStatement@@final InitialContext initialContext=new InitialContext(); @TO@ TryStatement@@try {  final InitialContext initialContext=new InitialContext();  initialContext.lookup("java:module/env/" + EnvEntryManagedBean.class.getName() + "/nonExistentString");  Assert.fail();} catch (NamingException expected) {} @AT@ 3690 @LENGTH@ 59
---MOV ExpressionStatement@@MethodInvocation:initialContext.lookup("java:module/env/" + EnvEntryManagedBean.class.getName() + "/nonExistentString") @TO@ TryStatement@@try {  final InitialContext initialContext=new InitialContext();  initialContext.lookup("java:module/env/" + EnvEntryManagedBean.class.getName() + "/nonExistentString");  Assert.fail();} catch (NamingException expected) {} @AT@ 3758 @LENGTH@ 103
---INS ExpressionStatement@@MethodInvocation:Assert.fail() @TO@ TryStatement@@try {  final InitialContext initialContext=new InitialContext();  initialContext.lookup("java:module/env/" + EnvEntryManagedBean.class.getName() + "/nonExistentString");  Assert.fail();} catch (NamingException expected) {} @AT@ 3854 @LENGTH@ 14
------INS MethodInvocation@@Assert.fail() @TO@ ExpressionStatement@@MethodInvocation:Assert.fail() @AT@ 3854 @LENGTH@ 13
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail() @AT@ 3854 @LENGTH@ 6
---------INS SimpleName@@MethodName:fail:[] @TO@ MethodInvocation@@Assert.fail() @AT@ 3861 @LENGTH@ 6
---INS CatchClause@@catch (NamingException expected) {} @TO@ TryStatement@@try {  final InitialContext initialContext=new InitialContext();  initialContext.lookup("java:module/env/" + EnvEntryManagedBean.class.getName() + "/nonExistentString");  Assert.fail();} catch (NamingException expected) {} @AT@ 3879 @LENGTH@ 45
------INS SingleVariableDeclaration@@NamingException expected @TO@ CatchClause@@catch (NamingException expected) {} @AT@ 3886 @LENGTH@ 24
---------INS SimpleType@@NamingException @TO@ SingleVariableDeclaration@@NamingException expected @AT@ 3886 @LENGTH@ 15
---------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@NamingException expected @AT@ 3902 @LENGTH@ 8


UPD MethodDeclaration@@public, ImplicitGrantService, MethodName:getImplicitGrantService, Exception,  @TO@ public, ImplicitGrantService, MethodName:implicitGrantService, Exception,  @AT@ 5041 @LENGTH@ 143
---UPD SimpleName@@MethodName:getImplicitGrantService @TO@ MethodName:implicitGrantService @AT@ 5069 @LENGTH@ 23


UPD ForStatement@@for (int i=0; i < signatureList.size(); i++) {  PGPOnePassSignature signature=signatureList.get(i);  PGPPublicKey sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID());  if (sigPublicKey == null) {    continue;  }  if (isAllowedVerifyingKey(allowedUserIds,sigPublicKey)) {    signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey);    return signature;  }} @TO@ for (int i=0; i < signatureList.size(); i++) {  PGPOnePassSignature signature=signatureList.get(i);  PGPPublicKey sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID(),allowedUserIds);  if (sigPublicKey == null) {    continue;  }  signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey);  return signature;} @AT@ 18143 @LENGTH@ 673
---UPD VariableDeclarationStatement@@PGPPublicKey sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID()); @TO@ PGPPublicKey sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID(),allowedUserIds); @AT@ 18327 @LENGTH@ 91
------UPD VariableDeclarationFragment@@sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID()) @TO@ sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID(),allowedUserIds) @AT@ 18340 @LENGTH@ 77
---------UPD MethodInvocation@@publicKeyAccessor.getPublicKey(exchange,signature.getKeyID()) @TO@ publicKeyAccessor.getPublicKey(exchange,signature.getKeyID(),allowedUserIds) @AT@ 18355 @LENGTH@ 62
------------UPD SimpleName@@MethodName:getPublicKey:[exchange, signature.getKeyID()] @TO@ MethodName:getPublicKey:[exchange, signature.getKeyID(), allowedUserIds] @AT@ 18373 @LENGTH@ 44
---------------INS SimpleName@@allowedUserIds @TO@ SimpleName@@MethodName:getPublicKey:[exchange, signature.getKeyID()] @AT@ 18391 @LENGTH@ 14
---DEL IfStatement@@if (isAllowedVerifyingKey(allowedUserIds,sigPublicKey)) {  signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey);  return signature;} @AT@ 18511 @LENGTH@ 295
------DEL MethodInvocation@@isAllowedVerifyingKey(allowedUserIds,sigPublicKey) @AT@ 18515 @LENGTH@ 51
---------DEL SimpleName@@MethodName:isAllowedVerifyingKey:[allowedUserIds, sigPublicKey] @AT@ 18515 @LENGTH@ 51
------------DEL SimpleName@@allowedUserIds @AT@ 18537 @LENGTH@ 14
------------DEL SimpleName@@sigPublicKey @AT@ 18553 @LENGTH@ 12
------DEL Block@@ThenBody:{  signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey);  return signature;} @AT@ 18568 @LENGTH@ 238
---------DEL ReturnStatement@@SimpleName:signature @AT@ 18775 @LENGTH@ 17
---MOV ExpressionStatement@@MethodInvocation:signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey) @TO@ ForStatement@@for (int i=0; i < signatureList.size(); i++) {  PGPOnePassSignature signature=signatureList.get(i);  PGPPublicKey sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID());  if (sigPublicKey == null) {    continue;  }  if (isAllowedVerifyingKey(allowedUserIds,sigPublicKey)) {    signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey);    return signature;  }} @AT@ 18658 @LENGTH@ 100
---INS ReturnStatement@@SimpleName:signature @TO@ ForStatement@@for (int i=0; i < signatureList.size(); i++) {  PGPOnePassSignature signature=signatureList.get(i);  PGPPublicKey sigPublicKey=publicKeyAccessor.getPublicKey(exchange,signature.getKeyID());  if (sigPublicKey == null) {    continue;  }  if (isAllowedVerifyingKey(allowedUserIds,sigPublicKey)) {    signature.init(new JcaPGPContentVerifierBuilderProvider().setProvider(getProvider()),sigPublicKey);    return signature;  }} @AT@ 18681 @LENGTH@ 17
------MOV SimpleName@@signature @TO@ ReturnStatement@@SimpleName:signature @AT@ 18782 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:NettyHelper.close(channel) @TO@ MethodDeclaration@@public, void, MethodName:destroyObject, Channel channel, Exception,  @AT@ 21614 @LENGTH@ 27
---INS MethodInvocation@@NettyHelper.close(channel) @TO@ ExpressionStatement@@MethodInvocation:NettyHelper.close(channel) @AT@ 21614 @LENGTH@ 26
------INS SimpleName@@Name:NettyHelper @TO@ MethodInvocation@@NettyHelper.close(channel) @AT@ 21614 @LENGTH@ 11
------INS SimpleName@@MethodName:close:[channel] @TO@ MethodInvocation@@NettyHelper.close(channel) @AT@ 21626 @LENGTH@ 14
---------INS SimpleName@@channel @TO@ SimpleName@@MethodName:close:[channel] @AT@ 21632 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(config,componentProperties,null) @TO@ MethodInvocation:IntrospectionSupport.setProperties(config,componentProperties) @AT@ 2825 @LENGTH@ 70
---UPD MethodInvocation@@IntrospectionSupport.setProperties(config,componentProperties,null) @TO@ IntrospectionSupport.setProperties(config,componentProperties) @AT@ 2825 @LENGTH@ 69
------UPD SimpleName@@MethodName:setProperties:[config, componentProperties, null] @TO@ MethodName:setProperties:[config, componentProperties] @AT@ 2846 @LENGTH@ 48
---------DEL NullLiteral@@null @AT@ 2889 @LENGTH@ 4


UPD ReturnStatement@@CastExpression:(T)ReflectionUtils.invokeMethod(methods.getFindOneMethod(),id) @TO@ CastExpression:(T)ReflectionUtils.invokeMethod(methods.getFindOneMethod(),repository,id) @AT@ 2497 @LENGTH@ 72
---UPD CastExpression@@(T)ReflectionUtils.invokeMethod(methods.getFindOneMethod(),id) @TO@ (T)ReflectionUtils.invokeMethod(methods.getFindOneMethod(),repository,id) @AT@ 2504 @LENGTH@ 64
------UPD MethodInvocation@@ReflectionUtils.invokeMethod(methods.getFindOneMethod(),id) @TO@ ReflectionUtils.invokeMethod(methods.getFindOneMethod(),repository,id) @AT@ 2508 @LENGTH@ 60
---------UPD SimpleName@@MethodName:invokeMethod:[methods.getFindOneMethod(), id] @TO@ MethodName:invokeMethod:[methods.getFindOneMethod(), repository, id] @AT@ 2524 @LENGTH@ 44
------------INS SimpleName@@repository @TO@ SimpleName@@MethodName:invokeMethod:[methods.getFindOneMethod(), id] @AT@ 2592 @LENGTH@ 10


UPD VariableDeclarationStatement@@final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase()); @TO@ final SyslogAuditLogHandler.Transport transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)); @AT@ 9947 @LENGTH@ 142
---UPD VariableDeclarationFragment@@transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase()) @TO@ transport=SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 9985 @LENGTH@ 103
------UPD MethodInvocation@@SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase()) @TO@ SyslogAuditLogHandler.Transport.valueOf(protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)) @AT@ 9997 @LENGTH@ 91
---------UPD SimpleName@@MethodName:valueOf:[protocol.getPathElement().getValue().toUpperCase()] @TO@ MethodName:valueOf:[protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH)] @AT@ 10029 @LENGTH@ 59
------------UPD MethodInvocation@@protocol.getPathElement().getValue().toUpperCase() @TO@ protocol.getPathElement().getValue().toUpperCase(Locale.ENGLISH) @AT@ 10037 @LENGTH@ 50
---------------UPD SimpleName@@MethodName:toUpperCase:[] @TO@ MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 10074 @LENGTH@ 13
------------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[] @AT@ 10111 @LENGTH@ 14
---------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 10111 @LENGTH@ 6
---------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 10118 @LENGTH@ 7


MOV FieldDeclaration@@private, static, final, String, [COMPLETED_SUFFIX="-completed"] @TO@ TypeDeclaration@@[public, final]HazelcastAggregationRepository, ServiceSupport[RecoverableAggregationRepository, OptimisticLockingAggregationRepository] @AT@ 2610 @LENGTH@ 60


INS TryStatement@@try {  System.out.println(executeCommand("fabric:container-rollback --all 1.0"));  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  for (  Container container : containers) {    Assert.assertEquals("Container should have version 1.0","1.0",container.getVersion().getId());    Assert.assertNotNull(ZooKeeperUtils.exists(ServiceLocator.getOsgiService(CuratorFramework.class),"/fabric/configs/versions/1.0/containers/" + container.getId()));  }}  finally {  ContainerBuilder.destroy(containers);} @TO@ MethodDeclaration@@public, void, MethodName:testContainerAfterVersionDowngrade, Exception,  @AT@ 4786 @LENGTH@ 606
---MOV ExpressionStatement@@MethodInvocation:System.out.println(executeCommand("fabric:container-rollback --all 1.0")) @TO@ TryStatement@@try {  System.out.println(executeCommand("fabric:container-rollback --all 1.0"));  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  for (  Container container : containers) {    Assert.assertEquals("Container should have version 1.0","1.0",container.getVersion().getId());    Assert.assertNotNull(ZooKeeperUtils.exists(ServiceLocator.getOsgiService(CuratorFramework.class),"/fabric/configs/versions/1.0/containers/" + container.getId()));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 4787 @LENGTH@ 74
---MOV ExpressionStatement@@MethodInvocation:Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @TO@ TryStatement@@try {  System.out.println(executeCommand("fabric:container-rollback --all 1.0"));  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  for (  Container container : containers) {    Assert.assertEquals("Container should have version 1.0","1.0",container.getVersion().getId());    Assert.assertNotNull(ZooKeeperUtils.exists(ServiceLocator.getOsgiService(CuratorFramework.class),"/fabric/configs/versions/1.0/containers/" + container.getId()));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 4870 @LENGTH@ 61
---MOV EnhancedForStatement@@for (Container container : containers) {  Assert.assertEquals("Container should have version 1.0","1.0",container.getVersion().getId());  Assert.assertNotNull(ZooKeeperUtils.exists(ServiceLocator.getOsgiService(CuratorFramework.class),"/fabric/configs/versions/1.0/containers/" + container.getId()));} @TO@ TryStatement@@try {  System.out.println(executeCommand("fabric:container-rollback --all 1.0"));  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  for (  Container container : containers) {    Assert.assertEquals("Container should have version 1.0","1.0",container.getVersion().getId());    Assert.assertNotNull(ZooKeeperUtils.exists(ServiceLocator.getOsgiService(CuratorFramework.class),"/fabric/configs/versions/1.0/containers/" + container.getId()));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 4940 @LENGTH@ 337
---INS Block@@FinallyBody:{  ContainerBuilder.destroy(containers);} @TO@ TryStatement@@try {  System.out.println(executeCommand("fabric:container-rollback --all 1.0"));  Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);  for (  Container container : containers) {    Assert.assertEquals("Container should have version 1.0","1.0",container.getVersion().getId());    Assert.assertNotNull(ZooKeeperUtils.exists(ServiceLocator.getOsgiService(CuratorFramework.class),"/fabric/configs/versions/1.0/containers/" + container.getId()));  }}  finally {  ContainerBuilder.destroy(containers);} @AT@ 5331 @LENGTH@ 61
------INS ExpressionStatement@@MethodInvocation:ContainerBuilder.destroy(containers) @TO@ Block@@FinallyBody:{  ContainerBuilder.destroy(containers);} @AT@ 5345 @LENGTH@ 37
---------INS MethodInvocation@@ContainerBuilder.destroy(containers) @TO@ ExpressionStatement@@MethodInvocation:ContainerBuilder.destroy(containers) @AT@ 5345 @LENGTH@ 36
------------INS SimpleName@@Name:ContainerBuilder @TO@ MethodInvocation@@ContainerBuilder.destroy(containers) @AT@ 5345 @LENGTH@ 16
------------INS SimpleName@@MethodName:destroy:[containers] @TO@ MethodInvocation@@ContainerBuilder.destroy(containers) @AT@ 5362 @LENGTH@ 19
---------------INS SimpleName@@containers @TO@ SimpleName@@MethodName:destroy:[containers] @AT@ 5370 @LENGTH@ 10


UPD FieldDeclaration@@private, static, AttachmentKey<Boolean>, [WRITTEN_KEY=AttachmentKey.create(Boolean.class)] @TO@ private, static, final, AttachmentKey<Boolean>, [WRITTEN_KEY=AttachmentKey.create(Boolean.class)] @AT@ 3538 @LENGTH@ 88
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, AttachmentKey<Boolean>, [WRITTEN_KEY=AttachmentKey.create(Boolean.class)] @AT@ 3553 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]ClientRmTemplateTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, @DirtiesContext(classMode=ClassMode.AFTER_CLASS), public]ClientRmTemplateTests,  @AT@ 1707 @LENGTH@ 1124
---INS NormalAnnotation@@@DirtiesContext(classMode=ClassMode.AFTER_CLASS) @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(loader=YarnDelegatingSmartContextLoader.class), @MiniYarnCluster, public]ClientRmTemplateTests,  @AT@ 1961 @LENGTH@ 48


UPD ReturnStatement@@MethodInvocation:build(Arrays.<B>asList(getOptionsBuilder())) @TO@ MethodInvocation:Collections.unmodifiableSet(build(Arrays.<B>asList(getOptionsBuilder()))) @AT@ 8902 @LENGTH@ 53
---INS MethodInvocation@@Collections.unmodifiableSet(build(Arrays.<B>asList(getOptionsBuilder()))) @TO@ ReturnStatement@@MethodInvocation:build(Arrays.<B>asList(getOptionsBuilder())) @AT@ 8939 @LENGTH@ 74
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.unmodifiableSet(build(Arrays.<B>asList(getOptionsBuilder()))) @AT@ 8939 @LENGTH@ 11
------INS SimpleName@@MethodName:unmodifiableSet:[build(Arrays.<B>asList(getOptionsBuilder()))] @TO@ MethodInvocation@@Collections.unmodifiableSet(build(Arrays.<B>asList(getOptionsBuilder()))) @AT@ 8951 @LENGTH@ 62
---------MOV MethodInvocation@@build(Arrays.<B>asList(getOptionsBuilder())) @TO@ SimpleName@@MethodName:unmodifiableSet:[build(Arrays.<B>asList(getOptionsBuilder()))] @AT@ 8909 @LENGTH@ 45


UPD MethodDeclaration@@ServiceBuilder<SSOManagerFactory<I,D>>, I, D, MethodName:build, ServiceTarget target, ServiceName name, String host,  @TO@ ServiceBuilder<SSOManagerFactory<A,D>>, A, D, MethodName:build, ServiceTarget target, ServiceName name, String host,  @AT@ 1291 @LENGTH@ 59
---UPD ParameterizedType@@ServiceBuilder<SSOManagerFactory<I,D>> @TO@ ServiceBuilder<SSOManagerFactory<A,D>> @AT@ 1251 @LENGTH@ 39
------UPD ParameterizedType@@SSOManagerFactory<I,D> @TO@ SSOManagerFactory<A,D> @AT@ 1266 @LENGTH@ 23
---------UPD SimpleType@@I @TO@ A @AT@ 1284 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, @ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), @IfProfileValue(name="redisVersion",value="2.6"), public]DefaultScriptExecutorTests,  @TO@ [@RunWith(RelaxedJUnit4ClassRunner.class), @ContextConfiguration, @ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), @IfProfileValue(name="redisVersion",value="2.6+"), public]DefaultScriptExecutorTests,  @AT@ 2377 @LENGTH@ 8600
---UPD SingleMemberAnnotation@@@RunWith(SpringJUnit4ClassRunner.class) @TO@ @RunWith(RelaxedJUnit4ClassRunner.class) @AT@ 2377 @LENGTH@ 39
---UPD NormalAnnotation@@@IfProfileValue(name="redisVersion",value="2.6") @TO@ @IfProfileValue(name="redisVersion",value="2.6+") @AT@ 2507 @LENGTH@ 53


UPD VariableDeclarationStatement@@Transformer transformer=XMLDocumentHelper.createTransformer(); @TO@ Transformer transformer=createTransformer(); @AT@ 35564 @LENGTH@ 64
---UPD VariableDeclarationFragment@@transformer=XMLDocumentHelper.createTransformer() @TO@ transformer=createTransformer() @AT@ 35576 @LENGTH@ 51
------UPD MethodInvocation@@XMLDocumentHelper.createTransformer() @TO@ MethodName:createTransformer:[] @AT@ 35590 @LENGTH@ 37
---------DEL SimpleName@@Name:XMLDocumentHelper @AT@ 35590 @LENGTH@ 17
---------DEL SimpleName@@MethodName:createTransformer:[] @AT@ 35608 @LENGTH@ 19


INS TryStatement@@try {  InitialContext context=new InitialContext();  Object result=context.lookup("java:module/env/" + NonComponentResourceInjectionTestCase.class.getName() + "/userTransaction");  Assert.fail();} catch (NamingException expected) {} @TO@ MethodDeclaration@@public, void, MethodName:testBindingDoesNotExist, NamingException,  @AT@ 2039 @LENGTH@ 288
---MOV VariableDeclarationStatement@@InitialContext context=new InitialContext(); @TO@ TryStatement@@try {  InitialContext context=new InitialContext();  Object result=context.lookup("java:module/env/" + NonComponentResourceInjectionTestCase.class.getName() + "/userTransaction");  Assert.fail();} catch (NamingException expected) {} @AT@ 2073 @LENGTH@ 46
---MOV VariableDeclarationStatement@@Object result=context.lookup("java:module/env/" + NonComponentResourceInjectionTestCase.class.getName() + "/userTransaction"); @TO@ TryStatement@@try {  InitialContext context=new InitialContext();  Object result=context.lookup("java:module/env/" + NonComponentResourceInjectionTestCase.class.getName() + "/userTransaction");  Assert.fail();} catch (NamingException expected) {} @AT@ 2128 @LENGTH@ 128
---INS ExpressionStatement@@MethodInvocation:Assert.fail() @TO@ TryStatement@@try {  InitialContext context=new InitialContext();  Object result=context.lookup("java:module/env/" + NonComponentResourceInjectionTestCase.class.getName() + "/userTransaction");  Assert.fail();} catch (NamingException expected) {} @AT@ 2257 @LENGTH@ 14
------INS MethodInvocation@@Assert.fail() @TO@ ExpressionStatement@@MethodInvocation:Assert.fail() @AT@ 2257 @LENGTH@ 13
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail() @AT@ 2257 @LENGTH@ 6
---------INS SimpleName@@MethodName:fail:[] @TO@ MethodInvocation@@Assert.fail() @AT@ 2264 @LENGTH@ 6
---INS CatchClause@@catch (NamingException expected) {} @TO@ TryStatement@@try {  InitialContext context=new InitialContext();  Object result=context.lookup("java:module/env/" + NonComponentResourceInjectionTestCase.class.getName() + "/userTransaction");  Assert.fail();} catch (NamingException expected) {} @AT@ 2282 @LENGTH@ 45
------INS SingleVariableDeclaration@@NamingException expected @TO@ CatchClause@@catch (NamingException expected) {} @AT@ 2289 @LENGTH@ 24
---------INS SimpleType@@NamingException @TO@ SingleVariableDeclaration@@NamingException expected @AT@ 2289 @LENGTH@ 15
---------INS SimpleName@@expected @TO@ SingleVariableDeclaration@@NamingException expected @AT@ 2305 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4209 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4216 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 4233 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 4246 @LENGTH@ 202
------------DEL New@@new @AT@ 4246 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 4250 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 4250 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 4267 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 4287 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 4323 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 4323 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 4330 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 4347 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 4333 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4333 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4357 @LENGTH@ 10


INS MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @TO@ TypeDeclaration@@[@Configuration, @ImportResource("classpath:META-INF/spring/cache-config.xml"), @EnableGemfireRepositories, public]GemfireRepositoryConfig,  @AT@ 1545 @LENGTH@ 342
---INS Modifier@@public @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1545 @LENGTH@ 6
---INS SimpleType@@GemfireMappingContext @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1552 @LENGTH@ 21
---INS SimpleName@@MethodName:gemfireMappingContext @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1574 @LENGTH@ 21
---INS VariableDeclarationStatement@@AnnotatedTypeScanner scanner=new AnnotatedTypeScanner(Region.class); @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1603 @LENGTH@ 70
------INS SimpleType@@AnnotatedTypeScanner @TO@ VariableDeclarationStatement@@AnnotatedTypeScanner scanner=new AnnotatedTypeScanner(Region.class); @AT@ 1603 @LENGTH@ 20
------INS VariableDeclarationFragment@@scanner=new AnnotatedTypeScanner(Region.class) @TO@ VariableDeclarationStatement@@AnnotatedTypeScanner scanner=new AnnotatedTypeScanner(Region.class); @AT@ 1624 @LENGTH@ 48
---------INS SimpleName@@scanner @TO@ VariableDeclarationFragment@@scanner=new AnnotatedTypeScanner(Region.class) @AT@ 1624 @LENGTH@ 7
---------INS ClassInstanceCreation@@AnnotatedTypeScanner[Region.class] @TO@ VariableDeclarationFragment@@scanner=new AnnotatedTypeScanner(Region.class) @AT@ 1634 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@AnnotatedTypeScanner[Region.class] @AT@ 1634 @LENGTH@ 3
------------INS SimpleType@@AnnotatedTypeScanner @TO@ ClassInstanceCreation@@AnnotatedTypeScanner[Region.class] @AT@ 1638 @LENGTH@ 20
------------INS TypeLiteral@@Region.class @TO@ ClassInstanceCreation@@AnnotatedTypeScanner[Region.class] @AT@ 1659 @LENGTH@ 12
---INS VariableDeclarationStatement@@GemfireMappingContext context=new GemfireMappingContext(); @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1677 @LENGTH@ 60
------INS SimpleType@@GemfireMappingContext @TO@ VariableDeclarationStatement@@GemfireMappingContext context=new GemfireMappingContext(); @AT@ 1677 @LENGTH@ 21
------INS VariableDeclarationFragment@@context=new GemfireMappingContext() @TO@ VariableDeclarationStatement@@GemfireMappingContext context=new GemfireMappingContext(); @AT@ 1699 @LENGTH@ 37
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=new GemfireMappingContext() @AT@ 1699 @LENGTH@ 7
---------INS ClassInstanceCreation@@GemfireMappingContext[] @TO@ VariableDeclarationFragment@@context=new GemfireMappingContext() @AT@ 1709 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@GemfireMappingContext[] @AT@ 1709 @LENGTH@ 3
------------INS SimpleType@@GemfireMappingContext @TO@ ClassInstanceCreation@@GemfireMappingContext[] @AT@ 1713 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:context.setInitialEntitySet(scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName())) @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1740 @LENGTH@ 101
------INS MethodInvocation@@context.setInitialEntitySet(scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName())) @TO@ ExpressionStatement@@MethodInvocation:context.setInitialEntitySet(scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName())) @AT@ 1740 @LENGTH@ 100
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.setInitialEntitySet(scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName())) @AT@ 1740 @LENGTH@ 7
---------INS SimpleName@@MethodName:setInitialEntitySet:[scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName())] @TO@ MethodInvocation@@context.setInitialEntitySet(scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName())) @AT@ 1748 @LENGTH@ 92
------------INS MethodInvocation@@scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName()) @TO@ SimpleName@@MethodName:setInitialEntitySet:[scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName())] @AT@ 1768 @LENGTH@ 71
---------------INS SimpleName@@Name:scanner @TO@ MethodInvocation@@scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName()) @AT@ 1768 @LENGTH@ 7
---------------INS SimpleName@@MethodName:findTypes:[GemfireRepositoryConfig.class.getPackage().getName()] @TO@ MethodInvocation@@scanner.findTypes(GemfireRepositoryConfig.class.getPackage().getName()) @AT@ 1776 @LENGTH@ 63
------------------INS MethodInvocation@@GemfireRepositoryConfig.class.getPackage().getName() @TO@ SimpleName@@MethodName:findTypes:[GemfireRepositoryConfig.class.getPackage().getName()] @AT@ 1786 @LENGTH@ 52
---------------------INS MethodInvocation@@MethodName:getPackage:[] @TO@ MethodInvocation@@GemfireRepositoryConfig.class.getPackage().getName() @AT@ 1786 @LENGTH@ 42
---------------------INS TypeLiteral@@GemfireRepositoryConfig.class @TO@ MethodInvocation@@GemfireRepositoryConfig.class.getPackage().getName() @AT@ 1786 @LENGTH@ 29
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@GemfireRepositoryConfig.class.getPackage().getName() @AT@ 1829 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.initialize() @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1844 @LENGTH@ 21
------INS MethodInvocation@@context.initialize() @TO@ ExpressionStatement@@MethodInvocation:context.initialize() @AT@ 1844 @LENGTH@ 20
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.initialize() @AT@ 1844 @LENGTH@ 7
---------INS SimpleName@@MethodName:initialize:[] @TO@ MethodInvocation@@context.initialize() @AT@ 1852 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:context @TO@ MethodDeclaration@@public, GemfireMappingContext, MethodName:gemfireMappingContext,  @AT@ 1869 @LENGTH@ 15
------INS SimpleName@@context @TO@ ReturnStatement@@SimpleName:context @AT@ 1876 @LENGTH@ 7


UPD TypeDeclaration@@[@Ignore("Need update in camel-dozer, eg a new perfectus build number"), public]CamelSpringDozerTest, CamelSpringTestSupport @TO@ [@Ignore("[FABRIC-623] Fix fabric watcher-dozer CamelSpringDozerTest"), public]CamelSpringDozerTest, CamelSpringTestSupport @AT@ 1006 @LENGTH@ 961
---UPD SingleMemberAnnotation@@@Ignore("Need update in camel-dozer, eg a new perfectus build number") @TO@ @Ignore("[FABRIC-623] Fix fabric watcher-dozer CamelSpringDozerTest") @AT@ 1006 @LENGTH@ 70


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4761 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 4768 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 4785 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 4798 @LENGTH@ 202
------------DEL New@@new @AT@ 4798 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 4802 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 4802 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 4819 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 4839 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 4875 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 4875 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 4882 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 4899 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 4884 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4884 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 4908 @LENGTH@ 10


INS MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @TO@ TypeDeclaration@@[public, final]EndpointService, [Service<Endpoint>] @AT@ 13230 @LENGTH@ 273
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 13230 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 13238 @LENGTH@ 6
---INS SimpleType@@ServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 13245 @LENGTH@ 16
---INS SimpleName@@MethodName:currentServiceContainer @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 13262 @LENGTH@ 23
---INS IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 13298 @LENGTH@ 117
------INS InfixExpression@@System.getSecurityManager() == null @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 13301 @LENGTH@ 35
---------INS MethodInvocation@@System.getSecurityManager() @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 13301 @LENGTH@ 27
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 13301 @LENGTH@ 6
------------INS SimpleName@@MethodName:getSecurityManager:[] @TO@ MethodInvocation@@System.getSecurityManager() @AT@ 13308 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 13328 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@System.getSecurityManager() == null @AT@ 13332 @LENGTH@ 4
------INS Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @TO@ IfStatement@@if (System.getSecurityManager() == null) {  return CurrentServiceContainer.getServiceContainer();} @AT@ 13338 @LENGTH@ 77
---------INS ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @TO@ Block@@ThenBody:{  return CurrentServiceContainer.getServiceContainer();} @AT@ 13352 @LENGTH@ 53
------------INS MethodInvocation@@CurrentServiceContainer.getServiceContainer() @TO@ ReturnStatement@@MethodInvocation:CurrentServiceContainer.getServiceContainer() @AT@ 13359 @LENGTH@ 45
---------------INS SimpleName@@Name:CurrentServiceContainer @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 13359 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@CurrentServiceContainer.getServiceContainer() @AT@ 13383 @LENGTH@ 21
---INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ MethodDeclaration@@private, static, ServiceContainer, MethodName:currentServiceContainer,  @AT@ 13424 @LENGTH@ 73
------INS MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 13431 @LENGTH@ 65
---------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 13431 @LENGTH@ 16
---------INS SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @TO@ MethodInvocation@@AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 13448 @LENGTH@ 48
------------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 13461 @LENGTH@ 34
---------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 13461 @LENGTH@ 23
---------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 13485 @LENGTH@ 10


UPD TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]State,  @TO@ [@Data, public]State, AbstractDockerDTO @AT@ 811 @LENGTH@ 240
---INS SimpleType@@AbstractDockerDTO @TO@ TypeDeclaration@@[@Data, @JsonNaming(DockerPropertyNamingStrategy.class), public]State,  @AT@ 764 @LENGTH@ 17
---DEL SingleMemberAnnotation@@@JsonNaming(DockerPropertyNamingStrategy.class) @AT@ 817 @LENGTH@ 47


INS MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]QueryUtilsIntegrationTests,  @AT@ 2961 @LENGTH@ 358
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 2961 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 2968 @LENGTH@ 4
---INS SimpleName@@MethodName:createsJoingToTraverseCollectionPath @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 2973 @LENGTH@ 36
---INS VariableDeclarationStatement@@CriteriaBuilder builder=em.getCriteriaBuilder(); @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 3017 @LENGTH@ 50
------INS SimpleType@@CriteriaBuilder @TO@ VariableDeclarationStatement@@CriteriaBuilder builder=em.getCriteriaBuilder(); @AT@ 3017 @LENGTH@ 15
------INS VariableDeclarationFragment@@builder=em.getCriteriaBuilder() @TO@ VariableDeclarationStatement@@CriteriaBuilder builder=em.getCriteriaBuilder(); @AT@ 3033 @LENGTH@ 33
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=em.getCriteriaBuilder() @AT@ 3033 @LENGTH@ 7
---------INS MethodInvocation@@em.getCriteriaBuilder() @TO@ VariableDeclarationFragment@@builder=em.getCriteriaBuilder() @AT@ 3043 @LENGTH@ 23
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getCriteriaBuilder() @AT@ 3043 @LENGTH@ 2
------------INS SimpleName@@MethodName:getCriteriaBuilder:[] @TO@ MethodInvocation@@em.getCriteriaBuilder() @AT@ 3046 @LENGTH@ 20
---INS VariableDeclarationStatement@@CriteriaQuery<User> query=builder.createQuery(User.class); @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 3070 @LENGTH@ 60
------INS ParameterizedType@@CriteriaQuery<User> @TO@ VariableDeclarationStatement@@CriteriaQuery<User> query=builder.createQuery(User.class); @AT@ 3070 @LENGTH@ 19
---------INS SimpleType@@CriteriaQuery @TO@ ParameterizedType@@CriteriaQuery<User> @AT@ 3070 @LENGTH@ 13
---------INS SimpleType@@User @TO@ ParameterizedType@@CriteriaQuery<User> @AT@ 3084 @LENGTH@ 4
------INS VariableDeclarationFragment@@query=builder.createQuery(User.class) @TO@ VariableDeclarationStatement@@CriteriaQuery<User> query=builder.createQuery(User.class); @AT@ 3090 @LENGTH@ 39
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=builder.createQuery(User.class) @AT@ 3090 @LENGTH@ 5
---------INS MethodInvocation@@builder.createQuery(User.class) @TO@ VariableDeclarationFragment@@query=builder.createQuery(User.class) @AT@ 3098 @LENGTH@ 31
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.createQuery(User.class) @AT@ 3098 @LENGTH@ 7
------------INS SimpleName@@MethodName:createQuery:[User.class] @TO@ MethodInvocation@@builder.createQuery(User.class) @AT@ 3106 @LENGTH@ 23
---------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:createQuery:[User.class] @AT@ 3118 @LENGTH@ 10
---INS VariableDeclarationStatement@@Root<User> root=query.from(User.class); @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 3133 @LENGTH@ 41
------INS ParameterizedType@@Root<User> @TO@ VariableDeclarationStatement@@Root<User> root=query.from(User.class); @AT@ 3133 @LENGTH@ 10
---------INS SimpleType@@Root @TO@ ParameterizedType@@Root<User> @AT@ 3133 @LENGTH@ 4
---------INS SimpleType@@User @TO@ ParameterizedType@@Root<User> @AT@ 3138 @LENGTH@ 4
------INS VariableDeclarationFragment@@root=query.from(User.class) @TO@ VariableDeclarationStatement@@Root<User> root=query.from(User.class); @AT@ 3144 @LENGTH@ 29
---------INS SimpleName@@root @TO@ VariableDeclarationFragment@@root=query.from(User.class) @AT@ 3144 @LENGTH@ 4
---------INS MethodInvocation@@query.from(User.class) @TO@ VariableDeclarationFragment@@root=query.from(User.class) @AT@ 3151 @LENGTH@ 22
------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.from(User.class) @AT@ 3151 @LENGTH@ 5
------------INS SimpleName@@MethodName:from:[User.class] @TO@ MethodInvocation@@query.from(User.class) @AT@ 3157 @LENGTH@ 16
---------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:from:[User.class] @AT@ 3162 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:QueryUtils.toExpressionRecursively(root,PropertyPath.from("colleaguesLastname",User.class)) @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 3178 @LENGTH@ 94
------INS MethodInvocation@@QueryUtils.toExpressionRecursively(root,PropertyPath.from("colleaguesLastname",User.class)) @TO@ ExpressionStatement@@MethodInvocation:QueryUtils.toExpressionRecursively(root,PropertyPath.from("colleaguesLastname",User.class)) @AT@ 3178 @LENGTH@ 93
---------INS SimpleName@@Name:QueryUtils @TO@ MethodInvocation@@QueryUtils.toExpressionRecursively(root,PropertyPath.from("colleaguesLastname",User.class)) @AT@ 3178 @LENGTH@ 10
---------INS SimpleName@@MethodName:toExpressionRecursively:[root, PropertyPath.from("colleaguesLastname",User.class)] @TO@ MethodInvocation@@QueryUtils.toExpressionRecursively(root,PropertyPath.from("colleaguesLastname",User.class)) @AT@ 3189 @LENGTH@ 82
------------INS SimpleName@@root @TO@ SimpleName@@MethodName:toExpressionRecursively:[root, PropertyPath.from("colleaguesLastname",User.class)] @AT@ 3213 @LENGTH@ 4
------------INS MethodInvocation@@PropertyPath.from("colleaguesLastname",User.class) @TO@ SimpleName@@MethodName:toExpressionRecursively:[root, PropertyPath.from("colleaguesLastname",User.class)] @AT@ 3219 @LENGTH@ 51
---------------INS SimpleName@@Name:PropertyPath @TO@ MethodInvocation@@PropertyPath.from("colleaguesLastname",User.class) @AT@ 3219 @LENGTH@ 12
---------------INS SimpleName@@MethodName:from:["colleaguesLastname", User.class] @TO@ MethodInvocation@@PropertyPath.from("colleaguesLastname",User.class) @AT@ 3232 @LENGTH@ 38
------------------INS StringLiteral@@"colleaguesLastname" @TO@ SimpleName@@MethodName:from:["colleaguesLastname", User.class] @AT@ 3237 @LENGTH@ 20
------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:from:["colleaguesLastname", User.class] @AT@ 3259 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(root.getJoins(),hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:createsJoingToTraverseCollectionPath,  @AT@ 3276 @LENGTH@ 40
------INS MethodInvocation@@assertThat(root.getJoins(),hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(root.getJoins(),hasSize(1)) @AT@ 3276 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertThat:[root.getJoins(), hasSize(1)] @TO@ MethodInvocation@@assertThat(root.getJoins(),hasSize(1)) @AT@ 3276 @LENGTH@ 39
------------INS MethodInvocation@@root.getJoins() @TO@ SimpleName@@MethodName:assertThat:[root.getJoins(), hasSize(1)] @AT@ 3287 @LENGTH@ 15
---------------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.getJoins() @AT@ 3287 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getJoins:[] @TO@ MethodInvocation@@root.getJoins() @AT@ 3292 @LENGTH@ 10
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[root.getJoins(), hasSize(1)] @AT@ 3304 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 3304 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 3312 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertSame(simple.getRegionService().getQueryService(),template.lookupQueryService(simple)) @TO@ MethodInvocation:assertSame(simple.getRegionService().getQueryService().getClass(),template.lookupQueryService(simple).getClass()) @AT@ 6275 @LENGTH@ 93
---UPD MethodInvocation@@assertSame(simple.getRegionService().getQueryService(),template.lookupQueryService(simple)) @TO@ assertSame(simple.getRegionService().getQueryService().getClass(),template.lookupQueryService(simple).getClass()) @AT@ 6275 @LENGTH@ 92
------UPD SimpleName@@MethodName:assertSame:[simple.getRegionService().getQueryService(), template.lookupQueryService(simple)] @TO@ MethodName:assertSame:[simple.getRegionService().getQueryService().getClass(), template.lookupQueryService(simple).getClass()] @AT@ 6275 @LENGTH@ 92
---------UPD MethodInvocation@@simple.getRegionService().getQueryService() @TO@ simple.getRegionService().getQueryService().getClass() @AT@ 6286 @LENGTH@ 43
------------INS MethodInvocation@@MethodName:getQueryService:[] @TO@ MethodInvocation@@simple.getRegionService().getQueryService() @AT@ 6286 @LENGTH@ 43
------------INS MethodInvocation@@MethodName:getQueryService:[] @TO@ MethodInvocation@@simple.getRegionService().getQueryService() @AT@ 6286 @LENGTH@ 43
------------UPD SimpleName@@MethodName:getQueryService:[] @TO@ MethodName:getClass:[] @AT@ 6312 @LENGTH@ 17
---------UPD MethodInvocation@@template.lookupQueryService(simple) @TO@ template.lookupQueryService(simple).getClass() @AT@ 6331 @LENGTH@ 35
------------DEL SimpleName@@MethodName:lookupQueryService:[simple] @AT@ 6340 @LENGTH@ 26
---------------DEL SimpleName@@simple @AT@ 6359 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:lookupQueryService:[simple] @TO@ MethodInvocation@@template.lookupQueryService(simple) @AT@ 6345 @LENGTH@ 35
---------------INS SimpleName@@simple @TO@ MethodInvocation@@MethodName:lookupQueryService:[simple] @AT@ 6373 @LENGTH@ 6
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@template.lookupQueryService(simple) @AT@ 6381 @LENGTH@ 10


INS FieldDeclaration@@private, ExecutionContextUserSupport, [executionContextUserSupport=new ExecutionContextUserSupport(ClassUtils.getShortName(StepContext.class))] @TO@ TypeDeclaration@@[public]StepExecutionTests,  @AT@ 918 @LENGTH@ 142
---INS Modifier@@private @TO@ FieldDeclaration@@private, ExecutionContextUserSupport, [executionContextUserSupport=new ExecutionContextUserSupport(ClassUtils.getShortName(StepContext.class))] @AT@ 918 @LENGTH@ 7
---INS SimpleType@@ExecutionContextUserSupport @TO@ FieldDeclaration@@private, ExecutionContextUserSupport, [executionContextUserSupport=new ExecutionContextUserSupport(ClassUtils.getShortName(StepContext.class))] @AT@ 926 @LENGTH@ 27
---INS VariableDeclarationFragment@@executionContextUserSupport=new ExecutionContextUserSupport(ClassUtils.getShortName(StepContext.class)) @TO@ FieldDeclaration@@private, ExecutionContextUserSupport, [executionContextUserSupport=new ExecutionContextUserSupport(ClassUtils.getShortName(StepContext.class))] @AT@ 954 @LENGTH@ 105
------INS SimpleName@@executionContextUserSupport @TO@ VariableDeclarationFragment@@executionContextUserSupport=new ExecutionContextUserSupport(ClassUtils.getShortName(StepContext.class)) @AT@ 954 @LENGTH@ 27
------INS ClassInstanceCreation@@ExecutionContextUserSupport[ClassUtils.getShortName(StepContext.class)] @TO@ VariableDeclarationFragment@@executionContextUserSupport=new ExecutionContextUserSupport(ClassUtils.getShortName(StepContext.class)) @AT@ 984 @LENGTH@ 75
---------INS New@@new @TO@ ClassInstanceCreation@@ExecutionContextUserSupport[ClassUtils.getShortName(StepContext.class)] @AT@ 984 @LENGTH@ 3
---------INS SimpleType@@ExecutionContextUserSupport @TO@ ClassInstanceCreation@@ExecutionContextUserSupport[ClassUtils.getShortName(StepContext.class)] @AT@ 988 @LENGTH@ 27
---------INS MethodInvocation@@ClassUtils.getShortName(StepContext.class) @TO@ ClassInstanceCreation@@ExecutionContextUserSupport[ClassUtils.getShortName(StepContext.class)] @AT@ 1016 @LENGTH@ 42
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@ClassUtils.getShortName(StepContext.class) @AT@ 1016 @LENGTH@ 10
------------INS SimpleName@@MethodName:getShortName:[StepContext.class] @TO@ MethodInvocation@@ClassUtils.getShortName(StepContext.class) @AT@ 1027 @LENGTH@ 31
---------------INS TypeLiteral@@StepContext.class @TO@ SimpleName@@MethodName:getShortName:[StepContext.class] @AT@ 1040 @LENGTH@ 17


INS VariableDeclarationStatement@@Object result=null; @TO@ MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 2218 @LENGTH@ 21
---INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=null; @AT@ 2218 @LENGTH@ 6
---INS VariableDeclarationFragment@@result=null @TO@ VariableDeclarationStatement@@Object result=null; @AT@ 2225 @LENGTH@ 13
------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=null @AT@ 2225 @LENGTH@ 6
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@result=null @AT@ 2234 @LENGTH@ 4


DEL WhileStatement@@while (reader.hasNext()) {switch (reader.nextTag()) {case XMLStreamConstants.END_ELEMENT:    return;default :  unexpectedContent(reader);}} @AT@ 45091 @LENGTH@ 243
---DEL MethodInvocation@@reader.hasNext() @AT@ 45098 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ MethodInvocation:AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 3169 @LENGTH@ 241
---UPD MethodInvocation@@AccessController.doPrivileged(new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
) @TO@ AccessController.doPrivileged(CurrentServiceContainer.GET_ACTION) @AT@ 3176 @LENGTH@ 233
------UPD SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @TO@ MethodName:doPrivileged:[CurrentServiceContainer.GET_ACTION] @AT@ 3193 @LENGTH@ 216
---------DEL ClassInstanceCreation@@PrivilegedAction<ServiceContainer>[] @AT@ 3206 @LENGTH@ 202
------------DEL New@@new @AT@ 3206 @LENGTH@ 3
------------DEL ParameterizedType@@PrivilegedAction<ServiceContainer> @AT@ 3210 @LENGTH@ 34
---------------DEL SimpleType@@PrivilegedAction @AT@ 3210 @LENGTH@ 16
---------------DEL SimpleType@@ServiceContainer @AT@ 3227 @LENGTH@ 16
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 3247 @LENGTH@ 161
---------------DEL MethodDeclaration@@public, ServiceContainer, MethodName:run,  @AT@ 3283 @LENGTH@ 115
------------------DEL Modifier@@public @AT@ 3283 @LENGTH@ 6
------------------DEL SimpleType@@ServiceContainer @AT@ 3290 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:run @AT@ 3307 @LENGTH@ 3
---------INS QualifiedName@@CurrentServiceContainer.GET_ACTION @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedAction<ServiceContainer>(){
  @Override public ServiceContainer run(){
    return CurrentServiceContainer.getServiceContainer();
  }
}
] @AT@ 3292 @LENGTH@ 34
------------INS SimpleName@@CurrentServiceContainer @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 3292 @LENGTH@ 23
------------INS SimpleName@@GET_ACTION @TO@ QualifiedName@@CurrentServiceContainer.GET_ACTION @AT@ 3316 @LENGTH@ 10


UPD ExpressionStatement@@SuperMethodInvocation:super.setEndpointUri(UnsafeUriCharactersEncoder.encode(address)) @TO@ SuperMethodInvocation:super.setEndpointUri(UnsafeUriCharactersEncoder.encodeHttpURI(address)) @AT@ 32089 @LENGTH@ 65
---UPD SuperMethodInvocation@@super.setEndpointUri(UnsafeUriCharactersEncoder.encode(address)) @TO@ super.setEndpointUri(UnsafeUriCharactersEncoder.encodeHttpURI(address)) @AT@ 32089 @LENGTH@ 64
------UPD SimpleName@@MethodName:setEndpointUri:[UnsafeUriCharactersEncoder.encode(address)] @TO@ MethodName:setEndpointUri:[UnsafeUriCharactersEncoder.encodeHttpURI(address)] @AT@ 32095 @LENGTH@ 14
------UPD MethodInvocation@@UnsafeUriCharactersEncoder.encode(address) @TO@ UnsafeUriCharactersEncoder.encodeHttpURI(address) @AT@ 32110 @LENGTH@ 42
---------UPD SimpleName@@MethodName:encode:[address] @TO@ MethodName:encodeHttpURI:[address] @AT@ 32137 @LENGTH@ 15


UPD ReturnStatement@@ClassInstanceCreation:new Point(latitude,longitude) @TO@ ClassInstanceCreation:new Point(longitude,latitude) @AT@ 1697 @LENGTH@ 38
---UPD ClassInstanceCreation@@Point[latitude, longitude] @TO@ Point[longitude, latitude] @AT@ 1704 @LENGTH@ 30
------UPD SimpleName@@latitude @TO@ longitude @AT@ 1714 @LENGTH@ 8
------UPD SimpleName@@longitude @TO@ latitude @AT@ 1724 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean match2=("application/octet-stream; name=logo.jpeg").equals(handler.getContentType()); @TO@ boolean match2="application/octet-stream; name=logo.jpeg".equals(handler.getContentType()); @AT@ 3382 @LENGTH@ 95
---UPD VariableDeclarationFragment@@match2=("application/octet-stream; name=logo.jpeg").equals(handler.getContentType()) @TO@ match2="application/octet-stream; name=logo.jpeg".equals(handler.getContentType()) @AT@ 3390 @LENGTH@ 86
------UPD MethodInvocation@@("application/octet-stream; name=logo.jpeg").equals(handler.getContentType()) @TO@ "application/octet-stream; name=logo.jpeg".equals(handler.getContentType()) @AT@ 3399 @LENGTH@ 77
---------INS StringLiteral@@"application/octet-stream; name=logo.jpeg" @TO@ MethodInvocation@@("application/octet-stream; name=logo.jpeg").equals(handler.getContentType()) @AT@ 3397 @LENGTH@ 42
---------DEL ParenthesizedExpression@@("application/octet-stream; name=logo.jpeg") @AT@ 3399 @LENGTH@ 44
------------DEL StringLiteral@@"application/octet-stream; name=logo.jpeg" @AT@ 3400 @LENGTH@ 42


UPD VariableDeclarationStatement@@BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertyUserFile),"UTF8")); @TO@ BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertyUserFile),StandardCharsets.UTF_8)); @AT@ 2342 @LENGTH@ 110
---UPD VariableDeclarationFragment@@bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertyUserFile),"UTF8")) @TO@ bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(propertyUserFile),StandardCharsets.UTF_8)) @AT@ 2357 @LENGTH@ 94
------UPD ClassInstanceCreation@@BufferedWriter[new OutputStreamWriter(new FileOutputStream(propertyUserFile),"UTF8")] @TO@ BufferedWriter[new OutputStreamWriter(new FileOutputStream(propertyUserFile),StandardCharsets.UTF_8)] @AT@ 2362 @LENGTH@ 89
---------UPD ClassInstanceCreation@@OutputStreamWriter[new FileOutputStream(propertyUserFile), "UTF8"] @TO@ OutputStreamWriter[new FileOutputStream(propertyUserFile), StandardCharsets.UTF_8] @AT@ 2381 @LENGTH@ 69
------------DEL StringLiteral@@"UTF8" @AT@ 2443 @LENGTH@ 6
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@OutputStreamWriter[new FileOutputStream(propertyUserFile), "UTF8"] @AT@ 2486 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2486 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2503 @LENGTH@ 5

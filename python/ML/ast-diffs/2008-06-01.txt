UPD EnhancedForStatement@@for (Class<? extends Throwable> type : thresholds.keySet()) {  typeMap.put(type,new IntegerHolder(thresholds.get(type)));} @TO@ for (Entry<Class<? extends Throwable>,Integer> entry : thresholds.entrySet()) {  typeMap.put(entry.getKey(),new IntegerHolder(entry.getValue()));} @AT@ 2802 @LENGTH@ 128
---UPD SingleVariableDeclaration@@Class<? extends Throwable> type @TO@ Entry<Class<? extends Throwable>,Integer> entry @AT@ 2807 @LENGTH@ 31
------DEL ParameterizedType@@Class<? extends Throwable> @AT@ 2807 @LENGTH@ 26
------UPD SimpleName@@type @TO@ entry @AT@ 2834 @LENGTH@ 4
------INS ParameterizedType@@Entry<Class<? extends Throwable>,Integer> @TO@ SingleVariableDeclaration@@Class<? extends Throwable> type @AT@ 2841 @LENGTH@ 42
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<Class<? extends Throwable>,Integer> @AT@ 2841 @LENGTH@ 5
---------INS ParameterizedType@@Class<? extends Throwable> @TO@ ParameterizedType@@Entry<Class<? extends Throwable>,Integer> @AT@ 2847 @LENGTH@ 26
------------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 2807 @LENGTH@ 5
------------MOV WildcardType@@? @TO@ ParameterizedType@@Class<? extends Throwable> @AT@ 2813 @LENGTH@ 19
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Entry<Class<? extends Throwable>,Integer> @AT@ 2875 @LENGTH@ 7
---UPD MethodInvocation@@thresholds.keySet() @TO@ thresholds.entrySet() @AT@ 2841 @LENGTH@ 19
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 2852 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:typeMap.put(type,new IntegerHolder(thresholds.get(type))) @TO@ MethodInvocation:typeMap.put(entry.getKey(),new IntegerHolder(entry.getValue())) @AT@ 2867 @LENGTH@ 59
------UPD MethodInvocation@@typeMap.put(type,new IntegerHolder(thresholds.get(type))) @TO@ typeMap.put(entry.getKey(),new IntegerHolder(entry.getValue())) @AT@ 2867 @LENGTH@ 58
---------UPD SimpleName@@MethodName:put:[type, new IntegerHolder(thresholds.get(type))] @TO@ MethodName:put:[entry.getKey(), new IntegerHolder(entry.getValue())] @AT@ 2875 @LENGTH@ 50
------------DEL SimpleName@@type @AT@ 2879 @LENGTH@ 4
------------UPD ClassInstanceCreation@@IntegerHolder[thresholds.get(type)] @TO@ IntegerHolder[entry.getValue()] @AT@ 2885 @LENGTH@ 39
---------------UPD MethodInvocation@@thresholds.get(type) @TO@ entry.getValue() @AT@ 2903 @LENGTH@ 20
------------------UPD SimpleName@@Name:thresholds @TO@ Name:entry @AT@ 2903 @LENGTH@ 10
------------------UPD SimpleName@@MethodName:get:[type] @TO@ MethodName:getValue:[] @AT@ 2914 @LENGTH@ 9
---------------------DEL SimpleName@@type @AT@ 2918 @LENGTH@ 4
------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[type, new IntegerHolder(thresholds.get(type))] @AT@ 2932 @LENGTH@ 14
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 2932 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 2938 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:handled(constant.createPredicate("true")) @TO@ MethodInvocation:handled(constant.createPredicate(Boolean.toString(cond))) @AT@ 4579 @LENGTH@ 49
---UPD MethodInvocation@@handled(constant.createPredicate("true")) @TO@ handled(constant.createPredicate(Boolean.toString(cond))) @AT@ 4586 @LENGTH@ 41
------UPD SimpleName@@MethodName:handled:[constant.createPredicate("true")] @TO@ MethodName:handled:[constant.createPredicate(Boolean.toString(cond))] @AT@ 4586 @LENGTH@ 41
---------UPD MethodInvocation@@constant.createPredicate("true") @TO@ constant.createPredicate(Boolean.toString(cond)) @AT@ 4594 @LENGTH@ 32
------------UPD SimpleName@@MethodName:createPredicate:["true"] @TO@ MethodName:createPredicate:[Boolean.toString(cond)] @AT@ 4603 @LENGTH@ 23
---------------INS MethodInvocation@@Boolean.toString(cond) @TO@ SimpleName@@MethodName:createPredicate:["true"] @AT@ 4618 @LENGTH@ 22
------------------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.toString(cond) @AT@ 4618 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toString:[cond] @TO@ MethodInvocation@@Boolean.toString(cond) @AT@ 4626 @LENGTH@ 14
---------------------INS SimpleName@@cond @TO@ SimpleName@@MethodName:toString:[cond] @AT@ 4635 @LENGTH@ 4
---------------DEL StringLiteral@@"true" @AT@ 4619 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:maxRange=ranges[0].getMax() @TO@ Assignment:maxRange=ranges[0].getMin() @AT@ 1648 @LENGTH@ 30
---UPD Assignment@@maxRange=ranges[0].getMax() @TO@ maxRange=ranges[0].getMin() @AT@ 1648 @LENGTH@ 29
------UPD MethodInvocation@@ranges[0].getMax() @TO@ ranges[0].getMin() @AT@ 1659 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getMax:[] @TO@ MethodName:getMin:[] @AT@ 1669 @LENGTH@ 8


UPD FieldDeclaration@@private, String, [ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.append=false&consumer.setNames=true"] @TO@ private, String, [ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.setNames=true"] @AT@ 1534 @LENGTH@ 199
---UPD VariableDeclarationFragment@@ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.append=false&consumer.setNames=true" @TO@ ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.setNames=true" @AT@ 1549 @LENGTH@ 183
------UPD InfixExpression@@"ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.append=false&consumer.setNames=true" @TO@ "ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.setNames=true" @AT@ 1558 @LENGTH@ 174
---------UPD StringLiteral@@"&consumer.delay=2000&consumer.recursive=true&consumer.append=false&consumer.setNames=true" @TO@ "&consumer.delay=2000&consumer.recursive=true&consumer.setNames=true" @AT@ 1641 @LENGTH@ 91


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unable to invoke method: [" + method + "] on object: ["+ object+ "] with arguments: ["+ args+ "]") @TO@ ClassInstanceCreation:new IllegalArgumentException("Unable to invoke method: [" + method + "] on object: ["+ object+ "] with arguments: ["+ Arrays.toString(args)+ "]") @AT@ 3507 @LENGTH@ 145
---UPD ClassInstanceCreation@@IllegalArgumentException["Unable to invoke method: [" + method + "] on object: ["+ object+ "] with arguments: ["+ args+ "]"] @TO@ IllegalArgumentException["Unable to invoke method: [" + method + "] on object: ["+ object+ "] with arguments: ["+ Arrays.toString(args)+ "]"] @AT@ 3513 @LENGTH@ 138
------UPD InfixExpression@@"Unable to invoke method: [" + method + "] on object: ["+ object+ "] with arguments: ["+ args+ "]" @TO@ "Unable to invoke method: [" + method + "] on object: ["+ object+ "] with arguments: ["+ Arrays.toString(args)+ "]" @AT@ 3542 @LENGTH@ 108
---------DEL SimpleName@@args @AT@ 3640 @LENGTH@ 4
---------INS MethodInvocation@@Arrays.toString(args) @TO@ InfixExpression@@"Unable to invoke method: [" + method + "] on object: ["+ object+ "] with arguments: ["+ args+ "]" @AT@ 3682 @LENGTH@ 21
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(args) @AT@ 3682 @LENGTH@ 6
------------INS SimpleName@@MethodName:toString:[args] @TO@ MethodInvocation@@Arrays.toString(args) @AT@ 3689 @LENGTH@ 14
---------------INS SimpleName@@args @TO@ SimpleName@@MethodName:toString:[args] @AT@ 3698 @LENGTH@ 4


UPD TypeDeclaration@@[public]CustomItemWriter, [ItemWriter<T>] @TO@ [public, static]CustomItemWriter, [ItemWriter<T>] @AT@ 1559 @LENGTH@ 286
---INS Modifier@@static @TO@ TypeDeclaration@@[public]CustomItemWriter, [ItemWriter<T>] @AT@ 1566 @LENGTH@ 6


UPD VariableDeclarationStatement@@final Authentication rod=new TestingAuthenticationToken("rod","koala","ROLE_1"); @TO@ final Authentication rod=new UsernamePasswordAuthenticationToken("rod","koala",AuthorityUtils.createAuthorityList("ROLE_1")); @AT@ 3553 @LENGTH@ 84
---UPD VariableDeclarationFragment@@rod=new TestingAuthenticationToken("rod","koala","ROLE_1") @TO@ rod=new UsernamePasswordAuthenticationToken("rod","koala",AuthorityUtils.createAuthorityList("ROLE_1")) @AT@ 3574 @LENGTH@ 62
------UPD ClassInstanceCreation@@TestingAuthenticationToken["rod", "koala", "ROLE_1"] @TO@ UsernamePasswordAuthenticationToken["rod", "koala", AuthorityUtils.createAuthorityList("ROLE_1")] @AT@ 3580 @LENGTH@ 56
---------UPD SimpleType@@TestingAuthenticationToken @TO@ UsernamePasswordAuthenticationToken @AT@ 3584 @LENGTH@ 26
---------DEL StringLiteral@@"ROLE_1" @AT@ 3627 @LENGTH@ 8
---------INS MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_1") @TO@ ClassInstanceCreation@@TestingAuthenticationToken["rod", "koala", "ROLE_1"] @AT@ 3714 @LENGTH@ 44
------------INS SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_1") @AT@ 3714 @LENGTH@ 14
------------INS SimpleName@@MethodName:createAuthorityList:["ROLE_1"] @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_1") @AT@ 3729 @LENGTH@ 29
---------------INS StringLiteral@@"ROLE_1" @TO@ SimpleName@@MethodName:createAuthorityList:["ROLE_1"] @AT@ 3749 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @TO@ TypeDeclaration@@[public, final]TarTestCase, TestCase @AT@ 5074 @LENGTH@ 392
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5074 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5081 @LENGTH@ 4
---INS SimpleName@@MethodName:testArchive8GbFile @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5086 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5114 @LENGTH@ 9
---INS VariableDeclarationStatement@@long size=(long)8 * 1024 * 1024* 1024; @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5138 @LENGTH@ 42
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long size=(long)8 * 1024 * 1024* 1024; @AT@ 5138 @LENGTH@ 4
------INS VariableDeclarationFragment@@size=(long)8 * 1024 * 1024* 1024 @TO@ VariableDeclarationStatement@@long size=(long)8 * 1024 * 1024* 1024; @AT@ 5143 @LENGTH@ 36
---------INS SimpleName@@size @TO@ VariableDeclarationFragment@@size=(long)8 * 1024 * 1024* 1024 @AT@ 5143 @LENGTH@ 4
---------INS InfixExpression@@(long)8 * 1024 * 1024* 1024 @TO@ VariableDeclarationFragment@@size=(long)8 * 1024 * 1024* 1024 @AT@ 5150 @LENGTH@ 29
------------INS CastExpression@@(long)8 @TO@ InfixExpression@@(long)8 * 1024 * 1024* 1024 @AT@ 5150 @LENGTH@ 8
---------------INS PrimitiveType@@long @TO@ CastExpression@@(long)8 @AT@ 5151 @LENGTH@ 4
---------------INS NumberLiteral@@8 @TO@ CastExpression@@(long)8 @AT@ 5157 @LENGTH@ 1
------------INS Operator@@* @TO@ InfixExpression@@(long)8 * 1024 * 1024* 1024 @AT@ 5158 @LENGTH@ 1
------------INS NumberLiteral@@1024 @TO@ InfixExpression@@(long)8 * 1024 * 1024* 1024 @AT@ 5161 @LENGTH@ 4
------------INS NumberLiteral@@1024 @TO@ InfixExpression@@(long)8 * 1024 * 1024* 1024 @AT@ 5168 @LENGTH@ 4
------------INS NumberLiteral@@1024 @TO@ InfixExpression@@(long)8 * 1024 * 1024* 1024 @AT@ 5175 @LENGTH@ 4
---INS VariableDeclarationStatement@@TarOutputStream out=new TarOutputStream(new NullOutputStream()); @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5190 @LENGTH@ 66
------INS SimpleType@@TarOutputStream @TO@ VariableDeclarationStatement@@TarOutputStream out=new TarOutputStream(new NullOutputStream()); @AT@ 5190 @LENGTH@ 15
------INS VariableDeclarationFragment@@out=new TarOutputStream(new NullOutputStream()) @TO@ VariableDeclarationStatement@@TarOutputStream out=new TarOutputStream(new NullOutputStream()); @AT@ 5206 @LENGTH@ 49
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=new TarOutputStream(new NullOutputStream()) @AT@ 5206 @LENGTH@ 3
---------INS ClassInstanceCreation@@TarOutputStream[new NullOutputStream()] @TO@ VariableDeclarationFragment@@out=new TarOutputStream(new NullOutputStream()) @AT@ 5212 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@TarOutputStream[new NullOutputStream()] @AT@ 5212 @LENGTH@ 3
------------INS SimpleType@@TarOutputStream @TO@ ClassInstanceCreation@@TarOutputStream[new NullOutputStream()] @AT@ 5216 @LENGTH@ 15
------------INS ClassInstanceCreation@@NullOutputStream[] @TO@ ClassInstanceCreation@@TarOutputStream[new NullOutputStream()] @AT@ 5232 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@NullOutputStream[] @AT@ 5232 @LENGTH@ 3
---------------INS SimpleType@@NullOutputStream @TO@ ClassInstanceCreation@@NullOutputStream[] @AT@ 5236 @LENGTH@ 16
---INS VariableDeclarationStatement@@TarEntry entry=new TarEntry("bigfile.data"); @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5265 @LENGTH@ 46
------INS SimpleType@@TarEntry @TO@ VariableDeclarationStatement@@TarEntry entry=new TarEntry("bigfile.data"); @AT@ 5265 @LENGTH@ 8
------INS VariableDeclarationFragment@@entry=new TarEntry("bigfile.data") @TO@ VariableDeclarationStatement@@TarEntry entry=new TarEntry("bigfile.data"); @AT@ 5274 @LENGTH@ 36
---------INS SimpleName@@entry @TO@ VariableDeclarationFragment@@entry=new TarEntry("bigfile.data") @AT@ 5274 @LENGTH@ 5
---------INS ClassInstanceCreation@@TarEntry["bigfile.data"] @TO@ VariableDeclarationFragment@@entry=new TarEntry("bigfile.data") @AT@ 5282 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@TarEntry["bigfile.data"] @AT@ 5282 @LENGTH@ 3
------------INS SimpleType@@TarEntry @TO@ ClassInstanceCreation@@TarEntry["bigfile.data"] @AT@ 5286 @LENGTH@ 8
------------INS StringLiteral@@"bigfile.data" @TO@ ClassInstanceCreation@@TarEntry["bigfile.data"] @AT@ 5295 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:entry.setSize(size) @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5320 @LENGTH@ 20
------INS MethodInvocation@@entry.setSize(size) @TO@ ExpressionStatement@@MethodInvocation:entry.setSize(size) @AT@ 5320 @LENGTH@ 19
---------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.setSize(size) @AT@ 5320 @LENGTH@ 5
---------INS SimpleName@@MethodName:setSize:[size] @TO@ MethodInvocation@@entry.setSize(size) @AT@ 5326 @LENGTH@ 13
------------INS SimpleName@@size @TO@ SimpleName@@MethodName:setSize:[size] @AT@ 5334 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:out.putNextEntry(entry) @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5350 @LENGTH@ 24
------INS MethodInvocation@@out.putNextEntry(entry) @TO@ ExpressionStatement@@MethodInvocation:out.putNextEntry(entry) @AT@ 5350 @LENGTH@ 23
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.putNextEntry(entry) @AT@ 5350 @LENGTH@ 3
---------INS SimpleName@@MethodName:putNextEntry:[entry] @TO@ MethodInvocation@@out.putNextEntry(entry) @AT@ 5354 @LENGTH@ 19
------------INS SimpleName@@entry @TO@ SimpleName@@MethodName:putNextEntry:[entry] @AT@ 5367 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:out.copyEntryContents(new NullInputStream(size)) @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5383 @LENGTH@ 51
------INS MethodInvocation@@out.copyEntryContents(new NullInputStream(size)) @TO@ ExpressionStatement@@MethodInvocation:out.copyEntryContents(new NullInputStream(size)) @AT@ 5383 @LENGTH@ 50
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.copyEntryContents(new NullInputStream(size)) @AT@ 5383 @LENGTH@ 3
---------INS SimpleName@@MethodName:copyEntryContents:[new NullInputStream(size)] @TO@ MethodInvocation@@out.copyEntryContents(new NullInputStream(size)) @AT@ 5387 @LENGTH@ 46
------------INS ClassInstanceCreation@@NullInputStream[size] @TO@ SimpleName@@MethodName:copyEntryContents:[new NullInputStream(size)] @AT@ 5406 @LENGTH@ 25
---------------INS New@@new @TO@ ClassInstanceCreation@@NullInputStream[size] @AT@ 5406 @LENGTH@ 3
---------------INS SimpleType@@NullInputStream @TO@ ClassInstanceCreation@@NullInputStream[size] @AT@ 5410 @LENGTH@ 15
---------------INS SimpleName@@size @TO@ ClassInstanceCreation@@NullInputStream[size] @AT@ 5426 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:out.closeEntry() @TO@ MethodDeclaration@@public, void, MethodName:testArchive8GbFile, Exception,  @AT@ 5443 @LENGTH@ 17
------INS MethodInvocation@@out.closeEntry() @TO@ ExpressionStatement@@MethodInvocation:out.closeEntry() @AT@ 5443 @LENGTH@ 16
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.closeEntry() @AT@ 5443 @LENGTH@ 3
---------INS SimpleName@@MethodName:closeEntry:[] @TO@ MethodInvocation@@out.closeEntry() @AT@ 5447 @LENGTH@ 12


UPD TypeDeclaration@@[public]ColumnMapItemPreparedStatementSetter, [ItemPreparedStatementSetter] @TO@ [public]ColumnMapItemPreparedStatementSetter, [ItemPreparedStatementSetter<Map<String,Object>>] @AT@ 967 @LENGTH@ 551
---INS ParameterizedType@@ItemPreparedStatementSetter<Map<String,Object>> @TO@ TypeDeclaration@@[public]ColumnMapItemPreparedStatementSetter, [ItemPreparedStatementSetter] @AT@ 951 @LENGTH@ 48
------INS SimpleType@@ItemPreparedStatementSetter @TO@ ParameterizedType@@ItemPreparedStatementSetter<Map<String,Object>> @AT@ 951 @LENGTH@ 27
------INS ParameterizedType@@Map<String,Object> @TO@ ParameterizedType@@ItemPreparedStatementSetter<Map<String,Object>> @AT@ 979 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 979 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 983 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 991 @LENGTH@ 6
---DEL SimpleType@@ItemPreparedStatementSetter @AT@ 1028 @LENGTH@ 27


INS TryStatement@@try {  return SimpleLanguage.simple(simple).evaluate(exchange);} catch (IllegalSyntaxException e) {  return ConstantLanguage.constant(simple).evaluate(exchange);} @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, E exchange,  @AT@ 5876 @LENGTH@ 318
---MOV ReturnStatement@@MethodInvocation:SimpleLanguage.simple(simple).evaluate(exchange) @TO@ TryStatement@@try {  return SimpleLanguage.simple(simple).evaluate(exchange);} catch (IllegalSyntaxException e) {  return ConstantLanguage.constant(simple).evaluate(exchange);} @AT@ 5759 @LENGTH@ 56
---INS CatchClause@@catch (IllegalSyntaxException e) {  return ConstantLanguage.constant(simple).evaluate(exchange);} @TO@ TryStatement@@try {  return SimpleLanguage.simple(simple).evaluate(exchange);} catch (IllegalSyntaxException e) {  return ConstantLanguage.constant(simple).evaluate(exchange);} @AT@ 5977 @LENGTH@ 217
------INS SingleVariableDeclaration@@IllegalSyntaxException e @TO@ CatchClause@@catch (IllegalSyntaxException e) {  return ConstantLanguage.constant(simple).evaluate(exchange);} @AT@ 5984 @LENGTH@ 24
---------INS SimpleType@@IllegalSyntaxException @TO@ SingleVariableDeclaration@@IllegalSyntaxException e @AT@ 5984 @LENGTH@ 22
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalSyntaxException e @AT@ 6007 @LENGTH@ 1
------INS ReturnStatement@@MethodInvocation:ConstantLanguage.constant(simple).evaluate(exchange) @TO@ CatchClause@@catch (IllegalSyntaxException e) {  return ConstantLanguage.constant(simple).evaluate(exchange);} @AT@ 6116 @LENGTH@ 60
---------INS MethodInvocation@@ConstantLanguage.constant(simple).evaluate(exchange) @TO@ ReturnStatement@@MethodInvocation:ConstantLanguage.constant(simple).evaluate(exchange) @AT@ 6123 @LENGTH@ 52
------------INS MethodInvocation@@MethodName:constant:[simple] @TO@ MethodInvocation@@ConstantLanguage.constant(simple).evaluate(exchange) @AT@ 6123 @LENGTH@ 33
---------------INS SimpleName@@simple @TO@ MethodInvocation@@MethodName:constant:[simple] @AT@ 6149 @LENGTH@ 6
------------INS SimpleName@@Name:ConstantLanguage @TO@ MethodInvocation@@ConstantLanguage.constant(simple).evaluate(exchange) @AT@ 6123 @LENGTH@ 16
------------INS SimpleName@@MethodName:evaluate:[exchange] @TO@ MethodInvocation@@ConstantLanguage.constant(simple).evaluate(exchange) @AT@ 6157 @LENGTH@ 18
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange] @AT@ 6166 @LENGTH@ 8


INS TryStatement@@try {  testReaderUpdatesProcessIndicator();} catch (Exception e) {  fail("Unxpected Exception: " + e);} @TO@ MethodDeclaration@@public, Object, MethodName:doInTransaction, TransactionStatus transactionStatus,  @AT@ 3416 @LENGTH@ 129
---INS ExpressionStatement@@MethodInvocation:testReaderUpdatesProcessIndicator() @TO@ TryStatement@@try {  testReaderUpdatesProcessIndicator();} catch (Exception e) {  fail("Unxpected Exception: " + e);} @AT@ 3429 @LENGTH@ 36
------INS MethodInvocation@@MethodName:testReaderUpdatesProcessIndicator:[] @TO@ ExpressionStatement@@MethodInvocation:testReaderUpdatesProcessIndicator() @AT@ 3429 @LENGTH@ 35
---INS CatchClause@@catch (Exception e) {  fail("Unxpected Exception: " + e);} @TO@ TryStatement@@try {  testReaderUpdatesProcessIndicator();} catch (Exception e) {  fail("Unxpected Exception: " + e);} @AT@ 3474 @LENGTH@ 71
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  fail("Unxpected Exception: " + e);} @AT@ 3481 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3481 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3491 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:fail("Unxpected Exception: " + e) @TO@ CatchClause@@catch (Exception e) {  fail("Unxpected Exception: " + e);} @AT@ 3503 @LENGTH@ 34
---------INS MethodInvocation@@fail("Unxpected Exception: " + e) @TO@ ExpressionStatement@@MethodInvocation:fail("Unxpected Exception: " + e) @AT@ 3503 @LENGTH@ 33
------------INS SimpleName@@MethodName:fail:["Unxpected Exception: " + e] @TO@ MethodInvocation@@fail("Unxpected Exception: " + e) @AT@ 3503 @LENGTH@ 33
---------------INS InfixExpression@@"Unxpected Exception: " + e @TO@ SimpleName@@MethodName:fail:["Unxpected Exception: " + e] @AT@ 3508 @LENGTH@ 27
------------------INS StringLiteral@@"Unxpected Exception: " @TO@ InfixExpression@@"Unxpected Exception: " + e @AT@ 3508 @LENGTH@ 23
------------------INS Operator@@+ @TO@ InfixExpression@@"Unxpected Exception: " + e @AT@ 3531 @LENGTH@ 1
------------------INS SimpleName@@e @TO@ InfixExpression@@"Unxpected Exception: " + e @AT@ 3534 @LENGTH@ 1


UPD TryStatement@@try {  Object convertedValue=convert(typeConverter,setter.getParameterTypes()[0],value);  setter.invoke(target,convertedValue);  return true;} catch (IllegalArgumentException e) {  typeConvertionFailed=e;  LOG.trace("Setter " + setter + " with parameter type "+ setter.getParameterTypes()[0]+ " could not be used for type conertions of "+ value);} @TO@ try {  Object convertedValue=convert(typeConverter,setter.getParameterTypes()[0],value);  setter.invoke(target,convertedValue);  return true;} catch (NoTypeConversionAvailableException e) {}catch (IllegalArgumentException e) {  typeConvertionFailed=e;  LOG.trace("Setter " + setter + " with parameter type "+ setter.getParameterTypes()[0]+ " could not be used for type conertions of "+ value);} @AT@ 7350 @LENGTH@ 661
---INS CatchClause@@catch (NoTypeConversionAvailableException e) {} @TO@ TryStatement@@try {  Object convertedValue=convert(typeConverter,setter.getParameterTypes()[0],value);  setter.invoke(target,convertedValue);  return true;} catch (IllegalArgumentException e) {  typeConvertionFailed=e;  LOG.trace("Setter " + setter + " with parameter type "+ setter.getParameterTypes()[0]+ " could not be used for type conertions of "+ value);} @AT@ 7588 @LENGTH@ 162
------INS SingleVariableDeclaration@@NoTypeConversionAvailableException e @TO@ CatchClause@@catch (NoTypeConversionAvailableException e) {} @AT@ 7595 @LENGTH@ 36
---------INS SimpleType@@NoTypeConversionAvailableException @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 7595 @LENGTH@ 34
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 7630 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/delimited.xml"}), public]DelimitedFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/delimited.xml"}), public]DelimitedFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 650
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/delimited.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/delimited.xml"}) @AT@ 1112 @LENGTH@ 132


UPD MethodDeclaration@@int, MethodName:getStepExecutionCount, JobInstance jobInstance, Step step,  @TO@ int, MethodName:getStepExecutionCount, JobInstance jobInstance, String stepName,  @AT@ 4139 @LENGTH@ 58
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 4186 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 4186 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 4191 @LENGTH@ 4


UPD ReturnStatement@@CastExpression:(String[])types.toArray() @TO@ MethodInvocation:types.toArray(new String[types.size()]) @AT@ 4483 @LENGTH@ 33
---INS MethodInvocation@@types.toArray(new String[types.size()]) @TO@ ReturnStatement@@CastExpression:(String[])types.toArray() @AT@ 4486 @LENGTH@ 39
------INS SimpleName@@Name:types @TO@ MethodInvocation@@types.toArray(new String[types.size()]) @AT@ 4486 @LENGTH@ 5
------INS SimpleName@@MethodName:toArray:[new String[types.size()]] @TO@ MethodInvocation@@types.toArray(new String[types.size()]) @AT@ 4492 @LENGTH@ 33
---------INS ArrayCreation@@new String[types.size()] @TO@ SimpleName@@MethodName:toArray:[new String[types.size()]] @AT@ 4500 @LENGTH@ 24
------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[types.size()] @AT@ 4504 @LENGTH@ 20
---------------MOV SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4491 @LENGTH@ 6
------------INS MethodInvocation@@types.size() @TO@ ArrayCreation@@new String[types.size()] @AT@ 4511 @LENGTH@ 12
---------------MOV SimpleName@@Name:types @TO@ MethodInvocation@@types.size() @AT@ 4500 @LENGTH@ 5
---------------MOV SimpleName@@MethodName:toArray:[] @TO@ MethodInvocation@@types.size() @AT@ 4506 @LENGTH@ 9
---DEL CastExpression@@(String[])types.toArray() @AT@ 4490 @LENGTH@ 25
------DEL ArrayType@@String[] @AT@ 4491 @LENGTH@ 8
------DEL MethodInvocation@@types.toArray() @AT@ 4500 @LENGTH@ 15


UPD MethodDeclaration@@public, voidMethodName:DefaultDirContextValidator,  @TO@ public, voidMethodName:DefaultDirContextValidator, int searchScope,  @AT@ 3117 @LENGTH@ 337
---INS SingleVariableDeclaration@@int searchScope @TO@ MethodDeclaration@@public, voidMethodName:DefaultDirContextValidator,  @AT@ 3551 @LENGTH@ 15
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int searchScope @AT@ 3551 @LENGTH@ 3
------INS SimpleName@@searchScope @TO@ SingleVariableDeclaration@@int searchScope @AT@ 3555 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:reader=new ListItemReader((List<?>)factory.createInstance()) @TO@ Assignment:reader=new ListItemReader<String>((List<String>)factory.createInstance()) @AT@ 1697 @LENGTH@ 64
---UPD Assignment@@reader=new ListItemReader((List<?>)factory.createInstance()) @TO@ reader=new ListItemReader<String>((List<String>)factory.createInstance()) @AT@ 1697 @LENGTH@ 63
------UPD ClassInstanceCreation@@ListItemReader[(List<?>)factory.createInstance()] @TO@ ListItemReader<String>[(List<String>)factory.createInstance()] @AT@ 1706 @LENGTH@ 54
---------DEL SimpleType@@ListItemReader @AT@ 1710 @LENGTH@ 14
---------UPD CastExpression@@(List<?>)factory.createInstance() @TO@ (List<String>)factory.createInstance() @AT@ 1725 @LENGTH@ 34
------------UPD ParameterizedType@@List<?> @TO@ List<String> @AT@ 1726 @LENGTH@ 7
---------------DEL WildcardType@@? @AT@ 1731 @LENGTH@ 1
---------------INS SimpleType@@String @TO@ ParameterizedType@@List<?> @AT@ 1779 @LENGTH@ 6
---------INS ParameterizedType@@ListItemReader<String> @TO@ ClassInstanceCreation@@ListItemReader[(List<?>)factory.createInstance()] @AT@ 1750 @LENGTH@ 22
------------INS SimpleType@@ListItemReader @TO@ ParameterizedType@@ListItemReader<String> @AT@ 1750 @LENGTH@ 14
------------INS SimpleType@@String @TO@ ParameterizedType@@ListItemReader<String> @AT@ 1765 @LENGTH@ 6


MOV FieldDeclaration@@private, String, [mainClass] @TO@ TypeDeclaration@@[public]DotMojo, AbstractMavenReport @AT@ 3217 @LENGTH@ 25


INS IfStatement@@if (name.endsWith(FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX)) {  return false;} @TO@ MethodDeclaration@@protected, boolean, MethodName:isMatched, File file,  @AT@ 11841 @LENGTH@ 96
---INS MethodInvocation@@name.endsWith(FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX) @TO@ IfStatement@@if (name.endsWith(FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX)) {  return false;} @AT@ 11845 @LENGTH@ 53
------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.endsWith(FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX) @AT@ 11845 @LENGTH@ 4
------INS SimpleName@@MethodName:endsWith:[FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX] @TO@ MethodInvocation@@name.endsWith(FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX) @AT@ 11850 @LENGTH@ 48
---------INS QualifiedName@@FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @TO@ SimpleName@@MethodName:endsWith:[FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX] @AT@ 11859 @LENGTH@ 38
------------INS SimpleName@@FileEndpoint @TO@ QualifiedName@@FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 11859 @LENGTH@ 12
------------INS SimpleName@@DEFAULT_LOCK_FILE_POSTFIX @TO@ QualifiedName@@FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 11872 @LENGTH@ 25
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (name.endsWith(FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX)) {  return false;} @AT@ 11900 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 11914 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 11921 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/xml.xml"}), public]XmlFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/xml.xml"}), public]XmlFunctionalTests, AbstractJobTests @AT@ 1079 @LENGTH@ 643
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/xml.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/xml.xml"}) @AT@ 1119 @LENGTH@ 126


MOV FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(HttpProducer.class)] @TO@ TypeDeclaration@@[public]HttpProducer, DefaultProducer<HttpExchange>[Producer<HttpExchange>] @AT@ 2112 @LENGTH@ 79


UPD ExpressionStatement@@Assignment:moreFile=new File("XYZ") @TO@ Assignment:moreFile=new File("xyz") @AT@ 2021 @LENGTH@ 29
---UPD Assignment@@moreFile=new File("XYZ") @TO@ moreFile=new File("xyz") @AT@ 2021 @LENGTH@ 28
------UPD ClassInstanceCreation@@File["XYZ"] @TO@ File["xyz"] @AT@ 2034 @LENGTH@ 15
---------UPD StringLiteral@@"XYZ" @TO@ "xyz" @AT@ 2043 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from(bye).to("pojo:bye") @TO@ MethodInvocation:from(bye).to("bean:bye") @AT@ 2268 @LENGTH@ 25
---UPD MethodInvocation@@from(bye).to("pojo:bye") @TO@ from(bye).to("bean:bye") @AT@ 2268 @LENGTH@ 24
------UPD SimpleName@@MethodName:to:["pojo:bye"] @TO@ MethodName:to:["bean:bye"] @AT@ 2278 @LENGTH@ 14
---------UPD StringLiteral@@"pojo:bye" @TO@ "bean:bye" @AT@ 2281 @LENGTH@ 10


UPD MethodDeclaration@@public, HttpExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 2890 @LENGTH@ 115
---UPD SimpleType@@HttpExchange @TO@ Exchange @AT@ 2897 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:assertTrue(result instanceof Collection) @AT@ 1307 @LENGTH@ 41
---DEL MethodInvocation@@assertTrue(result instanceof Collection) @AT@ 1307 @LENGTH@ 40
------DEL SimpleName@@MethodName:assertTrue:[result instanceof Collection] @AT@ 1307 @LENGTH@ 40
---------DEL InstanceofExpression@@result instanceof Collection @AT@ 1318 @LENGTH@ 28
------------DEL SimpleName@@result @AT@ 1318 @LENGTH@ 6
------------DEL Instanceof@@instanceof @AT@ 1325 @LENGTH@ 10
------------DEL SimpleType@@Collection @AT@ 1336 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @TO@ TypeDeclaration@@[public]FileLanguageTest, LanguageTestSupport @AT@ 1670 @LENGTH@ 121
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 1670 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 1677 @LENGTH@ 4
---INS SimpleName@@MethodName:testConstantExpression @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 1682 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 1714 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertExpression("MyBigFile.txt","MyBigFile.txt") @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 1734 @LENGTH@ 51
------INS MethodInvocation@@assertExpression("MyBigFile.txt","MyBigFile.txt") @TO@ ExpressionStatement@@MethodInvocation:assertExpression("MyBigFile.txt","MyBigFile.txt") @AT@ 1734 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertExpression:["MyBigFile.txt", "MyBigFile.txt"] @TO@ MethodInvocation@@assertExpression("MyBigFile.txt","MyBigFile.txt") @AT@ 1734 @LENGTH@ 50
------------INS StringLiteral@@"MyBigFile.txt" @TO@ SimpleName@@MethodName:assertExpression:["MyBigFile.txt", "MyBigFile.txt"] @AT@ 1751 @LENGTH@ 15
------------INS StringLiteral@@"MyBigFile.txt" @TO@ SimpleName@@MethodName:assertExpression:["MyBigFile.txt", "MyBigFile.txt"] @AT@ 1768 @LENGTH@ 15


UPD TryStatement@@try {  byte[] buffer=new byte[1024];  while (in.available() > 0) {    int len=in.read(buffer);    out.write(buffer,0,len);  }}  finally {  in.close();} @TO@ try {  byte[] buffer=new byte[1024];  int bytesRead=-1;  while ((bytesRead=in.read(buffer)) != -1) {    out.write(buffer,0,bytesRead);  }}  finally {  in.close();} @AT@ 3890 @LENGTH@ 188
---UPD WhileStatement@@while (in.available() > 0) {  int len=in.read(buffer);  out.write(buffer,0,len);} @TO@ while ((bytesRead=in.read(buffer)) != -1) {  out.write(buffer,0,bytesRead);} @AT@ 3938 @LENGTH@ 101
------UPD InfixExpression@@in.available() > 0 @TO@ (bytesRead=in.read(buffer)) != -1 @AT@ 3945 @LENGTH@ 18
---------DEL MethodInvocation@@in.available() @AT@ 3945 @LENGTH@ 14
------------DEL SimpleName@@Name:in @AT@ 3945 @LENGTH@ 2
------------DEL SimpleName@@MethodName:available:[] @AT@ 3948 @LENGTH@ 11
---------DEL Operator@@> @AT@ 3959 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 3962 @LENGTH@ 1
---------INS ParenthesizedExpression@@(bytesRead=in.read(buffer)) @TO@ InfixExpression@@in.available() > 0 @AT@ 3970 @LENGTH@ 29
------------INS Assignment@@bytesRead=in.read(buffer) @TO@ ParenthesizedExpression@@(bytesRead=in.read(buffer)) @AT@ 3971 @LENGTH@ 27
---------------INS SimpleName@@bytesRead @TO@ Assignment@@bytesRead=in.read(buffer) @AT@ 3971 @LENGTH@ 9
---------------INS Operator@@= @TO@ Assignment@@bytesRead=in.read(buffer) @AT@ 3980 @LENGTH@ 1
---------------MOV MethodInvocation@@in.read(buffer) @TO@ Assignment@@bytesRead=in.read(buffer) @AT@ 3983 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@in.available() > 0 @AT@ 3999 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@in.available() > 0 @AT@ 4003 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 4003 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 4004 @LENGTH@ 1
------UPD Block@@WhileBody:{  int len=in.read(buffer);  out.write(buffer,0,len);} @TO@ WhileBody:{  out.write(buffer,0,bytesRead);} @AT@ 3965 @LENGTH@ 74
---------DEL VariableDeclarationStatement@@int len=in.read(buffer); @AT@ 3973 @LENGTH@ 26
------------DEL PrimitiveType@@int @AT@ 3973 @LENGTH@ 3
------------DEL VariableDeclarationFragment@@len=in.read(buffer) @AT@ 3977 @LENGTH@ 21
---------------DEL SimpleName@@len @AT@ 3977 @LENGTH@ 3
---------UPD ExpressionStatement@@MethodInvocation:out.write(buffer,0,len) @TO@ MethodInvocation:out.write(buffer,0,bytesRead) @AT@ 4006 @LENGTH@ 26
------------UPD MethodInvocation@@out.write(buffer,0,len) @TO@ out.write(buffer,0,bytesRead) @AT@ 4006 @LENGTH@ 25
---------------UPD SimpleName@@MethodName:write:[buffer, 0, len] @TO@ MethodName:write:[buffer, 0, bytesRead] @AT@ 4010 @LENGTH@ 21
------------------UPD SimpleName@@len @TO@ bytesRead @AT@ 4027 @LENGTH@ 3
---INS VariableDeclarationStatement@@int bytesRead=-1; @TO@ TryStatement@@try {  byte[] buffer=new byte[1024];  while (in.available() > 0) {    int len=in.read(buffer);    out.write(buffer,0,len);  }}  finally {  in.close();} @AT@ 3938 @LENGTH@ 19
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int bytesRead=-1; @AT@ 3938 @LENGTH@ 3
------INS VariableDeclarationFragment@@bytesRead=-1 @TO@ VariableDeclarationStatement@@int bytesRead=-1; @AT@ 3942 @LENGTH@ 14
---------INS SimpleName@@bytesRead @TO@ VariableDeclarationFragment@@bytesRead=-1 @AT@ 3942 @LENGTH@ 9
---------INS PrefixExpression@@-1 @TO@ VariableDeclarationFragment@@bytesRead=-1 @AT@ 3954 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 3954 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 3955 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(2,contribution.getReadCount()) @TO@ MethodInvocation:assertEquals(3,contribution.getReadCount()) @AT@ 9240 @LENGTH@ 45
---UPD MethodInvocation@@assertEquals(2,contribution.getReadCount()) @TO@ assertEquals(3,contribution.getReadCount()) @AT@ 9240 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertEquals:[2, contribution.getReadCount()] @TO@ MethodName:assertEquals:[3, contribution.getReadCount()] @AT@ 9240 @LENGTH@ 44
---------UPD NumberLiteral@@2 @TO@ 3 @AT@ 9253 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:setName(SortedMultiResourceItemReader.class.getSimpleName()) @TO@ MethodInvocation:setName(ClassUtils.getShortName(SortedMultiResourceItemReader.class)) @AT@ 836 @LENGTH@ 61
---UPD MethodInvocation@@setName(SortedMultiResourceItemReader.class.getSimpleName()) @TO@ setName(ClassUtils.getShortName(SortedMultiResourceItemReader.class)) @AT@ 836 @LENGTH@ 60
------UPD SimpleName@@MethodName:setName:[SortedMultiResourceItemReader.class.getSimpleName()] @TO@ MethodName:setName:[ClassUtils.getShortName(SortedMultiResourceItemReader.class)] @AT@ 836 @LENGTH@ 60
---------UPD MethodInvocation@@SortedMultiResourceItemReader.class.getSimpleName() @TO@ ClassUtils.getShortName(SortedMultiResourceItemReader.class) @AT@ 844 @LENGTH@ 51
------------DEL TypeLiteral@@SortedMultiResourceItemReader.class @AT@ 844 @LENGTH@ 35
------------DEL SimpleName@@MethodName:getSimpleName:[] @AT@ 880 @LENGTH@ 15
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@SortedMultiResourceItemReader.class.getSimpleName() @AT@ 964 @LENGTH@ 10
------------INS SimpleName@@MethodName:getShortName:[SortedMultiResourceItemReader.class] @TO@ MethodInvocation@@SortedMultiResourceItemReader.class.getSimpleName() @AT@ 975 @LENGTH@ 49
---------------INS TypeLiteral@@SortedMultiResourceItemReader.class @TO@ SimpleName@@MethodName:getShortName:[SortedMultiResourceItemReader.class] @AT@ 988 @LENGTH@ 35


UPD TypeDeclaration@@[private]NonExistentResource, AbstractResource @TO@ [private, static]NonExistentResource, AbstractResource @AT@ 9661 @LENGTH@ 304
---INS Modifier@@static @TO@ TypeDeclaration@@[private]NonExistentResource, AbstractResource @AT@ 9669 @LENGTH@ 6


UPD IfStatement@@if (value != null && exchange.getPattern().isOutCapable()) {  exchange.getOut().setBody(value);} @TO@ if (value != null) {  if (exchange.getPattern().isOutCapable()) {    if (LOG.isDebugEnabled()) {      LOG.debug("Setting bean invocation value on OUT message: " + value);    }    exchange.getOut(true).setBody(value);  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Setting bean invocation value on IN message: " + value);    }    exchange.getIn().setBody(value);  }} @AT@ 4263 @LENGTH@ 124
---DEL InfixExpression@@value != null && exchange.getPattern().isOutCapable() @AT@ 4267 @LENGTH@ 53
------DEL InfixExpression@@value != null @AT@ 4267 @LENGTH@ 13
------DEL Operator@@&& @AT@ 4280 @LENGTH@ 2
------DEL MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 4284 @LENGTH@ 36
---INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null && exchange.getPattern().isOutCapable()) {  exchange.getOut().setBody(value);} @AT@ 4267 @LENGTH@ 13
------MOV SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 4267 @LENGTH@ 5
------MOV Operator@@!= @TO@ InfixExpression@@value != null @AT@ 4272 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 4276 @LENGTH@ 4
---INS Block@@ThenBody:{  if (exchange.getPattern().isOutCapable()) {    if (LOG.isDebugEnabled()) {      LOG.debug("Setting bean invocation value on OUT message: " + value);    }    exchange.getOut(true).setBody(value);  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Setting bean invocation value on IN message: " + value);    }    exchange.getIn().setBody(value);  }} @TO@ IfStatement@@if (value != null && exchange.getPattern().isOutCapable()) {  exchange.getOut().setBody(value);} @AT@ 4282 @LENGTH@ 689
------INS IfStatement@@if (exchange.getPattern().isOutCapable()) {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on OUT message: " + value);  }  exchange.getOut(true).setBody(value);} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on IN message: " + value);  }  exchange.getIn().setBody(value);} @TO@ Block@@ThenBody:{  if (exchange.getPattern().isOutCapable()) {    if (LOG.isDebugEnabled()) {      LOG.debug("Setting bean invocation value on OUT message: " + value);    }    exchange.getOut(true).setBody(value);  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Setting bean invocation value on IN message: " + value);    }    exchange.getIn().setBody(value);  }} @AT@ 4300 @LENGTH@ 657
---------INS MethodInvocation@@exchange.getPattern().isOutCapable() @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on OUT message: " + value);  }  exchange.getOut(true).setBody(value);} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on IN message: " + value);  }  exchange.getIn().setBody(value);} @AT@ 4304 @LENGTH@ 36
------------MOV MethodInvocation@@MethodName:getPattern:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 4284 @LENGTH@ 21
------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 4284 @LENGTH@ 8
------------MOV SimpleName@@MethodName:isOutCapable:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 4306 @LENGTH@ 14
---------MOV Block@@ThenBody:{  exchange.getOut().setBody(value);} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on OUT message: " + value);  }  exchange.getOut(true).setBody(value);} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on IN message: " + value);  }  exchange.getIn().setBody(value);} @AT@ 4322 @LENGTH@ 65
------------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Setting bean invocation value on OUT message: " + value);} @TO@ Block@@ThenBody:{  exchange.getOut().setBody(value);} @AT@ 4443 @LENGTH@ 142
---------------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Setting bean invocation value on OUT message: " + value);} @AT@ 4447 @LENGTH@ 20
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 4447 @LENGTH@ 3
------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 4451 @LENGTH@ 16
---------------INS Block@@ThenBody:{  LOG.debug("Setting bean invocation value on OUT message: " + value);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Setting bean invocation value on OUT message: " + value);} @AT@ 4469 @LENGTH@ 116
------------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Setting bean invocation value on OUT message: " + value) @TO@ Block@@ThenBody:{  LOG.debug("Setting bean invocation value on OUT message: " + value);} @AT@ 4495 @LENGTH@ 68
---------------------INS MethodInvocation@@LOG.debug("Setting bean invocation value on OUT message: " + value) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Setting bean invocation value on OUT message: " + value) @AT@ 4495 @LENGTH@ 67
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Setting bean invocation value on OUT message: " + value) @AT@ 4495 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["Setting bean invocation value on OUT message: " + value] @TO@ MethodInvocation@@LOG.debug("Setting bean invocation value on OUT message: " + value) @AT@ 4499 @LENGTH@ 63
---------------------------INS InfixExpression@@"Setting bean invocation value on OUT message: " + value @TO@ SimpleName@@MethodName:debug:["Setting bean invocation value on OUT message: " + value] @AT@ 4505 @LENGTH@ 56
------------------------------INS StringLiteral@@"Setting bean invocation value on OUT message: " @TO@ InfixExpression@@"Setting bean invocation value on OUT message: " + value @AT@ 4505 @LENGTH@ 48
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Setting bean invocation value on OUT message: " + value @AT@ 4553 @LENGTH@ 1
------------------------------INS SimpleName@@value @TO@ InfixExpression@@"Setting bean invocation value on OUT message: " + value @AT@ 4556 @LENGTH@ 5
---------INS Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on IN message: " + value);  }  exchange.getIn().setBody(value);} @TO@ IfStatement@@if (exchange.getPattern().isOutCapable()) {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on OUT message: " + value);  }  exchange.getOut(true).setBody(value);} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on IN message: " + value);  }  exchange.getIn().setBody(value);} @AT@ 4667 @LENGTH@ 290
------------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Setting bean invocation value on IN message: " + value);} @TO@ Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on IN message: " + value);  }  exchange.getIn().setBody(value);} @AT@ 4745 @LENGTH@ 141
---------------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Setting bean invocation value on IN message: " + value);} @AT@ 4749 @LENGTH@ 20
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 4749 @LENGTH@ 3
------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 4753 @LENGTH@ 16
---------------INS Block@@ThenBody:{  LOG.debug("Setting bean invocation value on IN message: " + value);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Setting bean invocation value on IN message: " + value);} @AT@ 4771 @LENGTH@ 115
------------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Setting bean invocation value on IN message: " + value) @TO@ Block@@ThenBody:{  LOG.debug("Setting bean invocation value on IN message: " + value);} @AT@ 4797 @LENGTH@ 67
---------------------INS MethodInvocation@@LOG.debug("Setting bean invocation value on IN message: " + value) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Setting bean invocation value on IN message: " + value) @AT@ 4797 @LENGTH@ 66
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Setting bean invocation value on IN message: " + value) @AT@ 4797 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["Setting bean invocation value on IN message: " + value] @TO@ MethodInvocation@@LOG.debug("Setting bean invocation value on IN message: " + value) @AT@ 4801 @LENGTH@ 62
---------------------------INS InfixExpression@@"Setting bean invocation value on IN message: " + value @TO@ SimpleName@@MethodName:debug:["Setting bean invocation value on IN message: " + value] @AT@ 4807 @LENGTH@ 55
------------------------------INS StringLiteral@@"Setting bean invocation value on IN message: " @TO@ InfixExpression@@"Setting bean invocation value on IN message: " + value @AT@ 4807 @LENGTH@ 47
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Setting bean invocation value on IN message: " + value @AT@ 4854 @LENGTH@ 1
------------------------------INS SimpleName@@value @TO@ InfixExpression@@"Setting bean invocation value on IN message: " + value @AT@ 4857 @LENGTH@ 5
------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(value) @TO@ Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on IN message: " + value);  }  exchange.getIn().setBody(value);} @AT@ 4907 @LENGTH@ 32
---------------INS MethodInvocation@@exchange.getIn().setBody(value) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(value) @AT@ 4907 @LENGTH@ 31
------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody(value) @AT@ 4907 @LENGTH@ 16
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody(value) @AT@ 4907 @LENGTH@ 8
------------------INS SimpleName@@MethodName:setBody:[value] @TO@ MethodInvocation@@exchange.getIn().setBody(value) @AT@ 4924 @LENGTH@ 14
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setBody:[value] @AT@ 4932 @LENGTH@ 5
---UPD Block@@ThenBody:{  exchange.getOut().setBody(value);} @TO@ ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Setting bean invocation value on OUT message: " + value);  }  exchange.getOut(true).setBody(value);} @AT@ 4322 @LENGTH@ 65


INS MethodDeclaration@@private, Object, MethodName:getConversionServiceValue, BeanDefinitionBuilder definitionBuilder,  @TO@ TypeDeclaration@@FlowBuilderServicesBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 3953 @LENGTH@ 208
---INS Modifier@@private @TO@ MethodDeclaration@@private, Object, MethodName:getConversionServiceValue, BeanDefinitionBuilder definitionBuilder,  @AT@ 3953 @LENGTH@ 7
---INS SimpleType@@Object @TO@ MethodDeclaration@@private, Object, MethodName:getConversionServiceValue, BeanDefinitionBuilder definitionBuilder,  @AT@ 3961 @LENGTH@ 6
---INS SimpleName@@MethodName:getConversionServiceValue @TO@ MethodDeclaration@@private, Object, MethodName:getConversionServiceValue, BeanDefinitionBuilder definitionBuilder,  @AT@ 3968 @LENGTH@ 25
---INS SingleVariableDeclaration@@BeanDefinitionBuilder definitionBuilder @TO@ MethodDeclaration@@private, Object, MethodName:getConversionServiceValue, BeanDefinitionBuilder definitionBuilder,  @AT@ 3994 @LENGTH@ 39
------INS SimpleType@@BeanDefinitionBuilder @TO@ SingleVariableDeclaration@@BeanDefinitionBuilder definitionBuilder @AT@ 3994 @LENGTH@ 21
------INS SimpleName@@definitionBuilder @TO@ SingleVariableDeclaration@@BeanDefinitionBuilder definitionBuilder @AT@ 4016 @LENGTH@ 17
---INS ReturnStatement@@MethodInvocation:definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @TO@ MethodDeclaration@@private, Object, MethodName:getConversionServiceValue, BeanDefinitionBuilder definitionBuilder,  @AT@ 4039 @LENGTH@ 119
------INS MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @TO@ ReturnStatement@@MethodInvocation:definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @AT@ 4046 @LENGTH@ 111
---------INS MethodInvocation@@MethodName:getPropertyValue:["conversionService"] @TO@ MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @AT@ 4046 @LENGTH@ 95
------------INS StringLiteral@@"conversionService" @TO@ MethodInvocation@@MethodName:getPropertyValue:["conversionService"] @AT@ 4121 @LENGTH@ 19
---------INS MethodInvocation@@MethodName:getPropertyValues:[] @TO@ MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @AT@ 4046 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:getBeanDefinition:[] @TO@ MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @AT@ 4046 @LENGTH@ 37
---------INS SimpleName@@Name:definitionBuilder @TO@ MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @AT@ 4046 @LENGTH@ 17
---------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("conversionService").getValue() @AT@ 4147 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:fieldError.getResult().getOriginalValue() @TO@ MethodInvocation:fieldError.getOriginalValue() @AT@ 4700 @LENGTH@ 49
---UPD MethodInvocation@@fieldError.getResult().getOriginalValue() @TO@ fieldError.getOriginalValue() @AT@ 4707 @LENGTH@ 41
------DEL MethodInvocation@@MethodName:getResult:[] @AT@ 4707 @LENGTH@ 22


UPD EnhancedForStatement@@for (String key : copy.keySet()) {  Set<Runnable> set=copy.get(key);  for (  Runnable callback : set) {    if (callback != null) {      try {        callback.run();      } catch (      RuntimeException t) {        errors.add(t);      }    }  }} @TO@ for (Entry<String,Set<Runnable>> entry : copy.entrySet()) {  Set<Runnable> set=entry.getValue();  for (  Runnable callback : set) {    if (callback != null) {      try {        callback.run();      } catch (      RuntimeException t) {        errors.add(t);      }    }  }} @AT@ 4533 @LENGTH@ 437
---UPD SingleVariableDeclaration@@String key @TO@ Entry<String,Set<Runnable>> entry @AT@ 4538 @LENGTH@ 10
------INS ParameterizedType@@Entry<String,Set<Runnable>> @TO@ SingleVariableDeclaration@@String key @AT@ 4537 @LENGTH@ 28
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,Set<Runnable>> @AT@ 4537 @LENGTH@ 5
---------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,Set<Runnable>> @AT@ 4543 @LENGTH@ 6
---------INS ParameterizedType@@Set<Runnable> @TO@ ParameterizedType@@Entry<String,Set<Runnable>> @AT@ 4551 @LENGTH@ 13
------------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Runnable> @AT@ 4551 @LENGTH@ 3
------------INS SimpleType@@Runnable @TO@ ParameterizedType@@Set<Runnable> @AT@ 4555 @LENGTH@ 8
------DEL SimpleType@@String @AT@ 4538 @LENGTH@ 6
------UPD SimpleName@@key @TO@ entry @AT@ 4545 @LENGTH@ 3
---UPD MethodInvocation@@copy.keySet() @TO@ copy.entrySet() @AT@ 4551 @LENGTH@ 13
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 4556 @LENGTH@ 8
---UPD VariableDeclarationStatement@@Set<Runnable> set=copy.get(key); @TO@ Set<Runnable> set=entry.getValue(); @AT@ 4572 @LENGTH@ 34
------UPD VariableDeclarationFragment@@set=copy.get(key) @TO@ set=entry.getValue() @AT@ 4586 @LENGTH@ 19
---------UPD MethodInvocation@@copy.get(key) @TO@ entry.getValue() @AT@ 4592 @LENGTH@ 13
------------UPD SimpleName@@Name:copy @TO@ Name:entry @AT@ 4592 @LENGTH@ 4
------------UPD SimpleName@@MethodName:get:[key] @TO@ MethodName:getValue:[] @AT@ 4597 @LENGTH@ 8
---------------DEL SimpleName@@key @AT@ 4601 @LENGTH@ 3


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/fixedLength.xml"}), public]FixedLengthFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/fixedLength.xml"}), public]FixedLengthFunctionalTests, AbstractJobTests @AT@ 1026 @LENGTH@ 658
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/fixedLength.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/fixedLength.xml"}) @AT@ 1066 @LENGTH@ 134


UPD ExpressionStatement@@MethodInvocation:c[i].setMax(c[i + 1].getMin() - 1) @TO@ Assignment:c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @AT@ 3562 @LENGTH@ 33
---DEL MethodInvocation@@c[i].setMax(c[i + 1].getMin() - 1) @AT@ 3562 @LENGTH@ 32
---INS Assignment@@c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @TO@ ExpressionStatement@@MethodInvocation:c[i].setMax(c[i + 1].getMin() - 1) @AT@ 3562 @LENGTH@ 51
------INS ArrayAccess@@c[i] @TO@ Assignment@@c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @AT@ 3562 @LENGTH@ 4
---------INS SimpleName@@c @TO@ ArrayAccess@@c[i] @AT@ 3562 @LENGTH@ 1
---------INS SimpleName@@i @TO@ ArrayAccess@@c[i] @AT@ 3564 @LENGTH@ 1
------INS Operator@@= @TO@ Assignment@@c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @AT@ 3566 @LENGTH@ 1
------INS ClassInstanceCreation@@Range[c[i].getMin(), c[i + 1].getMin() - 1] @TO@ Assignment@@c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @AT@ 3569 @LENGTH@ 44
---------INS New@@new @TO@ ClassInstanceCreation@@Range[c[i].getMin(), c[i + 1].getMin() - 1] @AT@ 3569 @LENGTH@ 3
---------INS SimpleType@@Range @TO@ ClassInstanceCreation@@Range[c[i].getMin(), c[i + 1].getMin() - 1] @AT@ 3573 @LENGTH@ 5
---------MOV InfixExpression@@c[i + 1].getMin() - 1 @TO@ ClassInstanceCreation@@Range[c[i].getMin(), c[i + 1].getMin() - 1] @AT@ 3574 @LENGTH@ 19
---------INS MethodInvocation@@c[i].getMin() @TO@ ClassInstanceCreation@@Range[c[i].getMin(), c[i + 1].getMin() - 1] @AT@ 3579 @LENGTH@ 13
------------MOV ArrayAccess@@c[i] @TO@ MethodInvocation@@c[i].getMin() @AT@ 3562 @LENGTH@ 4
------------MOV ArrayAccess@@c[i] @TO@ MethodInvocation@@c[i].getMin() @AT@ 3562 @LENGTH@ 4
------------MOV SimpleName@@MethodName:setMax:[c[i + 1].getMin() - 1] @TO@ MethodInvocation@@c[i].getMin() @AT@ 3567 @LENGTH@ 27
------------MOV SimpleName@@MethodName:setMax:[c[i + 1].getMin() - 1] @TO@ MethodInvocation@@c[i].getMin() @AT@ 3567 @LENGTH@ 27


UPD ExpressionStatement@@Assignment:rc="UNKOWN" @TO@ Assignment:rc="UNKNOWN" @AT@ 6082 @LENGTH@ 14
---UPD Assignment@@rc="UNKOWN" @TO@ rc="UNKNOWN" @AT@ 6082 @LENGTH@ 13
------UPD StringLiteral@@"UNKOWN" @TO@ "UNKNOWN" @AT@ 6087 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:deleteDirectory("target/test-noop-inbox") @TO@ Assignment:params="?noop=true&consumer.recursive=true" @AT@ 1079 @LENGTH@ 42
---INS Assignment@@params="?noop=true&consumer.recursive=true" @TO@ ExpressionStatement@@MethodInvocation:deleteDirectory("target/test-noop-inbox") @AT@ 1046 @LENGTH@ 45
------INS SimpleName@@params @TO@ Assignment@@params="?noop=true&consumer.recursive=true" @AT@ 1046 @LENGTH@ 6
------INS Operator@@= @TO@ Assignment@@params="?noop=true&consumer.recursive=true" @AT@ 1052 @LENGTH@ 1
------INS StringLiteral@@"?noop=true&consumer.recursive=true" @TO@ Assignment@@params="?noop=true&consumer.recursive=true" @AT@ 1055 @LENGTH@ 36
---DEL MethodInvocation@@deleteDirectory("target/test-noop-inbox") @AT@ 1079 @LENGTH@ 41
------DEL SimpleName@@MethodName:deleteDirectory:["target/test-noop-inbox"] @AT@ 1079 @LENGTH@ 41
---------DEL StringLiteral@@"target/test-noop-inbox" @AT@ 1095 @LENGTH@ 24


DEL MethodDeclaration@@public, RedeliveryPolicy, MethodName:collisionAvoidancePercent, double collisionAvoidancePercent,  @AT@ 6569 @LENGTH@ 210
---DEL Modifier@@public @AT@ 6569 @LENGTH@ 6
---DEL SimpleType@@RedeliveryPolicy @AT@ 6576 @LENGTH@ 16
---DEL SimpleName@@MethodName:collisionAvoidancePercent @AT@ 6593 @LENGTH@ 25
---DEL SingleVariableDeclaration@@double collisionAvoidancePercent @AT@ 6619 @LENGTH@ 32
------DEL PrimitiveType@@double @AT@ 6619 @LENGTH@ 6
------DEL SimpleName@@collisionAvoidancePercent @AT@ 6626 @LENGTH@ 25
---DEL ExpressionStatement@@MethodInvocation:useCollisionAvoidance() @AT@ 6663 @LENGTH@ 24
------DEL MethodInvocation@@MethodName:useCollisionAvoidance:[] @AT@ 6663 @LENGTH@ 23
---DEL ExpressionStatement@@MethodInvocation:setCollisionAvoidancePercent(collisionAvoidancePercent) @AT@ 6696 @LENGTH@ 56
------DEL MethodInvocation@@setCollisionAvoidancePercent(collisionAvoidancePercent) @AT@ 6696 @LENGTH@ 55
---------DEL SimpleName@@MethodName:setCollisionAvoidancePercent:[collisionAvoidancePercent] @AT@ 6696 @LENGTH@ 55
------------DEL SimpleName@@collisionAvoidancePercent @AT@ 6725 @LENGTH@ 25
---DEL ReturnStatement@@ThisExpression:this @AT@ 6761 @LENGTH@ 12
------DEL ThisExpression@@this @AT@ 6768 @LENGTH@ 4


INS IfStatement@@if (username != null) {  properties.put("mail." + protocol + ".user",username);  properties.put("mail.user",username);} @TO@ MethodDeclaration@@private, Properties, MethodName:createJavaMailProperties,  @AT@ 5175 @LENGTH@ 152
---INS InfixExpression@@username != null @TO@ IfStatement@@if (username != null) {  properties.put("mail." + protocol + ".user",username);  properties.put("mail.user",username);} @AT@ 5179 @LENGTH@ 16
------INS SimpleName@@username @TO@ InfixExpression@@username != null @AT@ 5179 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@username != null @AT@ 5187 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@username != null @AT@ 5191 @LENGTH@ 4
---INS Block@@ThenBody:{  properties.put("mail." + protocol + ".user",username);  properties.put("mail.user",username);} @TO@ IfStatement@@if (username != null) {  properties.put("mail." + protocol + ".user",username);  properties.put("mail.user",username);} @AT@ 5197 @LENGTH@ 130
------MOV ExpressionStatement@@MethodInvocation:properties.put("mail." + protocol + ".user",username) @TO@ Block@@ThenBody:{  properties.put("mail." + protocol + ".user",username);  properties.put("mail.user",username);} @AT@ 5175 @LENGTH@ 55
------MOV ExpressionStatement@@MethodInvocation:properties.put("mail.user",username) @TO@ Block@@ThenBody:{  properties.put("mail." + protocol + ".user",username);  properties.put("mail.user",username);} @AT@ 5534 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("direct:start",body,"foo","London") @TO@ MethodInvocation:template.sendBodyAndHeader("direct:start",ExchangePattern.InOut,body,"foo","London") @AT@ 1285 @LENGTH@ 66
---UPD MethodInvocation@@template.sendBodyAndHeader("direct:start",body,"foo","London") @TO@ template.sendBodyAndHeader("direct:start",ExchangePattern.InOut,body,"foo","London") @AT@ 1285 @LENGTH@ 65
------UPD SimpleName@@MethodName:sendBodyAndHeader:["direct:start", body, "foo", "London"] @TO@ MethodName:sendBodyAndHeader:["direct:start", ExchangePattern.InOut, body, "foo", "London"] @AT@ 1294 @LENGTH@ 56
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:sendBodyAndHeader:["direct:start", body, "foo", "London"] @AT@ 1369 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1369 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1385 @LENGTH@ 5


INS IfStatement@@if (conversionService == null) {  conversionService=new DefaultConversionService();} @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 6063 @LENGTH@ 93
---INS InfixExpression@@conversionService == null @TO@ IfStatement@@if (conversionService == null) {  conversionService=new DefaultConversionService();} @AT@ 6067 @LENGTH@ 25
------INS SimpleName@@conversionService @TO@ InfixExpression@@conversionService == null @AT@ 6067 @LENGTH@ 17
------INS Operator@@== @TO@ InfixExpression@@conversionService == null @AT@ 6084 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@conversionService == null @AT@ 6088 @LENGTH@ 4
---INS Block@@ThenBody:{  conversionService=new DefaultConversionService();} @TO@ IfStatement@@if (conversionService == null) {  conversionService=new DefaultConversionService();} @AT@ 6094 @LENGTH@ 62
------INS ExpressionStatement@@Assignment:conversionService=new DefaultConversionService() @TO@ Block@@ThenBody:{  conversionService=new DefaultConversionService();} @AT@ 6100 @LENGTH@ 51
---------INS Assignment@@conversionService=new DefaultConversionService() @TO@ ExpressionStatement@@Assignment:conversionService=new DefaultConversionService() @AT@ 6100 @LENGTH@ 50
------------INS SimpleName@@conversionService @TO@ Assignment@@conversionService=new DefaultConversionService() @AT@ 6100 @LENGTH@ 17
------------INS Operator@@= @TO@ Assignment@@conversionService=new DefaultConversionService() @AT@ 6117 @LENGTH@ 1
------------INS ClassInstanceCreation@@DefaultConversionService[] @TO@ Assignment@@conversionService=new DefaultConversionService() @AT@ 6120 @LENGTH@ 30
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 6120 @LENGTH@ 3
---------------INS SimpleType@@DefaultConversionService @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 6124 @LENGTH@ 24


UPD ReturnStatement@@InfixExpression:"Unable to convert value " + value + " from type '"+ sourceClass.getName()+ "' to type '"+ targetClass.getName()+ "; reason = '"+ cause.getMessage()+ "'" @TO@ InfixExpression:"Unable to convert value " + StylerUtils.style(value) + " from type '"+ sourceClass.getName()+ "' to type '"+ targetClass.getName()+ "'; reason = '"+ cause.getMessage()+ "'" @AT@ 2696 @LENGTH@ 171
---UPD InfixExpression@@"Unable to convert value " + value + " from type '"+ sourceClass.getName()+ "' to type '"+ targetClass.getName()+ "; reason = '"+ cause.getMessage()+ "'" @TO@ "Unable to convert value " + StylerUtils.style(value) + " from type '"+ sourceClass.getName()+ "' to type '"+ targetClass.getName()+ "'; reason = '"+ cause.getMessage()+ "'" @AT@ 2703 @LENGTH@ 163
------DEL SimpleName@@value @AT@ 2732 @LENGTH@ 5
------INS MethodInvocation@@StylerUtils.style(value) @TO@ InfixExpression@@"Unable to convert value " + value + " from type '"+ sourceClass.getName()+ "' to type '"+ targetClass.getName()+ "; reason = '"+ cause.getMessage()+ "'" @AT@ 2784 @LENGTH@ 24
---------INS SimpleName@@Name:StylerUtils @TO@ MethodInvocation@@StylerUtils.style(value) @AT@ 2784 @LENGTH@ 11
---------INS SimpleName@@MethodName:style:[value] @TO@ MethodInvocation@@StylerUtils.style(value) @AT@ 2796 @LENGTH@ 12
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:style:[value] @AT@ 2802 @LENGTH@ 5
------UPD StringLiteral@@"; reason = '" @TO@ "'; reason = '" @AT@ 2825 @LENGTH@ 14


UPD FieldDeclaration@@private, boolean, [traceOutExchanges=false] @TO@ private, boolean, [traceOutExchanges] @AT@ 1620 @LENGTH@ 42
---UPD VariableDeclarationFragment@@traceOutExchanges=false @TO@ traceOutExchanges @AT@ 1636 @LENGTH@ 25
------DEL BooleanLiteral@@false @AT@ 1656 @LENGTH@ 5


UPD TryStatement@@try {  while (true) {    final Object obj=msg.readObject();    writeData(dataOut,obj);  }} catch (MessageEOFException e) {} @TO@ try {  while (true) {    final Object obj=msg.readObject();    writeData(dataOut,obj);  }} catch (MessageEOFException e) {} finally {  dataOut.close();} @AT@ 2581 @LENGTH@ 290
---INS Block@@FinallyBody:{  dataOut.close();} @TO@ TryStatement@@try {  while (true) {    final Object obj=msg.readObject();    writeData(dataOut,obj);  }} catch (MessageEOFException e) {} @AT@ 2789 @LENGTH@ 48
------MOV ExpressionStatement@@MethodInvocation:dataOut.close() @TO@ Block@@FinallyBody:{  dataOut.close();} @AT@ 2884 @LENGTH@ 16


DEL ExpressionStatement@@MethodInvocation:assertFalse("We can't be done in 100 ms",latch.await(100,TimeUnit.MILLISECONDS)) @AT@ 3348 @LENGTH@ 83
---DEL MethodInvocation@@assertFalse("We can't be done in 100 ms",latch.await(100,TimeUnit.MILLISECONDS)) @AT@ 3348 @LENGTH@ 82
------DEL SimpleName@@MethodName:assertFalse:["We can't be done in 100 ms", latch.await(100,TimeUnit.MILLISECONDS)] @AT@ 3348 @LENGTH@ 82
---------DEL StringLiteral@@"We can't be done in 100 ms" @AT@ 3360 @LENGTH@ 28
---------DEL MethodInvocation@@latch.await(100,TimeUnit.MILLISECONDS) @AT@ 3390 @LENGTH@ 39
------------DEL SimpleName@@Name:latch @AT@ 3390 @LENGTH@ 5
------------DEL SimpleName@@MethodName:await:[100, TimeUnit.MILLISECONDS] @AT@ 3396 @LENGTH@ 33
---------------DEL NumberLiteral@@100 @AT@ 3402 @LENGTH@ 3
---------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 3407 @LENGTH@ 21
------------------DEL SimpleName@@TimeUnit @AT@ 3407 @LENGTH@ 8
------------------DEL SimpleName@@MILLISECONDS @AT@ 3416 @LENGTH@ 12


INS TryStatement@@try {  consumer.stop();} catch (FtpOperationFailedException fofe) {} @TO@ MethodDeclaration@@public, void, MethodName:testExludePreAndPostfixes, Exception,  @AT@ 1599 @LENGTH@ 114
---MOV ExpressionStatement@@MethodInvocation:consumer.stop() @TO@ TryStatement@@try {  consumer.stop();} catch (FtpOperationFailedException fofe) {} @AT@ 1593 @LENGTH@ 16
---INS CatchClause@@catch (FtpOperationFailedException fofe) {} @TO@ TryStatement@@try {  consumer.stop();} catch (FtpOperationFailedException fofe) {} @AT@ 1638 @LENGTH@ 75
------INS SingleVariableDeclaration@@FtpOperationFailedException fofe @TO@ CatchClause@@catch (FtpOperationFailedException fofe) {} @AT@ 1645 @LENGTH@ 32
---------INS SimpleType@@FtpOperationFailedException @TO@ SingleVariableDeclaration@@FtpOperationFailedException fofe @AT@ 1645 @LENGTH@ 27
---------INS SimpleName@@fofe @TO@ SingleVariableDeclaration@@FtpOperationFailedException fofe @AT@ 1673 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]PropertyEditorConverter, PropertyEditorSupport @TO@ [private, static]PropertyEditorConverter, PropertyEditorSupport @AT@ 2894 @LENGTH@ 334
---UPD Modifier@@public @TO@ private @AT@ 2894 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(new Random().nextInt(10)) @TO@ MethodInvocation:Thread.sleep(new Random().nextInt(10) + 5) @AT@ 1882 @LENGTH@ 39
---UPD MethodInvocation@@Thread.sleep(new Random().nextInt(10)) @TO@ Thread.sleep(new Random().nextInt(10) + 5) @AT@ 1882 @LENGTH@ 38
------UPD SimpleName@@MethodName:sleep:[new Random().nextInt(10)] @TO@ MethodName:sleep:[new Random().nextInt(10) + 5] @AT@ 1889 @LENGTH@ 31
---------INS InfixExpression@@new Random().nextInt(10) + 5 @TO@ SimpleName@@MethodName:sleep:[new Random().nextInt(10)] @AT@ 2053 @LENGTH@ 28
------------MOV MethodInvocation@@new Random().nextInt(10) @TO@ InfixExpression@@new Random().nextInt(10) + 5 @AT@ 1895 @LENGTH@ 24
------------INS Operator@@+ @TO@ InfixExpression@@new Random().nextInt(10) + 5 @AT@ 2077 @LENGTH@ 1
------------INS NumberLiteral@@5 @TO@ InfixExpression@@new Random().nextInt(10) + 5 @AT@ 2080 @LENGTH@ 1


UPD VariableDeclarationStatement@@String answer=ObjectHelper.classCanoicalName(message.getBody()); @TO@ String answer=ObjectHelper.classCanonicalName(message.getBody()); @AT@ 5503 @LENGTH@ 66
---UPD VariableDeclarationFragment@@answer=ObjectHelper.classCanoicalName(message.getBody()) @TO@ answer=ObjectHelper.classCanonicalName(message.getBody()) @AT@ 5510 @LENGTH@ 58
------UPD MethodInvocation@@ObjectHelper.classCanoicalName(message.getBody()) @TO@ ObjectHelper.classCanonicalName(message.getBody()) @AT@ 5519 @LENGTH@ 49
---------UPD SimpleName@@MethodName:classCanoicalName:[message.getBody()] @TO@ MethodName:classCanonicalName:[message.getBody()] @AT@ 5532 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:services.setConversionService(DefaultConversionService.getSharedInstance()) @TO@ MethodInvocation:services.setConversionService(new DefaultConversionService()) @AT@ 750 @LENGTH@ 76
---UPD MethodInvocation@@services.setConversionService(DefaultConversionService.getSharedInstance()) @TO@ services.setConversionService(new DefaultConversionService()) @AT@ 750 @LENGTH@ 75
------UPD SimpleName@@MethodName:setConversionService:[DefaultConversionService.getSharedInstance()] @TO@ MethodName:setConversionService:[new DefaultConversionService()] @AT@ 759 @LENGTH@ 66
---------DEL MethodInvocation@@DefaultConversionService.getSharedInstance() @AT@ 780 @LENGTH@ 44
------------DEL SimpleName@@Name:DefaultConversionService @AT@ 780 @LENGTH@ 24
------------DEL SimpleName@@MethodName:getSharedInstance:[] @AT@ 805 @LENGTH@ 19
---------INS ClassInstanceCreation@@DefaultConversionService[] @TO@ SimpleName@@MethodName:setConversionService:[DefaultConversionService.getSharedInstance()] @AT@ 780 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 780 @LENGTH@ 3
------------INS SimpleType@@DefaultConversionService @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 784 @LENGTH@ 24


UPD MethodDeclaration@@public, JMXExchange, MethodName:createExchange,  @TO@ public, Exchange, MethodName:createExchange,  @AT@ 3736 @LENGTH@ 122
---UPD SimpleType@@JMXExchange @TO@ Exchange @AT@ 3743 @LENGTH@ 11


MOV MethodDeclaration@@public, Class, MethodName:getClassForAlias, String alias,  @TO@ TypeDeclaration@@[public]ConversionService,  @AT@ 1967 @LENGTH@ 44


UPD VariableDeclarationStatement@@SpringIntegrationExchange exchange=getEndpoint().createExchange(); @TO@ SpringIntegrationExchange exchange=(SpringIntegrationExchange)getEndpoint().createExchange(); @AT@ 4134 @LENGTH@ 69
---UPD VariableDeclarationFragment@@exchange=getEndpoint().createExchange() @TO@ exchange=(SpringIntegrationExchange)getEndpoint().createExchange() @AT@ 4161 @LENGTH@ 41
------INS CastExpression@@(SpringIntegrationExchange)getEndpoint().createExchange() @TO@ VariableDeclarationFragment@@exchange=getEndpoint().createExchange() @AT@ 4172 @LENGTH@ 58
---------INS SimpleType@@SpringIntegrationExchange @TO@ CastExpression@@(SpringIntegrationExchange)getEndpoint().createExchange() @AT@ 4173 @LENGTH@ 25
---------INS MethodInvocation@@getEndpoint().createExchange() @TO@ CastExpression@@(SpringIntegrationExchange)getEndpoint().createExchange() @AT@ 4200 @LENGTH@ 30
------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 4172 @LENGTH@ 13
------------MOV SimpleName@@MethodName:createExchange:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 4186 @LENGTH@ 16
------DEL MethodInvocation@@getEndpoint().createExchange() @AT@ 4172 @LENGTH@ 30


UPD MethodDeclaration@@public, int, MethodName:getStepExecutionCount, JobInstance jobInstance, Step step,  @TO@ public, int, MethodName:getStepExecutionCount, JobInstance jobInstance, String stepName,  @AT@ 2355 @LENGTH@ 87
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 2413 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 2413 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 2418 @LENGTH@ 4


UPD MethodDeclaration@@public, MailExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 3457 @LENGTH@ 142
---UPD SimpleType@@MailExchange @TO@ Exchange @AT@ 3464 @LENGTH@ 12


UPD FieldDeclaration@@private, ConversionService, [conversionService=DefaultConversionService.getSharedInstance()] @TO@ private, ConversionService, [conversionService] @AT@ 3514 @LENGTH@ 91
---UPD VariableDeclarationFragment@@conversionService=DefaultConversionService.getSharedInstance() @TO@ conversionService @AT@ 3540 @LENGTH@ 64
------DEL MethodInvocation@@DefaultConversionService.getSharedInstance() @AT@ 3560 @LENGTH@ 44
---------DEL SimpleName@@Name:DefaultConversionService @AT@ 3560 @LENGTH@ 24
---------DEL SimpleName@@MethodName:getSharedInstance:[] @AT@ 3585 @LENGTH@ 19


UPD IfStatement@@if (pos == -1 || pos == index) {  return removed;} @TO@ if (pos != -1 && pos != index) {  super.remove(pos);} @AT@ 8068 @LENGTH@ 70
---UPD InfixExpression@@pos == -1 || pos == index @TO@ pos != -1 && pos != index @AT@ 8072 @LENGTH@ 25
------UPD InfixExpression@@pos == -1 @TO@ pos != -1 @AT@ 8072 @LENGTH@ 9
---------UPD Operator@@== @TO@ != @AT@ 8075 @LENGTH@ 2
------UPD Operator@@|| @TO@ && @AT@ 8081 @LENGTH@ 2
------UPD InfixExpression@@pos == index @TO@ pos != index @AT@ 8085 @LENGTH@ 12
---------UPD Operator@@== @TO@ != @AT@ 8088 @LENGTH@ 2
---UPD Block@@ThenBody:{  return removed;} @TO@ ThenBody:{  super.remove(pos);} @AT@ 8099 @LENGTH@ 39
------DEL ReturnStatement@@SimpleName:removed @AT@ 8113 @LENGTH@ 15
---------DEL SimpleName@@removed @AT@ 8120 @LENGTH@ 7
------MOV ExpressionStatement@@SuperMethodInvocation:super.remove(pos) @TO@ Block@@ThenBody:{  return removed;} @AT@ 8258 @LENGTH@ 18


UPD FieldDeclaration@@private, ItemReader, [input] @TO@ private, ItemReader<Object>, [input] @AT@ 385 @LENGTH@ 25
---INS ParameterizedType@@ItemReader<Object> @TO@ FieldDeclaration@@private, ItemReader, [input] @AT@ 393 @LENGTH@ 18
------INS SimpleType@@ItemReader @TO@ ParameterizedType@@ItemReader<Object> @AT@ 393 @LENGTH@ 10
------INS SimpleType@@Object @TO@ ParameterizedType@@ItemReader<Object> @AT@ 404 @LENGTH@ 6
---DEL SimpleType@@ItemReader @AT@ 393 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals("Planned failure",e.getMessage()) @TO@ MethodInvocation:assertEquals("Planned failure",e.getCause().getMessage()) @AT@ 4252 @LENGTH@ 48
---UPD MethodInvocation@@assertEquals("Planned failure",e.getMessage()) @TO@ assertEquals("Planned failure",e.getCause().getMessage()) @AT@ 4252 @LENGTH@ 47
------UPD SimpleName@@MethodName:assertEquals:["Planned failure", e.getMessage()] @TO@ MethodName:assertEquals:["Planned failure", e.getCause().getMessage()] @AT@ 4252 @LENGTH@ 47
---------UPD MethodInvocation@@e.getMessage() @TO@ e.getCause().getMessage() @AT@ 4284 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 4395 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:addOption(new ParameterOption("a","applicationContext","Sets the classpath based pring ApplicationContext","applicationContext"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setApplicationContextUri(parameter);
  }
}
) @TO@ MethodInvocation:addOption(new ParameterOption("a","applicationContext","Sets the classpath based spring ApplicationContext","applicationContext"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setApplicationContextUri(parameter);
  }
}
) @AT@ 3125 @LENGTH@ 331
---UPD MethodInvocation@@addOption(new ParameterOption("a","applicationContext","Sets the classpath based pring ApplicationContext","applicationContext"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setApplicationContextUri(parameter);
  }
}
) @TO@ addOption(new ParameterOption("a","applicationContext","Sets the classpath based spring ApplicationContext","applicationContext"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setApplicationContextUri(parameter);
  }
}
) @AT@ 3125 @LENGTH@ 330
------UPD SimpleName@@MethodName:addOption:[new ParameterOption("a","applicationContext","Sets the classpath based pring ApplicationContext","applicationContext"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setApplicationContextUri(parameter);
  }
}
] @TO@ MethodName:addOption:[new ParameterOption("a","applicationContext","Sets the classpath based spring ApplicationContext","applicationContext"){
  protected void doProcess(  String arg,  String parameter,  LinkedList<String> remainingArgs){
    setApplicationContextUri(parameter);
  }
}
] @AT@ 3125 @LENGTH@ 330
---------UPD ClassInstanceCreation@@ParameterOption["a", "applicationContext", "Sets the classpath based pring ApplicationContext", "applicationContext"] @TO@ ParameterOption["a", "applicationContext", "Sets the classpath based spring ApplicationContext", "applicationContext"] @AT@ 3135 @LENGTH@ 319
------------UPD StringLiteral@@"Sets the classpath based pring ApplicationContext" @TO@ "Sets the classpath based spring ApplicationContext" @AT@ 3198 @LENGTH@ 51


INS MethodDeclaration@@private, voidMethodName:SystemHelper,  @TO@ TypeDeclaration@@[public]SystemHelper,  @AT@ 1197 @LENGTH@ 54
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:SystemHelper,  @AT@ 1197 @LENGTH@ 7
---INS SimpleName@@MethodName:SystemHelper @TO@ MethodDeclaration@@private, voidMethodName:SystemHelper,  @AT@ 1205 @LENGTH@ 12


INS IfStatement@@if (!isSymlink(directory)) {  cleanDirectoryOnExit(directory);} @TO@ MethodDeclaration@@private, static, void, MethodName:deleteDirectoryOnExit, File directory, IOException,  @AT@ 59662 @LENGTH@ 83
---INS PrefixExpression@@!isSymlink(directory) @TO@ IfStatement@@if (!isSymlink(directory)) {  cleanDirectoryOnExit(directory);} @AT@ 59666 @LENGTH@ 21
------INS Operator@@! @TO@ PrefixExpression@@!isSymlink(directory) @AT@ 59666 @LENGTH@ 1
------INS MethodInvocation@@isSymlink(directory) @TO@ PrefixExpression@@!isSymlink(directory) @AT@ 59667 @LENGTH@ 20
---------INS SimpleName@@MethodName:isSymlink:[directory] @TO@ MethodInvocation@@isSymlink(directory) @AT@ 59667 @LENGTH@ 20
------------INS SimpleName@@directory @TO@ SimpleName@@MethodName:isSymlink:[directory] @AT@ 59677 @LENGTH@ 9
---INS Block@@ThenBody:{  cleanDirectoryOnExit(directory);} @TO@ IfStatement@@if (!isSymlink(directory)) {  cleanDirectoryOnExit(directory);} @AT@ 59689 @LENGTH@ 56
------MOV ExpressionStatement@@MethodInvocation:cleanDirectoryOnExit(directory) @TO@ Block@@ThenBody:{  cleanDirectoryOnExit(directory);} @AT@ 59662 @LENGTH@ 32


UPD VariableDeclarationStatement@@JobInstance jobInstance=new JobInstance(new Long(1),new JobParameters(),"skipJob"); @TO@ JobInstance jobInstance=new JobInstance(1L,new JobParameters(),"skipJob"); @AT@ 2898 @LENGTH@ 87
---UPD VariableDeclarationFragment@@jobInstance=new JobInstance(new Long(1),new JobParameters(),"skipJob") @TO@ jobInstance=new JobInstance(1L,new JobParameters(),"skipJob") @AT@ 2910 @LENGTH@ 74
------UPD ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "skipJob"] @TO@ JobInstance[1L, new JobParameters(), "skipJob"] @AT@ 2924 @LENGTH@ 60
---------DEL ClassInstanceCreation@@Long[1] @AT@ 2940 @LENGTH@ 11
------------DEL New@@new @AT@ 2940 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 2944 @LENGTH@ 4
---------MOV NumberLiteral@@1 @TO@ ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "skipJob"] @AT@ 2949 @LENGTH@ 1


UPD FieldDeclaration@@int, [count=0] @TO@ int, [count] @AT@ 1362 @LENGTH@ 14
---UPD VariableDeclarationFragment@@count=0 @TO@ count @AT@ 1366 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 1374 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:assertNotNull(deserialize.getFailureExceptions()) @TO@ MethodDeclaration@@public, void, MethodName:testSerialization,  @AT@ 5177 @LENGTH@ 50
---INS MethodInvocation@@assertNotNull(deserialize.getFailureExceptions()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(deserialize.getFailureExceptions()) @AT@ 5177 @LENGTH@ 49
------INS SimpleName@@MethodName:assertNotNull:[deserialize.getFailureExceptions()] @TO@ MethodInvocation@@assertNotNull(deserialize.getFailureExceptions()) @AT@ 5177 @LENGTH@ 49
---------INS MethodInvocation@@deserialize.getFailureExceptions() @TO@ SimpleName@@MethodName:assertNotNull:[deserialize.getFailureExceptions()] @AT@ 5191 @LENGTH@ 34
------------INS SimpleName@@Name:deserialize @TO@ MethodInvocation@@deserialize.getFailureExceptions() @AT@ 5191 @LENGTH@ 11
------------INS SimpleName@@MethodName:getFailureExceptions:[] @TO@ MethodInvocation@@deserialize.getFailureExceptions() @AT@ 5203 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:context.getExternalContext().recordResponseCommitted() @TO@ MethodInvocation:context.getExternalContext().recordResponseComplete() @AT@ 7216 @LENGTH@ 55
---UPD MethodInvocation@@context.getExternalContext().recordResponseCommitted() @TO@ context.getExternalContext().recordResponseComplete() @AT@ 7216 @LENGTH@ 54
------UPD SimpleName@@MethodName:recordResponseCommitted:[] @TO@ MethodName:recordResponseComplete:[] @AT@ 7245 @LENGTH@ 25


INS MethodDeclaration@@Object[], MethodName:getObjectAttributes, String name,  @TO@ TypeDeclaration@@[public]DirContextOperations, [DirContext, AttributeModificationsAware] @AT@ 5478 @LENGTH@ 33
---INS ArrayType@@Object[] @TO@ MethodDeclaration@@Object[], MethodName:getObjectAttributes, String name,  @AT@ 5469 @LENGTH@ 8
------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5469 @LENGTH@ 6
---INS SimpleName@@MethodName:getObjectAttributes @TO@ MethodDeclaration@@Object[], MethodName:getObjectAttributes, String name,  @AT@ 5478 @LENGTH@ 19
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@Object[], MethodName:getObjectAttributes, String name,  @AT@ 5498 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 5498 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 5505 @LENGTH@ 4


MOV FieldDeclaration@@private, static, final, transient, Log, [LOG=LogFactory.getLog(RedeliveryPolicy.class)] @TO@ TypeDeclaration@@[public]RedeliveryPolicy, [Cloneable, Serializable] @AT@ 1702 @LENGTH@ 83


UPD EnhancedForStatement@@for (String key : contexts.keySet()) {  String stepName=this.stepName + STEP_NAME_SEPARATOR + key;  StepExecution currentStepExecution=jobExecution.createStepExecution(stepName);  boolean startable=getStartable(currentStepExecution,contexts.get(key));  if (startable) {    jobRepository.add(currentStepExecution);    set.add(currentStepExecution);  }} @TO@ for (Entry<String,ExecutionContext> context : contexts.entrySet()) {  String stepName=this.stepName + STEP_NAME_SEPARATOR + context.getKey();  StepExecution currentStepExecution=jobExecution.createStepExecution(stepName);  boolean startable=getStartable(currentStepExecution,context.getValue());  if (startable) {    jobRepository.add(currentStepExecution);    set.add(currentStepExecution);  }} @AT@ 2937 @LENGTH@ 449
---UPD SingleVariableDeclaration@@String key @TO@ Entry<String,ExecutionContext> context @AT@ 2942 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 2942 @LENGTH@ 6
------UPD SimpleName@@key @TO@ context @AT@ 2949 @LENGTH@ 3
------INS ParameterizedType@@Entry<String,ExecutionContext> @TO@ SingleVariableDeclaration@@String key @AT@ 2971 @LENGTH@ 31
---------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,ExecutionContext> @AT@ 2971 @LENGTH@ 5
---------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,ExecutionContext> @AT@ 2977 @LENGTH@ 6
---------INS SimpleType@@ExecutionContext @TO@ ParameterizedType@@Entry<String,ExecutionContext> @AT@ 2985 @LENGTH@ 16
---UPD MethodInvocation@@contexts.keySet() @TO@ contexts.entrySet() @AT@ 2955 @LENGTH@ 17
------UPD SimpleName@@MethodName:keySet:[] @TO@ MethodName:entrySet:[] @AT@ 2964 @LENGTH@ 8
---UPD VariableDeclarationStatement@@String stepName=this.stepName + STEP_NAME_SEPARATOR + key; @TO@ String stepName=this.stepName + STEP_NAME_SEPARATOR + context.getKey(); @AT@ 3040 @LENGTH@ 60
------UPD VariableDeclarationFragment@@stepName=this.stepName + STEP_NAME_SEPARATOR + key @TO@ stepName=this.stepName + STEP_NAME_SEPARATOR + context.getKey() @AT@ 3047 @LENGTH@ 52
---------UPD InfixExpression@@this.stepName + STEP_NAME_SEPARATOR + key @TO@ this.stepName + STEP_NAME_SEPARATOR + context.getKey() @AT@ 3058 @LENGTH@ 41
------------DEL SimpleName@@key @AT@ 3096 @LENGTH@ 3
------------INS MethodInvocation@@context.getKey() @TO@ InfixExpression@@this.stepName + STEP_NAME_SEPARATOR + key @AT@ 3156 @LENGTH@ 16
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getKey() @AT@ 3156 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@context.getKey() @AT@ 3164 @LENGTH@ 8
---UPD VariableDeclarationStatement@@boolean startable=getStartable(currentStepExecution,contexts.get(key)); @TO@ boolean startable=getStartable(currentStepExecution,context.getValue()); @AT@ 3194 @LENGTH@ 74
------UPD VariableDeclarationFragment@@startable=getStartable(currentStepExecution,contexts.get(key)) @TO@ startable=getStartable(currentStepExecution,context.getValue()) @AT@ 3202 @LENGTH@ 65
---------UPD MethodInvocation@@getStartable(currentStepExecution,contexts.get(key)) @TO@ getStartable(currentStepExecution,context.getValue()) @AT@ 3214 @LENGTH@ 53
------------UPD SimpleName@@MethodName:getStartable:[currentStepExecution, contexts.get(key)] @TO@ MethodName:getStartable:[currentStepExecution, context.getValue()] @AT@ 3214 @LENGTH@ 53
---------------UPD MethodInvocation@@contexts.get(key) @TO@ context.getValue() @AT@ 3249 @LENGTH@ 17
------------------UPD SimpleName@@Name:contexts @TO@ Name:context @AT@ 3249 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:get:[key] @TO@ MethodName:getValue:[] @AT@ 3258 @LENGTH@ 8
---------------------DEL SimpleName@@key @AT@ 3262 @LENGTH@ 3


UPD FieldDeclaration@@private, String, [ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.append=false"] @TO@ private, String, [ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true"] @AT@ 1474 @LENGTH@ 176
---UPD VariableDeclarationFragment@@ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.append=false" @TO@ ftpUrl="ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true" @AT@ 1489 @LENGTH@ 160
------UPD InfixExpression@@"ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true&consumer.append=false" @TO@ "ftp://admin@localhost:" + port + "/incoming?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=true" @AT@ 1498 @LENGTH@ 151
---------UPD StringLiteral@@"&consumer.delay=2000&consumer.recursive=true&consumer.append=false" @TO@ "&consumer.delay=2000&consumer.recursive=true" @AT@ 1581 @LENGTH@ 68


UPD ExpressionStatement@@MethodInvocation:defaultBuilder.addPropertyValue("conversionService",DefaultConversionService.getSharedInstance()) @TO@ MethodInvocation:defaultBuilder.addPropertyValue("conversionService",new DefaultConversionService()) @AT@ 5657 @LENGTH@ 99
---UPD MethodInvocation@@defaultBuilder.addPropertyValue("conversionService",DefaultConversionService.getSharedInstance()) @TO@ defaultBuilder.addPropertyValue("conversionService",new DefaultConversionService()) @AT@ 5657 @LENGTH@ 98
------UPD SimpleName@@MethodName:addPropertyValue:["conversionService", DefaultConversionService.getSharedInstance()] @TO@ MethodName:addPropertyValue:["conversionService", new DefaultConversionService()] @AT@ 5672 @LENGTH@ 83
---------DEL MethodInvocation@@DefaultConversionService.getSharedInstance() @AT@ 5710 @LENGTH@ 44
------------DEL SimpleName@@Name:DefaultConversionService @AT@ 5710 @LENGTH@ 24
------------DEL SimpleName@@MethodName:getSharedInstance:[] @AT@ 5735 @LENGTH@ 19
---------INS ClassInstanceCreation@@DefaultConversionService[] @TO@ SimpleName@@MethodName:addPropertyValue:["conversionService", DefaultConversionService.getSharedInstance()] @AT@ 5710 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 5710 @LENGTH@ 3
------------INS SimpleType@@DefaultConversionService @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 5714 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:LOG.debug("adding interceptor: " + interceptor) @TO@ MethodInvocation:LOG.debug("Adding " + id + " interceptor: "+ interceptor) @AT@ 3827 @LENGTH@ 48
---UPD MethodInvocation@@LOG.debug("adding interceptor: " + interceptor) @TO@ LOG.debug("Adding " + id + " interceptor: "+ interceptor) @AT@ 3827 @LENGTH@ 47
------UPD SimpleName@@MethodName:debug:["adding interceptor: " + interceptor] @TO@ MethodName:debug:["Adding " + id + " interceptor: "+ interceptor] @AT@ 3831 @LENGTH@ 43
---------UPD InfixExpression@@"adding interceptor: " + interceptor @TO@ "Adding " + id + " interceptor: "+ interceptor @AT@ 3837 @LENGTH@ 36
------------UPD StringLiteral@@"adding interceptor: " @TO@ "Adding " @AT@ 3837 @LENGTH@ 22
------------INS SimpleName@@id @TO@ InfixExpression@@"adding interceptor: " + interceptor @AT@ 3849 @LENGTH@ 2
------------INS StringLiteral@@" interceptor: " @TO@ InfixExpression@@"adding interceptor: " + interceptor @AT@ 3854 @LENGTH@ 16


UPD MethodDeclaration@@public, static, String, MethodName:classCanoicalName, Object value,  @TO@ public, static, String, MethodName:classCanonicalName, Object value,  @AT@ 10770 @LENGTH@ 197
---UPD SimpleName@@MethodName:classCanoicalName @TO@ MethodName:classCanonicalName @AT@ 10791 @LENGTH@ 17


UPD VariableDeclarationStatement@@FileExchange fileExchange=endpoint.createExchange(exchange); @TO@ FileExchange fileExchange=(FileExchange)endpoint.createExchange(exchange); @AT@ 2017 @LENGTH@ 62
---UPD VariableDeclarationFragment@@fileExchange=endpoint.createExchange(exchange) @TO@ fileExchange=(FileExchange)endpoint.createExchange(exchange) @AT@ 2030 @LENGTH@ 48
------INS CastExpression@@(FileExchange)endpoint.createExchange(exchange) @TO@ VariableDeclarationFragment@@fileExchange=endpoint.createExchange(exchange) @AT@ 2045 @LENGTH@ 48
---------MOV MethodInvocation@@endpoint.createExchange(exchange) @TO@ CastExpression@@(FileExchange)endpoint.createExchange(exchange) @AT@ 2045 @LENGTH@ 33
---------INS SimpleType@@FileExchange @TO@ CastExpression@@(FileExchange)endpoint.createExchange(exchange) @AT@ 2046 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel().maximumRedeliveries(2)) @TO@ MethodInvocation:errorHandler(deadLetterChannel().maximumRedeliveries(1)) @AT@ 10816 @LENGTH@ 57
---UPD MethodInvocation@@errorHandler(deadLetterChannel().maximumRedeliveries(2)) @TO@ errorHandler(deadLetterChannel().maximumRedeliveries(1)) @AT@ 10816 @LENGTH@ 56
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel().maximumRedeliveries(2)] @TO@ MethodName:errorHandler:[deadLetterChannel().maximumRedeliveries(1)] @AT@ 10816 @LENGTH@ 56
---------UPD MethodInvocation@@deadLetterChannel().maximumRedeliveries(2) @TO@ deadLetterChannel().maximumRedeliveries(1) @AT@ 10829 @LENGTH@ 42
------------UPD SimpleName@@MethodName:maximumRedeliveries:[2] @TO@ MethodName:maximumRedeliveries:[1] @AT@ 10849 @LENGTH@ 22
---------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 10869 @LENGTH@ 1


INS VariableDeclarationStatement@@String id=processorType.idOrCreate(); @TO@ MethodDeclaration@@public, Processor, MethodName:wrapProcessorInInterceptors, ProcessorType processorType, Processor target, Exception,  @AT@ 1440 @LENGTH@ 39
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String id=processorType.idOrCreate(); @AT@ 1440 @LENGTH@ 6
---INS VariableDeclarationFragment@@id=processorType.idOrCreate() @TO@ VariableDeclarationStatement@@String id=processorType.idOrCreate(); @AT@ 1447 @LENGTH@ 31
------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id=processorType.idOrCreate() @AT@ 1447 @LENGTH@ 2
------INS MethodInvocation@@processorType.idOrCreate() @TO@ VariableDeclarationFragment@@id=processorType.idOrCreate() @AT@ 1452 @LENGTH@ 26
---------INS SimpleName@@Name:processorType @TO@ MethodInvocation@@processorType.idOrCreate() @AT@ 1452 @LENGTH@ 13
---------INS SimpleName@@MethodName:idOrCreate:[] @TO@ MethodInvocation@@processorType.idOrCreate() @AT@ 1466 @LENGTH@ 12


UPD VariableDeclarationStatement@@Iterator iter=ObjectConverter.iterator(headerValue); @TO@ Iterator iter=ObjectHelper.createIterator(headerValue); @AT@ 6516 @LENGTH@ 54
---UPD VariableDeclarationFragment@@iter=ObjectConverter.iterator(headerValue) @TO@ iter=ObjectHelper.createIterator(headerValue) @AT@ 6525 @LENGTH@ 44
------UPD MethodInvocation@@ObjectConverter.iterator(headerValue) @TO@ ObjectHelper.createIterator(headerValue) @AT@ 6532 @LENGTH@ 37
---------UPD SimpleName@@Name:ObjectConverter @TO@ Name:ObjectHelper @AT@ 6532 @LENGTH@ 15
---------UPD SimpleName@@MethodName:iterator:[headerValue] @TO@ MethodName:createIterator:[headerValue] @AT@ 6548 @LENGTH@ 21


UPD MethodDeclaration@@public, int, MethodName:getStepExecutionCount, JobInstance jobInstance, Step step,  @TO@ public, int, MethodName:getStepExecutionCount, JobInstance jobInstance, String stepName,  @AT@ 1954 @LENGTH@ 85
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 2012 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 2012 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 2017 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@StaticFlowDefinitionHolder, [FlowDefinitionHolder] @AT@ 1686 @LENGTH@ 54
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 1686 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 1693 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 1698 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:flowDefinition.destroy() @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 1712 @LENGTH@ 25
------INS MethodInvocation@@flowDefinition.destroy() @TO@ ExpressionStatement@@MethodInvocation:flowDefinition.destroy() @AT@ 1712 @LENGTH@ 24
---------INS SimpleName@@Name:flowDefinition @TO@ MethodInvocation@@flowDefinition.destroy() @AT@ 1712 @LENGTH@ 14
---------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@flowDefinition.destroy() @AT@ 1727 @LENGTH@ 9


INS MethodDeclaration@@private, voidMethodName:CamelClient,  @TO@ TypeDeclaration@@[public, final]CamelClient,  @AT@ 1274 @LENGTH@ 53
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CamelClient,  @AT@ 1274 @LENGTH@ 7
---INS SimpleName@@MethodName:CamelClient @TO@ MethodDeclaration@@private, voidMethodName:CamelClient,  @AT@ 1282 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals(6,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count")) @TO@ MethodInvocation:assertEquals(6,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count")) @AT@ 4832 @LENGTH@ 119
---UPD MethodInvocation@@assertEquals(6,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count")) @TO@ assertEquals(6,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count")) @AT@ 4832 @LENGTH@ 118
------UPD SimpleName@@MethodName:assertEquals:[6, executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count")] @TO@ MethodName:assertEquals:[6, executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count")] @AT@ 4832 @LENGTH@ 118
---------UPD MethodInvocation@@executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count") @TO@ executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count") @AT@ 4848 @LENGTH@ 101
------------UPD SimpleName@@MethodName:getLong:[ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count"] @TO@ MethodName:getLong:[ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count"] @AT@ 4865 @LENGTH@ 84
---------------UPD InfixExpression@@ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count" @TO@ ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count" @AT@ 4873 @LENGTH@ 75
------------------UPD StringLiteral@@".item.count" @TO@ ".piece.count" @AT@ 4935 @LENGTH@ 13


UPD FieldDeclaration@@public, static, List<String>, [names=new ArrayList<String>()] @TO@ public, static, final, List<String>, [names=new ArrayList<String>()] @AT@ 241 @LENGTH@ 59
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, List<String>, [names=new ArrayList<String>()] @AT@ 255 @LENGTH@ 5


UPD FieldDeclaration@@private, Endpoint, [endpoint] @TO@ private, final, Endpoint, [endpoint] @AT@ 1101 @LENGTH@ 26
---INS Modifier@@final @TO@ FieldDeclaration@@private, Endpoint, [endpoint] @AT@ 1117 @LENGTH@ 5


UPD VariableDeclarationStatement@@Exception error=(Exception)errors.get(0); @TO@ Exception error=errors.get(0); @AT@ 5022 @LENGTH@ 44
---UPD VariableDeclarationFragment@@error=(Exception)errors.get(0) @TO@ error=errors.get(0) @AT@ 5032 @LENGTH@ 33
------DEL CastExpression@@(Exception)errors.get(0) @AT@ 5040 @LENGTH@ 25
---------DEL SimpleType@@Exception @AT@ 5041 @LENGTH@ 9
------MOV MethodInvocation@@errors.get(0) @TO@ VariableDeclarationFragment@@error=(Exception)errors.get(0) @AT@ 5052 @LENGTH@ 13


INS MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @TO@ TypeDeclaration@@[public]DefaultProducerTemplate, ServiceSupport[ProducerTemplate<E>] @AT@ 2128 @LENGTH@ 282
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2128 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2135 @LENGTH@ 6
---INS SimpleType@@DefaultProducerTemplate @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2142 @LENGTH@ 23
---INS SimpleName@@MethodName:newInstance @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2166 @LENGTH@ 11
---INS SingleVariableDeclaration@@CamelContext camelContext @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2178 @LENGTH@ 25
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2178 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2191 @LENGTH@ 12
---INS SingleVariableDeclaration@@String defaultEndpointUri @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2205 @LENGTH@ 25
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String defaultEndpointUri @AT@ 2205 @LENGTH@ 6
------INS SimpleName@@defaultEndpointUri @TO@ SingleVariableDeclaration@@String defaultEndpointUri @AT@ 2212 @LENGTH@ 18
---INS VariableDeclarationStatement@@Endpoint endpoint=CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri); @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2242 @LENGTH@ 94
------INS SimpleType@@Endpoint @TO@ VariableDeclarationStatement@@Endpoint endpoint=CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri); @AT@ 2242 @LENGTH@ 8
------INS VariableDeclarationFragment@@endpoint=CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri) @TO@ VariableDeclarationStatement@@Endpoint endpoint=CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri); @AT@ 2251 @LENGTH@ 84
---------INS SimpleName@@endpoint @TO@ VariableDeclarationFragment@@endpoint=CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri) @AT@ 2251 @LENGTH@ 8
---------INS MethodInvocation@@CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri) @TO@ VariableDeclarationFragment@@endpoint=CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri) @AT@ 2262 @LENGTH@ 73
------------INS SimpleName@@Name:CamelContextHelper @TO@ MethodInvocation@@CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri) @AT@ 2262 @LENGTH@ 18
------------INS SimpleName@@MethodName:getMandatoryEndpoint:[camelContext, defaultEndpointUri] @TO@ MethodInvocation@@CamelContextHelper.getMandatoryEndpoint(camelContext,defaultEndpointUri) @AT@ 2281 @LENGTH@ 54
---------------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:getMandatoryEndpoint:[camelContext, defaultEndpointUri] @AT@ 2302 @LENGTH@ 12
---------------INS SimpleName@@defaultEndpointUri @TO@ SimpleName@@MethodName:getMandatoryEndpoint:[camelContext, defaultEndpointUri] @AT@ 2316 @LENGTH@ 18
---INS ReturnStatement@@ClassInstanceCreation:new DefaultProducerTemplate(camelContext,endpoint) @TO@ MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @AT@ 2345 @LENGTH@ 59
------INS ClassInstanceCreation@@DefaultProducerTemplate[camelContext, endpoint] @TO@ ReturnStatement@@ClassInstanceCreation:new DefaultProducerTemplate(camelContext,endpoint) @AT@ 2352 @LENGTH@ 51
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultProducerTemplate[camelContext, endpoint] @AT@ 2352 @LENGTH@ 3
---------INS SimpleType@@DefaultProducerTemplate @TO@ ClassInstanceCreation@@DefaultProducerTemplate[camelContext, endpoint] @AT@ 2356 @LENGTH@ 23
---------INS SimpleName@@camelContext @TO@ ClassInstanceCreation@@DefaultProducerTemplate[camelContext, endpoint] @AT@ 2380 @LENGTH@ 12
---------INS SimpleName@@endpoint @TO@ ClassInstanceCreation@@DefaultProducerTemplate[camelContext, endpoint] @AT@ 2394 @LENGTH@ 8


UPD FieldDeclaration@@private, static, final, String, [TYPES="in,out,err,file,url,header"] @TO@ private, static, final, String, [TYPES="out,err,file,header,url"] @AT@ 1495 @LENGTH@ 65
---UPD VariableDeclarationFragment@@TYPES="in,out,err,file,url,header" @TO@ TYPES="out,err,file,header,url" @AT@ 1523 @LENGTH@ 36
------UPD StringLiteral@@"in,out,err,file,url,header" @TO@ "out,err,file,header,url" @AT@ 1531 @LENGTH@ 28


UPD ExpressionStatement@@Assignment:jobInstance=new JobInstance(new Long(0),new JobParameters(),job.getName()) @TO@ Assignment:jobInstance=new JobInstance(0L,new JobParameters(),job.getName()) @AT@ 3600 @LENGTH@ 79
---UPD Assignment@@jobInstance=new JobInstance(new Long(0),new JobParameters(),job.getName()) @TO@ jobInstance=new JobInstance(0L,new JobParameters(),job.getName()) @AT@ 3600 @LENGTH@ 78
------UPD ClassInstanceCreation@@JobInstance[new Long(0), new JobParameters(), job.getName()] @TO@ JobInstance[0L, new JobParameters(), job.getName()] @AT@ 3614 @LENGTH@ 64
---------DEL ClassInstanceCreation@@Long[0] @AT@ 3630 @LENGTH@ 11
------------DEL New@@new @AT@ 3630 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 3634 @LENGTH@ 4
---------MOV NumberLiteral@@0 @TO@ ClassInstanceCreation@@JobInstance[new Long(0), new JobParameters(), job.getName()] @AT@ 3639 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from(endpoint).policy(requried).policy(rollback).to("activemq:queue:mock.a","mock:b") @TO@ MethodInvocation:from(endpoint).policy(requirenew).policy(rollback).to("activemq:queue:mock.a","mock:b") @AT@ 7228 @LENGTH@ 87
---UPD MethodInvocation@@from(endpoint).policy(requried).policy(rollback).to("activemq:queue:mock.a","mock:b") @TO@ from(endpoint).policy(requirenew).policy(rollback).to("activemq:queue:mock.a","mock:b") @AT@ 7228 @LENGTH@ 86
------UPD MethodInvocation@@MethodName:policy:[requried] @TO@ MethodName:policy:[requirenew] @AT@ 7228 @LENGTH@ 31
---------UPD SimpleName@@requried @TO@ requirenew @AT@ 7250 @LENGTH@ 8


UPD FieldDeclaration@@public, static, int, [status] @TO@ private, static, int, [status] @AT@ 3489 @LENGTH@ 25
---UPD Modifier@@public @TO@ private @AT@ 3489 @LENGTH@ 6


UPD IfStatement@@if (parameters.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]");} @TO@ if (!endpoint.isLenientProperties() && parameters.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]");} @AT@ 3427 @LENGTH@ 401
---INS InfixExpression@@!endpoint.isLenientProperties() && parameters.size() > 0 @TO@ IfStatement@@if (parameters.size() > 0) {  throw new ResolveEndpointFailedException(uri,"There are " + parameters.size() + " parameters that couldn't be set on the endpoint."+ " Check the uri if the parameters are spelt correctly and that they are properties of the endpoint."+ " Unknown parameters=["+ parameters+ "]");} @AT@ 3529 @LENGTH@ 56
------MOV InfixExpression@@parameters.size() > 0 @TO@ InfixExpression@@!endpoint.isLenientProperties() && parameters.size() > 0 @AT@ 3431 @LENGTH@ 21
------INS PrefixExpression@@!endpoint.isLenientProperties() @TO@ InfixExpression@@!endpoint.isLenientProperties() && parameters.size() > 0 @AT@ 3529 @LENGTH@ 31
---------INS Operator@@! @TO@ PrefixExpression@@!endpoint.isLenientProperties() @AT@ 3529 @LENGTH@ 1
---------INS MethodInvocation@@endpoint.isLenientProperties() @TO@ PrefixExpression@@!endpoint.isLenientProperties() @AT@ 3530 @LENGTH@ 30
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isLenientProperties() @AT@ 3530 @LENGTH@ 8
------------INS SimpleName@@MethodName:isLenientProperties:[] @TO@ MethodInvocation@@endpoint.isLenientProperties() @AT@ 3539 @LENGTH@ 21
------INS Operator@@&& @TO@ InfixExpression@@!endpoint.isLenientProperties() && parameters.size() > 0 @AT@ 3560 @LENGTH@ 2


UPD TryStatement@@try {  targetExpression.setValue(context.getTarget(),targetValue);  context.setSuccessResult(sourceValue,targetValue);} catch (ValueCoercionException e) {  context.setTypeConversionErrorResult(e);}catch (EvaluationException e) {  context.setTargetAccessError(sourceValue,e);} @TO@ try {  targetExpression.setValue(context.getTarget(),targetValue);  context.setSuccessResult(sourceValue,targetValue);} catch (EvaluationException e) {  context.setTargetAccessError(sourceValue,e);} @AT@ 4065 @LENGTH@ 296
---DEL CatchClause@@catch (ValueCoercionException e) {  context.setTypeConversionErrorResult(e);} @AT@ 4194 @LENGTH@ 82
------DEL SingleVariableDeclaration@@ValueCoercionException e @AT@ 4201 @LENGTH@ 24
---------DEL SimpleType@@ValueCoercionException @AT@ 4201 @LENGTH@ 22
---------DEL SimpleName@@e @AT@ 4224 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:context.setTypeConversionErrorResult(e) @AT@ 4232 @LENGTH@ 40
---------DEL MethodInvocation@@context.setTypeConversionErrorResult(e) @AT@ 4232 @LENGTH@ 39
------------DEL SimpleName@@Name:context @AT@ 4232 @LENGTH@ 7
------------DEL SimpleName@@MethodName:setTypeConversionErrorResult:[e] @AT@ 4240 @LENGTH@ 31
---------------DEL SimpleName@@e @AT@ 4269 @LENGTH@ 1


UPD MethodDeclaration@@StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, Step step,  @TO@ StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, String stepName,  @AT@ 3990 @LENGTH@ 57
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 4036 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 4036 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 4041 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.debug("About to process file:  " + file + " using exchange: "+ exchange) @TO@ MethodInvocation:LOG.debug("About to process file: " + file + " using exchange: "+ exchange) @AT@ 4426 @LENGTH@ 78
---UPD MethodInvocation@@LOG.debug("About to process file:  " + file + " using exchange: "+ exchange) @TO@ LOG.debug("About to process file: " + file + " using exchange: "+ exchange) @AT@ 4426 @LENGTH@ 77
------UPD SimpleName@@MethodName:debug:["About to process file:  " + file + " using exchange: "+ exchange] @TO@ MethodName:debug:["About to process file: " + file + " using exchange: "+ exchange] @AT@ 4430 @LENGTH@ 73
---------UPD InfixExpression@@"About to process file:  " + file + " using exchange: "+ exchange @TO@ "About to process file: " + file + " using exchange: "+ exchange @AT@ 4436 @LENGTH@ 66
------------UPD StringLiteral@@"About to process file:  " @TO@ "About to process file: " @AT@ 4436 @LENGTH@ 26


UPD FieldDeclaration@@boolean, [loggedTrace=false] @TO@ boolean, [loggedTrace] @AT@ 917 @LENGTH@ 28
---UPD VariableDeclarationFragment@@loggedTrace=false @TO@ loggedTrace @AT@ 925 @LENGTH@ 19
------DEL BooleanLiteral@@false @AT@ 939 @LENGTH@ 5


UPD IfStatement@@if (value instanceof Boolean) {  Boolean aBoolean=(Boolean)value;  return aBoolean.booleanValue();} @TO@ if (value instanceof Boolean) {  Boolean aBoolean=(Boolean)value;  return aBoolean.booleanValue();} else if (value instanceof String) {  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @AT@ 21920 @LENGTH@ 132
---INS Block@@ElseBody:if (value instanceof String) {  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @TO@ IfStatement@@if (value instanceof Boolean) {  Boolean aBoolean=(Boolean)value;  return aBoolean.booleanValue();} @AT@ 22058 @LENGTH@ 201
------INS IfStatement@@if (value instanceof String) {  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @TO@ Block@@ElseBody:if (value instanceof String) {  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @AT@ 22058 @LENGTH@ 201
---------INS InstanceofExpression@@value instanceof String @TO@ IfStatement@@if (value instanceof String) {  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @AT@ 22062 @LENGTH@ 23
------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof String @AT@ 22062 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof String @AT@ 22068 @LENGTH@ 10
------------INS SimpleType@@String @TO@ InstanceofExpression@@value instanceof String @AT@ 22079 @LENGTH@ 6
---------INS Block@@ThenBody:{  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @TO@ IfStatement@@if (value instanceof String) {  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @AT@ 22087 @LENGTH@ 172
------------INS IfStatement@@if ("true".equals(value)) {  return true;} else if ("false".equals(value)) {  return false;} @TO@ Block@@ThenBody:{  if ("true".equals(value)) {    return true;  } else   if ("false".equals(value)) {    return false;  }} @AT@ 22101 @LENGTH@ 148
---------------INS MethodInvocation@@"true".equals(value) @TO@ IfStatement@@if ("true".equals(value)) {  return true;} else if ("false".equals(value)) {  return false;} @AT@ 22105 @LENGTH@ 20
------------------INS StringLiteral@@"true" @TO@ MethodInvocation@@"true".equals(value) @AT@ 22105 @LENGTH@ 6
------------------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@"true".equals(value) @AT@ 22112 @LENGTH@ 13
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 22119 @LENGTH@ 5
---------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if ("true".equals(value)) {  return true;} else if ("false".equals(value)) {  return false;} @AT@ 22127 @LENGTH@ 44
------------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 22145 @LENGTH@ 12
---------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 22152 @LENGTH@ 4
---------------INS Block@@ElseBody:if ("false".equals(value)) {  return false;} @TO@ IfStatement@@if ("true".equals(value)) {  return true;} else if ("false".equals(value)) {  return false;} @AT@ 22177 @LENGTH@ 72
------------------INS IfStatement@@if ("false".equals(value)) {  return false;} @TO@ Block@@ElseBody:if ("false".equals(value)) {  return false;} @AT@ 22177 @LENGTH@ 72
---------------------INS MethodInvocation@@"false".equals(value) @TO@ IfStatement@@if ("false".equals(value)) {  return false;} @AT@ 22181 @LENGTH@ 21
------------------------INS StringLiteral@@"false" @TO@ MethodInvocation@@"false".equals(value) @AT@ 22181 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@"false".equals(value) @AT@ 22189 @LENGTH@ 13
---------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 22196 @LENGTH@ 5
---------------------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if ("false".equals(value)) {  return false;} @AT@ 22204 @LENGTH@ 45
------------------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 22222 @LENGTH@ 13
---------------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 22229 @LENGTH@ 5
------------------INS IfStatement@@if ("false".equals(value)) {  return false;} @TO@ Block@@ElseBody:if ("false".equals(value)) {  return false;} @AT@ 22177 @LENGTH@ 72
---------------------INS MethodInvocation@@"false".equals(value) @TO@ IfStatement@@if ("false".equals(value)) {  return false;} @AT@ 22181 @LENGTH@ 21
------------------------INS StringLiteral@@"false" @TO@ MethodInvocation@@"false".equals(value) @AT@ 22181 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@"false".equals(value) @AT@ 22189 @LENGTH@ 13
---------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 22196 @LENGTH@ 5
---------------------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if ("false".equals(value)) {  return false;} @AT@ 22204 @LENGTH@ 45
------------------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 22222 @LENGTH@ 13
---------------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 22229 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, String, [INPUT_FILE="src/main/resources/data/ioSample/input/delimited.csv"] @TO@ private, static, final, String, [INPUT_FILE="src/main/resources/data/iosample/input/delimited.csv"] @AT@ 1398 @LENGTH@ 96
---UPD VariableDeclarationFragment@@INPUT_FILE="src/main/resources/data/ioSample/input/delimited.csv" @TO@ INPUT_FILE="src/main/resources/data/iosample/input/delimited.csv" @AT@ 1426 @LENGTH@ 67
------UPD StringLiteral@@"src/main/resources/data/ioSample/input/delimited.csv" @TO@ "src/main/resources/data/iosample/input/delimited.csv" @AT@ 1439 @LENGTH@ 54


INS IfStatement@@if (loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader")) {  return;} @TO@ MethodDeclaration@@protected, void, MethodName:find, Test test, String packageName, ClassLoader loader,  @AT@ 10381 @LENGTH@ 317
---INS MethodInvocation@@loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader") @TO@ IfStatement@@if (loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader")) {  return;} @AT@ 10385 @LENGTH@ 115
------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader") @AT@ 10385 @LENGTH@ 27
------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader") @AT@ 10385 @LENGTH@ 17
------INS SimpleName@@Name:loader @TO@ MethodInvocation@@loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader") @AT@ 10385 @LENGTH@ 6
------INS SimpleName@@MethodName:endsWith:["org.apache.felix.framework.searchpolicy.ContentClassLoader"] @TO@ MethodInvocation@@loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader") @AT@ 10413 @LENGTH@ 87
---------INS StringLiteral@@"org.apache.felix.framework.searchpolicy.ContentClassLoader" @TO@ SimpleName@@MethodName:endsWith:["org.apache.felix.framework.searchpolicy.ContentClassLoader"] @AT@ 10439 @LENGTH@ 60
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (loader.getClass().getName().endsWith("org.apache.felix.framework.searchpolicy.ContentClassLoader")) {  return;} @AT@ 10502 @LENGTH@ 196
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 10681 @LENGTH@ 7


UPD TryStatement@@try {  serverContext=new ClassPathXmlApplicationContext(new String[]{"spring-config/server-applicationContext.xml"});  Object server=serverContext.getBean("org.apache.camel.itest.customerrelations.CustomerServiceV1");  assertNotNull("We should get server here",server);  EndpointImpl.class.cast(server).getServer().getEndpoint().getInInterceptors().add(new HeaderChecker(Phase.PRE_STREAM));  clientContext=new ClassPathXmlApplicationContext(new String[]{"spring-config/client-applicationContext.xml"});  CustomerServiceV1 customerService=(CustomerServiceV1)clientContext.getBean("org.apache.camel.itest.customerrelations.CustomerServiceV1");  JaxWsClientProxy.class.cast(Proxy.getInvocationHandler(customerService)).getClient().getInInterceptors().add(new HeaderChecker(Phase.PRE_STREAM));  Customer customer=customerService.getCustomer("12345");  assertNotNull("We should get Customer here",customer);}  finally {  if (clientContext != null) {    clientContext.destroy();  }  if (serverContext != null) {    serverContext.destroy();  }} @TO@ try {  serverContext=new ClassPathXmlApplicationContext(new String[]{"spring-config/server-applicationContext.xml"});  Object server=serverContext.getBean("org.apache.camel.itest.customerrelations.CustomerServiceV1");  assertNotNull("We should get server here",server);  EndpointImpl.class.cast(server).getServer().getEndpoint().getInInterceptors().add(new HeaderChecker(Phase.READ));  clientContext=new ClassPathXmlApplicationContext(new String[]{"spring-config/client-applicationContext.xml"});  CustomerServiceV1 customerService=(CustomerServiceV1)clientContext.getBean("org.apache.camel.itest.customerrelations.CustomerServiceV1");  Customer customer=customerService.getCustomer("12345");  assertNotNull("We should get Customer here",customer);}  finally {  if (clientContext != null) {    clientContext.destroy();  }  if (serverContext != null) {    serverContext.destroy();  }} @AT@ 1582 @LENGTH@ 1463
---UPD ExpressionStatement@@MethodInvocation:EndpointImpl.class.cast(server).getServer().getEndpoint().getInInterceptors().add(new HeaderChecker(Phase.PRE_STREAM)) @TO@ MethodInvocation:EndpointImpl.class.cast(server).getServer().getEndpoint().getInInterceptors().add(new HeaderChecker(Phase.READ)) @AT@ 1985 @LENGTH@ 136
------UPD MethodInvocation@@EndpointImpl.class.cast(server).getServer().getEndpoint().getInInterceptors().add(new HeaderChecker(Phase.PRE_STREAM)) @TO@ EndpointImpl.class.cast(server).getServer().getEndpoint().getInInterceptors().add(new HeaderChecker(Phase.READ)) @AT@ 1985 @LENGTH@ 135
---------UPD SimpleName@@MethodName:add:[new HeaderChecker(Phase.PRE_STREAM)] @TO@ MethodName:add:[new HeaderChecker(Phase.READ)] @AT@ 2080 @LENGTH@ 40
------------UPD ClassInstanceCreation@@HeaderChecker[Phase.PRE_STREAM] @TO@ HeaderChecker[Phase.READ] @AT@ 2084 @LENGTH@ 35
---------------UPD QualifiedName@@Phase.PRE_STREAM @TO@ Phase.READ @AT@ 2102 @LENGTH@ 16
------------------UPD SimpleName@@PRE_STREAM @TO@ READ @AT@ 2108 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:JaxWsClientProxy.class.cast(Proxy.getInvocationHandler(customerService)).getClient().getInInterceptors().add(new HeaderChecker(Phase.PRE_STREAM)) @AT@ 2509 @LENGTH@ 163
------DEL MethodInvocation@@JaxWsClientProxy.class.cast(Proxy.getInvocationHandler(customerService)).getClient().getInInterceptors().add(new HeaderChecker(Phase.PRE_STREAM)) @AT@ 2509 @LENGTH@ 162
---------DEL MethodInvocation@@MethodName:getInInterceptors:[] @AT@ 2509 @LENGTH@ 121
---------DEL MethodInvocation@@MethodName:getClient:[] @AT@ 2509 @LENGTH@ 101
---------DEL MethodInvocation@@MethodName:cast:[Proxy.getInvocationHandler(customerService)] @AT@ 2509 @LENGTH@ 72
------------DEL MethodInvocation@@Proxy.getInvocationHandler(customerService) @AT@ 2537 @LENGTH@ 43
---------------DEL SimpleName@@Name:Proxy @AT@ 2537 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getInvocationHandler:[customerService] @AT@ 2543 @LENGTH@ 37
------------------DEL SimpleName@@customerService @AT@ 2564 @LENGTH@ 15
---------DEL TypeLiteral@@JaxWsClientProxy.class @AT@ 2509 @LENGTH@ 22
---------DEL SimpleName@@MethodName:add:[new HeaderChecker(Phase.PRE_STREAM)] @AT@ 2631 @LENGTH@ 40
------------DEL ClassInstanceCreation@@HeaderChecker[Phase.PRE_STREAM] @AT@ 2635 @LENGTH@ 35
---------------DEL New@@new @AT@ 2635 @LENGTH@ 3
---------------DEL SimpleType@@HeaderChecker @AT@ 2639 @LENGTH@ 13
---------------DEL QualifiedName@@Phase.PRE_STREAM @AT@ 2653 @LENGTH@ 16
------------------DEL SimpleName@@Phase @AT@ 2653 @LENGTH@ 5
------------------DEL SimpleName@@PRE_STREAM @AT@ 2659 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Could not find needed classes for JMX lifecycle strategy." + " Are you missing spring-context.jar by any chance? NoClassDefFoundError: " + e.getMessage()) @TO@ MethodInvocation:LOG.warn("Could not find needed classes for JMX lifecycle strategy." + " Needed class is in spring-context.jar using Spring 2.5 or newer (" + " spring-jmx.jar using Spring 2.0.x)."+ " NoClassDefFoundError: "+ e.getMessage()) @AT@ 4669 @LENGTH@ 185
---UPD MethodInvocation@@LOG.warn("Could not find needed classes for JMX lifecycle strategy." + " Are you missing spring-context.jar by any chance? NoClassDefFoundError: " + e.getMessage()) @TO@ LOG.warn("Could not find needed classes for JMX lifecycle strategy." + " Needed class is in spring-context.jar using Spring 2.5 or newer (" + " spring-jmx.jar using Spring 2.0.x)."+ " NoClassDefFoundError: "+ e.getMessage()) @AT@ 4669 @LENGTH@ 184
------UPD SimpleName@@MethodName:warn:["Could not find needed classes for JMX lifecycle strategy." + " Are you missing spring-context.jar by any chance? NoClassDefFoundError: " + e.getMessage()] @TO@ MethodName:warn:["Could not find needed classes for JMX lifecycle strategy." + " Needed class is in spring-context.jar using Spring 2.5 or newer (" + " spring-jmx.jar using Spring 2.0.x)."+ " NoClassDefFoundError: "+ e.getMessage()] @AT@ 4673 @LENGTH@ 180
---------UPD InfixExpression@@"Could not find needed classes for JMX lifecycle strategy." + " Are you missing spring-context.jar by any chance? NoClassDefFoundError: " + e.getMessage() @TO@ "Could not find needed classes for JMX lifecycle strategy." + " Needed class is in spring-context.jar using Spring 2.5 or newer (" + " spring-jmx.jar using Spring 2.0.x)."+ " NoClassDefFoundError: "+ e.getMessage() @AT@ 4678 @LENGTH@ 174
------------UPD StringLiteral@@" Are you missing spring-context.jar by any chance? NoClassDefFoundError: " @TO@ " NoClassDefFoundError: " @AT@ 4760 @LENGTH@ 75
------------INS StringLiteral@@" Needed class is in spring-context.jar using Spring 2.5 or newer (" @TO@ InfixExpression@@"Could not find needed classes for JMX lifecycle strategy." + " Are you missing spring-context.jar by any chance? NoClassDefFoundError: " + e.getMessage() @AT@ 4760 @LENGTH@ 68
------------INS StringLiteral@@" spring-jmx.jar using Spring 2.0.x)." @TO@ InfixExpression@@"Could not find needed classes for JMX lifecycle strategy." + " Are you missing spring-context.jar by any chance? NoClassDefFoundError: " + e.getMessage() @AT@ 4851 @LENGTH@ 38


UPD FieldDeclaration@@private, boolean, [contentCache=false] @TO@ private, boolean, [contentCache] @AT@ 1786 @LENGTH@ 37
---UPD VariableDeclarationFragment@@contentCache=false @TO@ contentCache @AT@ 1802 @LENGTH@ 20
------DEL BooleanLiteral@@false @AT@ 1817 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testGetExpressionString,  @TO@ TypeDeclaration@@[public]OgnlExpressionParserTests, TestCase @AT@ 5524 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetExpressionString,  @AT@ 5524 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetExpressionString,  @AT@ 5531 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetExpressionString @TO@ MethodDeclaration@@public, void, MethodName:testGetExpressionString,  @AT@ 5536 @LENGTH@ 23
---INS VariableDeclarationStatement@@String expressionString="maximum"; @TO@ MethodDeclaration@@public, void, MethodName:testGetExpressionString,  @AT@ 5566 @LENGTH@ 36
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String expressionString="maximum"; @AT@ 5566 @LENGTH@ 6
------INS VariableDeclarationFragment@@expressionString="maximum" @TO@ VariableDeclarationStatement@@String expressionString="maximum"; @AT@ 5573 @LENGTH@ 28
---------INS SimpleName@@expressionString @TO@ VariableDeclarationFragment@@expressionString="maximum" @AT@ 5573 @LENGTH@ 16
---------INS StringLiteral@@"maximum" @TO@ VariableDeclarationFragment@@expressionString="maximum" @AT@ 5592 @LENGTH@ 9
---INS VariableDeclarationStatement@@Expression exp=parser.parseExpression(expressionString,null); @TO@ MethodDeclaration@@public, void, MethodName:testGetExpressionString,  @AT@ 5605 @LENGTH@ 64
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression exp=parser.parseExpression(expressionString,null); @AT@ 5605 @LENGTH@ 10
------INS VariableDeclarationFragment@@exp=parser.parseExpression(expressionString,null) @TO@ VariableDeclarationStatement@@Expression exp=parser.parseExpression(expressionString,null); @AT@ 5616 @LENGTH@ 52
---------INS SimpleName@@exp @TO@ VariableDeclarationFragment@@exp=parser.parseExpression(expressionString,null) @AT@ 5616 @LENGTH@ 3
---------INS MethodInvocation@@parser.parseExpression(expressionString,null) @TO@ VariableDeclarationFragment@@exp=parser.parseExpression(expressionString,null) @AT@ 5622 @LENGTH@ 46
------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression(expressionString,null) @AT@ 5622 @LENGTH@ 6
------------INS SimpleName@@MethodName:parseExpression:[expressionString, null] @TO@ MethodInvocation@@parser.parseExpression(expressionString,null) @AT@ 5629 @LENGTH@ 39
---------------INS SimpleName@@expressionString @TO@ SimpleName@@MethodName:parseExpression:[expressionString, null] @AT@ 5645 @LENGTH@ 16
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseExpression:[expressionString, null] @AT@ 5663 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("maximum",exp.getExpressionString()) @TO@ MethodDeclaration@@public, void, MethodName:testGetExpressionString,  @AT@ 5672 @LENGTH@ 51
------INS MethodInvocation@@assertEquals("maximum",exp.getExpressionString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("maximum",exp.getExpressionString()) @AT@ 5672 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertEquals:["maximum", exp.getExpressionString()] @TO@ MethodInvocation@@assertEquals("maximum",exp.getExpressionString()) @AT@ 5672 @LENGTH@ 50
------------INS StringLiteral@@"maximum" @TO@ SimpleName@@MethodName:assertEquals:["maximum", exp.getExpressionString()] @AT@ 5685 @LENGTH@ 9
------------INS MethodInvocation@@exp.getExpressionString() @TO@ SimpleName@@MethodName:assertEquals:["maximum", exp.getExpressionString()] @AT@ 5696 @LENGTH@ 25
---------------INS SimpleName@@Name:exp @TO@ MethodInvocation@@exp.getExpressionString() @AT@ 5696 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getExpressionString:[] @TO@ MethodInvocation@@exp.getExpressionString() @AT@ 5700 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:stepExecution.setId(new Long(currentId++)) @TO@ MethodInvocation:stepExecution.setId(currentId++) @AT@ 2294 @LENGTH@ 43
---UPD MethodInvocation@@stepExecution.setId(new Long(currentId++)) @TO@ stepExecution.setId(currentId++) @AT@ 2294 @LENGTH@ 42
------UPD SimpleName@@MethodName:setId:[new Long(currentId++)] @TO@ MethodName:setId:[currentId++] @AT@ 2308 @LENGTH@ 28
---------DEL ClassInstanceCreation@@Long[currentId++] @AT@ 2314 @LENGTH@ 21
------------DEL New@@new @AT@ 2314 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 2318 @LENGTH@ 4
------------DEL PostfixExpression@@currentId++ @AT@ 2323 @LENGTH@ 11
---------INS PostfixExpression@@currentId++ @TO@ SimpleName@@MethodName:setId:[new Long(currentId++)] @AT@ 2314 @LENGTH@ 11
------------MOV SimpleName@@currentId @TO@ PostfixExpression@@currentId++ @AT@ 2323 @LENGTH@ 9
------------MOV Operator@@++ @TO@ PostfixExpression@@currentId++ @AT@ 2333 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[public]Flow, AnnotatedObject[FlowDefinition] @AT@ 22340 @LENGTH@ 200
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 22340 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 22347 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 22352 @LENGTH@ 7
---INS IfStatement@@if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {  ((ConfigurableApplicationContext)applicationContext).close();} @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 22367 @LENGTH@ 169
------INS InfixExpression@@applicationContext != null && applicationContext instanceof ConfigurableApplicationContext @TO@ IfStatement@@if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {  ((ConfigurableApplicationContext)applicationContext).close();} @AT@ 22371 @LENGTH@ 90
---------INS InfixExpression@@applicationContext != null @TO@ InfixExpression@@applicationContext != null && applicationContext instanceof ConfigurableApplicationContext @AT@ 22371 @LENGTH@ 26
------------INS SimpleName@@applicationContext @TO@ InfixExpression@@applicationContext != null @AT@ 22371 @LENGTH@ 18
------------INS Operator@@!= @TO@ InfixExpression@@applicationContext != null @AT@ 22389 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@applicationContext != null @AT@ 22393 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@applicationContext != null && applicationContext instanceof ConfigurableApplicationContext @AT@ 22397 @LENGTH@ 2
---------INS InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @TO@ InfixExpression@@applicationContext != null && applicationContext instanceof ConfigurableApplicationContext @AT@ 22401 @LENGTH@ 60
------------INS SimpleName@@applicationContext @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 22401 @LENGTH@ 18
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 22420 @LENGTH@ 10
------------INS SimpleType@@ConfigurableApplicationContext @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 22431 @LENGTH@ 30
------INS Block@@ThenBody:{  ((ConfigurableApplicationContext)applicationContext).close();} @TO@ IfStatement@@if (applicationContext != null && applicationContext instanceof ConfigurableApplicationContext) {  ((ConfigurableApplicationContext)applicationContext).close();} @AT@ 22463 @LENGTH@ 73
---------INS ExpressionStatement@@MethodInvocation:((ConfigurableApplicationContext)applicationContext).close() @TO@ Block@@ThenBody:{  ((ConfigurableApplicationContext)applicationContext).close();} @AT@ 22469 @LENGTH@ 62
------------INS MethodInvocation@@((ConfigurableApplicationContext)applicationContext).close() @TO@ ExpressionStatement@@MethodInvocation:((ConfigurableApplicationContext)applicationContext).close() @AT@ 22469 @LENGTH@ 61
---------------INS ParenthesizedExpression@@((ConfigurableApplicationContext)applicationContext) @TO@ MethodInvocation@@((ConfigurableApplicationContext)applicationContext).close() @AT@ 22469 @LENGTH@ 53
------------------INS CastExpression@@(ConfigurableApplicationContext)applicationContext @TO@ ParenthesizedExpression@@((ConfigurableApplicationContext)applicationContext) @AT@ 22470 @LENGTH@ 51
---------------------INS SimpleType@@ConfigurableApplicationContext @TO@ CastExpression@@(ConfigurableApplicationContext)applicationContext @AT@ 22471 @LENGTH@ 30
---------------------INS SimpleName@@applicationContext @TO@ CastExpression@@(ConfigurableApplicationContext)applicationContext @AT@ 22503 @LENGTH@ 18
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@((ConfigurableApplicationContext)applicationContext).close() @AT@ 22523 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("pagingQuery{rovider can't be null") @TO@ ClassInstanceCreation:new IllegalArgumentException("pagingQueryProvider can't be null") @AT@ 985 @LENGTH@ 72
---UPD ClassInstanceCreation@@IllegalArgumentException["pagingQuery{rovider can't be null"] @TO@ IllegalArgumentException["pagingQueryProvider can't be null"] @AT@ 991 @LENGTH@ 65
------UPD StringLiteral@@"pagingQuery{rovider can't be null" @TO@ "pagingQueryProvider can't be null" @AT@ 1020 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:agg.setBatchTimeout(5000L) @TO@ MethodInvocation:agg.setBatchTimeout(1000L) @AT@ 7865 @LENGTH@ 27
---UPD MethodInvocation@@agg.setBatchTimeout(5000L) @TO@ agg.setBatchTimeout(1000L) @AT@ 7865 @LENGTH@ 26
------UPD SimpleName@@MethodName:setBatchTimeout:[5000L] @TO@ MethodName:setBatchTimeout:[1000L] @AT@ 7869 @LENGTH@ 22
---------UPD NumberLiteral@@5000L @TO@ 1000L @AT@ 7885 @LENGTH@ 5


UPD IfStatement@@if (result.getResult().isError()) {  errorResults.add(result);} @TO@ if (result.isError()) {  errorResults.add(result);} @AT@ 2178 @LENGTH@ 70
---UPD MethodInvocation@@result.getResult().isError() @TO@ result.isError() @AT@ 2182 @LENGTH@ 28
------DEL MethodInvocation@@MethodName:getResult:[] @AT@ 2182 @LENGTH@ 18


INS MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @TO@ TypeDeclaration@@[public, final]ObjectHelper,  @AT@ 10831 @LENGTH@ 201
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10831 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10838 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10845 @LENGTH@ 7
---INS SimpleName@@MethodName:getSystemProperty @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10853 @LENGTH@ 17
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10871 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 10871 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 10878 @LENGTH@ 4
---INS SingleVariableDeclaration@@Boolean defaultValue @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10884 @LENGTH@ 20
------INS SimpleType@@Boolean @TO@ SingleVariableDeclaration@@Boolean defaultValue @AT@ 10884 @LENGTH@ 7
------INS SimpleName@@defaultValue @TO@ SingleVariableDeclaration@@Boolean defaultValue @AT@ 10892 @LENGTH@ 12
---INS VariableDeclarationStatement@@String result=getSystemProperty(name,defaultValue.toString()); @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10916 @LENGTH@ 65
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String result=getSystemProperty(name,defaultValue.toString()); @AT@ 10916 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=getSystemProperty(name,defaultValue.toString()) @TO@ VariableDeclarationStatement@@String result=getSystemProperty(name,defaultValue.toString()); @AT@ 10923 @LENGTH@ 57
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=getSystemProperty(name,defaultValue.toString()) @AT@ 10923 @LENGTH@ 6
---------INS MethodInvocation@@getSystemProperty(name,defaultValue.toString()) @TO@ VariableDeclarationFragment@@result=getSystemProperty(name,defaultValue.toString()) @AT@ 10932 @LENGTH@ 48
------------INS SimpleName@@MethodName:getSystemProperty:[name, defaultValue.toString()] @TO@ MethodInvocation@@getSystemProperty(name,defaultValue.toString()) @AT@ 10932 @LENGTH@ 48
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:getSystemProperty:[name, defaultValue.toString()] @AT@ 10950 @LENGTH@ 4
---------------INS MethodInvocation@@defaultValue.toString() @TO@ SimpleName@@MethodName:getSystemProperty:[name, defaultValue.toString()] @AT@ 10956 @LENGTH@ 23
------------------INS SimpleName@@Name:defaultValue @TO@ MethodInvocation@@defaultValue.toString() @AT@ 10956 @LENGTH@ 12
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@defaultValue.toString() @AT@ 10969 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:Boolean.parseBoolean(result) @TO@ MethodDeclaration@@public, static, boolean, MethodName:getSystemProperty, String name, Boolean defaultValue,  @AT@ 10990 @LENGTH@ 36
------INS MethodInvocation@@Boolean.parseBoolean(result) @TO@ ReturnStatement@@MethodInvocation:Boolean.parseBoolean(result) @AT@ 10997 @LENGTH@ 28
---------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.parseBoolean(result) @AT@ 10997 @LENGTH@ 7
---------INS SimpleName@@MethodName:parseBoolean:[result] @TO@ MethodInvocation@@Boolean.parseBoolean(result) @AT@ 11005 @LENGTH@ 20
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:parseBoolean:[result] @AT@ 11018 @LENGTH@ 6


UPD MethodDeclaration@@public, StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, Step step,  @TO@ public, StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, String stepName,  @AT@ 2057 @LENGTH@ 99
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 2124 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 2124 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 2129 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:transition.execute(currentState,context) @TO@ MethodInvocation:context.execute(transition) @AT@ 20860 @LENGTH@ 49
---UPD MethodInvocation@@transition.execute(currentState,context) @TO@ context.execute(transition) @AT@ 20867 @LENGTH@ 41
------UPD SimpleName@@Name:transition @TO@ Name:context @AT@ 20867 @LENGTH@ 10
------UPD SimpleName@@MethodName:execute:[currentState, context] @TO@ MethodName:execute:[transition] @AT@ 20878 @LENGTH@ 30
---------UPD SimpleName@@currentState @TO@ transition @AT@ 20886 @LENGTH@ 12
---------DEL SimpleName@@context @AT@ 20900 @LENGTH@ 7


UPD ReturnStatement@@InfixExpression:getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ (duration)+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @TO@ InfixExpression:getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ duration+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @AT@ 3750 @LENGTH@ 245
---UPD InfixExpression@@getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ (duration)+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @TO@ getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ duration+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @AT@ 3757 @LENGTH@ 237
------DEL ParenthesizedExpression@@(duration) @AT@ 3834 @LENGTH@ 10
---------DEL SimpleName@@duration @AT@ 3835 @LENGTH@ 8
------INS SimpleName@@duration @TO@ InfixExpression@@getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ (duration)+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @AT@ 3834 @LENGTH@ 8


UPD IfStatement@@if (System.getProperty("os.name").equals("Windows Vista")) {  sendExchange(expectedBody);} @TO@ if (System.getProperty("os.name").startsWith("Windows")) {  sendExchange(expectedBody);} @AT@ 1634 @LENGTH@ 220
---UPD MethodInvocation@@System.getProperty("os.name").equals("Windows Vista") @TO@ System.getProperty("os.name").startsWith("Windows") @AT@ 1638 @LENGTH@ 53
------UPD SimpleName@@MethodName:equals:["Windows Vista"] @TO@ MethodName:startsWith:["Windows"] @AT@ 1668 @LENGTH@ 23
---------UPD StringLiteral@@"Windows Vista" @TO@ "Windows" @AT@ 1675 @LENGTH@ 15


UPD VariableDeclarationStatement@@Iterator iter=ObjectConverter.iterator(headerValue); @TO@ Iterator iter=ObjectHelper.createIterator(headerValue); @AT@ 5441 @LENGTH@ 54
---UPD VariableDeclarationFragment@@iter=ObjectConverter.iterator(headerValue) @TO@ iter=ObjectHelper.createIterator(headerValue) @AT@ 5450 @LENGTH@ 44
------UPD MethodInvocation@@ObjectConverter.iterator(headerValue) @TO@ ObjectHelper.createIterator(headerValue) @AT@ 5457 @LENGTH@ 37
---------UPD SimpleName@@Name:ObjectConverter @TO@ Name:ObjectHelper @AT@ 5457 @LENGTH@ 15
---------UPD SimpleName@@MethodName:iterator:[headerValue] @TO@ MethodName:createIterator:[headerValue] @AT@ 5473 @LENGTH@ 21


UPD ExpressionStatement@@Assignment:input=(ItemReader)inputControl.getMock() @TO@ Assignment:input=(ItemReader<Object>)inputControl.getMock() @AT@ 565 @LENGTH@ 44
---UPD Assignment@@input=(ItemReader)inputControl.getMock() @TO@ input=(ItemReader<Object>)inputControl.getMock() @AT@ 565 @LENGTH@ 43
------UPD CastExpression@@(ItemReader)inputControl.getMock() @TO@ (ItemReader<Object>)inputControl.getMock() @AT@ 573 @LENGTH@ 35
---------DEL SimpleType@@ItemReader @AT@ 574 @LENGTH@ 10
---------INS ParameterizedType@@ItemReader<Object> @TO@ CastExpression@@(ItemReader)inputControl.getMock() @AT@ 582 @LENGTH@ 18
------------INS SimpleType@@ItemReader @TO@ ParameterizedType@@ItemReader<Object> @AT@ 582 @LENGTH@ 10
------------INS SimpleType@@Object @TO@ ParameterizedType@@ItemReader<Object> @AT@ 593 @LENGTH@ 6


INS MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @TO@ TypeDeclaration@@[public, abstract]LanguageTestSupport, ExchangeTestSupport @AT@ 2821 @LENGTH@ 927
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 2821 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 2831 @LENGTH@ 4
---INS SimpleName@@MethodName:assertExpression @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 2836 @LENGTH@ 16
---INS SingleVariableDeclaration@@String expressionText @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 2853 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String expressionText @AT@ 2853 @LENGTH@ 6
------INS SimpleName@@expressionText @TO@ SingleVariableDeclaration@@String expressionText @AT@ 2860 @LENGTH@ 14
---INS SingleVariableDeclaration@@String expectedValue @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 2876 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String expectedValue @AT@ 2876 @LENGTH@ 6
------INS SimpleName@@expectedValue @TO@ SingleVariableDeclaration@@String expectedValue @AT@ 2883 @LENGTH@ 13
---INS SingleVariableDeclaration@@String orThisExpectedValue @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 2898 @LENGTH@ 26
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String orThisExpectedValue @AT@ 2898 @LENGTH@ 6
------INS SimpleName@@orThisExpectedValue @TO@ SingleVariableDeclaration@@String orThisExpectedValue @AT@ 2905 @LENGTH@ 19
---INS VariableDeclarationStatement@@Language language=assertResolveLanguage(getLanguageName()); @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 2936 @LENGTH@ 61
------INS SimpleType@@Language @TO@ VariableDeclarationStatement@@Language language=assertResolveLanguage(getLanguageName()); @AT@ 2936 @LENGTH@ 8
------INS VariableDeclarationFragment@@language=assertResolveLanguage(getLanguageName()) @TO@ VariableDeclarationStatement@@Language language=assertResolveLanguage(getLanguageName()); @AT@ 2945 @LENGTH@ 51
---------INS SimpleName@@language @TO@ VariableDeclarationFragment@@language=assertResolveLanguage(getLanguageName()) @AT@ 2945 @LENGTH@ 8
---------INS MethodInvocation@@assertResolveLanguage(getLanguageName()) @TO@ VariableDeclarationFragment@@language=assertResolveLanguage(getLanguageName()) @AT@ 2956 @LENGTH@ 40
------------INS SimpleName@@MethodName:assertResolveLanguage:[getLanguageName()] @TO@ MethodInvocation@@assertResolveLanguage(getLanguageName()) @AT@ 2956 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:getLanguageName:[] @TO@ SimpleName@@MethodName:assertResolveLanguage:[getLanguageName()] @AT@ 2978 @LENGTH@ 17
---INS VariableDeclarationStatement@@Expression<Exchange> expression=language.createExpression(expressionText); @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 3007 @LENGTH@ 76
------INS ParameterizedType@@Expression<Exchange> @TO@ VariableDeclarationStatement@@Expression<Exchange> expression=language.createExpression(expressionText); @AT@ 3007 @LENGTH@ 20
---------INS SimpleType@@Expression @TO@ ParameterizedType@@Expression<Exchange> @AT@ 3007 @LENGTH@ 10
---------INS SimpleType@@Exchange @TO@ ParameterizedType@@Expression<Exchange> @AT@ 3018 @LENGTH@ 8
------INS VariableDeclarationFragment@@expression=language.createExpression(expressionText) @TO@ VariableDeclarationStatement@@Expression<Exchange> expression=language.createExpression(expressionText); @AT@ 3028 @LENGTH@ 54
---------INS SimpleName@@expression @TO@ VariableDeclarationFragment@@expression=language.createExpression(expressionText) @AT@ 3028 @LENGTH@ 10
---------INS MethodInvocation@@language.createExpression(expressionText) @TO@ VariableDeclarationFragment@@expression=language.createExpression(expressionText) @AT@ 3041 @LENGTH@ 41
------------INS SimpleName@@Name:language @TO@ MethodInvocation@@language.createExpression(expressionText) @AT@ 3041 @LENGTH@ 8
------------INS SimpleName@@MethodName:createExpression:[expressionText] @TO@ MethodInvocation@@language.createExpression(expressionText) @AT@ 3050 @LENGTH@ 32
---------------INS SimpleName@@expressionText @TO@ SimpleName@@MethodName:createExpression:[expressionText] @AT@ 3067 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertNotNull("No Expression could be created for text: " + expressionText + " language: "+ language,expression) @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 3092 @LENGTH@ 115
------INS MethodInvocation@@assertNotNull("No Expression could be created for text: " + expressionText + " language: "+ language,expression) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull("No Expression could be created for text: " + expressionText + " language: "+ language,expression) @AT@ 3092 @LENGTH@ 114
---------INS SimpleName@@MethodName:assertNotNull:["No Expression could be created for text: " + expressionText + " language: "+ language, expression] @TO@ MethodInvocation@@assertNotNull("No Expression could be created for text: " + expressionText + " language: "+ language,expression) @AT@ 3092 @LENGTH@ 114
------------INS InfixExpression@@"No Expression could be created for text: " + expressionText + " language: "+ language @TO@ SimpleName@@MethodName:assertNotNull:["No Expression could be created for text: " + expressionText + " language: "+ language, expression] @AT@ 3106 @LENGTH@ 87
---------------INS StringLiteral@@"No Expression could be created for text: " @TO@ InfixExpression@@"No Expression could be created for text: " + expressionText + " language: "+ language @AT@ 3106 @LENGTH@ 43
---------------INS Operator@@+ @TO@ InfixExpression@@"No Expression could be created for text: " + expressionText + " language: "+ language @AT@ 3149 @LENGTH@ 1
---------------INS SimpleName@@expressionText @TO@ InfixExpression@@"No Expression could be created for text: " + expressionText + " language: "+ language @AT@ 3152 @LENGTH@ 14
---------------INS StringLiteral@@" language: " @TO@ InfixExpression@@"No Expression could be created for text: " + expressionText + " language: "+ language @AT@ 3169 @LENGTH@ 13
---------------INS SimpleName@@language @TO@ InfixExpression@@"No Expression could be created for text: " + expressionText + " language: "+ language @AT@ 3185 @LENGTH@ 8
------------INS SimpleName@@expression @TO@ SimpleName@@MethodName:assertNotNull:["No Expression could be created for text: " + expressionText + " language: "+ language, expression] @AT@ 3195 @LENGTH@ 10
---INS VariableDeclarationStatement@@Object value=expression.evaluate(exchange); @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 3225 @LENGTH@ 45
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object value=expression.evaluate(exchange); @AT@ 3225 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=expression.evaluate(exchange) @TO@ VariableDeclarationStatement@@Object value=expression.evaluate(exchange); @AT@ 3232 @LENGTH@ 37
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=expression.evaluate(exchange) @AT@ 3232 @LENGTH@ 5
---------INS MethodInvocation@@expression.evaluate(exchange) @TO@ VariableDeclarationFragment@@value=expression.evaluate(exchange) @AT@ 3240 @LENGTH@ 29
------------INS SimpleName@@Name:expression @TO@ MethodInvocation@@expression.evaluate(exchange) @AT@ 3240 @LENGTH@ 10
------------INS SimpleName@@MethodName:evaluate:[exchange] @TO@ MethodInvocation@@expression.evaluate(exchange) @AT@ 3251 @LENGTH@ 18
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange] @AT@ 3260 @LENGTH@ 8
---INS IfStatement@@if (expectedValue != null) {  value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value);} @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 3336 @LENGTH@ 129
------INS InfixExpression@@expectedValue != null @TO@ IfStatement@@if (expectedValue != null) {  value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value);} @AT@ 3340 @LENGTH@ 21
---------INS SimpleName@@expectedValue @TO@ InfixExpression@@expectedValue != null @AT@ 3340 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@expectedValue != null @AT@ 3353 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@expectedValue != null @AT@ 3357 @LENGTH@ 4
------INS Block@@ThenBody:{  value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value);} @TO@ IfStatement@@if (expectedValue != null) {  value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value);} @AT@ 3363 @LENGTH@ 102
---------INS ExpressionStatement@@Assignment:value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @TO@ Block@@ThenBody:{  value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value);} @AT@ 3375 @LENGTH@ 80
------------INS Assignment@@value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @TO@ ExpressionStatement@@Assignment:value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @AT@ 3375 @LENGTH@ 79
---------------INS SimpleName@@value @TO@ Assignment@@value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @AT@ 3375 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @AT@ 3380 @LENGTH@ 1
---------------INS MethodInvocation@@ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @TO@ Assignment@@value=ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @AT@ 3383 @LENGTH@ 71
------------------INS SimpleName@@Name:ExchangeHelper @TO@ MethodInvocation@@ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @AT@ 3383 @LENGTH@ 14
------------------INS SimpleName@@MethodName:convertToType:[exchange, expectedValue.getClass(), value] @TO@ MethodInvocation@@ExchangeHelper.convertToType(exchange,expectedValue.getClass(),value) @AT@ 3398 @LENGTH@ 56
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertToType:[exchange, expectedValue.getClass(), value] @AT@ 3412 @LENGTH@ 8
---------------------INS MethodInvocation@@expectedValue.getClass() @TO@ SimpleName@@MethodName:convertToType:[exchange, expectedValue.getClass(), value] @AT@ 3422 @LENGTH@ 24
------------------------INS SimpleName@@Name:expectedValue @TO@ MethodInvocation@@expectedValue.getClass() @AT@ 3422 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@expectedValue.getClass() @AT@ 3436 @LENGTH@ 10
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:convertToType:[exchange, expectedValue.getClass(), value] @AT@ 3448 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:log.debug("Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value) @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 3475 @LENGTH@ 101
------INS MethodInvocation@@log.debug("Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value) @TO@ ExpressionStatement@@MethodInvocation:log.debug("Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value) @AT@ 3475 @LENGTH@ 100
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value) @AT@ 3475 @LENGTH@ 3
---------INS SimpleName@@MethodName:debug:["Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value] @TO@ MethodInvocation@@log.debug("Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value) @AT@ 3479 @LENGTH@ 96
------------INS InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @TO@ SimpleName@@MethodName:debug:["Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value] @AT@ 3485 @LENGTH@ 89
---------------INS StringLiteral@@"Evaluated expression: " @TO@ InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @AT@ 3485 @LENGTH@ 24
---------------INS Operator@@+ @TO@ InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @AT@ 3509 @LENGTH@ 1
---------------INS SimpleName@@expression @TO@ InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @AT@ 3512 @LENGTH@ 10
---------------INS StringLiteral@@" on exchange: " @TO@ InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @AT@ 3525 @LENGTH@ 16
---------------INS SimpleName@@exchange @TO@ InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @AT@ 3544 @LENGTH@ 8
---------------INS StringLiteral@@" result: " @TO@ InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @AT@ 3555 @LENGTH@ 11
---------------INS SimpleName@@value @TO@ InfixExpression@@"Evaluated expression: " + expression + " on exchange: "+ exchange+ " result: "+ value @AT@ 3569 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertTrue("Expression: " + expression + " on Exchange: "+ exchange,expectedValue.equals(value) || orThisExpectedValue.equals(value)) @TO@ MethodDeclaration@@protected, void, MethodName:assertExpression, String expressionText, String expectedValue, String orThisExpectedValue,  @AT@ 3586 @LENGTH@ 156
------INS MethodInvocation@@assertTrue("Expression: " + expression + " on Exchange: "+ exchange,expectedValue.equals(value) || orThisExpectedValue.equals(value)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Expression: " + expression + " on Exchange: "+ exchange,expectedValue.equals(value) || orThisExpectedValue.equals(value)) @AT@ 3586 @LENGTH@ 155
---------INS SimpleName@@MethodName:assertTrue:["Expression: " + expression + " on Exchange: "+ exchange, expectedValue.equals(value) || orThisExpectedValue.equals(value)] @TO@ MethodInvocation@@assertTrue("Expression: " + expression + " on Exchange: "+ exchange,expectedValue.equals(value) || orThisExpectedValue.equals(value)) @AT@ 3586 @LENGTH@ 155
------------INS InfixExpression@@"Expression: " + expression + " on Exchange: "+ exchange @TO@ SimpleName@@MethodName:assertTrue:["Expression: " + expression + " on Exchange: "+ exchange, expectedValue.equals(value) || orThisExpectedValue.equals(value)] @AT@ 3597 @LENGTH@ 57
---------------INS StringLiteral@@"Expression: " @TO@ InfixExpression@@"Expression: " + expression + " on Exchange: "+ exchange @AT@ 3597 @LENGTH@ 14
---------------INS Operator@@+ @TO@ InfixExpression@@"Expression: " + expression + " on Exchange: "+ exchange @AT@ 3611 @LENGTH@ 1
---------------INS SimpleName@@expression @TO@ InfixExpression@@"Expression: " + expression + " on Exchange: "+ exchange @AT@ 3614 @LENGTH@ 10
---------------INS StringLiteral@@" on Exchange: " @TO@ InfixExpression@@"Expression: " + expression + " on Exchange: "+ exchange @AT@ 3627 @LENGTH@ 16
---------------INS SimpleName@@exchange @TO@ InfixExpression@@"Expression: " + expression + " on Exchange: "+ exchange @AT@ 3646 @LENGTH@ 8
------------INS InfixExpression@@expectedValue.equals(value) || orThisExpectedValue.equals(value) @TO@ SimpleName@@MethodName:assertTrue:["Expression: " + expression + " on Exchange: "+ exchange, expectedValue.equals(value) || orThisExpectedValue.equals(value)] @AT@ 3676 @LENGTH@ 64
---------------INS MethodInvocation@@expectedValue.equals(value) @TO@ InfixExpression@@expectedValue.equals(value) || orThisExpectedValue.equals(value) @AT@ 3676 @LENGTH@ 27
------------------INS SimpleName@@Name:expectedValue @TO@ MethodInvocation@@expectedValue.equals(value) @AT@ 3676 @LENGTH@ 13
------------------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@expectedValue.equals(value) @AT@ 3690 @LENGTH@ 13
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 3697 @LENGTH@ 5
---------------INS Operator@@|| @TO@ InfixExpression@@expectedValue.equals(value) || orThisExpectedValue.equals(value) @AT@ 3703 @LENGTH@ 2
---------------INS MethodInvocation@@orThisExpectedValue.equals(value) @TO@ InfixExpression@@expectedValue.equals(value) || orThisExpectedValue.equals(value) @AT@ 3707 @LENGTH@ 33
------------------INS SimpleName@@Name:orThisExpectedValue @TO@ MethodInvocation@@orThisExpectedValue.equals(value) @AT@ 3707 @LENGTH@ 19
------------------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@orThisExpectedValue.equals(value) @AT@ 3727 @LENGTH@ 13
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 3734 @LENGTH@ 5


UPD MethodDeclaration@@public, JmsExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 4620 @LENGTH@ 140
---UPD SimpleType@@JmsExchange @TO@ Exchange @AT@ 4627 @LENGTH@ 11


UPD MethodDeclaration@@public, static, MyBean, MethodName:fromString, String text, Exchange exchange,  @TO@ public, MyBean, MethodName:fromString, String text, Exchange exchange,  @AT@ 1044 @LENGTH@ 256
---DEL Modifier@@static @AT@ 1051 @LENGTH@ 6


UPD FieldDeclaration@@protected, final, transient, Log, [LOG=LogFactory.getLog(getClass())] @TO@ protected, final, transient, Log, [log=LogFactory.getLog(getClass())] @AT@ 1191 @LENGTH@ 66
---UPD VariableDeclarationFragment@@LOG=LogFactory.getLog(getClass()) @TO@ log=LogFactory.getLog(getClass()) @AT@ 1221 @LENGTH@ 35
------UPD SimpleName@@LOG @TO@ log @AT@ 1221 @LENGTH@ 3


DEL ExpressionStatement@@MethodInvocation:System.out.println("The body is " + body) @AT@ 3607 @LENGTH@ 42
---DEL MethodInvocation@@System.out.println("The body is " + body) @AT@ 3607 @LENGTH@ 41
------DEL QualifiedName@@Name:System.out @AT@ 3607 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["The body is " + body] @AT@ 3618 @LENGTH@ 30
---------DEL InfixExpression@@"The body is " + body @AT@ 3626 @LENGTH@ 21
------------DEL StringLiteral@@"The body is " @AT@ 3626 @LENGTH@ 14
------------DEL Operator@@+ @AT@ 3640 @LENGTH@ 1
------------DEL SimpleName@@body @AT@ 3643 @LENGTH@ 4


UPD ReturnStatement@@InfixExpression:getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ (time - groupStartTime)+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @TO@ InfixExpression:getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ (duration)+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @AT@ 3703 @LENGTH@ 258
---UPD InfixExpression@@getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ (time - groupStartTime)+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @TO@ getAction() + ": " + receivedCount+ " messages so far. Last group took: "+ (duration)+ " millis which is: "+ numberFormat.format(rate)+ " messages per second. average: "+ numberFormat.format(average) @AT@ 3710 @LENGTH@ 250
------UPD ParenthesizedExpression@@(time - groupStartTime) @TO@ (duration) @AT@ 3787 @LENGTH@ 23
---------DEL InfixExpression@@time - groupStartTime @AT@ 3788 @LENGTH@ 21
------------DEL SimpleName@@time @AT@ 3788 @LENGTH@ 4
------------DEL Operator@@- @AT@ 3792 @LENGTH@ 1
------------DEL SimpleName@@groupStartTime @AT@ 3795 @LENGTH@ 14
---------INS SimpleName@@duration @TO@ ParenthesizedExpression@@(time - groupStartTime) @AT@ 3835 @LENGTH@ 8


UPD VariableDeclarationStatement@@HandlerEndpoint endpoint=new HandlerEndpoint(new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
); @TO@ DefaultEndpoint<MessageHandler> endpoint=new DefaultEndpoint<MessageHandler>(new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
); @AT@ 3804 @LENGTH@ 185
---INS ParameterizedType@@DefaultEndpoint<MessageHandler> @TO@ VariableDeclarationStatement@@HandlerEndpoint endpoint=new HandlerEndpoint(new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
); @AT@ 3801 @LENGTH@ 31
------INS SimpleType@@DefaultEndpoint @TO@ ParameterizedType@@DefaultEndpoint<MessageHandler> @AT@ 3801 @LENGTH@ 15
------INS SimpleType@@MessageHandler @TO@ ParameterizedType@@DefaultEndpoint<MessageHandler> @AT@ 3817 @LENGTH@ 14
---DEL SimpleType@@HandlerEndpoint @AT@ 3804 @LENGTH@ 15
---UPD VariableDeclarationFragment@@endpoint=new HandlerEndpoint(new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
) @TO@ endpoint=new DefaultEndpoint<MessageHandler>(new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
) @AT@ 3820 @LENGTH@ 168
------UPD ClassInstanceCreation@@HandlerEndpoint[new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
] @TO@ DefaultEndpoint<MessageHandler>[new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
] @AT@ 3831 @LENGTH@ 157
---------DEL SimpleType@@HandlerEndpoint @AT@ 3835 @LENGTH@ 15
---------INS ParameterizedType@@DefaultEndpoint<MessageHandler> @TO@ ClassInstanceCreation@@HandlerEndpoint[new MessageHandler(){
  public Message<?> handle(  Message<?> message){
    throw new RuntimeException("Planned failure");
  }
}
] @AT@ 3848 @LENGTH@ 31
------------INS SimpleType@@DefaultEndpoint @TO@ ParameterizedType@@DefaultEndpoint<MessageHandler> @AT@ 3848 @LENGTH@ 15
------------INS SimpleType@@MessageHandler @TO@ ParameterizedType@@DefaultEndpoint<MessageHandler> @AT@ 3864 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:template.sendBody(endpointUri,expectedBody) @TO@ MethodInvocation:template.sendBody(endpointUri,ExchangePattern.InOut,expectedBody) @AT@ 2100 @LENGTH@ 45
---UPD MethodInvocation@@template.sendBody(endpointUri,expectedBody) @TO@ template.sendBody(endpointUri,ExchangePattern.InOut,expectedBody) @AT@ 2100 @LENGTH@ 44
------UPD SimpleName@@MethodName:sendBody:[endpointUri, expectedBody] @TO@ MethodName:sendBody:[endpointUri, ExchangePattern.InOut, expectedBody] @AT@ 2109 @LENGTH@ 35
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:sendBody:[endpointUri, expectedBody] @AT@ 2172 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2172 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2188 @LENGTH@ 5


MOV MethodDeclaration@@public, static, XStreamDataFormat, MethodName:processAnnotations, Iterable<Class<?>> types,  @TO@ TypeDeclaration@@[public]XStreamDataFormat, [DataFormat] @AT@ 1882 @LENGTH@ 308


INS ExpressionStatement@@MethodInvocation:channel.cd(currentDir) @TO@ MethodDeclaration@@protected, void, MethodName:pollDirectory, String dir, Exception,  @AT@ 5321 @LENGTH@ 23
---INS MethodInvocation@@channel.cd(currentDir) @TO@ ExpressionStatement@@MethodInvocation:channel.cd(currentDir) @AT@ 5321 @LENGTH@ 22
------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.cd(currentDir) @AT@ 5321 @LENGTH@ 7
------INS SimpleName@@MethodName:cd:[currentDir] @TO@ MethodInvocation@@channel.cd(currentDir) @AT@ 5329 @LENGTH@ 14
---------INS SimpleName@@currentDir @TO@ SimpleName@@MethodName:cd:[currentDir] @AT@ 5332 @LENGTH@ 10


UPD FieldDeclaration@@protected, String, [expectedText="Not Implemented"] @TO@ protected, String, [expectedText="Method Not Allowed"] @AT@ 1406 @LENGTH@ 50
---UPD VariableDeclarationFragment@@expectedText="Not Implemented" @TO@ expectedText="Method Not Allowed" @AT@ 1423 @LENGTH@ 32
------UPD StringLiteral@@"Not Implemented" @TO@ "Method Not Allowed" @AT@ 1438 @LENGTH@ 17


UPD VariableDeclarationStatement@@E newExchange=getEndpoint().createExchange(); @TO@ E newExchange=(E)getEndpoint().createExchange(); @AT@ 2211 @LENGTH@ 47
---UPD VariableDeclarationFragment@@newExchange=getEndpoint().createExchange() @TO@ newExchange=(E)getEndpoint().createExchange() @AT@ 2213 @LENGTH@ 44
------INS CastExpression@@(E)getEndpoint().createExchange() @TO@ VariableDeclarationFragment@@newExchange=getEndpoint().createExchange() @AT@ 2227 @LENGTH@ 34
---------INS SimpleType@@E @TO@ CastExpression@@(E)getEndpoint().createExchange() @AT@ 2228 @LENGTH@ 1
---------INS MethodInvocation@@getEndpoint().createExchange() @TO@ CastExpression@@(E)getEndpoint().createExchange() @AT@ 2231 @LENGTH@ 30
------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 2227 @LENGTH@ 13
------------MOV SimpleName@@MethodName:createExchange:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 2241 @LENGTH@ 16
------DEL MethodInvocation@@getEndpoint().createExchange() @AT@ 2227 @LENGTH@ 30


UPD IfStatement@@if (answer.startsWith("java.lang.")) {  return answer.substring(10);} @TO@ if (answer != null && answer.startsWith("java.lang.")) {  return answer.substring(10);} @AT@ 5226 @LENGTH@ 89
---INS InfixExpression@@answer != null && answer.startsWith("java.lang.") @TO@ IfStatement@@if (answer.startsWith("java.lang.")) {  return answer.substring(10);} @AT@ 5230 @LENGTH@ 49
------MOV MethodInvocation@@answer.startsWith("java.lang.") @TO@ InfixExpression@@answer != null && answer.startsWith("java.lang.") @AT@ 5230 @LENGTH@ 31
------INS InfixExpression@@answer != null @TO@ InfixExpression@@answer != null && answer.startsWith("java.lang.") @AT@ 5230 @LENGTH@ 14
---------INS SimpleName@@answer @TO@ InfixExpression@@answer != null @AT@ 5230 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@answer != null @AT@ 5236 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@answer != null @AT@ 5240 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@answer != null && answer.startsWith("java.lang.") @AT@ 5244 @LENGTH@ 2


INS MethodDeclaration@@private, voidMethodName:FileExpressionBuilder,  @TO@ TypeDeclaration@@[public]FileExpressionBuilder,  @AT@ 1315 @LENGTH@ 63
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:FileExpressionBuilder,  @AT@ 1315 @LENGTH@ 7
---INS SimpleName@@MethodName:FileExpressionBuilder @TO@ MethodDeclaration@@private, voidMethodName:FileExpressionBuilder,  @AT@ 1323 @LENGTH@ 21


UPD TypeDeclaration@@[@Converter, public, final]StaticMethodWithExchangeTestConverter,  @TO@ [@Converter, public]StaticMethodWithExchangeTestConverter,  @AT@ 954 @LENGTH@ 348
---DEL Modifier@@final @AT@ 972 @LENGTH@ 5


MOV ExpressionStatement@@MethodInvocation:mock.assertNoDuplicates(body()) @TO@ MethodDeclaration@@public, void, MethodName:testConcurrency, Exception,  @AT@ 2484 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:logger.error("Failed to resolve/create processing strategy (" + name + ")",e) @TO@ MethodInvocation:LOG.error("Failed to resolve/create processing strategy (" + name + ")",e) @AT@ 5383 @LENGTH@ 79
---UPD MethodInvocation@@logger.error("Failed to resolve/create processing strategy (" + name + ")",e) @TO@ LOG.error("Failed to resolve/create processing strategy (" + name + ")",e) @AT@ 5383 @LENGTH@ 78
------UPD SimpleName@@Name:logger @TO@ Name:LOG @AT@ 5383 @LENGTH@ 6


UPD IfStatement@@if (readSkipPolicy.shouldSkip(e,contribution.getStepSkipCount())) {  try {    skipCount++;    getListener().onSkipInRead(e);  } catch (  RuntimeException ex) {    contribution.incrementReadSkipCount(skipCount);    throw new SkipListenerFailedException("Fatal exception in SkipListener.",ex,e);  }  logger.debug("Skipping failed input",e);} else {  throw e;} @TO@ if (readSkipPolicy.shouldSkip(e,contribution.getStepSkipCount() + skipCount)) {  try {    skipCount++;    getListener().onSkipInRead(e);  } catch (  RuntimeException ex) {    contribution.incrementReadSkipCount(skipCount);    throw new SkipListenerFailedException("Fatal exception in SkipListener.",ex,e);  }  logger.debug("Skipping failed input",e);} else {  throw e;} @AT@ 13226 @LENGTH@ 573
---UPD MethodInvocation@@readSkipPolicy.shouldSkip(e,contribution.getStepSkipCount()) @TO@ readSkipPolicy.shouldSkip(e,contribution.getStepSkipCount() + skipCount) @AT@ 13230 @LENGTH@ 61
------UPD SimpleName@@MethodName:shouldSkip:[e, contribution.getStepSkipCount()] @TO@ MethodName:shouldSkip:[e, contribution.getStepSkipCount() + skipCount] @AT@ 13245 @LENGTH@ 46
---------INS InfixExpression@@contribution.getStepSkipCount() + skipCount @TO@ SimpleName@@MethodName:shouldSkip:[e, contribution.getStepSkipCount()] @AT@ 13259 @LENGTH@ 43
------------INS MethodInvocation@@contribution.getStepSkipCount() @TO@ InfixExpression@@contribution.getStepSkipCount() + skipCount @AT@ 13259 @LENGTH@ 31
---------------MOV SimpleName@@Name:contribution @TO@ MethodInvocation@@contribution.getStepSkipCount() @AT@ 13259 @LENGTH@ 12
---------------MOV SimpleName@@MethodName:getStepSkipCount:[] @TO@ MethodInvocation@@contribution.getStepSkipCount() @AT@ 13272 @LENGTH@ 18
------------INS Operator@@+ @TO@ InfixExpression@@contribution.getStepSkipCount() + skipCount @AT@ 13290 @LENGTH@ 1
------------INS SimpleName@@skipCount @TO@ InfixExpression@@contribution.getStepSkipCount() + skipCount @AT@ 13293 @LENGTH@ 9
---------DEL MethodInvocation@@contribution.getStepSkipCount() @AT@ 13259 @LENGTH@ 31


DEL ExpressionStatement@@MethodInvocation:testReaderUpdatesProcessIndicator() @AT@ 2924 @LENGTH@ 36
---DEL MethodInvocation@@MethodName:testReaderUpdatesProcessIndicator:[] @AT@ 2924 @LENGTH@ 35


UPD FieldDeclaration@@private, FieldSetMapper, [fieldSetMapper=new FieldSetMapper(){
  public Object mapLine(  FieldSet fs,  int lineNum){
    return fs;
  }
}
] @TO@ private, FieldSetMapper<FieldSet>, [fieldSetMapper=new PassThroughFieldSetMapper()] @AT@ 1835 @LENGTH@ 136
---DEL SimpleType@@FieldSetMapper @AT@ 1843 @LENGTH@ 14
---UPD VariableDeclarationFragment@@fieldSetMapper=new FieldSetMapper(){
  public Object mapLine(  FieldSet fs,  int lineNum){
    return fs;
  }
}
 @TO@ fieldSetMapper=new PassThroughFieldSetMapper() @AT@ 1858 @LENGTH@ 112
------UPD ClassInstanceCreation@@FieldSetMapper[] @TO@ PassThroughFieldSetMapper[] @AT@ 1875 @LENGTH@ 95
---------UPD SimpleType@@FieldSetMapper @TO@ PassThroughFieldSetMapper @AT@ 1879 @LENGTH@ 14
---------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 1896 @LENGTH@ 74
------------DEL MethodDeclaration@@public, Object, MethodName:mapLine, FieldSet fs, int lineNum,  @AT@ 1900 @LENGTH@ 67
---------------DEL Modifier@@public @AT@ 1900 @LENGTH@ 6
---------------DEL SimpleType@@Object @AT@ 1907 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:mapLine @AT@ 1914 @LENGTH@ 7
---------------DEL SingleVariableDeclaration@@FieldSet fs @AT@ 1922 @LENGTH@ 11
------------------DEL SimpleType@@FieldSet @AT@ 1922 @LENGTH@ 8
------------------DEL SimpleName@@fs @AT@ 1931 @LENGTH@ 2
---------------DEL SingleVariableDeclaration@@int lineNum @AT@ 1935 @LENGTH@ 11
------------------DEL PrimitiveType@@int @AT@ 1935 @LENGTH@ 3
------------------DEL SimpleName@@lineNum @AT@ 1939 @LENGTH@ 7
---------------DEL ReturnStatement@@SimpleName:fs @AT@ 1953 @LENGTH@ 10
------------------DEL SimpleName@@fs @AT@ 1960 @LENGTH@ 2
---INS ParameterizedType@@FieldSetMapper<FieldSet> @TO@ FieldDeclaration@@private, FieldSetMapper, [fieldSetMapper=new FieldSetMapper(){
  public Object mapLine(  FieldSet fs,  int lineNum){
    return fs;
  }
}
] @AT@ 1941 @LENGTH@ 24
------INS SimpleType@@FieldSetMapper @TO@ ParameterizedType@@FieldSetMapper<FieldSet> @AT@ 1941 @LENGTH@ 14
------INS SimpleType@@FieldSet @TO@ ParameterizedType@@FieldSetMapper<FieldSet> @AT@ 1956 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start",body) @TO@ MethodInvocation:template.sendBody("direct:start",ExchangePattern.InOut,body) @AT@ 1358 @LENGTH@ 40
---UPD MethodInvocation@@template.sendBody("direct:start",body) @TO@ template.sendBody("direct:start",ExchangePattern.InOut,body) @AT@ 1358 @LENGTH@ 39
------UPD SimpleName@@MethodName:sendBody:["direct:start", body] @TO@ MethodName:sendBody:["direct:start", ExchangePattern.InOut, body] @AT@ 1367 @LENGTH@ 30
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:sendBody:["direct:start", body] @AT@ 1433 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1433 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1449 @LENGTH@ 5


UPD FieldDeclaration@@private, volatile, transient, Collection<StepExecution>, [stepExecutions=new HashSet<StepExecution>()] @TO@ private, volatile, Collection<StepExecution>, [stepExecutions=new HashSet<StepExecution>()] @AT@ 1029 @LENGTH@ 99
---DEL Modifier@@transient @AT@ 1046 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:getExceptionHandler().handleException(t) @TO@ MethodInvocation:getExceptionHandler().handleException(newt) @AT@ 3081 @LENGTH@ 41
---UPD MethodInvocation@@getExceptionHandler().handleException(t) @TO@ getExceptionHandler().handleException(newt) @AT@ 3081 @LENGTH@ 40
------UPD SimpleName@@MethodName:handleException:[t] @TO@ MethodName:handleException:[newt] @AT@ 3103 @LENGTH@ 18
---------UPD SimpleName@@t @TO@ newt @AT@ 3119 @LENGTH@ 1


INS MethodDeclaration@@void, MethodName:rollback, FileEndpoint endpoint, FileExchange exchange, File file,  @TO@ TypeDeclaration@@[public]FileProcessStrategy,  @AT@ 2225 @LENGTH@ 66
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:rollback, FileEndpoint endpoint, FileExchange exchange, File file,  @AT@ 2220 @LENGTH@ 4
---INS SimpleName@@MethodName:rollback @TO@ MethodDeclaration@@void, MethodName:rollback, FileEndpoint endpoint, FileExchange exchange, File file,  @AT@ 2225 @LENGTH@ 8
---INS SingleVariableDeclaration@@FileEndpoint endpoint @TO@ MethodDeclaration@@void, MethodName:rollback, FileEndpoint endpoint, FileExchange exchange, File file,  @AT@ 2234 @LENGTH@ 21
------INS SimpleType@@FileEndpoint @TO@ SingleVariableDeclaration@@FileEndpoint endpoint @AT@ 2234 @LENGTH@ 12
------INS SimpleName@@endpoint @TO@ SingleVariableDeclaration@@FileEndpoint endpoint @AT@ 2247 @LENGTH@ 8
---INS SingleVariableDeclaration@@FileExchange exchange @TO@ MethodDeclaration@@void, MethodName:rollback, FileEndpoint endpoint, FileExchange exchange, File file,  @AT@ 2257 @LENGTH@ 21
------INS SimpleType@@FileExchange @TO@ SingleVariableDeclaration@@FileExchange exchange @AT@ 2257 @LENGTH@ 12
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@FileExchange exchange @AT@ 2270 @LENGTH@ 8
---INS SingleVariableDeclaration@@File file @TO@ MethodDeclaration@@void, MethodName:rollback, FileEndpoint endpoint, FileExchange exchange, File file,  @AT@ 2280 @LENGTH@ 9
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File file @AT@ 2280 @LENGTH@ 4
------INS SimpleName@@file @TO@ SingleVariableDeclaration@@File file @AT@ 2285 @LENGTH@ 4


UPD FieldDeclaration@@private, int, [count=0] @TO@ private, int, [count] @AT@ 1009 @LENGTH@ 22
---UPD VariableDeclarationFragment@@count=0 @TO@ count @AT@ 1021 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 1029 @LENGTH@ 1


UPD VariableDeclarationStatement@@DirContext newCtx=getContextSource().getReadOnlyContext(); @TO@ DirContext newCtx=getContextSource().getReadWriteContext(); @AT@ 3723 @LENGTH@ 60
---UPD VariableDeclarationFragment@@newCtx=getContextSource().getReadOnlyContext() @TO@ newCtx=getContextSource().getReadWriteContext() @AT@ 3734 @LENGTH@ 48
------UPD MethodInvocation@@getContextSource().getReadOnlyContext() @TO@ getContextSource().getReadWriteContext() @AT@ 3743 @LENGTH@ 39
---------UPD SimpleName@@MethodName:getReadOnlyContext:[] @TO@ MethodName:getReadWriteContext:[] @AT@ 3762 @LENGTH@ 20


UPD MethodDeclaration@@private, void, MethodName:setMaxValues, Range[] ranges,  @TO@ private, void, MethodName:setMaxValues, final Range[] ranges,  @AT@ 3053 @LENGTH@ 629
---UPD SingleVariableDeclaration@@Range[] ranges @TO@ final Range[] ranges @AT@ 3079 @LENGTH@ 14
------INS Modifier@@final @TO@ SingleVariableDeclaration@@Range[] ranges @AT@ 3079 @LENGTH@ 5
---UPD VariableDeclarationStatement@@Range[] c=(Range[])ranges.clone(); @TO@ Integer[] c=new Integer[ranges.length]; @AT@ 3151 @LENGTH@ 36
------UPD ArrayType@@Range[] @TO@ Integer[] @AT@ 3151 @LENGTH@ 7
---------UPD SimpleType@@Range @TO@ Integer @AT@ 3151 @LENGTH@ 5
------UPD VariableDeclarationFragment@@c=(Range[])ranges.clone() @TO@ c=new Integer[ranges.length] @AT@ 3159 @LENGTH@ 27
---------DEL CastExpression@@(Range[])ranges.clone() @AT@ 3163 @LENGTH@ 23
------------DEL ArrayType@@Range[] @AT@ 3164 @LENGTH@ 7
------------DEL MethodInvocation@@ranges.clone() @AT@ 3172 @LENGTH@ 14
---------------DEL SimpleName@@Name:ranges @AT@ 3172 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:clone:[] @AT@ 3179 @LENGTH@ 7
---------INS ArrayCreation@@new Integer[ranges.length] @TO@ VariableDeclarationFragment@@c=(Range[])ranges.clone() @AT@ 3176 @LENGTH@ 26
------------INS ArrayType@@Integer[] @TO@ ArrayCreation@@new Integer[ranges.length] @AT@ 3180 @LENGTH@ 22
---------------MOV SimpleType@@Range @TO@ ArrayType@@Integer[] @AT@ 3164 @LENGTH@ 5
------------INS QualifiedName@@ranges.length @TO@ ArrayCreation@@new Integer[ranges.length] @AT@ 3188 @LENGTH@ 13
---------------INS SimpleName@@ranges @TO@ QualifiedName@@ranges.length @AT@ 3188 @LENGTH@ 6
---------------INS SimpleName@@length @TO@ QualifiedName@@ranges.length @AT@ 3195 @LENGTH@ 6
---INS ForStatement@@for (int i=0; i < c.length; i++) {  c[i]=i;} @TO@ MethodDeclaration@@private, void, MethodName:setMaxValues, Range[] ranges,  @AT@ 3206 @LENGTH@ 49
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < c.length; i++) {  c[i]=i;} @AT@ 3211 @LENGTH@ 7
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3211 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3215 @LENGTH@ 3
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 3215 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 3217 @LENGTH@ 1
------INS InfixExpression@@i < c.length @TO@ ForStatement@@for (int i=0; i < c.length; i++) {  c[i]=i;} @AT@ 3220 @LENGTH@ 10
---------INS SimpleName@@i @TO@ InfixExpression@@i < c.length @AT@ 3220 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < c.length @AT@ 3221 @LENGTH@ 1
---------INS QualifiedName@@c.length @TO@ InfixExpression@@i < c.length @AT@ 3222 @LENGTH@ 8
------------INS SimpleName@@c @TO@ QualifiedName@@c.length @AT@ 3222 @LENGTH@ 1
------------INS SimpleName@@length @TO@ QualifiedName@@c.length @AT@ 3224 @LENGTH@ 6
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < c.length; i++) {  c[i]=i;} @AT@ 3232 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 3232 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 3234 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:c[i]=i @TO@ ForStatement@@for (int i=0; i < c.length; i++) {  c[i]=i;} @AT@ 3242 @LENGTH@ 9
---------INS Assignment@@c[i]=i @TO@ ExpressionStatement@@Assignment:c[i]=i @AT@ 3242 @LENGTH@ 8
------------INS ArrayAccess@@c[i] @TO@ Assignment@@c[i]=i @AT@ 3242 @LENGTH@ 4
---------------INS SimpleName@@c @TO@ ArrayAccess@@c[i] @AT@ 3242 @LENGTH@ 1
---------------INS SimpleName@@i @TO@ ArrayAccess@@c[i] @AT@ 3244 @LENGTH@ 1
------------INS Operator@@= @TO@ Assignment@@c[i]=i @AT@ 3246 @LENGTH@ 1
------------INS SimpleName@@i @TO@ Assignment@@c[i]=i @AT@ 3249 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:Arrays.sort(c,new Comparator<Range>(){
  public int compare(  Range r1,  Range r2){
    return r1.getMin() - r2.getMin();
  }
}
) @TO@ MethodInvocation:Arrays.sort(c,new Comparator<Integer>(){
  public int compare(  Integer r1,  Integer r2){
    return ranges[r1].getMin() - ranges[r2].getMin();
  }
}
) @AT@ 3218 @LENGTH@ 146
------UPD MethodInvocation@@Arrays.sort(c,new Comparator<Range>(){
  public int compare(  Range r1,  Range r2){
    return r1.getMin() - r2.getMin();
  }
}
) @TO@ Arrays.sort(c,new Comparator<Integer>(){
  public int compare(  Integer r1,  Integer r2){
    return ranges[r1].getMin() - ranges[r2].getMin();
  }
}
) @AT@ 3218 @LENGTH@ 145
---------UPD SimpleName@@MethodName:sort:[c, new Comparator<Range>(){
  public int compare(  Range r1,  Range r2){
    return r1.getMin() - r2.getMin();
  }
}
] @TO@ MethodName:sort:[c, new Comparator<Integer>(){
  public int compare(  Integer r1,  Integer r2){
    return ranges[r1].getMin() - ranges[r2].getMin();
  }
}
] @AT@ 3225 @LENGTH@ 138
------------UPD ClassInstanceCreation@@Comparator<Range>[] @TO@ Comparator<Integer>[] @AT@ 3233 @LENGTH@ 126
---------------UPD ParameterizedType@@Comparator<Range> @TO@ Comparator<Integer> @AT@ 3237 @LENGTH@ 17
------------------UPD SimpleType@@Range @TO@ Integer @AT@ 3248 @LENGTH@ 5
---UPD ForStatement@@for (int i=0; i < c.length - 1; i++) {  if (!c[i].hasMaxValue()) {    c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1);  }} @TO@ for (int i=0; i < c.length - 1; i++) {  if (!ranges[c[i]].hasMaxValue()) {    ranges[c[i]]=new Range(ranges[c[i]].getMin(),ranges[c[i + 1]].getMin() - 1);  }} @AT@ 3430 @LENGTH@ 193
------UPD IfStatement@@if (!c[i].hasMaxValue()) {  c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1);} @TO@ if (!ranges[c[i]].hasMaxValue()) {  ranges[c[i]]=new Range(ranges[c[i]].getMin(),ranges[c[i + 1]].getMin() - 1);} @AT@ 3474 @LENGTH@ 145
---------UPD PrefixExpression@@!c[i].hasMaxValue() @TO@ !ranges[c[i]].hasMaxValue() @AT@ 3478 @LENGTH@ 19
------------UPD MethodInvocation@@c[i].hasMaxValue() @TO@ ranges[c[i]].hasMaxValue() @AT@ 3479 @LENGTH@ 18
---------------DEL ArrayAccess@@c[i] @AT@ 3479 @LENGTH@ 4
---------------INS ArrayAccess@@ranges[c[i]] @TO@ MethodInvocation@@c[i].hasMaxValue() @AT@ 3571 @LENGTH@ 12
------------------INS SimpleName@@ranges @TO@ ArrayAccess@@ranges[c[i]] @AT@ 3571 @LENGTH@ 6
------------------INS ArrayAccess@@c[i] @TO@ ArrayAccess@@ranges[c[i]] @AT@ 3578 @LENGTH@ 4
---------------------MOV SimpleName@@c @TO@ ArrayAccess@@c[i] @AT@ 3479 @LENGTH@ 1
---------------------MOV SimpleName@@i @TO@ ArrayAccess@@c[i] @AT@ 3481 @LENGTH@ 1
---------UPD Block@@ThenBody:{  c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1);} @TO@ ThenBody:{  ranges[c[i]]=new Range(ranges[c[i]].getMin(),ranges[c[i + 1]].getMin() - 1);} @AT@ 3499 @LENGTH@ 120
------------UPD ExpressionStatement@@Assignment:c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @TO@ Assignment:ranges[c[i]]=new Range(ranges[c[i]].getMin(),ranges[c[i + 1]].getMin() - 1) @AT@ 3562 @LENGTH@ 52
---------------UPD Assignment@@c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @TO@ ranges[c[i]]=new Range(ranges[c[i]].getMin(),ranges[c[i + 1]].getMin() - 1) @AT@ 3562 @LENGTH@ 51
------------------DEL ArrayAccess@@c[i] @AT@ 3562 @LENGTH@ 4
------------------UPD ClassInstanceCreation@@Range[c[i].getMin(), c[i + 1].getMin() - 1] @TO@ Range[ranges[c[i]].getMin(), ranges[c[i + 1]].getMin() - 1] @AT@ 3569 @LENGTH@ 44
---------------------UPD MethodInvocation@@c[i].getMin() @TO@ ranges[c[i]].getMin() @AT@ 3579 @LENGTH@ 13
------------------------DEL ArrayAccess@@c[i] @AT@ 3579 @LENGTH@ 4
------------------------INS ArrayAccess@@ranges[c[i]] @TO@ MethodInvocation@@c[i].getMin() @AT@ 3687 @LENGTH@ 12
---------------------------INS SimpleName@@ranges @TO@ ArrayAccess@@ranges[c[i]] @AT@ 3687 @LENGTH@ 6
---------------------------INS ArrayAccess@@c[i] @TO@ ArrayAccess@@ranges[c[i]] @AT@ 3694 @LENGTH@ 4
------------------------------MOV SimpleName@@c @TO@ ArrayAccess@@c[i] @AT@ 3579 @LENGTH@ 1
------------------------------MOV SimpleName@@i @TO@ ArrayAccess@@c[i] @AT@ 3581 @LENGTH@ 1
---------------------UPD InfixExpression@@c[i + 1].getMin() - 1 @TO@ ranges[c[i + 1]].getMin() - 1 @AT@ 3593 @LENGTH@ 19
------------------------UPD MethodInvocation@@c[i + 1].getMin() @TO@ ranges[c[i + 1]].getMin() @AT@ 3593 @LENGTH@ 15
---------------------------INS ArrayAccess@@ranges[c[i + 1]] @TO@ MethodInvocation@@c[i + 1].getMin() @AT@ 3709 @LENGTH@ 14
------------------------------MOV ArrayAccess@@c[i + 1] @TO@ ArrayAccess@@ranges[c[i + 1]] @AT@ 3593 @LENGTH@ 6
------------------------------INS SimpleName@@ranges @TO@ ArrayAccess@@ranges[c[i + 1]] @AT@ 3709 @LENGTH@ 6
------------------INS ArrayAccess@@ranges[c[i]] @TO@ Assignment@@c[i]=new Range(c[i].getMin(),c[i + 1].getMin() - 1) @AT@ 3662 @LENGTH@ 12
---------------------INS SimpleName@@ranges @TO@ ArrayAccess@@ranges[c[i]] @AT@ 3662 @LENGTH@ 6
---------------------INS ArrayAccess@@c[i] @TO@ ArrayAccess@@ranges[c[i]] @AT@ 3669 @LENGTH@ 4
------------------------MOV SimpleName@@c @TO@ ArrayAccess@@c[i] @AT@ 3562 @LENGTH@ 1
------------------------MOV SimpleName@@i @TO@ ArrayAccess@@c[i] @AT@ 3564 @LENGTH@ 1
---UPD IfStatement@@if (forceDisjointRanges) {  verifyRanges(c);} @TO@ if (forceDisjointRanges) {  verifyRanges(ranges);} @AT@ 3629 @LENGTH@ 50
------UPD Block@@ThenBody:{  verifyRanges(c);} @TO@ ThenBody:{  verifyRanges(ranges);} @AT@ 3654 @LENGTH@ 25
---------UPD ExpressionStatement@@MethodInvocation:verifyRanges(c) @TO@ MethodInvocation:verifyRanges(ranges) @AT@ 3659 @LENGTH@ 16
------------UPD MethodInvocation@@verifyRanges(c) @TO@ verifyRanges(ranges) @AT@ 3659 @LENGTH@ 15
---------------UPD SimpleName@@MethodName:verifyRanges:[c] @TO@ MethodName:verifyRanges:[ranges] @AT@ 3659 @LENGTH@ 15
------------------UPD SimpleName@@c @TO@ ranges @AT@ 3672 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:incrementItemCount, int count,  @TO@ TypeDeclaration@@[public]StepContribution,  @AT@ 1570 @LENGTH@ 66
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:incrementItemCount, int count,  @AT@ 1570 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:incrementItemCount, int count,  @AT@ 1577 @LENGTH@ 4
---INS SimpleName@@MethodName:incrementItemCount @TO@ MethodDeclaration@@public, void, MethodName:incrementItemCount, int count,  @AT@ 1582 @LENGTH@ 18
---INS SingleVariableDeclaration@@int count @TO@ MethodDeclaration@@public, void, MethodName:incrementItemCount, int count,  @AT@ 1601 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int count @AT@ 1601 @LENGTH@ 3
------INS SimpleName@@count @TO@ SingleVariableDeclaration@@int count @AT@ 1605 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:itemCount+=count @TO@ MethodDeclaration@@public, void, MethodName:incrementItemCount, int count,  @AT@ 1616 @LENGTH@ 17
------INS Assignment@@itemCount+=count @TO@ ExpressionStatement@@Assignment:itemCount+=count @AT@ 1616 @LENGTH@ 16
---------INS SimpleName@@itemCount @TO@ Assignment@@itemCount+=count @AT@ 1616 @LENGTH@ 9
---------INS Operator@@+= @TO@ Assignment@@itemCount+=count @AT@ 1625 @LENGTH@ 2
---------INS SimpleName@@count @TO@ Assignment@@itemCount+=count @AT@ 1627 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals(0,contribution.getReadCount()) @TO@ MethodInvocation:assertEquals(3,contribution.getReadCount()) @AT@ 11181 @LENGTH@ 45
---UPD MethodInvocation@@assertEquals(0,contribution.getReadCount()) @TO@ assertEquals(3,contribution.getReadCount()) @AT@ 11181 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertEquals:[0, contribution.getReadCount()] @TO@ MethodName:assertEquals:[3, contribution.getReadCount()] @AT@ 11181 @LENGTH@ 44
---------UPD NumberLiteral@@0 @TO@ 3 @AT@ 11194 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/multiRecordType.xml"}), public]MultiRecordTypeFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiRecordType.xml"}), public]MultiRecordTypeFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 674
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/multiRecordType.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiRecordType.xml"}) @AT@ 1112 @LENGTH@ 138


UPD TypeDeclaration@@[private]BeforeJobProxy, JobExecutionListenerSupport @TO@ [private, static]BeforeJobProxy, JobExecutionListenerSupport @AT@ 1844 @LENGTH@ 648
---INS Modifier@@static @TO@ TypeDeclaration@@[private]BeforeJobProxy, JobExecutionListenerSupport @AT@ 1852 @LENGTH@ 6


UPD FieldDeclaration@@protected, static, final, DefaultExchangeFormatter, [instance=new DefaultExchangeFormatter()] @TO@ protected, static, final, DefaultExchangeFormatter, [INSTANCE=new DefaultExchangeFormatter()] @AT@ 1160 @LENGTH@ 90
---UPD VariableDeclarationFragment@@instance=new DefaultExchangeFormatter() @TO@ INSTANCE=new DefaultExchangeFormatter() @AT@ 1208 @LENGTH@ 41
------UPD SimpleName@@instance @TO@ INSTANCE @AT@ 1208 @LENGTH@ 8


UPD EnhancedForStatement@@for (InterceptType intercept : intercepts) {  route.addOutput(intercept);  route.pushBlock(intercept.getProceed());} @TO@ for (InterceptType intercept : intercepts) {  InterceptType proxy=intercept.createProxy();  route.addOutput(proxy);  route.pushBlock(proxy.getProceed());} @AT@ 5254 @LENGTH@ 147
---UPD ExpressionStatement@@MethodInvocation:route.addOutput(intercept) @TO@ MethodInvocation:route.addOutput(proxy) @AT@ 5311 @LENGTH@ 27
------UPD MethodInvocation@@route.addOutput(intercept) @TO@ route.addOutput(proxy) @AT@ 5311 @LENGTH@ 26
---------UPD SimpleName@@MethodName:addOutput:[intercept] @TO@ MethodName:addOutput:[proxy] @AT@ 5317 @LENGTH@ 20
------------UPD SimpleName@@intercept @TO@ proxy @AT@ 5327 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:route.pushBlock(intercept.getProceed()) @TO@ MethodInvocation:route.pushBlock(proxy.getProceed()) @AT@ 5351 @LENGTH@ 40
------UPD MethodInvocation@@route.pushBlock(intercept.getProceed()) @TO@ route.pushBlock(proxy.getProceed()) @AT@ 5351 @LENGTH@ 39
---------UPD SimpleName@@MethodName:pushBlock:[intercept.getProceed()] @TO@ MethodName:pushBlock:[proxy.getProceed()] @AT@ 5357 @LENGTH@ 33
------------UPD MethodInvocation@@intercept.getProceed() @TO@ proxy.getProceed() @AT@ 5367 @LENGTH@ 22
---------------UPD SimpleName@@Name:intercept @TO@ Name:proxy @AT@ 5367 @LENGTH@ 9
---INS VariableDeclarationStatement@@InterceptType proxy=intercept.createProxy(); @TO@ EnhancedForStatement@@for (InterceptType intercept : intercepts) {  route.addOutput(intercept);  route.pushBlock(intercept.getProceed());} @AT@ 5445 @LENGTH@ 46
------INS SimpleType@@InterceptType @TO@ VariableDeclarationStatement@@InterceptType proxy=intercept.createProxy(); @AT@ 5445 @LENGTH@ 13
------INS VariableDeclarationFragment@@proxy=intercept.createProxy() @TO@ VariableDeclarationStatement@@InterceptType proxy=intercept.createProxy(); @AT@ 5459 @LENGTH@ 31
---------INS SimpleName@@proxy @TO@ VariableDeclarationFragment@@proxy=intercept.createProxy() @AT@ 5459 @LENGTH@ 5
---------INS MethodInvocation@@intercept.createProxy() @TO@ VariableDeclarationFragment@@proxy=intercept.createProxy() @AT@ 5467 @LENGTH@ 23
------------INS SimpleName@@Name:intercept @TO@ MethodInvocation@@intercept.createProxy() @AT@ 5467 @LENGTH@ 9
------------INS SimpleName@@MethodName:createProxy:[] @TO@ MethodInvocation@@intercept.createProxy() @AT@ 5477 @LENGTH@ 13


UPD FieldDeclaration@@private, static, final, String, [INPUT_FILE="src/main/resources/data/ioSample/input/multiLine.txt"] @TO@ private, static, final, String, [INPUT_FILE="src/main/resources/data/iosample/input/multiLine.txt"] @AT@ 1398 @LENGTH@ 96
---UPD VariableDeclarationFragment@@INPUT_FILE="src/main/resources/data/ioSample/input/multiLine.txt" @TO@ INPUT_FILE="src/main/resources/data/iosample/input/multiLine.txt" @AT@ 1426 @LENGTH@ 67
------UPD StringLiteral@@"src/main/resources/data/ioSample/input/multiLine.txt" @TO@ "src/main/resources/data/iosample/input/multiLine.txt" @AT@ 1439 @LENGTH@ 54


UPD ExpressionStatement@@Assignment:jobInstance=new JobInstance(new Long(0),new JobParameters(),job.getName()) @TO@ Assignment:jobInstance=new JobInstance(0L,new JobParameters(),job.getName()) @AT@ 4524 @LENGTH@ 79
---UPD Assignment@@jobInstance=new JobInstance(new Long(0),new JobParameters(),job.getName()) @TO@ jobInstance=new JobInstance(0L,new JobParameters(),job.getName()) @AT@ 4524 @LENGTH@ 78
------UPD ClassInstanceCreation@@JobInstance[new Long(0), new JobParameters(), job.getName()] @TO@ JobInstance[0L, new JobParameters(), job.getName()] @AT@ 4538 @LENGTH@ 64
---------DEL ClassInstanceCreation@@Long[0] @AT@ 4554 @LENGTH@ 11
------------DEL New@@new @AT@ 4554 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 4558 @LENGTH@ 4
---------MOV NumberLiteral@@0 @TO@ ClassInstanceCreation@@JobInstance[new Long(0), new JobParameters(), job.getName()] @AT@ 4563 @LENGTH@ 1


UPD FieldDeclaration@@private, ConversionService, [conversionService=DefaultConversionService.getSharedInstance()] @TO@ private, ConversionService, [conversionService=new DefaultConversionService()] @AT@ 1562 @LENGTH@ 91
---UPD VariableDeclarationFragment@@conversionService=DefaultConversionService.getSharedInstance() @TO@ conversionService=new DefaultConversionService() @AT@ 1588 @LENGTH@ 64
------DEL MethodInvocation@@DefaultConversionService.getSharedInstance() @AT@ 1608 @LENGTH@ 44
---------DEL SimpleName@@Name:DefaultConversionService @AT@ 1608 @LENGTH@ 24
---------DEL SimpleName@@MethodName:getSharedInstance:[] @AT@ 1633 @LENGTH@ 19
------INS ClassInstanceCreation@@DefaultConversionService[] @TO@ VariableDeclarationFragment@@conversionService=DefaultConversionService.getSharedInstance() @AT@ 1608 @LENGTH@ 30
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 1608 @LENGTH@ 3
---------INS SimpleType@@DefaultConversionService @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 1612 @LENGTH@ 24


DEL MethodDeclaration@@public, ExitStatus, MethodName:onErrorInStep, StepExecution stepExecution, Throwable e,  @AT@ 1458 @LENGTH@ 93
---DEL Modifier@@public @AT@ 1458 @LENGTH@ 6
---DEL SimpleType@@ExitStatus @AT@ 1465 @LENGTH@ 10
---DEL SimpleName@@MethodName:onErrorInStep @AT@ 1476 @LENGTH@ 13
---DEL SingleVariableDeclaration@@StepExecution stepExecution @AT@ 1490 @LENGTH@ 27
------DEL SimpleType@@StepExecution @AT@ 1490 @LENGTH@ 13
------DEL SimpleName@@stepExecution @AT@ 1504 @LENGTH@ 13
---DEL SingleVariableDeclaration@@Throwable e @AT@ 1519 @LENGTH@ 11
------DEL SimpleType@@Throwable @AT@ 1519 @LENGTH@ 9
------DEL SimpleName@@e @AT@ 1529 @LENGTH@ 1
---DEL ReturnStatement@@NullLiteral:null @AT@ 1536 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 1543 @LENGTH@ 4


UPD MethodDeclaration@@public, StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, Step step,  @TO@ public, StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, String stepName,  @AT@ 10693 @LENGTH@ 920
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 10760 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 10760 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 10765 @LENGTH@ 4
---UPD EnhancedForStatement@@for (JobExecution jobExecution : jobExecutions) {  StepExecution stepExecution=stepExecutionDao.getStepExecution(jobExecution,step.getName());  if (stepExecution != null) {    stepExecutions.add(stepExecution);  }} @TO@ for (JobExecution jobExecution : jobExecutions) {  StepExecution stepExecution=stepExecutionDao.getStepExecution(jobExecution,stepName);  if (stepExecution != null) {    stepExecutions.add(stepExecution);  }} @AT@ 10951 @LENGTH@ 227
------UPD VariableDeclarationStatement@@StepExecution stepExecution=stepExecutionDao.getStepExecution(jobExecution,step.getName()); @TO@ StepExecution stepExecution=stepExecutionDao.getStepExecution(jobExecution,stepName); @AT@ 11004 @LENGTH@ 94
---------UPD VariableDeclarationFragment@@stepExecution=stepExecutionDao.getStepExecution(jobExecution,step.getName()) @TO@ stepExecution=stepExecutionDao.getStepExecution(jobExecution,stepName) @AT@ 11018 @LENGTH@ 79
------------UPD MethodInvocation@@stepExecutionDao.getStepExecution(jobExecution,step.getName()) @TO@ stepExecutionDao.getStepExecution(jobExecution,stepName) @AT@ 11034 @LENGTH@ 63
---------------UPD SimpleName@@MethodName:getStepExecution:[jobExecution, step.getName()] @TO@ MethodName:getStepExecution:[jobExecution, stepName] @AT@ 11051 @LENGTH@ 46
------------------INS SimpleName@@stepName @TO@ SimpleName@@MethodName:getStepExecution:[jobExecution, step.getName()] @AT@ 11044 @LENGTH@ 8
------------------DEL MethodInvocation@@step.getName() @AT@ 11082 @LENGTH@ 14
---------------------DEL SimpleName@@Name:step @AT@ 11082 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getName:[] @AT@ 11087 @LENGTH@ 9


UPD MethodDeclaration@@public, T, MethodName:createExchange,  @TO@ public, Exchange, MethodName:createExchange,  @AT@ 1860 @LENGTH@ 131
---UPD SimpleType@@T @TO@ Exchange @AT@ 1867 @LENGTH@ 1


UPD MethodDeclaration@@public, FileExchange, MethodName:createExchange,  @TO@ public, Exchange, MethodName:createExchange,  @AT@ 3727 @LENGTH@ 86
---UPD SimpleType@@FileExchange @TO@ Exchange @AT@ 3734 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[public]DefaultFlowHolder, [FlowDefinitionHolder] @AT@ 3429 @LENGTH@ 95
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3429 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3436 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3441 @LENGTH@ 7
---INS IfStatement@@if (flowDefinition != null) {  flowDefinition.destroy();} @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3456 @LENGTH@ 64
------INS InfixExpression@@flowDefinition != null @TO@ IfStatement@@if (flowDefinition != null) {  flowDefinition.destroy();} @AT@ 3460 @LENGTH@ 22
---------INS SimpleName@@flowDefinition @TO@ InfixExpression@@flowDefinition != null @AT@ 3460 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@flowDefinition != null @AT@ 3474 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@flowDefinition != null @AT@ 3478 @LENGTH@ 4
------INS Block@@ThenBody:{  flowDefinition.destroy();} @TO@ IfStatement@@if (flowDefinition != null) {  flowDefinition.destroy();} @AT@ 3484 @LENGTH@ 36
---------INS ExpressionStatement@@MethodInvocation:flowDefinition.destroy() @TO@ Block@@ThenBody:{  flowDefinition.destroy();} @AT@ 3490 @LENGTH@ 25
------------INS MethodInvocation@@flowDefinition.destroy() @TO@ ExpressionStatement@@MethodInvocation:flowDefinition.destroy() @AT@ 3490 @LENGTH@ 24
---------------INS SimpleName@@Name:flowDefinition @TO@ MethodInvocation@@flowDefinition.destroy() @AT@ 3490 @LENGTH@ 14
---------------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@flowDefinition.destroy() @AT@ 3505 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:factory.setPath(new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}) @TO@ MethodInvocation:factory.setPath(new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))) @AT@ 1374 @LENGTH@ 132
---UPD MethodInvocation@@factory.setPath(new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}) @TO@ factory.setPath(new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))) @AT@ 1374 @LENGTH@ 131
------UPD SimpleName@@MethodName:setPath:[new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}] @TO@ MethodName:setPath:[new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))] @AT@ 1382 @LENGTH@ 123
---------DEL ArrayCreation@@new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))} @AT@ 1390 @LENGTH@ 114
------------DEL ArrayType@@Resource[] @AT@ 1394 @LENGTH@ 10
---------------DEL SimpleType@@Resource @AT@ 1394 @LENGTH@ 8
------------DEL ArrayInitializer@@{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))} @AT@ 1405 @LENGTH@ 99
---------MOV ClassInstanceCreation@@ClassPathResource[ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml")] @TO@ SimpleName@@MethodName:setPath:[new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}] @AT@ 1406 @LENGTH@ 97


UPD TypeDeclaration@@[@Converter, public]HL7Converter,  @TO@ [@Converter, public, final]HL7Converter,  @AT@ 1053 @LENGTH@ 610
---INS Modifier@@final @TO@ TypeDeclaration@@[@Converter, public]HL7Converter,  @AT@ 1071 @LENGTH@ 5


UPD FieldDeclaration@@protected, long, [sleepForConnection=0] @TO@ protected, long, [sleepForConnection] @AT@ 1330 @LENGTH@ 38
---UPD VariableDeclarationFragment@@sleepForConnection=0 @TO@ sleepForConnection @AT@ 1345 @LENGTH@ 22
------DEL NumberLiteral@@0 @AT@ 1366 @LENGTH@ 1


INS MethodDeclaration@@public, voidMethodName:NoSuchAttributeException, String message,  @TO@ TypeDeclaration@@[public]NoSuchAttributeException, NamingException @AT@ 924 @LENGTH@ 72
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:NoSuchAttributeException, String message,  @AT@ 924 @LENGTH@ 6
---INS SimpleName@@MethodName:NoSuchAttributeException @TO@ MethodDeclaration@@public, voidMethodName:NoSuchAttributeException, String message,  @AT@ 931 @LENGTH@ 24
---INS SingleVariableDeclaration@@String message @TO@ MethodDeclaration@@public, voidMethodName:NoSuchAttributeException, String message,  @AT@ 956 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String message @AT@ 956 @LENGTH@ 6
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@String message @AT@ 963 @LENGTH@ 7
---INS SuperConstructorInvocation@@super(message);
 @TO@ MethodDeclaration@@public, voidMethodName:NoSuchAttributeException, String message,  @AT@ 977 @LENGTH@ 15
------INS SimpleName@@message @TO@ SuperConstructorInvocation@@super(message);
 @AT@ 983 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("ibatis:selectAllAccounts").to("mock:results") @TO@ MethodInvocation:from("timer://pollTheDatabase?delay=2000").to("ibatis:selectAllAccounts").to("mock:results") @AT@ 2367 @LENGTH@ 52
---UPD MethodInvocation@@from("ibatis:selectAllAccounts").to("mock:results") @TO@ from("timer://pollTheDatabase?delay=2000").to("ibatis:selectAllAccounts").to("mock:results") @AT@ 2367 @LENGTH@ 51
------UPD MethodInvocation@@MethodName:from:["ibatis:selectAllAccounts"] @TO@ MethodName:to:["ibatis:selectAllAccounts"] @AT@ 2367 @LENGTH@ 32
------INS MethodInvocation@@MethodName:from:["timer://pollTheDatabase?delay=2000"] @TO@ MethodInvocation@@from("ibatis:selectAllAccounts").to("mock:results") @AT@ 2495 @LENGTH@ 42
---------INS StringLiteral@@"timer://pollTheDatabase?delay=2000" @TO@ MethodInvocation@@MethodName:from:["timer://pollTheDatabase?delay=2000"] @AT@ 2500 @LENGTH@ 36


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[private, static]FlowDefinitionImpl, [FlowDefinition] @AT@ 4725 @LENGTH@ 27
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 4725 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 4732 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 4737 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("No methods found for name: [" + methodName + "] in class: ["+ object.getClass()+ "] with arguments of type: ["+ paramTypes+ "]") @TO@ ClassInstanceCreation:new IllegalArgumentException("No methods found for name: [" + methodName + "] in class: ["+ object.getClass()+ "] with arguments of type: ["+ Arrays.toString(paramTypes)+ "]") @AT@ 2630 @LENGTH@ 174
---UPD ClassInstanceCreation@@IllegalArgumentException["No methods found for name: [" + methodName + "] in class: ["+ object.getClass()+ "] with arguments of type: ["+ paramTypes+ "]"] @TO@ IllegalArgumentException["No methods found for name: [" + methodName + "] in class: ["+ object.getClass()+ "] with arguments of type: ["+ Arrays.toString(paramTypes)+ "]"] @AT@ 2636 @LENGTH@ 167
------UPD InfixExpression@@"No methods found for name: [" + methodName + "] in class: ["+ object.getClass()+ "] with arguments of type: ["+ paramTypes+ "]" @TO@ "No methods found for name: [" + methodName + "] in class: ["+ object.getClass()+ "] with arguments of type: ["+ Arrays.toString(paramTypes)+ "]" @AT@ 2665 @LENGTH@ 137
---------DEL SimpleName@@paramTypes @AT@ 2786 @LENGTH@ 10
---------INS MethodInvocation@@Arrays.toString(paramTypes) @TO@ InfixExpression@@"No methods found for name: [" + methodName + "] in class: ["+ object.getClass()+ "] with arguments of type: ["+ paramTypes+ "]" @AT@ 2811 @LENGTH@ 27
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(paramTypes) @AT@ 2811 @LENGTH@ 6
------------INS SimpleName@@MethodName:toString:[paramTypes] @TO@ MethodInvocation@@Arrays.toString(paramTypes) @AT@ 2818 @LENGTH@ 20
---------------INS SimpleName@@paramTypes @TO@ SimpleName@@MethodName:toString:[paramTypes] @AT@ 2827 @LENGTH@ 10


UPD MethodDeclaration@@public, XmppExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 3234 @LENGTH@ 142
---UPD SimpleType@@XmppExchange @TO@ Exchange @AT@ 3241 @LENGTH@ 12


INS MethodDeclaration@@private, voidMethodName:OsgiUtil,  @TO@ TypeDeclaration@@[private, static]OsgiUtil,  @AT@ 13218 @LENGTH@ 58
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:OsgiUtil,  @AT@ 13218 @LENGTH@ 7
---INS SimpleName@@MethodName:OsgiUtil @TO@ MethodDeclaration@@private, voidMethodName:OsgiUtil,  @AT@ 13226 @LENGTH@ 8


INS VariableDeclarationStatement@@long duration=time - groupStartTime; @TO@ MethodDeclaration@@protected, String, MethodName:createLogMessage, Exchange exchange, int receivedCount,  @AT@ 3671 @LENGTH@ 38
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long duration=time - groupStartTime; @AT@ 3671 @LENGTH@ 4
---INS VariableDeclarationFragment@@duration=time - groupStartTime @TO@ VariableDeclarationStatement@@long duration=time - groupStartTime; @AT@ 3676 @LENGTH@ 32
------INS SimpleName@@duration @TO@ VariableDeclarationFragment@@duration=time - groupStartTime @AT@ 3676 @LENGTH@ 8
------INS InfixExpression@@time - groupStartTime @TO@ VariableDeclarationFragment@@duration=time - groupStartTime @AT@ 3687 @LENGTH@ 21
---------INS SimpleName@@time @TO@ InfixExpression@@time - groupStartTime @AT@ 3687 @LENGTH@ 4
---------INS Operator@@- @TO@ InfixExpression@@time - groupStartTime @AT@ 3691 @LENGTH@ 1
---------INS SimpleName@@groupStartTime @TO@ InfixExpression@@time - groupStartTime @AT@ 3694 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:factory.setPath(new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}) @TO@ MethodInvocation:factory.setPath(new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))) @AT@ 1150 @LENGTH@ 132
---UPD MethodInvocation@@factory.setPath(new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}) @TO@ factory.setPath(new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))) @AT@ 1150 @LENGTH@ 131
------UPD SimpleName@@MethodName:setPath:[new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}] @TO@ MethodName:setPath:[new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))] @AT@ 1158 @LENGTH@ 123
---------DEL ArrayCreation@@new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))} @AT@ 1166 @LENGTH@ 114
------------DEL ArrayType@@Resource[] @AT@ 1170 @LENGTH@ 10
---------------DEL SimpleType@@Resource @AT@ 1170 @LENGTH@ 8
------------DEL ArrayInitializer@@{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))} @AT@ 1181 @LENGTH@ 99
---------MOV ClassInstanceCreation@@ClassPathResource[ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml")] @TO@ SimpleName@@MethodName:setPath:[new Resource[]{new ClassPathResource(ClassUtils.addResourcePathToPackagePath(getClass(),"trivial-context.xml"))}] @AT@ 1182 @LENGTH@ 97


INS TryStatement@@try {  Object convertedValue=converter.execute(text);  setValue(convertedValue);} catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @TO@ MethodDeclaration@@public, void, MethodName:setAsText, String text, IllegalArgumentException,  @AT@ 5513 @LENGTH@ 273
---INS VariableDeclarationStatement@@Object convertedValue=converter.execute(text); @TO@ TryStatement@@try {  Object convertedValue=converter.execute(text);  setValue(convertedValue);} catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @AT@ 5523 @LENGTH@ 48
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object convertedValue=converter.execute(text); @AT@ 5523 @LENGTH@ 6
------INS VariableDeclarationFragment@@convertedValue=converter.execute(text) @TO@ VariableDeclarationStatement@@Object convertedValue=converter.execute(text); @AT@ 5530 @LENGTH@ 40
---------MOV MethodInvocation@@converter.execute(text) @TO@ VariableDeclarationFragment@@convertedValue=converter.execute(text) @AT@ 5458 @LENGTH@ 23
---------INS SimpleName@@convertedValue @TO@ VariableDeclarationFragment@@convertedValue=converter.execute(text) @AT@ 5530 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:setValue(convertedValue) @TO@ TryStatement@@try {  Object convertedValue=converter.execute(text);  setValue(convertedValue);} catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @AT@ 5576 @LENGTH@ 25
------MOV MethodInvocation@@setValue(converter.execute(text)) @TO@ ExpressionStatement@@MethodInvocation:setValue(convertedValue) @AT@ 5449 @LENGTH@ 33
---------UPD SimpleName@@MethodName:setValue:[converter.execute(text)] @TO@ MethodName:setValue:[convertedValue] @AT@ 5449 @LENGTH@ 33
------------INS SimpleName@@convertedValue @TO@ SimpleName@@MethodName:setValue:[converter.execute(text)] @AT@ 5585 @LENGTH@ 14
---INS CatchClause@@catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @TO@ TryStatement@@try {  Object convertedValue=converter.execute(text);  setValue(convertedValue);} catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @AT@ 5607 @LENGTH@ 179
------INS SingleVariableDeclaration@@ConversionException e @TO@ CatchClause@@catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @AT@ 5614 @LENGTH@ 21
---------INS SimpleType@@ConversionException @TO@ SingleVariableDeclaration@@ConversionException e @AT@ 5614 @LENGTH@ 19
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ConversionException e @AT@ 5634 @LENGTH@ 1
------INS VariableDeclarationStatement@@IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'"); @TO@ CatchClause@@catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @AT@ 5643 @LENGTH@ 101
---------INS SimpleType@@IllegalArgumentException @TO@ VariableDeclarationStatement@@IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'"); @AT@ 5643 @LENGTH@ 24
---------INS VariableDeclarationFragment@@iae=new IllegalArgumentException("Unable to convert text '" + text + "'") @TO@ VariableDeclarationStatement@@IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'"); @AT@ 5668 @LENGTH@ 75
------------INS SimpleName@@iae @TO@ VariableDeclarationFragment@@iae=new IllegalArgumentException("Unable to convert text '" + text + "'") @AT@ 5668 @LENGTH@ 3
------------INS ClassInstanceCreation@@IllegalArgumentException["Unable to convert text '" + text + "'"] @TO@ VariableDeclarationFragment@@iae=new IllegalArgumentException("Unable to convert text '" + text + "'") @AT@ 5674 @LENGTH@ 69
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to convert text '" + text + "'"] @AT@ 5674 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to convert text '" + text + "'"] @AT@ 5678 @LENGTH@ 24
---------------INS InfixExpression@@"Unable to convert text '" + text + "'" @TO@ ClassInstanceCreation@@IllegalArgumentException["Unable to convert text '" + text + "'"] @AT@ 5703 @LENGTH@ 39
------------------INS StringLiteral@@"Unable to convert text '" @TO@ InfixExpression@@"Unable to convert text '" + text + "'" @AT@ 5703 @LENGTH@ 26
------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to convert text '" + text + "'" @AT@ 5729 @LENGTH@ 1
------------------INS SimpleName@@text @TO@ InfixExpression@@"Unable to convert text '" + text + "'" @AT@ 5732 @LENGTH@ 4
------------------INS StringLiteral@@"'" @TO@ InfixExpression@@"Unable to convert text '" + text + "'" @AT@ 5739 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:iae.initCause(e) @TO@ CatchClause@@catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @AT@ 5749 @LENGTH@ 17
---------INS MethodInvocation@@iae.initCause(e) @TO@ ExpressionStatement@@MethodInvocation:iae.initCause(e) @AT@ 5749 @LENGTH@ 16
------------INS SimpleName@@Name:iae @TO@ MethodInvocation@@iae.initCause(e) @AT@ 5749 @LENGTH@ 3
------------INS SimpleName@@MethodName:initCause:[e] @TO@ MethodInvocation@@iae.initCause(e) @AT@ 5753 @LENGTH@ 12
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:initCause:[e] @AT@ 5763 @LENGTH@ 1
------INS ThrowStatement@@SimpleName:iae @TO@ CatchClause@@catch (ConversionException e) {  IllegalArgumentException iae=new IllegalArgumentException("Unable to convert text '" + text + "'");  iae.initCause(e);  throw iae;} @AT@ 5771 @LENGTH@ 10
---------INS SimpleName@@iae @TO@ ThrowStatement@@SimpleName:iae @AT@ 5777 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Long(12L),response.getJobId()) @TO@ MethodInvocation:assertEquals(12,response.getJobId().longValue()) @AT@ 907 @LENGTH@ 49
---UPD MethodInvocation@@assertEquals(new Long(12L),response.getJobId()) @TO@ assertEquals(12,response.getJobId().longValue()) @AT@ 907 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertEquals:[new Long(12L), response.getJobId()] @TO@ MethodName:assertEquals:[12, response.getJobId().longValue()] @AT@ 907 @LENGTH@ 48
---------DEL ClassInstanceCreation@@Long[12L] @AT@ 920 @LENGTH@ 13
------------DEL New@@new @AT@ 920 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 924 @LENGTH@ 4
------------DEL NumberLiteral@@12L @AT@ 929 @LENGTH@ 3
---------INS NumberLiteral@@12 @TO@ SimpleName@@MethodName:assertEquals:[new Long(12L), response.getJobId()] @AT@ 920 @LENGTH@ 2
---------UPD MethodInvocation@@response.getJobId() @TO@ response.getJobId().longValue() @AT@ 935 @LENGTH@ 19
------------INS MethodInvocation@@MethodName:getJobId:[] @TO@ MethodInvocation@@response.getJobId() @AT@ 924 @LENGTH@ 19
------------INS MethodInvocation@@MethodName:getJobId:[] @TO@ MethodInvocation@@response.getJobId() @AT@ 924 @LENGTH@ 19
------------UPD SimpleName@@MethodName:getJobId:[] @TO@ MethodName:longValue:[] @AT@ 944 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:a.expectedMessageCount(0) @TO@ MethodInvocation:a.expectedMessageCount(1) @AT@ 1359 @LENGTH@ 26
---UPD MethodInvocation@@a.expectedMessageCount(0) @TO@ a.expectedMessageCount(1) @AT@ 1359 @LENGTH@ 25
------UPD SimpleName@@MethodName:expectedMessageCount:[0] @TO@ MethodName:expectedMessageCount:[1] @AT@ 1361 @LENGTH@ 23
---------UPD NumberLiteral@@0 @TO@ 1 @AT@ 1382 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testAggregateCustomer,  @TO@ TypeDeclaration@@[public]DelegatingTradeLineAggregatorTests,  @AT@ 2402 @LENGTH@ 42
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAggregateCustomer,  @AT@ 2402 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAggregateCustomer,  @AT@ 2409 @LENGTH@ 4
---INS SimpleName@@MethodName:testAggregateCustomer @TO@ MethodDeclaration@@public, void, MethodName:testAggregateCustomer,  @AT@ 2414 @LENGTH@ 21


UPD TypeDeclaration@@[public]IbatisItemReaderIntegrationTests, AbstractDataSourceItemReaderIntegrationTests @TO@ [@SuppressWarnings("unchecked"), public]IbatisItemReaderIntegrationTests, AbstractDataSourceItemReaderIntegrationTests @AT@ 479 @LENGTH@ 993
---INS SingleMemberAnnotation@@@SuppressWarnings("unchecked") @TO@ TypeDeclaration@@[public]IbatisItemReaderIntegrationTests, AbstractDataSourceItemReaderIntegrationTests @AT@ 479 @LENGTH@ 30


UPD ThrowStatement@@ClassInstanceCreation:new UncategorizedLdapException("Failed to negitiate tls session",e) @TO@ ClassInstanceCreation:new UncategorizedLdapException("Failed to negotiate TLS session",e) @AT@ 4653 @LENGTH@ 75
---UPD ClassInstanceCreation@@UncategorizedLdapException["Failed to negitiate tls session", e] @TO@ UncategorizedLdapException["Failed to negotiate TLS session", e] @AT@ 4659 @LENGTH@ 68
------UPD StringLiteral@@"Failed to negitiate tls session" @TO@ "Failed to negotiate TLS session" @AT@ 4690 @LENGTH@ 33


UPD MethodDeclaration@@public, FileExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 3833 @LENGTH@ 134
---UPD SimpleType@@FileExchange @TO@ Exchange @AT@ 3840 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:errorHandler(deadLetterChannel().maximumRedeliveries(2)) @TO@ MethodInvocation:errorHandler(deadLetterChannel().maximumRedeliveries(1)) @AT@ 12575 @LENGTH@ 57
---UPD MethodInvocation@@errorHandler(deadLetterChannel().maximumRedeliveries(2)) @TO@ errorHandler(deadLetterChannel().maximumRedeliveries(1)) @AT@ 12575 @LENGTH@ 56
------UPD SimpleName@@MethodName:errorHandler:[deadLetterChannel().maximumRedeliveries(2)] @TO@ MethodName:errorHandler:[deadLetterChannel().maximumRedeliveries(1)] @AT@ 12575 @LENGTH@ 56
---------UPD MethodInvocation@@deadLetterChannel().maximumRedeliveries(2) @TO@ deadLetterChannel().maximumRedeliveries(1) @AT@ 12588 @LENGTH@ 42
------------UPD SimpleName@@MethodName:maximumRedeliveries:[2] @TO@ MethodName:maximumRedeliveries:[1] @AT@ 12608 @LENGTH@ 22
---------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 12628 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:filename+="report.txt" + FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX @TO@ Assignment:filename+="report.txt" + FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 2728 @LENGTH@ 80
---UPD Assignment@@filename+="report.txt" + FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX @TO@ filename+="report.txt" + FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 2728 @LENGTH@ 79
------UPD InfixExpression@@"report.txt" + FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX @TO@ "report.txt" + FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 2740 @LENGTH@ 67
---------UPD QualifiedName@@FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX @TO@ FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 2755 @LENGTH@ 52
------------UPD SimpleName@@FileProcessStrategySupport @TO@ FileEndpoint @AT@ 2755 @LENGTH@ 26


UPD VariableDeclarationStatement@@CxfExchange cxfExchange=endpoint.createExchange(exchange); @TO@ CxfExchange cxfExchange=(CxfExchange)endpoint.createExchange(exchange); @AT@ 7006 @LENGTH@ 60
---UPD VariableDeclarationFragment@@cxfExchange=endpoint.createExchange(exchange) @TO@ cxfExchange=(CxfExchange)endpoint.createExchange(exchange) @AT@ 7018 @LENGTH@ 47
------INS CastExpression@@(CxfExchange)endpoint.createExchange(exchange) @TO@ VariableDeclarationFragment@@cxfExchange=endpoint.createExchange(exchange) @AT@ 7032 @LENGTH@ 47
---------MOV MethodInvocation@@endpoint.createExchange(exchange) @TO@ CastExpression@@(CxfExchange)endpoint.createExchange(exchange) @AT@ 7032 @LENGTH@ 33
---------INS SimpleType@@CxfExchange @TO@ CastExpression@@(CxfExchange)endpoint.createExchange(exchange) @AT@ 7033 @LENGTH@ 11


INS IfStatement@@if (jmsMessage == null) {  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @TO@ MethodDeclaration@@protected, String, MethodName:createMessageId,  @AT@ 4963 @LENGTH@ 168
---INS InfixExpression@@jmsMessage == null @TO@ IfStatement@@if (jmsMessage == null) {  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @AT@ 4967 @LENGTH@ 18
------INS SimpleName@@jmsMessage @TO@ InfixExpression@@jmsMessage == null @AT@ 4967 @LENGTH@ 10
------INS Operator@@== @TO@ InfixExpression@@jmsMessage == null @AT@ 4977 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@jmsMessage == null @AT@ 4981 @LENGTH@ 4
---INS Block@@ThenBody:{  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @TO@ IfStatement@@if (jmsMessage == null) {  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @AT@ 4987 @LENGTH@ 144
------INS ExpressionStatement@@MethodInvocation:LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @TO@ Block@@ThenBody:{  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @AT@ 5001 @LENGTH@ 76
---------INS MethodInvocation@@LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @AT@ 5001 @LENGTH@ 75
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @AT@ 5001 @LENGTH@ 3
------------INS SimpleName@@MethodName:info:["The jmsMessage is not set yet, call the super's createMessageId"] @TO@ MethodInvocation@@LOG.info("The jmsMessage is not set yet, call the super's createMessageId") @AT@ 5005 @LENGTH@ 71
---------------INS StringLiteral@@"The jmsMessage is not set yet, call the super's createMessageId" @TO@ SimpleName@@MethodName:info:["The jmsMessage is not set yet, call the super's createMessageId"] @AT@ 5010 @LENGTH@ 65
------INS ReturnStatement@@SuperMethodInvocation:super.createMessageId() @TO@ Block@@ThenBody:{  LOG.info("The jmsMessage is not set yet, call the super's createMessageId");  return super.createMessageId();} @AT@ 5090 @LENGTH@ 31
---------INS SuperMethodInvocation@@super.createMessageId() @TO@ ReturnStatement@@SuperMethodInvocation:super.createMessageId() @AT@ 5097 @LENGTH@ 23
------------INS SimpleName@@MethodName:createMessageId:[] @TO@ SuperMethodInvocation@@super.createMessageId() @AT@ 5103 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertEquals(1,executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count")) @TO@ MethodInvocation:assertEquals(1,executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count")) @AT@ 3500 @LENGTH@ 110
---UPD MethodInvocation@@assertEquals(1,executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count")) @TO@ assertEquals(1,executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count")) @AT@ 3500 @LENGTH@ 109
------UPD SimpleName@@MethodName:assertEquals:[1, executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count")] @TO@ MethodName:assertEquals:[1, executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count")] @AT@ 3500 @LENGTH@ 109
---------UPD MethodInvocation@@executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count") @TO@ executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count") @AT@ 3516 @LENGTH@ 92
------------UPD SimpleName@@MethodName:getLong:[ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count"] @TO@ MethodName:getLong:[ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count"] @AT@ 3533 @LENGTH@ 75
---------------UPD InfixExpression@@ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count" @TO@ ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count" @AT@ 3541 @LENGTH@ 66
------------------UPD StringLiteral@@".item.count" @TO@ ".piece.count" @AT@ 3594 @LENGTH@ 13


MOV FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @TO@ TypeDeclaration@@[public]FileEndpoint, ScheduledPollEndpoint<FileExchange> @AT@ 1860 @LENGTH@ 78


MOV ExpressionStatement@@MethodInvocation:simpleJdbcTemplate.update("delete from CUSTOMER where ID > 4") @TO@ MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @AT@ 2376 @LENGTH@ 63


UPD Block@@ElseBody:if (key.endsWith(DOUBLE_TYPE)) {  Double result;  try {    result=(Double)parseNumber(value);  } catch (  ClassCastException ex) {    throw new IllegalArgumentException("Number format is invalid for double value: [" + value + "]");  }  propertiesBuilder.addDouble(StringUtils.replace(key,DOUBLE_TYPE,""),result);} else if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:if (key.endsWith(DOUBLE_TYPE)) {  Double result;  try {    result=(Double)parseNumber(value);  } catch (  ClassCastException ex) {    throw new IllegalArgumentException("Number format is invalid for double value: [" + value + "]");  }  propertiesBuilder.addDouble(StringUtils.replace(key,DOUBLE_TYPE,""),result);} else if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 3816 @LENGTH@ 567
---UPD IfStatement@@if (key.endsWith(DOUBLE_TYPE)) {  Double result;  try {    result=(Double)parseNumber(value);  } catch (  ClassCastException ex) {    throw new IllegalArgumentException("Number format is invalid for double value: [" + value + "]");  }  propertiesBuilder.addDouble(StringUtils.replace(key,DOUBLE_TYPE,""),result);} else if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (key.endsWith(DOUBLE_TYPE)) {  Double result;  try {    result=(Double)parseNumber(value);  } catch (  ClassCastException ex) {    throw new IllegalArgumentException("Number format is invalid for double value: [" + value + "]");  }  propertiesBuilder.addDouble(StringUtils.replace(key,DOUBLE_TYPE,""),result);} else if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 3816 @LENGTH@ 567
------UPD Block@@ElseBody:if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---UPD IfStatement@@if (key.endsWith(DOUBLE_TYPE)) {  Double result;  try {    result=(Double)parseNumber(value);  } catch (  ClassCastException ex) {    throw new IllegalArgumentException("Number format is invalid for double value: [" + value + "]");  }  propertiesBuilder.addDouble(StringUtils.replace(key,DOUBLE_TYPE,""),result);} else if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (key.endsWith(DOUBLE_TYPE)) {  Double result;  try {    result=(Double)parseNumber(value);  } catch (  ClassCastException ex) {    throw new IllegalArgumentException("Number format is invalid for double value: [" + value + "]");  }  propertiesBuilder.addDouble(StringUtils.replace(key,DOUBLE_TYPE,""),result);} else if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 3816 @LENGTH@ 567
------UPD Block@@ElseBody:if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5
---------UPD IfStatement@@if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value.toString());} @TO@ if (StringUtils.endsWithIgnoreCase(key,STRING_TYPE)) {  propertiesBuilder.addString(StringUtils.replace(key,STRING_TYPE,""),value);} else {  propertiesBuilder.addString(key,value);} @AT@ 4169 @LENGTH@ 214
------------UPD Block@@ElseBody:{  propertiesBuilder.addString(key,value.toString());} @TO@ ElseBody:{  propertiesBuilder.addString(key,value);} @AT@ 4321 @LENGTH@ 62
---------------UPD ExpressionStatement@@MethodInvocation:propertiesBuilder.addString(key,value.toString()) @TO@ MethodInvocation:propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 51
------------------UPD MethodInvocation@@propertiesBuilder.addString(key,value.toString()) @TO@ propertiesBuilder.addString(key,value) @AT@ 4327 @LENGTH@ 50
---------------------UPD SimpleName@@MethodName:addString:[key, value.toString()] @TO@ MethodName:addString:[key, value] @AT@ 4345 @LENGTH@ 32
------------------------DEL MethodInvocation@@value.toString() @AT@ 4360 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:value @AT@ 4360 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 4366 @LENGTH@ 10
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:addString:[key, value.toString()] @AT@ 4360 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Object " + object + " can't be serialized, it will be exclued by the MinaPayloadHolder") @TO@ MethodInvocation:LOG.warn("Object " + object + " can't be serialized, it will be excluded by the MinaPayloadHolder") @AT@ 4957 @LENGTH@ 99
---UPD MethodInvocation@@LOG.warn("Object " + object + " can't be serialized, it will be exclued by the MinaPayloadHolder") @TO@ LOG.warn("Object " + object + " can't be serialized, it will be excluded by the MinaPayloadHolder") @AT@ 4957 @LENGTH@ 98
------UPD SimpleName@@MethodName:warn:["Object " + object + " can't be serialized, it will be exclued by the MinaPayloadHolder"] @TO@ MethodName:warn:["Object " + object + " can't be serialized, it will be excluded by the MinaPayloadHolder"] @AT@ 4961 @LENGTH@ 94
---------UPD InfixExpression@@"Object " + object + " can't be serialized, it will be exclued by the MinaPayloadHolder" @TO@ "Object " + object + " can't be serialized, it will be excluded by the MinaPayloadHolder" @AT@ 4966 @LENGTH@ 88
------------UPD StringLiteral@@" can't be serialized, it will be exclued by the MinaPayloadHolder" @TO@ " can't be serialized, it will be excluded by the MinaPayloadHolder" @AT@ 4987 @LENGTH@ 67


UPD TypeDeclaration@@[public]FlowDefinitionRegistryImpl, [FlowDefinitionRegistry, DisposableBean] @TO@ [public]FlowDefinitionRegistryImpl, [FlowDefinitionRegistry] @AT@ 1317 @LENGTH@ 3256
---DEL SimpleType@@DisposableBean @AT@ 1392 @LENGTH@ 14


UPD VariableDeclarationStatement@@Iterator iter=ObjectConverter.iterator(values); @TO@ Iterator iter=ObjectHelper.createIterator(values); @AT@ 1938 @LENGTH@ 49
---UPD VariableDeclarationFragment@@iter=ObjectConverter.iterator(values) @TO@ iter=ObjectHelper.createIterator(values) @AT@ 1947 @LENGTH@ 39
------UPD MethodInvocation@@ObjectConverter.iterator(values) @TO@ ObjectHelper.createIterator(values) @AT@ 1954 @LENGTH@ 32
---------UPD SimpleName@@Name:ObjectConverter @TO@ Name:ObjectHelper @AT@ 1954 @LENGTH@ 15
---------UPD SimpleName@@MethodName:iterator:[values] @TO@ MethodName:createIterator:[values] @AT@ 1970 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:destroy, Exception,  @TO@ public, void, MethodName:destroy,  @AT@ 3503 @LENGTH@ 515
---DEL SimpleType@@Exception @AT@ 3532 @LENGTH@ 9
---UPD VariableDeclarationStatement@@Iterator flowDefinitionKeyIt=flowDefinitions.keySet().iterator(); @TO@ Iterator it=flowDefinitions.keySet().iterator(); @AT@ 3546 @LENGTH@ 67
------UPD VariableDeclarationFragment@@flowDefinitionKeyIt=flowDefinitions.keySet().iterator() @TO@ it=flowDefinitions.keySet().iterator() @AT@ 3555 @LENGTH@ 57
---------UPD SimpleName@@flowDefinitionKeyIt @TO@ it @AT@ 3555 @LENGTH@ 19
---UPD WhileStatement@@while (flowDefinitionKeyIt.hasNext()) {  FlowDefinitionHolder holder=this.getFlowDefinitionHolder((String)flowDefinitionKeyIt.next());  FlowDefinition flowDefinition=holder.getFlowDefinition();  ApplicationContext context=flowDefinition.getApplicationContext();  if (context instanceof ConfigurableApplicationContext) {    ((ConfigurableApplicationContext)context).close();  }} @TO@ while (it.hasNext()) {  getFlowDefinitionHolder((String)it.next()).destroy();} @AT@ 3616 @LENGTH@ 399
------UPD MethodInvocation@@flowDefinitionKeyIt.hasNext() @TO@ it.hasNext() @AT@ 3623 @LENGTH@ 29
---------UPD SimpleName@@Name:flowDefinitionKeyIt @TO@ Name:it @AT@ 3623 @LENGTH@ 19
------UPD Block@@WhileBody:{  FlowDefinitionHolder holder=this.getFlowDefinitionHolder((String)flowDefinitionKeyIt.next());  FlowDefinition flowDefinition=holder.getFlowDefinition();  ApplicationContext context=flowDefinition.getApplicationContext();  if (context instanceof ConfigurableApplicationContext) {    ((ConfigurableApplicationContext)context).close();  }} @TO@ WhileBody:{  getFlowDefinitionHolder((String)it.next()).destroy();} @AT@ 3654 @LENGTH@ 361
---------INS ExpressionStatement@@MethodInvocation:getFlowDefinitionHolder((String)it.next()).destroy() @TO@ Block@@WhileBody:{  FlowDefinitionHolder holder=this.getFlowDefinitionHolder((String)flowDefinitionKeyIt.next());  FlowDefinition flowDefinition=holder.getFlowDefinition();  ApplicationContext context=flowDefinition.getApplicationContext();  if (context instanceof ConfigurableApplicationContext) {    ((ConfigurableApplicationContext)context).close();  }} @AT@ 3380 @LENGTH@ 54
------------INS MethodInvocation@@getFlowDefinitionHolder((String)it.next()).destroy() @TO@ ExpressionStatement@@MethodInvocation:getFlowDefinitionHolder((String)it.next()).destroy() @AT@ 3380 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getFlowDefinitionHolder:[(String)it.next()] @TO@ MethodInvocation@@getFlowDefinitionHolder((String)it.next()).destroy() @AT@ 3380 @LENGTH@ 43
------------------INS CastExpression@@(String)it.next() @TO@ MethodInvocation@@MethodName:getFlowDefinitionHolder:[(String)it.next()] @AT@ 3404 @LENGTH@ 18
---------------------MOV SimpleType@@String @TO@ CastExpression@@(String)it.next() @AT@ 3719 @LENGTH@ 6
---------------------MOV MethodInvocation@@flowDefinitionKeyIt.next() @TO@ CastExpression@@(String)it.next() @AT@ 3727 @LENGTH@ 26
---------------MOV SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@getFlowDefinitionHolder((String)it.next()).destroy() @AT@ 3998 @LENGTH@ 7
---------DEL VariableDeclarationStatement@@FlowDefinitionHolder holder=this.getFlowDefinitionHolder((String)flowDefinitionKeyIt.next()); @AT@ 3659 @LENGTH@ 96
------------DEL SimpleType@@FlowDefinitionHolder @AT@ 3659 @LENGTH@ 20
------------DEL VariableDeclarationFragment@@holder=this.getFlowDefinitionHolder((String)flowDefinitionKeyIt.next()) @AT@ 3680 @LENGTH@ 74
---------------DEL SimpleName@@holder @AT@ 3680 @LENGTH@ 6
---------------DEL MethodInvocation@@this.getFlowDefinitionHolder((String)flowDefinitionKeyIt.next()) @AT@ 3689 @LENGTH@ 65
------------------DEL ThisExpression@@this @AT@ 3689 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getFlowDefinitionHolder:[(String)flowDefinitionKeyIt.next()] @AT@ 3694 @LENGTH@ 60
---------------------DEL CastExpression@@(String)flowDefinitionKeyIt.next() @AT@ 3718 @LENGTH@ 35
---------DEL VariableDeclarationStatement@@FlowDefinition flowDefinition=holder.getFlowDefinition(); @AT@ 3759 @LENGTH@ 59
------------DEL SimpleType@@FlowDefinition @AT@ 3759 @LENGTH@ 14
------------DEL VariableDeclarationFragment@@flowDefinition=holder.getFlowDefinition() @AT@ 3774 @LENGTH@ 43
---------------DEL SimpleName@@flowDefinition @AT@ 3774 @LENGTH@ 14
---------------DEL MethodInvocation@@holder.getFlowDefinition() @AT@ 3791 @LENGTH@ 26
------------------DEL SimpleName@@Name:holder @AT@ 3791 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:getFlowDefinition:[] @AT@ 3798 @LENGTH@ 19
---------DEL VariableDeclarationStatement@@ApplicationContext context=flowDefinition.getApplicationContext(); @AT@ 3822 @LENGTH@ 68
------------DEL SimpleType@@ApplicationContext @AT@ 3822 @LENGTH@ 18
------------DEL VariableDeclarationFragment@@context=flowDefinition.getApplicationContext() @AT@ 3841 @LENGTH@ 48
---------------DEL SimpleName@@context @AT@ 3841 @LENGTH@ 7
---------------DEL MethodInvocation@@flowDefinition.getApplicationContext() @AT@ 3851 @LENGTH@ 38
------------------DEL SimpleName@@Name:flowDefinition @AT@ 3851 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getApplicationContext:[] @AT@ 3866 @LENGTH@ 23
---------DEL IfStatement@@if (context instanceof ConfigurableApplicationContext) {  ((ConfigurableApplicationContext)context).close();} @AT@ 3894 @LENGTH@ 117
------------DEL InstanceofExpression@@context instanceof ConfigurableApplicationContext @AT@ 3898 @LENGTH@ 49
---------------DEL SimpleName@@context @AT@ 3898 @LENGTH@ 7
---------------DEL Instanceof@@instanceof @AT@ 3906 @LENGTH@ 10
---------------DEL SimpleType@@ConfigurableApplicationContext @AT@ 3917 @LENGTH@ 30
------------DEL Block@@ThenBody:{  ((ConfigurableApplicationContext)context).close();} @AT@ 3949 @LENGTH@ 62
---------------DEL ExpressionStatement@@MethodInvocation:((ConfigurableApplicationContext)context).close() @AT@ 3955 @LENGTH@ 51
------------------DEL MethodInvocation@@((ConfigurableApplicationContext)context).close() @AT@ 3955 @LENGTH@ 50
---------------------DEL ParenthesizedExpression@@((ConfigurableApplicationContext)context) @AT@ 3955 @LENGTH@ 42
------------------------DEL CastExpression@@(ConfigurableApplicationContext)context @AT@ 3956 @LENGTH@ 40
---------------------------DEL SimpleType@@ConfigurableApplicationContext @AT@ 3957 @LENGTH@ 30
---------------------------DEL SimpleName@@context @AT@ 3989 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:retryTemplate.execute(new RetryCallback(){
  public Object doWithRetry(  RetryContext context) throws Exception {
    TransactionTemplate transactionTemplate=new TransactionTemplate(transactionManager);
    transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_NESTED);
    return transactionTemplate.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        list.add(item);
        System.err.println("Inserting: [" + list.size() + ","+ item+ "]");
        simpleJdbcTemplate.update("INSERT into T_FOOS (id,name,foo_date) values (?,?,null)",list.size(),item);
        if (list.size() == 1) {
          throw new RuntimeException("Rollback!");
        }
        return item;
      }
    }
);
  }
}
,new RetryState(item)) @TO@ MethodInvocation:retryTemplate.execute(new RetryCallback(){
  public Object doWithRetry(  RetryContext context) throws Exception {
    TransactionTemplate transactionTemplate=new TransactionTemplate(transactionManager);
    transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_NESTED);
    return transactionTemplate.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        list.add(item);
        System.err.println("Inserting: [" + list.size() + ","+ item+ "]");
        simpleJdbcTemplate.update("INSERT into T_FOOS (id,name,foo_date) values (?,?,null)",list.size(),item);
        if (list.size() == 1) {
          throw new RuntimeException("Rollback!");
        }
        return item;
      }
    }
);
  }
}
) @AT@ 6119 @LENGTH@ 788
---UPD MethodInvocation@@retryTemplate.execute(new RetryCallback(){
  public Object doWithRetry(  RetryContext context) throws Exception {
    TransactionTemplate transactionTemplate=new TransactionTemplate(transactionManager);
    transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_NESTED);
    return transactionTemplate.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        list.add(item);
        System.err.println("Inserting: [" + list.size() + ","+ item+ "]");
        simpleJdbcTemplate.update("INSERT into T_FOOS (id,name,foo_date) values (?,?,null)",list.size(),item);
        if (list.size() == 1) {
          throw new RuntimeException("Rollback!");
        }
        return item;
      }
    }
);
  }
}
,new RetryState(item)) @TO@ retryTemplate.execute(new RetryCallback(){
  public Object doWithRetry(  RetryContext context) throws Exception {
    TransactionTemplate transactionTemplate=new TransactionTemplate(transactionManager);
    transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_NESTED);
    return transactionTemplate.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        list.add(item);
        System.err.println("Inserting: [" + list.size() + ","+ item+ "]");
        simpleJdbcTemplate.update("INSERT into T_FOOS (id,name,foo_date) values (?,?,null)",list.size(),item);
        if (list.size() == 1) {
          throw new RuntimeException("Rollback!");
        }
        return item;
      }
    }
);
  }
}
) @AT@ 6119 @LENGTH@ 787
------UPD SimpleName@@MethodName:execute:[new RetryCallback(){
  public Object doWithRetry(  RetryContext context) throws Exception {
    TransactionTemplate transactionTemplate=new TransactionTemplate(transactionManager);
    transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_NESTED);
    return transactionTemplate.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        list.add(item);
        System.err.println("Inserting: [" + list.size() + ","+ item+ "]");
        simpleJdbcTemplate.update("INSERT into T_FOOS (id,name,foo_date) values (?,?,null)",list.size(),item);
        if (list.size() == 1) {
          throw new RuntimeException("Rollback!");
        }
        return item;
      }
    }
);
  }
}
, new RetryState(item)] @TO@ MethodName:execute:[new RetryCallback(){
  public Object doWithRetry(  RetryContext context) throws Exception {
    TransactionTemplate transactionTemplate=new TransactionTemplate(transactionManager);
    transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_NESTED);
    return transactionTemplate.execute(new TransactionCallback(){
      public Object doInTransaction(      TransactionStatus status){
        list.add(item);
        System.err.println("Inserting: [" + list.size() + ","+ item+ "]");
        simpleJdbcTemplate.update("INSERT into T_FOOS (id,name,foo_date) values (?,?,null)",list.size(),item);
        if (list.size() == 1) {
          throw new RuntimeException("Rollback!");
        }
        return item;
      }
    }
);
  }
}
] @AT@ 6133 @LENGTH@ 773
---------DEL ClassInstanceCreation@@RetryState[item] @AT@ 6885 @LENGTH@ 20
------------DEL New@@new @AT@ 6885 @LENGTH@ 3
------------DEL SimpleType@@RetryState @AT@ 6889 @LENGTH@ 10
------------DEL SimpleName@@item @AT@ 6900 @LENGTH@ 4


UPD VariableDeclarationStatement@@BeanExchange exchange=getEndpoint().createExchange(); @TO@ BeanExchange exchange=(BeanExchange)getEndpoint().createExchange(); @AT@ 3272 @LENGTH@ 55
---UPD VariableDeclarationFragment@@exchange=getEndpoint().createExchange() @TO@ exchange=(BeanExchange)getEndpoint().createExchange() @AT@ 3285 @LENGTH@ 41
------INS CastExpression@@(BeanExchange)getEndpoint().createExchange() @TO@ VariableDeclarationFragment@@exchange=getEndpoint().createExchange() @AT@ 3296 @LENGTH@ 45
---------INS SimpleType@@BeanExchange @TO@ CastExpression@@(BeanExchange)getEndpoint().createExchange() @AT@ 3297 @LENGTH@ 12
---------INS MethodInvocation@@getEndpoint().createExchange() @TO@ CastExpression@@(BeanExchange)getEndpoint().createExchange() @AT@ 3311 @LENGTH@ 30
------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 3296 @LENGTH@ 13
------------MOV SimpleName@@MethodName:createExchange:[] @TO@ MethodInvocation@@getEndpoint().createExchange() @AT@ 3310 @LENGTH@ 16
------DEL MethodInvocation@@getEndpoint().createExchange() @AT@ 3296 @LENGTH@ 30


UPD Block@@ThenBody:{  choice=(ChoiceType)processor;  if (usePredicate.booleanValue() && stop.booleanValue()) {    WhenType when=choice.getWhenClauses().get(0);    when.getOutputs().remove(this.getProceed());  }  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !stop.booleanValue());  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),false);  break;} @TO@ ThenBody:{  choice=(ChoiceType)processor;  if (usePredicate.booleanValue() && stop.booleanValue()) {    WhenType when=choice.getWhenClauses().get(0);    when.getOutputs().remove(this.getProceed());  }  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !stop.booleanValue());  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!stop.booleanValue());  if (stop.booleanValue()) {    addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());  }  break;} @AT@ 3531 @LENGTH@ 847
---UPD ExpressionStatement@@MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),false) @TO@ MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!stop.booleanValue()) @AT@ 4247 @LENGTH@ 86
------UPD MethodInvocation@@addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),false) @TO@ addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),!stop.booleanValue()) @AT@ 4247 @LENGTH@ 85
---------UPD SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getOtherwise(), false] @TO@ MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getOtherwise(), !stop.booleanValue()] @AT@ 4247 @LENGTH@ 85
------------DEL BooleanLiteral@@false @AT@ 4326 @LENGTH@ 5
------------INS PrefixExpression@@!stop.booleanValue() @TO@ SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getOtherwise(), false] @AT@ 4536 @LENGTH@ 20
---------------INS Operator@@! @TO@ PrefixExpression@@!stop.booleanValue() @AT@ 4536 @LENGTH@ 1
---------------INS MethodInvocation@@stop.booleanValue() @TO@ PrefixExpression@@!stop.booleanValue() @AT@ 4537 @LENGTH@ 19
------------------INS SimpleName@@Name:stop @TO@ MethodInvocation@@stop.booleanValue() @AT@ 4537 @LENGTH@ 4
------------------INS SimpleName@@MethodName:booleanValue:[] @TO@ MethodInvocation@@stop.booleanValue() @AT@ 4542 @LENGTH@ 14
---INS IfStatement@@if (stop.booleanValue()) {  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @TO@ Block@@ThenBody:{  choice=(ChoiceType)processor;  if (usePredicate.booleanValue() && stop.booleanValue()) {    WhenType when=choice.getWhenClauses().get(0);    when.getOutputs().remove(this.getProceed());  }  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue() && !stop.booleanValue());  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getOtherwise(),false);  break;} @AT@ 4580 @LENGTH@ 534
------INS MethodInvocation@@stop.booleanValue() @TO@ IfStatement@@if (stop.booleanValue()) {  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @AT@ 4584 @LENGTH@ 19
---------INS SimpleName@@Name:stop @TO@ MethodInvocation@@stop.booleanValue() @AT@ 4584 @LENGTH@ 4
---------INS SimpleName@@MethodName:booleanValue:[] @TO@ MethodInvocation@@stop.booleanValue() @AT@ 4589 @LENGTH@ 14
------INS Block@@ThenBody:{  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @TO@ IfStatement@@if (stop.booleanValue()) {  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @AT@ 4605 @LENGTH@ 509
---------INS ExpressionStatement@@MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue()) @TO@ Block@@ThenBody:{  addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue());} @AT@ 4914 @LENGTH@ 178
------------INS MethodInvocation@@addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue()) @TO@ ExpressionStatement@@MethodInvocation:addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue()) @AT@ 4914 @LENGTH@ 177
---------------INS SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue()] @TO@ MethodInvocation@@addProceedProxy(this.getProceed(),answer.getProceed(),choice.getWhenClauses().get(choice.getWhenClauses().size() - 1),usePredicate.booleanValue()) @AT@ 4914 @LENGTH@ 177
------------------INS MethodInvocation@@this.getProceed() @TO@ SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue()] @AT@ 4930 @LENGTH@ 17
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getProceed() @AT@ 4930 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getProceed:[] @TO@ MethodInvocation@@this.getProceed() @AT@ 4935 @LENGTH@ 12
------------------INS MethodInvocation@@answer.getProceed() @TO@ SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue()] @AT@ 4949 @LENGTH@ 19
---------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.getProceed() @AT@ 4949 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getProceed:[] @TO@ MethodInvocation@@answer.getProceed() @AT@ 4956 @LENGTH@ 12
------------------INS MethodInvocation@@choice.getWhenClauses().get(choice.getWhenClauses().size() - 1) @TO@ SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue()] @AT@ 4998 @LENGTH@ 63
---------------------INS MethodInvocation@@MethodName:getWhenClauses:[] @TO@ MethodInvocation@@choice.getWhenClauses().get(choice.getWhenClauses().size() - 1) @AT@ 4998 @LENGTH@ 23
---------------------INS SimpleName@@Name:choice @TO@ MethodInvocation@@choice.getWhenClauses().get(choice.getWhenClauses().size() - 1) @AT@ 4998 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:get:[choice.getWhenClauses().size() - 1] @TO@ MethodInvocation@@choice.getWhenClauses().get(choice.getWhenClauses().size() - 1) @AT@ 5022 @LENGTH@ 39
------------------------INS InfixExpression@@choice.getWhenClauses().size() - 1 @TO@ SimpleName@@MethodName:get:[choice.getWhenClauses().size() - 1] @AT@ 5026 @LENGTH@ 34
---------------------------INS MethodInvocation@@choice.getWhenClauses().size() @TO@ InfixExpression@@choice.getWhenClauses().size() - 1 @AT@ 5026 @LENGTH@ 30
------------------------------INS MethodInvocation@@MethodName:getWhenClauses:[] @TO@ MethodInvocation@@choice.getWhenClauses().size() @AT@ 5026 @LENGTH@ 23
------------------------------INS SimpleName@@Name:choice @TO@ MethodInvocation@@choice.getWhenClauses().size() @AT@ 5026 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@choice.getWhenClauses().size() @AT@ 5050 @LENGTH@ 6
---------------------------INS Operator@@- @TO@ InfixExpression@@choice.getWhenClauses().size() - 1 @AT@ 5056 @LENGTH@ 1
---------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@choice.getWhenClauses().size() - 1 @AT@ 5059 @LENGTH@ 1
------------------INS MethodInvocation@@usePredicate.booleanValue() @TO@ SimpleName@@MethodName:addProceedProxy:[this.getProceed(), answer.getProceed(), choice.getWhenClauses().get(choice.getWhenClauses().size() - 1), usePredicate.booleanValue()] @AT@ 5063 @LENGTH@ 27
---------------------INS SimpleName@@Name:usePredicate @TO@ MethodInvocation@@usePredicate.booleanValue() @AT@ 5063 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:booleanValue:[] @TO@ MethodInvocation@@usePredicate.booleanValue() @AT@ 5076 @LENGTH@ 14


UPD FieldDeclaration@@private, int, [index=0] @TO@ private, int, [index] @AT@ 1036 @LENGTH@ 22
---UPD VariableDeclarationFragment@@index=0 @TO@ index @AT@ 1048 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 1056 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:setName(MultiResourceItemReader.class.getSimpleName()) @TO@ MethodInvocation:setName(ClassUtils.getShortName(MultiResourceItemReader.class)) @AT@ 1327 @LENGTH@ 55
---UPD MethodInvocation@@setName(MultiResourceItemReader.class.getSimpleName()) @TO@ setName(ClassUtils.getShortName(MultiResourceItemReader.class)) @AT@ 1327 @LENGTH@ 54
------UPD SimpleName@@MethodName:setName:[MultiResourceItemReader.class.getSimpleName()] @TO@ MethodName:setName:[ClassUtils.getShortName(MultiResourceItemReader.class)] @AT@ 1327 @LENGTH@ 54
---------UPD MethodInvocation@@MultiResourceItemReader.class.getSimpleName() @TO@ ClassUtils.getShortName(MultiResourceItemReader.class) @AT@ 1335 @LENGTH@ 45
------------DEL TypeLiteral@@MultiResourceItemReader.class @AT@ 1335 @LENGTH@ 29
------------DEL SimpleName@@MethodName:getSimpleName:[] @AT@ 1365 @LENGTH@ 15
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@MultiResourceItemReader.class.getSimpleName() @AT@ 1380 @LENGTH@ 10
------------INS SimpleName@@MethodName:getShortName:[MultiResourceItemReader.class] @TO@ MethodInvocation@@MultiResourceItemReader.class.getSimpleName() @AT@ 1391 @LENGTH@ 43
---------------INS TypeLiteral@@MultiResourceItemReader.class @TO@ SimpleName@@MethodName:getShortName:[MultiResourceItemReader.class] @AT@ 1404 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:jobLauncher.run(job,new JobParameters()) @TO@ MethodInvocation:jobLauncher.run(job,new JobParametersBuilder().addDate("run.date",new Date()).toJobParameters()) @AT@ 782 @LENGTH@ 42
---UPD MethodInvocation@@jobLauncher.run(job,new JobParameters()) @TO@ jobLauncher.run(job,new JobParametersBuilder().addDate("run.date",new Date()).toJobParameters()) @AT@ 782 @LENGTH@ 41
------UPD SimpleName@@MethodName:run:[job, new JobParameters()] @TO@ MethodName:run:[job, new JobParametersBuilder().addDate("run.date",new Date()).toJobParameters()] @AT@ 794 @LENGTH@ 29
---------DEL ClassInstanceCreation@@JobParameters[] @AT@ 803 @LENGTH@ 19
---------INS MethodInvocation@@new JobParametersBuilder().addDate("run.date",new Date()).toJobParameters() @TO@ SimpleName@@MethodName:run:[job, new JobParameters()] @AT@ 834 @LENGTH@ 76
------------INS MethodInvocation@@MethodName:addDate:["run.date", new Date()] @TO@ MethodInvocation@@new JobParametersBuilder().addDate("run.date",new Date()).toJobParameters() @AT@ 834 @LENGTH@ 58
---------------INS StringLiteral@@"run.date" @TO@ MethodInvocation@@MethodName:addDate:["run.date", new Date()] @AT@ 869 @LENGTH@ 10
---------------INS ClassInstanceCreation@@Date[] @TO@ MethodInvocation@@MethodName:addDate:["run.date", new Date()] @AT@ 881 @LENGTH@ 10
------------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 881 @LENGTH@ 3
------------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 885 @LENGTH@ 4
------------INS ClassInstanceCreation@@JobParametersBuilder[] @TO@ MethodInvocation@@new JobParametersBuilder().addDate("run.date",new Date()).toJobParameters() @AT@ 834 @LENGTH@ 26
---------------MOV New@@new @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 803 @LENGTH@ 3
---------------MOV SimpleType@@JobParameters @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 807 @LENGTH@ 13
------------INS SimpleName@@MethodName:toJobParameters:[] @TO@ MethodInvocation@@new JobParametersBuilder().addDate("run.date",new Date()).toJobParameters() @AT@ 893 @LENGTH@ 17


INS TryStatement@@try {  while (true) {    String line=reader.readLine();    if (line == null) {      break;    }    result.append(line);  }}  finally {  reader.close();} @TO@ MethodDeclaration@@protected, String, MethodName:readFile, File f, Exception,  @AT@ 1349 @LENGTH@ 171
---MOV WhileStatement@@while (true) {  String line=reader.readLine();  if (line == null) {    break;  }  result.append(line);} @TO@ TryStatement@@try {  while (true) {    String line=reader.readLine();    if (line == null) {      break;    }    result.append(line);  }}  finally {  reader.close();} @AT@ 1360 @LENGTH@ 117
---INS Block@@FinallyBody:{  reader.close();} @TO@ TryStatement@@try {  while (true) {    String line=reader.readLine();    if (line == null) {      break;    }    result.append(line);  }}  finally {  reader.close();} @AT@ 1496 @LENGTH@ 24
------INS ExpressionStatement@@MethodInvocation:reader.close() @TO@ Block@@FinallyBody:{  reader.close();} @AT@ 1501 @LENGTH@ 15
---------INS MethodInvocation@@reader.close() @TO@ ExpressionStatement@@MethodInvocation:reader.close() @AT@ 1501 @LENGTH@ 14
------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.close() @AT@ 1501 @LENGTH@ 6
------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@reader.close() @AT@ 1508 @LENGTH@ 7


UPD IfStatement@@if (viewAlreadySet(facesContext)) {  if (logger.isDebugEnabled()) {    logger.debug("Existing view root found with id '" + facesContext.getViewRoot().getId() + "'");  }  UIViewRoot viewRoot=facesContext.getViewRoot();  viewRoot.setLocale(context.getExternalContext().getLocale());  processComponentBinding(facesContext,viewRoot);  view=createJsfView(facesContext.getViewRoot(),lifecycle,context);  view.setRestored(true);} else {  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("View root restored for '" + viewName + "'");    }    view=createJsfView(viewRoot,lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    processComponentBinding(facesContext,view.getViewRoot());    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating view root for '" + viewName + "'");    }    view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    view.setRestored(false);  }} @TO@ if (viewAlreadySet(facesContext)) {  if (logger.isDebugEnabled()) {    logger.debug("Existing view root found with id '" + facesContext.getViewRoot().getId() + "'");  }  UIViewRoot viewRoot=facesContext.getViewRoot();  viewRoot.setLocale(context.getExternalContext().getLocale());  processTree(facesContext,viewRoot);  view=createJsfView(facesContext.getViewRoot(),lifecycle,context);  view.setRestored(true);} else {  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("View root restored for '" + viewName + "'");    }    view=createJsfView(viewRoot,lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    processTree(facesContext,view.getViewRoot());    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating view root for '" + viewName + "'");    }    view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    view.setRestored(false);  }} @AT@ 3319 @LENGTH@ 1183
---UPD Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Existing view root found with id '" + facesContext.getViewRoot().getId() + "'");  }  UIViewRoot viewRoot=facesContext.getViewRoot();  viewRoot.setLocale(context.getExternalContext().getLocale());  processComponentBinding(facesContext,viewRoot);  view=createJsfView(facesContext.getViewRoot(),lifecycle,context);  view.setRestored(true);} @TO@ ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Existing view root found with id '" + facesContext.getViewRoot().getId() + "'");  }  UIViewRoot viewRoot=facesContext.getViewRoot();  viewRoot.setLocale(context.getExternalContext().getLocale());  processTree(facesContext,viewRoot);  view=createJsfView(facesContext.getViewRoot(),lifecycle,context);  view.setRestored(true);} @AT@ 3353 @LENGTH@ 422
------UPD ExpressionStatement@@MethodInvocation:processComponentBinding(facesContext,viewRoot) @TO@ MethodInvocation:processTree(facesContext,viewRoot) @AT@ 3620 @LENGTH@ 48
---------UPD MethodInvocation@@processComponentBinding(facesContext,viewRoot) @TO@ processTree(facesContext,viewRoot) @AT@ 3620 @LENGTH@ 47
------------UPD SimpleName@@MethodName:processComponentBinding:[facesContext, viewRoot] @TO@ MethodName:processTree:[facesContext, viewRoot] @AT@ 3620 @LENGTH@ 47
---UPD Block@@ElseBody:{  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("View root restored for '" + viewName + "'");    }    view=createJsfView(viewRoot,lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    processComponentBinding(facesContext,view.getViewRoot());    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating view root for '" + viewName + "'");    }    view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    view.setRestored(false);  }} @TO@ ElseBody:{  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("View root restored for '" + viewName + "'");    }    view=createJsfView(viewRoot,lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    processTree(facesContext,view.getViewRoot());    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating view root for '" + viewName + "'");    }    view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    view.setRestored(false);  }} @AT@ 3781 @LENGTH@ 721
------UPD IfStatement@@if (viewRoot != null) {  if (logger.isDebugEnabled()) {    logger.debug("View root restored for '" + viewName + "'");  }  view=createJsfView(viewRoot,lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  processComponentBinding(facesContext,view.getViewRoot());  view.setRestored(true);} else {  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @TO@ if (viewRoot != null) {  if (logger.isDebugEnabled()) {    logger.debug("View root restored for '" + viewName + "'");  }  view=createJsfView(viewRoot,lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  processTree(facesContext,view.getViewRoot());  view.setRestored(true);} else {  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @AT@ 3862 @LENGTH@ 635
---------UPD Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("View root restored for '" + viewName + "'");  }  view=createJsfView(viewRoot,lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  processComponentBinding(facesContext,view.getViewRoot());  view.setRestored(true);} @TO@ ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("View root restored for '" + viewName + "'");  }  view=createJsfView(viewRoot,lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  processTree(facesContext,view.getViewRoot());  view.setRestored(true);} @AT@ 3884 @LENGTH@ 316
------------UPD ExpressionStatement@@MethodInvocation:processComponentBinding(facesContext,view.getViewRoot()) @TO@ MethodInvocation:processTree(facesContext,view.getViewRoot()) @AT@ 4107 @LENGTH@ 58
---------------UPD MethodInvocation@@processComponentBinding(facesContext,view.getViewRoot()) @TO@ processTree(facesContext,view.getViewRoot()) @AT@ 4107 @LENGTH@ 57
------------------UPD SimpleName@@MethodName:processComponentBinding:[facesContext, view.getViewRoot()] @TO@ MethodName:processTree:[facesContext, view.getViewRoot()] @AT@ 4107 @LENGTH@ 57


INS MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(), public]TradeJobFunctionalTests, AbstractValidatingBatchLauncherTests @AT@ 2670 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @AT@ 2670 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @AT@ 2677 @LENGTH@ 4
---INS SimpleName@@MethodName:tearDown @TO@ MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @AT@ 2682 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @AT@ 2700 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:simpleJdbcTemplate.update("delete from TRADE") @TO@ MethodDeclaration@@public, void, MethodName:tearDown, Exception,  @AT@ 2714 @LENGTH@ 47
------INS MethodInvocation@@simpleJdbcTemplate.update("delete from TRADE") @TO@ ExpressionStatement@@MethodInvocation:simpleJdbcTemplate.update("delete from TRADE") @AT@ 2714 @LENGTH@ 46
---------INS SimpleName@@Name:simpleJdbcTemplate @TO@ MethodInvocation@@simpleJdbcTemplate.update("delete from TRADE") @AT@ 2714 @LENGTH@ 18
---------INS SimpleName@@MethodName:update:["delete from TRADE"] @TO@ MethodInvocation@@simpleJdbcTemplate.update("delete from TRADE") @AT@ 2733 @LENGTH@ 27
------------INS StringLiteral@@"delete from TRADE" @TO@ SimpleName@@MethodName:update:["delete from TRADE"] @AT@ 2740 @LENGTH@ 19


INS MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @TO@ TypeDeclaration@@[public, static]TestConversionService, [ConversionService] @AT@ 3460 @LENGTH@ 149
---INS Modifier@@public @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 3460 @LENGTH@ 6
---INS ArrayType@@ConversionExecutor[] @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 3467 @LENGTH@ 20
------INS SimpleType@@ConversionExecutor @TO@ ArrayType@@ConversionExecutor[] @AT@ 3467 @LENGTH@ 18
---INS SimpleName@@MethodName:getConversionExecutors @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 3488 @LENGTH@ 22
---INS SingleVariableDeclaration@@Class sourceClass @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 3511 @LENGTH@ 17
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class sourceClass @AT@ 3511 @LENGTH@ 5
------INS SimpleName@@sourceClass @TO@ SingleVariableDeclaration@@Class sourceClass @AT@ 3517 @LENGTH@ 11
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("Auto-generated method stub") @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 3535 @LENGTH@ 70
------INS ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("Auto-generated method stub") @AT@ 3541 @LENGTH@ 63
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @AT@ 3541 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @AT@ 3545 @LENGTH@ 29
---------INS StringLiteral@@"Auto-generated method stub" @TO@ ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @AT@ 3575 @LENGTH@ 28


UPD VariableDeclarationStatement@@StepExecution stepExecution=new StepExecution("NoProcessingStep",new JobExecution(new JobInstance(new Long(1),new JobParameters(),"NoProcessingJob"))); @TO@ StepExecution stepExecution=new StepExecution("NoProcessingStep",new JobExecution(new JobInstance(1L,new JobParameters(),"NoProcessingJob"))); @AT@ 1307 @LENGTH@ 189
---UPD VariableDeclarationFragment@@stepExecution=new StepExecution("NoProcessingStep",new JobExecution(new JobInstance(new Long(1),new JobParameters(),"NoProcessingJob"))) @TO@ stepExecution=new StepExecution("NoProcessingStep",new JobExecution(new JobInstance(1L,new JobParameters(),"NoProcessingJob"))) @AT@ 1321 @LENGTH@ 174
------UPD ClassInstanceCreation@@StepExecution["NoProcessingStep", new JobExecution(new JobInstance(new Long(1),new JobParameters(),"NoProcessingJob"))] @TO@ StepExecution["NoProcessingStep", new JobExecution(new JobInstance(1L,new JobParameters(),"NoProcessingJob"))] @AT@ 1337 @LENGTH@ 158
---------UPD ClassInstanceCreation@@JobExecution[new JobInstance(new Long(1),new JobParameters(),"NoProcessingJob")] @TO@ JobExecution[new JobInstance(1L,new JobParameters(),"NoProcessingJob")] @AT@ 1391 @LENGTH@ 103
------------UPD ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "NoProcessingJob"] @TO@ JobInstance[1L, new JobParameters(), "NoProcessingJob"] @AT@ 1425 @LENGTH@ 68
---------------DEL ClassInstanceCreation@@Long[1] @AT@ 1441 @LENGTH@ 11
------------------DEL New@@new @AT@ 1441 @LENGTH@ 3
------------------DEL SimpleType@@Long @AT@ 1445 @LENGTH@ 4
---------------MOV NumberLiteral@@1 @TO@ ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "NoProcessingJob"] @AT@ 1450 @LENGTH@ 1


UPD TryStatement@@try {  template.setDefaultEndpointUri("mina:xxx://localhost:8080");  template.sendBody("mina:xxx://localhost:8080");  fail("Should have thrown a ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {  assertTrue("Should be an IAE exception",e.getCause() instanceof IllegalArgumentException);  assertEquals("Unrecognised MINA protocol: xxx for uri: mina:xxx://localhost:8080",e.getCause().getMessage());} @TO@ try {  template.sendBody("mina:xxx://localhost:8080","mina:xxx://localhost:8080");  fail("Should have thrown a ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {  assertTrue("Should be an IAE exception",e.getCause() instanceof IllegalArgumentException);  assertEquals("Unrecognised MINA protocol: xxx for uri: mina:xxx://localhost:8080",e.getCause().getMessage());} @AT@ 1171 @LENGTH@ 501
---DEL ExpressionStatement@@MethodInvocation:template.setDefaultEndpointUri("mina:xxx://localhost:8080") @AT@ 1189 @LENGTH@ 60
------DEL MethodInvocation@@template.setDefaultEndpointUri("mina:xxx://localhost:8080") @AT@ 1189 @LENGTH@ 59
---------DEL SimpleName@@Name:template @AT@ 1189 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setDefaultEndpointUri:["mina:xxx://localhost:8080"] @AT@ 1198 @LENGTH@ 50
------------DEL StringLiteral@@"mina:xxx://localhost:8080" @AT@ 1220 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:template.sendBody("mina:xxx://localhost:8080") @TO@ MethodInvocation:template.sendBody("mina:xxx://localhost:8080","mina:xxx://localhost:8080") @AT@ 1262 @LENGTH@ 47
------UPD MethodInvocation@@template.sendBody("mina:xxx://localhost:8080") @TO@ template.sendBody("mina:xxx://localhost:8080","mina:xxx://localhost:8080") @AT@ 1262 @LENGTH@ 46
---------UPD SimpleName@@MethodName:sendBody:["mina:xxx://localhost:8080"] @TO@ MethodName:sendBody:["mina:xxx://localhost:8080", "mina:xxx://localhost:8080"] @AT@ 1271 @LENGTH@ 37
------------INS StringLiteral@@"mina:xxx://localhost:8080" @TO@ SimpleName@@MethodName:sendBody:["mina:xxx://localhost:8080"] @AT@ 1236 @LENGTH@ 27


UPD VariableDeclarationStatement@@Long id=new Long(rs.getLong(1)); @TO@ Long id=rs.getLong(1); @AT@ 11498 @LENGTH@ 34
---UPD VariableDeclarationFragment@@id=new Long(rs.getLong(1)) @TO@ id=rs.getLong(1) @AT@ 11503 @LENGTH@ 28
------DEL ClassInstanceCreation@@Long[rs.getLong(1)] @AT@ 11508 @LENGTH@ 23
---------DEL New@@new @AT@ 11508 @LENGTH@ 3
---------DEL SimpleType@@Long @AT@ 11512 @LENGTH@ 4
------MOV MethodInvocation@@rs.getLong(1) @TO@ VariableDeclarationFragment@@id=new Long(rs.getLong(1)) @AT@ 11517 @LENGTH@ 13


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/xml.xml"}), public]XmlFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/xml.xml"}), public]XmlFunctionalTests, AbstractJobTests @AT@ 1079 @LENGTH@ 643
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/xml.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/xml.xml"}) @AT@ 1119 @LENGTH@ 126


UPD ReturnStatement@@InfixExpression:redeliveryCounter < getMaximumRedeliveries() @TO@ InfixExpression:redeliveryCounter <= getMaximumRedeliveries() @AT@ 2890 @LENGTH@ 52
---UPD InfixExpression@@redeliveryCounter < getMaximumRedeliveries() @TO@ redeliveryCounter <= getMaximumRedeliveries() @AT@ 2897 @LENGTH@ 44
------UPD Operator@@< @TO@ <= @AT@ 2914 @LENGTH@ 1


UPD MethodDeclaration@@protected, String, MethodName:getFullFileName, ChannelSftp.LsEntry sftpFile, IOException,  @TO@ protected, String, MethodName:getFullFileName, ChannelSftp.LsEntry sftpFile, IOException, SftpException,  @AT@ 5232 @LENGTH@ 150
---INS SimpleType@@SftpException @TO@ MethodDeclaration@@protected, String, MethodName:getFullFileName, ChannelSftp.LsEntry sftpFile, IOException,  @AT@ 5315 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:increaseCreditBy, BigDecimal sum,  @TO@ public, CustomerCredit, MethodName:increaseCreditBy, BigDecimal sum,  @AT@ 1310 @LENGTH@ 93
---INS SimpleType@@CustomerCredit @TO@ MethodDeclaration@@public, void, MethodName:increaseCreditBy, BigDecimal sum,  @AT@ 1317 @LENGTH@ 14
---DEL PrimitiveType@@void @AT@ 1317 @LENGTH@ 4
---UPD ExpressionStatement@@Assignment:this.credit=this.credit.add(sum) @TO@ Assignment:newCredit.credit=this.credit.add(sum) @AT@ 1362 @LENGTH@ 35
------UPD Assignment@@this.credit=this.credit.add(sum) @TO@ newCredit.credit=this.credit.add(sum) @AT@ 1362 @LENGTH@ 34
---------DEL FieldAccess@@this.credit @AT@ 1362 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 1362 @LENGTH@ 4
------------DEL SimpleName@@credit @AT@ 1367 @LENGTH@ 6
---------INS QualifiedName@@newCredit.credit @TO@ Assignment@@this.credit=this.credit.add(sum) @AT@ 1426 @LENGTH@ 16
------------INS SimpleName@@newCredit @TO@ QualifiedName@@newCredit.credit @AT@ 1426 @LENGTH@ 9
------------INS SimpleName@@credit @TO@ QualifiedName@@newCredit.credit @AT@ 1436 @LENGTH@ 6
---INS VariableDeclarationStatement@@CustomerCredit newCredit=new CustomerCredit(); @TO@ MethodDeclaration@@public, void, MethodName:increaseCreditBy, BigDecimal sum,  @AT@ 1372 @LENGTH@ 48
------INS SimpleType@@CustomerCredit @TO@ VariableDeclarationStatement@@CustomerCredit newCredit=new CustomerCredit(); @AT@ 1372 @LENGTH@ 14
------INS VariableDeclarationFragment@@newCredit=new CustomerCredit() @TO@ VariableDeclarationStatement@@CustomerCredit newCredit=new CustomerCredit(); @AT@ 1387 @LENGTH@ 32
---------INS SimpleName@@newCredit @TO@ VariableDeclarationFragment@@newCredit=new CustomerCredit() @AT@ 1387 @LENGTH@ 9
---------INS ClassInstanceCreation@@CustomerCredit[] @TO@ VariableDeclarationFragment@@newCredit=new CustomerCredit() @AT@ 1399 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@CustomerCredit[] @AT@ 1399 @LENGTH@ 3
------------INS SimpleType@@CustomerCredit @TO@ ClassInstanceCreation@@CustomerCredit[] @AT@ 1403 @LENGTH@ 14
---INS ExpressionStatement@@Assignment:newCredit.name=this.name @TO@ MethodDeclaration@@public, void, MethodName:increaseCreditBy, BigDecimal sum,  @AT@ 1472 @LENGTH@ 27
------INS Assignment@@newCredit.name=this.name @TO@ ExpressionStatement@@Assignment:newCredit.name=this.name @AT@ 1472 @LENGTH@ 26
---------INS QualifiedName@@newCredit.name @TO@ Assignment@@newCredit.name=this.name @AT@ 1472 @LENGTH@ 14
------------INS SimpleName@@newCredit @TO@ QualifiedName@@newCredit.name @AT@ 1472 @LENGTH@ 9
------------INS SimpleName@@name @TO@ QualifiedName@@newCredit.name @AT@ 1482 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@newCredit.name=this.name @AT@ 1486 @LENGTH@ 1
---------INS FieldAccess@@this.name @TO@ Assignment@@newCredit.name=this.name @AT@ 1489 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.name @AT@ 1489 @LENGTH@ 4
------------INS SimpleName@@name @TO@ FieldAccess@@this.name @AT@ 1494 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:newCredit.id=this.id @TO@ MethodDeclaration@@public, void, MethodName:increaseCreditBy, BigDecimal sum,  @AT@ 1505 @LENGTH@ 23
------INS Assignment@@newCredit.id=this.id @TO@ ExpressionStatement@@Assignment:newCredit.id=this.id @AT@ 1505 @LENGTH@ 22
---------INS QualifiedName@@newCredit.id @TO@ Assignment@@newCredit.id=this.id @AT@ 1505 @LENGTH@ 12
------------INS SimpleName@@newCredit @TO@ QualifiedName@@newCredit.id @AT@ 1505 @LENGTH@ 9
------------INS SimpleName@@id @TO@ QualifiedName@@newCredit.id @AT@ 1515 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@newCredit.id=this.id @AT@ 1517 @LENGTH@ 1
---------INS FieldAccess@@this.id @TO@ Assignment@@newCredit.id=this.id @AT@ 1520 @LENGTH@ 7
------------INS ThisExpression@@this @TO@ FieldAccess@@this.id @AT@ 1520 @LENGTH@ 4
------------INS SimpleName@@id @TO@ FieldAccess@@this.id @AT@ 1525 @LENGTH@ 2
---INS ReturnStatement@@SimpleName:newCredit @TO@ MethodDeclaration@@public, void, MethodName:increaseCreditBy, BigDecimal sum,  @AT@ 1534 @LENGTH@ 17
------INS SimpleName@@newCredit @TO@ ReturnStatement@@SimpleName:newCredit @AT@ 1541 @LENGTH@ 9


INS MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @TO@ TypeDeclaration@@[public, static]TestConversionService, [ConversionService] @AT@ 2646 @LENGTH@ 149
---INS Modifier@@public @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 2646 @LENGTH@ 6
---INS ArrayType@@ConversionExecutor[] @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 2653 @LENGTH@ 20
------INS SimpleType@@ConversionExecutor @TO@ ArrayType@@ConversionExecutor[] @AT@ 2653 @LENGTH@ 18
---INS SimpleName@@MethodName:getConversionExecutors @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 2674 @LENGTH@ 22
---INS SingleVariableDeclaration@@Class sourceClass @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 2697 @LENGTH@ 17
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class sourceClass @AT@ 2697 @LENGTH@ 5
------INS SimpleName@@sourceClass @TO@ SingleVariableDeclaration@@Class sourceClass @AT@ 2703 @LENGTH@ 11
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("Auto-generated method stub") @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 2721 @LENGTH@ 70
------INS ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("Auto-generated method stub") @AT@ 2727 @LENGTH@ 63
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @AT@ 2727 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @AT@ 2731 @LENGTH@ 29
---------INS StringLiteral@@"Auto-generated method stub" @TO@ ClassInstanceCreation@@UnsupportedOperationException["Auto-generated method stub"] @AT@ 2761 @LENGTH@ 28


UPD MethodDeclaration@@public, void, MethodName:testAggregate,  @TO@ public, void, MethodName:testAggregateTrade,  @AT@ 1181 @LENGTH@ 1202
---UPD SimpleName@@MethodName:testAggregate @TO@ MethodName:testAggregateTrade @AT@ 1193 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:tradeExtractor.setNames(new String[]{"id","name","credit"}) @TO@ MethodInvocation:customerExtractor.setNames(new String[]{"id","name","credit"}) @AT@ 1647 @LENGTH@ 65
------UPD MethodInvocation@@tradeExtractor.setNames(new String[]{"id","name","credit"}) @TO@ customerExtractor.setNames(new String[]{"id","name","credit"}) @AT@ 1647 @LENGTH@ 64
---------UPD SimpleName@@Name:tradeExtractor @TO@ Name:customerExtractor @AT@ 1647 @LENGTH@ 14


DEL ExpressionStatement@@MethodInvocation:contribution.incrementReadCount(inputs.size()) @AT@ 16120 @LENGTH@ 47
---DEL MethodInvocation@@contribution.incrementReadCount(inputs.size()) @AT@ 16120 @LENGTH@ 46
------DEL SimpleName@@Name:contribution @AT@ 16120 @LENGTH@ 12
------DEL SimpleName@@MethodName:incrementReadCount:[inputs.size()] @AT@ 16133 @LENGTH@ 33
---------DEL MethodInvocation@@inputs.size() @AT@ 16152 @LENGTH@ 13
------------DEL SimpleName@@Name:inputs @AT@ 16152 @LENGTH@ 6
------------DEL SimpleName@@MethodName:size:[] @AT@ 16159 @LENGTH@ 6


UPD TypeDeclaration@@[private, static]ClassComparator, [Comparator<Class<?>>] @TO@ [private, static]ClassComparator, [Comparator<Class<?>>, Serializable] @AT@ 3753 @LENGTH@ 349
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[private, static]ClassComparator, [Comparator<Class<?>>] @AT@ 3852 @LENGTH@ 12


UPD TryStatement@@try {  writer.open(executionContext);  fail("Expected IllegalStateException");} catch (IllegalStateException e) {  String message=e.getMessage();  assertTrue("Message does not contain 'writable': " + message,message.indexOf("writable") >= 0);} @TO@ try {  writer.open(executionContext);} catch (IllegalStateException e) {  String message=e.getMessage();  assertTrue("Message does not contain 'writable': " + message,message.indexOf("writable") >= 0);} @AT@ 8060 @LENGTH@ 262
---DEL ExpressionStatement@@MethodInvocation:fail("Expected IllegalStateException") @AT@ 8103 @LENGTH@ 39
------DEL MethodInvocation@@fail("Expected IllegalStateException") @AT@ 8103 @LENGTH@ 38
---------DEL SimpleName@@MethodName:fail:["Expected IllegalStateException"] @AT@ 8103 @LENGTH@ 38
------------DEL StringLiteral@@"Expected IllegalStateException" @AT@ 8108 @LENGTH@ 32


UPD CatchClause@@catch (MessageDeliveryException e) {  String message=e.getCause().getMessage();  assertTrue("Wrong message: " + message,message.contains("return address"));} @TO@ catch (MessageDeliveryException e) {  String message=e.getMessage();  assertTrue("Wrong message: " + message,message.contains("reply target"));} @AT@ 1905 @LENGTH@ 167
---UPD VariableDeclarationStatement@@String message=e.getCause().getMessage(); @TO@ String message=e.getMessage(); @AT@ 1945 @LENGTH@ 43
------UPD VariableDeclarationFragment@@message=e.getCause().getMessage() @TO@ message=e.getMessage() @AT@ 1952 @LENGTH@ 35
---------UPD MethodInvocation@@e.getCause().getMessage() @TO@ e.getMessage() @AT@ 1962 @LENGTH@ 25
------------DEL MethodInvocation@@MethodName:getCause:[] @AT@ 1962 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:assertTrue("Wrong message: " + message,message.contains("return address")) @TO@ MethodInvocation:assertTrue("Wrong message: " + message,message.contains("reply target")) @AT@ 1992 @LENGTH@ 76
------UPD MethodInvocation@@assertTrue("Wrong message: " + message,message.contains("return address")) @TO@ assertTrue("Wrong message: " + message,message.contains("reply target")) @AT@ 1992 @LENGTH@ 75
---------UPD SimpleName@@MethodName:assertTrue:["Wrong message: " + message, message.contains("return address")] @TO@ MethodName:assertTrue:["Wrong message: " + message, message.contains("reply target")] @AT@ 1992 @LENGTH@ 75
------------UPD MethodInvocation@@message.contains("return address") @TO@ message.contains("reply target") @AT@ 2032 @LENGTH@ 34
---------------UPD SimpleName@@MethodName:contains:["return address"] @TO@ MethodName:contains:["reply target"] @AT@ 2040 @LENGTH@ 26
------------------UPD StringLiteral@@"return address" @TO@ "reply target" @AT@ 2049 @LENGTH@ 16


UPD TypeDeclaration@@[private, final]StubItemWriter, [ItemWriter<String>] @TO@ [private, static, final]StubItemWriter, [ItemWriter<String>] @AT@ 5081 @LENGTH@ 229
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final]StubItemWriter, [ItemWriter<String>] @AT@ 5089 @LENGTH@ 6


UPD VariableDeclarationStatement@@String answer=ObjectHelper.classCanoicalName(message.getBody()); @TO@ String answer=ObjectHelper.classCanonicalName(message.getBody()); @AT@ 3981 @LENGTH@ 66
---UPD VariableDeclarationFragment@@answer=ObjectHelper.classCanoicalName(message.getBody()) @TO@ answer=ObjectHelper.classCanonicalName(message.getBody()) @AT@ 3988 @LENGTH@ 58
------UPD MethodInvocation@@ObjectHelper.classCanoicalName(message.getBody()) @TO@ ObjectHelper.classCanonicalName(message.getBody()) @AT@ 3997 @LENGTH@ 49
---------UPD SimpleName@@MethodName:classCanoicalName:[message.getBody()] @TO@ MethodName:classCanonicalName:[message.getBody()] @AT@ 4010 @LENGTH@ 36


UPD IfStatement@@if (jobRepository.getStepExecutionCount(lastStepExecution.getJobExecution().getJobInstance(),step) < step.getStartLimit()) {  return true;} else {  throw new StartLimitExceededException("Maximum start limit exceeded for step: " + step.getName() + "StartMax: "+ step.getStartLimit());} @TO@ if (jobRepository.getStepExecutionCount(lastStepExecution.getJobExecution().getJobInstance(),step.getName()) < step.getStartLimit()) {  return true;} else {  throw new StartLimitExceededException("Maximum start limit exceeded for step: " + step.getName() + "StartMax: "+ step.getStartLimit());} @AT@ 5566 @LENGTH@ 431
---UPD InfixExpression@@jobRepository.getStepExecutionCount(lastStepExecution.getJobExecution().getJobInstance(),step) < step.getStartLimit() @TO@ jobRepository.getStepExecutionCount(lastStepExecution.getJobExecution().getJobInstance(),step.getName()) < step.getStartLimit() @AT@ 5570 @LENGTH@ 124
------UPD MethodInvocation@@jobRepository.getStepExecutionCount(lastStepExecution.getJobExecution().getJobInstance(),step) @TO@ jobRepository.getStepExecutionCount(lastStepExecution.getJobExecution().getJobInstance(),step.getName()) @AT@ 5570 @LENGTH@ 95
---------UPD SimpleName@@MethodName:getStepExecutionCount:[lastStepExecution.getJobExecution().getJobInstance(), step] @TO@ MethodName:getStepExecutionCount:[lastStepExecution.getJobExecution().getJobInstance(), step.getName()] @AT@ 5584 @LENGTH@ 81
------------DEL SimpleName@@step @AT@ 5660 @LENGTH@ 4
------------INS MethodInvocation@@step.getName() @TO@ SimpleName@@MethodName:getStepExecutionCount:[lastStepExecution.getJobExecution().getJobInstance(), step] @AT@ 5670 @LENGTH@ 14
---------------INS SimpleName@@Name:step @TO@ MethodInvocation@@step.getName() @AT@ 5670 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@step.getName() @AT@ 5675 @LENGTH@ 9


UPD IfStatement@@if (sync) {  Object body;  if (ExchangeHelper.isOutCapable(exchange)) {    body=MinaPayloadHelper.getOut(endpoint,exchange);  } else {    body=MinaPayloadHelper.getIn(endpoint,exchange);  }  boolean failed=exchange.isFailed();  if (body == null) {    LOG.warn("Can not write body since its null, closing session: " + exchange);    session.close();  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Writing body: " + body);    }    MinaHelper.writeBody(session,body,exchange);  }} @TO@ if (sync) {  Object body;  if (ExchangeHelper.isOutCapable(exchange)) {    body=MinaPayloadHelper.getOut(endpoint,exchange);  } else {    body=MinaPayloadHelper.getIn(endpoint,exchange);  }  if (body == null) {    LOG.warn("Can not write body since its null, closing session: " + exchange);    session.close();  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Writing body: " + body);    }    MinaHelper.writeBody(session,body,exchange);  }} @AT@ 3923 @LENGTH@ 1895
---UPD Block@@ThenBody:{  Object body;  if (ExchangeHelper.isOutCapable(exchange)) {    body=MinaPayloadHelper.getOut(endpoint,exchange);  } else {    body=MinaPayloadHelper.getIn(endpoint,exchange);  }  boolean failed=exchange.isFailed();  if (body == null) {    LOG.warn("Can not write body since its null, closing session: " + exchange);    session.close();  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Writing body: " + body);    }    MinaHelper.writeBody(session,body,exchange);  }} @TO@ ThenBody:{  Object body;  if (ExchangeHelper.isOutCapable(exchange)) {    body=MinaPayloadHelper.getOut(endpoint,exchange);  } else {    body=MinaPayloadHelper.getIn(endpoint,exchange);  }  if (body == null) {    LOG.warn("Can not write body since its null, closing session: " + exchange);    session.close();  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Writing body: " + body);    }    MinaHelper.writeBody(session,body,exchange);  }} @AT@ 3933 @LENGTH@ 1885
------DEL VariableDeclarationStatement@@boolean failed=exchange.isFailed(); @AT@ 4229 @LENGTH@ 37
---------DEL PrimitiveType@@boolean @AT@ 4229 @LENGTH@ 7
---------DEL VariableDeclarationFragment@@failed=exchange.isFailed() @AT@ 4237 @LENGTH@ 28
------------DEL SimpleName@@failed @AT@ 4237 @LENGTH@ 6
------------DEL MethodInvocation@@exchange.isFailed() @AT@ 4246 @LENGTH@ 19
---------------DEL SimpleName@@Name:exchange @AT@ 4246 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:isFailed:[] @AT@ 4255 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:context.setTypeConversionErrorResult(e) @TO@ MethodInvocation:context.setTypeConversionErrorResult(sourceValue,e) @AT@ 3994 @LENGTH@ 40
---UPD MethodInvocation@@context.setTypeConversionErrorResult(e) @TO@ context.setTypeConversionErrorResult(sourceValue,e) @AT@ 3994 @LENGTH@ 39
------UPD SimpleName@@MethodName:setTypeConversionErrorResult:[e] @TO@ MethodName:setTypeConversionErrorResult:[sourceValue, e] @AT@ 4002 @LENGTH@ 31
---------INS SimpleName@@sourceValue @TO@ SimpleName@@MethodName:setTypeConversionErrorResult:[e] @AT@ 3961 @LENGTH@ 11


UPD FieldDeclaration@@private, static, final, String, [INPUT_FILE="src/main/resources/data/ioSample/input/input.xml"] @TO@ private, static, final, String, [INPUT_FILE="src/main/resources/data/iosample/input/input.xml"] @AT@ 1384 @LENGTH@ 92
---UPD VariableDeclarationFragment@@INPUT_FILE="src/main/resources/data/ioSample/input/input.xml" @TO@ INPUT_FILE="src/main/resources/data/iosample/input/input.xml" @AT@ 1412 @LENGTH@ 63
------UPD StringLiteral@@"src/main/resources/data/ioSample/input/input.xml" @TO@ "src/main/resources/data/iosample/input/input.xml" @AT@ 1425 @LENGTH@ 50


UPD ExpressionStatement@@MethodInvocation:logger.info("Registering Job definitions from " + resources) @TO@ MethodInvocation:logger.info("Registering Job definitions from " + Arrays.toString(resources)) @AT@ 4300 @LENGTH@ 61
---UPD MethodInvocation@@logger.info("Registering Job definitions from " + resources) @TO@ logger.info("Registering Job definitions from " + Arrays.toString(resources)) @AT@ 4300 @LENGTH@ 60
------UPD SimpleName@@MethodName:info:["Registering Job definitions from " + resources] @TO@ MethodName:info:["Registering Job definitions from " + Arrays.toString(resources)] @AT@ 4307 @LENGTH@ 53
---------UPD InfixExpression@@"Registering Job definitions from " + resources @TO@ "Registering Job definitions from " + Arrays.toString(resources) @AT@ 4312 @LENGTH@ 47
------------INS MethodInvocation@@Arrays.toString(resources) @TO@ InfixExpression@@"Registering Job definitions from " + resources @AT@ 4350 @LENGTH@ 26
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(resources) @AT@ 4350 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString:[resources] @TO@ MethodInvocation@@Arrays.toString(resources) @AT@ 4357 @LENGTH@ 19
------------------INS SimpleName@@resources @TO@ SimpleName@@MethodName:toString:[resources] @AT@ 4366 @LENGTH@ 9
------------DEL SimpleName@@resources @AT@ 4350 @LENGTH@ 9


INS IfStatement@@if (stateHolder != null) {  mvcView.restoreState(stateHolder);} @TO@ MethodDeclaration@@public, View, MethodName:getView, RequestContext context,  @AT@ 3297 @LENGTH@ 68
---INS InfixExpression@@stateHolder != null @TO@ IfStatement@@if (stateHolder != null) {  mvcView.restoreState(stateHolder);} @AT@ 3301 @LENGTH@ 19
------INS SimpleName@@stateHolder @TO@ InfixExpression@@stateHolder != null @AT@ 3301 @LENGTH@ 11
------INS Operator@@!= @TO@ InfixExpression@@stateHolder != null @AT@ 3312 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@stateHolder != null @AT@ 3316 @LENGTH@ 4
---INS Block@@ThenBody:{  mvcView.restoreState(stateHolder);} @TO@ IfStatement@@if (stateHolder != null) {  mvcView.restoreState(stateHolder);} @AT@ 3322 @LENGTH@ 43
------INS ExpressionStatement@@MethodInvocation:mvcView.restoreState(stateHolder) @TO@ Block@@ThenBody:{  mvcView.restoreState(stateHolder);} @AT@ 3327 @LENGTH@ 34
---------INS MethodInvocation@@mvcView.restoreState(stateHolder) @TO@ ExpressionStatement@@MethodInvocation:mvcView.restoreState(stateHolder) @AT@ 3327 @LENGTH@ 33
------------INS SimpleName@@Name:mvcView @TO@ MethodInvocation@@mvcView.restoreState(stateHolder) @AT@ 3327 @LENGTH@ 7
------------INS SimpleName@@MethodName:restoreState:[stateHolder] @TO@ MethodInvocation@@mvcView.restoreState(stateHolder) @AT@ 3335 @LENGTH@ 25
---------------INS SimpleName@@stateHolder @TO@ SimpleName@@MethodName:restoreState:[stateHolder] @AT@ 3348 @LENGTH@ 11


UPD CatchClause@@catch (Exception e) {  assertSame(ex,e);} @TO@ catch (Exception e) {  assertTrue(e instanceof RetryException);  assertSame(ex,e.getCause());} @AT@ 16176 @LENGTH@ 47
---UPD ExpressionStatement@@MethodInvocation:assertSame(ex,e) @TO@ MethodInvocation:assertSame(ex,e.getCause()) @AT@ 16201 @LENGTH@ 18
------UPD MethodInvocation@@assertSame(ex,e) @TO@ assertSame(ex,e.getCause()) @AT@ 16201 @LENGTH@ 17
---------UPD SimpleName@@MethodName:assertSame:[ex, e] @TO@ MethodName:assertSame:[ex, e.getCause()] @AT@ 16201 @LENGTH@ 17
------------DEL SimpleName@@e @AT@ 16216 @LENGTH@ 1
------------INS MethodInvocation@@e.getCause() @TO@ SimpleName@@MethodName:assertSame:[ex, e] @AT@ 16315 @LENGTH@ 12
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 16315 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 16317 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertTrue(e instanceof RetryException) @TO@ CatchClause@@catch (Exception e) {  assertSame(ex,e);} @AT@ 16256 @LENGTH@ 40
------INS MethodInvocation@@assertTrue(e instanceof RetryException) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(e instanceof RetryException) @AT@ 16256 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertTrue:[e instanceof RetryException] @TO@ MethodInvocation@@assertTrue(e instanceof RetryException) @AT@ 16256 @LENGTH@ 39
------------INS InstanceofExpression@@e instanceof RetryException @TO@ SimpleName@@MethodName:assertTrue:[e instanceof RetryException] @AT@ 16267 @LENGTH@ 27
---------------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof RetryException @AT@ 16267 @LENGTH@ 1
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof RetryException @AT@ 16269 @LENGTH@ 10
---------------INS SimpleType@@RetryException @TO@ InstanceofExpression@@e instanceof RetryException @AT@ 16280 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:context.recordResponseCommitted() @TO@ MethodInvocation:context.recordResponseComplete() @AT@ 6936 @LENGTH@ 34
---UPD MethodInvocation@@context.recordResponseCommitted() @TO@ context.recordResponseComplete() @AT@ 6936 @LENGTH@ 33
------UPD SimpleName@@MethodName:recordResponseCommitted:[] @TO@ MethodName:recordResponseComplete:[] @AT@ 6944 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:allEndpoint.expectedMessageCount(6) @TO@ MethodInvocation:allEndpoint.expectedMessageCount(1 + 5) @AT@ 1880 @LENGTH@ 36
---UPD MethodInvocation@@allEndpoint.expectedMessageCount(6) @TO@ allEndpoint.expectedMessageCount(1 + 5) @AT@ 1880 @LENGTH@ 35
------UPD SimpleName@@MethodName:expectedMessageCount:[6] @TO@ MethodName:expectedMessageCount:[1 + 5] @AT@ 1892 @LENGTH@ 23
---------DEL NumberLiteral@@6 @AT@ 1913 @LENGTH@ 1
---------INS InfixExpression@@1 + 5 @TO@ SimpleName@@MethodName:expectedMessageCount:[6] @AT@ 1952 @LENGTH@ 5
------------INS NumberLiteral@@1 @TO@ InfixExpression@@1 + 5 @AT@ 1952 @LENGTH@ 1
------------INS Operator@@+ @TO@ InfixExpression@@1 + 5 @AT@ 1953 @LENGTH@ 1
------------INS NumberLiteral@@5 @TO@ InfixExpression@@1 + 5 @AT@ 1956 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:assertNotNull(deserialized.getFailureExceptions()) @TO@ MethodDeclaration@@public, void, MethodName:testSerialization, Exception,  @AT@ 8228 @LENGTH@ 51
---INS MethodInvocation@@assertNotNull(deserialized.getFailureExceptions()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(deserialized.getFailureExceptions()) @AT@ 8228 @LENGTH@ 50
------INS SimpleName@@MethodName:assertNotNull:[deserialized.getFailureExceptions()] @TO@ MethodInvocation@@assertNotNull(deserialized.getFailureExceptions()) @AT@ 8228 @LENGTH@ 50
---------INS MethodInvocation@@deserialized.getFailureExceptions() @TO@ SimpleName@@MethodName:assertNotNull:[deserialized.getFailureExceptions()] @AT@ 8242 @LENGTH@ 35
------------INS SimpleName@@Name:deserialized @TO@ MethodInvocation@@deserialized.getFailureExceptions() @AT@ 8242 @LENGTH@ 12
------------INS SimpleName@@MethodName:getFailureExceptions:[] @TO@ MethodInvocation@@deserialized.getFailureExceptions() @AT@ 8255 @LENGTH@ 22


INS MethodDeclaration@@private, voidMethodName:CamelClientRemoting,  @TO@ TypeDeclaration@@[public, final]CamelClientRemoting,  @AT@ 1241 @LENGTH@ 60
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CamelClientRemoting,  @AT@ 1241 @LENGTH@ 7
---INS SimpleName@@MethodName:CamelClientRemoting @TO@ MethodDeclaration@@private, voidMethodName:CamelClientRemoting,  @AT@ 1249 @LENGTH@ 19


INS MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @TO@ TypeDeclaration@@[@XmlRootElement(name="intercept"), @XmlAccessorType(XmlAccessType.FIELD), public]InterceptType, OutputType<ProcessorType> @AT@ 3660 @LENGTH@ 425
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3660 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3668 @LENGTH@ 4
---INS SimpleName@@MethodName:proxifyProceed @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3673 @LENGTH@ 14
---INS SingleVariableDeclaration@@ProceedType orig @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3688 @LENGTH@ 16
------INS SimpleType@@ProceedType @TO@ SingleVariableDeclaration@@ProceedType orig @AT@ 3688 @LENGTH@ 11
------INS SimpleName@@orig @TO@ SingleVariableDeclaration@@ProceedType orig @AT@ 3700 @LENGTH@ 4
---INS SingleVariableDeclaration@@ProceedType proxy @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3706 @LENGTH@ 17
------INS SimpleType@@ProceedType @TO@ SingleVariableDeclaration@@ProceedType proxy @AT@ 3706 @LENGTH@ 11
------INS SimpleName@@proxy @TO@ SingleVariableDeclaration@@ProceedType proxy @AT@ 3718 @LENGTH@ 5
---INS SingleVariableDeclaration@@ProcessorType<?> processor @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3725 @LENGTH@ 26
------INS ParameterizedType@@ProcessorType<?> @TO@ SingleVariableDeclaration@@ProcessorType<?> processor @AT@ 3725 @LENGTH@ 16
---------INS SimpleType@@ProcessorType @TO@ ParameterizedType@@ProcessorType<?> @AT@ 3725 @LENGTH@ 13
---------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorType<?> @AT@ 3739 @LENGTH@ 1
------INS SimpleName@@processor @TO@ SingleVariableDeclaration@@ProcessorType<?> processor @AT@ 3742 @LENGTH@ 9
---INS VariableDeclarationStatement@@int index=processor.getOutputs().indexOf(orig); @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3760 @LENGTH@ 49
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int index=processor.getOutputs().indexOf(orig); @AT@ 3760 @LENGTH@ 3
------INS VariableDeclarationFragment@@index=processor.getOutputs().indexOf(orig) @TO@ VariableDeclarationStatement@@int index=processor.getOutputs().indexOf(orig); @AT@ 3764 @LENGTH@ 44
---------INS SimpleName@@index @TO@ VariableDeclarationFragment@@index=processor.getOutputs().indexOf(orig) @AT@ 3764 @LENGTH@ 5
---------INS MethodInvocation@@processor.getOutputs().indexOf(orig) @TO@ VariableDeclarationFragment@@index=processor.getOutputs().indexOf(orig) @AT@ 3772 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getOutputs:[] @TO@ MethodInvocation@@processor.getOutputs().indexOf(orig) @AT@ 3772 @LENGTH@ 22
------------INS SimpleName@@Name:processor @TO@ MethodInvocation@@processor.getOutputs().indexOf(orig) @AT@ 3772 @LENGTH@ 9
------------INS SimpleName@@MethodName:indexOf:[orig] @TO@ MethodInvocation@@processor.getOutputs().indexOf(orig) @AT@ 3795 @LENGTH@ 13
---------------INS SimpleName@@orig @TO@ SimpleName@@MethodName:indexOf:[orig] @AT@ 3803 @LENGTH@ 4
---INS IfStatement@@if (index >= 0) {  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @TO@ MethodDeclaration@@private, void, MethodName:proxifyProceed, ProceedType orig, ProceedType proxy, ProcessorType<?> processor,  @AT@ 3818 @LENGTH@ 261
------INS InfixExpression@@index >= 0 @TO@ IfStatement@@if (index >= 0) {  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @AT@ 3822 @LENGTH@ 10
---------INS SimpleName@@index @TO@ InfixExpression@@index >= 0 @AT@ 3822 @LENGTH@ 5
---------INS Operator@@>= @TO@ InfixExpression@@index >= 0 @AT@ 3827 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@index >= 0 @AT@ 3831 @LENGTH@ 1
------INS Block@@ThenBody:{  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @TO@ IfStatement@@if (index >= 0) {  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @AT@ 3834 @LENGTH@ 245
---------INS ExpressionStatement@@MethodInvocation:processor.addOutput(proxy) @TO@ Block@@ThenBody:{  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @AT@ 3899 @LENGTH@ 27
------------INS MethodInvocation@@processor.addOutput(proxy) @TO@ ExpressionStatement@@MethodInvocation:processor.addOutput(proxy) @AT@ 3899 @LENGTH@ 26
---------------INS SimpleName@@Name:processor @TO@ MethodInvocation@@processor.addOutput(proxy) @AT@ 3899 @LENGTH@ 9
---------------INS SimpleName@@MethodName:addOutput:[proxy] @TO@ MethodInvocation@@processor.addOutput(proxy) @AT@ 3909 @LENGTH@ 16
------------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:addOutput:[proxy] @AT@ 3919 @LENGTH@ 5
---------INS VariableDeclarationStatement@@List<ProcessorType<?>> outs=processor.getOutputs(); @TO@ Block@@ThenBody:{  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @AT@ 3948 @LENGTH@ 53
------------INS ParameterizedType@@List<ProcessorType<?>> @TO@ VariableDeclarationStatement@@List<ProcessorType<?>> outs=processor.getOutputs(); @AT@ 3948 @LENGTH@ 22
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<ProcessorType<?>> @AT@ 3948 @LENGTH@ 4
---------------INS ParameterizedType@@ProcessorType<?> @TO@ ParameterizedType@@List<ProcessorType<?>> @AT@ 3953 @LENGTH@ 16
------------------INS SimpleType@@ProcessorType @TO@ ParameterizedType@@ProcessorType<?> @AT@ 3953 @LENGTH@ 13
------------------INS WildcardType@@? @TO@ ParameterizedType@@ProcessorType<?> @AT@ 3967 @LENGTH@ 1
------------INS VariableDeclarationFragment@@outs=processor.getOutputs() @TO@ VariableDeclarationStatement@@List<ProcessorType<?>> outs=processor.getOutputs(); @AT@ 3971 @LENGTH@ 29
---------------INS SimpleName@@outs @TO@ VariableDeclarationFragment@@outs=processor.getOutputs() @AT@ 3971 @LENGTH@ 4
---------------INS MethodInvocation@@processor.getOutputs() @TO@ VariableDeclarationFragment@@outs=processor.getOutputs() @AT@ 3978 @LENGTH@ 22
------------------INS SimpleName@@Name:processor @TO@ MethodInvocation@@processor.getOutputs() @AT@ 3978 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getOutputs:[] @TO@ MethodInvocation@@processor.getOutputs() @AT@ 3988 @LENGTH@ 12
---------INS ExpressionStatement@@MethodInvocation:outs.remove(proxy) @TO@ Block@@ThenBody:{  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @AT@ 4014 @LENGTH@ 19
------------INS MethodInvocation@@outs.remove(proxy) @TO@ ExpressionStatement@@MethodInvocation:outs.remove(proxy) @AT@ 4014 @LENGTH@ 18
---------------INS SimpleName@@Name:outs @TO@ MethodInvocation@@outs.remove(proxy) @AT@ 4014 @LENGTH@ 4
---------------INS SimpleName@@MethodName:remove:[proxy] @TO@ MethodInvocation@@outs.remove(proxy) @AT@ 4019 @LENGTH@ 13
------------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:remove:[proxy] @AT@ 4026 @LENGTH@ 5
---------INS ExpressionStatement@@MethodInvocation:outs.set(index,proxy) @TO@ Block@@ThenBody:{  processor.addOutput(proxy);  List<ProcessorType<?>> outs=processor.getOutputs();  outs.remove(proxy);  outs.set(index,proxy);} @AT@ 4046 @LENGTH@ 23
------------INS MethodInvocation@@outs.set(index,proxy) @TO@ ExpressionStatement@@MethodInvocation:outs.set(index,proxy) @AT@ 4046 @LENGTH@ 22
---------------INS SimpleName@@Name:outs @TO@ MethodInvocation@@outs.set(index,proxy) @AT@ 4046 @LENGTH@ 4
---------------INS SimpleName@@MethodName:set:[index, proxy] @TO@ MethodInvocation@@outs.set(index,proxy) @AT@ 4051 @LENGTH@ 17
------------------INS SimpleName@@index @TO@ SimpleName@@MethodName:set:[index, proxy] @AT@ 4055 @LENGTH@ 5
------------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:set:[index, proxy] @AT@ 4062 @LENGTH@ 5


INS MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @TO@ TypeDeclaration@@[public]CxfSoapEndpoint, [Endpoint] @AT@ 5315 @LENGTH@ 66
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 5315 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 5322 @LENGTH@ 7
---INS SimpleName@@MethodName:isLenientProperties @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 5330 @LENGTH@ 19
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 5362 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5369 @LENGTH@ 5


DEL TryStatement@@try {  service.getConversionExecutor(List.class,ArrayList.class);  fail();} catch (ConversionExecutorNotFoundException e) {} @AT@ 1788 @LENGTH@ 150
---DEL ExpressionStatement@@MethodInvocation:service.getConversionExecutor(List.class,ArrayList.class) @AT@ 1797 @LENGTH@ 59
------DEL MethodInvocation@@service.getConversionExecutor(List.class,ArrayList.class) @AT@ 1797 @LENGTH@ 58
---------DEL SimpleName@@Name:service @AT@ 1797 @LENGTH@ 7
---------DEL SimpleName@@MethodName:getConversionExecutor:[List.class, ArrayList.class] @AT@ 1805 @LENGTH@ 50
------------DEL TypeLiteral@@List.class @AT@ 1827 @LENGTH@ 10
------------DEL TypeLiteral@@ArrayList.class @AT@ 1839 @LENGTH@ 15
---DEL ExpressionStatement@@MethodInvocation:fail() @AT@ 1860 @LENGTH@ 7
------DEL MethodInvocation@@MethodName:fail:[] @AT@ 1860 @LENGTH@ 6
---DEL CatchClause@@catch (ConversionExecutorNotFoundException e) {} @AT@ 1872 @LENGTH@ 66
------DEL SingleVariableDeclaration@@ConversionExecutorNotFoundException e @AT@ 1879 @LENGTH@ 37
---------DEL SimpleType@@ConversionExecutorNotFoundException @AT@ 1879 @LENGTH@ 35
---------DEL SimpleName@@e @AT@ 1915 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[public]FlowDefinitionHolder,  @AT@ 2833 @LENGTH@ 22
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2833 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2840 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2845 @LENGTH@ 7


UPD VariableDeclarationStatement@@JobInstance jobInstance=new JobInstance(new Long(1),new JobParameters(),"skipJob"); @TO@ JobInstance jobInstance=new JobInstance(1L,new JobParameters(),"skipJob"); @AT@ 2837 @LENGTH@ 87
---UPD VariableDeclarationFragment@@jobInstance=new JobInstance(new Long(1),new JobParameters(),"skipJob") @TO@ jobInstance=new JobInstance(1L,new JobParameters(),"skipJob") @AT@ 2849 @LENGTH@ 74
------UPD ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "skipJob"] @TO@ JobInstance[1L, new JobParameters(), "skipJob"] @AT@ 2863 @LENGTH@ 60
---------DEL ClassInstanceCreation@@Long[1] @AT@ 2879 @LENGTH@ 11
------------DEL New@@new @AT@ 2879 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 2883 @LENGTH@ 4
---------MOV NumberLiteral@@1 @TO@ ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "skipJob"] @AT@ 2888 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("seda:foo").to("dataset:foo") @TO@ MethodInvocation:from("direct:foo").to("dataset:foo") @AT@ 2947 @LENGTH@ 35
---UPD MethodInvocation@@from("seda:foo").to("dataset:foo") @TO@ from("direct:foo").to("dataset:foo") @AT@ 2947 @LENGTH@ 34
------UPD MethodInvocation@@MethodName:from:["seda:foo"] @TO@ MethodName:from:["direct:foo"] @AT@ 2947 @LENGTH@ 16
---------UPD StringLiteral@@"seda:foo" @TO@ "direct:foo" @AT@ 2952 @LENGTH@ 10


UPD TryStatement@@try {  Exchange newExchange=exchange.copy();  processor.process(newExchange);  return newExchange.getOut(true).getBody();} catch (Exception e) {  throw new RuntimeBeanExpressionException(exchange,beanName,method,e);} @TO@ try {  Exchange newExchange=exchange.copy();  if (!newExchange.getPattern().isOutCapable()) {    newExchange.setPattern(ExchangePattern.InOut);  }  processor.process(newExchange);  return newExchange.getOut(true).getBody();} catch (Exception e) {  throw new RuntimeBeanExpressionException(exchange,beanName,method,e);} @AT@ 1885 @LENGTH@ 283
---INS IfStatement@@if (!newExchange.getPattern().isOutCapable()) {  newExchange.setPattern(ExchangePattern.InOut);} @TO@ TryStatement@@try {  Exchange newExchange=exchange.copy();  processor.process(newExchange);  return newExchange.getOut(true).getBody();} catch (Exception e) {  throw new RuntimeBeanExpressionException(exchange,beanName,method,e);} @AT@ 2038 @LENGTH@ 124
------INS PrefixExpression@@!newExchange.getPattern().isOutCapable() @TO@ IfStatement@@if (!newExchange.getPattern().isOutCapable()) {  newExchange.setPattern(ExchangePattern.InOut);} @AT@ 2042 @LENGTH@ 40
---------INS Operator@@! @TO@ PrefixExpression@@!newExchange.getPattern().isOutCapable() @AT@ 2042 @LENGTH@ 1
---------INS MethodInvocation@@newExchange.getPattern().isOutCapable() @TO@ PrefixExpression@@!newExchange.getPattern().isOutCapable() @AT@ 2043 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getPattern:[] @TO@ MethodInvocation@@newExchange.getPattern().isOutCapable() @AT@ 2043 @LENGTH@ 24
------------INS SimpleName@@Name:newExchange @TO@ MethodInvocation@@newExchange.getPattern().isOutCapable() @AT@ 2043 @LENGTH@ 11
------------INS SimpleName@@MethodName:isOutCapable:[] @TO@ MethodInvocation@@newExchange.getPattern().isOutCapable() @AT@ 2068 @LENGTH@ 14
------INS Block@@ThenBody:{  newExchange.setPattern(ExchangePattern.InOut);} @TO@ IfStatement@@if (!newExchange.getPattern().isOutCapable()) {  newExchange.setPattern(ExchangePattern.InOut);} @AT@ 2084 @LENGTH@ 78
---------INS ExpressionStatement@@MethodInvocation:newExchange.setPattern(ExchangePattern.InOut) @TO@ Block@@ThenBody:{  newExchange.setPattern(ExchangePattern.InOut);} @AT@ 2102 @LENGTH@ 46
------------INS MethodInvocation@@newExchange.setPattern(ExchangePattern.InOut) @TO@ ExpressionStatement@@MethodInvocation:newExchange.setPattern(ExchangePattern.InOut) @AT@ 2102 @LENGTH@ 45
---------------INS SimpleName@@Name:newExchange @TO@ MethodInvocation@@newExchange.setPattern(ExchangePattern.InOut) @AT@ 2102 @LENGTH@ 11
---------------INS SimpleName@@MethodName:setPattern:[ExchangePattern.InOut] @TO@ MethodInvocation@@newExchange.setPattern(ExchangePattern.InOut) @AT@ 2114 @LENGTH@ 33
------------------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:setPattern:[ExchangePattern.InOut] @AT@ 2125 @LENGTH@ 21
---------------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2125 @LENGTH@ 15
---------------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2141 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:this.backOffs.add(new Long(backOffPeriod)) @TO@ MethodInvocation:this.backOffs.add(Long.valueOf(backOffPeriod)) @AT@ 1555 @LENGTH@ 43
---UPD MethodInvocation@@this.backOffs.add(new Long(backOffPeriod)) @TO@ this.backOffs.add(Long.valueOf(backOffPeriod)) @AT@ 1555 @LENGTH@ 42
------UPD SimpleName@@MethodName:add:[new Long(backOffPeriod)] @TO@ MethodName:add:[Long.valueOf(backOffPeriod)] @AT@ 1569 @LENGTH@ 28
---------INS MethodInvocation@@Long.valueOf(backOffPeriod) @TO@ SimpleName@@MethodName:add:[new Long(backOffPeriod)] @AT@ 1573 @LENGTH@ 27
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(backOffPeriod) @AT@ 1573 @LENGTH@ 4
------------INS SimpleName@@MethodName:valueOf:[backOffPeriod] @TO@ MethodInvocation@@Long.valueOf(backOffPeriod) @AT@ 1578 @LENGTH@ 22
---------------INS SimpleName@@backOffPeriod @TO@ SimpleName@@MethodName:valueOf:[backOffPeriod] @AT@ 1586 @LENGTH@ 13
---------DEL ClassInstanceCreation@@Long[backOffPeriod] @AT@ 1573 @LENGTH@ 23
------------DEL New@@new @AT@ 1573 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 1577 @LENGTH@ 4
------------DEL SimpleName@@backOffPeriod @AT@ 1582 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:testSetBogusValueWithCoersion,  @TO@ TypeDeclaration@@[public]OgnlExpressionParserTests, TestCase @AT@ 6003 @LENGTH@ 217
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSetBogusValueWithCoersion,  @AT@ 6003 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSetBogusValueWithCoersion,  @AT@ 6010 @LENGTH@ 4
---INS SimpleName@@MethodName:testSetBogusValueWithCoersion @TO@ MethodDeclaration@@public, void, MethodName:testSetBogusValueWithCoersion,  @AT@ 6015 @LENGTH@ 29
---INS VariableDeclarationStatement@@Expression e=parser.parseExpression("date",null); @TO@ MethodDeclaration@@public, void, MethodName:testSetBogusValueWithCoersion,  @AT@ 6051 @LENGTH@ 52
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression e=parser.parseExpression("date",null); @AT@ 6051 @LENGTH@ 10
------INS VariableDeclarationFragment@@e=parser.parseExpression("date",null) @TO@ VariableDeclarationStatement@@Expression e=parser.parseExpression("date",null); @AT@ 6062 @LENGTH@ 40
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=parser.parseExpression("date",null) @AT@ 6062 @LENGTH@ 1
---------INS MethodInvocation@@parser.parseExpression("date",null) @TO@ VariableDeclarationFragment@@e=parser.parseExpression("date",null) @AT@ 6066 @LENGTH@ 36
------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("date",null) @AT@ 6066 @LENGTH@ 6
------------INS SimpleName@@MethodName:parseExpression:["date", null] @TO@ MethodInvocation@@parser.parseExpression("date",null) @AT@ 6073 @LENGTH@ 29
---------------INS StringLiteral@@"date" @TO@ SimpleName@@MethodName:parseExpression:["date", null] @AT@ 6089 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseExpression:["date", null] @AT@ 6097 @LENGTH@ 4
---INS TryStatement@@try {  e.setValue(bean,"bogus");  fail("Should have failed tme");} catch (EvaluationException ex) {} @TO@ MethodDeclaration@@public, void, MethodName:testSetBogusValueWithCoersion,  @AT@ 6106 @LENGTH@ 111
------INS ExpressionStatement@@MethodInvocation:e.setValue(bean,"bogus") @TO@ TryStatement@@try {  e.setValue(bean,"bogus");  fail("Should have failed tme");} catch (EvaluationException ex) {} @AT@ 6115 @LENGTH@ 26
---------INS MethodInvocation@@e.setValue(bean,"bogus") @TO@ ExpressionStatement@@MethodInvocation:e.setValue(bean,"bogus") @AT@ 6115 @LENGTH@ 25
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.setValue(bean,"bogus") @AT@ 6115 @LENGTH@ 1
------------INS SimpleName@@MethodName:setValue:[bean, "bogus"] @TO@ MethodInvocation@@e.setValue(bean,"bogus") @AT@ 6117 @LENGTH@ 23
---------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:setValue:[bean, "bogus"] @AT@ 6126 @LENGTH@ 4
---------------INS StringLiteral@@"bogus" @TO@ SimpleName@@MethodName:setValue:[bean, "bogus"] @AT@ 6132 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:fail("Should have failed tme") @TO@ TryStatement@@try {  e.setValue(bean,"bogus");  fail("Should have failed tme");} catch (EvaluationException ex) {} @AT@ 6145 @LENGTH@ 31
---------INS MethodInvocation@@fail("Should have failed tme") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have failed tme") @AT@ 6145 @LENGTH@ 30
------------INS SimpleName@@MethodName:fail:["Should have failed tme"] @TO@ MethodInvocation@@fail("Should have failed tme") @AT@ 6145 @LENGTH@ 30
---------------INS StringLiteral@@"Should have failed tme" @TO@ SimpleName@@MethodName:fail:["Should have failed tme"] @AT@ 6150 @LENGTH@ 24
------INS CatchClause@@catch (EvaluationException ex) {} @TO@ TryStatement@@try {  e.setValue(bean,"bogus");  fail("Should have failed tme");} catch (EvaluationException ex) {} @AT@ 6181 @LENGTH@ 36
---------INS SingleVariableDeclaration@@EvaluationException ex @TO@ CatchClause@@catch (EvaluationException ex) {} @AT@ 6188 @LENGTH@ 22
------------INS SimpleType@@EvaluationException @TO@ SingleVariableDeclaration@@EvaluationException ex @AT@ 6188 @LENGTH@ 19
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@EvaluationException ex @AT@ 6208 @LENGTH@ 2


UPD ReturnStatement@@SimpleName:instance @TO@ SimpleName:INSTANCE @AT@ 1319 @LENGTH@ 16
---UPD SimpleName@@instance @TO@ INSTANCE @AT@ 1326 @LENGTH@ 8


UPD FieldDeclaration@@protected, long, [sleepForConnection=0] @TO@ protected, long, [sleepForConnection] @AT@ 1615 @LENGTH@ 38
---UPD VariableDeclarationFragment@@sleepForConnection=0 @TO@ sleepForConnection @AT@ 1630 @LENGTH@ 22
------DEL NumberLiteral@@0 @AT@ 1651 @LENGTH@ 1


UPD ConstructorInvocation@@this(lockFile,new DefaultFileRenamer(null,DEFAULT_LOCK_FILE_POSTFIX)); @TO@ this(lockFile,new DefaultFileRenamer(null,FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX)); @AT@ 1922 @LENGTH@ 72
---UPD ClassInstanceCreation@@DefaultFileRenamer[null, DEFAULT_LOCK_FILE_POSTFIX] @TO@ DefaultFileRenamer[null, FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX] @AT@ 1937 @LENGTH@ 55
------INS QualifiedName@@FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @TO@ ClassInstanceCreation@@DefaultFileRenamer[null, DEFAULT_LOCK_FILE_POSTFIX] @AT@ 1889 @LENGTH@ 38
---------INS SimpleName@@FileEndpoint @TO@ QualifiedName@@FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 1889 @LENGTH@ 12
---------INS SimpleName@@DEFAULT_LOCK_FILE_POSTFIX @TO@ QualifiedName@@FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 1902 @LENGTH@ 25
------DEL SimpleName@@DEFAULT_LOCK_FILE_POSTFIX @AT@ 1966 @LENGTH@ 25


INS TryStatement@@try {  Item item=in.getBody(Item.class);  dynamicQueryContext.setContextItem(item);} catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @TO@ MethodDeclaration@@protected, DynamicQueryContext, MethodName:createDynamicContext, Exchange exchange, Exception,  @AT@ 13186 @LENGTH@ 689
---MOV VariableDeclarationStatement@@Item item=in.getBody(Item.class); @TO@ TryStatement@@try {  Item item=in.getBody(Item.class);  dynamicQueryContext.setContextItem(item);} catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13096 @LENGTH@ 35
---MOV ExpressionStatement@@MethodInvocation:dynamicQueryContext.setContextItem(item) @TO@ TryStatement@@try {  Item item=in.getBody(Item.class);  dynamicQueryContext.setContextItem(item);} catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13202 @LENGTH@ 41
---INS CatchClause@@catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @TO@ TryStatement@@try {  Item item=in.getBody(Item.class);  dynamicQueryContext.setContextItem(item);} catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13304 @LENGTH@ 571
------INS SingleVariableDeclaration@@NoTypeConversionAvailableException e @TO@ CatchClause@@catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13311 @LENGTH@ 36
---------INS SimpleType@@NoTypeConversionAvailableException @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 13311 @LENGTH@ 34
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 13346 @LENGTH@ 1
------INS TryStatement@@try {  source=in.getBody(Source.class);} catch (NoTypeConversionAvailableException e2) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @TO@ CatchClause@@catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13363 @LENGTH@ 371
---------MOV ExpressionStatement@@Assignment:source=in.getBody(Source.class) @TO@ TryStatement@@try {  source=in.getBody(Source.class);} catch (NoTypeConversionAvailableException e2) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @AT@ 13273 @LENGTH@ 34
---------INS CatchClause@@catch (NoTypeConversionAvailableException e2) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @TO@ TryStatement@@try {  source=in.getBody(Source.class);} catch (NoTypeConversionAvailableException e2) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @AT@ 13434 @LENGTH@ 300
------------MOV IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("No body available on exchange so using an empty document: " + exchange);} @TO@ CatchClause@@catch (NoTypeConversionAvailableException e2) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @AT@ 13358 @LENGTH@ 149
------------INS SingleVariableDeclaration@@NoTypeConversionAvailableException e2 @TO@ CatchClause@@catch (NoTypeConversionAvailableException e2) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @AT@ 13441 @LENGTH@ 37
---------------INS SimpleType@@NoTypeConversionAvailableException @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e2 @AT@ 13441 @LENGTH@ 34
---------------INS SimpleName@@e2 @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e2 @AT@ 13476 @LENGTH@ 2
------------MOV ExpressionStatement@@Assignment:source=converter.toSource(converter.createDocument()) @TO@ CatchClause@@catch (NoTypeConversionAvailableException e2) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @AT@ 13524 @LENGTH@ 56
------MOV VariableDeclarationStatement@@DocumentInfo doc=getStaticQueryContext().buildDocument(source); @TO@ CatchClause@@catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13607 @LENGTH@ 65
------MOV ExpressionStatement@@MethodInvocation:dynamicQueryContext.setContextItem(doc) @TO@ CatchClause@@catch (NoTypeConversionAvailableException e) {  try {    source=in.getBody(Source.class);  } catch (  NoTypeConversionAvailableException e2) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13685 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:from("dataset:foo").multicast().to("mock:results").to("seda:foo") @TO@ MethodInvocation:from("dataset:foo").multicast().to("mock:results").to("direct:foo") @AT@ 2813 @LENGTH@ 116
---UPD MethodInvocation@@from("dataset:foo").multicast().to("mock:results").to("seda:foo") @TO@ from("dataset:foo").multicast().to("mock:results").to("direct:foo") @AT@ 2813 @LENGTH@ 115
------UPD SimpleName@@MethodName:to:["seda:foo"] @TO@ MethodName:to:["direct:foo"] @AT@ 2914 @LENGTH@ 14
---------UPD StringLiteral@@"seda:foo" @TO@ "direct:foo" @AT@ 2917 @LENGTH@ 10


INS MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ TypeDeclaration@@[public]DumpToXmlTest, ContextTestSupport @AT@ 1106 @LENGTH@ 116
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1106 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1116 @LENGTH@ 4
---INS SimpleName@@MethodName:setUp @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1121 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1136 @LENGTH@ 9
---MOV ExpressionStatement@@MethodInvocation:deleteDirectory("target/camel/dump") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1154 @LENGTH@ 37
---INS ExpressionStatement@@SuperMethodInvocation:super.setUp() @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 1202 @LENGTH@ 14
------INS SuperMethodInvocation@@super.setUp() @TO@ ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1202 @LENGTH@ 13
---------INS SimpleName@@MethodName:setUp:[] @TO@ SuperMethodInvocation@@super.setUp() @AT@ 1208 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("activemq:test.b?selector=cheese%3D'y'").to("mock:result") @TO@ MethodInvocation:from("activemq:test.b?selector=cheese='y'").to("mock:result") @AT@ 2547 @LENGTH@ 64
---UPD MethodInvocation@@from("activemq:test.b?selector=cheese%3D'y'").to("mock:result") @TO@ from("activemq:test.b?selector=cheese='y'").to("mock:result") @AT@ 2547 @LENGTH@ 63
------UPD MethodInvocation@@MethodName:from:["activemq:test.b?selector=cheese%3D'y'"] @TO@ MethodName:from:["activemq:test.b?selector=cheese='y'"] @AT@ 2547 @LENGTH@ 45
---------UPD StringLiteral@@"activemq:test.b?selector=cheese%3D'y'" @TO@ "activemq:test.b?selector=cheese='y'" @AT@ 2552 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:addPropertyAccessor, Class clazz, PropertyAccessor propertyAccessor,  @TO@ TypeDeclaration@@[public]OgnlExpressionParser, AbstractExpressionParser @AT@ 1393 @LENGTH@ 144
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addPropertyAccessor, Class clazz, PropertyAccessor propertyAccessor,  @AT@ 1393 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addPropertyAccessor, Class clazz, PropertyAccessor propertyAccessor,  @AT@ 1400 @LENGTH@ 4
---INS SimpleName@@MethodName:addPropertyAccessor @TO@ MethodDeclaration@@public, void, MethodName:addPropertyAccessor, Class clazz, PropertyAccessor propertyAccessor,  @AT@ 1405 @LENGTH@ 19
---INS SingleVariableDeclaration@@Class clazz @TO@ MethodDeclaration@@public, void, MethodName:addPropertyAccessor, Class clazz, PropertyAccessor propertyAccessor,  @AT@ 1425 @LENGTH@ 11
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class clazz @AT@ 1425 @LENGTH@ 5
------INS SimpleName@@clazz @TO@ SingleVariableDeclaration@@Class clazz @AT@ 1431 @LENGTH@ 5
---INS SingleVariableDeclaration@@PropertyAccessor propertyAccessor @TO@ MethodDeclaration@@public, void, MethodName:addPropertyAccessor, Class clazz, PropertyAccessor propertyAccessor,  @AT@ 1438 @LENGTH@ 33
------INS SimpleType@@PropertyAccessor @TO@ SingleVariableDeclaration@@PropertyAccessor propertyAccessor @AT@ 1438 @LENGTH@ 16
------INS SimpleName@@propertyAccessor @TO@ SingleVariableDeclaration@@PropertyAccessor propertyAccessor @AT@ 1455 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:OgnlRuntime.setPropertyAccessor(clazz,propertyAccessor) @TO@ MethodDeclaration@@public, void, MethodName:addPropertyAccessor, Class clazz, PropertyAccessor propertyAccessor,  @AT@ 1477 @LENGTH@ 57
------INS MethodInvocation@@OgnlRuntime.setPropertyAccessor(clazz,propertyAccessor) @TO@ ExpressionStatement@@MethodInvocation:OgnlRuntime.setPropertyAccessor(clazz,propertyAccessor) @AT@ 1477 @LENGTH@ 56
---------INS SimpleName@@Name:OgnlRuntime @TO@ MethodInvocation@@OgnlRuntime.setPropertyAccessor(clazz,propertyAccessor) @AT@ 1477 @LENGTH@ 11
---------INS SimpleName@@MethodName:setPropertyAccessor:[clazz, propertyAccessor] @TO@ MethodInvocation@@OgnlRuntime.setPropertyAccessor(clazz,propertyAccessor) @AT@ 1489 @LENGTH@ 44
------------INS SimpleName@@clazz @TO@ SimpleName@@MethodName:setPropertyAccessor:[clazz, propertyAccessor] @AT@ 1509 @LENGTH@ 5
------------INS SimpleName@@propertyAccessor @TO@ SimpleName@@MethodName:setPropertyAccessor:[clazz, propertyAccessor] @AT@ 1516 @LENGTH@ 16


UPD ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(e.getCause()) @TO@ ClassInstanceCreation:new RuntimeCamelException(e) @AT@ 20223 @LENGTH@ 46
---UPD ClassInstanceCreation@@RuntimeCamelException[e.getCause()] @TO@ RuntimeCamelException[e] @AT@ 20229 @LENGTH@ 39
------DEL MethodInvocation@@e.getCause() @AT@ 20255 @LENGTH@ 12
---------DEL SimpleName@@Name:e @AT@ 20255 @LENGTH@ 1
---------DEL SimpleName@@MethodName:getCause:[] @AT@ 20257 @LENGTH@ 10
------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeCamelException[e.getCause()] @AT@ 20255 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:definitionBuilder.addPropertyValue("conversionService",DefaultConversionService.getSharedInstance()) @TO@ MethodInvocation:definitionBuilder.addPropertyValue("conversionService",new DefaultConversionService()) @AT@ 2228 @LENGTH@ 102
---UPD MethodInvocation@@definitionBuilder.addPropertyValue("conversionService",DefaultConversionService.getSharedInstance()) @TO@ definitionBuilder.addPropertyValue("conversionService",new DefaultConversionService()) @AT@ 2228 @LENGTH@ 101
------UPD SimpleName@@MethodName:addPropertyValue:["conversionService", DefaultConversionService.getSharedInstance()] @TO@ MethodName:addPropertyValue:["conversionService", new DefaultConversionService()] @AT@ 2246 @LENGTH@ 83
---------DEL MethodInvocation@@DefaultConversionService.getSharedInstance() @AT@ 2284 @LENGTH@ 44
------------DEL SimpleName@@Name:DefaultConversionService @AT@ 2284 @LENGTH@ 24
------------DEL SimpleName@@MethodName:getSharedInstance:[] @AT@ 2309 @LENGTH@ 19
---------INS ClassInstanceCreation@@DefaultConversionService[] @TO@ SimpleName@@MethodName:addPropertyValue:["conversionService", DefaultConversionService.getSharedInstance()] @AT@ 2284 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 2284 @LENGTH@ 3
------------INS SimpleType@@DefaultConversionService @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 2288 @LENGTH@ 24


MOV FieldDeclaration@@protected, Binder<Node>, [binder] @TO@ TypeDeclaration@@[public]CamelNamespaceHandler, NamespaceHandlerSupport @AT@ 3241 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:channel.setName("input") @TO@ MethodInvocation:channel.setBeanName("input") @AT@ 13655 @LENGTH@ 25
---UPD MethodInvocation@@channel.setName("input") @TO@ channel.setBeanName("input") @AT@ 13655 @LENGTH@ 24
------UPD SimpleName@@MethodName:setName:["input"] @TO@ MethodName:setBeanName:["input"] @AT@ 13663 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:stepExecution.setId(new Long(stepExecutionIncrementer.nextLongValue())) @TO@ MethodInvocation:stepExecution.setId(stepExecutionIncrementer.nextLongValue()) @AT@ 4710 @LENGTH@ 72
---UPD MethodInvocation@@stepExecution.setId(new Long(stepExecutionIncrementer.nextLongValue())) @TO@ stepExecution.setId(stepExecutionIncrementer.nextLongValue()) @AT@ 4710 @LENGTH@ 71
------UPD SimpleName@@MethodName:setId:[new Long(stepExecutionIncrementer.nextLongValue())] @TO@ MethodName:setId:[stepExecutionIncrementer.nextLongValue()] @AT@ 4724 @LENGTH@ 57
---------DEL ClassInstanceCreation@@Long[stepExecutionIncrementer.nextLongValue()] @AT@ 4730 @LENGTH@ 50
------------DEL New@@new @AT@ 4730 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 4734 @LENGTH@ 4
------------DEL MethodInvocation@@stepExecutionIncrementer.nextLongValue() @AT@ 4739 @LENGTH@ 40
---------INS MethodInvocation@@stepExecutionIncrementer.nextLongValue() @TO@ SimpleName@@MethodName:setId:[new Long(stepExecutionIncrementer.nextLongValue())] @AT@ 4730 @LENGTH@ 40
------------MOV SimpleName@@Name:stepExecutionIncrementer @TO@ MethodInvocation@@stepExecutionIncrementer.nextLongValue() @AT@ 4739 @LENGTH@ 24
------------MOV SimpleName@@MethodName:nextLongValue:[] @TO@ MethodInvocation@@stepExecutionIncrementer.nextLongValue() @AT@ 4764 @LENGTH@ 15


MOV FieldDeclaration@@protected, String, [fileApplicationContextUri] @TO@ TypeDeclaration@@[public]DotMojo, AbstractMavenReport @AT@ 4116 @LENGTH@ 43


UPD SuperConstructorInvocation@@super("No type converter available to convert from type: " + (value != null ? value.getClass() : null) + " to the required type "+ type.getName()+ " with value "+ value);
 @TO@ super("No type converter available to convert from type: " + (value != null ? value.getClass() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value);
 @AT@ 1168 @LENGTH@ 187
---UPD InfixExpression@@"No type converter available to convert from type: " + (value != null ? value.getClass() : null) + " to the required type "+ type.getName()+ " with value "+ value @TO@ "No type converter available to convert from type: " + (value != null ? value.getClass() : null) + " to the required type: "+ type.getCanonicalName()+ " with value "+ value @AT@ 1174 @LENGTH@ 179
------UPD StringLiteral@@" to the required type " @TO@ " to the required type: " @AT@ 1287 @LENGTH@ 24
------UPD MethodInvocation@@type.getName() @TO@ type.getCanonicalName() @AT@ 1314 @LENGTH@ 14
---------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getCanonicalName:[] @AT@ 1319 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue(pe.hasPermission(user,new Object(),"read")) @TO@ MethodInvocation:assertTrue(pe.hasPermission(user,new Object(),"READ")) @AT@ 1945 @LENGTH@ 57
---UPD MethodInvocation@@assertTrue(pe.hasPermission(user,new Object(),"read")) @TO@ assertTrue(pe.hasPermission(user,new Object(),"READ")) @AT@ 1945 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertTrue:[pe.hasPermission(user,new Object(),"read")] @TO@ MethodName:assertTrue:[pe.hasPermission(user,new Object(),"READ")] @AT@ 1945 @LENGTH@ 56
---------UPD MethodInvocation@@pe.hasPermission(user,new Object(),"read") @TO@ pe.hasPermission(user,new Object(),"READ") @AT@ 1956 @LENGTH@ 44
------------UPD SimpleName@@MethodName:hasPermission:[user, new Object(), "read"] @TO@ MethodName:hasPermission:[user, new Object(), "READ"] @AT@ 1959 @LENGTH@ 41
---------------UPD StringLiteral@@"read" @TO@ "READ" @AT@ 1993 @LENGTH@ 6


UPD IfStatement@@if (context.inViewState()) {  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("View root restored for '" + viewName + "'");    }    view=createJsfView(viewRoot,lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    processTree(facesContext,view.getViewRoot());    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating view root for '" + viewName + "'");    }    view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    view.setRestored(false);  }} else {  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @TO@ if (context.inViewState()) {  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("UIViewRoot restored for '" + viewName + "'");    }    facesContext.setViewRoot(viewRoot);    processTree(facesContext,viewRoot);    view=createJsfView(viewRoot,lifecycle,context);    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating UIViewRoot from '" + viewName + "'");    }    viewRoot=viewHandler.createView(facesContext,viewName);    facesContext.setViewRoot(viewRoot);    view=createJsfView(viewRoot,lifecycle,context);    view.setRestored(false);  }} else {  if (logger.isDebugEnabled()) {    logger.debug("Creating transient UIViewRoot from '" + viewName + "'");  }  UIViewRoot viewRoot=viewHandler.createView(facesContext,viewName);  viewRoot.setTransient(true);  facesContext.setViewRoot(viewRoot);  view=createJsfView(viewRoot,lifecycle,context);  view.setRestored(false);} @AT@ 3825 @LENGTH@ 1051
---UPD Block@@ThenBody:{  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("View root restored for '" + viewName + "'");    }    view=createJsfView(viewRoot,lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    processTree(facesContext,view.getViewRoot());    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating view root for '" + viewName + "'");    }    view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);    facesContext.setViewRoot(view.getViewRoot());    view.setRestored(false);  }} @TO@ ThenBody:{  UIViewRoot viewRoot=viewHandler.restoreView(facesContext,viewName);  if (viewRoot != null) {    if (logger.isDebugEnabled()) {      logger.debug("UIViewRoot restored for '" + viewName + "'");    }    facesContext.setViewRoot(viewRoot);    processTree(facesContext,viewRoot);    view=createJsfView(viewRoot,lifecycle,context);    view.setRestored(true);  } else {    if (logger.isDebugEnabled()) {      logger.debug("Creating UIViewRoot from '" + viewName + "'");    }    viewRoot=viewHandler.createView(facesContext,viewName);    facesContext.setViewRoot(viewRoot);    view=createJsfView(viewRoot,lifecycle,context);    view.setRestored(false);  }} @AT@ 3852 @LENGTH@ 727
------UPD IfStatement@@if (viewRoot != null) {  if (logger.isDebugEnabled()) {    logger.debug("View root restored for '" + viewName + "'");  }  view=createJsfView(viewRoot,lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  processTree(facesContext,view.getViewRoot());  view.setRestored(true);} else {  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @TO@ if (viewRoot != null) {  if (logger.isDebugEnabled()) {    logger.debug("UIViewRoot restored for '" + viewName + "'");  }  facesContext.setViewRoot(viewRoot);  processTree(facesContext,viewRoot);  view=createJsfView(viewRoot,lifecycle,context);  view.setRestored(true);} else {  if (logger.isDebugEnabled()) {    logger.debug("Creating UIViewRoot from '" + viewName + "'");  }  viewRoot=viewHandler.createView(facesContext,viewName);  facesContext.setViewRoot(viewRoot);  view=createJsfView(viewRoot,lifecycle,context);  view.setRestored(false);} @AT@ 3935 @LENGTH@ 638
---------UPD Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("View root restored for '" + viewName + "'");  }  view=createJsfView(viewRoot,lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  processTree(facesContext,view.getViewRoot());  view.setRestored(true);} @TO@ ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("UIViewRoot restored for '" + viewName + "'");  }  facesContext.setViewRoot(viewRoot);  processTree(facesContext,viewRoot);  view=createJsfView(viewRoot,lifecycle,context);  view.setRestored(true);} @AT@ 3957 @LENGTH@ 312
------------UPD IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("View root restored for '" + viewName + "'");} @TO@ if (logger.isDebugEnabled()) {  logger.debug("UIViewRoot restored for '" + viewName + "'");} @AT@ 3965 @LENGTH@ 104
---------------UPD Block@@ThenBody:{  logger.debug("View root restored for '" + viewName + "'");} @TO@ ThenBody:{  logger.debug("UIViewRoot restored for '" + viewName + "'");} @AT@ 3994 @LENGTH@ 75
------------------UPD ExpressionStatement@@MethodInvocation:logger.debug("View root restored for '" + viewName + "'") @TO@ MethodInvocation:logger.debug("UIViewRoot restored for '" + viewName + "'") @AT@ 4003 @LENGTH@ 58
---------------------UPD MethodInvocation@@logger.debug("View root restored for '" + viewName + "'") @TO@ logger.debug("UIViewRoot restored for '" + viewName + "'") @AT@ 4003 @LENGTH@ 57
------------------------UPD SimpleName@@MethodName:debug:["View root restored for '" + viewName + "'"] @TO@ MethodName:debug:["UIViewRoot restored for '" + viewName + "'"] @AT@ 4010 @LENGTH@ 50
---------------------------UPD InfixExpression@@"View root restored for '" + viewName + "'" @TO@ "UIViewRoot restored for '" + viewName + "'" @AT@ 4016 @LENGTH@ 43
------------------------------UPD StringLiteral@@"View root restored for '" @TO@ "UIViewRoot restored for '" @AT@ 4016 @LENGTH@ 26
------------MOV ExpressionStatement@@Assignment:view=createJsfView(viewRoot,lifecycle,context) @TO@ Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("View root restored for '" + viewName + "'");  }  view=createJsfView(viewRoot,lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  processTree(facesContext,view.getViewRoot());  view.setRestored(true);} @AT@ 4076 @LENGTH@ 51
------------UPD ExpressionStatement@@MethodInvocation:facesContext.setViewRoot(view.getViewRoot()) @TO@ MethodInvocation:facesContext.setViewRoot(viewRoot) @AT@ 4134 @LENGTH@ 45
---------------UPD MethodInvocation@@facesContext.setViewRoot(view.getViewRoot()) @TO@ facesContext.setViewRoot(viewRoot) @AT@ 4134 @LENGTH@ 44
------------------UPD SimpleName@@MethodName:setViewRoot:[view.getViewRoot()] @TO@ MethodName:setViewRoot:[viewRoot] @AT@ 4147 @LENGTH@ 31
---------------------INS SimpleName@@viewRoot @TO@ SimpleName@@MethodName:setViewRoot:[view.getViewRoot()] @AT@ 4102 @LENGTH@ 8
---------------------DEL MethodInvocation@@view.getViewRoot() @AT@ 4159 @LENGTH@ 18
------------------------DEL SimpleName@@Name:view @AT@ 4159 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getViewRoot:[] @AT@ 4164 @LENGTH@ 13
------------UPD ExpressionStatement@@MethodInvocation:processTree(facesContext,view.getViewRoot()) @TO@ MethodInvocation:processTree(facesContext,viewRoot) @AT@ 4186 @LENGTH@ 46
---------------UPD MethodInvocation@@processTree(facesContext,view.getViewRoot()) @TO@ processTree(facesContext,viewRoot) @AT@ 4186 @LENGTH@ 45
------------------UPD SimpleName@@MethodName:processTree:[facesContext, view.getViewRoot()] @TO@ MethodName:processTree:[facesContext, viewRoot] @AT@ 4186 @LENGTH@ 45
---------------------INS SimpleName@@viewRoot @TO@ SimpleName@@MethodName:processTree:[facesContext, view.getViewRoot()] @AT@ 4145 @LENGTH@ 8
---------------------DEL MethodInvocation@@view.getViewRoot() @AT@ 4212 @LENGTH@ 18
------------------------DEL SimpleName@@Name:view @AT@ 4212 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getViewRoot:[] @AT@ 4217 @LENGTH@ 13
---------UPD Block@@ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @TO@ ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating UIViewRoot from '" + viewName + "'");  }  viewRoot=viewHandler.createView(facesContext,viewName);  facesContext.setViewRoot(viewRoot);  view=createJsfView(viewRoot,lifecycle,context);  view.setRestored(false);} @AT@ 4275 @LENGTH@ 298
------------UPD IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Creating view root for '" + viewName + "'");} @TO@ if (logger.isDebugEnabled()) {  logger.debug("Creating UIViewRoot from '" + viewName + "'");} @AT@ 4283 @LENGTH@ 104
---------------UPD Block@@ThenBody:{  logger.debug("Creating view root for '" + viewName + "'");} @TO@ ThenBody:{  logger.debug("Creating UIViewRoot from '" + viewName + "'");} @AT@ 4312 @LENGTH@ 75
------------------UPD ExpressionStatement@@MethodInvocation:logger.debug("Creating view root for '" + viewName + "'") @TO@ MethodInvocation:logger.debug("Creating UIViewRoot from '" + viewName + "'") @AT@ 4321 @LENGTH@ 58
---------------------UPD MethodInvocation@@logger.debug("Creating view root for '" + viewName + "'") @TO@ logger.debug("Creating UIViewRoot from '" + viewName + "'") @AT@ 4321 @LENGTH@ 57
------------------------UPD SimpleName@@MethodName:debug:["Creating view root for '" + viewName + "'"] @TO@ MethodName:debug:["Creating UIViewRoot from '" + viewName + "'"] @AT@ 4328 @LENGTH@ 50
---------------------------UPD InfixExpression@@"Creating view root for '" + viewName + "'" @TO@ "Creating UIViewRoot from '" + viewName + "'" @AT@ 4334 @LENGTH@ 43
------------------------------UPD StringLiteral@@"Creating view root for '" @TO@ "Creating UIViewRoot from '" @AT@ 4334 @LENGTH@ 26
------------UPD ExpressionStatement@@Assignment:view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context) @TO@ Assignment:viewRoot=viewHandler.createView(facesContext,viewName) @AT@ 4394 @LENGTH@ 89
---------------UPD Assignment@@view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context) @TO@ viewRoot=viewHandler.createView(facesContext,viewName) @AT@ 4394 @LENGTH@ 88
------------------UPD SimpleName@@view @TO@ viewRoot @AT@ 4394 @LENGTH@ 4
------------------DEL MethodInvocation@@createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context) @AT@ 4401 @LENGTH@ 81
---------------------DEL SimpleName@@MethodName:createJsfView:[viewHandler.createView(facesContext,viewName), lifecycle, context] @AT@ 4401 @LENGTH@ 81
------------------------DEL SimpleName@@lifecycle @AT@ 4463 @LENGTH@ 9
------------------------DEL SimpleName@@context @AT@ 4474 @LENGTH@ 7
------------------MOV MethodInvocation@@viewHandler.createView(facesContext,viewName) @TO@ Assignment@@view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context) @AT@ 4415 @LENGTH@ 46
------------INS ExpressionStatement@@Assignment:view=createJsfView(viewRoot,lifecycle,context) @TO@ Block@@ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @AT@ 4484 @LENGTH@ 51
---------------INS Assignment@@view=createJsfView(viewRoot,lifecycle,context) @TO@ ExpressionStatement@@Assignment:view=createJsfView(viewRoot,lifecycle,context) @AT@ 4484 @LENGTH@ 50
------------------INS SimpleName@@view @TO@ Assignment@@view=createJsfView(viewRoot,lifecycle,context) @AT@ 4484 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@view=createJsfView(viewRoot,lifecycle,context) @AT@ 4488 @LENGTH@ 1
------------------INS MethodInvocation@@createJsfView(viewRoot,lifecycle,context) @TO@ Assignment@@view=createJsfView(viewRoot,lifecycle,context) @AT@ 4491 @LENGTH@ 43
---------------------INS SimpleName@@MethodName:createJsfView:[viewRoot, lifecycle, context] @TO@ MethodInvocation@@createJsfView(viewRoot,lifecycle,context) @AT@ 4491 @LENGTH@ 43
------------------------INS SimpleName@@viewRoot @TO@ SimpleName@@MethodName:createJsfView:[viewRoot, lifecycle, context] @AT@ 4505 @LENGTH@ 8
------------------------INS SimpleName@@lifecycle @TO@ SimpleName@@MethodName:createJsfView:[viewRoot, lifecycle, context] @AT@ 4515 @LENGTH@ 9
------------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:createJsfView:[viewRoot, lifecycle, context] @AT@ 4526 @LENGTH@ 7
------------UPD ExpressionStatement@@MethodInvocation:facesContext.setViewRoot(view.getViewRoot()) @TO@ MethodInvocation:facesContext.setViewRoot(viewRoot) @AT@ 4490 @LENGTH@ 45
---------------UPD MethodInvocation@@facesContext.setViewRoot(view.getViewRoot()) @TO@ facesContext.setViewRoot(viewRoot) @AT@ 4490 @LENGTH@ 44
------------------UPD SimpleName@@MethodName:setViewRoot:[view.getViewRoot()] @TO@ MethodName:setViewRoot:[viewRoot] @AT@ 4503 @LENGTH@ 31
---------------------INS SimpleName@@viewRoot @TO@ SimpleName@@MethodName:setViewRoot:[view.getViewRoot()] @AT@ 4467 @LENGTH@ 8
---------------------DEL MethodInvocation@@view.getViewRoot() @AT@ 4515 @LENGTH@ 18
------------------------DEL SimpleName@@Name:view @AT@ 4515 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getViewRoot:[] @AT@ 4520 @LENGTH@ 13
---UPD Block@@ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @TO@ ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating transient UIViewRoot from '" + viewName + "'");  }  UIViewRoot viewRoot=viewHandler.createView(facesContext,viewName);  viewRoot.setTransient(true);  facesContext.setViewRoot(viewRoot);  view=createJsfView(viewRoot,lifecycle,context);  view.setRestored(false);} @AT@ 4585 @LENGTH@ 291
------UPD IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Creating view root for '" + viewName + "'");} @TO@ if (logger.isDebugEnabled()) {  logger.debug("Creating transient UIViewRoot from '" + viewName + "'");} @AT@ 4592 @LENGTH@ 102
---------UPD Block@@ThenBody:{  logger.debug("Creating view root for '" + viewName + "'");} @TO@ ThenBody:{  logger.debug("Creating transient UIViewRoot from '" + viewName + "'");} @AT@ 4621 @LENGTH@ 73
------------UPD ExpressionStatement@@MethodInvocation:logger.debug("Creating view root for '" + viewName + "'") @TO@ MethodInvocation:logger.debug("Creating transient UIViewRoot from '" + viewName + "'") @AT@ 4629 @LENGTH@ 58
---------------UPD MethodInvocation@@logger.debug("Creating view root for '" + viewName + "'") @TO@ logger.debug("Creating transient UIViewRoot from '" + viewName + "'") @AT@ 4629 @LENGTH@ 57
------------------UPD SimpleName@@MethodName:debug:["Creating view root for '" + viewName + "'"] @TO@ MethodName:debug:["Creating transient UIViewRoot from '" + viewName + "'"] @AT@ 4636 @LENGTH@ 50
---------------------UPD InfixExpression@@"Creating view root for '" + viewName + "'" @TO@ "Creating transient UIViewRoot from '" + viewName + "'" @AT@ 4642 @LENGTH@ 43
------------------------UPD StringLiteral@@"Creating view root for '" @TO@ "Creating transient UIViewRoot from '" @AT@ 4642 @LENGTH@ 26
------UPD ExpressionStatement@@Assignment:view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context) @TO@ Assignment:view=createJsfView(viewRoot,lifecycle,context) @AT@ 4700 @LENGTH@ 89
---------UPD Assignment@@view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context) @TO@ view=createJsfView(viewRoot,lifecycle,context) @AT@ 4700 @LENGTH@ 88
------------UPD MethodInvocation@@createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context) @TO@ createJsfView(viewRoot,lifecycle,context) @AT@ 4707 @LENGTH@ 81
---------------UPD SimpleName@@MethodName:createJsfView:[viewHandler.createView(facesContext,viewName), lifecycle, context] @TO@ MethodName:createJsfView:[viewRoot, lifecycle, context] @AT@ 4707 @LENGTH@ 81
------------------INS SimpleName@@viewRoot @TO@ SimpleName@@MethodName:createJsfView:[viewHandler.createView(facesContext,viewName), lifecycle, context] @AT@ 4883 @LENGTH@ 8
------INS VariableDeclarationStatement@@UIViewRoot viewRoot=viewHandler.createView(facesContext,viewName); @TO@ Block@@ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @AT@ 4712 @LENGTH@ 69
---------INS SimpleType@@UIViewRoot @TO@ VariableDeclarationStatement@@UIViewRoot viewRoot=viewHandler.createView(facesContext,viewName); @AT@ 4712 @LENGTH@ 10
---------INS VariableDeclarationFragment@@viewRoot=viewHandler.createView(facesContext,viewName) @TO@ VariableDeclarationStatement@@UIViewRoot viewRoot=viewHandler.createView(facesContext,viewName); @AT@ 4723 @LENGTH@ 57
------------MOV MethodInvocation@@viewHandler.createView(facesContext,viewName) @TO@ VariableDeclarationFragment@@viewRoot=viewHandler.createView(facesContext,viewName) @AT@ 4721 @LENGTH@ 46
------------INS SimpleName@@viewRoot @TO@ VariableDeclarationFragment@@viewRoot=viewHandler.createView(facesContext,viewName) @AT@ 4723 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:viewRoot.setTransient(true) @TO@ Block@@ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @AT@ 4787 @LENGTH@ 28
---------INS MethodInvocation@@viewRoot.setTransient(true) @TO@ ExpressionStatement@@MethodInvocation:viewRoot.setTransient(true) @AT@ 4787 @LENGTH@ 27
------------INS SimpleName@@Name:viewRoot @TO@ MethodInvocation@@viewRoot.setTransient(true) @AT@ 4787 @LENGTH@ 8
------------INS SimpleName@@MethodName:setTransient:[true] @TO@ MethodInvocation@@viewRoot.setTransient(true) @AT@ 4796 @LENGTH@ 18
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setTransient:[true] @AT@ 4809 @LENGTH@ 4
------DEL ExpressionStatement@@MethodInvocation:facesContext.setViewRoot(view.getViewRoot()) @AT@ 4795 @LENGTH@ 45
---------DEL MethodInvocation@@facesContext.setViewRoot(view.getViewRoot()) @AT@ 4795 @LENGTH@ 44
------------DEL SimpleName@@Name:facesContext @AT@ 4795 @LENGTH@ 12
------------DEL SimpleName@@MethodName:setViewRoot:[view.getViewRoot()] @AT@ 4808 @LENGTH@ 31
---------------DEL MethodInvocation@@view.getViewRoot() @AT@ 4820 @LENGTH@ 18
------------------DEL SimpleName@@Name:view @AT@ 4820 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getViewRoot:[] @AT@ 4825 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:facesContext.setViewRoot(viewRoot) @TO@ Block@@ElseBody:{  if (logger.isDebugEnabled()) {    logger.debug("Creating view root for '" + viewName + "'");  }  view=createJsfView(viewHandler.createView(facesContext,viewName),lifecycle,context);  facesContext.setViewRoot(view.getViewRoot());  view.setRestored(false);} @AT@ 4821 @LENGTH@ 35
---------INS MethodInvocation@@facesContext.setViewRoot(viewRoot) @TO@ ExpressionStatement@@MethodInvocation:facesContext.setViewRoot(viewRoot) @AT@ 4821 @LENGTH@ 34
------------INS SimpleName@@Name:facesContext @TO@ MethodInvocation@@facesContext.setViewRoot(viewRoot) @AT@ 4821 @LENGTH@ 12
------------INS SimpleName@@MethodName:setViewRoot:[viewRoot] @TO@ MethodInvocation@@facesContext.setViewRoot(viewRoot) @AT@ 4834 @LENGTH@ 21
---------------INS SimpleName@@viewRoot @TO@ SimpleName@@MethodName:setViewRoot:[viewRoot] @AT@ 4846 @LENGTH@ 8


UPD VariableDeclarationStatement@@JobParameters jobParameters=new JobParametersBuilder().addLong("commit.interval",new Long(2L)).toJobParameters(); @TO@ JobParameters jobParameters=new JobParametersBuilder().addLong("commit.interval",2L).toJobParameters(); @AT@ 1612 @LENGTH@ 116
---UPD VariableDeclarationFragment@@jobParameters=new JobParametersBuilder().addLong("commit.interval",new Long(2L)).toJobParameters() @TO@ jobParameters=new JobParametersBuilder().addLong("commit.interval",2L).toJobParameters() @AT@ 1626 @LENGTH@ 101
------UPD MethodInvocation@@new JobParametersBuilder().addLong("commit.interval",new Long(2L)).toJobParameters() @TO@ new JobParametersBuilder().addLong("commit.interval",2L).toJobParameters() @AT@ 1642 @LENGTH@ 85
---------UPD MethodInvocation@@MethodName:addLong:["commit.interval", new Long(2L)] @TO@ MethodName:addLong:["commit.interval", 2L] @AT@ 1642 @LENGTH@ 67
------------DEL ClassInstanceCreation@@Long[2L] @AT@ 1696 @LENGTH@ 12
---------------DEL New@@new @AT@ 1696 @LENGTH@ 3
---------------DEL SimpleType@@Long @AT@ 1700 @LENGTH@ 4
---------------DEL NumberLiteral@@2L @AT@ 1705 @LENGTH@ 2
------------INS NumberLiteral@@2L @TO@ MethodInvocation@@MethodName:addLong:["commit.interval", new Long(2L)] @AT@ 1696 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.2"),new FileSystemResource("src/main/resources/data/ioSample/input/delimited2.csv")) @TO@ MethodInvocation:AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.2"),new FileSystemResource("src/main/resources/data/iosample/input/delimited2.csv")) @AT@ 1628 @LENGTH@ 186
---UPD MethodInvocation@@AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.2"),new FileSystemResource("src/main/resources/data/ioSample/input/delimited2.csv")) @TO@ AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.2"),new FileSystemResource("src/main/resources/data/iosample/input/delimited2.csv")) @AT@ 1628 @LENGTH@ 185
------UPD SimpleName@@MethodName:assertFileEquals:[new FileSystemResource("target/test-outputs/multiResourceOutput.csv.2"), new FileSystemResource("src/main/resources/data/ioSample/input/delimited2.csv")] @TO@ MethodName:assertFileEquals:[new FileSystemResource("target/test-outputs/multiResourceOutput.csv.2"), new FileSystemResource("src/main/resources/data/iosample/input/delimited2.csv")] @AT@ 1639 @LENGTH@ 174
---------UPD ClassInstanceCreation@@FileSystemResource["src/main/resources/data/ioSample/input/delimited2.csv"] @TO@ FileSystemResource["src/main/resources/data/iosample/input/delimited2.csv"] @AT@ 1733 @LENGTH@ 79
------------UPD StringLiteral@@"src/main/resources/data/ioSample/input/delimited2.csv" @TO@ "src/main/resources/data/iosample/input/delimited2.csv" @AT@ 1756 @LENGTH@ 55


UPD FieldDeclaration@@private, static, final, String, [INPUT_FILE="src/main/resources/data/ioSample/input/multiRecordType.txt"] @TO@ private, static, final, String, [INPUT_FILE="src/main/resources/data/iosample/input/multiRecordType.txt"] @AT@ 1416 @LENGTH@ 102
---UPD VariableDeclarationFragment@@INPUT_FILE="src/main/resources/data/ioSample/input/multiRecordType.txt" @TO@ INPUT_FILE="src/main/resources/data/iosample/input/multiRecordType.txt" @AT@ 1444 @LENGTH@ 73
------UPD StringLiteral@@"src/main/resources/data/ioSample/input/multiRecordType.txt" @TO@ "src/main/resources/data/iosample/input/multiRecordType.txt" @AT@ 1457 @LENGTH@ 60


UPD FieldDeclaration@@private, static, final, transient, Log, [logger=LogFactory.getLog(IBatisEndpoint.class)] @TO@ private, static, final, transient, Log, [LOG=LogFactory.getLog(IBatisEndpoint.class)] @AT@ 1779 @LENGTH@ 84
---UPD VariableDeclarationFragment@@logger=LogFactory.getLog(IBatisEndpoint.class) @TO@ LOG=LogFactory.getLog(IBatisEndpoint.class) @AT@ 1814 @LENGTH@ 48
------UPD SimpleName@@logger @TO@ LOG @AT@ 1814 @LENGTH@ 6


INS MethodDeclaration@@boolean, MethodName:isLenientProperties,  @TO@ TypeDeclaration@@[public]Endpoint,  @AT@ 4707 @LENGTH@ 22
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:isLenientProperties,  @AT@ 4699 @LENGTH@ 7
---INS SimpleName@@MethodName:isLenientProperties @TO@ MethodDeclaration@@boolean, MethodName:isLenientProperties,  @AT@ 4707 @LENGTH@ 19


UPD IfStatement@@if (answer.startsWith("java.lang.")) {  return answer.substring(10);} @TO@ if (answer != null && answer.startsWith("java.lang.")) {  return answer.substring(10);} @AT@ 4048 @LENGTH@ 89
---INS InfixExpression@@answer != null && answer.startsWith("java.lang.") @TO@ IfStatement@@if (answer.startsWith("java.lang.")) {  return answer.substring(10);} @AT@ 4052 @LENGTH@ 49
------MOV MethodInvocation@@answer.startsWith("java.lang.") @TO@ InfixExpression@@answer != null && answer.startsWith("java.lang.") @AT@ 4052 @LENGTH@ 31
------INS InfixExpression@@answer != null @TO@ InfixExpression@@answer != null && answer.startsWith("java.lang.") @AT@ 4052 @LENGTH@ 14
---------INS SimpleName@@answer @TO@ InfixExpression@@answer != null @AT@ 4052 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@answer != null @AT@ 4058 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@answer != null @AT@ 4062 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@answer != null && answer.startsWith("java.lang.") @AT@ 4066 @LENGTH@ 2


UPD TypeDeclaration@@[private, final]MockRetryCallback, [RetryCallback<String>] @TO@ [private, static, final]MockRetryCallback, [RetryCallback<String>] @AT@ 3523 @LENGTH@ 263
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final]MockRetryCallback, [RetryCallback<String>] @AT@ 3531 @LENGTH@ 6


UPD VariableDeclarationStatement@@JobInstance jobInstance=new JobInstance(new Long(currentId++),jobParameters,jobName); @TO@ JobInstance jobInstance=new JobInstance(currentId++,jobParameters,jobName); @AT@ 996 @LENGTH@ 89
---UPD VariableDeclarationFragment@@jobInstance=new JobInstance(new Long(currentId++),jobParameters,jobName) @TO@ jobInstance=new JobInstance(currentId++,jobParameters,jobName) @AT@ 1008 @LENGTH@ 76
------UPD ClassInstanceCreation@@JobInstance[new Long(currentId++), jobParameters, jobName] @TO@ JobInstance[currentId++, jobParameters, jobName] @AT@ 1022 @LENGTH@ 62
---------DEL ClassInstanceCreation@@Long[currentId++] @AT@ 1038 @LENGTH@ 21
------------DEL New@@new @AT@ 1038 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 1042 @LENGTH@ 4
---------MOV PostfixExpression@@currentId++ @TO@ ClassInstanceCreation@@JobInstance[new Long(currentId++), jobParameters, jobName] @AT@ 1047 @LENGTH@ 11


UPD VariableDeclarationStatement@@HttpExchange exchange=endpoint.createExchange(); @TO@ HttpExchange exchange=(HttpExchange)endpoint.createExchange(); @AT@ 2034 @LENGTH@ 50
---UPD VariableDeclarationFragment@@exchange=endpoint.createExchange() @TO@ exchange=(HttpExchange)endpoint.createExchange() @AT@ 2047 @LENGTH@ 36
------INS CastExpression@@(HttpExchange)endpoint.createExchange() @TO@ VariableDeclarationFragment@@exchange=endpoint.createExchange() @AT@ 2058 @LENGTH@ 40
---------INS SimpleType@@HttpExchange @TO@ CastExpression@@(HttpExchange)endpoint.createExchange() @AT@ 2059 @LENGTH@ 12
---------INS MethodInvocation@@endpoint.createExchange() @TO@ CastExpression@@(HttpExchange)endpoint.createExchange() @AT@ 2073 @LENGTH@ 25
------------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.createExchange() @AT@ 2058 @LENGTH@ 8
------------MOV SimpleName@@MethodName:createExchange:[] @TO@ MethodInvocation@@endpoint.createExchange() @AT@ 2067 @LENGTH@ 16
------DEL MethodInvocation@@endpoint.createExchange() @AT@ 2058 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:validator.validate(new Integer(1)) @TO@ MethodInvocation:validator.validate(Integer.valueOf(1)) @AT@ 1539 @LENGTH@ 35
---UPD MethodInvocation@@validator.validate(new Integer(1)) @TO@ validator.validate(Integer.valueOf(1)) @AT@ 1539 @LENGTH@ 34
------UPD SimpleName@@MethodName:validate:[new Integer(1)] @TO@ MethodName:validate:[Integer.valueOf(1)] @AT@ 1549 @LENGTH@ 24
---------INS MethodInvocation@@Integer.valueOf(1) @TO@ SimpleName@@MethodName:validate:[new Integer(1)] @AT@ 1558 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 1558 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 1566 @LENGTH@ 10
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 1574 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[1] @AT@ 1558 @LENGTH@ 14
------------DEL New@@new @AT@ 1558 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 1562 @LENGTH@ 7
------------DEL NumberLiteral@@1 @AT@ 1570 @LENGTH@ 1


INS MethodDeclaration@@public, Type, MethodName:convertBodyTo, String typeString,  @TO@ TypeDeclaration@@[@XmlAccessorType(XmlAccessType.PROPERTY), public, abstract]ProcessorType, OptionalIdentifiedType<Type>[Block] @AT@ 51188 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, Type, MethodName:convertBodyTo, String typeString,  @AT@ 51188 @LENGTH@ 6
---INS SimpleType@@Type @TO@ MethodDeclaration@@public, Type, MethodName:convertBodyTo, String typeString,  @AT@ 51195 @LENGTH@ 4
---INS SimpleName@@MethodName:convertBodyTo @TO@ MethodDeclaration@@public, Type, MethodName:convertBodyTo, String typeString,  @AT@ 51200 @LENGTH@ 13
---INS SingleVariableDeclaration@@String typeString @TO@ MethodDeclaration@@public, Type, MethodName:convertBodyTo, String typeString,  @AT@ 51214 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String typeString @AT@ 51214 @LENGTH@ 6
------INS SimpleName@@typeString @TO@ SingleVariableDeclaration@@String typeString @AT@ 51221 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:addOutput(new ConvertBodyType(typeString)) @TO@ MethodDeclaration@@public, Type, MethodName:convertBodyTo, String typeString,  @AT@ 51243 @LENGTH@ 43
------INS MethodInvocation@@addOutput(new ConvertBodyType(typeString)) @TO@ ExpressionStatement@@MethodInvocation:addOutput(new ConvertBodyType(typeString)) @AT@ 51243 @LENGTH@ 42
---------INS SimpleName@@MethodName:addOutput:[new ConvertBodyType(typeString)] @TO@ MethodInvocation@@addOutput(new ConvertBodyType(typeString)) @AT@ 51243 @LENGTH@ 42
------------INS ClassInstanceCreation@@ConvertBodyType[typeString] @TO@ SimpleName@@MethodName:addOutput:[new ConvertBodyType(typeString)] @AT@ 51253 @LENGTH@ 31
---------------INS New@@new @TO@ ClassInstanceCreation@@ConvertBodyType[typeString] @AT@ 51253 @LENGTH@ 3
---------------INS SimpleType@@ConvertBodyType @TO@ ClassInstanceCreation@@ConvertBodyType[typeString] @AT@ 51257 @LENGTH@ 15
---------------INS SimpleName@@typeString @TO@ ClassInstanceCreation@@ConvertBodyType[typeString] @AT@ 51273 @LENGTH@ 10
---INS ReturnStatement@@CastExpression:(Type)this @TO@ MethodDeclaration@@public, Type, MethodName:convertBodyTo, String typeString,  @AT@ 51295 @LENGTH@ 19
------INS CastExpression@@(Type)this @TO@ ReturnStatement@@CastExpression:(Type)this @AT@ 51302 @LENGTH@ 11
---------INS SimpleType@@Type @TO@ CastExpression@@(Type)this @AT@ 51303 @LENGTH@ 4
---------INS ThisExpression@@this @TO@ CastExpression@@(Type)this @AT@ 51309 @LENGTH@ 4


UPD FieldDeclaration@@private, String, [port="20014"] @TO@ private, String, [port="20015"] @AT@ 1368 @LENGTH@ 30
---UPD VariableDeclarationFragment@@port="20014" @TO@ port="20015" @AT@ 1383 @LENGTH@ 14
------UPD StringLiteral@@"20014" @TO@ "20015" @AT@ 1390 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:setValues, Object item, PreparedStatement ps, SQLException,  @TO@ public, void, MethodName:setValues, Map<String,Object> item, PreparedStatement ps, SQLException,  @AT@ 1060 @LENGTH@ 455
---UPD SingleVariableDeclaration@@Object item @TO@ Map<String,Object> item @AT@ 1082 @LENGTH@ 11
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Object item @AT@ 1026 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1026 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1030 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1038 @LENGTH@ 6
------DEL SimpleType@@Object @AT@ 1082 @LENGTH@ 6
---INS EnhancedForStatement@@for (Object value : item.values()) {  StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,value);  counter++;} @TO@ MethodDeclaration@@public, void, MethodName:setValues, Object item, PreparedStatement ps, SQLException,  @AT@ 1223 @LENGTH@ 143
------INS SingleVariableDeclaration@@Object value @TO@ EnhancedForStatement@@for (Object value : item.values()) {  StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,value);  counter++;} @AT@ 1227 @LENGTH@ 12
---------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 1227 @LENGTH@ 6
---------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 1234 @LENGTH@ 5
------INS MethodInvocation@@item.values() @TO@ EnhancedForStatement@@for (Object value : item.values()) {  StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,value);  counter++;} @AT@ 1242 @LENGTH@ 13
---------MOV SimpleName@@Name:it @TO@ MethodInvocation@@item.values() @AT@ 1382 @LENGTH@ 2
---------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@item.values() @AT@ 1385 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,value) @TO@ EnhancedForStatement@@for (Object value : item.values()) {  StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,value);  counter++;} @AT@ 1261 @LENGTH@ 87
---------MOV MethodInvocation@@StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,entry.getValue()) @TO@ ExpressionStatement@@MethodInvocation:StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,value) @AT@ 1396 @LENGTH@ 97
------MOV ExpressionStatement@@PostfixExpression:counter++ @TO@ EnhancedForStatement@@for (Object value : item.values()) {  StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,value);  counter++;} @AT@ 1498 @LENGTH@ 10
---DEL VariableDeclarationStatement@@Set keySet=((Map)item).entrySet(); @AT@ 1247 @LENGTH@ 36
------DEL SimpleType@@Set @AT@ 1247 @LENGTH@ 3
------DEL VariableDeclarationFragment@@keySet=((Map)item).entrySet() @AT@ 1251 @LENGTH@ 31
---------DEL SimpleName@@keySet @AT@ 1251 @LENGTH@ 6
---------DEL MethodInvocation@@((Map)item).entrySet() @AT@ 1260 @LENGTH@ 22
------------DEL ParenthesizedExpression@@((Map)item) @AT@ 1260 @LENGTH@ 11
---------------DEL CastExpression@@(Map)item @AT@ 1261 @LENGTH@ 9
------------------DEL SimpleType@@Map @AT@ 1262 @LENGTH@ 3
------------------DEL SimpleName@@item @AT@ 1266 @LENGTH@ 4
------------DEL SimpleName@@MethodName:entrySet:[] @AT@ 1272 @LENGTH@ 10
---DEL ForStatement@@for (Iterator it=keySet.iterator(); it.hasNext(); ) {  Entry entry=(Entry)it.next();  StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,entry.getValue());  counter++;} @AT@ 1305 @LENGTH@ 207
------DEL VariableDeclarationExpression@@Iterator it=keySet.iterator() @AT@ 1309 @LENGTH@ 31
---------DEL SimpleType@@Iterator @AT@ 1309 @LENGTH@ 8
---------DEL VariableDeclarationFragment@@it=keySet.iterator() @AT@ 1318 @LENGTH@ 22
------------DEL SimpleName@@it @AT@ 1318 @LENGTH@ 2
------------DEL MethodInvocation@@keySet.iterator() @AT@ 1323 @LENGTH@ 17
---------------DEL SimpleName@@Name:keySet @AT@ 1323 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:iterator:[] @AT@ 1330 @LENGTH@ 10
------DEL MethodInvocation@@it.hasNext() @AT@ 1342 @LENGTH@ 12
---------DEL SimpleName@@Name:it @AT@ 1342 @LENGTH@ 2
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 1345 @LENGTH@ 9
------DEL VariableDeclarationStatement@@Entry entry=(Entry)it.next(); @AT@ 1361 @LENGTH@ 31
---------DEL SimpleType@@Entry @AT@ 1361 @LENGTH@ 5
---------DEL VariableDeclarationFragment@@entry=(Entry)it.next() @AT@ 1367 @LENGTH@ 24
------------DEL SimpleName@@entry @AT@ 1367 @LENGTH@ 5
------------DEL CastExpression@@(Entry)it.next() @AT@ 1375 @LENGTH@ 16
---------------DEL SimpleType@@Entry @AT@ 1376 @LENGTH@ 5
---------------DEL MethodInvocation@@it.next() @AT@ 1382 @LENGTH@ 9
------DEL ExpressionStatement@@MethodInvocation:StatementCreatorUtils.setParameterValue(ps,counter,SqlTypeValue.TYPE_UNKNOWN,entry.getValue()) @AT@ 1396 @LENGTH@ 98


DEL MethodDeclaration@@public, void, MethodName:processUserEvent,  @AT@ 1746 @LENGTH@ 278
---DEL Modifier@@public @AT@ 1746 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1753 @LENGTH@ 4
---DEL SimpleName@@MethodName:processUserEvent @AT@ 1758 @LENGTH@ 16
---DEL ExpressionStatement@@SuperMethodInvocation:super.processUserEvent() @AT@ 1781 @LENGTH@ 25
------DEL SuperMethodInvocation@@super.processUserEvent() @AT@ 1781 @LENGTH@ 24
---------DEL SimpleName@@MethodName:processUserEvent:[] @AT@ 1787 @LENGTH@ 16
---DEL VariableDeclarationStatement@@MappingResultsHolder holder=new MappingResultsHolder(getEventId(),getMappingResults(),getViewErrors()); @AT@ 1809 @LENGTH@ 107
------DEL SimpleType@@MappingResultsHolder @AT@ 1809 @LENGTH@ 20
------DEL VariableDeclarationFragment@@holder=new MappingResultsHolder(getEventId(),getMappingResults(),getViewErrors()) @AT@ 1830 @LENGTH@ 85
---------DEL SimpleName@@holder @AT@ 1830 @LENGTH@ 6
---------DEL ClassInstanceCreation@@MappingResultsHolder[getEventId(), getMappingResults(), getViewErrors()] @AT@ 1839 @LENGTH@ 76
------------DEL New@@new @AT@ 1839 @LENGTH@ 3
------------DEL SimpleType@@MappingResultsHolder @AT@ 1843 @LENGTH@ 20
------------DEL MethodInvocation@@MethodName:getEventId:[] @AT@ 1864 @LENGTH@ 12
------------DEL MethodInvocation@@MethodName:getMappingResults:[] @AT@ 1878 @LENGTH@ 19
------------DEL MethodInvocation@@MethodName:getViewErrors:[] @AT@ 1899 @LENGTH@ 15
---DEL ExpressionStatement@@MethodInvocation:this.getRequestContext().getFlashScope().put(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY,holder) @AT@ 1919 @LENGTH@ 102
------DEL MethodInvocation@@this.getRequestContext().getFlashScope().put(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY,holder) @AT@ 1919 @LENGTH@ 101
---------DEL MethodInvocation@@MethodName:getFlashScope:[] @AT@ 1919 @LENGTH@ 40
---------DEL MethodInvocation@@MethodName:getRequestContext:[] @AT@ 1919 @LENGTH@ 24
---------DEL ThisExpression@@this @AT@ 1919 @LENGTH@ 4
---------DEL SimpleName@@MethodName:put:[MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY, holder] @AT@ 1960 @LENGTH@ 60
------------DEL QualifiedName@@MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY @AT@ 1964 @LENGTH@ 47
---------------DEL SimpleName@@MappingResultsHolder @AT@ 1964 @LENGTH@ 20
---------------DEL SimpleName@@MAPPING_RESULTS_HOLDER_KEY @AT@ 1985 @LENGTH@ 26
------------DEL SimpleName@@holder @AT@ 2013 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:fullLengthOfHashIsUsedInComparison, Exception,  @TO@ TypeDeclaration@@[public]LdapShaPasswordEncoderTests,  @AT@ 3226 @LENGTH@ 401
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:fullLengthOfHashIsUsedInComparison, Exception,  @AT@ 3226 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:fullLengthOfHashIsUsedInComparison, Exception,  @AT@ 3233 @LENGTH@ 4
---INS SimpleName@@MethodName:fullLengthOfHashIsUsedInComparison @TO@ MethodDeclaration@@public, void, MethodName:fullLengthOfHashIsUsedInComparison, Exception,  @AT@ 3238 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:fullLengthOfHashIsUsedInComparison, Exception,  @AT@ 3282 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertFalse(sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null)) @TO@ MethodDeclaration@@public, void, MethodName:fullLengthOfHashIsUsedInComparison, Exception,  @AT@ 3361 @LENGTH@ 98
------INS MethodInvocation@@assertFalse(sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null)) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null)) @AT@ 3361 @LENGTH@ 97
---------INS SimpleName@@MethodName:assertFalse:[sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null)] @TO@ MethodInvocation@@assertFalse(sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null)) @AT@ 3361 @LENGTH@ 97
------------INS MethodInvocation@@sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null) @TO@ SimpleName@@MethodName:assertFalse:[sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null)] @AT@ 3373 @LENGTH@ 84
---------------INS SimpleName@@Name:sha @TO@ MethodInvocation@@sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null) @AT@ 3373 @LENGTH@ 3
---------------INS SimpleName@@MethodName:isPasswordValid:["{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX", "boabspasswurd", null] @TO@ MethodInvocation@@sha.isPasswordValid("{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX","boabspasswurd",null) @AT@ 3377 @LENGTH@ 80
------------------INS StringLiteral@@"{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX" @TO@ SimpleName@@MethodName:isPasswordValid:["{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX", "boabspasswurd", null] @AT@ 3393 @LENGTH@ 40
------------------INS StringLiteral@@"boabspasswurd" @TO@ SimpleName@@MethodName:isPasswordValid:["{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX", "boabspasswurd", null] @AT@ 3435 @LENGTH@ 15
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:isPasswordValid:["{SSHA}35ro4PKC8jhQZ26jVsozhX/xaP0suHgX", "boabspasswurd", null] @AT@ 3452 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertFalse(sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null)) @TO@ MethodDeclaration@@public, void, MethodName:fullLengthOfHashIsUsedInComparison, Exception,  @AT@ 3523 @LENGTH@ 98
------INS MethodInvocation@@assertFalse(sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null)) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null)) @AT@ 3523 @LENGTH@ 97
---------INS SimpleName@@MethodName:assertFalse:[sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null)] @TO@ MethodInvocation@@assertFalse(sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null)) @AT@ 3523 @LENGTH@ 97
------------INS MethodInvocation@@sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null) @TO@ SimpleName@@MethodName:assertFalse:[sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null)] @AT@ 3535 @LENGTH@ 84
---------------INS SimpleName@@Name:sha @TO@ MethodInvocation@@sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null) @AT@ 3535 @LENGTH@ 3
---------------INS SimpleName@@MethodName:isPasswordValid:["{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY", "boabspasswurd", null] @TO@ MethodInvocation@@sha.isPasswordValid("{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY","boabspasswurd",null) @AT@ 3539 @LENGTH@ 80
------------------INS StringLiteral@@"{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY" @TO@ SimpleName@@MethodName:isPasswordValid:["{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY", "boabspasswurd", null] @AT@ 3555 @LENGTH@ 40
------------------INS StringLiteral@@"boabspasswurd" @TO@ SimpleName@@MethodName:isPasswordValid:["{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY", "boabspasswurd", null] @AT@ 3597 @LENGTH@ 15
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:isPasswordValid:["{SSHA}25ro4PKC8jhQZ26jVsozhX/xaP0suHgY", "boabspasswurd", null] @AT@ 3614 @LENGTH@ 4


UPD MethodDeclaration@@public, CxfExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 3265 @LENGTH@ 126
---UPD SimpleType@@CxfExchange @TO@ Exchange @AT@ 3272 @LENGTH@ 11


UPD MethodDeclaration@@public, int, MethodName:getStepExecutionCount, JobInstance jobInstance, Step step,  @TO@ public, int, MethodName:getStepExecutionCount, JobInstance jobInstance, String stepName,  @AT@ 11697 @LENGTH@ 347
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 11755 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 11755 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 11760 @LENGTH@ 4
---UPD EnhancedForStatement@@for (JobExecution jobExecution : jobExecutions) {  if (stepExecutionDao.getStepExecution(jobExecution,step.getName()) != null) {    count++;  }} @TO@ for (JobExecution jobExecution : jobExecutions) {  if (stepExecutionDao.getStepExecution(jobExecution,stepName) != null) {    count++;  }} @AT@ 11872 @LENGTH@ 153
------UPD IfStatement@@if (stepExecutionDao.getStepExecution(jobExecution,step.getName()) != null) {  count++;} @TO@ if (stepExecutionDao.getStepExecution(jobExecution,stepName) != null) {  count++;} @AT@ 11925 @LENGTH@ 96
---------UPD InfixExpression@@stepExecutionDao.getStepExecution(jobExecution,step.getName()) != null @TO@ stepExecutionDao.getStepExecution(jobExecution,stepName) != null @AT@ 11929 @LENGTH@ 71
------------UPD MethodInvocation@@stepExecutionDao.getStepExecution(jobExecution,step.getName()) @TO@ stepExecutionDao.getStepExecution(jobExecution,stepName) @AT@ 11929 @LENGTH@ 63
---------------UPD SimpleName@@MethodName:getStepExecution:[jobExecution, step.getName()] @TO@ MethodName:getStepExecution:[jobExecution, stepName] @AT@ 11946 @LENGTH@ 46
------------------INS SimpleName@@stepName @TO@ SimpleName@@MethodName:getStepExecution:[jobExecution, step.getName()] @AT@ 11939 @LENGTH@ 8
------------------DEL MethodInvocation@@step.getName() @AT@ 11977 @LENGTH@ 14
---------------------DEL SimpleName@@Name:step @AT@ 11977 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getName:[] @AT@ 11982 @LENGTH@ 9


DEL ExpressionStatement@@Assignment:msg=ex.getMessage() @AT@ 24707 @LENGTH@ 22
---DEL Assignment@@msg=ex.getMessage() @AT@ 24707 @LENGTH@ 21
------DEL SimpleName@@msg @AT@ 24707 @LENGTH@ 3
------DEL Operator@@= @AT@ 24710 @LENGTH@ 1
------DEL MethodInvocation@@ex.getMessage() @AT@ 24713 @LENGTH@ 15
---------DEL SimpleName@@Name:ex @AT@ 24713 @LENGTH@ 2
---------DEL SimpleName@@MethodName:getMessage:[] @AT@ 24716 @LENGTH@ 12


UPD ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(e.getCause()) @TO@ ClassInstanceCreation:new RuntimeCamelException() @AT@ 20747 @LENGTH@ 46
---UPD ClassInstanceCreation@@RuntimeCamelException[e.getCause()] @TO@ RuntimeCamelException[] @AT@ 20753 @LENGTH@ 39
------DEL MethodInvocation@@e.getCause() @AT@ 20779 @LENGTH@ 12
---------DEL SimpleName@@Name:e @AT@ 20779 @LENGTH@ 1
---------DEL SimpleName@@MethodName:getCause:[] @AT@ 20781 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:jobExecution.setId(new Long(jobExecutionIncrementer.nextLongValue())) @TO@ MethodInvocation:jobExecution.setId(jobExecutionIncrementer.nextLongValue()) @AT@ 5427 @LENGTH@ 70
---UPD MethodInvocation@@jobExecution.setId(new Long(jobExecutionIncrementer.nextLongValue())) @TO@ jobExecution.setId(jobExecutionIncrementer.nextLongValue()) @AT@ 5427 @LENGTH@ 69
------UPD SimpleName@@MethodName:setId:[new Long(jobExecutionIncrementer.nextLongValue())] @TO@ MethodName:setId:[jobExecutionIncrementer.nextLongValue()] @AT@ 5440 @LENGTH@ 56
---------DEL ClassInstanceCreation@@Long[jobExecutionIncrementer.nextLongValue()] @AT@ 5446 @LENGTH@ 49
------------DEL New@@new @AT@ 5446 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 5450 @LENGTH@ 4
------------DEL MethodInvocation@@jobExecutionIncrementer.nextLongValue() @AT@ 5455 @LENGTH@ 39
---------INS MethodInvocation@@jobExecutionIncrementer.nextLongValue() @TO@ SimpleName@@MethodName:setId:[new Long(jobExecutionIncrementer.nextLongValue())] @AT@ 5446 @LENGTH@ 39
------------MOV SimpleName@@Name:jobExecutionIncrementer @TO@ MethodInvocation@@jobExecutionIncrementer.nextLongValue() @AT@ 5455 @LENGTH@ 23
------------MOV SimpleName@@MethodName:nextLongValue:[] @TO@ MethodInvocation@@jobExecutionIncrementer.nextLongValue() @AT@ 5479 @LENGTH@ 15


UPD VariableDeclarationStatement@@long requestTimeout=endpoint.getRequestTimeout(); @TO@ long requestTimeout=endpoint.getConfiguration().getRequestTimeout(); @AT@ 7985 @LENGTH@ 51
---UPD VariableDeclarationFragment@@requestTimeout=endpoint.getRequestTimeout() @TO@ requestTimeout=endpoint.getConfiguration().getRequestTimeout() @AT@ 7990 @LENGTH@ 45
------UPD MethodInvocation@@endpoint.getRequestTimeout() @TO@ endpoint.getConfiguration().getRequestTimeout() @AT@ 8007 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@endpoint.getRequestTimeout() @AT@ 8007 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisifed() @TO@ MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1480 @LENGTH@ 31
---UPD MethodInvocation@@MethodName:assertMockEndpointsSatisifed:[] @TO@ MethodName:assertMockEndpointsSatisfied:[] @AT@ 1480 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:testDoubleAmpersand, Exception,  @TO@ TypeDeclaration@@[public]DefaultComponentValidateURITest, ContextTestSupport @AT@ 1932 @LENGTH@ 294
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDoubleAmpersand, Exception,  @AT@ 1932 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDoubleAmpersand, Exception,  @AT@ 1939 @LENGTH@ 4
---INS SimpleName@@MethodName:testDoubleAmpersand @TO@ MethodDeclaration@@public, void, MethodName:testDoubleAmpersand, Exception,  @AT@ 1944 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDoubleAmpersand, Exception,  @AT@ 1973 @LENGTH@ 9
---INS TryStatement@@try {  context.getEndpoint("timer://foo?delay=250&&period=500");  fail("Should have thrown ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testDoubleAmpersand, Exception,  @AT@ 1993 @LENGTH@ 227
------INS ExpressionStatement@@MethodInvocation:context.getEndpoint("timer://foo?delay=250&&period=500") @TO@ TryStatement@@try {  context.getEndpoint("timer://foo?delay=250&&period=500");  fail("Should have thrown ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {} @AT@ 2011 @LENGTH@ 57
---------INS MethodInvocation@@context.getEndpoint("timer://foo?delay=250&&period=500") @TO@ ExpressionStatement@@MethodInvocation:context.getEndpoint("timer://foo?delay=250&&period=500") @AT@ 2011 @LENGTH@ 56
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("timer://foo?delay=250&&period=500") @AT@ 2011 @LENGTH@ 7
------------INS SimpleName@@MethodName:getEndpoint:["timer://foo?delay=250&&period=500"] @TO@ MethodInvocation@@context.getEndpoint("timer://foo?delay=250&&period=500") @AT@ 2019 @LENGTH@ 48
---------------INS StringLiteral@@"timer://foo?delay=250&&period=500" @TO@ SimpleName@@MethodName:getEndpoint:["timer://foo?delay=250&&period=500"] @AT@ 2031 @LENGTH@ 35
------INS ExpressionStatement@@MethodInvocation:fail("Should have thrown ResolveEndpointFailedException") @TO@ TryStatement@@try {  context.getEndpoint("timer://foo?delay=250&&period=500");  fail("Should have thrown ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {} @AT@ 2081 @LENGTH@ 58
---------INS MethodInvocation@@fail("Should have thrown ResolveEndpointFailedException") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown ResolveEndpointFailedException") @AT@ 2081 @LENGTH@ 57
------------INS SimpleName@@MethodName:fail:["Should have thrown ResolveEndpointFailedException"] @TO@ MethodInvocation@@fail("Should have thrown ResolveEndpointFailedException") @AT@ 2081 @LENGTH@ 57
---------------INS StringLiteral@@"Should have thrown ResolveEndpointFailedException" @TO@ SimpleName@@MethodName:fail:["Should have thrown ResolveEndpointFailedException"] @AT@ 2086 @LENGTH@ 51
------INS CatchClause@@catch (ResolveEndpointFailedException e) {} @TO@ TryStatement@@try {  context.getEndpoint("timer://foo?delay=250&&period=500");  fail("Should have thrown ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {} @AT@ 2150 @LENGTH@ 70
---------INS SingleVariableDeclaration@@ResolveEndpointFailedException e @TO@ CatchClause@@catch (ResolveEndpointFailedException e) {} @AT@ 2157 @LENGTH@ 32
------------INS SimpleType@@ResolveEndpointFailedException @TO@ SingleVariableDeclaration@@ResolveEndpointFailedException e @AT@ 2157 @LENGTH@ 30
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ResolveEndpointFailedException e @AT@ 2188 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiLine.xml"}), public]MultiLineFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/multiLine.xml"}), public]MultiLineFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 650
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiLine.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/multiLine.xml"}) @AT@ 1112 @LENGTH@ 132


UPD VariableDeclarationStatement@@ExpressionType predicateType=getCompletePredicate(); @TO@ ExpressionType predicateType=getHandledPredicate(); @AT@ 2078 @LENGTH@ 54
---UPD VariableDeclarationFragment@@predicateType=getCompletePredicate() @TO@ predicateType=getHandledPredicate() @AT@ 2093 @LENGTH@ 38
------UPD MethodInvocation@@MethodName:getCompletePredicate:[] @TO@ MethodName:getHandledPredicate:[] @AT@ 2109 @LENGTH@ 22


UPD MethodDeclaration@@public, boolean, MethodName:getStreaming,  @TO@ public, boolean, MethodName:isStreaming,  @AT@ 3975 @LENGTH@ 91
---UPD SimpleName@@MethodName:getStreaming @TO@ MethodName:isStreaming @AT@ 3990 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.1"),new FileSystemResource("src/main/resources/data/ioSample/input/delimited.csv")) @TO@ MethodInvocation:AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.1"),new FileSystemResource("src/main/resources/data/iosample/input/delimited.csv")) @AT@ 1440 @LENGTH@ 185
---UPD MethodInvocation@@AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.1"),new FileSystemResource("src/main/resources/data/ioSample/input/delimited.csv")) @TO@ AssertFile.assertFileEquals(new FileSystemResource("target/test-outputs/multiResourceOutput.csv.1"),new FileSystemResource("src/main/resources/data/iosample/input/delimited.csv")) @AT@ 1440 @LENGTH@ 184
------UPD SimpleName@@MethodName:assertFileEquals:[new FileSystemResource("target/test-outputs/multiResourceOutput.csv.1"), new FileSystemResource("src/main/resources/data/ioSample/input/delimited.csv")] @TO@ MethodName:assertFileEquals:[new FileSystemResource("target/test-outputs/multiResourceOutput.csv.1"), new FileSystemResource("src/main/resources/data/iosample/input/delimited.csv")] @AT@ 1451 @LENGTH@ 173
---------UPD ClassInstanceCreation@@FileSystemResource["src/main/resources/data/ioSample/input/delimited.csv"] @TO@ FileSystemResource["src/main/resources/data/iosample/input/delimited.csv"] @AT@ 1545 @LENGTH@ 78
------------UPD StringLiteral@@"src/main/resources/data/ioSample/input/delimited.csv" @TO@ "src/main/resources/data/iosample/input/delimited.csv" @AT@ 1568 @LENGTH@ 54


UPD VariableDeclarationStatement@@StepExecution lastStepExecution=jobRepository.getLastStepExecution(jobInstance,step); @TO@ StepExecution lastStepExecution=jobRepository.getLastStepExecution(jobInstance,step.getName()); @AT@ 2375 @LENGTH@ 88
---UPD VariableDeclarationFragment@@lastStepExecution=jobRepository.getLastStepExecution(jobInstance,step) @TO@ lastStepExecution=jobRepository.getLastStepExecution(jobInstance,step.getName()) @AT@ 2389 @LENGTH@ 73
------UPD MethodInvocation@@jobRepository.getLastStepExecution(jobInstance,step) @TO@ jobRepository.getLastStepExecution(jobInstance,step.getName()) @AT@ 2409 @LENGTH@ 53
---------UPD SimpleName@@MethodName:getLastStepExecution:[jobInstance, step] @TO@ MethodName:getLastStepExecution:[jobInstance, step.getName()] @AT@ 2423 @LENGTH@ 39
------------INS MethodInvocation@@step.getName() @TO@ SimpleName@@MethodName:getLastStepExecution:[jobInstance, step] @AT@ 2457 @LENGTH@ 14
---------------INS SimpleName@@Name:step @TO@ MethodInvocation@@step.getName() @AT@ 2457 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@step.getName() @AT@ 2462 @LENGTH@ 9
------------DEL SimpleName@@step @AT@ 2457 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:sendElement, E o, Exception,  @TO@ void, MethodName:sendElement, E o, Exception,  @AT@ 1265 @LENGTH@ 46
---DEL Modifier@@public @AT@ 1265 @LENGTH@ 6


UPD VariableDeclarationStatement@@CSVConfig conf=createConfig(); @TO@ CSVConfig conf=getConfig(); @AT@ 1923 @LENGTH@ 32
---UPD VariableDeclarationFragment@@conf=createConfig() @TO@ conf=getConfig() @AT@ 1933 @LENGTH@ 21
------UPD MethodInvocation@@MethodName:createConfig:[] @TO@ MethodName:getConfig:[] @AT@ 1940 @LENGTH@ 14


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/delimited.xml"}), public]DelimitedFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/delimited.xml"}), public]DelimitedFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 650
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/delimited.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/delimited.xml"}) @AT@ 1112 @LENGTH@ 132


UPD FieldDeclaration@@private, static, final, String, [DEFAULT_STRATEGYFACTORY_CLASS="org.apache.camel.component.file.strategy.FileProcessStrategyFactory"] @TO@ private, static, final, transient, String, [DEFAULT_STRATEGYFACTORY_CLASS="org.apache.camel.component.file.strategy.FileProcessStrategyFactory"] @AT@ 1783 @LENGTH@ 138
---INS Modifier@@transient @TO@ FieldDeclaration@@private, static, final, String, [DEFAULT_STRATEGYFACTORY_CLASS="org.apache.camel.component.file.strategy.FileProcessStrategyFactory"] @AT@ 1728 @LENGTH@ 9


UPD TypeDeclaration@@[private]ExceptionClassifierRetryContext, RetryContextSupport[RetryPolicy] @TO@ [private, static]ExceptionClassifierRetryContext, RetryContextSupport[RetryPolicy] @AT@ 4037 @LENGTH@ 1684
---INS Modifier@@static @TO@ TypeDeclaration@@[private]ExceptionClassifierRetryContext, RetryContextSupport[RetryPolicy] @AT@ 4045 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:context.getExternalContext().recordResponseCommitted() @TO@ MethodInvocation:context.getExternalContext().recordResponseComplete() @AT@ 4345 @LENGTH@ 55
---UPD MethodInvocation@@context.getExternalContext().recordResponseCommitted() @TO@ context.getExternalContext().recordResponseComplete() @AT@ 4345 @LENGTH@ 54
------UPD SimpleName@@MethodName:recordResponseCommitted:[] @TO@ MethodName:recordResponseComplete:[] @AT@ 4374 @LENGTH@ 25


UPD FieldDeclaration@@final, private, String, [xmlDocEnd="</root>"] @TO@ final, static, private, String, [xmlDocEnd="</root>"] @AT@ 959 @LENGTH@ 43
---INS Modifier@@static @TO@ FieldDeclaration@@final, private, String, [xmlDocEnd="</root>"] @AT@ 972 @LENGTH@ 6


INS ExpressionStatement@@Assignment:file=file.getAbsoluteFile() @TO@ MethodDeclaration@@public, void, MethodName:testToFile, Exception,  @AT@ 1546 @LENGTH@ 30
---INS Assignment@@file=file.getAbsoluteFile() @TO@ ExpressionStatement@@Assignment:file=file.getAbsoluteFile() @AT@ 1546 @LENGTH@ 29
------INS SimpleName@@file @TO@ Assignment@@file=file.getAbsoluteFile() @AT@ 1546 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@file=file.getAbsoluteFile() @AT@ 1550 @LENGTH@ 1
------INS MethodInvocation@@file.getAbsoluteFile() @TO@ Assignment@@file=file.getAbsoluteFile() @AT@ 1553 @LENGTH@ 22
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getAbsoluteFile() @AT@ 1553 @LENGTH@ 4
---------INS SimpleName@@MethodName:getAbsoluteFile:[] @TO@ MethodInvocation@@file.getAbsoluteFile() @AT@ 1558 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:delegator.invokeDelegateMethodWithArguments(new Object[]{FOO_NAME,new Integer(FOO_VALUE)}) @TO@ MethodInvocation:delegator.invokeDelegateMethodWithArguments(new Object[]{FOO_NAME,Integer.valueOf(FOO_VALUE)}) @AT@ 2263 @LENGTH@ 92
---UPD MethodInvocation@@delegator.invokeDelegateMethodWithArguments(new Object[]{FOO_NAME,new Integer(FOO_VALUE)}) @TO@ delegator.invokeDelegateMethodWithArguments(new Object[]{FOO_NAME,Integer.valueOf(FOO_VALUE)}) @AT@ 2263 @LENGTH@ 91
------UPD SimpleName@@MethodName:invokeDelegateMethodWithArguments:[new Object[]{FOO_NAME,new Integer(FOO_VALUE)}] @TO@ MethodName:invokeDelegateMethodWithArguments:[new Object[]{FOO_NAME,Integer.valueOf(FOO_VALUE)}] @AT@ 2273 @LENGTH@ 81
---------UPD ArrayCreation@@new Object[]{FOO_NAME,new Integer(FOO_VALUE)} @TO@ new Object[]{FOO_NAME,Integer.valueOf(FOO_VALUE)} @AT@ 2307 @LENGTH@ 46
------------UPD ArrayInitializer@@{FOO_NAME,new Integer(FOO_VALUE)} @TO@ {FOO_NAME,Integer.valueOf(FOO_VALUE)} @AT@ 2319 @LENGTH@ 34
---------------INS MethodInvocation@@Integer.valueOf(FOO_VALUE) @TO@ ArrayInitializer@@{FOO_NAME,new Integer(FOO_VALUE)} @AT@ 2330 @LENGTH@ 26
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(FOO_VALUE) @AT@ 2330 @LENGTH@ 7
------------------INS SimpleName@@MethodName:valueOf:[FOO_VALUE] @TO@ MethodInvocation@@Integer.valueOf(FOO_VALUE) @AT@ 2338 @LENGTH@ 18
---------------------INS SimpleName@@FOO_VALUE @TO@ SimpleName@@MethodName:valueOf:[FOO_VALUE] @AT@ 2346 @LENGTH@ 9
---------------DEL ClassInstanceCreation@@Integer[FOO_VALUE] @AT@ 2330 @LENGTH@ 22
------------------DEL New@@new @AT@ 2330 @LENGTH@ 3
------------------DEL SimpleType@@Integer @AT@ 2334 @LENGTH@ 7
------------------DEL SimpleName@@FOO_VALUE @AT@ 2342 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testCollections299,  @TO@ TypeDeclaration@@[public]TestExtendedProperties, TestCase @AT@ 16049 @LENGTH@ 548
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16049 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16056 @LENGTH@ 4
---INS SimpleName@@MethodName:testCollections299 @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16061 @LENGTH@ 18
---INS VariableDeclarationStatement@@Properties defaults=new Properties(); @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16092 @LENGTH@ 39
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties defaults=new Properties(); @AT@ 16092 @LENGTH@ 10
------INS VariableDeclarationFragment@@defaults=new Properties() @TO@ VariableDeclarationStatement@@Properties defaults=new Properties(); @AT@ 16103 @LENGTH@ 27
---------INS SimpleName@@defaults @TO@ VariableDeclarationFragment@@defaults=new Properties() @AT@ 16103 @LENGTH@ 8
---------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@defaults=new Properties() @AT@ 16114 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 16114 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 16118 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:defaults.put("objectTrue",Boolean.TRUE) @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16140 @LENGTH@ 41
------INS MethodInvocation@@defaults.put("objectTrue",Boolean.TRUE) @TO@ ExpressionStatement@@MethodInvocation:defaults.put("objectTrue",Boolean.TRUE) @AT@ 16140 @LENGTH@ 40
---------INS SimpleName@@Name:defaults @TO@ MethodInvocation@@defaults.put("objectTrue",Boolean.TRUE) @AT@ 16140 @LENGTH@ 8
---------INS SimpleName@@MethodName:put:["objectTrue", Boolean.TRUE] @TO@ MethodInvocation@@defaults.put("objectTrue",Boolean.TRUE) @AT@ 16149 @LENGTH@ 31
------------INS StringLiteral@@"objectTrue" @TO@ SimpleName@@MethodName:put:["objectTrue", Boolean.TRUE] @AT@ 16153 @LENGTH@ 12
------------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:put:["objectTrue", Boolean.TRUE] @AT@ 16167 @LENGTH@ 12
---------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 16167 @LENGTH@ 7
---------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 16175 @LENGTH@ 4
---INS VariableDeclarationStatement@@Properties properties=new Properties(defaults); @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16191 @LENGTH@ 49
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties properties=new Properties(defaults); @AT@ 16191 @LENGTH@ 10
------INS VariableDeclarationFragment@@properties=new Properties(defaults) @TO@ VariableDeclarationStatement@@Properties properties=new Properties(defaults); @AT@ 16202 @LENGTH@ 37
---------INS SimpleName@@properties @TO@ VariableDeclarationFragment@@properties=new Properties(defaults) @AT@ 16202 @LENGTH@ 10
---------INS ClassInstanceCreation@@Properties[defaults] @TO@ VariableDeclarationFragment@@properties=new Properties(defaults) @AT@ 16215 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[defaults] @AT@ 16215 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[defaults] @AT@ 16219 @LENGTH@ 10
------------INS SimpleName@@defaults @TO@ ClassInstanceCreation@@Properties[defaults] @AT@ 16230 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:properties.put("objectFalse",Boolean.FALSE) @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16249 @LENGTH@ 45
------INS MethodInvocation@@properties.put("objectFalse",Boolean.FALSE) @TO@ ExpressionStatement@@MethodInvocation:properties.put("objectFalse",Boolean.FALSE) @AT@ 16249 @LENGTH@ 44
---------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.put("objectFalse",Boolean.FALSE) @AT@ 16249 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["objectFalse", Boolean.FALSE] @TO@ MethodInvocation@@properties.put("objectFalse",Boolean.FALSE) @AT@ 16260 @LENGTH@ 33
------------INS StringLiteral@@"objectFalse" @TO@ SimpleName@@MethodName:put:["objectFalse", Boolean.FALSE] @AT@ 16264 @LENGTH@ 13
------------INS QualifiedName@@Boolean.FALSE @TO@ SimpleName@@MethodName:put:["objectFalse", Boolean.FALSE] @AT@ 16279 @LENGTH@ 13
---------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 16279 @LENGTH@ 7
---------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 16287 @LENGTH@ 5
---INS VariableDeclarationStatement@@ExtendedProperties extended=ExtendedProperties.convertProperties(properties); @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16304 @LENGTH@ 79
------INS SimpleType@@ExtendedProperties @TO@ VariableDeclarationStatement@@ExtendedProperties extended=ExtendedProperties.convertProperties(properties); @AT@ 16304 @LENGTH@ 18
------INS VariableDeclarationFragment@@extended=ExtendedProperties.convertProperties(properties) @TO@ VariableDeclarationStatement@@ExtendedProperties extended=ExtendedProperties.convertProperties(properties); @AT@ 16323 @LENGTH@ 59
---------INS SimpleName@@extended @TO@ VariableDeclarationFragment@@extended=ExtendedProperties.convertProperties(properties) @AT@ 16323 @LENGTH@ 8
---------INS MethodInvocation@@ExtendedProperties.convertProperties(properties) @TO@ VariableDeclarationFragment@@extended=ExtendedProperties.convertProperties(properties) @AT@ 16334 @LENGTH@ 48
------------INS SimpleName@@Name:ExtendedProperties @TO@ MethodInvocation@@ExtendedProperties.convertProperties(properties) @AT@ 16334 @LENGTH@ 18
------------INS SimpleName@@MethodName:convertProperties:[properties] @TO@ MethodInvocation@@ExtendedProperties.convertProperties(properties) @AT@ 16353 @LENGTH@ 29
---------------INS SimpleName@@properties @TO@ SimpleName@@MethodName:convertProperties:[properties] @AT@ 16371 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertNull(extended.getString("objectTrue")) @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16393 @LENGTH@ 45
------INS MethodInvocation@@assertNull(extended.getString("objectTrue")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(extended.getString("objectTrue")) @AT@ 16393 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertNull:[extended.getString("objectTrue")] @TO@ MethodInvocation@@assertNull(extended.getString("objectTrue")) @AT@ 16393 @LENGTH@ 44
------------INS MethodInvocation@@extended.getString("objectTrue") @TO@ SimpleName@@MethodName:assertNull:[extended.getString("objectTrue")] @AT@ 16404 @LENGTH@ 32
---------------INS SimpleName@@Name:extended @TO@ MethodInvocation@@extended.getString("objectTrue") @AT@ 16404 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getString:["objectTrue"] @TO@ MethodInvocation@@extended.getString("objectTrue") @AT@ 16413 @LENGTH@ 23
------------------INS StringLiteral@@"objectTrue" @TO@ SimpleName@@MethodName:getString:["objectTrue"] @AT@ 16423 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNull(extended.getString("objectFalse")) @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16447 @LENGTH@ 46
------INS MethodInvocation@@assertNull(extended.getString("objectFalse")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(extended.getString("objectFalse")) @AT@ 16447 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertNull:[extended.getString("objectFalse")] @TO@ MethodInvocation@@assertNull(extended.getString("objectFalse")) @AT@ 16447 @LENGTH@ 45
------------INS MethodInvocation@@extended.getString("objectFalse") @TO@ SimpleName@@MethodName:assertNull:[extended.getString("objectFalse")] @AT@ 16458 @LENGTH@ 33
---------------INS SimpleName@@Name:extended @TO@ MethodInvocation@@extended.getString("objectFalse") @AT@ 16458 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getString:["objectFalse"] @TO@ MethodInvocation@@extended.getString("objectFalse") @AT@ 16467 @LENGTH@ 24
------------------INS StringLiteral@@"objectFalse" @TO@ SimpleName@@MethodName:getString:["objectFalse"] @AT@ 16477 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertNull(extended.get("objectTrue")) @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16503 @LENGTH@ 39
------INS MethodInvocation@@assertNull(extended.get("objectTrue")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(extended.get("objectTrue")) @AT@ 16503 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertNull:[extended.get("objectTrue")] @TO@ MethodInvocation@@assertNull(extended.get("objectTrue")) @AT@ 16503 @LENGTH@ 38
------------INS MethodInvocation@@extended.get("objectTrue") @TO@ SimpleName@@MethodName:assertNull:[extended.get("objectTrue")] @AT@ 16514 @LENGTH@ 26
---------------INS SimpleName@@Name:extended @TO@ MethodInvocation@@extended.get("objectTrue") @AT@ 16514 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:["objectTrue"] @TO@ MethodInvocation@@extended.get("objectTrue") @AT@ 16523 @LENGTH@ 17
------------------INS StringLiteral@@"objectTrue" @TO@ SimpleName@@MethodName:get:["objectTrue"] @AT@ 16527 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNull(extended.get("objectFalse")) @TO@ MethodDeclaration@@public, void, MethodName:testCollections299,  @AT@ 16551 @LENGTH@ 40
------INS MethodInvocation@@assertNull(extended.get("objectFalse")) @TO@ ExpressionStatement@@MethodInvocation:assertNull(extended.get("objectFalse")) @AT@ 16551 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertNull:[extended.get("objectFalse")] @TO@ MethodInvocation@@assertNull(extended.get("objectFalse")) @AT@ 16551 @LENGTH@ 39
------------INS MethodInvocation@@extended.get("objectFalse") @TO@ SimpleName@@MethodName:assertNull:[extended.get("objectFalse")] @AT@ 16562 @LENGTH@ 27
---------------INS SimpleName@@Name:extended @TO@ MethodInvocation@@extended.get("objectFalse") @AT@ 16562 @LENGTH@ 8
---------------INS SimpleName@@MethodName:get:["objectFalse"] @TO@ MethodInvocation@@extended.get("objectFalse") @AT@ 16571 @LENGTH@ 18
------------------INS StringLiteral@@"objectFalse" @TO@ SimpleName@@MethodName:get:["objectFalse"] @AT@ 16575 @LENGTH@ 13


UPD MethodDeclaration@@public, IrcExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 1639 @LENGTH@ 140
---UPD SimpleType@@IrcExchange @TO@ Exchange @AT@ 1646 @LENGTH@ 11


UPD TypeDeclaration@@[public]FileExpressionBuilder,  @TO@ [public, final]FileExpressionBuilder,  @AT@ 463 @LENGTH@ 6056
---INS Modifier@@final @TO@ TypeDeclaration@@[public]FileExpressionBuilder,  @AT@ 1275 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:expressionFactoryClass=ClassUtils.forName(getDefaultExpressionFactoryClassName()) @TO@ Assignment:expressionFactoryClass=ClassUtils.forName(getDefaultExpressionFactoryClassName(),DefaultExpressionFactoryUtils.class.getClassLoader()) @AT@ 1614 @LENGTH@ 84
---UPD Assignment@@expressionFactoryClass=ClassUtils.forName(getDefaultExpressionFactoryClassName()) @TO@ expressionFactoryClass=ClassUtils.forName(getDefaultExpressionFactoryClassName(),DefaultExpressionFactoryUtils.class.getClassLoader()) @AT@ 1614 @LENGTH@ 83
------UPD MethodInvocation@@ClassUtils.forName(getDefaultExpressionFactoryClassName()) @TO@ ClassUtils.forName(getDefaultExpressionFactoryClassName(),DefaultExpressionFactoryUtils.class.getClassLoader()) @AT@ 1639 @LENGTH@ 58
---------UPD SimpleName@@MethodName:forName:[getDefaultExpressionFactoryClassName()] @TO@ MethodName:forName:[getDefaultExpressionFactoryClassName(), DefaultExpressionFactoryUtils.class.getClassLoader()] @AT@ 1650 @LENGTH@ 47
------------INS MethodInvocation@@DefaultExpressionFactoryUtils.class.getClassLoader() @TO@ SimpleName@@MethodName:forName:[getDefaultExpressionFactoryClassName()] @AT@ 1703 @LENGTH@ 52
---------------INS TypeLiteral@@DefaultExpressionFactoryUtils.class @TO@ MethodInvocation@@DefaultExpressionFactoryUtils.class.getClassLoader() @AT@ 1703 @LENGTH@ 35
---------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@DefaultExpressionFactoryUtils.class.getClassLoader() @AT@ 1739 @LENGTH@ 16


INS VariableDeclarationStatement@@Throwable newt=(t == null) ? new Throwable("Handling [null] exception") : t; @TO@ MethodDeclaration@@protected, void, MethodName:handleException, Throwable t,  @AT@ 3081 @LENGTH@ 78
---INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@Throwable newt=(t == null) ? new Throwable("Handling [null] exception") : t; @AT@ 3081 @LENGTH@ 9
---INS VariableDeclarationFragment@@newt=(t == null) ? new Throwable("Handling [null] exception") : t @TO@ VariableDeclarationStatement@@Throwable newt=(t == null) ? new Throwable("Handling [null] exception") : t; @AT@ 3091 @LENGTH@ 67
------INS SimpleName@@newt @TO@ VariableDeclarationFragment@@newt=(t == null) ? new Throwable("Handling [null] exception") : t @AT@ 3091 @LENGTH@ 4
------INS ConditionalExpression@@(t == null) ? new Throwable("Handling [null] exception") : t @TO@ VariableDeclarationFragment@@newt=(t == null) ? new Throwable("Handling [null] exception") : t @AT@ 3098 @LENGTH@ 60
---------INS ParenthesizedExpression@@(t == null) @TO@ ConditionalExpression@@(t == null) ? new Throwable("Handling [null] exception") : t @AT@ 3098 @LENGTH@ 11
------------INS InfixExpression@@t == null @TO@ ParenthesizedExpression@@(t == null) @AT@ 3099 @LENGTH@ 9
---------------INS SimpleName@@t @TO@ InfixExpression@@t == null @AT@ 3099 @LENGTH@ 1
---------------INS Operator@@== @TO@ InfixExpression@@t == null @AT@ 3100 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@t == null @AT@ 3104 @LENGTH@ 4
---------INS ClassInstanceCreation@@Throwable["Handling [null] exception"] @TO@ ConditionalExpression@@(t == null) ? new Throwable("Handling [null] exception") : t @AT@ 3112 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@Throwable["Handling [null] exception"] @AT@ 3112 @LENGTH@ 3
------------INS SimpleType@@Throwable @TO@ ClassInstanceCreation@@Throwable["Handling [null] exception"] @AT@ 3116 @LENGTH@ 9
------------INS StringLiteral@@"Handling [null] exception" @TO@ ClassInstanceCreation@@Throwable["Handling [null] exception"] @AT@ 3126 @LENGTH@ 27
---------INS SimpleName@@t @TO@ ConditionalExpression@@(t == null) ? new Throwable("Handling [null] exception") : t @AT@ 3157 @LENGTH@ 1


UPD IfStatement@@if (body instanceof String) {  LOG.debug("in text buffered mode");  BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(outputStream));  bw.write((String)body);  bw.write("\n");  bw.flush();  bw.close();} else {  LOG.debug("in binary stream mode");  outputStream.write((byte[])body);} @TO@ if (body instanceof String) {  LOG.debug("in text buffered mode");  BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(outputStream));  try {    bw.write((String)body);    bw.write("\n");    bw.flush();  }  finally {    bw.close();  }} else {  LOG.debug("in binary stream mode");  outputStream.write((byte[])body);} @AT@ 4274 @LENGTH@ 400
---UPD Block@@ThenBody:{  LOG.debug("in text buffered mode");  BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(outputStream));  bw.write((String)body);  bw.write("\n");  bw.flush();  bw.close();} @TO@ ThenBody:{  LOG.debug("in text buffered mode");  BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(outputStream));  try {    bw.write((String)body);    bw.write("\n");    bw.flush();  }  finally {    bw.close();  }} @AT@ 4302 @LENGTH@ 261
------INS TryStatement@@try {  bw.write((String)body);  bw.write("\n");  bw.flush();}  finally {  bw.close();} @TO@ Block@@ThenBody:{  LOG.debug("in text buffered mode");  BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(outputStream));  bw.write((String)body);  bw.write("\n");  bw.flush();  bw.close();} @AT@ 4451 @LENGTH@ 171
---------MOV ExpressionStatement@@MethodInvocation:bw.write((String)body) @TO@ TryStatement@@try {  bw.write((String)body);  bw.write("\n");  bw.flush();}  finally {  bw.close();} @AT@ 4454 @LENGTH@ 23
---------MOV ExpressionStatement@@MethodInvocation:bw.write("\n") @TO@ TryStatement@@try {  bw.write((String)body);  bw.write("\n");  bw.flush();}  finally {  bw.close();} @AT@ 4490 @LENGTH@ 15
---------MOV ExpressionStatement@@MethodInvocation:bw.flush() @TO@ TryStatement@@try {  bw.write((String)body);  bw.write("\n");  bw.flush();}  finally {  bw.close();} @AT@ 4518 @LENGTH@ 11
---------INS Block@@FinallyBody:{  bw.close();} @TO@ TryStatement@@try {  bw.write((String)body);  bw.write("\n");  bw.flush();}  finally {  bw.close();} @AT@ 4579 @LENGTH@ 43
------------MOV ExpressionStatement@@MethodInvocation:bw.close() @TO@ Block@@FinallyBody:{  bw.close();} @AT@ 4542 @LENGTH@ 11


INS MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @TO@ TypeDeclaration@@[public]StepExecution, Entity @AT@ 11490 @LENGTH@ 177
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11490 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11498 @LENGTH@ 4
---INS SimpleName@@MethodName:readObject @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11503 @LENGTH@ 10
---INS SingleVariableDeclaration@@ObjectInputStream stream @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11514 @LENGTH@ 24
------INS SimpleType@@ObjectInputStream @TO@ SingleVariableDeclaration@@ObjectInputStream stream @AT@ 11514 @LENGTH@ 17
------INS SimpleName@@stream @TO@ SingleVariableDeclaration@@ObjectInputStream stream @AT@ 11532 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11547 @LENGTH@ 11
---INS SimpleType@@ClassNotFoundException @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11560 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:stream.defaultReadObject() @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11587 @LENGTH@ 27
------INS MethodInvocation@@stream.defaultReadObject() @TO@ ExpressionStatement@@MethodInvocation:stream.defaultReadObject() @AT@ 11587 @LENGTH@ 26
---------INS SimpleName@@Name:stream @TO@ MethodInvocation@@stream.defaultReadObject() @AT@ 11587 @LENGTH@ 6
---------INS SimpleName@@MethodName:defaultReadObject:[] @TO@ MethodInvocation@@stream.defaultReadObject() @AT@ 11594 @LENGTH@ 19
---INS ExpressionStatement@@Assignment:failureExceptions=new ArrayList<Throwable>() @TO@ MethodDeclaration@@private, void, MethodName:readObject, ObjectInputStream stream, IOException, ClassNotFoundException,  @AT@ 11617 @LENGTH@ 47
------INS Assignment@@failureExceptions=new ArrayList<Throwable>() @TO@ ExpressionStatement@@Assignment:failureExceptions=new ArrayList<Throwable>() @AT@ 11617 @LENGTH@ 46
---------INS SimpleName@@failureExceptions @TO@ Assignment@@failureExceptions=new ArrayList<Throwable>() @AT@ 11617 @LENGTH@ 17
---------INS Operator@@= @TO@ Assignment@@failureExceptions=new ArrayList<Throwable>() @AT@ 11634 @LENGTH@ 1
---------INS ClassInstanceCreation@@ArrayList<Throwable>[] @TO@ Assignment@@failureExceptions=new ArrayList<Throwable>() @AT@ 11637 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<Throwable>[] @AT@ 11637 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<Throwable> @TO@ ClassInstanceCreation@@ArrayList<Throwable>[] @AT@ 11641 @LENGTH@ 20
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Throwable> @AT@ 11641 @LENGTH@ 9
---------------INS SimpleType@@Throwable @TO@ ParameterizedType@@ArrayList<Throwable> @AT@ 11651 @LENGTH@ 9


UPD FieldDeclaration@@final, StepExecution, [execution=new StepExecution(tested.getName(),new JobExecution(new JobInstance(new Long(1),new JobParameters(),"jobName")))] @TO@ final, StepExecution, [execution=new StepExecution(tested.getName(),new JobExecution(new JobInstance(1L,new JobParameters(),"jobName")))] @AT@ 1327 @LENGTH@ 152
---UPD VariableDeclarationFragment@@execution=new StepExecution(tested.getName(),new JobExecution(new JobInstance(new Long(1),new JobParameters(),"jobName"))) @TO@ execution=new StepExecution(tested.getName(),new JobExecution(new JobInstance(1L,new JobParameters(),"jobName"))) @AT@ 1347 @LENGTH@ 131
------UPD ClassInstanceCreation@@StepExecution[tested.getName(), new JobExecution(new JobInstance(new Long(1),new JobParameters(),"jobName"))] @TO@ StepExecution[tested.getName(), new JobExecution(new JobInstance(1L,new JobParameters(),"jobName"))] @AT@ 1359 @LENGTH@ 119
---------UPD ClassInstanceCreation@@JobExecution[new JobInstance(new Long(1),new JobParameters(),"jobName")] @TO@ JobExecution[new JobInstance(1L,new JobParameters(),"jobName")] @AT@ 1395 @LENGTH@ 82
------------UPD ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "jobName"] @TO@ JobInstance[1L, new JobParameters(), "jobName"] @AT@ 1412 @LENGTH@ 64
---------------DEL ClassInstanceCreation@@Long[1] @AT@ 1428 @LENGTH@ 11
------------------DEL New@@new @AT@ 1428 @LENGTH@ 3
------------------DEL SimpleType@@Long @AT@ 1432 @LENGTH@ 4
---------------MOV NumberLiteral@@1 @TO@ ClassInstanceCreation@@JobInstance[new Long(1), new JobParameters(), "jobName"] @AT@ 1437 @LENGTH@ 1


MOV ExpressionStatement@@MethodInvocation:ServiceHelper.startServices(consumer,processor) @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 5651 @LENGTH@ 49


UPD ExpressionStatement@@MethodInvocation:jmsMessage.setObjectProperty(key,headerValue) @TO@ MethodInvocation:jmsMessage.setObjectProperty(key,value) @AT@ 10925 @LENGTH@ 47
---UPD MethodInvocation@@jmsMessage.setObjectProperty(key,headerValue) @TO@ jmsMessage.setObjectProperty(key,value) @AT@ 10925 @LENGTH@ 46
------UPD SimpleName@@MethodName:setObjectProperty:[key, headerValue] @TO@ MethodName:setObjectProperty:[key, value] @AT@ 10936 @LENGTH@ 35
---------UPD SimpleName@@headerValue @TO@ value @AT@ 10959 @LENGTH@ 11


UPD VariableDeclarationStatement@@DataSource dataSource=(DataSource)MockControl.createControl(DataSource.class).getMock(); @TO@ DataSource dataSource=createMock(DataSource.class); @AT@ 1740 @LENGTH@ 90
---UPD VariableDeclarationFragment@@dataSource=(DataSource)MockControl.createControl(DataSource.class).getMock() @TO@ dataSource=createMock(DataSource.class) @AT@ 1751 @LENGTH@ 78
------DEL CastExpression@@(DataSource)MockControl.createControl(DataSource.class).getMock() @AT@ 1764 @LENGTH@ 65
---------DEL SimpleType@@DataSource @AT@ 1765 @LENGTH@ 10
---------DEL MethodInvocation@@MockControl.createControl(DataSource.class).getMock() @AT@ 1776 @LENGTH@ 53
------------DEL MethodInvocation@@MethodName:createControl:[DataSource.class] @AT@ 1776 @LENGTH@ 43
---------------DEL TypeLiteral@@DataSource.class @AT@ 1802 @LENGTH@ 16
------------DEL SimpleName@@Name:MockControl @AT@ 1776 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getMock:[] @AT@ 1820 @LENGTH@ 9
------INS MethodInvocation@@createMock(DataSource.class) @TO@ VariableDeclarationFragment@@dataSource=(DataSource)MockControl.createControl(DataSource.class).getMock() @AT@ 1770 @LENGTH@ 28
---------INS SimpleName@@MethodName:createMock:[DataSource.class] @TO@ MethodInvocation@@createMock(DataSource.class) @AT@ 1770 @LENGTH@ 28
------------INS TypeLiteral@@DataSource.class @TO@ SimpleName@@MethodName:createMock:[DataSource.class] @AT@ 1781 @LENGTH@ 16


UPD ReturnStatement@@ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/camel/spring/issues/StringDataFormatTest.xml") @TO@ ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/camel/spring/issues/stringDataFormatTest.xml") @AT@ 1318 @LENGTH@ 101
---UPD ClassInstanceCreation@@ClassPathXmlApplicationContext["org/apache/camel/spring/issues/StringDataFormatTest.xml"] @TO@ ClassPathXmlApplicationContext["org/apache/camel/spring/issues/stringDataFormatTest.xml"] @AT@ 1325 @LENGTH@ 93
------UPD StringLiteral@@"org/apache/camel/spring/issues/StringDataFormatTest.xml" @TO@ "org/apache/camel/spring/issues/stringDataFormatTest.xml" @AT@ 1360 @LENGTH@ 57


INS ExpressionStatement@@MethodInvocation:simpleJdbcTemplate.update("delete from CUSTOMER where ID > 4") @TO@ MethodDeclaration@@public, void, MethodName:onSetUp, Exception,  @AT@ 2084 @LENGTH@ 63
---INS MethodInvocation@@simpleJdbcTemplate.update("delete from CUSTOMER where ID > 4") @TO@ ExpressionStatement@@MethodInvocation:simpleJdbcTemplate.update("delete from CUSTOMER where ID > 4") @AT@ 2084 @LENGTH@ 62
------INS SimpleName@@Name:simpleJdbcTemplate @TO@ MethodInvocation@@simpleJdbcTemplate.update("delete from CUSTOMER where ID > 4") @AT@ 2084 @LENGTH@ 18
------INS SimpleName@@MethodName:update:["delete from CUSTOMER where ID > 4"] @TO@ MethodInvocation@@simpleJdbcTemplate.update("delete from CUSTOMER where ID > 4") @AT@ 2103 @LENGTH@ 43
---------INS StringLiteral@@"delete from CUSTOMER where ID > 4" @TO@ SimpleName@@MethodName:update:["delete from CUSTOMER where ID > 4"] @AT@ 2110 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:factory.setPath(new Resource[]{path}) @TO@ MethodInvocation:factory.setPath(path) @AT@ 4621 @LENGTH@ 41
---UPD MethodInvocation@@factory.setPath(new Resource[]{path}) @TO@ factory.setPath(path) @AT@ 4621 @LENGTH@ 40
------UPD SimpleName@@MethodName:setPath:[new Resource[]{path}] @TO@ MethodName:setPath:[path] @AT@ 4629 @LENGTH@ 32
---------DEL ArrayCreation@@new Resource[]{path} @AT@ 4637 @LENGTH@ 23
------------DEL ArrayType@@Resource[] @AT@ 4641 @LENGTH@ 10
---------------DEL SimpleType@@Resource @AT@ 4641 @LENGTH@ 8
------------DEL ArrayInitializer@@{path} @AT@ 4652 @LENGTH@ 8
---------------DEL SimpleName@@path @AT@ 4654 @LENGTH@ 4
---------INS SimpleName@@path @TO@ SimpleName@@MethodName:setPath:[new Resource[]{path}] @AT@ 4637 @LENGTH@ 4


UPD TypeDeclaration@@[private]AfterJobProxy, JobExecutionListenerSupport @TO@ [private, static]AfterJobProxy, JobExecutionListenerSupport @AT@ 2496 @LENGTH@ 645
---INS Modifier@@static @TO@ TypeDeclaration@@[private]AfterJobProxy, JobExecutionListenerSupport @AT@ 2511 @LENGTH@ 6


MOV MethodDeclaration@@public, voidMethodName:CamelMessageListener, CamelContext camelContext, Processor processor,  @TO@ TypeDeclaration@@[public]CamelMessageListener, [MessageListener, Processor] @AT@ 3244 @LENGTH@ 215


UPD IfStatement@@if (!context.isResponseCommitted()) {  if (logger.isDebugEnabled()) {    logger.debug("Ended flow '" + flowId + "' did not commit a response; "+ "attempting to start a new flow execution as a default outcome handler");  }  response.sendRedirect(flowUrlHandler.createFlowDefinitionUrl(flowId,outcome.getOutput(),request));} @TO@ if (!context.isResponseComplete()) {  if (logger.isDebugEnabled()) {    logger.debug("Ended flow '" + flowId + "' did not commit a response; "+ "attempting to start a new flow execution as a default outcome handler");  }  response.sendRedirect(flowUrlHandler.createFlowDefinitionUrl(flowId,outcome.getOutput(),request));} @AT@ 9501 @LENGTH@ 412
---UPD PrefixExpression@@!context.isResponseCommitted() @TO@ !context.isResponseComplete() @AT@ 9505 @LENGTH@ 30
------UPD MethodInvocation@@context.isResponseCommitted() @TO@ context.isResponseComplete() @AT@ 9506 @LENGTH@ 29
---------UPD SimpleName@@MethodName:isResponseCommitted:[] @TO@ MethodName:isResponseComplete:[] @AT@ 9514 @LENGTH@ 21


DEL VariableDeclarationStatement@@boolean camelType=type.getCanonicalName().startsWith("org.apache.camel"); @AT@ 4467 @LENGTH@ 75
---DEL PrimitiveType@@boolean @AT@ 4467 @LENGTH@ 7
---DEL VariableDeclarationFragment@@camelType=type.getCanonicalName().startsWith("org.apache.camel") @AT@ 4475 @LENGTH@ 66
------DEL SimpleName@@camelType @AT@ 4475 @LENGTH@ 9
------DEL MethodInvocation@@type.getCanonicalName().startsWith("org.apache.camel") @AT@ 4487 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getCanonicalName:[] @AT@ 4487 @LENGTH@ 23
---------DEL SimpleName@@Name:type @AT@ 4487 @LENGTH@ 4
---------DEL SimpleName@@MethodName:startsWith:["org.apache.camel"] @AT@ 4511 @LENGTH@ 30
------------DEL StringLiteral@@"org.apache.camel" @AT@ 4522 @LENGTH@ 18


UPD FieldDeclaration@@private, FlatFileItemReader, [reader=new FlatFileItemReader()] @TO@ private, FlatFileItemReader<FieldSet>, [reader=new FlatFileItemReader<FieldSet>()] @AT@ 1406 @LENGTH@ 61
---DEL SimpleType@@FlatFileItemReader @AT@ 1414 @LENGTH@ 18
---UPD VariableDeclarationFragment@@reader=new FlatFileItemReader() @TO@ reader=new FlatFileItemReader<FieldSet>() @AT@ 1433 @LENGTH@ 33
------UPD ClassInstanceCreation@@FlatFileItemReader[] @TO@ FlatFileItemReader<FieldSet>[] @AT@ 1442 @LENGTH@ 24
---------DEL SimpleType@@FlatFileItemReader @AT@ 1446 @LENGTH@ 18
---------INS ParameterizedType@@FlatFileItemReader<FieldSet> @TO@ ClassInstanceCreation@@FlatFileItemReader[] @AT@ 1534 @LENGTH@ 28
------------INS SimpleType@@FlatFileItemReader @TO@ ParameterizedType@@FlatFileItemReader<FieldSet> @AT@ 1534 @LENGTH@ 18
------------INS SimpleType@@FieldSet @TO@ ParameterizedType@@FlatFileItemReader<FieldSet> @AT@ 1553 @LENGTH@ 8
---INS ParameterizedType@@FlatFileItemReader<FieldSet> @TO@ FieldDeclaration@@private, FlatFileItemReader, [reader=new FlatFileItemReader()] @AT@ 1492 @LENGTH@ 28
------INS SimpleType@@FlatFileItemReader @TO@ ParameterizedType@@FlatFileItemReader<FieldSet> @AT@ 1492 @LENGTH@ 18
------INS SimpleType@@FieldSet @TO@ ParameterizedType@@FlatFileItemReader<FieldSet> @AT@ 1511 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("11") @TO@ MethodInvocation:exchange.getIn().setBody(11) @AT@ 2485 @LENGTH@ 31
---UPD MethodInvocation@@exchange.getIn().setBody("11") @TO@ exchange.getIn().setBody(11) @AT@ 2485 @LENGTH@ 30
------UPD SimpleName@@MethodName:setBody:["11"] @TO@ MethodName:setBody:[11] @AT@ 2502 @LENGTH@ 13
---------DEL StringLiteral@@"11" @AT@ 2510 @LENGTH@ 4
---------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:setBody:["11"] @AT@ 2591 @LENGTH@ 2


UPD FieldDeclaration@@private, boolean, [showOutBody=false] @TO@ private, boolean, [showOutBody] @AT@ 1512 @LENGTH@ 36
---UPD VariableDeclarationFragment@@showOutBody=false @TO@ showOutBody @AT@ 1528 @LENGTH@ 19
------DEL BooleanLiteral@@false @AT@ 1542 @LENGTH@ 5


UPD TypeDeclaration@@[public]SystemHelper,  @TO@ [public, final]SystemHelper,  @AT@ 1072 @LENGTH@ 793
---INS Modifier@@final @TO@ TypeDeclaration@@[public]SystemHelper,  @AT@ 1081 @LENGTH@ 5


INS MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @TO@ TypeDeclaration@@[public, abstract]DefaultEndpoint, [Endpoint<E>, CamelContextAware] @AT@ 6707 @LENGTH@ 121
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 6707 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 6714 @LENGTH@ 7
---INS SimpleName@@MethodName:isLenientProperties @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 6722 @LENGTH@ 19
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 6809 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 6816 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/fixedLength.xml"}), public]FixedLengthFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/fixedLength.xml"}), public]FixedLengthFunctionalTests, AbstractJobTests @AT@ 1026 @LENGTH@ 658
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/fixedLength.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/fixedLength.xml"}) @AT@ 1066 @LENGTH@ 134


UPD MethodDeclaration@@public, BeanExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 2020 @LENGTH@ 128
---UPD SimpleType@@BeanExchange @TO@ Exchange @AT@ 2027 @LENGTH@ 12


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/multiResource.xml"}), public]MultiResourceFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiResource.xml"}), public]MultiResourceFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 747
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/multiResource.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiResource.xml"}) @AT@ 1112 @LENGTH@ 136


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiResource.xml"}), public]MultiResourceFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/multiResource.xml"}), public]MultiResourceFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 747
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiResource.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/multiResource.xml"}) @AT@ 1112 @LENGTH@ 136


UPD EnhancedForStatement@@for (MethodInfo methodInfo : operationList) {  Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} @TO@ for (MethodInfo methodInfo : operationList) {  Object value=null;  try {    value=convertToType(exchange,methodInfo.getBodyParameterType(),body);    if (value != null) {      if (newBody != null) {        throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));      } else {        newBody=value;        matched=methodInfo;      }    }  } catch (  NoTypeConversionAvailableException e) {  }} @AT@ 13446 @LENGTH@ 633
---UPD VariableDeclarationStatement@@Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body); @TO@ Object value=null; @AT@ 13512 @LENGTH@ 80
------UPD VariableDeclarationFragment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @TO@ value=null @AT@ 13519 @LENGTH@ 72
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 13587 @LENGTH@ 4
---INS TryStatement@@try {  value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} catch (NoTypeConversionAvailableException e) {} @TO@ EnhancedForStatement@@for (MethodInfo methodInfo : operationList) {  Object value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} @AT@ 13613 @LENGTH@ 857
------MOV IfStatement@@if (value != null) {  if (newBody != null) {    throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));  } else {    newBody=value;    matched=methodInfo;  }} @TO@ TryStatement@@try {  value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} catch (NoTypeConversionAvailableException e) {} @AT@ 13613 @LENGTH@ 448
------INS ExpressionStatement@@Assignment:value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @TO@ TryStatement@@try {  value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} catch (NoTypeConversionAvailableException e) {} @AT@ 13643 @LENGTH@ 73
---------INS Assignment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @TO@ ExpressionStatement@@Assignment:value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 13643 @LENGTH@ 72
------------MOV MethodInvocation@@convertToType(exchange,methodInfo.getBodyParameterType(),body) @TO@ Assignment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 13527 @LENGTH@ 64
------------MOV MethodInvocation@@convertToType(exchange,methodInfo.getBodyParameterType(),body) @TO@ Assignment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 13527 @LENGTH@ 64
------------INS SimpleName@@value @TO@ Assignment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 13643 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@value=convertToType(exchange,methodInfo.getBodyParameterType(),body) @AT@ 13648 @LENGTH@ 1
------INS CatchClause@@catch (NoTypeConversionAvailableException e) {} @TO@ TryStatement@@try {  value=convertToType(exchange,methodInfo.getBodyParameterType(),body);  if (value != null) {    if (newBody != null) {      throw new AmbiguousMethodCallException(exchange,Arrays.asList(matched,methodInfo));    } else {      newBody=value;      matched=methodInfo;    }  }} catch (NoTypeConversionAvailableException e) {} @AT@ 14244 @LENGTH@ 226
---------INS SingleVariableDeclaration@@NoTypeConversionAvailableException e @TO@ CatchClause@@catch (NoTypeConversionAvailableException e) {} @AT@ 14251 @LENGTH@ 36
------------INS SimpleType@@NoTypeConversionAvailableException @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 14251 @LENGTH@ 34
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoTypeConversionAvailableException e @AT@ 14286 @LENGTH@ 1


UPD IfStatement@@if (result.getResult().isError()) {  return true;} @TO@ if (result.isError()) {  return true;} @AT@ 1900 @LENGTH@ 57
---UPD MethodInvocation@@result.getResult().isError() @TO@ result.isError() @AT@ 1904 @LENGTH@ 28
------DEL MethodInvocation@@MethodName:getResult:[] @AT@ 1904 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[private, static]FooFlow, [FlowDefinition] @AT@ 4254 @LENGTH@ 28
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 4254 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 4261 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 4266 @LENGTH@ 7


UPD VariableDeclarationStatement@@final RepeatCallback stepCallback=new ItemReaderRepeatCallback(provider,processor){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    assertNotSame(threadName,Thread.currentThread().getName());
    threadNames.add(Thread.currentThread().getName());
    Thread.sleep(100);
    return super.doInIteration(context);
  }
}
; @TO@ final RepeatCallback stepCallback=new ItemReaderRepeatCallback<Trade>(provider,processor){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    assertNotSame(threadName,Thread.currentThread().getName());
    threadNames.add(Thread.currentThread().getName());
    Thread.sleep(100);
    return super.doInIteration(context);
  }
}
; @AT@ 2854 @LENGTH@ 358
---UPD VariableDeclarationFragment@@stepCallback=new ItemReaderRepeatCallback(provider,processor){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    assertNotSame(threadName,Thread.currentThread().getName());
    threadNames.add(Thread.currentThread().getName());
    Thread.sleep(100);
    return super.doInIteration(context);
  }
}
 @TO@ stepCallback=new ItemReaderRepeatCallback<Trade>(provider,processor){
  public ExitStatus doInIteration(  RepeatContext context) throws Exception {
    assertNotSame(threadName,Thread.currentThread().getName());
    threadNames.add(Thread.currentThread().getName());
    Thread.sleep(100);
    return super.doInIteration(context);
  }
}
 @AT@ 2875 @LENGTH@ 336
------UPD ClassInstanceCreation@@ItemReaderRepeatCallback[provider, processor] @TO@ ItemReaderRepeatCallback<Trade>[provider, processor] @AT@ 2890 @LENGTH@ 321
---------INS ParameterizedType@@ItemReaderRepeatCallback<Trade> @TO@ ClassInstanceCreation@@ItemReaderRepeatCallback[provider, processor] @AT@ 2894 @LENGTH@ 31
------------INS SimpleType@@ItemReaderRepeatCallback @TO@ ParameterizedType@@ItemReaderRepeatCallback<Trade> @AT@ 2894 @LENGTH@ 24
------------INS SimpleType@@Trade @TO@ ParameterizedType@@ItemReaderRepeatCallback<Trade> @AT@ 2919 @LENGTH@ 5
---------DEL SimpleType@@ItemReaderRepeatCallback @AT@ 2894 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:deleteDirectory("target/test-rename-inbox") @TO@ Assignment:targetdir="target/test-rename-inbox" @AT@ 1002 @LENGTH@ 44
---DEL MethodInvocation@@deleteDirectory("target/test-rename-inbox") @AT@ 1002 @LENGTH@ 43
------DEL SimpleName@@MethodName:deleteDirectory:["target/test-rename-inbox"] @AT@ 1002 @LENGTH@ 43
---------DEL StringLiteral@@"target/test-rename-inbox" @AT@ 1018 @LENGTH@ 26
---INS Assignment@@targetdir="target/test-rename-inbox" @TO@ ExpressionStatement@@MethodInvocation:deleteDirectory("target/test-rename-inbox") @AT@ 1002 @LENGTH@ 38
------INS SimpleName@@targetdir @TO@ Assignment@@targetdir="target/test-rename-inbox" @AT@ 1002 @LENGTH@ 9
------INS Operator@@= @TO@ Assignment@@targetdir="target/test-rename-inbox" @AT@ 1011 @LENGTH@ 1
------INS StringLiteral@@"target/test-rename-inbox" @TO@ Assignment@@targetdir="target/test-rename-inbox" @AT@ 1014 @LENGTH@ 26


UPD TypeDeclaration@@[private]StepExecutionRowMapper, [ParameterizedRowMapper<StepExecution>] @TO@ [private, static]StepExecutionRowMapper, [ParameterizedRowMapper<StepExecution>] @AT@ 9826 @LENGTH@ 1181
---INS Modifier@@static @TO@ TypeDeclaration@@[private]StepExecutionRowMapper, [ParameterizedRowMapper<StepExecution>] @AT@ 9834 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testMappingConversion,  @TO@ TypeDeclaration@@[public]DefaultMapperTests, TestCase @AT@ 1787 @LENGTH@ 432
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 1787 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 1794 @LENGTH@ 4
---INS SimpleName@@MethodName:testMappingConversion @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 1799 @LENGTH@ 21
---INS VariableDeclarationStatement@@DefaultMapping mapping1=new DefaultMapping(parser.parseExpression("beep",null),parser.parseExpression("beep",null)); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 1827 @LENGTH@ 126
------INS SimpleType@@DefaultMapping @TO@ VariableDeclarationStatement@@DefaultMapping mapping1=new DefaultMapping(parser.parseExpression("beep",null),parser.parseExpression("beep",null)); @AT@ 1827 @LENGTH@ 14
------INS VariableDeclarationFragment@@mapping1=new DefaultMapping(parser.parseExpression("beep",null),parser.parseExpression("beep",null)) @TO@ VariableDeclarationStatement@@DefaultMapping mapping1=new DefaultMapping(parser.parseExpression("beep",null),parser.parseExpression("beep",null)); @AT@ 1842 @LENGTH@ 110
---------INS SimpleName@@mapping1 @TO@ VariableDeclarationFragment@@mapping1=new DefaultMapping(parser.parseExpression("beep",null),parser.parseExpression("beep",null)) @AT@ 1842 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultMapping[parser.parseExpression("beep",null), parser.parseExpression("beep",null)] @TO@ VariableDeclarationFragment@@mapping1=new DefaultMapping(parser.parseExpression("beep",null),parser.parseExpression("beep",null)) @AT@ 1853 @LENGTH@ 99
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("beep",null), parser.parseExpression("beep",null)] @AT@ 1853 @LENGTH@ 3
------------INS SimpleType@@DefaultMapping @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("beep",null), parser.parseExpression("beep",null)] @AT@ 1857 @LENGTH@ 14
------------INS MethodInvocation@@parser.parseExpression("beep",null) @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("beep",null), parser.parseExpression("beep",null)] @AT@ 1872 @LENGTH@ 36
---------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("beep",null) @AT@ 1872 @LENGTH@ 6
---------------INS SimpleName@@MethodName:parseExpression:["beep", null] @TO@ MethodInvocation@@parser.parseExpression("beep",null) @AT@ 1879 @LENGTH@ 29
------------------INS StringLiteral@@"beep" @TO@ SimpleName@@MethodName:parseExpression:["beep", null] @AT@ 1895 @LENGTH@ 6
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseExpression:["beep", null] @AT@ 1903 @LENGTH@ 4
------------INS MethodInvocation@@parser.parseExpression("beep",null) @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("beep",null), parser.parseExpression("beep",null)] @AT@ 1910 @LENGTH@ 41
---------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("beep",null) @AT@ 1910 @LENGTH@ 6
---------------INS SimpleName@@MethodName:parseExpression:["beep", null] @TO@ MethodInvocation@@parser.parseExpression("beep",null) @AT@ 1917 @LENGTH@ 34
------------------INS StringLiteral@@"beep" @TO@ SimpleName@@MethodName:parseExpression:["beep", null] @AT@ 1938 @LENGTH@ 6
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseExpression:["beep", null] @AT@ 1946 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:mapper.addMapping(mapping1) @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 1956 @LENGTH@ 28
------INS MethodInvocation@@mapper.addMapping(mapping1) @TO@ ExpressionStatement@@MethodInvocation:mapper.addMapping(mapping1) @AT@ 1956 @LENGTH@ 27
---------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.addMapping(mapping1) @AT@ 1956 @LENGTH@ 6
---------INS SimpleName@@MethodName:addMapping:[mapping1] @TO@ MethodInvocation@@mapper.addMapping(mapping1) @AT@ 1963 @LENGTH@ 20
------------INS SimpleName@@mapping1 @TO@ SimpleName@@MethodName:addMapping:[mapping1] @AT@ 1974 @LENGTH@ 8
---INS VariableDeclarationStatement@@Map bean1=new HashMap(); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 1987 @LENGTH@ 26
------INS SimpleType@@Map @TO@ VariableDeclarationStatement@@Map bean1=new HashMap(); @AT@ 1987 @LENGTH@ 3
------INS VariableDeclarationFragment@@bean1=new HashMap() @TO@ VariableDeclarationStatement@@Map bean1=new HashMap(); @AT@ 1991 @LENGTH@ 21
---------INS SimpleName@@bean1 @TO@ VariableDeclarationFragment@@bean1=new HashMap() @AT@ 1991 @LENGTH@ 5
---------INS ClassInstanceCreation@@HashMap[] @TO@ VariableDeclarationFragment@@bean1=new HashMap() @AT@ 1999 @LENGTH@ 13
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1999 @LENGTH@ 3
------------INS SimpleType@@HashMap @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2003 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:bean1.put("beep","en") @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 2016 @LENGTH@ 24
------INS MethodInvocation@@bean1.put("beep","en") @TO@ ExpressionStatement@@MethodInvocation:bean1.put("beep","en") @AT@ 2016 @LENGTH@ 23
---------INS SimpleName@@Name:bean1 @TO@ MethodInvocation@@bean1.put("beep","en") @AT@ 2016 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["beep", "en"] @TO@ MethodInvocation@@bean1.put("beep","en") @AT@ 2022 @LENGTH@ 17
------------INS StringLiteral@@"beep" @TO@ SimpleName@@MethodName:put:["beep", "en"] @AT@ 2026 @LENGTH@ 6
------------INS StringLiteral@@"en" @TO@ SimpleName@@MethodName:put:["beep", "en"] @AT@ 2034 @LENGTH@ 4
---INS VariableDeclarationStatement@@TestBean2 bean2=new TestBean2(); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 2043 @LENGTH@ 34
------INS SimpleType@@TestBean2 @TO@ VariableDeclarationStatement@@TestBean2 bean2=new TestBean2(); @AT@ 2043 @LENGTH@ 9
------INS VariableDeclarationFragment@@bean2=new TestBean2() @TO@ VariableDeclarationStatement@@TestBean2 bean2=new TestBean2(); @AT@ 2053 @LENGTH@ 23
---------INS SimpleName@@bean2 @TO@ VariableDeclarationFragment@@bean2=new TestBean2() @AT@ 2053 @LENGTH@ 5
---------INS ClassInstanceCreation@@TestBean2[] @TO@ VariableDeclarationFragment@@bean2=new TestBean2() @AT@ 2061 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@TestBean2[] @AT@ 2061 @LENGTH@ 3
------------INS SimpleType@@TestBean2 @TO@ ClassInstanceCreation@@TestBean2[] @AT@ 2065 @LENGTH@ 9
---INS VariableDeclarationStatement@@MappingResults results=mapper.map(bean1,bean2); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 2080 @LENGTH@ 50
------INS SimpleType@@MappingResults @TO@ VariableDeclarationStatement@@MappingResults results=mapper.map(bean1,bean2); @AT@ 2080 @LENGTH@ 14
------INS VariableDeclarationFragment@@results=mapper.map(bean1,bean2) @TO@ VariableDeclarationStatement@@MappingResults results=mapper.map(bean1,bean2); @AT@ 2095 @LENGTH@ 34
---------INS SimpleName@@results @TO@ VariableDeclarationFragment@@results=mapper.map(bean1,bean2) @AT@ 2095 @LENGTH@ 7
---------INS MethodInvocation@@mapper.map(bean1,bean2) @TO@ VariableDeclarationFragment@@results=mapper.map(bean1,bean2) @AT@ 2105 @LENGTH@ 24
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.map(bean1,bean2) @AT@ 2105 @LENGTH@ 6
------------INS SimpleName@@MethodName:map:[bean1, bean2] @TO@ MethodInvocation@@mapper.map(bean1,bean2) @AT@ 2112 @LENGTH@ 17
---------------INS SimpleName@@bean1 @TO@ SimpleName@@MethodName:map:[bean1, bean2] @AT@ 2116 @LENGTH@ 5
---------------INS SimpleName@@bean2 @TO@ SimpleName@@MethodName:map:[bean1, bean2] @AT@ 2123 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertFalse(results.hasErrorResults()) @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 2133 @LENGTH@ 39
------INS MethodInvocation@@assertFalse(results.hasErrorResults()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(results.hasErrorResults()) @AT@ 2133 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertFalse:[results.hasErrorResults()] @TO@ MethodInvocation@@assertFalse(results.hasErrorResults()) @AT@ 2133 @LENGTH@ 38
------------INS MethodInvocation@@results.hasErrorResults() @TO@ SimpleName@@MethodName:assertFalse:[results.hasErrorResults()] @AT@ 2145 @LENGTH@ 25
---------------INS SimpleName@@Name:results @TO@ MethodInvocation@@results.hasErrorResults() @AT@ 2145 @LENGTH@ 7
---------------INS SimpleName@@MethodName:hasErrorResults:[] @TO@ MethodInvocation@@results.hasErrorResults() @AT@ 2153 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertEquals(Locale.ENGLISH,bean2.beep) @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversion,  @AT@ 2175 @LENGTH@ 41
------INS MethodInvocation@@assertEquals(Locale.ENGLISH,bean2.beep) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(Locale.ENGLISH,bean2.beep) @AT@ 2175 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertEquals:[Locale.ENGLISH, bean2.beep] @TO@ MethodInvocation@@assertEquals(Locale.ENGLISH,bean2.beep) @AT@ 2175 @LENGTH@ 40
------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:assertEquals:[Locale.ENGLISH, bean2.beep] @AT@ 2188 @LENGTH@ 14
---------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2188 @LENGTH@ 6
---------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2195 @LENGTH@ 7
------------INS QualifiedName@@bean2.beep @TO@ SimpleName@@MethodName:assertEquals:[Locale.ENGLISH, bean2.beep] @AT@ 2204 @LENGTH@ 10
---------------INS SimpleName@@bean2 @TO@ QualifiedName@@bean2.beep @AT@ 2204 @LENGTH@ 5
---------------INS SimpleName@@beep @TO@ QualifiedName@@bean2.beep @AT@ 2210 @LENGTH@ 4


UPD VariableDeclarationStatement@@String[] ignore={"JMSXUserID","JMSXAppID","JMSXDeliveryCount","JMSXProducerTXID","JMSXConsumerTXID","JMSXRcvTimestamp","JMSXState"}; @TO@ String[] ignore={"JMSXUserID","JMSXAppID","JMSXDeliveryCount","JMSXProducerTXID","JMSXConsumerTXID","JMSXRcvTimestamp","JMSXRecvTimestamp","JMSXState"}; @AT@ 11338 @LENGTH@ 167
---UPD VariableDeclarationFragment@@ignore={"JMSXUserID","JMSXAppID","JMSXDeliveryCount","JMSXProducerTXID","JMSXConsumerTXID","JMSXRcvTimestamp","JMSXState"} @TO@ ignore={"JMSXUserID","JMSXAppID","JMSXDeliveryCount","JMSXProducerTXID","JMSXConsumerTXID","JMSXRcvTimestamp","JMSXRecvTimestamp","JMSXState"} @AT@ 11347 @LENGTH@ 157
------UPD ArrayInitializer@@{"JMSXUserID","JMSXAppID","JMSXDeliveryCount","JMSXProducerTXID","JMSXConsumerTXID","JMSXRcvTimestamp","JMSXState"} @TO@ {"JMSXUserID","JMSXAppID","JMSXDeliveryCount","JMSXProducerTXID","JMSXConsumerTXID","JMSXRcvTimestamp","JMSXRecvTimestamp","JMSXState"} @AT@ 11356 @LENGTH@ 148
---------INS StringLiteral@@"JMSXRecvTimestamp" @TO@ ArrayInitializer@@{"JMSXUserID","JMSXAppID","JMSXDeliveryCount","JMSXProducerTXID","JMSXConsumerTXID","JMSXRcvTimestamp","JMSXState"} @AT@ 11618 @LENGTH@ 19


DEL ExpressionStatement@@MethodInvocation:sendExchange(expectedBody) @AT@ 2664 @LENGTH@ 27
---DEL MethodInvocation@@sendExchange(expectedBody) @AT@ 2664 @LENGTH@ 26
------DEL SimpleName@@MethodName:sendExchange:[expectedBody] @AT@ 2664 @LENGTH@ 26
---------DEL SimpleName@@expectedBody @AT@ 2677 @LENGTH@ 12


DEL FieldDeclaration@@public, static, final, String, [DEFAULT_LOCK_FILE_POSTFIX=".cameLock"] @AT@ 1538 @LENGTH@ 67
---DEL Modifier@@public @AT@ 1538 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1545 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1552 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1558 @LENGTH@ 6
---DEL VariableDeclarationFragment@@DEFAULT_LOCK_FILE_POSTFIX=".cameLock" @AT@ 1565 @LENGTH@ 39
------DEL SimpleName@@DEFAULT_LOCK_FILE_POSTFIX @AT@ 1565 @LENGTH@ 25
------DEL StringLiteral@@".cameLock" @AT@ 1593 @LENGTH@ 11


UPD MethodDeclaration@@public, CxfExchange, MethodName:createExchange,  @TO@ public, Exchange, MethodName:createExchange,  @AT@ 3143 @LENGTH@ 116
---UPD SimpleType@@CxfExchange @TO@ Exchange @AT@ 3150 @LENGTH@ 11


MOV ExpressionStatement@@MethodInvocation:context.viewRendered(view) @TO@ MethodDeclaration@@private, void, MethodName:render, RequestControlContext context, View view, ViewRenderingException,  @AT@ 7185 @LENGTH@ 27


UPD IfStatement@@if (key != null) {  return key.toString().toLowerCase();} else {  return AbstractHashedMap.NULL;} @TO@ if (key != null) {  char[] chars=key.toString().toCharArray();  for (int i=chars.length - 1; i >= 0; i--) {    chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i]));  }  return new String(chars);} else {  return AbstractHashedMap.NULL;} @AT@ 4434 @LENGTH@ 137
---UPD Block@@ThenBody:{  return key.toString().toLowerCase();} @TO@ ThenBody:{  char[] chars=key.toString().toCharArray();  for (int i=chars.length - 1; i >= 0; i--) {    chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i]));  }  return new String(chars);} @AT@ 4451 @LENGTH@ 60
------INS VariableDeclarationStatement@@char[] chars=key.toString().toCharArray(); @TO@ Block@@ThenBody:{  return key.toString().toLowerCase();} @AT@ 4453 @LENGTH@ 44
---------INS ArrayType@@char[] @TO@ VariableDeclarationStatement@@char[] chars=key.toString().toCharArray(); @AT@ 4453 @LENGTH@ 6
------------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 4453 @LENGTH@ 4
---------INS VariableDeclarationFragment@@chars=key.toString().toCharArray() @TO@ VariableDeclarationStatement@@char[] chars=key.toString().toCharArray(); @AT@ 4460 @LENGTH@ 36
------------INS SimpleName@@chars @TO@ VariableDeclarationFragment@@chars=key.toString().toCharArray() @AT@ 4460 @LENGTH@ 5
------------INS MethodInvocation@@key.toString().toCharArray() @TO@ VariableDeclarationFragment@@chars=key.toString().toCharArray() @AT@ 4468 @LENGTH@ 28
---------------MOV MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@key.toString().toCharArray() @AT@ 4472 @LENGTH@ 14
---------------MOV SimpleName@@Name:key @TO@ MethodInvocation@@key.toString().toCharArray() @AT@ 4472 @LENGTH@ 3
---------------MOV SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@key.toString().toCharArray() @AT@ 4487 @LENGTH@ 13
------DEL ReturnStatement@@MethodInvocation:key.toString().toLowerCase() @AT@ 4465 @LENGTH@ 36
---------DEL MethodInvocation@@key.toString().toLowerCase() @AT@ 4472 @LENGTH@ 28
------INS ForStatement@@for (int i=chars.length - 1; i >= 0; i--) {  chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i]));} @TO@ Block@@ThenBody:{  return key.toString().toLowerCase();} @AT@ 4510 @LENGTH@ 142
---------INS VariableDeclarationExpression@@int i=chars.length - 1 @TO@ ForStatement@@for (int i=chars.length - 1; i >= 0; i--) {  chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i]));} @AT@ 4515 @LENGTH@ 24
------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=chars.length - 1 @AT@ 4515 @LENGTH@ 3
------------INS VariableDeclarationFragment@@i=chars.length - 1 @TO@ VariableDeclarationExpression@@int i=chars.length - 1 @AT@ 4519 @LENGTH@ 20
---------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=chars.length - 1 @AT@ 4519 @LENGTH@ 1
---------------INS InfixExpression@@chars.length - 1 @TO@ VariableDeclarationFragment@@i=chars.length - 1 @AT@ 4523 @LENGTH@ 16
------------------INS QualifiedName@@chars.length @TO@ InfixExpression@@chars.length - 1 @AT@ 4523 @LENGTH@ 12
---------------------INS SimpleName@@chars @TO@ QualifiedName@@chars.length @AT@ 4523 @LENGTH@ 5
---------------------INS SimpleName@@length @TO@ QualifiedName@@chars.length @AT@ 4529 @LENGTH@ 6
------------------INS Operator@@- @TO@ InfixExpression@@chars.length - 1 @AT@ 4535 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@chars.length - 1 @AT@ 4538 @LENGTH@ 1
---------INS InfixExpression@@i >= 0 @TO@ ForStatement@@for (int i=chars.length - 1; i >= 0; i--) {  chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i]));} @AT@ 4541 @LENGTH@ 6
------------INS SimpleName@@i @TO@ InfixExpression@@i >= 0 @AT@ 4541 @LENGTH@ 1
------------INS Operator@@>= @TO@ InfixExpression@@i >= 0 @AT@ 4542 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@i >= 0 @AT@ 4546 @LENGTH@ 1
---------INS PostfixExpression@@i-- @TO@ ForStatement@@for (int i=chars.length - 1; i >= 0; i--) {  chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i]));} @AT@ 4549 @LENGTH@ 3
------------INS SimpleName@@i @TO@ PostfixExpression@@i-- @AT@ 4549 @LENGTH@ 1
------------INS Operator@@-- @TO@ PostfixExpression@@i-- @AT@ 4551 @LENGTH@ 2
---------INS ExpressionStatement@@Assignment:chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i])) @TO@ ForStatement@@for (int i=chars.length - 1; i >= 0; i--) {  chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i]));} @AT@ 4572 @LENGTH@ 66
------------INS Assignment@@chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i])) @TO@ ExpressionStatement@@Assignment:chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i])) @AT@ 4572 @LENGTH@ 65
---------------INS ArrayAccess@@chars[i] @TO@ Assignment@@chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i])) @AT@ 4572 @LENGTH@ 8
------------------INS SimpleName@@chars @TO@ ArrayAccess@@chars[i] @AT@ 4572 @LENGTH@ 5
------------------INS SimpleName@@i @TO@ ArrayAccess@@chars[i] @AT@ 4578 @LENGTH@ 1
---------------INS Operator@@= @TO@ Assignment@@chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i])) @AT@ 4580 @LENGTH@ 1
---------------INS MethodInvocation@@Character.toLowerCase(Character.toUpperCase(chars[i])) @TO@ Assignment@@chars[i]=Character.toLowerCase(Character.toUpperCase(chars[i])) @AT@ 4583 @LENGTH@ 54
------------------INS SimpleName@@Name:Character @TO@ MethodInvocation@@Character.toLowerCase(Character.toUpperCase(chars[i])) @AT@ 4583 @LENGTH@ 9
------------------INS SimpleName@@MethodName:toLowerCase:[Character.toUpperCase(chars[i])] @TO@ MethodInvocation@@Character.toLowerCase(Character.toUpperCase(chars[i])) @AT@ 4593 @LENGTH@ 44
---------------------INS MethodInvocation@@Character.toUpperCase(chars[i]) @TO@ SimpleName@@MethodName:toLowerCase:[Character.toUpperCase(chars[i])] @AT@ 4605 @LENGTH@ 31
------------------------INS SimpleName@@Name:Character @TO@ MethodInvocation@@Character.toUpperCase(chars[i]) @AT@ 4605 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:toUpperCase:[chars[i]] @TO@ MethodInvocation@@Character.toUpperCase(chars[i]) @AT@ 4615 @LENGTH@ 21
---------------------------INS ArrayAccess@@chars[i] @TO@ SimpleName@@MethodName:toUpperCase:[chars[i]] @AT@ 4627 @LENGTH@ 8
------------------------------INS SimpleName@@chars @TO@ ArrayAccess@@chars[i] @AT@ 4627 @LENGTH@ 5
------------------------------INS SimpleName@@i @TO@ ArrayAccess@@chars[i] @AT@ 4633 @LENGTH@ 1
------INS ReturnStatement@@ClassInstanceCreation:new String(chars) @TO@ Block@@ThenBody:{  return key.toString().toLowerCase();} @AT@ 4665 @LENGTH@ 25
---------INS ClassInstanceCreation@@String[chars] @TO@ ReturnStatement@@ClassInstanceCreation:new String(chars) @AT@ 4672 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@String[chars] @AT@ 4672 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[chars] @AT@ 4676 @LENGTH@ 6
------------INS SimpleName@@chars @TO@ ClassInstanceCreation@@String[chars] @AT@ 4683 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:requests.send(getSimpleMessage("foo",new Long(4321))) @TO@ MethodInvocation:requests.send(getSimpleMessage("foo",4321L)) @AT@ 6293 @LENGTH@ 55
---UPD MethodInvocation@@requests.send(getSimpleMessage("foo",new Long(4321))) @TO@ requests.send(getSimpleMessage("foo",4321L)) @AT@ 6293 @LENGTH@ 54
------UPD SimpleName@@MethodName:send:[getSimpleMessage("foo",new Long(4321))] @TO@ MethodName:send:[getSimpleMessage("foo",4321L)] @AT@ 6302 @LENGTH@ 45
---------UPD MethodInvocation@@getSimpleMessage("foo",new Long(4321)) @TO@ getSimpleMessage("foo",4321L) @AT@ 6307 @LENGTH@ 39
------------UPD SimpleName@@MethodName:getSimpleMessage:["foo", new Long(4321)] @TO@ MethodName:getSimpleMessage:["foo", 4321L] @AT@ 6307 @LENGTH@ 39
---------------DEL ClassInstanceCreation@@Long[4321] @AT@ 6331 @LENGTH@ 14
------------------DEL New@@new @AT@ 6331 @LENGTH@ 3
------------------DEL SimpleType@@Long @AT@ 6335 @LENGTH@ 4
------------------DEL NumberLiteral@@4321 @AT@ 6340 @LENGTH@ 4
---------------INS NumberLiteral@@4321L @TO@ SimpleName@@MethodName:getSimpleMessage:["foo", new Long(4321)] @AT@ 6331 @LENGTH@ 5


UPD MethodDeclaration@@public, SpringIntegrationExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 2742 @LENGTH@ 154
---UPD SimpleType@@SpringIntegrationExchange @TO@ Exchange @AT@ 2749 @LENGTH@ 25


UPD FieldDeclaration@@private, JobExecution, [jobExecution=new JobExecution(new JobInstance(new Long(0L),new JobParameters(),"job"))] @TO@ private, JobExecution, [jobExecution=new JobExecution(new JobInstance(0L,new JobParameters(),"job"))] @AT@ 1688 @LENGTH@ 112
---UPD VariableDeclarationFragment@@jobExecution=new JobExecution(new JobInstance(new Long(0L),new JobParameters(),"job")) @TO@ jobExecution=new JobExecution(new JobInstance(0L,new JobParameters(),"job")) @AT@ 1709 @LENGTH@ 90
------UPD ClassInstanceCreation@@JobExecution[new JobInstance(new Long(0L),new JobParameters(),"job")] @TO@ JobExecution[new JobInstance(0L,new JobParameters(),"job")] @AT@ 1724 @LENGTH@ 75
---------UPD ClassInstanceCreation@@JobInstance[new Long(0L), new JobParameters(), "job"] @TO@ JobInstance[0L, new JobParameters(), "job"] @AT@ 1741 @LENGTH@ 57
------------DEL ClassInstanceCreation@@Long[0L] @AT@ 1757 @LENGTH@ 12
---------------DEL New@@new @AT@ 1757 @LENGTH@ 3
---------------DEL SimpleType@@Long @AT@ 1761 @LENGTH@ 4
------------MOV NumberLiteral@@0L @TO@ ClassInstanceCreation@@JobInstance[new Long(0L), new JobParameters(), "job"] @AT@ 1766 @LENGTH@ 2


UPD MethodDeclaration@@public, MinaExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 3113 @LENGTH@ 134
---UPD SimpleType@@MinaExchange @TO@ Exchange @AT@ 3120 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisifed() @TO@ MethodInvocation:assertMockEndpointsSatisfied() @AT@ 2289 @LENGTH@ 31
---UPD MethodInvocation@@MethodName:assertMockEndpointsSatisifed:[] @TO@ MethodName:assertMockEndpointsSatisfied:[] @AT@ 2289 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:testCollections304,  @TO@ TypeDeclaration@@[public]TestSetUniqueList, AbstractTestList @AT@ 14351 @LENGTH@ 659
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14351 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14358 @LENGTH@ 4
---INS SimpleName@@MethodName:testCollections304 @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14363 @LENGTH@ 18
---INS VariableDeclarationStatement@@List list=new LinkedList(); @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14394 @LENGTH@ 29
------INS SimpleType@@List @TO@ VariableDeclarationStatement@@List list=new LinkedList(); @AT@ 14394 @LENGTH@ 4
------INS VariableDeclarationFragment@@list=new LinkedList() @TO@ VariableDeclarationStatement@@List list=new LinkedList(); @AT@ 14399 @LENGTH@ 23
---------INS SimpleName@@list @TO@ VariableDeclarationFragment@@list=new LinkedList() @AT@ 14399 @LENGTH@ 4
---------INS ClassInstanceCreation@@LinkedList[] @TO@ VariableDeclarationFragment@@list=new LinkedList() @AT@ 14406 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedList[] @AT@ 14406 @LENGTH@ 3
------------INS SimpleType@@LinkedList @TO@ ClassInstanceCreation@@LinkedList[] @AT@ 14410 @LENGTH@ 10
---INS VariableDeclarationStatement@@SetUniqueList decoratedList=SetUniqueList.decorate(list); @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14432 @LENGTH@ 59
------INS SimpleType@@SetUniqueList @TO@ VariableDeclarationStatement@@SetUniqueList decoratedList=SetUniqueList.decorate(list); @AT@ 14432 @LENGTH@ 13
------INS VariableDeclarationFragment@@decoratedList=SetUniqueList.decorate(list) @TO@ VariableDeclarationStatement@@SetUniqueList decoratedList=SetUniqueList.decorate(list); @AT@ 14446 @LENGTH@ 44
---------INS SimpleName@@decoratedList @TO@ VariableDeclarationFragment@@decoratedList=SetUniqueList.decorate(list) @AT@ 14446 @LENGTH@ 13
---------INS MethodInvocation@@SetUniqueList.decorate(list) @TO@ VariableDeclarationFragment@@decoratedList=SetUniqueList.decorate(list) @AT@ 14462 @LENGTH@ 28
------------INS SimpleName@@Name:SetUniqueList @TO@ MethodInvocation@@SetUniqueList.decorate(list) @AT@ 14462 @LENGTH@ 13
------------INS SimpleName@@MethodName:decorate:[list] @TO@ MethodInvocation@@SetUniqueList.decorate(list) @AT@ 14476 @LENGTH@ 14
---------------INS SimpleName@@list @TO@ SimpleName@@MethodName:decorate:[list] @AT@ 14485 @LENGTH@ 4
---INS VariableDeclarationStatement@@String s1="Apple"; @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14500 @LENGTH@ 20
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s1="Apple"; @AT@ 14500 @LENGTH@ 6
------INS VariableDeclarationFragment@@s1="Apple" @TO@ VariableDeclarationStatement@@String s1="Apple"; @AT@ 14507 @LENGTH@ 12
---------INS SimpleName@@s1 @TO@ VariableDeclarationFragment@@s1="Apple" @AT@ 14507 @LENGTH@ 2
---------INS StringLiteral@@"Apple" @TO@ VariableDeclarationFragment@@s1="Apple" @AT@ 14512 @LENGTH@ 7
---INS VariableDeclarationStatement@@String s2="Lemon"; @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14529 @LENGTH@ 20
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s2="Lemon"; @AT@ 14529 @LENGTH@ 6
------INS VariableDeclarationFragment@@s2="Lemon" @TO@ VariableDeclarationStatement@@String s2="Lemon"; @AT@ 14536 @LENGTH@ 12
---------INS SimpleName@@s2 @TO@ VariableDeclarationFragment@@s2="Lemon" @AT@ 14536 @LENGTH@ 2
---------INS StringLiteral@@"Lemon" @TO@ VariableDeclarationFragment@@s2="Lemon" @AT@ 14541 @LENGTH@ 7
---INS VariableDeclarationStatement@@String s3="Orange"; @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14558 @LENGTH@ 21
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s3="Orange"; @AT@ 14558 @LENGTH@ 6
------INS VariableDeclarationFragment@@s3="Orange" @TO@ VariableDeclarationStatement@@String s3="Orange"; @AT@ 14565 @LENGTH@ 13
---------INS SimpleName@@s3 @TO@ VariableDeclarationFragment@@s3="Orange" @AT@ 14565 @LENGTH@ 2
---------INS StringLiteral@@"Orange" @TO@ VariableDeclarationFragment@@s3="Orange" @AT@ 14570 @LENGTH@ 8
---INS VariableDeclarationStatement@@String s4="Strawberry"; @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14588 @LENGTH@ 25
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s4="Strawberry"; @AT@ 14588 @LENGTH@ 6
------INS VariableDeclarationFragment@@s4="Strawberry" @TO@ VariableDeclarationStatement@@String s4="Strawberry"; @AT@ 14595 @LENGTH@ 17
---------INS SimpleName@@s4 @TO@ VariableDeclarationFragment@@s4="Strawberry" @AT@ 14595 @LENGTH@ 2
---------INS StringLiteral@@"Strawberry" @TO@ VariableDeclarationFragment@@s4="Strawberry" @AT@ 14600 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:decoratedList.add(s1) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14623 @LENGTH@ 22
------INS MethodInvocation@@decoratedList.add(s1) @TO@ ExpressionStatement@@MethodInvocation:decoratedList.add(s1) @AT@ 14623 @LENGTH@ 21
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add(s1) @AT@ 14623 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[s1] @TO@ MethodInvocation@@decoratedList.add(s1) @AT@ 14637 @LENGTH@ 7
------------INS SimpleName@@s1 @TO@ SimpleName@@MethodName:add:[s1] @AT@ 14641 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:decoratedList.add(s2) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14654 @LENGTH@ 22
------INS MethodInvocation@@decoratedList.add(s2) @TO@ ExpressionStatement@@MethodInvocation:decoratedList.add(s2) @AT@ 14654 @LENGTH@ 21
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add(s2) @AT@ 14654 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[s2] @TO@ MethodInvocation@@decoratedList.add(s2) @AT@ 14668 @LENGTH@ 7
------------INS SimpleName@@s2 @TO@ SimpleName@@MethodName:add:[s2] @AT@ 14672 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:decoratedList.add(s3) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14685 @LENGTH@ 22
------INS MethodInvocation@@decoratedList.add(s3) @TO@ ExpressionStatement@@MethodInvocation:decoratedList.add(s3) @AT@ 14685 @LENGTH@ 21
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add(s3) @AT@ 14685 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[s3] @TO@ MethodInvocation@@decoratedList.add(s3) @AT@ 14699 @LENGTH@ 7
------------INS SimpleName@@s3 @TO@ SimpleName@@MethodName:add:[s3] @AT@ 14703 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,decoratedList.size()) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14717 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(3,decoratedList.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,decoratedList.size()) @AT@ 14717 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @TO@ MethodInvocation@@assertEquals(3,decoratedList.size()) @AT@ 14717 @LENGTH@ 37
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @AT@ 14730 @LENGTH@ 1
------------INS MethodInvocation@@decoratedList.size() @TO@ SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @AT@ 14733 @LENGTH@ 20
---------------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.size() @AT@ 14733 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@decoratedList.size() @AT@ 14747 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:decoratedList.set(1,s4) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14765 @LENGTH@ 25
------INS MethodInvocation@@decoratedList.set(1,s4) @TO@ ExpressionStatement@@MethodInvocation:decoratedList.set(1,s4) @AT@ 14765 @LENGTH@ 24
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.set(1,s4) @AT@ 14765 @LENGTH@ 13
---------INS SimpleName@@MethodName:set:[1, s4] @TO@ MethodInvocation@@decoratedList.set(1,s4) @AT@ 14779 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:set:[1, s4] @AT@ 14783 @LENGTH@ 1
------------INS SimpleName@@s4 @TO@ SimpleName@@MethodName:set:[1, s4] @AT@ 14786 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,decoratedList.size()) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14800 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(3,decoratedList.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,decoratedList.size()) @AT@ 14800 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @TO@ MethodInvocation@@assertEquals(3,decoratedList.size()) @AT@ 14800 @LENGTH@ 37
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @AT@ 14813 @LENGTH@ 1
------------INS MethodInvocation@@decoratedList.size() @TO@ SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @AT@ 14816 @LENGTH@ 20
---------------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.size() @AT@ 14816 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@decoratedList.size() @AT@ 14830 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:decoratedList.add(1,s4) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14848 @LENGTH@ 25
------INS MethodInvocation@@decoratedList.add(1,s4) @TO@ ExpressionStatement@@MethodInvocation:decoratedList.add(1,s4) @AT@ 14848 @LENGTH@ 24
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add(1,s4) @AT@ 14848 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[1, s4] @TO@ MethodInvocation@@decoratedList.add(1,s4) @AT@ 14862 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:add:[1, s4] @AT@ 14866 @LENGTH@ 1
------------INS SimpleName@@s4 @TO@ SimpleName@@MethodName:add:[1, s4] @AT@ 14869 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,decoratedList.size()) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14883 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(3,decoratedList.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,decoratedList.size()) @AT@ 14883 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @TO@ MethodInvocation@@assertEquals(3,decoratedList.size()) @AT@ 14883 @LENGTH@ 37
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @AT@ 14896 @LENGTH@ 1
------------INS MethodInvocation@@decoratedList.size() @TO@ SimpleName@@MethodName:assertEquals:[3, decoratedList.size()] @AT@ 14899 @LENGTH@ 20
---------------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.size() @AT@ 14899 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@decoratedList.size() @AT@ 14913 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:decoratedList.add(1,s2) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14931 @LENGTH@ 25
------INS MethodInvocation@@decoratedList.add(1,s2) @TO@ ExpressionStatement@@MethodInvocation:decoratedList.add(1,s2) @AT@ 14931 @LENGTH@ 24
---------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.add(1,s2) @AT@ 14931 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[1, s2] @TO@ MethodInvocation@@decoratedList.add(1,s2) @AT@ 14945 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:add:[1, s2] @AT@ 14949 @LENGTH@ 1
------------INS SimpleName@@s2 @TO@ SimpleName@@MethodName:add:[1, s2] @AT@ 14952 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals(4,decoratedList.size()) @TO@ MethodDeclaration@@public, void, MethodName:testCollections304,  @AT@ 14966 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(4,decoratedList.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(4,decoratedList.size()) @AT@ 14966 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[4, decoratedList.size()] @TO@ MethodInvocation@@assertEquals(4,decoratedList.size()) @AT@ 14966 @LENGTH@ 37
------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:assertEquals:[4, decoratedList.size()] @AT@ 14979 @LENGTH@ 1
------------INS MethodInvocation@@decoratedList.size() @TO@ SimpleName@@MethodName:assertEquals:[4, decoratedList.size()] @AT@ 14982 @LENGTH@ 20
---------------INS SimpleName@@Name:decoratedList @TO@ MethodInvocation@@decoratedList.size() @AT@ 14982 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@decoratedList.size() @AT@ 14996 @LENGTH@ 6


UPD ForStatement@@for (int i=0; i < ranges.length; i++) {  if (ranges[i].getMax() > maxRange) {    maxRange=ranges[i].getMax();  }} @TO@ for (int i=0; i < ranges.length; i++) {  int upperBound;  if (ranges[i].hasMaxValue()) {    upperBound=ranges[i].getMax();  } else {    upperBound=ranges[i].getMin();  }  if (upperBound > maxRange) {    maxRange=upperBound;  }} @AT@ 1684 @LENGTH@ 121
---UPD IfStatement@@if (ranges[i].getMax() > maxRange) {  maxRange=ranges[i].getMax();} @TO@ if (ranges[i].hasMaxValue()) {  upperBound=ranges[i].getMax();} else {  upperBound=ranges[i].getMin();} @AT@ 1727 @LENGTH@ 74
------DEL InfixExpression@@ranges[i].getMax() > maxRange @AT@ 1730 @LENGTH@ 29
---------DEL MethodInvocation@@ranges[i].getMax() @AT@ 1730 @LENGTH@ 18
---------DEL Operator@@> @AT@ 1748 @LENGTH@ 1
---------DEL SimpleName@@maxRange @AT@ 1751 @LENGTH@ 8
------UPD Block@@ThenBody:{  maxRange=ranges[i].getMax();} @TO@ ThenBody:{  upperBound=ranges[i].getMax();} @AT@ 1760 @LENGTH@ 41
---------UPD ExpressionStatement@@Assignment:maxRange=ranges[i].getMax() @TO@ Assignment:upperBound=ranges[i].getMax() @AT@ 1766 @LENGTH@ 30
------------UPD Assignment@@maxRange=ranges[i].getMax() @TO@ upperBound=ranges[i].getMax() @AT@ 1766 @LENGTH@ 29
---------------UPD SimpleName@@maxRange @TO@ upperBound @AT@ 1766 @LENGTH@ 8
------INS MethodInvocation@@ranges[i].hasMaxValue() @TO@ IfStatement@@if (ranges[i].getMax() > maxRange) {  maxRange=ranges[i].getMax();} @AT@ 1969 @LENGTH@ 23
---------MOV ArrayAccess@@ranges[i] @TO@ MethodInvocation@@ranges[i].hasMaxValue() @AT@ 1730 @LENGTH@ 9
---------MOV SimpleName@@MethodName:getMax:[] @TO@ MethodInvocation@@ranges[i].hasMaxValue() @AT@ 1740 @LENGTH@ 8
------INS Block@@ElseBody:{  upperBound=ranges[i].getMin();} @TO@ IfStatement@@if (ranges[i].getMax() > maxRange) {  maxRange=ranges[i].getMax();} @AT@ 2044 @LENGTH@ 43
---------INS ExpressionStatement@@Assignment:upperBound=ranges[i].getMin() @TO@ Block@@ElseBody:{  upperBound=ranges[i].getMin();} @AT@ 2050 @LENGTH@ 32
------------INS Assignment@@upperBound=ranges[i].getMin() @TO@ ExpressionStatement@@Assignment:upperBound=ranges[i].getMin() @AT@ 2050 @LENGTH@ 31
---------------INS SimpleName@@upperBound @TO@ Assignment@@upperBound=ranges[i].getMin() @AT@ 2050 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@upperBound=ranges[i].getMin() @AT@ 2060 @LENGTH@ 1
---------------INS MethodInvocation@@ranges[i].getMin() @TO@ Assignment@@upperBound=ranges[i].getMin() @AT@ 2063 @LENGTH@ 18
------------------INS ArrayAccess@@ranges[i] @TO@ MethodInvocation@@ranges[i].getMin() @AT@ 2063 @LENGTH@ 9
---------------------INS SimpleName@@ranges @TO@ ArrayAccess@@ranges[i] @AT@ 2063 @LENGTH@ 6
---------------------INS SimpleName@@i @TO@ ArrayAccess@@ranges[i] @AT@ 2070 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMin:[] @TO@ MethodInvocation@@ranges[i].getMin() @AT@ 2073 @LENGTH@ 8
---INS VariableDeclarationStatement@@int upperBound; @TO@ ForStatement@@for (int i=0; i < ranges.length; i++) {  if (ranges[i].getMax() > maxRange) {    maxRange=ranges[i].getMax();  }} @AT@ 1947 @LENGTH@ 15
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int upperBound; @AT@ 1947 @LENGTH@ 3
------INS VariableDeclarationFragment@@upperBound @TO@ VariableDeclarationStatement@@int upperBound; @AT@ 1951 @LENGTH@ 10
---------INS SimpleName@@upperBound @TO@ VariableDeclarationFragment@@upperBound @AT@ 1951 @LENGTH@ 10
---INS IfStatement@@if (upperBound > maxRange) {  maxRange=upperBound;} @TO@ ForStatement@@for (int i=0; i < ranges.length; i++) {  if (ranges[i].getMax() > maxRange) {    maxRange=ranges[i].getMax();  }} @AT@ 2095 @LENGTH@ 58
------INS InfixExpression@@upperBound > maxRange @TO@ IfStatement@@if (upperBound > maxRange) {  maxRange=upperBound;} @AT@ 2098 @LENGTH@ 21
---------INS SimpleName@@upperBound @TO@ InfixExpression@@upperBound > maxRange @AT@ 2098 @LENGTH@ 10
---------INS Operator@@> @TO@ InfixExpression@@upperBound > maxRange @AT@ 2108 @LENGTH@ 1
---------INS SimpleName@@maxRange @TO@ InfixExpression@@upperBound > maxRange @AT@ 2111 @LENGTH@ 8
------INS Block@@ThenBody:{  maxRange=upperBound;} @TO@ IfStatement@@if (upperBound > maxRange) {  maxRange=upperBound;} @AT@ 2120 @LENGTH@ 33
---------INS ExpressionStatement@@Assignment:maxRange=upperBound @TO@ Block@@ThenBody:{  maxRange=upperBound;} @AT@ 2126 @LENGTH@ 22
------------INS Assignment@@maxRange=upperBound @TO@ ExpressionStatement@@Assignment:maxRange=upperBound @AT@ 2126 @LENGTH@ 21
---------------INS SimpleName@@maxRange @TO@ Assignment@@maxRange=upperBound @AT@ 2126 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@maxRange=upperBound @AT@ 2134 @LENGTH@ 1
---------------INS SimpleName@@upperBound @TO@ Assignment@@maxRange=upperBound @AT@ 2137 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:process(endpoint.createExchange(exchange)) @TO@ MethodInvocation:process((RemoteFileExchange)endpoint.createExchange(exchange)) @AT@ 1844 @LENGTH@ 43
---UPD MethodInvocation@@process(endpoint.createExchange(exchange)) @TO@ process((RemoteFileExchange)endpoint.createExchange(exchange)) @AT@ 1844 @LENGTH@ 42
------UPD SimpleName@@MethodName:process:[endpoint.createExchange(exchange)] @TO@ MethodName:process:[(RemoteFileExchange)endpoint.createExchange(exchange)] @AT@ 1844 @LENGTH@ 42
---------INS CastExpression@@(RemoteFileExchange)endpoint.createExchange(exchange) @TO@ SimpleName@@MethodName:process:[endpoint.createExchange(exchange)] @AT@ 1852 @LENGTH@ 53
------------MOV MethodInvocation@@endpoint.createExchange(exchange) @TO@ CastExpression@@(RemoteFileExchange)endpoint.createExchange(exchange) @AT@ 1852 @LENGTH@ 33
------------INS SimpleType@@RemoteFileExchange @TO@ CastExpression@@(RemoteFileExchange)endpoint.createExchange(exchange) @AT@ 1853 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[public]FlowDefinition, [Annotated] @AT@ 3631 @LENGTH@ 22
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3631 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3638 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 3643 @LENGTH@ 7


DEL MethodDeclaration@@public, void, MethodName:testSimple, Exception,  @AT@ 3056 @LENGTH@ 383
---DEL Modifier@@public @AT@ 3056 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3063 @LENGTH@ 4
---DEL SimpleName@@MethodName:testSimple @AT@ 3068 @LENGTH@ 10
---DEL SimpleType@@Exception @AT@ 3088 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:assertExpression("${body}","<hello id='m123'>world!</hello>") @AT@ 3108 @LENGTH@ 63
------DEL MethodInvocation@@assertExpression("${body}","<hello id='m123'>world!</hello>") @AT@ 3108 @LENGTH@ 62
---------DEL SimpleName@@MethodName:assertExpression:["${body}", "<hello id='m123'>world!</hello>"] @AT@ 3108 @LENGTH@ 62
------------DEL StringLiteral@@"${body}" @AT@ 3125 @LENGTH@ 9
------------DEL StringLiteral@@"<hello id='m123'>world!</hello>" @AT@ 3136 @LENGTH@ 33
---DEL ExpressionStatement@@MethodInvocation:assertExpression("${in.header.foo}","abc") @AT@ 3180 @LENGTH@ 44
------DEL MethodInvocation@@assertExpression("${in.header.foo}","abc") @AT@ 3180 @LENGTH@ 43
---------DEL SimpleName@@MethodName:assertExpression:["${in.header.foo}", "abc"] @AT@ 3180 @LENGTH@ 43
------------DEL StringLiteral@@"${in.header.foo}" @AT@ 3197 @LENGTH@ 18
------------DEL StringLiteral@@"abc" @AT@ 3217 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:assertExpression("${simple:in.header.foo}","abc") @AT@ 3303 @LENGTH@ 51
------DEL MethodInvocation@@assertExpression("${simple:in.header.foo}","abc") @AT@ 3303 @LENGTH@ 50
---------DEL SimpleName@@MethodName:assertExpression:["${simple:in.header.foo}", "abc"] @AT@ 3303 @LENGTH@ 50
------------DEL StringLiteral@@"${simple:in.header.foo}" @AT@ 3320 @LENGTH@ 25
------------DEL StringLiteral@@"abc" @AT@ 3347 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:assertExpression("${simple:body}","<hello id='m123'>world!</hello>") @AT@ 3363 @LENGTH@ 70
------DEL MethodInvocation@@assertExpression("${simple:body}","<hello id='m123'>world!</hello>") @AT@ 3363 @LENGTH@ 69
---------DEL SimpleName@@MethodName:assertExpression:["${simple:body}", "<hello id='m123'>world!</hello>"] @AT@ 3363 @LENGTH@ 69
------------DEL StringLiteral@@"${simple:body}" @AT@ 3380 @LENGTH@ 16
------------DEL StringLiteral@@"<hello id='m123'>world!</hello>" @AT@ 3398 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:setName(HibernateCursorItemReader.class.getSimpleName()) @TO@ MethodInvocation:setName(ClassUtils.getShortName(HibernateCursorItemReader.class)) @AT@ 2857 @LENGTH@ 57
---UPD MethodInvocation@@setName(HibernateCursorItemReader.class.getSimpleName()) @TO@ setName(ClassUtils.getShortName(HibernateCursorItemReader.class)) @AT@ 2857 @LENGTH@ 56
------UPD SimpleName@@MethodName:setName:[HibernateCursorItemReader.class.getSimpleName()] @TO@ MethodName:setName:[ClassUtils.getShortName(HibernateCursorItemReader.class)] @AT@ 2857 @LENGTH@ 56
---------UPD MethodInvocation@@HibernateCursorItemReader.class.getSimpleName() @TO@ ClassUtils.getShortName(HibernateCursorItemReader.class) @AT@ 2865 @LENGTH@ 47
------------DEL TypeLiteral@@HibernateCursorItemReader.class @AT@ 2865 @LENGTH@ 31
------------DEL SimpleName@@MethodName:getSimpleName:[] @AT@ 2897 @LENGTH@ 15
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@HibernateCursorItemReader.class.getSimpleName() @AT@ 2909 @LENGTH@ 10
------------INS SimpleName@@MethodName:getShortName:[HibernateCursorItemReader.class] @TO@ MethodInvocation@@HibernateCursorItemReader.class.getSimpleName() @AT@ 2920 @LENGTH@ 45
---------------INS TypeLiteral@@HibernateCursorItemReader.class @TO@ SimpleName@@MethodName:getShortName:[HibernateCursorItemReader.class] @AT@ 2933 @LENGTH@ 31


UPD IfStatement@@if (node instanceof MulticastType) {  List<ProcessorType> outputs=node.getOutputs();  for (  ProcessorType output : outputs) {    printNode(writer,fromData,output);  }  return fromData;} @TO@ if (node instanceof MulticastType || node instanceof InterceptorRef) {  List<ProcessorType> outputs=node.getOutputs();  for (  ProcessorType output : outputs) {    printNode(writer,fromData,output);  }  return fromData;} @AT@ 3424 @LENGTH@ 298
---DEL InstanceofExpression@@node instanceof MulticastType @AT@ 3428 @LENGTH@ 29
---INS InfixExpression@@node instanceof MulticastType || node instanceof InterceptorRef @TO@ IfStatement@@if (node instanceof MulticastType) {  List<ProcessorType> outputs=node.getOutputs();  for (  ProcessorType output : outputs) {    printNode(writer,fromData,output);  }  return fromData;} @AT@ 3474 @LENGTH@ 63
------INS InstanceofExpression@@node instanceof MulticastType @TO@ InfixExpression@@node instanceof MulticastType || node instanceof InterceptorRef @AT@ 3474 @LENGTH@ 29
---------MOV SimpleName@@node @TO@ InstanceofExpression@@node instanceof MulticastType @AT@ 3428 @LENGTH@ 4
---------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@node instanceof MulticastType @AT@ 3433 @LENGTH@ 10
---------MOV SimpleType@@MulticastType @TO@ InstanceofExpression@@node instanceof MulticastType @AT@ 3444 @LENGTH@ 13
------INS Operator@@|| @TO@ InfixExpression@@node instanceof MulticastType || node instanceof InterceptorRef @AT@ 3503 @LENGTH@ 2
------INS InstanceofExpression@@node instanceof InterceptorRef @TO@ InfixExpression@@node instanceof MulticastType || node instanceof InterceptorRef @AT@ 3507 @LENGTH@ 30
---------INS SimpleName@@node @TO@ InstanceofExpression@@node instanceof InterceptorRef @AT@ 3507 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@node instanceof InterceptorRef @AT@ 3512 @LENGTH@ 10
---------INS SimpleType@@InterceptorRef @TO@ InstanceofExpression@@node instanceof InterceptorRef @AT@ 3523 @LENGTH@ 14


UPD FieldDeclaration@@private, String, [ftpUrl="ftp://admin@localhost:" + port + "/tmp4/camel?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=false&consumer.append=false"] @TO@ private, String, [ftpUrl="ftp://admin@localhost:" + port + "/tmp4/camel?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=false"] @AT@ 1473 @LENGTH@ 179
---UPD VariableDeclarationFragment@@ftpUrl="ftp://admin@localhost:" + port + "/tmp4/camel?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=false&consumer.append=false" @TO@ ftpUrl="ftp://admin@localhost:" + port + "/tmp4/camel?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=false" @AT@ 1488 @LENGTH@ 163
------UPD InfixExpression@@"ftp://admin@localhost:" + port + "/tmp4/camel?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=false&consumer.append=false" @TO@ "ftp://admin@localhost:" + port + "/tmp4/camel?password=admin&binary=true"+ "&consumer.delay=2000&consumer.recursive=false" @AT@ 1497 @LENGTH@ 154
---------UPD StringLiteral@@"&consumer.delay=2000&consumer.recursive=false&consumer.append=false" @TO@ "&consumer.delay=2000&consumer.recursive=false" @AT@ 1582 @LENGTH@ 69


UPD ExpressionStatement@@MethodInvocation:LOG.trace("Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader) @TO@ MethodInvocation:LOG.trace("Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader.getClass().getName()) @AT@ 10218 @LENGTH@ 102
---UPD MethodInvocation@@LOG.trace("Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader) @TO@ LOG.trace("Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader.getClass().getName()) @AT@ 10218 @LENGTH@ 101
------UPD SimpleName@@MethodName:trace:["Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader] @TO@ MethodName:trace:["Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader.getClass().getName()] @AT@ 10222 @LENGTH@ 97
---------UPD InfixExpression@@"Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader @TO@ "Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader.getClass().getName() @AT@ 10228 @LENGTH@ 90
------------DEL SimpleName@@loader @AT@ 10312 @LENGTH@ 6
------------INS MethodInvocation@@loader.getClass().getName() @TO@ InfixExpression@@"Searching for: " + test + " in package: "+ packageName+ " using classloader: "+ loader @AT@ 10333 @LENGTH@ 27
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@loader.getClass().getName() @AT@ 10333 @LENGTH@ 17
---------------INS SimpleName@@Name:loader @TO@ MethodInvocation@@loader.getClass().getName() @AT@ 10333 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@loader.getClass().getName() @AT@ 10351 @LENGTH@ 9


UPD FieldDeclaration@@private, static, final, String, [INPUT_FILE="src/main/resources/data/ioSample/input/fixedLength.txt"] @TO@ private, static, final, String, [INPUT_FILE="src/main/resources/data/iosample/input/fixedLength.txt"] @AT@ 1358 @LENGTH@ 98
---UPD VariableDeclarationFragment@@INPUT_FILE="src/main/resources/data/ioSample/input/fixedLength.txt" @TO@ INPUT_FILE="src/main/resources/data/iosample/input/fixedLength.txt" @AT@ 1386 @LENGTH@ 69
------UPD StringLiteral@@"src/main/resources/data/ioSample/input/fixedLength.txt" @TO@ "src/main/resources/data/iosample/input/fixedLength.txt" @AT@ 1399 @LENGTH@ 56


DEL ExpressionStatement@@Assignment:msg=ex.getMessage() @AT@ 23524 @LENGTH@ 22
---DEL Assignment@@msg=ex.getMessage() @AT@ 23524 @LENGTH@ 21
------DEL SimpleName@@msg @AT@ 23524 @LENGTH@ 3
------DEL Operator@@= @AT@ 23527 @LENGTH@ 1
------DEL MethodInvocation@@ex.getMessage() @AT@ 23530 @LENGTH@ 15
---------DEL SimpleName@@Name:ex @AT@ 23530 @LENGTH@ 2
---------DEL SimpleName@@MethodName:getMessage:[] @AT@ 23533 @LENGTH@ 12


DEL MethodDeclaration@@protected, void, MethodName:jumpToItem, int itemIndex, Exception,  @AT@ 3785 @LENGTH@ 236
---DEL Modifier@@protected @AT@ 3785 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 3795 @LENGTH@ 4
---DEL SimpleName@@MethodName:jumpToItem @AT@ 3800 @LENGTH@ 10
---DEL SingleVariableDeclaration@@int itemIndex @AT@ 3811 @LENGTH@ 13
------DEL PrimitiveType@@int @AT@ 3811 @LENGTH@ 3
------DEL SimpleName@@itemIndex @AT@ 3815 @LENGTH@ 9
---DEL SimpleType@@Exception @AT@ 3833 @LENGTH@ 9
---DEL VariableDeclarationStatement@@Object record=""; @AT@ 3847 @LENGTH@ 19
------DEL SimpleType@@Object @AT@ 3847 @LENGTH@ 6
------DEL VariableDeclarationFragment@@record="" @AT@ 3854 @LENGTH@ 11
---------DEL SimpleName@@record @AT@ 3854 @LENGTH@ 6
---------DEL StringLiteral@@"" @AT@ 3863 @LENGTH@ 2
---DEL VariableDeclarationStatement@@int index=itemIndex + (firstLineIsHeader ? 1 : 0) + linesToSkip; @AT@ 3869 @LENGTH@ 62
------DEL PrimitiveType@@int @AT@ 3869 @LENGTH@ 3
------DEL VariableDeclarationFragment@@index=itemIndex + (firstLineIsHeader ? 1 : 0) + linesToSkip @AT@ 3873 @LENGTH@ 57
---------DEL SimpleName@@index @AT@ 3873 @LENGTH@ 5
---------DEL InfixExpression@@itemIndex + (firstLineIsHeader ? 1 : 0) + linesToSkip @AT@ 3881 @LENGTH@ 49
------------DEL SimpleName@@itemIndex @AT@ 3881 @LENGTH@ 9
------------DEL Operator@@+ @AT@ 3890 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(firstLineIsHeader ? 1 : 0) @AT@ 3893 @LENGTH@ 23
---------------DEL ConditionalExpression@@firstLineIsHeader ? 1 : 0 @AT@ 3894 @LENGTH@ 21
------------------DEL SimpleName@@firstLineIsHeader @AT@ 3894 @LENGTH@ 17
------------------DEL NumberLiteral@@1 @AT@ 3912 @LENGTH@ 1
------------------DEL NumberLiteral@@0 @AT@ 3914 @LENGTH@ 1
------------DEL SimpleName@@linesToSkip @AT@ 3919 @LENGTH@ 11
---DEL WhileStatement@@while (reader.getPosition() < index && record != null) {  record=readLine();} @AT@ 3934 @LENGTH@ 84
------DEL InfixExpression@@reader.getPosition() < index && record != null @AT@ 3941 @LENGTH@ 46
---------DEL InfixExpression@@reader.getPosition() < index @AT@ 3941 @LENGTH@ 28
------------DEL MethodInvocation@@reader.getPosition() @AT@ 3941 @LENGTH@ 20
---------------DEL SimpleName@@Name:reader @AT@ 3941 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:getPosition:[] @AT@ 3948 @LENGTH@ 13
------------DEL Operator@@< @AT@ 3961 @LENGTH@ 1
------------DEL SimpleName@@index @AT@ 3964 @LENGTH@ 5
---------DEL Operator@@&& @AT@ 3969 @LENGTH@ 2
---------DEL InfixExpression@@record != null @AT@ 3973 @LENGTH@ 14
------------DEL SimpleName@@record @AT@ 3973 @LENGTH@ 6
------------DEL Operator@@!= @AT@ 3979 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 3983 @LENGTH@ 4
------DEL Block@@WhileBody:{  record=readLine();} @AT@ 3989 @LENGTH@ 29
---------DEL ExpressionStatement@@Assignment:record=readLine() @AT@ 3994 @LENGTH@ 20
------------DEL Assignment@@record=readLine() @AT@ 3994 @LENGTH@ 19
---------------DEL SimpleName@@record @AT@ 3994 @LENGTH@ 6
---------------DEL Operator@@= @AT@ 4000 @LENGTH@ 1
---------------DEL MethodInvocation@@MethodName:readLine:[] @AT@ 4003 @LENGTH@ 10


UPD MethodDeclaration@@public, int, MethodName:compare, Range r1, Range r2,  @TO@ public, int, MethodName:compare, Integer r1, Integer r2,  @AT@ 3263 @LENGTH@ 83
---UPD SingleVariableDeclaration@@Range r1 @TO@ Integer r1 @AT@ 3282 @LENGTH@ 8
------UPD SimpleType@@Range @TO@ Integer @AT@ 3282 @LENGTH@ 5
---UPD SingleVariableDeclaration@@Range r2 @TO@ Integer r2 @AT@ 3292 @LENGTH@ 8
------UPD SimpleType@@Range @TO@ Integer @AT@ 3292 @LENGTH@ 5
---UPD ReturnStatement@@InfixExpression:r1.getMin() - r2.getMin() @TO@ InfixExpression:ranges[r1].getMin() - ranges[r2].getMin() @AT@ 3309 @LENGTH@ 31
------UPD InfixExpression@@r1.getMin() - r2.getMin() @TO@ ranges[r1].getMin() - ranges[r2].getMin() @AT@ 3316 @LENGTH@ 23
---------UPD MethodInvocation@@r1.getMin() @TO@ ranges[r1].getMin() @AT@ 3316 @LENGTH@ 11
------------DEL SimpleName@@Name:r1 @AT@ 3316 @LENGTH@ 2
------------INS ArrayAccess@@ranges[r1] @TO@ MethodInvocation@@r1.getMin() @AT@ 3390 @LENGTH@ 10
---------------INS SimpleName@@ranges @TO@ ArrayAccess@@ranges[r1] @AT@ 3390 @LENGTH@ 6
---------------INS SimpleName@@r1 @TO@ ArrayAccess@@ranges[r1] @AT@ 3397 @LENGTH@ 2
---------UPD MethodInvocation@@r2.getMin() @TO@ ranges[r2].getMin() @AT@ 3328 @LENGTH@ 11
------------DEL SimpleName@@Name:r2 @AT@ 3328 @LENGTH@ 2
------------INS ArrayAccess@@ranges[r2] @TO@ MethodInvocation@@r2.getMin() @AT@ 3410 @LENGTH@ 10
---------------INS SimpleName@@ranges @TO@ ArrayAccess@@ranges[r2] @AT@ 3410 @LENGTH@ 6
---------------INS SimpleName@@r2 @TO@ ArrayAccess@@ranges[r2] @AT@ 3417 @LENGTH@ 2


INS MethodDeclaration@@private, voidMethodName:CamelClientEndpoint,  @TO@ TypeDeclaration@@[public, final]CamelClientEndpoint,  @AT@ 1671 @LENGTH@ 60
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CamelClientEndpoint,  @AT@ 1671 @LENGTH@ 7
---INS SimpleName@@MethodName:CamelClientEndpoint @TO@ MethodDeclaration@@private, voidMethodName:CamelClientEndpoint,  @AT@ 1679 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","first") @TO@ MethodInvocation:template.sendBody("direct:start",ExchangePattern.InOut,"first") @AT@ 1634 @LENGTH@ 43
---UPD MethodInvocation@@template.sendBody("direct:start","first") @TO@ template.sendBody("direct:start",ExchangePattern.InOut,"first") @AT@ 1634 @LENGTH@ 42
------UPD SimpleName@@MethodName:sendBody:["direct:start", "first"] @TO@ MethodName:sendBody:["direct:start", ExchangePattern.InOut, "first"] @AT@ 1643 @LENGTH@ 33
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:sendBody:["direct:start", "first"] @AT@ 1709 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1709 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1725 @LENGTH@ 5


UPD TypeDeclaration@@[public]IbatisDrivingQueryItemReader, DrivingQueryItemReader @TO@ [@SuppressWarnings("unchecked"), public]IbatisDrivingQueryItemReader, DrivingQueryItemReader @AT@ 1158 @LENGTH@ 1031
---INS SingleMemberAnnotation@@@SuppressWarnings("unchecked") @TO@ TypeDeclaration@@[public]IbatisDrivingQueryItemReader, DrivingQueryItemReader @AT@ 1263 @LENGTH@ 30


UPD ReturnStatement@@InfixExpression:"DeadLetterChannel[" + output + ", "+ deadLetter+ ", "+ redeliveryPolicy+ "]" @TO@ InfixExpression:"DeadLetterChannel[" + output + ", "+ deadLetter+ "]" @AT@ 3685 @LENGTH@ 89
---UPD InfixExpression@@"DeadLetterChannel[" + output + ", "+ deadLetter+ ", "+ redeliveryPolicy+ "]" @TO@ "DeadLetterChannel[" + output + ", "+ deadLetter+ "]" @AT@ 3692 @LENGTH@ 81
------DEL StringLiteral@@", " @AT@ 3744 @LENGTH@ 4
------DEL SimpleName@@redeliveryPolicy @AT@ 3751 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:beforeStep, StepExecution stepExecution,  @TO@ TypeDeclaration@@[public]InfiniteLoopWriter, StepExecutionListenerSupport[ItemWriter<Object>] @AT@ 1553 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:beforeStep, StepExecution stepExecution,  @AT@ 1553 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:beforeStep, StepExecution stepExecution,  @AT@ 1560 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeStep @TO@ MethodDeclaration@@public, void, MethodName:beforeStep, StepExecution stepExecution,  @AT@ 1565 @LENGTH@ 10
---INS SingleVariableDeclaration@@StepExecution stepExecution @TO@ MethodDeclaration@@public, void, MethodName:beforeStep, StepExecution stepExecution,  @AT@ 1576 @LENGTH@ 27
------INS SimpleType@@StepExecution @TO@ SingleVariableDeclaration@@StepExecution stepExecution @AT@ 1576 @LENGTH@ 13
------INS SimpleName@@stepExecution @TO@ SingleVariableDeclaration@@StepExecution stepExecution @AT@ 1590 @LENGTH@ 13
---INS ExpressionStatement@@Assignment:this.stepExecution=stepExecution @TO@ MethodDeclaration@@public, void, MethodName:beforeStep, StepExecution stepExecution,  @AT@ 1609 @LENGTH@ 35
------INS Assignment@@this.stepExecution=stepExecution @TO@ ExpressionStatement@@Assignment:this.stepExecution=stepExecution @AT@ 1609 @LENGTH@ 34
---------INS FieldAccess@@this.stepExecution @TO@ Assignment@@this.stepExecution=stepExecution @AT@ 1609 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.stepExecution @AT@ 1609 @LENGTH@ 4
------------INS SimpleName@@stepExecution @TO@ FieldAccess@@this.stepExecution @AT@ 1614 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.stepExecution=stepExecution @AT@ 1627 @LENGTH@ 1
---------INS SimpleName@@stepExecution @TO@ Assignment@@this.stepExecution=stepExecution @AT@ 1630 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("direct:start",body,"foo","Tampa") @TO@ MethodInvocation:template.sendBodyAndHeader("direct:start",ExchangePattern.InOut,body,"foo","Tampa") @AT@ 1598 @LENGTH@ 65
---UPD MethodInvocation@@template.sendBodyAndHeader("direct:start",body,"foo","Tampa") @TO@ template.sendBodyAndHeader("direct:start",ExchangePattern.InOut,body,"foo","Tampa") @AT@ 1598 @LENGTH@ 64
------UPD SimpleName@@MethodName:sendBodyAndHeader:["direct:start", body, "foo", "Tampa"] @TO@ MethodName:sendBodyAndHeader:["direct:start", ExchangePattern.InOut, body, "foo", "Tampa"] @AT@ 1607 @LENGTH@ 55
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:sendBodyAndHeader:["direct:start", body, "foo", "Tampa"] @AT@ 1705 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1705 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1721 @LENGTH@ 5


UPD MethodDeclaration@@protected, void, MethodName:assertInterceptorRefs, ProcessorType<?> route, String... names,  @TO@ protected, void, MethodName:assertInterceptorRefs, ProcessorType route, String... names,  @AT@ 14477 @LENGTH@ 737
---UPD SingleVariableDeclaration@@ProcessorType<?> route @TO@ ProcessorType route @AT@ 14514 @LENGTH@ 22
------DEL ParameterizedType@@ProcessorType<?> @AT@ 14514 @LENGTH@ 16
---------DEL SimpleType@@ProcessorType @AT@ 14514 @LENGTH@ 13
---------DEL WildcardType@@? @AT@ 14528 @LENGTH@ 1
------INS SimpleType@@ProcessorType @TO@ SingleVariableDeclaration@@ProcessorType<?> route @AT@ 14514 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:ServiceHelper.startServices(consumer,processor) @TO@ MethodInvocation:ServiceHelper.stopServices(consumer,processor) @AT@ 5651 @LENGTH@ 49
---UPD MethodInvocation@@ServiceHelper.startServices(consumer,processor) @TO@ ServiceHelper.stopServices(consumer,processor) @AT@ 5651 @LENGTH@ 48
------UPD SimpleName@@MethodName:startServices:[consumer, processor] @TO@ MethodName:stopServices:[consumer, processor] @AT@ 5665 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:client.changeToParentDirectory() @TO@ MethodInvocation:client.changeWorkingDirectory(currentDir) @AT@ 4800 @LENGTH@ 33
---UPD MethodInvocation@@client.changeToParentDirectory() @TO@ client.changeWorkingDirectory(currentDir) @AT@ 4800 @LENGTH@ 32
------UPD SimpleName@@MethodName:changeToParentDirectory:[] @TO@ MethodName:changeWorkingDirectory:[currentDir] @AT@ 4807 @LENGTH@ 25
---------INS SimpleName@@currentDir @TO@ SimpleName@@MethodName:changeToParentDirectory:[] @AT@ 4939 @LENGTH@ 10


UPD MethodDeclaration@@public, T, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 1997 @LENGTH@ 141
---UPD SimpleType@@T @TO@ Exchange @AT@ 2004 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:filterChainProxy.getPropertyValues().addPropertyValue("stripQueryStringFromUrls",matcher instanceof AntUrlPathMatcher) @TO@ MethodInvocation:filterChainProxy.getPropertyValues().addPropertyValue("stripQueryStringFromUrls",Boolean.valueOf(matcher instanceof AntUrlPathMatcher)) @AT@ 10854 @LENGTH@ 120
---UPD MethodInvocation@@filterChainProxy.getPropertyValues().addPropertyValue("stripQueryStringFromUrls",matcher instanceof AntUrlPathMatcher) @TO@ filterChainProxy.getPropertyValues().addPropertyValue("stripQueryStringFromUrls",Boolean.valueOf(matcher instanceof AntUrlPathMatcher)) @AT@ 10854 @LENGTH@ 119
------UPD SimpleName@@MethodName:addPropertyValue:["stripQueryStringFromUrls", matcher instanceof AntUrlPathMatcher] @TO@ MethodName:addPropertyValue:["stripQueryStringFromUrls", Boolean.valueOf(matcher instanceof AntUrlPathMatcher)] @AT@ 10891 @LENGTH@ 82
---------INS MethodInvocation@@Boolean.valueOf(matcher instanceof AntUrlPathMatcher) @TO@ SimpleName@@MethodName:addPropertyValue:["stripQueryStringFromUrls", matcher instanceof AntUrlPathMatcher] @AT@ 10936 @LENGTH@ 53
------------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.valueOf(matcher instanceof AntUrlPathMatcher) @AT@ 10936 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[matcher instanceof AntUrlPathMatcher] @TO@ MethodInvocation@@Boolean.valueOf(matcher instanceof AntUrlPathMatcher) @AT@ 10944 @LENGTH@ 45
---------------MOV InstanceofExpression@@matcher instanceof AntUrlPathMatcher @TO@ SimpleName@@MethodName:valueOf:[matcher instanceof AntUrlPathMatcher] @AT@ 10936 @LENGTH@ 36


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/jdbcCursor.xml"}), public]JdbcCursorFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/jdbcCursor.xml"}), public]JdbcCursorFunctionalTests, AbstractJobTests @AT@ 1228 @LENGTH@ 862
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/jdbcCursor.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/jdbcCursor.xml"}) @AT@ 1268 @LENGTH@ 133


UPD ThrowStatement@@SimpleName:le @TO@ ClassInstanceCreation:new RetryException("Non-skippable exception in recoverer",le) @AT@ 7991 @LENGTH@ 9
---INS ClassInstanceCreation@@RetryException["Non-skippable exception in recoverer", le] @TO@ ThrowStatement@@SimpleName:le @AT@ 7997 @LENGTH@ 62
------INS New@@new @TO@ ClassInstanceCreation@@RetryException["Non-skippable exception in recoverer", le] @AT@ 7997 @LENGTH@ 3
------INS SimpleType@@RetryException @TO@ ClassInstanceCreation@@RetryException["Non-skippable exception in recoverer", le] @AT@ 8001 @LENGTH@ 14
------INS StringLiteral@@"Non-skippable exception in recoverer" @TO@ ClassInstanceCreation@@RetryException["Non-skippable exception in recoverer", le] @AT@ 8016 @LENGTH@ 38
------INS SimpleName@@le @TO@ ClassInstanceCreation@@RetryException["Non-skippable exception in recoverer", le] @AT@ 8056 @LENGTH@ 2
---DEL SimpleName@@le @AT@ 7997 @LENGTH@ 2


UPD IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Recording duration: " + duration + " millis for exchange: "+ exchange);} @TO@ if (LOG.isTraceEnabled()) {  LOG.trace("Recording duration: " + duration + " millis for exchange: "+ exchange);} @AT@ 2974 @LENGTH@ 133
---UPD MethodInvocation@@LOG.isDebugEnabled() @TO@ LOG.isTraceEnabled() @AT@ 2978 @LENGTH@ 20
------UPD SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodName:isTraceEnabled:[] @AT@ 2982 @LENGTH@ 16
---UPD Block@@ThenBody:{  LOG.debug("Recording duration: " + duration + " millis for exchange: "+ exchange);} @TO@ ThenBody:{  LOG.trace("Recording duration: " + duration + " millis for exchange: "+ exchange);} @AT@ 3000 @LENGTH@ 107
------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Recording duration: " + duration + " millis for exchange: "+ exchange) @TO@ MethodInvocation:LOG.trace("Recording duration: " + duration + " millis for exchange: "+ exchange) @AT@ 3014 @LENGTH@ 83
---------UPD MethodInvocation@@LOG.debug("Recording duration: " + duration + " millis for exchange: "+ exchange) @TO@ LOG.trace("Recording duration: " + duration + " millis for exchange: "+ exchange) @AT@ 3014 @LENGTH@ 82
------------UPD SimpleName@@MethodName:debug:["Recording duration: " + duration + " millis for exchange: "+ exchange] @TO@ MethodName:trace:["Recording duration: " + duration + " millis for exchange: "+ exchange] @AT@ 3018 @LENGTH@ 78


UPD VariableDeclarationStatement@@Object[] invokeArgs=new Object[parameterTypes.length]; @TO@ Object[] invokeArgs; @AT@ 3094 @LENGTH@ 56
---UPD VariableDeclarationFragment@@invokeArgs=new Object[parameterTypes.length] @TO@ invokeArgs @AT@ 3103 @LENGTH@ 46
------DEL ArrayCreation@@new Object[parameterTypes.length] @AT@ 3116 @LENGTH@ 33
---------DEL ArrayType@@Object[] @AT@ 3120 @LENGTH@ 29
------------DEL SimpleType@@Object @AT@ 3120 @LENGTH@ 6
---------DEL QualifiedName@@parameterTypes.length @AT@ 3127 @LENGTH@ 21
------------DEL SimpleName@@parameterTypes @AT@ 3127 @LENGTH@ 14
------------DEL SimpleName@@length @AT@ 3142 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:ObjectConverter.toBoolean(scriptValue) @TO@ MethodInvocation:ObjectConverter.toBool(scriptValue) @AT@ 14660 @LENGTH@ 46
---UPD MethodInvocation@@ObjectConverter.toBoolean(scriptValue) @TO@ ObjectConverter.toBool(scriptValue) @AT@ 14667 @LENGTH@ 38
------UPD SimpleName@@MethodName:toBoolean:[scriptValue] @TO@ MethodName:toBool:[scriptValue] @AT@ 14683 @LENGTH@ 22


DEL MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 5216 @LENGTH@ 224
---DEL Modifier@@public @AT@ 5216 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 5223 @LENGTH@ 4
---DEL SimpleName@@MethodName:testUpdateExecutionStatus @AT@ 5228 @LENGTH@ 25
---DEL ExpressionStatement@@MethodInvocation:dao.saveJobExecution(execution) @AT@ 5262 @LENGTH@ 32
------DEL MethodInvocation@@dao.saveJobExecution(execution) @AT@ 5262 @LENGTH@ 31
---------DEL SimpleName@@Name:dao @AT@ 5262 @LENGTH@ 3
---------DEL SimpleName@@MethodName:saveJobExecution:[execution] @AT@ 5266 @LENGTH@ 27
------------DEL SimpleName@@execution @AT@ 5283 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:execution.setStatus(BatchStatus.COMPLETED) @AT@ 5297 @LENGTH@ 43
------DEL MethodInvocation@@execution.setStatus(BatchStatus.COMPLETED) @AT@ 5297 @LENGTH@ 42
---------DEL SimpleName@@Name:execution @AT@ 5297 @LENGTH@ 9
---------DEL SimpleName@@MethodName:setStatus:[BatchStatus.COMPLETED] @AT@ 5307 @LENGTH@ 32
------------DEL QualifiedName@@BatchStatus.COMPLETED @AT@ 5317 @LENGTH@ 21
---------------DEL SimpleName@@BatchStatus @AT@ 5317 @LENGTH@ 11
---------------DEL SimpleName@@COMPLETED @AT@ 5329 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:dao.synchronizeStatus(execution) @AT@ 5343 @LENGTH@ 33
------DEL MethodInvocation@@dao.synchronizeStatus(execution) @AT@ 5343 @LENGTH@ 32
---------DEL SimpleName@@Name:dao @AT@ 5343 @LENGTH@ 3
---------DEL SimpleName@@MethodName:synchronizeStatus:[execution] @AT@ 5347 @LENGTH@ 28
------------DEL SimpleName@@execution @AT@ 5365 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:assertEquals(BatchStatus.STARTING,execution.getStatus()) @AT@ 5379 @LENGTH@ 58
------DEL MethodInvocation@@assertEquals(BatchStatus.STARTING,execution.getStatus()) @AT@ 5379 @LENGTH@ 57
---------DEL SimpleName@@MethodName:assertEquals:[BatchStatus.STARTING, execution.getStatus()] @AT@ 5379 @LENGTH@ 57
------------DEL QualifiedName@@BatchStatus.STARTING @AT@ 5392 @LENGTH@ 20
---------------DEL SimpleName@@BatchStatus @AT@ 5392 @LENGTH@ 11
---------------DEL SimpleName@@STARTING @AT@ 5404 @LENGTH@ 8
------------DEL MethodInvocation@@execution.getStatus() @AT@ 5414 @LENGTH@ 21
---------------DEL SimpleName@@Name:execution @AT@ 5414 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getStatus:[] @AT@ 5424 @LENGTH@ 11


UPD MethodDeclaration@@public, InputStream, MethodName:decompress, InputStream inputStream, CompressException,  @TO@ public, InputStream, MethodName:decompress, InputStream input, CompressException,  @AT@ 3100 @LENGTH@ 80
---UPD SingleVariableDeclaration@@InputStream inputStream @TO@ InputStream input @AT@ 3130 @LENGTH@ 23
------UPD SimpleName@@inputStream @TO@ input @AT@ 3142 @LENGTH@ 11


MOV ExpressionStatement@@MethodInvocation:completedExchanges.decrement() @TO@ MethodDeclaration@@public, void, MethodName:done, boolean doneSynchronously,  @AT@ 6444 @LENGTH@ 31


MOV FieldDeclaration@@public, static, final, ExchangeProperty<Boolean>, [TRANSACTED=new ExchangeProperty<Boolean>("transacted","org.apache.camel.transacted",Boolean.class)] @TO@ TypeDeclaration@@[public]TransactionInterceptor, DelegateProcessor @AT@ 1901 @LENGTH@ 157


UPD TryStatement@@try {  String nameInNamespace=null;  if (nameCtx != null) {    nameInNamespace=nameCtx.getNameInNamespace();  } else {    nameInNamespace="";  }  DirContextAdapter dirContextAdapter=new DirContextAdapter(attrs,name,new DistinguishedName(nameInNamespace));  dirContextAdapter.setUpdateMode(true);  return dirContextAdapter;}  finally {  if (obj instanceof Context) {    Context ctx=(Context)obj;    try {      ctx.close();    } catch (    Exception e) {    }  }} @TO@ try {  String nameInNamespace=null;  if (nameCtx != null) {    nameInNamespace=nameCtx.getNameInNamespace();  } else {    nameInNamespace="";  }  if (name instanceof CompositeName) {    CompositeName compositeName=(CompositeName)name;    name=new DistinguishedName(compositeName.get(0));  }  DirContextAdapter dirContextAdapter=new DirContextAdapter(attrs,name,new DistinguishedName(nameInNamespace));  dirContextAdapter.setUpdateMode(true);  return dirContextAdapter;}  finally {  if (obj instanceof Context) {    Context ctx=(Context)obj;    try {      ctx.close();    } catch (    Exception e) {    }  }} @AT@ 2004 @LENGTH@ 1229
---INS IfStatement@@if (name instanceof CompositeName) {  CompositeName compositeName=(CompositeName)name;  name=new DistinguishedName(compositeName.get(0));} @TO@ TryStatement@@try {  String nameInNamespace=null;  if (nameCtx != null) {    nameInNamespace=nameCtx.getNameInNamespace();  } else {    nameInNamespace="";  }  DirContextAdapter dirContextAdapter=new DirContextAdapter(attrs,name,new DistinguishedName(nameInNamespace));  dirContextAdapter.setUpdateMode(true);  return dirContextAdapter;}  finally {  if (obj instanceof Context) {    Context ctx=(Context)obj;    try {      ctx.close();    } catch (    Exception e) {    }  }} @AT@ 2282 @LENGTH@ 415
------INS InstanceofExpression@@name instanceof CompositeName @TO@ IfStatement@@if (name instanceof CompositeName) {  CompositeName compositeName=(CompositeName)name;  name=new DistinguishedName(compositeName.get(0));} @AT@ 2285 @LENGTH@ 29
---------INS SimpleName@@name @TO@ InstanceofExpression@@name instanceof CompositeName @AT@ 2285 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@name instanceof CompositeName @AT@ 2290 @LENGTH@ 10
---------INS SimpleType@@CompositeName @TO@ InstanceofExpression@@name instanceof CompositeName @AT@ 2301 @LENGTH@ 13
------INS Block@@ThenBody:{  CompositeName compositeName=(CompositeName)name;  name=new DistinguishedName(compositeName.get(0));} @TO@ IfStatement@@if (name instanceof CompositeName) {  CompositeName compositeName=(CompositeName)name;  name=new DistinguishedName(compositeName.get(0));} @AT@ 2315 @LENGTH@ 382
---------INS VariableDeclarationStatement@@CompositeName compositeName=(CompositeName)name; @TO@ Block@@ThenBody:{  CompositeName compositeName=(CompositeName)name;  name=new DistinguishedName(compositeName.get(0));} @AT@ 2565 @LENGTH@ 51
------------INS SimpleType@@CompositeName @TO@ VariableDeclarationStatement@@CompositeName compositeName=(CompositeName)name; @AT@ 2565 @LENGTH@ 13
------------INS VariableDeclarationFragment@@compositeName=(CompositeName)name @TO@ VariableDeclarationStatement@@CompositeName compositeName=(CompositeName)name; @AT@ 2579 @LENGTH@ 36
---------------INS SimpleName@@compositeName @TO@ VariableDeclarationFragment@@compositeName=(CompositeName)name @AT@ 2579 @LENGTH@ 13
---------------INS CastExpression@@(CompositeName)name @TO@ VariableDeclarationFragment@@compositeName=(CompositeName)name @AT@ 2595 @LENGTH@ 20
------------------INS SimpleType@@CompositeName @TO@ CastExpression@@(CompositeName)name @AT@ 2596 @LENGTH@ 13
------------------INS SimpleName@@name @TO@ CastExpression@@(CompositeName)name @AT@ 2611 @LENGTH@ 4
---------INS ExpressionStatement@@Assignment:name=new DistinguishedName(compositeName.get(0)) @TO@ Block@@ThenBody:{  CompositeName compositeName=(CompositeName)name;  name=new DistinguishedName(compositeName.get(0));} @AT@ 2631 @LENGTH@ 51
------------INS Assignment@@name=new DistinguishedName(compositeName.get(0)) @TO@ ExpressionStatement@@Assignment:name=new DistinguishedName(compositeName.get(0)) @AT@ 2631 @LENGTH@ 50
---------------INS SimpleName@@name @TO@ Assignment@@name=new DistinguishedName(compositeName.get(0)) @AT@ 2631 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@name=new DistinguishedName(compositeName.get(0)) @AT@ 2635 @LENGTH@ 1
---------------INS ClassInstanceCreation@@DistinguishedName[compositeName.get(0)] @TO@ Assignment@@name=new DistinguishedName(compositeName.get(0)) @AT@ 2638 @LENGTH@ 43
------------------INS New@@new @TO@ ClassInstanceCreation@@DistinguishedName[compositeName.get(0)] @AT@ 2638 @LENGTH@ 3
------------------INS SimpleType@@DistinguishedName @TO@ ClassInstanceCreation@@DistinguishedName[compositeName.get(0)] @AT@ 2642 @LENGTH@ 17
------------------INS MethodInvocation@@compositeName.get(0) @TO@ ClassInstanceCreation@@DistinguishedName[compositeName.get(0)] @AT@ 2660 @LENGTH@ 20
---------------------INS SimpleName@@Name:compositeName @TO@ MethodInvocation@@compositeName.get(0) @AT@ 2660 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@compositeName.get(0) @AT@ 2674 @LENGTH@ 6
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 2678 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/multiLine.xml"}), public]MultiLineFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiLine.xml"}), public]MultiLineFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 650
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/ioSample/multiLine.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiLine.xml"}) @AT@ 1112 @LENGTH@ 132


UPD FieldDeclaration@@ListItemReader, [reader] @TO@ ListItemReader<String>, [reader] @AT@ 1485 @LENGTH@ 22
---DEL SimpleType@@ListItemReader @AT@ 1485 @LENGTH@ 14
---INS ParameterizedType@@ListItemReader<String> @TO@ FieldDeclaration@@ListItemReader, [reader] @AT@ 1485 @LENGTH@ 22
------INS SimpleType@@ListItemReader @TO@ ParameterizedType@@ListItemReader<String> @AT@ 1485 @LENGTH@ 14
------INS SimpleType@@String @TO@ ParameterizedType@@ListItemReader<String> @AT@ 1500 @LENGTH@ 6


MOV VariableDeclarationStatement@@File file=new File("target/camel/dump"); @TO@ MethodDeclaration@@public, void, MethodName:testDumplFilesToJaxb, Exception,  @AT@ 1298 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be exclued by the MinaPayloadHolder") @TO@ MethodInvocation:LOG.warn("Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be excluded by the MinaPayloadHolder") @AT@ 5555 @LENGTH@ 164
---UPD MethodInvocation@@LOG.warn("Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be exclued by the MinaPayloadHolder") @TO@ LOG.warn("Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be excluded by the MinaPayloadHolder") @AT@ 5555 @LENGTH@ 163
------UPD SimpleName@@MethodName:warn:["Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be exclued by the MinaPayloadHolder"] @TO@ MethodName:warn:["Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be excluded by the MinaPayloadHolder"] @AT@ 5559 @LENGTH@ 159
---------UPD InfixExpression@@"Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be exclued by the MinaPayloadHolder" @TO@ "Object " + entry.getValue() + " of key "+ entry.getKey()+ " can't be serialized, it will be excluded by the MinaPayloadHolder" @AT@ 5564 @LENGTH@ 153
------------UPD StringLiteral@@" can't be serialized, it will be exclued by the MinaPayloadHolder" @TO@ " can't be serialized, it will be excluded by the MinaPayloadHolder" @AT@ 5650 @LENGTH@ 67


UPD IfStatement@@if (inputs.isEmpty() && outputs.isEmpty()) {  result=repeatOperations.iterate(new RepeatCallback(){    public ExitStatus doInIteration(    final RepeatContext context) throws Exception {      ItemWrapper<T> item=read(contribution);      contribution.incrementReadSkipCount(item.getSkipCount());      if (item.getItem() == null) {        return ExitStatus.FINISHED;      }      inputs.add(item);      return ExitStatus.CONTINUABLE;    }  });  if (inputs.isEmpty()) {    return result;  }  storeInputs(attributes,inputs);} @TO@ if (inputs.isEmpty() && outputs.isEmpty()) {  result=repeatOperations.iterate(new RepeatCallback(){    public ExitStatus doInIteration(    final RepeatContext context) throws Exception {      ItemWrapper<T> item=read(contribution);      contribution.incrementReadSkipCount(item.getSkipCount());      if (item.getItem() == null) {        return ExitStatus.FINISHED;      }      inputs.add(item);      return ExitStatus.CONTINUABLE;    }  });  if (inputs.isEmpty()) {    return result;  }  contribution.incrementReadCount(inputs.size());  storeInputs(attributes,inputs);} @AT@ 4409 @LENGTH@ 605
---UPD Block@@ThenBody:{  result=repeatOperations.iterate(new RepeatCallback(){    public ExitStatus doInIteration(    final RepeatContext context) throws Exception {      ItemWrapper<T> item=read(contribution);      contribution.incrementReadSkipCount(item.getSkipCount());      if (item.getItem() == null) {        return ExitStatus.FINISHED;      }      inputs.add(item);      return ExitStatus.CONTINUABLE;    }  });  if (inputs.isEmpty()) {    return result;  }  storeInputs(attributes,inputs);} @TO@ ThenBody:{  result=repeatOperations.iterate(new RepeatCallback(){    public ExitStatus doInIteration(    final RepeatContext context) throws Exception {      ItemWrapper<T> item=read(contribution);      contribution.incrementReadSkipCount(item.getSkipCount());      if (item.getItem() == null) {        return ExitStatus.FINISHED;      }      inputs.add(item);      return ExitStatus.CONTINUABLE;    }  });  if (inputs.isEmpty()) {    return result;  }  contribution.incrementReadCount(inputs.size());  storeInputs(attributes,inputs);} @AT@ 4452 @LENGTH@ 562
------INS ExpressionStatement@@MethodInvocation:contribution.incrementReadCount(inputs.size()) @TO@ Block@@ThenBody:{  result=repeatOperations.iterate(new RepeatCallback(){    public ExitStatus doInIteration(    final RepeatContext context) throws Exception {      ItemWrapper<T> item=read(contribution);      contribution.incrementReadSkipCount(item.getSkipCount());      if (item.getItem() == null) {        return ExitStatus.FINISHED;      }      inputs.add(item);      return ExitStatus.CONTINUABLE;    }  });  if (inputs.isEmpty()) {    return result;  }  storeInputs(attributes,inputs);} @AT@ 4977 @LENGTH@ 47
---------INS MethodInvocation@@contribution.incrementReadCount(inputs.size()) @TO@ ExpressionStatement@@MethodInvocation:contribution.incrementReadCount(inputs.size()) @AT@ 4977 @LENGTH@ 46
------------INS SimpleName@@Name:contribution @TO@ MethodInvocation@@contribution.incrementReadCount(inputs.size()) @AT@ 4977 @LENGTH@ 12
------------INS SimpleName@@MethodName:incrementReadCount:[inputs.size()] @TO@ MethodInvocation@@contribution.incrementReadCount(inputs.size()) @AT@ 4990 @LENGTH@ 33
---------------INS MethodInvocation@@inputs.size() @TO@ SimpleName@@MethodName:incrementReadCount:[inputs.size()] @AT@ 5009 @LENGTH@ 13
------------------INS SimpleName@@Name:inputs @TO@ MethodInvocation@@inputs.size() @AT@ 5009 @LENGTH@ 6
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@inputs.size() @AT@ 5016 @LENGTH@ 6


INS MethodDeclaration@@private, voidMethodName:FlatpackConverter,  @TO@ TypeDeclaration@@[@Converter, public]FlatpackConverter,  @AT@ 1058 @LENGTH@ 59
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:FlatpackConverter,  @AT@ 1058 @LENGTH@ 7
---INS SimpleName@@MethodName:FlatpackConverter @TO@ MethodDeclaration@@private, voidMethodName:FlatpackConverter,  @AT@ 1066 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:a.expectedMessageCount(0) @TO@ MethodInvocation:a.expectedMessageCount(1) @AT@ 1519 @LENGTH@ 26
---UPD MethodInvocation@@a.expectedMessageCount(0) @TO@ a.expectedMessageCount(1) @AT@ 1519 @LENGTH@ 25
------UPD SimpleName@@MethodName:expectedMessageCount:[0] @TO@ MethodName:expectedMessageCount:[1] @AT@ 1521 @LENGTH@ 23
---------UPD NumberLiteral@@0 @TO@ 1 @AT@ 1542 @LENGTH@ 1


MOV ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testDumplFilesToJaxb, Exception,  @AT@ 1200 @LENGTH@ 19


UPD TypeDeclaration@@[public]IbatisItemReaderCommonTests, CommonDatabaseItemStreamItemReaderTests @TO@ [@SuppressWarnings("unchecked"), public]IbatisItemReaderCommonTests, CommonDatabaseItemStreamItemReaderTests @AT@ 457 @LENGTH@ 1786
---INS SingleMemberAnnotation@@@SuppressWarnings("unchecked") @TO@ TypeDeclaration@@[public]IbatisItemReaderCommonTests, CommonDatabaseItemStreamItemReaderTests @AT@ 457 @LENGTH@ 30


UPD VariableDeclarationStatement@@Object value=definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("converisonService"); @TO@ Object value=getConversionServiceValue(definitionBuilder); @AT@ 2789 @LENGTH@ 117
---UPD VariableDeclarationFragment@@value=definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("converisonService") @TO@ value=getConversionServiceValue(definitionBuilder) @AT@ 2796 @LENGTH@ 109
------UPD MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("converisonService") @TO@ getConversionServiceValue(definitionBuilder) @AT@ 2804 @LENGTH@ 101
---------DEL MethodInvocation@@MethodName:getPropertyValues:[] @AT@ 2804 @LENGTH@ 57
---------INS SimpleName@@MethodName:getConversionServiceValue:[definitionBuilder] @TO@ MethodInvocation@@definitionBuilder.getBeanDefinition().getPropertyValues().getPropertyValue("converisonService") @AT@ 2804 @LENGTH@ 44
------------INS SimpleName@@definitionBuilder @TO@ SimpleName@@MethodName:getConversionServiceValue:[definitionBuilder] @AT@ 2830 @LENGTH@ 17
---------DEL MethodInvocation@@MethodName:getBeanDefinition:[] @AT@ 2804 @LENGTH@ 37
---------DEL SimpleName@@Name:definitionBuilder @AT@ 2804 @LENGTH@ 17
---------DEL SimpleName@@MethodName:getPropertyValue:["converisonService"] @AT@ 2862 @LENGTH@ 43
------------DEL StringLiteral@@"converisonService" @AT@ 2885 @LENGTH@ 19


MOV MethodDeclaration@@public, static, DefaultProducerTemplate, MethodName:newInstance, CamelContext camelContext, String defaultEndpointUri,  @TO@ TypeDeclaration@@[public]DefaultProducerTemplate, ServiceSupport[ProducerTemplate<E>] @AT@ 2128 @LENGTH@ 282


UPD ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisifed() @TO@ MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1904 @LENGTH@ 31
---UPD MethodInvocation@@MethodName:assertMockEndpointsSatisifed:[] @TO@ MethodName:assertMockEndpointsSatisfied:[] @AT@ 1904 @LENGTH@ 30


UPD VariableDeclarationStatement@@StepExecution lastStepExecution=jobRepository.getLastStepExecution(jobExecution.getJobInstance(),step); @TO@ StepExecution lastStepExecution=jobRepository.getLastStepExecution(jobExecution.getJobInstance(),step.getName()); @AT@ 5212 @LENGTH@ 106
---UPD VariableDeclarationFragment@@lastStepExecution=jobRepository.getLastStepExecution(jobExecution.getJobInstance(),step) @TO@ lastStepExecution=jobRepository.getLastStepExecution(jobExecution.getJobInstance(),step.getName()) @AT@ 5226 @LENGTH@ 91
------UPD MethodInvocation@@jobRepository.getLastStepExecution(jobExecution.getJobInstance(),step) @TO@ jobRepository.getLastStepExecution(jobExecution.getJobInstance(),step.getName()) @AT@ 5246 @LENGTH@ 71
---------UPD SimpleName@@MethodName:getLastStepExecution:[jobExecution.getJobInstance(), step] @TO@ MethodName:getLastStepExecution:[jobExecution.getJobInstance(), step.getName()] @AT@ 5260 @LENGTH@ 57
------------INS MethodInvocation@@step.getName() @TO@ SimpleName@@MethodName:getLastStepExecution:[jobExecution.getJobInstance(), step] @AT@ 5312 @LENGTH@ 14
---------------INS SimpleName@@Name:step @TO@ MethodInvocation@@step.getName() @AT@ 5312 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@step.getName() @AT@ 5317 @LENGTH@ 9
------------DEL SimpleName@@step @AT@ 5312 @LENGTH@ 4


UPD IfStatement@@if (typeConverter != null) {  try {    return typeConverter.convertTo(type,value);  } catch (  NoTypeConversionAvailableException ex) {    throw new IllegalArgumentException("Could not convert \"" + value + "\" to "+ type.getName());  }} @TO@ if (typeConverter != null) {  return typeConverter.convertTo(type,value);} @AT@ 9326 @LENGTH@ 305
---UPD Block@@ThenBody:{  try {    return typeConverter.convertTo(type,value);  } catch (  NoTypeConversionAvailableException ex) {    throw new IllegalArgumentException("Could not convert \"" + value + "\" to "+ type.getName());  }} @TO@ ThenBody:{  return typeConverter.convertTo(type,value);} @AT@ 9353 @LENGTH@ 278
------DEL TryStatement@@try {  return typeConverter.convertTo(type,value);} catch (NoTypeConversionAvailableException ex) {  throw new IllegalArgumentException("Could not convert \"" + value + "\" to "+ type.getName());} @AT@ 9367 @LENGTH@ 254
---------DEL CatchClause@@catch (NoTypeConversionAvailableException ex) {  throw new IllegalArgumentException("Could not convert \"" + value + "\" to "+ type.getName());} @AT@ 9448 @LENGTH@ 173
------------DEL SingleVariableDeclaration@@NoTypeConversionAvailableException ex @AT@ 9455 @LENGTH@ 37
---------------DEL SimpleType@@NoTypeConversionAvailableException @AT@ 9455 @LENGTH@ 34
---------------DEL SimpleName@@ex @AT@ 9490 @LENGTH@ 2
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Could not convert \"" + value + "\" to "+ type.getName()) @AT@ 9512 @LENGTH@ 95
---------------DEL ClassInstanceCreation@@IllegalArgumentException["Could not convert \"" + value + "\" to "+ type.getName()] @AT@ 9518 @LENGTH@ 88
------------------DEL New@@new @AT@ 9518 @LENGTH@ 3
------------------DEL SimpleType@@IllegalArgumentException @AT@ 9522 @LENGTH@ 24
------------------DEL InfixExpression@@"Could not convert \"" + value + "\" to "+ type.getName() @AT@ 9547 @LENGTH@ 58
---------------------DEL StringLiteral@@"Could not convert \"" @AT@ 9547 @LENGTH@ 22
---------------------DEL Operator@@+ @AT@ 9569 @LENGTH@ 1
---------------------DEL SimpleName@@value @AT@ 9572 @LENGTH@ 5
---------------------DEL StringLiteral@@"\" to " @AT@ 9580 @LENGTH@ 8
---------------------DEL MethodInvocation@@type.getName() @AT@ 9591 @LENGTH@ 14
------------------------DEL SimpleName@@Name:type @AT@ 9591 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 9596 @LENGTH@ 9
------MOV ReturnStatement@@MethodInvocation:typeConverter.convertTo(type,value) @TO@ Block@@ThenBody:{  try {    return typeConverter.convertTo(type,value);  } catch (  NoTypeConversionAvailableException ex) {    throw new IllegalArgumentException("Could not convert \"" + value + "\" to "+ type.getName());  }} @AT@ 9389 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","second") @TO@ MethodInvocation:template.sendBody("direct:start",ExchangePattern.InOut,"second") @AT@ 1829 @LENGTH@ 44
---UPD MethodInvocation@@template.sendBody("direct:start","second") @TO@ template.sendBody("direct:start",ExchangePattern.InOut,"second") @AT@ 1829 @LENGTH@ 43
------UPD SimpleName@@MethodName:sendBody:["direct:start", "second"] @TO@ MethodName:sendBody:["direct:start", ExchangePattern.InOut, "second"] @AT@ 1838 @LENGTH@ 34
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:sendBody:["direct:start", "second"] @AT@ 1927 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1927 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1943 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:mockOk.assertIsSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testInterceptorWithPredicate, Exception,  @AT@ 3920 @LENGTH@ 27
---INS MethodInvocation@@mockOk.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:mockOk.assertIsSatisfied() @AT@ 3920 @LENGTH@ 26
------INS SimpleName@@Name:mockOk @TO@ MethodInvocation@@mockOk.assertIsSatisfied() @AT@ 3920 @LENGTH@ 6
------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@mockOk.assertIsSatisfied() @AT@ 3927 @LENGTH@ 19


DEL ExpressionStatement@@MethodInvocation:setValue(converter.execute(text)) @AT@ 5449 @LENGTH@ 34


UPD TryStatement@@try {  template.setDefaultEndpointUri("mina:tcp//localhost:8080");  template.sendBody("mina:tcp//localhost:8080");  fail("Should have thrown a ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {  assertTrue("Should be an IAE exception",e.getCause() instanceof IllegalArgumentException);  assertEquals("Unrecognised MINA protocol: null for uri: mina:tcp//localhost:8080",e.getCause().getMessage());} @TO@ try {  template.sendBody("mina:tcp//localhost:8080","mina:tcp//localhost:8080");  fail("Should have thrown a ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {  assertTrue("Should be an IAE exception",e.getCause() instanceof IllegalArgumentException);  assertEquals("Unrecognised MINA protocol: null for uri: mina:tcp//localhost:8080",e.getCause().getMessage());} @AT@ 1729 @LENGTH@ 571
---DEL ExpressionStatement@@MethodInvocation:template.setDefaultEndpointUri("mina:tcp//localhost:8080") @AT@ 1819 @LENGTH@ 59
------DEL MethodInvocation@@template.setDefaultEndpointUri("mina:tcp//localhost:8080") @AT@ 1819 @LENGTH@ 58
---------DEL SimpleName@@Name:template @AT@ 1819 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setDefaultEndpointUri:["mina:tcp//localhost:8080"] @AT@ 1828 @LENGTH@ 49
------------DEL StringLiteral@@"mina:tcp//localhost:8080" @AT@ 1850 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:template.sendBody("mina:tcp//localhost:8080") @TO@ MethodInvocation:template.sendBody("mina:tcp//localhost:8080","mina:tcp//localhost:8080") @AT@ 1891 @LENGTH@ 46
------UPD MethodInvocation@@template.sendBody("mina:tcp//localhost:8080") @TO@ template.sendBody("mina:tcp//localhost:8080","mina:tcp//localhost:8080") @AT@ 1891 @LENGTH@ 45
---------UPD SimpleName@@MethodName:sendBody:["mina:tcp//localhost:8080"] @TO@ MethodName:sendBody:["mina:tcp//localhost:8080", "mina:tcp//localhost:8080"] @AT@ 1900 @LENGTH@ 36
------------INS StringLiteral@@"mina:tcp//localhost:8080" @TO@ SimpleName@@MethodName:sendBody:["mina:tcp//localhost:8080"] @AT@ 1821 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @TO@ TypeDeclaration@@[public]SimpleTest, LanguageTestSupport @AT@ 976 @LENGTH@ 285
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 976 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 983 @LENGTH@ 4
---INS SimpleName@@MethodName:testConstantExpression @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 988 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 1020 @LENGTH@ 9
---INS TryStatement@@try {  assertExpression("Hello World","Hello World");  fail("Should have thrown an Exception");} catch (IllegalSyntaxException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testConstantExpression, Exception,  @AT@ 1040 @LENGTH@ 215
------INS ExpressionStatement@@MethodInvocation:assertExpression("Hello World","Hello World") @TO@ TryStatement@@try {  assertExpression("Hello World","Hello World");  fail("Should have thrown an Exception");} catch (IllegalSyntaxException e) {} @AT@ 1058 @LENGTH@ 47
---------INS MethodInvocation@@assertExpression("Hello World","Hello World") @TO@ ExpressionStatement@@MethodInvocation:assertExpression("Hello World","Hello World") @AT@ 1058 @LENGTH@ 46
------------INS SimpleName@@MethodName:assertExpression:["Hello World", "Hello World"] @TO@ MethodInvocation@@assertExpression("Hello World","Hello World") @AT@ 1058 @LENGTH@ 46
---------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertExpression:["Hello World", "Hello World"] @AT@ 1075 @LENGTH@ 13
---------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertExpression:["Hello World", "Hello World"] @AT@ 1090 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:fail("Should have thrown an Exception") @TO@ TryStatement@@try {  assertExpression("Hello World","Hello World");  fail("Should have thrown an Exception");} catch (IllegalSyntaxException e) {} @AT@ 1118 @LENGTH@ 40
---------INS MethodInvocation@@fail("Should have thrown an Exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should have thrown an Exception") @AT@ 1118 @LENGTH@ 39
------------INS SimpleName@@MethodName:fail:["Should have thrown an Exception"] @TO@ MethodInvocation@@fail("Should have thrown an Exception") @AT@ 1118 @LENGTH@ 39
---------------INS StringLiteral@@"Should have thrown an Exception" @TO@ SimpleName@@MethodName:fail:["Should have thrown an Exception"] @AT@ 1123 @LENGTH@ 33
------INS CatchClause@@catch (IllegalSyntaxException e) {} @TO@ TryStatement@@try {  assertExpression("Hello World","Hello World");  fail("Should have thrown an Exception");} catch (IllegalSyntaxException e) {} @AT@ 1169 @LENGTH@ 86
---------INS SingleVariableDeclaration@@IllegalSyntaxException e @TO@ CatchClause@@catch (IllegalSyntaxException e) {} @AT@ 1176 @LENGTH@ 24
------------INS SimpleType@@IllegalSyntaxException @TO@ SingleVariableDeclaration@@IllegalSyntaxException e @AT@ 1176 @LENGTH@ 22
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalSyntaxException e @AT@ 1199 @LENGTH@ 1


UPD ForStatement@@for (Iterator it=props.getKeys(); it.hasNext(); ) {  String key=(String)it.next();  super.put(key,props.get(key));} @TO@ for (Iterator it=props.getKeys(); it.hasNext(); ) {  String key=(String)it.next();  clearProperty(key);  addPropertyDirect(key,props.get(key));} @AT@ 28282 @LENGTH@ 151
---UPD ExpressionStatement@@SuperMethodInvocation:super.put(key,props.get(key)) @TO@ MethodInvocation:addPropertyDirect(key,props.get(key)) @AT@ 28392 @LENGTH@ 31
------DEL SuperMethodInvocation@@super.put(key,props.get(key)) @AT@ 28392 @LENGTH@ 30
---------DEL SimpleName@@MethodName:put:[key, props.get(key)] @AT@ 28398 @LENGTH@ 3
---------DEL SimpleName@@key @AT@ 28402 @LENGTH@ 3
------INS MethodInvocation@@addPropertyDirect(key,props.get(key)) @TO@ ExpressionStatement@@SuperMethodInvocation:super.put(key,props.get(key)) @AT@ 28424 @LENGTH@ 38
---------INS SimpleName@@MethodName:addPropertyDirect:[key, props.get(key)] @TO@ MethodInvocation@@addPropertyDirect(key,props.get(key)) @AT@ 28424 @LENGTH@ 38
------------MOV MethodInvocation@@props.get(key) @TO@ SimpleName@@MethodName:addPropertyDirect:[key, props.get(key)] @AT@ 28407 @LENGTH@ 14
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:addPropertyDirect:[key, props.get(key)] @AT@ 28442 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:clearProperty(key) @TO@ ForStatement@@for (Iterator it=props.getKeys(); it.hasNext(); ) {  String key=(String)it.next();  super.put(key,props.get(key));} @AT@ 28392 @LENGTH@ 19
------INS MethodInvocation@@clearProperty(key) @TO@ ExpressionStatement@@MethodInvocation:clearProperty(key) @AT@ 28392 @LENGTH@ 18
---------INS SimpleName@@MethodName:clearProperty:[key] @TO@ MethodInvocation@@clearProperty(key) @AT@ 28392 @LENGTH@ 18
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:clearProperty:[key] @AT@ 28406 @LENGTH@ 3


UPD MethodDeclaration@@public, int, MethodName:vote, Authentication authentication, Object object, ConfigAttributeDefinition config,  @TO@ public, int, MethodName:vote, Authentication authentication, Object object, List<ConfigAttribute> config,  @AT@ 572 @LENGTH@ 256
---UPD SingleVariableDeclaration@@ConfigAttributeDefinition config @TO@ List<ConfigAttribute> config @AT@ 634 @LENGTH@ 32
------INS ParameterizedType@@List<ConfigAttribute> @TO@ SingleVariableDeclaration@@ConfigAttributeDefinition config @AT@ 621 @LENGTH@ 21
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ConfigAttribute> @AT@ 621 @LENGTH@ 4
---------INS SimpleType@@ConfigAttribute @TO@ ParameterizedType@@List<ConfigAttribute> @AT@ 626 @LENGTH@ 15
------DEL SimpleType@@ConfigAttributeDefinition @AT@ 634 @LENGTH@ 25


UPD MethodDeclaration@@public, String, MethodName:serialize, Map context,  @TO@ public, String, MethodName:serialize, Map<String,Object> context,  @AT@ 676 @LENGTH@ 74
---UPD SingleVariableDeclaration@@Map context @TO@ Map<String,Object> context @AT@ 700 @LENGTH@ 11
------DEL SimpleType@@Map @AT@ 700 @LENGTH@ 3
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map context @AT@ 700 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 700 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 704 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 712 @LENGTH@ 6


DEL IfStatement@@if (item != null) {  dynamicQueryContext.setContextItem(item);} else {  source=in.getBody(Source.class);  if (source == null) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13170 @LENGTH@ 565
---DEL InfixExpression@@item != null @AT@ 13174 @LENGTH@ 12
------DEL SimpleName@@item @AT@ 13174 @LENGTH@ 4
------DEL Operator@@!= @AT@ 13178 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 13182 @LENGTH@ 4
---DEL Block@@ThenBody:{  dynamicQueryContext.setContextItem(item);} @AT@ 13188 @LENGTH@ 65
---DEL Block@@ElseBody:{  source=in.getBody(Source.class);  if (source == null) {    if (LOG.isDebugEnabled()) {      LOG.debug("No body available on exchange so using an empty document: " + exchange);    }    source=converter.toSource(converter.createDocument());  }  DocumentInfo doc=getStaticQueryContext().buildDocument(source);  dynamicQueryContext.setContextItem(doc);} @AT@ 13259 @LENGTH@ 476
------DEL IfStatement@@if (source == null) {  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @AT@ 13320 @LENGTH@ 274
---------DEL InfixExpression@@source == null @AT@ 13324 @LENGTH@ 14
------------DEL SimpleName@@source @AT@ 13324 @LENGTH@ 6
------------DEL Operator@@== @AT@ 13330 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 13334 @LENGTH@ 4
---------DEL Block@@ThenBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("No body available on exchange so using an empty document: " + exchange);  }  source=converter.toSource(converter.createDocument());} @AT@ 13340 @LENGTH@ 254


INS TryStatement@@try {  eventWriter.flush();} catch (XMLStreamException e) {  throw new FlushFailedException("Failed to flush the events",e);} @TO@ MethodDeclaration@@public, void, MethodName:flush, FlushFailedException,  @AT@ 12298 @LENGTH@ 138
---INS ExpressionStatement@@MethodInvocation:eventWriter.flush() @TO@ TryStatement@@try {  eventWriter.flush();} catch (XMLStreamException e) {  throw new FlushFailedException("Failed to flush the events",e);} @AT@ 12307 @LENGTH@ 20
------INS MethodInvocation@@eventWriter.flush() @TO@ ExpressionStatement@@MethodInvocation:eventWriter.flush() @AT@ 12307 @LENGTH@ 19
---------INS SimpleName@@Name:eventWriter @TO@ MethodInvocation@@eventWriter.flush() @AT@ 12307 @LENGTH@ 11
---------INS SimpleName@@MethodName:flush:[] @TO@ MethodInvocation@@eventWriter.flush() @AT@ 12319 @LENGTH@ 7
---INS CatchClause@@catch (XMLStreamException e) {  throw new FlushFailedException("Failed to flush the events",e);} @TO@ TryStatement@@try {  eventWriter.flush();} catch (XMLStreamException e) {  throw new FlushFailedException("Failed to flush the events",e);} @AT@ 12334 @LENGTH@ 102
------INS SingleVariableDeclaration@@XMLStreamException e @TO@ CatchClause@@catch (XMLStreamException e) {  throw new FlushFailedException("Failed to flush the events",e);} @AT@ 12341 @LENGTH@ 20
---------INS SimpleType@@XMLStreamException @TO@ SingleVariableDeclaration@@XMLStreamException e @AT@ 12341 @LENGTH@ 18
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@XMLStreamException e @AT@ 12360 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new FlushFailedException("Failed to flush the events",e) @TO@ CatchClause@@catch (XMLStreamException e) {  throw new FlushFailedException("Failed to flush the events",e);} @AT@ 12368 @LENGTH@ 64
---------INS ClassInstanceCreation@@FlushFailedException["Failed to flush the events", e] @TO@ ThrowStatement@@ClassInstanceCreation:new FlushFailedException("Failed to flush the events",e) @AT@ 12374 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@FlushFailedException["Failed to flush the events", e] @AT@ 12374 @LENGTH@ 3
------------INS SimpleType@@FlushFailedException @TO@ ClassInstanceCreation@@FlushFailedException["Failed to flush the events", e] @AT@ 12378 @LENGTH@ 20
------------INS StringLiteral@@"Failed to flush the events" @TO@ ClassInstanceCreation@@FlushFailedException["Failed to flush the events", e] @AT@ 12399 @LENGTH@ 28
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@FlushFailedException["Failed to flush the events", e] @AT@ 12429 @LENGTH@ 1


UPD VariableDeclarationStatement@@Exchange out=template.send(exchange); @TO@ Exchange out=template.send("direct:a",exchange); @AT@ 1979 @LENGTH@ 39
---UPD VariableDeclarationFragment@@out=template.send(exchange) @TO@ out=template.send("direct:a",exchange) @AT@ 1988 @LENGTH@ 29
------UPD MethodInvocation@@template.send(exchange) @TO@ template.send("direct:a",exchange) @AT@ 1994 @LENGTH@ 23
---------UPD SimpleName@@MethodName:send:[exchange] @TO@ MethodName:send:["direct:a", exchange] @AT@ 2003 @LENGTH@ 14
------------INS StringLiteral@@"direct:a" @TO@ SimpleName@@MethodName:send:[exchange] @AT@ 1956 @LENGTH@ 10


UPD FieldDeclaration@@final, private, String, [xmlDocStart="<root>"] @TO@ final, static, private, String, [xmlDocStart="<root>"] @AT@ 912 @LENGTH@ 44
---INS Modifier@@static @TO@ FieldDeclaration@@final, private, String, [xmlDocStart="<root>"] @AT@ 918 @LENGTH@ 6


UPD TypeDeclaration@@[@Converter, public]FlatpackConverter,  @TO@ [@Converter, public, final]FlatpackConverter,  @AT@ 1003 @LENGTH@ 658
---INS Modifier@@final @TO@ TypeDeclaration@@[@Converter, public]FlatpackConverter,  @AT@ 1022 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"sql-dao-test.xml"}), public]JdbcJobExecutionDaoTests, AbstractJobExecutionDaoTests @AT@ 1390 @LENGTH@ 230
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 1390 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 1397 @LENGTH@ 4
---INS SimpleName@@MethodName:testUpdateExecutionStatus @TO@ MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 1402 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:dao.saveJobExecution(execution) @TO@ MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 1438 @LENGTH@ 32
------INS MethodInvocation@@dao.saveJobExecution(execution) @TO@ ExpressionStatement@@MethodInvocation:dao.saveJobExecution(execution) @AT@ 1438 @LENGTH@ 31
---------INS SimpleName@@Name:dao @TO@ MethodInvocation@@dao.saveJobExecution(execution) @AT@ 1438 @LENGTH@ 3
---------INS SimpleName@@MethodName:saveJobExecution:[execution] @TO@ MethodInvocation@@dao.saveJobExecution(execution) @AT@ 1442 @LENGTH@ 27
------------INS SimpleName@@execution @TO@ SimpleName@@MethodName:saveJobExecution:[execution] @AT@ 1459 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:execution.setStatus(BatchStatus.COMPLETED) @TO@ MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 1474 @LENGTH@ 43
------INS MethodInvocation@@execution.setStatus(BatchStatus.COMPLETED) @TO@ ExpressionStatement@@MethodInvocation:execution.setStatus(BatchStatus.COMPLETED) @AT@ 1474 @LENGTH@ 42
---------INS SimpleName@@Name:execution @TO@ MethodInvocation@@execution.setStatus(BatchStatus.COMPLETED) @AT@ 1474 @LENGTH@ 9
---------INS SimpleName@@MethodName:setStatus:[BatchStatus.COMPLETED] @TO@ MethodInvocation@@execution.setStatus(BatchStatus.COMPLETED) @AT@ 1484 @LENGTH@ 32
------------INS QualifiedName@@BatchStatus.COMPLETED @TO@ SimpleName@@MethodName:setStatus:[BatchStatus.COMPLETED] @AT@ 1494 @LENGTH@ 21
---------------INS SimpleName@@BatchStatus @TO@ QualifiedName@@BatchStatus.COMPLETED @AT@ 1494 @LENGTH@ 11
---------------INS SimpleName@@COMPLETED @TO@ QualifiedName@@BatchStatus.COMPLETED @AT@ 1506 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:dao.synchronizeStatus(execution) @TO@ MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 1521 @LENGTH@ 33
------INS MethodInvocation@@dao.synchronizeStatus(execution) @TO@ ExpressionStatement@@MethodInvocation:dao.synchronizeStatus(execution) @AT@ 1521 @LENGTH@ 32
---------INS SimpleName@@Name:dao @TO@ MethodInvocation@@dao.synchronizeStatus(execution) @AT@ 1521 @LENGTH@ 3
---------INS SimpleName@@MethodName:synchronizeStatus:[execution] @TO@ MethodInvocation@@dao.synchronizeStatus(execution) @AT@ 1525 @LENGTH@ 28
------------INS SimpleName@@execution @TO@ SimpleName@@MethodName:synchronizeStatus:[execution] @AT@ 1543 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(BatchStatus.STARTING,execution.getStatus()) @TO@ MethodDeclaration@@public, void, MethodName:testUpdateExecutionStatus,  @AT@ 1558 @LENGTH@ 58
------INS MethodInvocation@@assertEquals(BatchStatus.STARTING,execution.getStatus()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(BatchStatus.STARTING,execution.getStatus()) @AT@ 1558 @LENGTH@ 57
---------INS SimpleName@@MethodName:assertEquals:[BatchStatus.STARTING, execution.getStatus()] @TO@ MethodInvocation@@assertEquals(BatchStatus.STARTING,execution.getStatus()) @AT@ 1558 @LENGTH@ 57
------------INS QualifiedName@@BatchStatus.STARTING @TO@ SimpleName@@MethodName:assertEquals:[BatchStatus.STARTING, execution.getStatus()] @AT@ 1571 @LENGTH@ 20
---------------INS SimpleName@@BatchStatus @TO@ QualifiedName@@BatchStatus.STARTING @AT@ 1571 @LENGTH@ 11
---------------INS SimpleName@@STARTING @TO@ QualifiedName@@BatchStatus.STARTING @AT@ 1583 @LENGTH@ 8
------------INS MethodInvocation@@execution.getStatus() @TO@ SimpleName@@MethodName:assertEquals:[BatchStatus.STARTING, execution.getStatus()] @AT@ 1593 @LENGTH@ 21
---------------INS SimpleName@@Name:execution @TO@ MethodInvocation@@execution.getStatus() @AT@ 1593 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getStatus:[] @TO@ MethodInvocation@@execution.getStatus() @AT@ 1603 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @TO@ TypeDeclaration@@[public]DefaultMapperTests, TestCase @AT@ 2222 @LENGTH@ 395
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2222 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2229 @LENGTH@ 4
---INS SimpleName@@MethodName:testMappingConversionError @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2234 @LENGTH@ 26
---INS VariableDeclarationStatement@@DefaultMapping mapping1=new DefaultMapping(parser.parseExpression("boop",null),parser.parseExpression("boop",null)); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2267 @LENGTH@ 126
------INS SimpleType@@DefaultMapping @TO@ VariableDeclarationStatement@@DefaultMapping mapping1=new DefaultMapping(parser.parseExpression("boop",null),parser.parseExpression("boop",null)); @AT@ 2267 @LENGTH@ 14
------INS VariableDeclarationFragment@@mapping1=new DefaultMapping(parser.parseExpression("boop",null),parser.parseExpression("boop",null)) @TO@ VariableDeclarationStatement@@DefaultMapping mapping1=new DefaultMapping(parser.parseExpression("boop",null),parser.parseExpression("boop",null)); @AT@ 2282 @LENGTH@ 110
---------INS SimpleName@@mapping1 @TO@ VariableDeclarationFragment@@mapping1=new DefaultMapping(parser.parseExpression("boop",null),parser.parseExpression("boop",null)) @AT@ 2282 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultMapping[parser.parseExpression("boop",null), parser.parseExpression("boop",null)] @TO@ VariableDeclarationFragment@@mapping1=new DefaultMapping(parser.parseExpression("boop",null),parser.parseExpression("boop",null)) @AT@ 2293 @LENGTH@ 99
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("boop",null), parser.parseExpression("boop",null)] @AT@ 2293 @LENGTH@ 3
------------INS SimpleType@@DefaultMapping @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("boop",null), parser.parseExpression("boop",null)] @AT@ 2297 @LENGTH@ 14
------------INS MethodInvocation@@parser.parseExpression("boop",null) @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("boop",null), parser.parseExpression("boop",null)] @AT@ 2312 @LENGTH@ 36
---------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("boop",null) @AT@ 2312 @LENGTH@ 6
---------------INS SimpleName@@MethodName:parseExpression:["boop", null] @TO@ MethodInvocation@@parser.parseExpression("boop",null) @AT@ 2319 @LENGTH@ 29
------------------INS StringLiteral@@"boop" @TO@ SimpleName@@MethodName:parseExpression:["boop", null] @AT@ 2335 @LENGTH@ 6
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseExpression:["boop", null] @AT@ 2343 @LENGTH@ 4
------------INS MethodInvocation@@parser.parseExpression("boop",null) @TO@ ClassInstanceCreation@@DefaultMapping[parser.parseExpression("boop",null), parser.parseExpression("boop",null)] @AT@ 2350 @LENGTH@ 41
---------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("boop",null) @AT@ 2350 @LENGTH@ 6
---------------INS SimpleName@@MethodName:parseExpression:["boop", null] @TO@ MethodInvocation@@parser.parseExpression("boop",null) @AT@ 2357 @LENGTH@ 34
------------------INS StringLiteral@@"boop" @TO@ SimpleName@@MethodName:parseExpression:["boop", null] @AT@ 2378 @LENGTH@ 6
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseExpression:["boop", null] @AT@ 2386 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:mapper.addMapping(mapping1) @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2396 @LENGTH@ 28
------INS MethodInvocation@@mapper.addMapping(mapping1) @TO@ ExpressionStatement@@MethodInvocation:mapper.addMapping(mapping1) @AT@ 2396 @LENGTH@ 27
---------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.addMapping(mapping1) @AT@ 2396 @LENGTH@ 6
---------INS SimpleName@@MethodName:addMapping:[mapping1] @TO@ MethodInvocation@@mapper.addMapping(mapping1) @AT@ 2403 @LENGTH@ 20
------------INS SimpleName@@mapping1 @TO@ SimpleName@@MethodName:addMapping:[mapping1] @AT@ 2414 @LENGTH@ 8
---INS VariableDeclarationStatement@@Map bean1=new HashMap(); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2427 @LENGTH@ 26
------INS SimpleType@@Map @TO@ VariableDeclarationStatement@@Map bean1=new HashMap(); @AT@ 2427 @LENGTH@ 3
------INS VariableDeclarationFragment@@bean1=new HashMap() @TO@ VariableDeclarationStatement@@Map bean1=new HashMap(); @AT@ 2431 @LENGTH@ 21
---------INS SimpleName@@bean1 @TO@ VariableDeclarationFragment@@bean1=new HashMap() @AT@ 2431 @LENGTH@ 5
---------INS ClassInstanceCreation@@HashMap[] @TO@ VariableDeclarationFragment@@bean1=new HashMap() @AT@ 2439 @LENGTH@ 13
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2439 @LENGTH@ 3
------------INS SimpleType@@HashMap @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2443 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:bean1.put("boop","bogus") @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2456 @LENGTH@ 27
------INS MethodInvocation@@bean1.put("boop","bogus") @TO@ ExpressionStatement@@MethodInvocation:bean1.put("boop","bogus") @AT@ 2456 @LENGTH@ 26
---------INS SimpleName@@Name:bean1 @TO@ MethodInvocation@@bean1.put("boop","bogus") @AT@ 2456 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["boop", "bogus"] @TO@ MethodInvocation@@bean1.put("boop","bogus") @AT@ 2462 @LENGTH@ 20
------------INS StringLiteral@@"boop" @TO@ SimpleName@@MethodName:put:["boop", "bogus"] @AT@ 2466 @LENGTH@ 6
------------INS StringLiteral@@"bogus" @TO@ SimpleName@@MethodName:put:["boop", "bogus"] @AT@ 2474 @LENGTH@ 7
---INS VariableDeclarationStatement@@TestBean2 bean2=new TestBean2(); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2486 @LENGTH@ 34
------INS SimpleType@@TestBean2 @TO@ VariableDeclarationStatement@@TestBean2 bean2=new TestBean2(); @AT@ 2486 @LENGTH@ 9
------INS VariableDeclarationFragment@@bean2=new TestBean2() @TO@ VariableDeclarationStatement@@TestBean2 bean2=new TestBean2(); @AT@ 2496 @LENGTH@ 23
---------INS SimpleName@@bean2 @TO@ VariableDeclarationFragment@@bean2=new TestBean2() @AT@ 2496 @LENGTH@ 5
---------INS ClassInstanceCreation@@TestBean2[] @TO@ VariableDeclarationFragment@@bean2=new TestBean2() @AT@ 2504 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@TestBean2[] @AT@ 2504 @LENGTH@ 3
------------INS SimpleType@@TestBean2 @TO@ ClassInstanceCreation@@TestBean2[] @AT@ 2508 @LENGTH@ 9
---INS VariableDeclarationStatement@@MappingResults results=mapper.map(bean1,bean2); @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2523 @LENGTH@ 50
------INS SimpleType@@MappingResults @TO@ VariableDeclarationStatement@@MappingResults results=mapper.map(bean1,bean2); @AT@ 2523 @LENGTH@ 14
------INS VariableDeclarationFragment@@results=mapper.map(bean1,bean2) @TO@ VariableDeclarationStatement@@MappingResults results=mapper.map(bean1,bean2); @AT@ 2538 @LENGTH@ 34
---------INS SimpleName@@results @TO@ VariableDeclarationFragment@@results=mapper.map(bean1,bean2) @AT@ 2538 @LENGTH@ 7
---------INS MethodInvocation@@mapper.map(bean1,bean2) @TO@ VariableDeclarationFragment@@results=mapper.map(bean1,bean2) @AT@ 2548 @LENGTH@ 24
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.map(bean1,bean2) @AT@ 2548 @LENGTH@ 6
------------INS SimpleName@@MethodName:map:[bean1, bean2] @TO@ MethodInvocation@@mapper.map(bean1,bean2) @AT@ 2555 @LENGTH@ 17
---------------INS SimpleName@@bean1 @TO@ SimpleName@@MethodName:map:[bean1, bean2] @AT@ 2559 @LENGTH@ 5
---------------INS SimpleName@@bean2 @TO@ SimpleName@@MethodName:map:[bean1, bean2] @AT@ 2566 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertTrue(results.hasErrorResults()) @TO@ MethodDeclaration@@public, void, MethodName:testMappingConversionError,  @AT@ 2576 @LENGTH@ 38
------INS MethodInvocation@@assertTrue(results.hasErrorResults()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(results.hasErrorResults()) @AT@ 2576 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertTrue:[results.hasErrorResults()] @TO@ MethodInvocation@@assertTrue(results.hasErrorResults()) @AT@ 2576 @LENGTH@ 37
------------INS MethodInvocation@@results.hasErrorResults() @TO@ SimpleName@@MethodName:assertTrue:[results.hasErrorResults()] @AT@ 2587 @LENGTH@ 25
---------------INS SimpleName@@Name:results @TO@ MethodInvocation@@results.hasErrorResults() @AT@ 2587 @LENGTH@ 7
---------------INS SimpleName@@MethodName:hasErrorResults:[] @TO@ MethodInvocation@@results.hasErrorResults() @AT@ 2595 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:testSetValueWithCoersion,  @TO@ TypeDeclaration@@[public]OgnlExpressionParserTests, TestCase @AT@ 5869 @LENGTH@ 131
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSetValueWithCoersion,  @AT@ 5869 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSetValueWithCoersion,  @AT@ 5876 @LENGTH@ 4
---INS SimpleName@@MethodName:testSetValueWithCoersion @TO@ MethodDeclaration@@public, void, MethodName:testSetValueWithCoersion,  @AT@ 5881 @LENGTH@ 24
---INS VariableDeclarationStatement@@Expression e=parser.parseExpression("date",null); @TO@ MethodDeclaration@@public, void, MethodName:testSetValueWithCoersion,  @AT@ 5912 @LENGTH@ 52
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression e=parser.parseExpression("date",null); @AT@ 5912 @LENGTH@ 10
------INS VariableDeclarationFragment@@e=parser.parseExpression("date",null) @TO@ VariableDeclarationStatement@@Expression e=parser.parseExpression("date",null); @AT@ 5923 @LENGTH@ 40
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=parser.parseExpression("date",null) @AT@ 5923 @LENGTH@ 1
---------INS MethodInvocation@@parser.parseExpression("date",null) @TO@ VariableDeclarationFragment@@e=parser.parseExpression("date",null) @AT@ 5927 @LENGTH@ 36
------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("date",null) @AT@ 5927 @LENGTH@ 6
------------INS SimpleName@@MethodName:parseExpression:["date", null] @TO@ MethodInvocation@@parser.parseExpression("date",null) @AT@ 5934 @LENGTH@ 29
---------------INS StringLiteral@@"date" @TO@ SimpleName@@MethodName:parseExpression:["date", null] @AT@ 5950 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:parseExpression:["date", null] @AT@ 5958 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:e.setValue(bean,"2008-9-15") @TO@ MethodDeclaration@@public, void, MethodName:testSetValueWithCoersion,  @AT@ 5967 @LENGTH@ 30
------INS MethodInvocation@@e.setValue(bean,"2008-9-15") @TO@ ExpressionStatement@@MethodInvocation:e.setValue(bean,"2008-9-15") @AT@ 5967 @LENGTH@ 29
---------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.setValue(bean,"2008-9-15") @AT@ 5967 @LENGTH@ 1
---------INS SimpleName@@MethodName:setValue:[bean, "2008-9-15"] @TO@ MethodInvocation@@e.setValue(bean,"2008-9-15") @AT@ 5969 @LENGTH@ 27
------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:setValue:[bean, "2008-9-15"] @AT@ 5978 @LENGTH@ 4
------------INS StringLiteral@@"2008-9-15" @TO@ SimpleName@@MethodName:setValue:[bean, "2008-9-15"] @AT@ 5984 @LENGTH@ 11


UPD MethodDeclaration@@public, JMXExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 3864 @LENGTH@ 132
---UPD SimpleType@@JMXExchange @TO@ Exchange @AT@ 3871 @LENGTH@ 11


UPD TypeDeclaration@@[public]FtpUtils,  @TO@ [public, final]FtpUtils,  @AT@ 989 @LENGTH@ 873
---INS Modifier@@final @TO@ TypeDeclaration@@[public]FtpUtils,  @AT@ 996 @LENGTH@ 5


INS IfStatement@@if (obj == null || !(obj instanceof StringHolder)) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 10398 @LENGTH@ 75
---INS InfixExpression@@obj == null || !(obj instanceof StringHolder) @TO@ IfStatement@@if (obj == null || !(obj instanceof StringHolder)) {  return false;} @AT@ 10402 @LENGTH@ 45
------INS InfixExpression@@obj == null @TO@ InfixExpression@@obj == null || !(obj instanceof StringHolder) @AT@ 10402 @LENGTH@ 11
---------INS SimpleName@@obj @TO@ InfixExpression@@obj == null @AT@ 10402 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@obj == null @AT@ 10405 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@obj == null @AT@ 10409 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@obj == null || !(obj instanceof StringHolder) @AT@ 10413 @LENGTH@ 2
------INS PrefixExpression@@!(obj instanceof StringHolder) @TO@ InfixExpression@@obj == null || !(obj instanceof StringHolder) @AT@ 10417 @LENGTH@ 30
---------INS Operator@@! @TO@ PrefixExpression@@!(obj instanceof StringHolder) @AT@ 10417 @LENGTH@ 1
---------INS ParenthesizedExpression@@(obj instanceof StringHolder) @TO@ PrefixExpression@@!(obj instanceof StringHolder) @AT@ 10418 @LENGTH@ 29
------------INS InstanceofExpression@@obj instanceof StringHolder @TO@ ParenthesizedExpression@@(obj instanceof StringHolder) @AT@ 10419 @LENGTH@ 27
---------------INS SimpleName@@obj @TO@ InstanceofExpression@@obj instanceof StringHolder @AT@ 10419 @LENGTH@ 3
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@obj instanceof StringHolder @AT@ 10423 @LENGTH@ 10
---------------INS SimpleType@@StringHolder @TO@ InstanceofExpression@@obj instanceof StringHolder @AT@ 10434 @LENGTH@ 12
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (obj == null || !(obj instanceof StringHolder)) {  return false;} @AT@ 10449 @LENGTH@ 24
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 10455 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 10462 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:file=new File("target/messages/input/" + filename + FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX) @TO@ Assignment:file=new File("target/messages/input/" + filename + FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX) @AT@ 3598 @LENGTH@ 108
---UPD Assignment@@file=new File("target/messages/input/" + filename + FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX) @TO@ file=new File("target/messages/input/" + filename + FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX) @AT@ 3598 @LENGTH@ 107
------UPD ClassInstanceCreation@@File["target/messages/input/" + filename + FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX] @TO@ File["target/messages/input/" + filename + FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX] @AT@ 3605 @LENGTH@ 100
---------UPD InfixExpression@@"target/messages/input/" + filename + FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX @TO@ "target/messages/input/" + filename + FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 3614 @LENGTH@ 90
------------UPD QualifiedName@@FileProcessStrategySupport.DEFAULT_LOCK_FILE_POSTFIX @TO@ FileEndpoint.DEFAULT_LOCK_FILE_POSTFIX @AT@ 3652 @LENGTH@ 52
---------------UPD SimpleName@@FileProcessStrategySupport @TO@ FileEndpoint @AT@ 3652 @LENGTH@ 26


MOV MethodDeclaration@@public, static, XStreamDataFormat, MethodName:processAnnotations, Class<?>... types,  @TO@ TypeDeclaration@@[public]XStreamDataFormat, [DataFormat] @AT@ 2282 @LENGTH@ 301


DEL MethodDeclaration@@public, org.springframework.webflow.execution.View, MethodName:getView, RequestContext context,  @AT@ 2312 @LENGTH@ 656
---DEL Modifier@@public @AT@ 2312 @LENGTH@ 6
---DEL SimpleType@@org.springframework.webflow.execution.View @AT@ 2319 @LENGTH@ 42
---DEL SimpleName@@MethodName:getView @AT@ 2362 @LENGTH@ 7
---DEL SingleVariableDeclaration@@RequestContext context @AT@ 2370 @LENGTH@ 22
------DEL SimpleType@@RequestContext @AT@ 2370 @LENGTH@ 14
------DEL SimpleName@@context @AT@ 2385 @LENGTH@ 7
---DEL VariableDeclarationStatement@@org.springframework.webflow.execution.View view=super.getView(context); @AT@ 2398 @LENGTH@ 73
------DEL SimpleType@@org.springframework.webflow.execution.View @AT@ 2398 @LENGTH@ 42
------DEL VariableDeclarationFragment@@view=super.getView(context) @AT@ 2441 @LENGTH@ 29
---------DEL SimpleName@@view @AT@ 2441 @LENGTH@ 4
---------DEL SuperMethodInvocation@@super.getView(context) @AT@ 2448 @LENGTH@ 22
------------DEL SimpleName@@MethodName:getView:[context] @AT@ 2454 @LENGTH@ 7
------------DEL SimpleName@@context @AT@ 2462 @LENGTH@ 7
---DEL IfStatement@@if (view instanceof AbstractMvcView && context.getFlashScope().contains(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY)) {  AbstractMvcView mvcView=(AbstractMvcView)view;  MappingResultsHolder holder=(MappingResultsHolder)context.getFlashScope().get(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY);  mvcView.setEventId(holder.getEventId());  mvcView.setMappingResults(holder.getMappingResults());  mvcView.setViewErrors(holder.getViewErrors());} @AT@ 2474 @LENGTH@ 476
------DEL InfixExpression@@view instanceof AbstractMvcView && context.getFlashScope().contains(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY) @AT@ 2478 @LENGTH@ 120
---------DEL InstanceofExpression@@view instanceof AbstractMvcView @AT@ 2478 @LENGTH@ 31
------------DEL SimpleName@@view @AT@ 2478 @LENGTH@ 4
------------DEL Instanceof@@instanceof @AT@ 2483 @LENGTH@ 10
------------DEL SimpleType@@AbstractMvcView @AT@ 2494 @LENGTH@ 15
---------DEL Operator@@&& @AT@ 2509 @LENGTH@ 2
---------DEL MethodInvocation@@context.getFlashScope().contains(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY) @AT@ 2517 @LENGTH@ 81
------------DEL MethodInvocation@@MethodName:getFlashScope:[] @AT@ 2517 @LENGTH@ 23
------------DEL SimpleName@@Name:context @AT@ 2517 @LENGTH@ 7
------------DEL SimpleName@@MethodName:contains:[MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY] @AT@ 2541 @LENGTH@ 57
---------------DEL QualifiedName@@MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY @AT@ 2550 @LENGTH@ 47
------------------DEL SimpleName@@MappingResultsHolder @AT@ 2550 @LENGTH@ 20
------------------DEL SimpleName@@MAPPING_RESULTS_HOLDER_KEY @AT@ 2571 @LENGTH@ 26
------DEL Block@@ThenBody:{  AbstractMvcView mvcView=(AbstractMvcView)view;  MappingResultsHolder holder=(MappingResultsHolder)context.getFlashScope().get(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY);  mvcView.setEventId(holder.getEventId());  mvcView.setMappingResults(holder.getMappingResults());  mvcView.setViewErrors(holder.getViewErrors());} @AT@ 2600 @LENGTH@ 350
---------DEL VariableDeclarationStatement@@AbstractMvcView mvcView=(AbstractMvcView)view; @AT@ 2605 @LENGTH@ 49
------------DEL SimpleType@@AbstractMvcView @AT@ 2605 @LENGTH@ 15
------------DEL VariableDeclarationFragment@@mvcView=(AbstractMvcView)view @AT@ 2621 @LENGTH@ 32
---------------DEL SimpleName@@mvcView @AT@ 2621 @LENGTH@ 7
---------------DEL CastExpression@@(AbstractMvcView)view @AT@ 2631 @LENGTH@ 22
------------------DEL SimpleType@@AbstractMvcView @AT@ 2632 @LENGTH@ 15
------------------DEL SimpleName@@view @AT@ 2649 @LENGTH@ 4
---------DEL VariableDeclarationStatement@@MappingResultsHolder holder=(MappingResultsHolder)context.getFlashScope().get(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY); @AT@ 2658 @LENGTH@ 136
------------DEL SimpleType@@MappingResultsHolder @AT@ 2658 @LENGTH@ 20
------------DEL VariableDeclarationFragment@@holder=(MappingResultsHolder)context.getFlashScope().get(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY) @AT@ 2679 @LENGTH@ 114
---------------DEL SimpleName@@holder @AT@ 2679 @LENGTH@ 6
---------------DEL CastExpression@@(MappingResultsHolder)context.getFlashScope().get(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY) @AT@ 2688 @LENGTH@ 105
------------------DEL SimpleType@@MappingResultsHolder @AT@ 2689 @LENGTH@ 20
------------------DEL MethodInvocation@@context.getFlashScope().get(MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY) @AT@ 2711 @LENGTH@ 82
---------------------DEL MethodInvocation@@MethodName:getFlashScope:[] @AT@ 2711 @LENGTH@ 23
---------------------DEL SimpleName@@Name:context @AT@ 2711 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:get:[MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY] @AT@ 2735 @LENGTH@ 58
------------------------DEL QualifiedName@@MappingResultsHolder.MAPPING_RESULTS_HOLDER_KEY @AT@ 2745 @LENGTH@ 47
---------------------------DEL SimpleName@@MappingResultsHolder @AT@ 2745 @LENGTH@ 20
---------------------------DEL SimpleName@@MAPPING_RESULTS_HOLDER_KEY @AT@ 2766 @LENGTH@ 26
---------DEL ExpressionStatement@@MethodInvocation:mvcView.setEventId(holder.getEventId()) @AT@ 2798 @LENGTH@ 40
------------DEL MethodInvocation@@mvcView.setEventId(holder.getEventId()) @AT@ 2798 @LENGTH@ 39
---------------DEL SimpleName@@Name:mvcView @AT@ 2798 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:setEventId:[holder.getEventId()] @AT@ 2806 @LENGTH@ 31
------------------DEL MethodInvocation@@holder.getEventId() @AT@ 2817 @LENGTH@ 19
---------------------DEL SimpleName@@Name:holder @AT@ 2817 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getEventId:[] @AT@ 2824 @LENGTH@ 12
---------DEL ExpressionStatement@@MethodInvocation:mvcView.setMappingResults(holder.getMappingResults()) @AT@ 2842 @LENGTH@ 54
------------DEL MethodInvocation@@mvcView.setMappingResults(holder.getMappingResults()) @AT@ 2842 @LENGTH@ 53
---------------DEL SimpleName@@Name:mvcView @AT@ 2842 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:setMappingResults:[holder.getMappingResults()] @AT@ 2850 @LENGTH@ 45
------------------DEL MethodInvocation@@holder.getMappingResults() @AT@ 2868 @LENGTH@ 26
---------------------DEL SimpleName@@Name:holder @AT@ 2868 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getMappingResults:[] @AT@ 2875 @LENGTH@ 19
---------DEL ExpressionStatement@@MethodInvocation:mvcView.setViewErrors(holder.getViewErrors()) @AT@ 2900 @LENGTH@ 46
------------DEL MethodInvocation@@mvcView.setViewErrors(holder.getViewErrors()) @AT@ 2900 @LENGTH@ 45
---------------DEL SimpleName@@Name:mvcView @AT@ 2900 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:setViewErrors:[holder.getViewErrors()] @AT@ 2908 @LENGTH@ 37
------------------DEL MethodInvocation@@holder.getViewErrors() @AT@ 2922 @LENGTH@ 22
---------------------DEL SimpleName@@Name:holder @AT@ 2922 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getViewErrors:[] @AT@ 2929 @LENGTH@ 15
---DEL ReturnStatement@@SimpleName:view @AT@ 2953 @LENGTH@ 12
------DEL SimpleName@@view @AT@ 2960 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:setType(typeClass.getName()) @TO@ MethodDeclaration@@public, voidMethodName:ConvertBodyType, Class typeClass,  @AT@ 1851 @LENGTH@ 29
---INS MethodInvocation@@setType(typeClass.getName()) @TO@ ExpressionStatement@@MethodInvocation:setType(typeClass.getName()) @AT@ 1851 @LENGTH@ 28
------INS SimpleName@@MethodName:setType:[typeClass.getName()] @TO@ MethodInvocation@@setType(typeClass.getName()) @AT@ 1851 @LENGTH@ 28
---------INS MethodInvocation@@typeClass.getName() @TO@ SimpleName@@MethodName:setType:[typeClass.getName()] @AT@ 1859 @LENGTH@ 19
------------INS SimpleName@@Name:typeClass @TO@ MethodInvocation@@typeClass.getName() @AT@ 1859 @LENGTH@ 9
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@typeClass.getName() @AT@ 1869 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:ClassUtils.forName("ognl.Ognl") @TO@ MethodInvocation:ClassUtils.forName("ognl.Ognl",DefaultExpressionParserFactory.class.getClassLoader()) @AT@ 3932 @LENGTH@ 32
---UPD MethodInvocation@@ClassUtils.forName("ognl.Ognl") @TO@ ClassUtils.forName("ognl.Ognl",DefaultExpressionParserFactory.class.getClassLoader()) @AT@ 3932 @LENGTH@ 31
------UPD SimpleName@@MethodName:forName:["ognl.Ognl"] @TO@ MethodName:forName:["ognl.Ognl", DefaultExpressionParserFactory.class.getClassLoader()] @AT@ 3943 @LENGTH@ 20
---------INS MethodInvocation@@DefaultExpressionParserFactory.class.getClassLoader() @TO@ SimpleName@@MethodName:forName:["ognl.Ognl"] @AT@ 3964 @LENGTH@ 53
------------INS TypeLiteral@@DefaultExpressionParserFactory.class @TO@ MethodInvocation@@DefaultExpressionParserFactory.class.getClassLoader() @AT@ 3964 @LENGTH@ 36
------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@DefaultExpressionParserFactory.class.getClassLoader() @AT@ 4001 @LENGTH@ 16


INS VariableDeclarationStatement@@ViewActionStateHolder stateHolder=(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY); @TO@ MethodDeclaration@@public, View, MethodName:getView, RequestContext context,  @AT@ 3174 @LENGTH@ 120
---INS SimpleType@@ViewActionStateHolder @TO@ VariableDeclarationStatement@@ViewActionStateHolder stateHolder=(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY); @AT@ 3174 @LENGTH@ 21
---INS VariableDeclarationFragment@@stateHolder=(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY) @TO@ VariableDeclarationStatement@@ViewActionStateHolder stateHolder=(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY); @AT@ 3196 @LENGTH@ 97
------INS SimpleName@@stateHolder @TO@ VariableDeclarationFragment@@stateHolder=(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY) @AT@ 3196 @LENGTH@ 11
------INS CastExpression@@(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY) @TO@ VariableDeclarationFragment@@stateHolder=(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY) @AT@ 3210 @LENGTH@ 83
---------INS SimpleType@@ViewActionStateHolder @TO@ CastExpression@@(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY) @AT@ 3211 @LENGTH@ 21
---------INS MethodInvocation@@context.getFlashScope().get(ViewActionStateHolder.KEY) @TO@ CastExpression@@(ViewActionStateHolder)context.getFlashScope().get(ViewActionStateHolder.KEY) @AT@ 3234 @LENGTH@ 59
------------INS MethodInvocation@@MethodName:getFlashScope:[] @TO@ MethodInvocation@@context.getFlashScope().get(ViewActionStateHolder.KEY) @AT@ 3234 @LENGTH@ 23
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getFlashScope().get(ViewActionStateHolder.KEY) @AT@ 3234 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[ViewActionStateHolder.KEY] @TO@ MethodInvocation@@context.getFlashScope().get(ViewActionStateHolder.KEY) @AT@ 3258 @LENGTH@ 35
---------------INS QualifiedName@@ViewActionStateHolder.KEY @TO@ SimpleName@@MethodName:get:[ViewActionStateHolder.KEY] @AT@ 3267 @LENGTH@ 25
------------------INS SimpleName@@ViewActionStateHolder @TO@ QualifiedName@@ViewActionStateHolder.KEY @AT@ 3267 @LENGTH@ 21
------------------INS SimpleName@@KEY @TO@ QualifiedName@@ViewActionStateHolder.KEY @AT@ 3289 @LENGTH@ 3


UPD FieldDeclaration@@protected, String, [expectedText="<html"] @TO@ protected, String, [expectedText="activemq"] @AT@ 1192 @LENGTH@ 40
---UPD VariableDeclarationFragment@@expectedText="<html" @TO@ expectedText="activemq" @AT@ 1209 @LENGTH@ 22
------UPD StringLiteral@@"<html" @TO@ "activemq" @AT@ 1224 @LENGTH@ 7


INS MethodDeclaration@@public, voidMethodName:DefaultDirContextValidator,  @TO@ TypeDeclaration@@[public]DefaultDirContextValidator, [DirContextValidator] @AT@ 3163 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DefaultDirContextValidator,  @AT@ 3163 @LENGTH@ 6
---INS SimpleName@@MethodName:DefaultDirContextValidator @TO@ MethodDeclaration@@public, voidMethodName:DefaultDirContextValidator,  @AT@ 3170 @LENGTH@ 26
---INS ConstructorInvocation@@this(SearchControls.OBJECT_SCOPE); @TO@ MethodDeclaration@@public, voidMethodName:DefaultDirContextValidator,  @AT@ 3209 @LENGTH@ 34
------INS QualifiedName@@SearchControls.OBJECT_SCOPE @TO@ ConstructorInvocation@@this(SearchControls.OBJECT_SCOPE); @AT@ 3214 @LENGTH@ 27
---------INS SimpleName@@SearchControls @TO@ QualifiedName@@SearchControls.OBJECT_SCOPE @AT@ 3214 @LENGTH@ 14
---------INS SimpleName@@OBJECT_SCOPE @TO@ QualifiedName@@SearchControls.OBJECT_SCOPE @AT@ 3229 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertTrue("Received message count " + receivedCounter + ", expected at least "+ expectedCount,expectedCount <= receivedCounter) @TO@ MethodInvocation:assertTrue("Received message count " + receivedCounter + ", expected at least "+ expectedMinimumCount,expectedMinimumCount <= receivedCounter) @AT@ 8915 @LENGTH@ 131
---UPD MethodInvocation@@assertTrue("Received message count " + receivedCounter + ", expected at least "+ expectedCount,expectedCount <= receivedCounter) @TO@ assertTrue("Received message count " + receivedCounter + ", expected at least "+ expectedMinimumCount,expectedMinimumCount <= receivedCounter) @AT@ 8915 @LENGTH@ 130
------UPD SimpleName@@MethodName:assertTrue:["Received message count " + receivedCounter + ", expected at least "+ expectedCount, expectedCount <= receivedCounter] @TO@ MethodName:assertTrue:["Received message count " + receivedCounter + ", expected at least "+ expectedMinimumCount, expectedMinimumCount <= receivedCounter] @AT@ 8915 @LENGTH@ 130
---------UPD InfixExpression@@"Received message count " + receivedCounter + ", expected at least "+ expectedCount @TO@ "Received message count " + receivedCounter + ", expected at least "+ expectedMinimumCount @AT@ 8926 @LENGTH@ 84
------------UPD SimpleName@@expectedCount @TO@ expectedMinimumCount @AT@ 8997 @LENGTH@ 13
---------UPD InfixExpression@@expectedCount <= receivedCounter @TO@ expectedMinimumCount <= receivedCounter @AT@ 9012 @LENGTH@ 32
------------UPD SimpleName@@expectedCount @TO@ expectedMinimumCount @AT@ 9012 @LENGTH@ 13


UPD IfStatement@@if (in != null) in.close(); @TO@ if (in != null) {  in.close();} @AT@ 2478 @LENGTH@ 41
---UPD Block@@ThenBody:in.close(); @TO@ ThenBody:{  in.close();} @AT@ 2508 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/camel/spring/errorHandler.xml") @TO@ ClassInstanceCreation:new ClassPathXmlApplicationContext("org/apache/camel/spring/config/errorHandler.xml") @AT@ 1433 @LENGTH@ 86
---UPD ClassInstanceCreation@@ClassPathXmlApplicationContext["org/apache/camel/spring/errorHandler.xml"] @TO@ ClassPathXmlApplicationContext["org/apache/camel/spring/config/errorHandler.xml"] @AT@ 1440 @LENGTH@ 78
------UPD StringLiteral@@"org/apache/camel/spring/errorHandler.xml" @TO@ "org/apache/camel/spring/config/errorHandler.xml" @AT@ 1475 @LENGTH@ 42


UPD MethodDeclaration@@public, QuartzExchange, MethodName:createExchange, ExchangePattern pattern,  @TO@ public, Exchange, MethodName:createExchange, ExchangePattern pattern,  @AT@ 4712 @LENGTH@ 138
---UPD SimpleType@@QuartzExchange @TO@ Exchange @AT@ 4719 @LENGTH@ 14


UPD FieldDeclaration@@RequestorAffinity, [affinity] @TO@ private, RequestorAffinity, [affinity] @AT@ 2245 @LENGTH@ 27
---INS Modifier@@private @TO@ FieldDeclaration@@RequestorAffinity, [affinity] @AT@ 2245 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:System.out.println("marshal " + payload) @AT@ 3138 @LENGTH@ 41
---DEL MethodInvocation@@System.out.println("marshal " + payload) @AT@ 3138 @LENGTH@ 40
------DEL QualifiedName@@Name:System.out @AT@ 3138 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["marshal " + payload] @AT@ 3149 @LENGTH@ 29
---------DEL InfixExpression@@"marshal " + payload @AT@ 3157 @LENGTH@ 20
------------DEL StringLiteral@@"marshal " @AT@ 3157 @LENGTH@ 10
------------DEL Operator@@+ @AT@ 3167 @LENGTH@ 1
------------DEL SimpleName@@payload @AT@ 3170 @LENGTH@ 7


INS VariableDeclarationStatement@@String currentDir=client.printWorkingDirectory(); @TO@ MethodDeclaration@@protected, void, MethodName:pollDirectory, String dir, Exception,  @AT@ 4247 @LENGTH@ 51
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String currentDir=client.printWorkingDirectory(); @AT@ 4247 @LENGTH@ 6
---INS VariableDeclarationFragment@@currentDir=client.printWorkingDirectory() @TO@ VariableDeclarationStatement@@String currentDir=client.printWorkingDirectory(); @AT@ 4254 @LENGTH@ 43
------INS SimpleName@@currentDir @TO@ VariableDeclarationFragment@@currentDir=client.printWorkingDirectory() @AT@ 4254 @LENGTH@ 10
------INS MethodInvocation@@client.printWorkingDirectory() @TO@ VariableDeclarationFragment@@currentDir=client.printWorkingDirectory() @AT@ 4267 @LENGTH@ 30
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.printWorkingDirectory() @AT@ 4267 @LENGTH@ 6
---------INS SimpleName@@MethodName:printWorkingDirectory:[] @TO@ MethodInvocation@@client.printWorkingDirectory() @AT@ 4274 @LENGTH@ 23


UPD VariableDeclarationStatement@@int startOfHash=prefix.length() + 1; @TO@ int startOfHash=prefix.length(); @AT@ 5791 @LENGTH@ 38
---UPD VariableDeclarationFragment@@startOfHash=prefix.length() + 1 @TO@ startOfHash=prefix.length() @AT@ 5795 @LENGTH@ 33
------DEL InfixExpression@@prefix.length() + 1 @AT@ 5809 @LENGTH@ 19
---------DEL MethodInvocation@@prefix.length() @AT@ 5809 @LENGTH@ 15
---------DEL Operator@@+ @AT@ 5824 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 5827 @LENGTH@ 1
------INS MethodInvocation@@prefix.length() @TO@ VariableDeclarationFragment@@startOfHash=prefix.length() + 1 @AT@ 5828 @LENGTH@ 15
---------MOV SimpleName@@Name:prefix @TO@ MethodInvocation@@prefix.length() @AT@ 5809 @LENGTH@ 6
---------MOV SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@prefix.length() @AT@ 5816 @LENGTH@ 8


UPD FieldDeclaration@@private, ConversionService, [conversionService=DefaultConversionService.getSharedInstance()] @TO@ private, ConversionService, [conversionService] @AT@ 3675 @LENGTH@ 91
---UPD VariableDeclarationFragment@@conversionService=DefaultConversionService.getSharedInstance() @TO@ conversionService @AT@ 3701 @LENGTH@ 64
------DEL MethodInvocation@@DefaultConversionService.getSharedInstance() @AT@ 3721 @LENGTH@ 44
---------DEL SimpleName@@Name:DefaultConversionService @AT@ 3721 @LENGTH@ 24
---------DEL SimpleName@@MethodName:getSharedInstance:[] @AT@ 3746 @LENGTH@ 19


DEL FieldDeclaration@@int, [count=0] @AT@ 1565 @LENGTH@ 14
---DEL PrimitiveType@@int @AT@ 1565 @LENGTH@ 3
---DEL VariableDeclarationFragment@@count=0 @AT@ 1569 @LENGTH@ 9
------DEL SimpleName@@count @AT@ 1569 @LENGTH@ 5
------DEL NumberLiteral@@0 @AT@ 1577 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:view.setConversionService(new DefaultConversionService()) @TO@ MethodDeclaration@@public, void, MethodName:testRenderWithBindingModel, Exception,  @AT@ 5445 @LENGTH@ 58
---INS MethodInvocation@@view.setConversionService(new DefaultConversionService()) @TO@ ExpressionStatement@@MethodInvocation:view.setConversionService(new DefaultConversionService()) @AT@ 5445 @LENGTH@ 57
------INS SimpleName@@Name:view @TO@ MethodInvocation@@view.setConversionService(new DefaultConversionService()) @AT@ 5445 @LENGTH@ 4
------INS SimpleName@@MethodName:setConversionService:[new DefaultConversionService()] @TO@ MethodInvocation@@view.setConversionService(new DefaultConversionService()) @AT@ 5450 @LENGTH@ 52
---------INS ClassInstanceCreation@@DefaultConversionService[] @TO@ SimpleName@@MethodName:setConversionService:[new DefaultConversionService()] @AT@ 5471 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 5471 @LENGTH@ 3
------------INS SimpleType@@DefaultConversionService @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 5475 @LENGTH@ 24


DEL MethodDeclaration@@public, MutableAttributeMap, MethodName:createExecutionInputMap, ExternalContext context,  @AT@ 19098 @LENGTH@ 116
---DEL Modifier@@public @AT@ 19098 @LENGTH@ 6
---DEL SimpleType@@MutableAttributeMap @AT@ 19105 @LENGTH@ 19
---DEL SimpleName@@MethodName:createExecutionInputMap @AT@ 19125 @LENGTH@ 23
---DEL SingleVariableDeclaration@@ExternalContext context @AT@ 19149 @LENGTH@ 23
------DEL SimpleType@@ExternalContext @AT@ 19149 @LENGTH@ 15
------DEL SimpleName@@context @AT@ 19165 @LENGTH@ 7
---DEL ReturnStatement@@ClassInstanceCreation:new LocalAttributeMap() @AT@ 19179 @LENGTH@ 31
------DEL ClassInstanceCreation@@LocalAttributeMap[] @AT@ 19186 @LENGTH@ 23
---------DEL New@@new @AT@ 19186 @LENGTH@ 3
---------DEL SimpleType@@LocalAttributeMap @AT@ 19190 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[private, static]BarFlow, [FlowDefinition] @AT@ 5066 @LENGTH@ 28
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 5066 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 5073 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 5078 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(TypeConversionError.class,((MappingResult)results.getErrorResults().get(0)).getResult().getClass()) @TO@ MethodInvocation:assertEquals("typeMismatch",((MappingResult)results.getErrorResults().get(0)).getCode()) @AT@ 2648 @LENGTH@ 120
---UPD MethodInvocation@@assertEquals(TypeConversionError.class,((MappingResult)results.getErrorResults().get(0)).getResult().getClass()) @TO@ assertEquals("typeMismatch",((MappingResult)results.getErrorResults().get(0)).getCode()) @AT@ 2648 @LENGTH@ 119
------UPD SimpleName@@MethodName:assertEquals:[TypeConversionError.class, ((MappingResult)results.getErrorResults().get(0)).getResult().getClass()] @TO@ MethodName:assertEquals:["typeMismatch", ((MappingResult)results.getErrorResults().get(0)).getCode()] @AT@ 2648 @LENGTH@ 119
---------INS StringLiteral@@"typeMismatch" @TO@ SimpleName@@MethodName:assertEquals:[TypeConversionError.class, ((MappingResult)results.getErrorResults().get(0)).getResult().getClass()] @AT@ 2589 @LENGTH@ 14
---------DEL TypeLiteral@@TypeConversionError.class @AT@ 2661 @LENGTH@ 25
---------UPD MethodInvocation@@((MappingResult)results.getErrorResults().get(0)).getResult().getClass() @TO@ ((MappingResult)results.getErrorResults().get(0)).getCode() @AT@ 2688 @LENGTH@ 78
------------DEL MethodInvocation@@MethodName:getResult:[] @AT@ 2688 @LENGTH@ 62
------------UPD SimpleName@@MethodName:getClass:[] @TO@ MethodName:getCode:[] @AT@ 2756 @LENGTH@ 10


UPD MethodDeclaration@@private, void, MethodName:processComponentBinding, FacesContext context, UIComponent component,  @TO@ private, void, MethodName:processTree, FacesContext context, UIComponent component,  @AT@ 6355 @LENGTH@ 392
---UPD SimpleName@@MethodName:processComponentBinding @TO@ MethodName:processTree @AT@ 6368 @LENGTH@ 23
---UPD VariableDeclarationStatement@@Iterator it=component.getChildren().iterator(); @TO@ Iterator it=component.getFacetsAndChildren(); @AT@ 6574 @LENGTH@ 49
------UPD VariableDeclarationFragment@@it=component.getChildren().iterator() @TO@ it=component.getFacetsAndChildren() @AT@ 6583 @LENGTH@ 39
---------UPD MethodInvocation@@component.getChildren().iterator() @TO@ component.getFacetsAndChildren() @AT@ 6588 @LENGTH@ 34
------------DEL MethodInvocation@@MethodName:getChildren:[] @AT@ 6588 @LENGTH@ 23
------------UPD SimpleName@@MethodName:iterator:[] @TO@ MethodName:getFacetsAndChildren:[] @AT@ 6612 @LENGTH@ 10
---INS IfStatement@@if (component instanceof EditableValueHolder) {  ((EditableValueHolder)component).setValid(true);} @TO@ MethodDeclaration@@private, void, MethodName:processComponentBinding, FacesContext context, UIComponent component,  @AT@ 6588 @LENGTH@ 104
------INS InstanceofExpression@@component instanceof EditableValueHolder @TO@ IfStatement@@if (component instanceof EditableValueHolder) {  ((EditableValueHolder)component).setValid(true);} @AT@ 6592 @LENGTH@ 40
---------INS SimpleName@@component @TO@ InstanceofExpression@@component instanceof EditableValueHolder @AT@ 6592 @LENGTH@ 9
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@component instanceof EditableValueHolder @AT@ 6602 @LENGTH@ 10
---------INS SimpleType@@EditableValueHolder @TO@ InstanceofExpression@@component instanceof EditableValueHolder @AT@ 6613 @LENGTH@ 19
------INS Block@@ThenBody:{  ((EditableValueHolder)component).setValid(true);} @TO@ IfStatement@@if (component instanceof EditableValueHolder) {  ((EditableValueHolder)component).setValid(true);} @AT@ 6634 @LENGTH@ 58
---------INS ExpressionStatement@@MethodInvocation:((EditableValueHolder)component).setValid(true) @TO@ Block@@ThenBody:{  ((EditableValueHolder)component).setValid(true);} @AT@ 6639 @LENGTH@ 49
------------INS MethodInvocation@@((EditableValueHolder)component).setValid(true) @TO@ ExpressionStatement@@MethodInvocation:((EditableValueHolder)component).setValid(true) @AT@ 6639 @LENGTH@ 48
---------------INS ParenthesizedExpression@@((EditableValueHolder)component) @TO@ MethodInvocation@@((EditableValueHolder)component).setValid(true) @AT@ 6639 @LENGTH@ 33
------------------INS CastExpression@@(EditableValueHolder)component @TO@ ParenthesizedExpression@@((EditableValueHolder)component) @AT@ 6640 @LENGTH@ 31
---------------------INS SimpleType@@EditableValueHolder @TO@ CastExpression@@(EditableValueHolder)component @AT@ 6641 @LENGTH@ 19
---------------------INS SimpleName@@component @TO@ CastExpression@@(EditableValueHolder)component @AT@ 6662 @LENGTH@ 9
---------------INS SimpleName@@MethodName:setValid:[true] @TO@ MethodInvocation@@((EditableValueHolder)component).setValid(true) @AT@ 6673 @LENGTH@ 14
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setValid:[true] @AT@ 6682 @LENGTH@ 4
---UPD WhileStatement@@while (it.hasNext()) {  UIComponent child=(UIComponent)it.next();  processComponentBinding(context,child);} @TO@ while (it.hasNext()) {  UIComponent child=(UIComponent)it.next();  processTree(context,child);} @AT@ 6626 @LENGTH@ 118
------UPD Block@@WhileBody:{  UIComponent child=(UIComponent)it.next();  processComponentBinding(context,child);} @TO@ WhileBody:{  UIComponent child=(UIComponent)it.next();  processTree(context,child);} @AT@ 6647 @LENGTH@ 97
---------UPD ExpressionStatement@@MethodInvocation:processComponentBinding(context,child) @TO@ MethodInvocation:processTree(context,child) @AT@ 6700 @LENGTH@ 40
------------UPD MethodInvocation@@processComponentBinding(context,child) @TO@ processTree(context,child) @AT@ 6700 @LENGTH@ 39
---------------UPD SimpleName@@MethodName:processComponentBinding:[context, child] @TO@ MethodName:processTree:[context, child] @AT@ 6700 @LENGTH@ 39


UPD MethodDeclaration@@public, StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, Step step,  @TO@ public, StepExecution, MethodName:getLastStepExecution, JobInstance jobInstance, String stepName,  @AT@ 1854 @LENGTH@ 97
---UPD SingleVariableDeclaration@@Step step @TO@ String stepName @AT@ 1921 @LENGTH@ 9
------UPD SimpleType@@Step @TO@ String @AT@ 1921 @LENGTH@ 4
------UPD SimpleName@@step @TO@ stepName @AT@ 1926 @LENGTH@ 4


UPD FieldDeclaration@@boolean, [loggedFatal=false] @TO@ boolean, [loggedFatal] @AT@ 950 @LENGTH@ 28
---UPD VariableDeclarationFragment@@loggedFatal=false @TO@ loggedFatal @AT@ 958 @LENGTH@ 19
------DEL BooleanLiteral@@false @AT@ 972 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisifed() @TO@ MethodInvocation:assertMockEndpointsSatisfied() @AT@ 2297 @LENGTH@ 31
---UPD MethodInvocation@@MethodName:assertMockEndpointsSatisifed:[] @TO@ MethodName:assertMockEndpointsSatisfied:[] @AT@ 2297 @LENGTH@ 30


INS MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @TO@ TypeDeclaration@@[public]FileUtils,  @AT@ 78806 @LENGTH@ 653
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78806 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78813 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78820 @LENGTH@ 7
---INS SimpleName@@MethodName:isSymlink @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78828 @LENGTH@ 9
---INS SingleVariableDeclaration@@File file @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78838 @LENGTH@ 9
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File file @AT@ 78838 @LENGTH@ 4
------INS SimpleName@@file @TO@ SingleVariableDeclaration@@File file @AT@ 78843 @LENGTH@ 4
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78856 @LENGTH@ 11
---INS IfStatement@@if (file == null) {  throw new NullPointerException("File must not be null");} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78878 @LENGTH@ 98
------INS InfixExpression@@file == null @TO@ IfStatement@@if (file == null) {  throw new NullPointerException("File must not be null");} @AT@ 78882 @LENGTH@ 12
---------INS SimpleName@@file @TO@ InfixExpression@@file == null @AT@ 78882 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@file == null @AT@ 78886 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@file == null @AT@ 78890 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new NullPointerException("File must not be null");} @TO@ IfStatement@@if (file == null) {  throw new NullPointerException("File must not be null");} @AT@ 78896 @LENGTH@ 80
---------INS ThrowStatement@@ClassInstanceCreation:new NullPointerException("File must not be null") @TO@ Block@@ThenBody:{  throw new NullPointerException("File must not be null");} @AT@ 78910 @LENGTH@ 56
------------INS ClassInstanceCreation@@NullPointerException["File must not be null"] @TO@ ThrowStatement@@ClassInstanceCreation:new NullPointerException("File must not be null") @AT@ 78916 @LENGTH@ 49
---------------INS New@@new @TO@ ClassInstanceCreation@@NullPointerException["File must not be null"] @AT@ 78916 @LENGTH@ 3
---------------INS SimpleType@@NullPointerException @TO@ ClassInstanceCreation@@NullPointerException["File must not be null"] @AT@ 78920 @LENGTH@ 20
---------------INS StringLiteral@@"File must not be null" @TO@ ClassInstanceCreation@@NullPointerException["File must not be null"] @AT@ 78941 @LENGTH@ 23
---INS VariableDeclarationStatement@@File fileInCanonicalDir=null; @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 78985 @LENGTH@ 31
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File fileInCanonicalDir=null; @AT@ 78985 @LENGTH@ 4
------INS VariableDeclarationFragment@@fileInCanonicalDir=null @TO@ VariableDeclarationStatement@@File fileInCanonicalDir=null; @AT@ 78990 @LENGTH@ 25
---------INS SimpleName@@fileInCanonicalDir @TO@ VariableDeclarationFragment@@fileInCanonicalDir=null @AT@ 78990 @LENGTH@ 18
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@fileInCanonicalDir=null @AT@ 79011 @LENGTH@ 4
---INS IfStatement@@if (file.getParent() == null) {  fileInCanonicalDir=file;} else {  File canonicalDir=file.getParentFile().getCanonicalFile();  fileInCanonicalDir=new File(canonicalDir,file.getName());} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 79025 @LENGTH@ 243
------INS InfixExpression@@file.getParent() == null @TO@ IfStatement@@if (file.getParent() == null) {  fileInCanonicalDir=file;} else {  File canonicalDir=file.getParentFile().getCanonicalFile();  fileInCanonicalDir=new File(canonicalDir,file.getName());} @AT@ 79029 @LENGTH@ 24
---------INS MethodInvocation@@file.getParent() @TO@ InfixExpression@@file.getParent() == null @AT@ 79029 @LENGTH@ 16
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParent() @AT@ 79029 @LENGTH@ 4
------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@file.getParent() @AT@ 79034 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@file.getParent() == null @AT@ 79045 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@file.getParent() == null @AT@ 79049 @LENGTH@ 4
------INS Block@@ThenBody:{  fileInCanonicalDir=file;} @TO@ IfStatement@@if (file.getParent() == null) {  fileInCanonicalDir=file;} else {  File canonicalDir=file.getParentFile().getCanonicalFile();  fileInCanonicalDir=new File(canonicalDir,file.getName());} @AT@ 79055 @LENGTH@ 50
---------INS ExpressionStatement@@Assignment:fileInCanonicalDir=file @TO@ Block@@ThenBody:{  fileInCanonicalDir=file;} @AT@ 79069 @LENGTH@ 26
------------INS Assignment@@fileInCanonicalDir=file @TO@ ExpressionStatement@@Assignment:fileInCanonicalDir=file @AT@ 79069 @LENGTH@ 25
---------------INS SimpleName@@fileInCanonicalDir @TO@ Assignment@@fileInCanonicalDir=file @AT@ 79069 @LENGTH@ 18
---------------INS Operator@@= @TO@ Assignment@@fileInCanonicalDir=file @AT@ 79087 @LENGTH@ 1
---------------INS SimpleName@@file @TO@ Assignment@@fileInCanonicalDir=file @AT@ 79090 @LENGTH@ 4
------INS Block@@ElseBody:{  File canonicalDir=file.getParentFile().getCanonicalFile();  fileInCanonicalDir=new File(canonicalDir,file.getName());} @TO@ IfStatement@@if (file.getParent() == null) {  fileInCanonicalDir=file;} else {  File canonicalDir=file.getParentFile().getCanonicalFile();  fileInCanonicalDir=new File(canonicalDir,file.getName());} @AT@ 79111 @LENGTH@ 157
---------INS VariableDeclarationStatement@@File canonicalDir=file.getParentFile().getCanonicalFile(); @TO@ Block@@ElseBody:{  File canonicalDir=file.getParentFile().getCanonicalFile();  fileInCanonicalDir=new File(canonicalDir,file.getName());} @AT@ 79125 @LENGTH@ 60
------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File canonicalDir=file.getParentFile().getCanonicalFile(); @AT@ 79125 @LENGTH@ 4
------------INS VariableDeclarationFragment@@canonicalDir=file.getParentFile().getCanonicalFile() @TO@ VariableDeclarationStatement@@File canonicalDir=file.getParentFile().getCanonicalFile(); @AT@ 79130 @LENGTH@ 54
---------------INS SimpleName@@canonicalDir @TO@ VariableDeclarationFragment@@canonicalDir=file.getParentFile().getCanonicalFile() @AT@ 79130 @LENGTH@ 12
---------------INS MethodInvocation@@file.getParentFile().getCanonicalFile() @TO@ VariableDeclarationFragment@@canonicalDir=file.getParentFile().getCanonicalFile() @AT@ 79145 @LENGTH@ 39
------------------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile().getCanonicalFile() @AT@ 79145 @LENGTH@ 20
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile().getCanonicalFile() @AT@ 79145 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getCanonicalFile:[] @TO@ MethodInvocation@@file.getParentFile().getCanonicalFile() @AT@ 79166 @LENGTH@ 18
---------INS ExpressionStatement@@Assignment:fileInCanonicalDir=new File(canonicalDir,file.getName()) @TO@ Block@@ElseBody:{  File canonicalDir=file.getParentFile().getCanonicalFile();  fileInCanonicalDir=new File(canonicalDir,file.getName());} @AT@ 79198 @LENGTH@ 60
------------INS Assignment@@fileInCanonicalDir=new File(canonicalDir,file.getName()) @TO@ ExpressionStatement@@Assignment:fileInCanonicalDir=new File(canonicalDir,file.getName()) @AT@ 79198 @LENGTH@ 59
---------------INS SimpleName@@fileInCanonicalDir @TO@ Assignment@@fileInCanonicalDir=new File(canonicalDir,file.getName()) @AT@ 79198 @LENGTH@ 18
---------------INS Operator@@= @TO@ Assignment@@fileInCanonicalDir=new File(canonicalDir,file.getName()) @AT@ 79216 @LENGTH@ 1
---------------INS ClassInstanceCreation@@File[canonicalDir, file.getName()] @TO@ Assignment@@fileInCanonicalDir=new File(canonicalDir,file.getName()) @AT@ 79219 @LENGTH@ 38
------------------INS New@@new @TO@ ClassInstanceCreation@@File[canonicalDir, file.getName()] @AT@ 79219 @LENGTH@ 3
------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[canonicalDir, file.getName()] @AT@ 79223 @LENGTH@ 4
------------------INS SimpleName@@canonicalDir @TO@ ClassInstanceCreation@@File[canonicalDir, file.getName()] @AT@ 79228 @LENGTH@ 12
------------------INS MethodInvocation@@file.getName() @TO@ ClassInstanceCreation@@File[canonicalDir, file.getName()] @AT@ 79242 @LENGTH@ 14
---------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getName() @AT@ 79242 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@file.getName() @AT@ 79247 @LENGTH@ 9
---INS IfStatement@@if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {  return false;} else {  return true;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSymlink, File file, IOException,  @AT@ 79286 @LENGTH@ 167
------INS MethodInvocation@@fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()) @TO@ IfStatement@@if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {  return false;} else {  return true;} @AT@ 79290 @LENGTH@ 82
---------INS MethodInvocation@@MethodName:getCanonicalFile:[] @TO@ MethodInvocation@@fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()) @AT@ 79290 @LENGTH@ 37
---------INS SimpleName@@Name:fileInCanonicalDir @TO@ MethodInvocation@@fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()) @AT@ 79290 @LENGTH@ 18
---------INS SimpleName@@MethodName:equals:[fileInCanonicalDir.getAbsoluteFile()] @TO@ MethodInvocation@@fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()) @AT@ 79328 @LENGTH@ 44
------------INS MethodInvocation@@fileInCanonicalDir.getAbsoluteFile() @TO@ SimpleName@@MethodName:equals:[fileInCanonicalDir.getAbsoluteFile()] @AT@ 79335 @LENGTH@ 36
---------------INS SimpleName@@Name:fileInCanonicalDir @TO@ MethodInvocation@@fileInCanonicalDir.getAbsoluteFile() @AT@ 79335 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getAbsoluteFile:[] @TO@ MethodInvocation@@fileInCanonicalDir.getAbsoluteFile() @AT@ 79354 @LENGTH@ 17
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {  return false;} else {  return true;} @AT@ 79374 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 79388 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 79395 @LENGTH@ 5
------INS Block@@ElseBody:{  return true;} @TO@ IfStatement@@if (fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {  return false;} else {  return true;} @AT@ 79417 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ElseBody:{  return true;} @AT@ 79431 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 79438 @LENGTH@ 4


INS MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @TO@ TypeDeclaration@@[public]DeadLetterChannel, ErrorHandlerSupport[AsyncProcessor] @AT@ 10819 @LENGTH@ 593
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @AT@ 10819 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @AT@ 10827 @LENGTH@ 4
---INS SimpleName@@MethodName:decrementRedeliveryCounter @TO@ MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @AT@ 10832 @LENGTH@ 26
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @AT@ 10859 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10859 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 10868 @LENGTH@ 8
---INS VariableDeclarationStatement@@Message in=exchange.getIn(); @TO@ MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @AT@ 10888 @LENGTH@ 30
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message in=exchange.getIn(); @AT@ 10888 @LENGTH@ 7
------INS VariableDeclarationFragment@@in=exchange.getIn() @TO@ VariableDeclarationStatement@@Message in=exchange.getIn(); @AT@ 10896 @LENGTH@ 21
---------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=exchange.getIn() @AT@ 10896 @LENGTH@ 2
---------INS MethodInvocation@@exchange.getIn() @TO@ VariableDeclarationFragment@@in=exchange.getIn() @AT@ 10901 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 10901 @LENGTH@ 8
------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 10910 @LENGTH@ 7
---INS VariableDeclarationStatement@@Integer counter=in.getHeader(REDELIVERY_COUNTER,Integer.class); @TO@ MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @AT@ 10927 @LENGTH@ 66
------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer counter=in.getHeader(REDELIVERY_COUNTER,Integer.class); @AT@ 10927 @LENGTH@ 7
------INS VariableDeclarationFragment@@counter=in.getHeader(REDELIVERY_COUNTER,Integer.class) @TO@ VariableDeclarationStatement@@Integer counter=in.getHeader(REDELIVERY_COUNTER,Integer.class); @AT@ 10935 @LENGTH@ 57
---------INS SimpleName@@counter @TO@ VariableDeclarationFragment@@counter=in.getHeader(REDELIVERY_COUNTER,Integer.class) @AT@ 10935 @LENGTH@ 7
---------INS MethodInvocation@@in.getHeader(REDELIVERY_COUNTER,Integer.class) @TO@ VariableDeclarationFragment@@counter=in.getHeader(REDELIVERY_COUNTER,Integer.class) @AT@ 10945 @LENGTH@ 47
------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.getHeader(REDELIVERY_COUNTER,Integer.class) @AT@ 10945 @LENGTH@ 2
------------INS SimpleName@@MethodName:getHeader:[REDELIVERY_COUNTER, Integer.class] @TO@ MethodInvocation@@in.getHeader(REDELIVERY_COUNTER,Integer.class) @AT@ 10948 @LENGTH@ 44
---------------INS SimpleName@@REDELIVERY_COUNTER @TO@ SimpleName@@MethodName:getHeader:[REDELIVERY_COUNTER, Integer.class] @AT@ 10958 @LENGTH@ 18
---------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:getHeader:[REDELIVERY_COUNTER, Integer.class] @AT@ 10978 @LENGTH@ 13
---INS IfStatement@@if (counter != null) {  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} else {  in.setHeader(REDELIVERY_COUNTER,0);  in.setHeader(REDELIVERED,Boolean.FALSE);} @TO@ MethodDeclaration@@private, void, MethodName:decrementRedeliveryCounter, Exchange exchange,  @AT@ 11002 @LENGTH@ 404
------INS InfixExpression@@counter != null @TO@ IfStatement@@if (counter != null) {  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} else {  in.setHeader(REDELIVERY_COUNTER,0);  in.setHeader(REDELIVERED,Boolean.FALSE);} @AT@ 11006 @LENGTH@ 15
---------INS SimpleName@@counter @TO@ InfixExpression@@counter != null @AT@ 11006 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@counter != null @AT@ 11013 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@counter != null @AT@ 11017 @LENGTH@ 4
------INS Block@@ThenBody:{  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} @TO@ IfStatement@@if (counter != null) {  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} else {  in.setHeader(REDELIVERY_COUNTER,0);  in.setHeader(REDELIVERED,Boolean.FALSE);} @AT@ 11023 @LENGTH@ 232
---------INS VariableDeclarationStatement@@int prev=counter - 1; @TO@ Block@@ThenBody:{  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} @AT@ 11037 @LENGTH@ 23
------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int prev=counter - 1; @AT@ 11037 @LENGTH@ 3
------------INS VariableDeclarationFragment@@prev=counter - 1 @TO@ VariableDeclarationStatement@@int prev=counter - 1; @AT@ 11041 @LENGTH@ 18
---------------INS SimpleName@@prev @TO@ VariableDeclarationFragment@@prev=counter - 1 @AT@ 11041 @LENGTH@ 4
---------------INS InfixExpression@@counter - 1 @TO@ VariableDeclarationFragment@@prev=counter - 1 @AT@ 11048 @LENGTH@ 11
------------------INS SimpleName@@counter @TO@ InfixExpression@@counter - 1 @AT@ 11048 @LENGTH@ 7
------------------INS Operator@@- @TO@ InfixExpression@@counter - 1 @AT@ 11055 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@counter - 1 @AT@ 11058 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERY_COUNTER,prev) @TO@ Block@@ThenBody:{  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} @AT@ 11073 @LENGTH@ 39
------------INS MethodInvocation@@in.setHeader(REDELIVERY_COUNTER,prev) @TO@ ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERY_COUNTER,prev) @AT@ 11073 @LENGTH@ 38
---------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.setHeader(REDELIVERY_COUNTER,prev) @AT@ 11073 @LENGTH@ 2
---------------INS SimpleName@@MethodName:setHeader:[REDELIVERY_COUNTER, prev] @TO@ MethodInvocation@@in.setHeader(REDELIVERY_COUNTER,prev) @AT@ 11076 @LENGTH@ 35
------------------INS SimpleName@@REDELIVERY_COUNTER @TO@ SimpleName@@MethodName:setHeader:[REDELIVERY_COUNTER, prev] @AT@ 11086 @LENGTH@ 18
------------------INS SimpleName@@prev @TO@ SimpleName@@MethodName:setHeader:[REDELIVERY_COUNTER, prev] @AT@ 11106 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE) @TO@ Block@@ThenBody:{  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} @AT@ 11178 @LENGTH@ 67
------------INS MethodInvocation@@in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE) @TO@ ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE) @AT@ 11178 @LENGTH@ 66
---------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE) @AT@ 11178 @LENGTH@ 2
---------------INS SimpleName@@MethodName:setHeader:[REDELIVERED, prev > 0 ? Boolean.TRUE : Boolean.FALSE] @TO@ MethodInvocation@@in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE) @AT@ 11181 @LENGTH@ 63
------------------INS SimpleName@@REDELIVERED @TO@ SimpleName@@MethodName:setHeader:[REDELIVERED, prev > 0 ? Boolean.TRUE : Boolean.FALSE] @AT@ 11191 @LENGTH@ 11
------------------INS ConditionalExpression@@prev > 0 ? Boolean.TRUE : Boolean.FALSE @TO@ SimpleName@@MethodName:setHeader:[REDELIVERED, prev > 0 ? Boolean.TRUE : Boolean.FALSE] @AT@ 11204 @LENGTH@ 39
---------------------INS InfixExpression@@prev > 0 @TO@ ConditionalExpression@@prev > 0 ? Boolean.TRUE : Boolean.FALSE @AT@ 11204 @LENGTH@ 8
------------------------INS SimpleName@@prev @TO@ InfixExpression@@prev > 0 @AT@ 11204 @LENGTH@ 4
------------------------INS Operator@@> @TO@ InfixExpression@@prev > 0 @AT@ 11208 @LENGTH@ 1
------------------------INS NumberLiteral@@0 @TO@ InfixExpression@@prev > 0 @AT@ 11211 @LENGTH@ 1
---------------------INS QualifiedName@@Boolean.TRUE @TO@ ConditionalExpression@@prev > 0 ? Boolean.TRUE : Boolean.FALSE @AT@ 11215 @LENGTH@ 12
------------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 11215 @LENGTH@ 7
------------------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 11223 @LENGTH@ 4
---------------------INS QualifiedName@@Boolean.FALSE @TO@ ConditionalExpression@@prev > 0 ? Boolean.TRUE : Boolean.FALSE @AT@ 11230 @LENGTH@ 13
------------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 11230 @LENGTH@ 7
------------------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 11238 @LENGTH@ 5
------INS Block@@ElseBody:{  in.setHeader(REDELIVERY_COUNTER,0);  in.setHeader(REDELIVERED,Boolean.FALSE);} @TO@ IfStatement@@if (counter != null) {  int prev=counter - 1;  in.setHeader(REDELIVERY_COUNTER,prev);  in.setHeader(REDELIVERED,prev > 0 ? Boolean.TRUE : Boolean.FALSE);} else {  in.setHeader(REDELIVERY_COUNTER,0);  in.setHeader(REDELIVERED,Boolean.FALSE);} @AT@ 11261 @LENGTH@ 145
---------INS ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERY_COUNTER,0) @TO@ Block@@ElseBody:{  in.setHeader(REDELIVERY_COUNTER,0);  in.setHeader(REDELIVERED,Boolean.FALSE);} @AT@ 11306 @LENGTH@ 36
------------INS MethodInvocation@@in.setHeader(REDELIVERY_COUNTER,0) @TO@ ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERY_COUNTER,0) @AT@ 11306 @LENGTH@ 35
---------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.setHeader(REDELIVERY_COUNTER,0) @AT@ 11306 @LENGTH@ 2
---------------INS SimpleName@@MethodName:setHeader:[REDELIVERY_COUNTER, 0] @TO@ MethodInvocation@@in.setHeader(REDELIVERY_COUNTER,0) @AT@ 11309 @LENGTH@ 32
------------------INS SimpleName@@REDELIVERY_COUNTER @TO@ SimpleName@@MethodName:setHeader:[REDELIVERY_COUNTER, 0] @AT@ 11319 @LENGTH@ 18
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setHeader:[REDELIVERY_COUNTER, 0] @AT@ 11339 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERED,Boolean.FALSE) @TO@ Block@@ElseBody:{  in.setHeader(REDELIVERY_COUNTER,0);  in.setHeader(REDELIVERED,Boolean.FALSE);} @AT@ 11355 @LENGTH@ 41
------------INS MethodInvocation@@in.setHeader(REDELIVERED,Boolean.FALSE) @TO@ ExpressionStatement@@MethodInvocation:in.setHeader(REDELIVERED,Boolean.FALSE) @AT@ 11355 @LENGTH@ 40
---------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.setHeader(REDELIVERED,Boolean.FALSE) @AT@ 11355 @LENGTH@ 2
---------------INS SimpleName@@MethodName:setHeader:[REDELIVERED, Boolean.FALSE] @TO@ MethodInvocation@@in.setHeader(REDELIVERED,Boolean.FALSE) @AT@ 11358 @LENGTH@ 37
------------------INS SimpleName@@REDELIVERED @TO@ SimpleName@@MethodName:setHeader:[REDELIVERED, Boolean.FALSE] @AT@ 11368 @LENGTH@ 11
------------------INS QualifiedName@@Boolean.FALSE @TO@ SimpleName@@MethodName:setHeader:[REDELIVERED, Boolean.FALSE] @AT@ 11381 @LENGTH@ 13
---------------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 11381 @LENGTH@ 7
---------------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 11389 @LENGTH@ 5


DEL IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Finished batch size: " + batchSize + " timeout: "+ batchTimeout+ " so sending set: "+ collection);} @AT@ 5394 @LENGTH@ 184
---DEL MethodInvocation@@LOG.isDebugEnabled() @AT@ 5398 @LENGTH@ 20
------DEL SimpleName@@Name:LOG @AT@ 5398 @LENGTH@ 3
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 5402 @LENGTH@ 16
---DEL Block@@ThenBody:{  LOG.debug("Finished batch size: " + batchSize + " timeout: "+ batchTimeout+ " so sending set: "+ collection);} @AT@ 5420 @LENGTH@ 158
------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Finished batch size: " + batchSize + " timeout: "+ batchTimeout+ " so sending set: "+ collection) @AT@ 5434 @LENGTH@ 134
---------DEL MethodInvocation@@LOG.debug("Finished batch size: " + batchSize + " timeout: "+ batchTimeout+ " so sending set: "+ collection) @AT@ 5434 @LENGTH@ 133
------------DEL SimpleName@@Name:LOG @AT@ 5434 @LENGTH@ 3
------------DEL SimpleName@@MethodName:debug:["Finished batch size: " + batchSize + " timeout: "+ batchTimeout+ " so sending set: "+ collection] @AT@ 5438 @LENGTH@ 129
---------------DEL InfixExpression@@"Finished batch size: " + batchSize + " timeout: "+ batchTimeout+ " so sending set: "+ collection @AT@ 5444 @LENGTH@ 122
------------------DEL StringLiteral@@"Finished batch size: " @AT@ 5444 @LENGTH@ 23
------------------DEL Operator@@+ @AT@ 5467 @LENGTH@ 1
------------------DEL SimpleName@@batchSize @AT@ 5470 @LENGTH@ 9
------------------DEL StringLiteral@@" timeout: " @AT@ 5482 @LENGTH@ 12
------------------DEL SimpleName@@batchTimeout @AT@ 5497 @LENGTH@ 12
------------------DEL StringLiteral@@" so sending set: " @AT@ 5512 @LENGTH@ 19
------------------DEL SimpleName@@collection @AT@ 5556 @LENGTH@ 10


UPD TypeDeclaration@@[private]NullIgnoringSet, HashSet<E> @TO@ [private, static]NullIgnoringSet, HashSet<E> @AT@ 5349 @LENGTH@ 183
---INS Modifier@@static @TO@ TypeDeclaration@@[private]NullIgnoringSet, HashSet<E> @AT@ 5357 @LENGTH@ 6


UPD Block@@ThenBody:{  ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,new MessageContextErrors(requestContext.getMessageContext())});} @TO@ ThenBody:{  String objectName=getModelExpression(requestContext).getExpressionString();  MessageContextErrors errors=new MessageContextErrors(requestContext.getMessageContext(),objectName,model,null,null);  ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,errors});} @AT@ 6904 @LENGTH@ 165
---UPD ExpressionStatement@@MethodInvocation:ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,new MessageContextErrors(requestContext.getMessageContext())}) @TO@ MethodInvocation:ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,errors}) @AT@ 6912 @LENGTH@ 150
------UPD MethodInvocation@@ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,new MessageContextErrors(requestContext.getMessageContext())}) @TO@ ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,errors}) @AT@ 6912 @LENGTH@ 149
---------UPD SimpleName@@MethodName:invokeMethod:[validateMethod, validator, new Object[]{model,new MessageContextErrors(requestContext.getMessageContext())}] @TO@ MethodName:invokeMethod:[validateMethod, validator, new Object[]{model,errors}] @AT@ 6928 @LENGTH@ 133
------------UPD ArrayCreation@@new Object[]{model,new MessageContextErrors(requestContext.getMessageContext())} @TO@ new Object[]{model,errors} @AT@ 6968 @LENGTH@ 92
---------------UPD ArrayInitializer@@{model,new MessageContextErrors(requestContext.getMessageContext())} @TO@ {model,errors} @AT@ 6981 @LENGTH@ 79
------------------DEL ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext()] @AT@ 6998 @LENGTH@ 60
---------------------DEL New@@new @AT@ 6998 @LENGTH@ 3
---------------------DEL SimpleType@@MessageContextErrors @AT@ 7002 @LENGTH@ 20
---------------------DEL MethodInvocation@@requestContext.getMessageContext() @AT@ 7023 @LENGTH@ 34
------------------------DEL SimpleName@@Name:requestContext @AT@ 7023 @LENGTH@ 14
------------------------DEL SimpleName@@MethodName:getMessageContext:[] @AT@ 7038 @LENGTH@ 19
------------------INS SimpleName@@errors @TO@ ArrayInitializer@@{model,new MessageContextErrors(requestContext.getMessageContext())} @AT@ 7211 @LENGTH@ 6
---INS VariableDeclarationStatement@@String objectName=getModelExpression(requestContext).getExpressionString(); @TO@ Block@@ThenBody:{  ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,new MessageContextErrors(requestContext.getMessageContext())});} @AT@ 6912 @LENGTH@ 77
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String objectName=getModelExpression(requestContext).getExpressionString(); @AT@ 6912 @LENGTH@ 6
------INS VariableDeclarationFragment@@objectName=getModelExpression(requestContext).getExpressionString() @TO@ VariableDeclarationStatement@@String objectName=getModelExpression(requestContext).getExpressionString(); @AT@ 6919 @LENGTH@ 69
---------INS SimpleName@@objectName @TO@ VariableDeclarationFragment@@objectName=getModelExpression(requestContext).getExpressionString() @AT@ 6919 @LENGTH@ 10
---------INS MethodInvocation@@getModelExpression(requestContext).getExpressionString() @TO@ VariableDeclarationFragment@@objectName=getModelExpression(requestContext).getExpressionString() @AT@ 6932 @LENGTH@ 56
------------INS MethodInvocation@@MethodName:getModelExpression:[requestContext] @TO@ MethodInvocation@@getModelExpression(requestContext).getExpressionString() @AT@ 6932 @LENGTH@ 34
---------------INS SimpleName@@requestContext @TO@ MethodInvocation@@MethodName:getModelExpression:[requestContext] @AT@ 6951 @LENGTH@ 14
------------INS SimpleName@@MethodName:getExpressionString:[] @TO@ MethodInvocation@@getModelExpression(requestContext).getExpressionString() @AT@ 6967 @LENGTH@ 21
---INS VariableDeclarationStatement@@MessageContextErrors errors=new MessageContextErrors(requestContext.getMessageContext(),objectName,model,null,null); @TO@ Block@@ThenBody:{  ReflectionUtils.invokeMethod(validateMethod,validator,new Object[]{model,new MessageContextErrors(requestContext.getMessageContext())});} @AT@ 6996 @LENGTH@ 130
------INS SimpleType@@MessageContextErrors @TO@ VariableDeclarationStatement@@MessageContextErrors errors=new MessageContextErrors(requestContext.getMessageContext(),objectName,model,null,null); @AT@ 6996 @LENGTH@ 20
------INS VariableDeclarationFragment@@errors=new MessageContextErrors(requestContext.getMessageContext(),objectName,model,null,null) @TO@ VariableDeclarationStatement@@MessageContextErrors errors=new MessageContextErrors(requestContext.getMessageContext(),objectName,model,null,null); @AT@ 7017 @LENGTH@ 108
---------INS SimpleName@@errors @TO@ VariableDeclarationFragment@@errors=new MessageContextErrors(requestContext.getMessageContext(),objectName,model,null,null) @AT@ 7017 @LENGTH@ 6
---------INS ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @TO@ VariableDeclarationFragment@@errors=new MessageContextErrors(requestContext.getMessageContext(),objectName,model,null,null) @AT@ 7026 @LENGTH@ 99
------------INS New@@new @TO@ ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @AT@ 7026 @LENGTH@ 3
------------INS SimpleType@@MessageContextErrors @TO@ ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @AT@ 7030 @LENGTH@ 20
------------INS MethodInvocation@@requestContext.getMessageContext() @TO@ ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @AT@ 7051 @LENGTH@ 34
---------------INS SimpleName@@Name:requestContext @TO@ MethodInvocation@@requestContext.getMessageContext() @AT@ 7051 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getMessageContext:[] @TO@ MethodInvocation@@requestContext.getMessageContext() @AT@ 7066 @LENGTH@ 19
------------INS SimpleName@@objectName @TO@ ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @AT@ 7095 @LENGTH@ 10
------------INS SimpleName@@model @TO@ ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @AT@ 7107 @LENGTH@ 5
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @AT@ 7114 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@MessageContextErrors[requestContext.getMessageContext(), objectName, model, null, null] @AT@ 7120 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testSaaj, Exception,  @TO@ TypeDeclaration@@[public]WebServiceTemplateIntegrationTest, XMLTestCase @AT@ 3411 @LENGTH@ 121
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSaaj, Exception,  @AT@ 3411 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSaaj, Exception,  @AT@ 3418 @LENGTH@ 4
---INS SimpleName@@MethodName:testSaaj @TO@ MethodDeclaration@@public, void, MethodName:testSaaj, Exception,  @AT@ 3423 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSaaj, Exception,  @AT@ 3441 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:doSoap(new SaajSoapMessageFactory(MessageFactory.newInstance())) @TO@ MethodDeclaration@@public, void, MethodName:testSaaj, Exception,  @AT@ 3461 @LENGTH@ 65
------INS MethodInvocation@@doSoap(new SaajSoapMessageFactory(MessageFactory.newInstance())) @TO@ ExpressionStatement@@MethodInvocation:doSoap(new SaajSoapMessageFactory(MessageFactory.newInstance())) @AT@ 3461 @LENGTH@ 64
---------INS SimpleName@@MethodName:doSoap:[new SaajSoapMessageFactory(MessageFactory.newInstance())] @TO@ MethodInvocation@@doSoap(new SaajSoapMessageFactory(MessageFactory.newInstance())) @AT@ 3461 @LENGTH@ 64
------------INS ClassInstanceCreation@@SaajSoapMessageFactory[MessageFactory.newInstance()] @TO@ SimpleName@@MethodName:doSoap:[new SaajSoapMessageFactory(MessageFactory.newInstance())] @AT@ 3468 @LENGTH@ 56
---------------INS New@@new @TO@ ClassInstanceCreation@@SaajSoapMessageFactory[MessageFactory.newInstance()] @AT@ 3468 @LENGTH@ 3
---------------INS SimpleType@@SaajSoapMessageFactory @TO@ ClassInstanceCreation@@SaajSoapMessageFactory[MessageFactory.newInstance()] @AT@ 3472 @LENGTH@ 22
---------------INS MethodInvocation@@MessageFactory.newInstance() @TO@ ClassInstanceCreation@@SaajSoapMessageFactory[MessageFactory.newInstance()] @AT@ 3495 @LENGTH@ 28
------------------INS SimpleName@@Name:MessageFactory @TO@ MethodInvocation@@MessageFactory.newInstance() @AT@ 3495 @LENGTH@ 14
------------------INS SimpleName@@MethodName:newInstance:[] @TO@ MethodInvocation@@MessageFactory.newInstance() @AT@ 3510 @LENGTH@ 13


INS FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @TO@ TypeDeclaration@@[public]FileEndpoint, ScheduledPollEndpoint<FileExchange> @AT@ 1860 @LENGTH@ 78
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @AT@ 1860 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @AT@ 1867 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @AT@ 1874 @LENGTH@ 5
---INS Modifier@@transient @TO@ FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @AT@ 1880 @LENGTH@ 9
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @AT@ 1890 @LENGTH@ 6
---INS VariableDeclarationFragment@@DEFAULT_LOCK_FILE_POSTFIX=".camelLock" @TO@ FieldDeclaration@@public, static, final, transient, String, [DEFAULT_LOCK_FILE_POSTFIX=".camelLock"] @AT@ 1897 @LENGTH@ 40
------INS SimpleName@@DEFAULT_LOCK_FILE_POSTFIX @TO@ VariableDeclarationFragment@@DEFAULT_LOCK_FILE_POSTFIX=".camelLock" @AT@ 1897 @LENGTH@ 25
------INS StringLiteral@@".camelLock" @TO@ VariableDeclarationFragment@@DEFAULT_LOCK_FILE_POSTFIX=".camelLock" @AT@ 1925 @LENGTH@ 12


MOV FieldDeclaration@@protected, String, [applicationContextUri] @TO@ TypeDeclaration@@[public]DotMojo, AbstractMavenReport @AT@ 3904 @LENGTH@ 39


UPD ReturnStatement@@ClassInstanceCreation:new Integer(count) @TO@ MethodInvocation:Integer.valueOf(count) @AT@ 7296 @LENGTH@ 26
---INS MethodInvocation@@Integer.valueOf(count) @TO@ ReturnStatement@@ClassInstanceCreation:new Integer(count) @AT@ 7303 @LENGTH@ 22
------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(count) @AT@ 7303 @LENGTH@ 7
------INS SimpleName@@MethodName:valueOf:[count] @TO@ MethodInvocation@@Integer.valueOf(count) @AT@ 7311 @LENGTH@ 14
---------INS SimpleName@@count @TO@ SimpleName@@MethodName:valueOf:[count] @AT@ 7319 @LENGTH@ 5
---DEL ClassInstanceCreation@@Integer[count] @AT@ 7303 @LENGTH@ 18
------DEL New@@new @AT@ 7303 @LENGTH@ 3
------DEL SimpleType@@Integer @AT@ 7307 @LENGTH@ 7
------DEL SimpleName@@count @AT@ 7315 @LENGTH@ 5


UPD IfStatement@@if (exchange != null && isRunAllowed()) {  try {    processor.process(exchange,new AsyncCallback(){      public void done(      boolean sync){      }    });  } catch (  Exception e) {    LOG.error("Seda queue caught: " + e,e);  }} else {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @TO@ if (exchange != null && isRunAllowed()) {  try {    processor.process(exchange,new AsyncCallback(){      public void done(      boolean sync){      }    });  } catch (  Exception e) {    LOG.error("Seda queue caught: " + e,e);  }} else if (exchange != null) {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @AT@ 2311 @LENGTH@ 800
---INS Block@@ElseBody:if (exchange != null) {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @TO@ IfStatement@@if (exchange != null && isRunAllowed()) {  try {    processor.process(exchange,new AsyncCallback(){      public void done(      boolean sync){      }    });  } catch (  Exception e) {    LOG.error("Seda queue caught: " + e,e);  }} else {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @AT@ 2690 @LENGTH@ 443
------INS IfStatement@@if (exchange != null) {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @TO@ Block@@ElseBody:if (exchange != null) {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @AT@ 2690 @LENGTH@ 443
---------MOV Block@@ElseBody:{  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @TO@ IfStatement@@if (exchange != null) {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @AT@ 2690 @LENGTH@ 421
---------INS InfixExpression@@exchange != null @TO@ IfStatement@@if (exchange != null) {  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @AT@ 2694 @LENGTH@ 16
------------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 2694 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 2702 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 2706 @LENGTH@ 4
---UPD Block@@ElseBody:{  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @TO@ ThenBody:{  LOG.warn("This consumer is stopped during polling an exchange, so putting it back on the seda queue: " + exchange);  try {    endpoint.getQueue().put(exchange);  } catch (  InterruptedException e) {    if (LOG.isDebugEnabled()) {      LOG.debug("Interupted: " + e,e);    }  }} @AT@ 2690 @LENGTH@ 421


UPD IfStatement@@if (template instanceof JmsTemplate) {  JmsTemplate jmsTemplate=(JmsTemplate)template;  jmsTemplate.setReceiveTimeout(timeout);} else if (template instanceof JmsTemplate102) {  JmsTemplate102 jmsTemplate102=(JmsTemplate102)template;  jmsTemplate102.setReceiveTimeout(timeout);} else {  throw new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template);} @TO@ if (template instanceof JmsTemplate) {  JmsTemplate jmsTemplate=(JmsTemplate)template;  jmsTemplate.setReceiveTimeout(timeout);} else {  throw new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template.getClass().getName());} @AT@ 2049 @LENGTH@ 493
---DEL Block@@ElseBody:if (template instanceof JmsTemplate102) {  JmsTemplate102 jmsTemplate102=(JmsTemplate102)template;  jmsTemplate102.setReceiveTimeout(timeout);} else {  throw new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template);} @AT@ 2216 @LENGTH@ 326
------DEL IfStatement@@if (template instanceof JmsTemplate102) {  JmsTemplate102 jmsTemplate102=(JmsTemplate102)template;  jmsTemplate102.setReceiveTimeout(timeout);} else {  throw new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template);} @AT@ 2216 @LENGTH@ 326
---------DEL InstanceofExpression@@template instanceof JmsTemplate102 @AT@ 2220 @LENGTH@ 34
------------DEL SimpleName@@template @AT@ 2220 @LENGTH@ 8
------------DEL Instanceof@@instanceof @AT@ 2229 @LENGTH@ 10
------------DEL SimpleType@@JmsTemplate102 @AT@ 2240 @LENGTH@ 14
---------DEL Block@@ThenBody:{  JmsTemplate102 jmsTemplate102=(JmsTemplate102)template;  jmsTemplate102.setReceiveTimeout(timeout);} @AT@ 2256 @LENGTH@ 136
------------DEL VariableDeclarationStatement@@JmsTemplate102 jmsTemplate102=(JmsTemplate102)template; @AT@ 2270 @LENGTH@ 57
---------------DEL SimpleType@@JmsTemplate102 @AT@ 2270 @LENGTH@ 14
---------------DEL VariableDeclarationFragment@@jmsTemplate102=(JmsTemplate102)template @AT@ 2285 @LENGTH@ 41
------------------DEL SimpleName@@jmsTemplate102 @AT@ 2285 @LENGTH@ 14
------------------DEL CastExpression@@(JmsTemplate102)template @AT@ 2302 @LENGTH@ 24
---------------------DEL SimpleType@@JmsTemplate102 @AT@ 2303 @LENGTH@ 14
---------------------DEL SimpleName@@template @AT@ 2318 @LENGTH@ 8
------------DEL ExpressionStatement@@MethodInvocation:jmsTemplate102.setReceiveTimeout(timeout) @AT@ 2340 @LENGTH@ 42
---------------DEL MethodInvocation@@jmsTemplate102.setReceiveTimeout(timeout) @AT@ 2340 @LENGTH@ 41
------------------DEL SimpleName@@Name:jmsTemplate102 @AT@ 2340 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:setReceiveTimeout:[timeout] @AT@ 2355 @LENGTH@ 26
---------------------DEL SimpleName@@timeout @AT@ 2373 @LENGTH@ 7
---MOV Block@@ElseBody:{  throw new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template);} @TO@ IfStatement@@if (template instanceof JmsTemplate) {  JmsTemplate jmsTemplate=(JmsTemplate)template;  jmsTemplate.setReceiveTimeout(timeout);} else if (template instanceof JmsTemplate102) {  JmsTemplate102 jmsTemplate102=(JmsTemplate102)template;  jmsTemplate102.setReceiveTimeout(timeout);} else {  throw new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template);} @AT@ 2398 @LENGTH@ 144
------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template) @TO@ ClassInstanceCreation:new IllegalArgumentException("Cannot set the receiveTimeout property on unknown JmsOperations type: " + template.getClass().getName()) @AT@ 2412 @LENGTH@ 120
---------UPD ClassInstanceCreation@@IllegalArgumentException["Cannot set the receiveTimeout property on unknown JmsOperations type: " + template] @TO@ IllegalArgumentException["Cannot set the receiveTimeout property on unknown JmsOperations type: " + template.getClass().getName()] @AT@ 2418 @LENGTH@ 113
------------UPD InfixExpression@@"Cannot set the receiveTimeout property on unknown JmsOperations type: " + template @TO@ "Cannot set the receiveTimeout property on unknown JmsOperations type: " + template.getClass().getName() @AT@ 2447 @LENGTH@ 83
---------------INS MethodInvocation@@template.getClass().getName() @TO@ InfixExpression@@"Cannot set the receiveTimeout property on unknown JmsOperations type: " + template @AT@ 2288 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@template.getClass().getName() @AT@ 2288 @LENGTH@ 19
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getClass().getName() @AT@ 2288 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@template.getClass().getName() @AT@ 2308 @LENGTH@ 9
---------------DEL SimpleName@@template @AT@ 2522 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:template.setDefaultEndpointUri("direct:a") @AT@ 1472 @LENGTH@ 43
---DEL MethodInvocation@@template.setDefaultEndpointUri("direct:a") @AT@ 1472 @LENGTH@ 42
------DEL SimpleName@@Name:template @AT@ 1472 @LENGTH@ 8
------DEL SimpleName@@MethodName:setDefaultEndpointUri:["direct:a"] @AT@ 1481 @LENGTH@ 33
---------DEL StringLiteral@@"direct:a" @AT@ 1503 @LENGTH@ 10


UPD Block@@ElseBody:if (headerName.equals("JMSReplyTo")) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @TO@ ElseBody:if (headerName.equals("JMSReplyTo") && headerValue != null) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @AT@ 6847 @LENGTH@ 849
---UPD IfStatement@@if (headerName.equals("JMSReplyTo")) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @TO@ if (headerName.equals("JMSReplyTo") && headerValue != null) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @AT@ 6847 @LENGTH@ 849
------INS InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @TO@ IfStatement@@if (headerName.equals("JMSReplyTo")) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @AT@ 6851 @LENGTH@ 54
---------MOV MethodInvocation@@headerName.equals("JMSReplyTo") @TO@ InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @AT@ 6851 @LENGTH@ 31
---------INS Operator@@&& @TO@ InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @AT@ 6882 @LENGTH@ 2
---------INS InfixExpression@@headerValue != null @TO@ InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @AT@ 6886 @LENGTH@ 19
------------INS SimpleName@@headerValue @TO@ InfixExpression@@headerValue != null @AT@ 6886 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@headerValue != null @AT@ 6897 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@headerValue != null @AT@ 6901 @LENGTH@ 4
---UPD IfStatement@@if (headerName.equals("JMSReplyTo")) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @TO@ if (headerName.equals("JMSReplyTo") && headerValue != null) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @AT@ 6847 @LENGTH@ 849
------INS InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @TO@ IfStatement@@if (headerName.equals("JMSReplyTo")) {  jmsMessage.setJMSReplyTo(ExchangeHelper.convertToType(exchange,Destination.class,headerValue));} else if (headerName.equals("JMSType")) {  jmsMessage.setJMSType(ExchangeHelper.convertToType(exchange,String.class,headerValue));} else if (LOG.isDebugEnabled()) {  LOG.debug("Ignoring JMS header: " + headerName + " with value: "+ headerValue);} @AT@ 6851 @LENGTH@ 54
---------MOV MethodInvocation@@headerName.equals("JMSReplyTo") @TO@ InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @AT@ 6851 @LENGTH@ 31
---------INS Operator@@&& @TO@ InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @AT@ 6882 @LENGTH@ 2
---------INS InfixExpression@@headerValue != null @TO@ InfixExpression@@headerName.equals("JMSReplyTo") && headerValue != null @AT@ 6886 @LENGTH@ 19
------------INS SimpleName@@headerValue @TO@ InfixExpression@@headerValue != null @AT@ 6886 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@headerValue != null @AT@ 6897 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@headerValue != null @AT@ 6901 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:intercept(header("city").isEqualTo("London")).to("mock:intercepted") @TO@ MethodInvocation:intercept(header("city").isEqualTo("London")).to("mock:intercepted").stop() @AT@ 1818 @LENGTH@ 69
---UPD MethodInvocation@@intercept(header("city").isEqualTo("London")).to("mock:intercepted") @TO@ intercept(header("city").isEqualTo("London")).to("mock:intercepted").stop() @AT@ 1818 @LENGTH@ 68
------DEL SimpleName@@MethodName:to:["mock:intercepted"] @AT@ 1864 @LENGTH@ 22
---------DEL StringLiteral@@"mock:intercepted" @AT@ 1867 @LENGTH@ 18
------INS MethodInvocation@@MethodName:to:["mock:intercepted"] @TO@ MethodInvocation@@intercept(header("city").isEqualTo("London")).to("mock:intercepted") @AT@ 1924 @LENGTH@ 68
---------INS StringLiteral@@"mock:intercepted" @TO@ MethodInvocation@@MethodName:to:["mock:intercepted"] @AT@ 1973 @LENGTH@ 18
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@intercept(header("city").isEqualTo("London")).to("mock:intercepted") @AT@ 1993 @LENGTH@ 6


DEL IfStatement@@if (!camelType) {  LOG.warn("Could not find a type converter for converting " + value.getClass().getCanonicalName() + " -> "+ type.getCanonicalName()+ " with value: "+ value);} @AT@ 4551 @LENGTH@ 401
---DEL PrefixExpression@@!camelType @AT@ 4555 @LENGTH@ 10
------DEL Operator@@! @AT@ 4555 @LENGTH@ 1
------DEL SimpleName@@camelType @AT@ 4556 @LENGTH@ 9
---DEL Block@@ThenBody:{  LOG.warn("Could not find a type converter for converting " + value.getClass().getCanonicalName() + " -> "+ type.getCanonicalName()+ " with value: "+ value);} @AT@ 4567 @LENGTH@ 385
------DEL ExpressionStatement@@MethodInvocation:LOG.warn("Could not find a type converter for converting " + value.getClass().getCanonicalName() + " -> "+ type.getCanonicalName()+ " with value: "+ value) @AT@ 4751 @LENGTH@ 191
---------DEL MethodInvocation@@LOG.warn("Could not find a type converter for converting " + value.getClass().getCanonicalName() + " -> "+ type.getCanonicalName()+ " with value: "+ value) @AT@ 4751 @LENGTH@ 190
------------DEL SimpleName@@Name:LOG @AT@ 4751 @LENGTH@ 3
------------DEL SimpleName@@MethodName:warn:["Could not find a type converter for converting " + value.getClass().getCanonicalName() + " -> "+ type.getCanonicalName()+ " with value: "+ value] @AT@ 4755 @LENGTH@ 186
---------------DEL InfixExpression@@"Could not find a type converter for converting " + value.getClass().getCanonicalName() + " -> "+ type.getCanonicalName()+ " with value: "+ value @AT@ 4760 @LENGTH@ 180
------------------DEL StringLiteral@@"Could not find a type converter for converting " @AT@ 4760 @LENGTH@ 49
------------------DEL Operator@@+ @AT@ 4809 @LENGTH@ 1
------------------DEL MethodInvocation@@value.getClass().getCanonicalName() @AT@ 4828 @LENGTH@ 35
---------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 4828 @LENGTH@ 16
---------------------DEL SimpleName@@Name:value @AT@ 4828 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:getCanonicalName:[] @AT@ 4845 @LENGTH@ 18
------------------DEL StringLiteral@@" -> " @AT@ 4866 @LENGTH@ 6
------------------DEL MethodInvocation@@type.getCanonicalName() @AT@ 4891 @LENGTH@ 23
---------------------DEL SimpleName@@Name:type @AT@ 4891 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getCanonicalName:[] @AT@ 4896 @LENGTH@ 18
------------------DEL StringLiteral@@" with value: " @AT@ 4917 @LENGTH@ 15
------------------DEL SimpleName@@value @AT@ 4935 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count") @TO@ MethodInvocation:executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count") @AT@ 5553 @LENGTH@ 100
---UPD MethodInvocation@@executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count") @TO@ executionContext.getLong(ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count") @AT@ 5560 @LENGTH@ 92
------UPD SimpleName@@MethodName:getLong:[ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count"] @TO@ MethodName:getLong:[ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count"] @AT@ 5577 @LENGTH@ 75
---------UPD InfixExpression@@ClassUtils.getShortName(StaxEventItemReader.class) + ".item.count" @TO@ ClassUtils.getShortName(StaxEventItemReader.class) + ".piece.count" @AT@ 5585 @LENGTH@ 66
------------UPD StringLiteral@@".item.count" @TO@ ".piece.count" @AT@ 5638 @LENGTH@ 13


UPD TryStatement@@try {  Chat chat=endpoint.getConnection().getChatManager().getThreadChat(threadId);  if (chat == null) {    chat=endpoint.getConnection().getChatManager().createChat(getParticipant(),threadId,new MessageListener(){      public void processMessage(      Chat chat,      Message message){      }    });  }  Message message=new Message();  message.setTo(participant);  message.setThread(threadId);  endpoint.getBinding().populateXmppMessage(message,exchange);  if (LOG.isDebugEnabled()) {    LOG.debug(">>>> message: " + message.getBody());  }  chat.sendMessage(message);} catch (XMPPException e) {  throw new RuntimeXmppException(e);} @TO@ try {  Chat chat=endpoint.getConnection().getChatManager().getThreadChat(threadId);  if (chat == null) {    chat=endpoint.getConnection().getChatManager().createChat(getParticipant(),threadId,new MessageListener(){      public void processMessage(      Chat chat,      Message message){      }    });  }  Message message=new Message();  message.setTo(participant);  message.setFrom(endpoint.getUser());  message.setThread(threadId);  message.setType(Message.Type.normal);  endpoint.getBinding().populateXmppMessage(message,exchange);  if (LOG.isDebugEnabled()) {    LOG.debug(">>>> message: " + message.getBody());  }  chat.sendMessage(message);} catch (XMPPException e) {  throw new RuntimeXmppException(e);} @AT@ 1878 @LENGTH@ 1068
---INS ExpressionStatement@@MethodInvocation:message.setFrom(endpoint.getUser()) @TO@ TryStatement@@try {  Chat chat=endpoint.getConnection().getChatManager().getThreadChat(threadId);  if (chat == null) {    chat=endpoint.getConnection().getChatManager().createChat(getParticipant(),threadId,new MessageListener(){      public void processMessage(      Chat chat,      Message message){      }    });  }  Message message=new Message();  message.setTo(participant);  message.setThread(threadId);  endpoint.getBinding().populateXmppMessage(message,exchange);  if (LOG.isDebugEnabled()) {    LOG.debug(">>>> message: " + message.getBody());  }  chat.sendMessage(message);} catch (XMPPException e) {  throw new RuntimeXmppException(e);} @AT@ 2507 @LENGTH@ 36
------INS MethodInvocation@@message.setFrom(endpoint.getUser()) @TO@ ExpressionStatement@@MethodInvocation:message.setFrom(endpoint.getUser()) @AT@ 2507 @LENGTH@ 35
---------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.setFrom(endpoint.getUser()) @AT@ 2507 @LENGTH@ 7
---------INS SimpleName@@MethodName:setFrom:[endpoint.getUser()] @TO@ MethodInvocation@@message.setFrom(endpoint.getUser()) @AT@ 2515 @LENGTH@ 27
------------INS MethodInvocation@@endpoint.getUser() @TO@ SimpleName@@MethodName:setFrom:[endpoint.getUser()] @AT@ 2523 @LENGTH@ 18
---------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getUser() @AT@ 2523 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getUser:[] @TO@ MethodInvocation@@endpoint.getUser() @AT@ 2532 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:message.setType(Message.Type.normal) @TO@ TryStatement@@try {  Chat chat=endpoint.getConnection().getChatManager().getThreadChat(threadId);  if (chat == null) {    chat=endpoint.getConnection().getChatManager().createChat(getParticipant(),threadId,new MessageListener(){      public void processMessage(      Chat chat,      Message message){      }    });  }  Message message=new Message();  message.setTo(participant);  message.setThread(threadId);  endpoint.getBinding().populateXmppMessage(message,exchange);  if (LOG.isDebugEnabled()) {    LOG.debug(">>>> message: " + message.getBody());  }  chat.sendMessage(message);} catch (XMPPException e) {  throw new RuntimeXmppException(e);} @AT@ 2597 @LENGTH@ 37
------INS MethodInvocation@@message.setType(Message.Type.normal) @TO@ ExpressionStatement@@MethodInvocation:message.setType(Message.Type.normal) @AT@ 2597 @LENGTH@ 36
---------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.setType(Message.Type.normal) @AT@ 2597 @LENGTH@ 7
---------INS SimpleName@@MethodName:setType:[Message.Type.normal] @TO@ MethodInvocation@@message.setType(Message.Type.normal) @AT@ 2605 @LENGTH@ 28
------------INS QualifiedName@@Message.Type.normal @TO@ SimpleName@@MethodName:setType:[Message.Type.normal] @AT@ 2613 @LENGTH@ 19
---------------INS QualifiedName@@Message.Type @TO@ QualifiedName@@Message.Type.normal @AT@ 2613 @LENGTH@ 12
------------------INS SimpleName@@Message @TO@ QualifiedName@@Message.Type @AT@ 2613 @LENGTH@ 7
------------------INS SimpleName@@Type @TO@ QualifiedName@@Message.Type @AT@ 2621 @LENGTH@ 4
---------------INS SimpleName@@normal @TO@ QualifiedName@@Message.Type.normal @AT@ 2626 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertMessageHeader(in,DeadLetterChannel.REDELIVERY_COUNTER,1) @TO@ MethodInvocation:assertMessageHeader(in,DeadLetterChannel.REDELIVERY_COUNTER,0) @AT@ 2398 @LENGTH@ 65
---UPD MethodInvocation@@assertMessageHeader(in,DeadLetterChannel.REDELIVERY_COUNTER,1) @TO@ assertMessageHeader(in,DeadLetterChannel.REDELIVERY_COUNTER,0) @AT@ 2398 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertMessageHeader:[in, DeadLetterChannel.REDELIVERY_COUNTER, 1] @TO@ MethodName:assertMessageHeader:[in, DeadLetterChannel.REDELIVERY_COUNTER, 0] @AT@ 2398 @LENGTH@ 64
---------UPD NumberLiteral@@1 @TO@ 0 @AT@ 2460 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:execute, JobExecution execution, JobExecutionException,  @TO@ public, void, MethodName:execute, JobExecution execution,  @AT@ 386 @LENGTH@ 77
---DEL SimpleType@@JobExecutionException @AT@ 437 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:applicationContextFactory.setPath(new Resource[]{resource}) @TO@ MethodInvocation:applicationContextFactory.setPath(resource) @AT@ 1674 @LENGTH@ 60
---UPD MethodInvocation@@applicationContextFactory.setPath(new Resource[]{resource}) @TO@ applicationContextFactory.setPath(resource) @AT@ 1674 @LENGTH@ 59
------UPD SimpleName@@MethodName:setPath:[new Resource[]{resource}] @TO@ MethodName:setPath:[resource] @AT@ 1700 @LENGTH@ 33
---------DEL ArrayCreation@@new Resource[]{resource} @AT@ 1708 @LENGTH@ 24
------------DEL ArrayType@@Resource[] @AT@ 1712 @LENGTH@ 10
---------------DEL SimpleType@@Resource @AT@ 1712 @LENGTH@ 8
------------DEL ArrayInitializer@@{resource} @AT@ 1722 @LENGTH@ 10
---------------DEL SimpleName@@resource @AT@ 1723 @LENGTH@ 8
---------INS SimpleName@@resource @TO@ SimpleName@@MethodName:setPath:[new Resource[]{resource}] @AT@ 1708 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("text body","abc,123",text.trim()) @TO@ MethodInvocation:assertTrue("Text body has wrong value.","abc,123".equals(text.trim()) || "123,abc".equals(text.trim())) @AT@ 3048 @LENGTH@ 50
---UPD MethodInvocation@@assertEquals("text body","abc,123",text.trim()) @TO@ assertTrue("Text body has wrong value.","abc,123".equals(text.trim()) || "123,abc".equals(text.trim())) @AT@ 3048 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertEquals:["text body", "abc,123", text.trim()] @TO@ MethodName:assertTrue:["Text body has wrong value.", "abc,123".equals(text.trim()) || "123,abc".equals(text.trim())] @AT@ 3048 @LENGTH@ 49
---------UPD StringLiteral@@"text body" @TO@ "Text body has wrong value." @AT@ 3061 @LENGTH@ 11
---------DEL StringLiteral@@"abc,123" @AT@ 3074 @LENGTH@ 9
---------INS InfixExpression@@"abc,123".equals(text.trim()) || "123,abc".equals(text.trim()) @TO@ SimpleName@@MethodName:assertEquals:["text body", "abc,123", text.trim()] @AT@ 3238 @LENGTH@ 86
------------INS MethodInvocation@@"abc,123".equals(text.trim()) @TO@ InfixExpression@@"abc,123".equals(text.trim()) || "123,abc".equals(text.trim()) @AT@ 3238 @LENGTH@ 29
---------------INS StringLiteral@@"abc,123" @TO@ MethodInvocation@@"abc,123".equals(text.trim()) @AT@ 3238 @LENGTH@ 9
---------------INS SimpleName@@MethodName:equals:[text.trim()] @TO@ MethodInvocation@@"abc,123".equals(text.trim()) @AT@ 3248 @LENGTH@ 19
------------------MOV MethodInvocation@@text.trim() @TO@ SimpleName@@MethodName:equals:[text.trim()] @AT@ 3085 @LENGTH@ 11
------------------MOV MethodInvocation@@text.trim() @TO@ SimpleName@@MethodName:equals:[text.trim()] @AT@ 3085 @LENGTH@ 11
------------INS Operator@@|| @TO@ InfixExpression@@"abc,123".equals(text.trim()) || "123,abc".equals(text.trim()) @AT@ 3267 @LENGTH@ 2
------------INS MethodInvocation@@"123,abc".equals(text.trim()) @TO@ InfixExpression@@"abc,123".equals(text.trim()) || "123,abc".equals(text.trim()) @AT@ 3295 @LENGTH@ 29
---------------INS StringLiteral@@"123,abc" @TO@ MethodInvocation@@"123,abc".equals(text.trim()) @AT@ 3295 @LENGTH@ 9
---------------INS SimpleName@@MethodName:equals:[text.trim()] @TO@ MethodInvocation@@"123,abc".equals(text.trim()) @AT@ 3305 @LENGTH@ 19
------------------INS MethodInvocation@@text.trim() @TO@ SimpleName@@MethodName:equals:[text.trim()] @AT@ 3312 @LENGTH@ 11
---------------------INS SimpleName@@Name:text @TO@ MethodInvocation@@text.trim() @AT@ 3312 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@text.trim() @AT@ 3317 @LENGTH@ 6


UPD IfStatement@@if (value != null) {  exchange.getOut().setBody(value);} @TO@ if (value != null && exchange.getPattern().isOutCapable()) {  exchange.getOut().setBody(value);} @AT@ 4263 @LENGTH@ 84
---INS InfixExpression@@value != null && exchange.getPattern().isOutCapable() @TO@ IfStatement@@if (value != null) {  exchange.getOut().setBody(value);} @AT@ 4267 @LENGTH@ 53
------INS InfixExpression@@value != null @TO@ InfixExpression@@value != null && exchange.getPattern().isOutCapable() @AT@ 4267 @LENGTH@ 13
---------MOV SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 4267 @LENGTH@ 5
---------MOV Operator@@!= @TO@ InfixExpression@@value != null @AT@ 4272 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 4276 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@value != null && exchange.getPattern().isOutCapable() @AT@ 4280 @LENGTH@ 2
------INS MethodInvocation@@exchange.getPattern().isOutCapable() @TO@ InfixExpression@@value != null && exchange.getPattern().isOutCapable() @AT@ 4284 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:getPattern:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 4284 @LENGTH@ 21
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 4284 @LENGTH@ 8
---------INS SimpleName@@MethodName:isOutCapable:[] @TO@ MethodInvocation@@exchange.getPattern().isOutCapable() @AT@ 4306 @LENGTH@ 14
---DEL InfixExpression@@value != null @AT@ 4267 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisifed() @TO@ MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1865 @LENGTH@ 31
---UPD MethodInvocation@@MethodName:assertMockEndpointsSatisifed:[] @TO@ MethodName:assertMockEndpointsSatisfied:[] @AT@ 1865 @LENGTH@ 30


UPD ExpressionStatement@@Assignment:uri="file:target/test-noop-inbox?noop=true&consumer.recursive=true" @TO@ Assignment:targetdir="target/test-noop-inbox" @AT@ 1000 @LENGTH@ 70
---UPD Assignment@@uri="file:target/test-noop-inbox?noop=true&consumer.recursive=true" @TO@ targetdir="target/test-noop-inbox" @AT@ 1000 @LENGTH@ 69
------UPD SimpleName@@uri @TO@ targetdir @AT@ 1000 @LENGTH@ 3
------UPD StringLiteral@@"file:target/test-noop-inbox?noop=true&consumer.recursive=true" @TO@ "target/test-noop-inbox" @AT@ 1006 @LENGTH@ 63


UPD ReturnStatement@@InfixExpression:super.toString() + String.format(", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d",stepName,readCount,filterCount,writeCount,readSkipCount,writeSkipCount,commitCount,rollbackCount) @TO@ InfixExpression:super.toString() + String.format(", name=%s, status=%s, exitStatus=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d",stepName,status,exitStatus,readCount,filterCount,writeCount,readSkipCount,writeSkipCount,commitCount,rollbackCount) @AT@ 11700 @LENGTH@ 294
---UPD InfixExpression@@super.toString() + String.format(", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d",stepName,readCount,filterCount,writeCount,readSkipCount,writeSkipCount,commitCount,rollbackCount) @TO@ super.toString() + String.format(", name=%s, status=%s, exitStatus=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d",stepName,status,exitStatus,readCount,filterCount,writeCount,readSkipCount,writeSkipCount,commitCount,rollbackCount) @AT@ 11707 @LENGTH@ 286
------UPD MethodInvocation@@String.format(", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d",stepName,readCount,filterCount,writeCount,readSkipCount,writeSkipCount,commitCount,rollbackCount) @TO@ String.format(", name=%s, status=%s, exitStatus=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d",stepName,status,exitStatus,readCount,filterCount,writeCount,readSkipCount,writeSkipCount,commitCount,rollbackCount) @AT@ 11730 @LENGTH@ 263
---------UPD SimpleName@@MethodName:format:[", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d", stepName, readCount, filterCount, writeCount, readSkipCount, writeSkipCount, commitCount, rollbackCount] @TO@ MethodName:format:[", name=%s, status=%s, exitStatus=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d", stepName, status, exitStatus, readCount, filterCount, writeCount, readSkipCount, writeSkipCount, commitCount, rollbackCount] @AT@ 11737 @LENGTH@ 256
------------UPD InfixExpression@@", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d" @TO@ ", name=%s, status=%s, exitStatus=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d" @AT@ 11744 @LENGTH@ 137
---------------UPD StringLiteral@@", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" @TO@ ", name=%s, status=%s, exitStatus=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" @AT@ 11744 @LENGTH@ 92
------------INS SimpleName@@status @TO@ SimpleName@@MethodName:format:[", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d", stepName, readCount, filterCount, writeCount, readSkipCount, writeSkipCount, commitCount, rollbackCount] @AT@ 12250 @LENGTH@ 6
------------INS SimpleName@@exitStatus @TO@ SimpleName@@MethodName:format:[", name=%s, readCount=%d, filterCount=%d, writeCount=%d readSkipCount=%d, writeSkipCount=%d" + ", commitCount=%d, rollbackCount=%d", stepName, readCount, filterCount, writeCount, readSkipCount, writeSkipCount, commitCount, rollbackCount] @AT@ 12258 @LENGTH@ 10


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/jdbcCursor.xml"}), public]JdbcCursorFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/jdbcCursor.xml"}), public]JdbcCursorFunctionalTests, AbstractJobTests @AT@ 1228 @LENGTH@ 862
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/jdbcCursor.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/jdbcCursor.xml"}) @AT@ 1268 @LENGTH@ 133


INS MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @TO@ TypeDeclaration@@[private]ParentConversionServiceProxy, [ConversionService] @AT@ 4877 @LENGTH@ 170
---INS Modifier@@public @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 4877 @LENGTH@ 6
---INS ArrayType@@ConversionExecutor[] @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 4884 @LENGTH@ 20
------INS SimpleType@@ConversionExecutor @TO@ ArrayType@@ConversionExecutor[] @AT@ 4884 @LENGTH@ 18
---INS SimpleName@@MethodName:getConversionExecutors @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 4905 @LENGTH@ 22
---INS SingleVariableDeclaration@@Class sourceClass @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 4928 @LENGTH@ 17
------INS SimpleType@@Class @TO@ SingleVariableDeclaration@@Class sourceClass @AT@ 4928 @LENGTH@ 5
------INS SimpleName@@sourceClass @TO@ SingleVariableDeclaration@@Class sourceClass @AT@ 4934 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:getFlowBuilderServices().getConversionService().getConversionExecutors(sourceClass) @TO@ MethodDeclaration@@public, ConversionExecutor[], MethodName:getConversionExecutors, Class sourceClass,  @AT@ 4952 @LENGTH@ 91
------INS MethodInvocation@@getFlowBuilderServices().getConversionService().getConversionExecutors(sourceClass) @TO@ ReturnStatement@@MethodInvocation:getFlowBuilderServices().getConversionService().getConversionExecutors(sourceClass) @AT@ 4959 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:getConversionService:[] @TO@ MethodInvocation@@getFlowBuilderServices().getConversionService().getConversionExecutors(sourceClass) @AT@ 4959 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:getFlowBuilderServices:[] @TO@ MethodInvocation@@getFlowBuilderServices().getConversionService().getConversionExecutors(sourceClass) @AT@ 4959 @LENGTH@ 24
---------INS SimpleName@@MethodName:getConversionExecutors:[sourceClass] @TO@ MethodInvocation@@getFlowBuilderServices().getConversionService().getConversionExecutors(sourceClass) @AT@ 5007 @LENGTH@ 35
------------INS SimpleName@@sourceClass @TO@ SimpleName@@MethodName:getConversionExecutors:[sourceClass] @AT@ 5030 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertMessageHeader(in,DeadLetterChannel.REDELIVERED,true) @TO@ MethodInvocation:assertMessageHeader(in,DeadLetterChannel.REDELIVERED,false) @AT@ 2472 @LENGTH@ 61
---UPD MethodInvocation@@assertMessageHeader(in,DeadLetterChannel.REDELIVERED,true) @TO@ assertMessageHeader(in,DeadLetterChannel.REDELIVERED,false) @AT@ 2472 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertMessageHeader:[in, DeadLetterChannel.REDELIVERED, true] @TO@ MethodName:assertMessageHeader:[in, DeadLetterChannel.REDELIVERED, false] @AT@ 2472 @LENGTH@ 60
---------UPD BooleanLiteral@@true @TO@ false @AT@ 2527 @LENGTH@ 4


INS VariableDeclarationStatement@@String currentDir=channel.pwd(); @TO@ MethodDeclaration@@protected, void, MethodName:pollDirectory, String dir, Exception,  @AT@ 4746 @LENGTH@ 34
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String currentDir=channel.pwd(); @AT@ 4746 @LENGTH@ 6
---INS VariableDeclarationFragment@@currentDir=channel.pwd() @TO@ VariableDeclarationStatement@@String currentDir=channel.pwd(); @AT@ 4753 @LENGTH@ 26
------INS SimpleName@@currentDir @TO@ VariableDeclarationFragment@@currentDir=channel.pwd() @AT@ 4753 @LENGTH@ 10
------INS MethodInvocation@@channel.pwd() @TO@ VariableDeclarationFragment@@currentDir=channel.pwd() @AT@ 4766 @LENGTH@ 13
---------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.pwd() @AT@ 4766 @LENGTH@ 7
---------INS SimpleName@@MethodName:pwd:[] @TO@ MethodInvocation@@channel.pwd() @AT@ 4774 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:readLine() @TO@ Assignment:record=readLine() @AT@ 3972 @LENGTH@ 11
---DEL MethodInvocation@@MethodName:readLine:[] @AT@ 3972 @LENGTH@ 10
---INS Assignment@@record=readLine() @TO@ ExpressionStatement@@MethodInvocation:readLine() @AT@ 3972 @LENGTH@ 19
------INS SimpleName@@record @TO@ Assignment@@record=readLine() @AT@ 3972 @LENGTH@ 6
------INS Operator@@= @TO@ Assignment@@record=readLine() @AT@ 3978 @LENGTH@ 1
------INS MethodInvocation@@MethodName:readLine:[] @TO@ Assignment@@record=readLine() @AT@ 3981 @LENGTH@ 10


UPD FieldDeclaration@@private, static, int, [MINUTE=1000 * 60] @TO@ private, static, long, [MINUTE=1000 * 60] @AT@ 1788 @LENGTH@ 38
---UPD PrimitiveType@@int @TO@ long @AT@ 1803 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Ignoring message with no correlationID! " + message) @TO@ MethodInvocation:LOG.warn("Ignoring message with no correlationID: " + message) @AT@ 6186 @LENGTH@ 63
---UPD MethodInvocation@@LOG.warn("Ignoring message with no correlationID! " + message) @TO@ LOG.warn("Ignoring message with no correlationID: " + message) @AT@ 6186 @LENGTH@ 62
------UPD SimpleName@@MethodName:warn:["Ignoring message with no correlationID! " + message] @TO@ MethodName:warn:["Ignoring message with no correlationID: " + message] @AT@ 6190 @LENGTH@ 58
---------UPD InfixExpression@@"Ignoring message with no correlationID! " + message @TO@ "Ignoring message with no correlationID: " + message @AT@ 6195 @LENGTH@ 52
------------UPD StringLiteral@@"Ignoring message with no correlationID! " @TO@ "Ignoring message with no correlationID: " @AT@ 6195 @LENGTH@ 42


UPD IfStatement@@if (!data.currentRedeliveryPolicy.shouldRedeliver(data.redeliveryCounter)) {  setFailureHandled(exchange,true);  AsyncProcessor afp=AsyncProcessorTypeConverter.convert(data.failureProcessor);  boolean sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      restoreExceptionOnExchange(exchange);      callback.done(data.sync);    }  });  restoreExceptionOnExchange(exchange);  logger.log("Failed delivery for exchangeId: " + exchange.getExchangeId() + ". Handled by the failure processor: "+ data.failureProcessor);  return sync;} @TO@ if (!data.currentRedeliveryPolicy.shouldRedeliver(data.redeliveryCounter)) {  setFailureHandled(exchange,true);  decrementRedeliveryCounter(exchange);  AsyncProcessor afp=AsyncProcessorTypeConverter.convert(data.failureProcessor);  boolean sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      restoreExceptionOnExchange(exchange);      callback.done(data.sync);    }  });  restoreExceptionOnExchange(exchange);  logger.log("Failed delivery for exchangeId: " + exchange.getExchangeId() + ". Handled by the failure processor: "+ data.failureProcessor);  return sync;} @AT@ 5782 @LENGTH@ 760
---UPD Block@@ThenBody:{  setFailureHandled(exchange,true);  AsyncProcessor afp=AsyncProcessorTypeConverter.convert(data.failureProcessor);  boolean sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      restoreExceptionOnExchange(exchange);      callback.done(data.sync);    }  });  restoreExceptionOnExchange(exchange);  logger.log("Failed delivery for exchangeId: " + exchange.getExchangeId() + ". Handled by the failure processor: "+ data.failureProcessor);  return sync;} @TO@ ThenBody:{  setFailureHandled(exchange,true);  decrementRedeliveryCounter(exchange);  AsyncProcessor afp=AsyncProcessorTypeConverter.convert(data.failureProcessor);  boolean sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      restoreExceptionOnExchange(exchange);      callback.done(data.sync);    }  });  restoreExceptionOnExchange(exchange);  logger.log("Failed delivery for exchangeId: " + exchange.getExchangeId() + ". Handled by the failure processor: "+ data.failureProcessor);  return sync;} @AT@ 5857 @LENGTH@ 685
------INS ExpressionStatement@@MethodInvocation:decrementRedeliveryCounter(exchange) @TO@ Block@@ThenBody:{  setFailureHandled(exchange,true);  AsyncProcessor afp=AsyncProcessorTypeConverter.convert(data.failureProcessor);  boolean sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      restoreExceptionOnExchange(exchange);      callback.done(data.sync);    }  });  restoreExceptionOnExchange(exchange);  logger.log("Failed delivery for exchangeId: " + exchange.getExchangeId() + ". Handled by the failure processor: "+ data.failureProcessor);  return sync;} @AT@ 6192 @LENGTH@ 37
---------INS MethodInvocation@@decrementRedeliveryCounter(exchange) @TO@ ExpressionStatement@@MethodInvocation:decrementRedeliveryCounter(exchange) @AT@ 6192 @LENGTH@ 36
------------INS SimpleName@@MethodName:decrementRedeliveryCounter:[exchange] @TO@ MethodInvocation@@decrementRedeliveryCounter(exchange) @AT@ 6192 @LENGTH@ 36
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:decrementRedeliveryCounter:[exchange] @AT@ 6219 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:set.add(object) @TO@ MethodDeclaration@@public, Object, MethodName:set, int index, Object object,  @AT@ 8296 @LENGTH@ 16
---INS MethodInvocation@@set.add(object) @TO@ ExpressionStatement@@MethodInvocation:set.add(object) @AT@ 8296 @LENGTH@ 15
------INS SimpleName@@Name:set @TO@ MethodInvocation@@set.add(object) @AT@ 8296 @LENGTH@ 3
------INS SimpleName@@MethodName:add:[object] @TO@ MethodInvocation@@set.add(object) @AT@ 8300 @LENGTH@ 11
---------INS SimpleName@@object @TO@ SimpleName@@MethodName:add:[object] @AT@ 8304 @LENGTH@ 6


MOV FieldDeclaration@@protected, JMXConnector, [clientConnector] @TO@ TypeDeclaration@@[public]JmxInstrumentationWithConnectorTest, JmxInstrumentationUsingDefaultsTest @AT@ 1247 @LENGTH@ 39


UPD FieldDeclaration@@private, boolean, [showOutBodyType=false] @TO@ private, boolean, [showOutBodyType] @AT@ 1557 @LENGTH@ 40
---UPD VariableDeclarationFragment@@showOutBodyType=false @TO@ showOutBodyType @AT@ 1573 @LENGTH@ 23
------DEL BooleanLiteral@@false @AT@ 1591 @LENGTH@ 5


UPD ForStatement@@for (Enumeration e=props.propertyNames(); e.hasMoreElements(); ) {  String s=(String)e.nextElement();  c.setProperty(s,props.getProperty(s));} @TO@ for (Enumeration e=props.propertyNames(); e.hasMoreElements(); ) {  String s=(String)e.nextElement();  String value=props.getProperty(s);  if (value != null) {    c.setProperty(s,value);  }} @AT@ 58937 @LENGTH@ 178
---DEL ExpressionStatement@@MethodInvocation:c.setProperty(s,props.getProperty(s)) @AT@ 59066 @LENGTH@ 39
---INS VariableDeclarationStatement@@String value=props.getProperty(s); @TO@ ForStatement@@for (Enumeration e=props.propertyNames(); e.hasMoreElements(); ) {  String s=(String)e.nextElement();  c.setProperty(s,props.getProperty(s));} @AT@ 59224 @LENGTH@ 36
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=props.getProperty(s); @AT@ 59224 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=props.getProperty(s) @TO@ VariableDeclarationStatement@@String value=props.getProperty(s); @AT@ 59231 @LENGTH@ 28
---------MOV MethodInvocation@@props.getProperty(s) @TO@ VariableDeclarationFragment@@value=props.getProperty(s) @AT@ 59083 @LENGTH@ 20
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=props.getProperty(s) @AT@ 59231 @LENGTH@ 5
---INS IfStatement@@if (value != null) {  c.setProperty(s,value);} @TO@ ForStatement@@for (Enumeration e=props.propertyNames(); e.hasMoreElements(); ) {  String s=(String)e.nextElement();  c.setProperty(s,props.getProperty(s));} @AT@ 59273 @LENGTH@ 74
------INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null) {  c.setProperty(s,value);} @AT@ 59276 @LENGTH@ 13
---------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 59276 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 59281 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 59285 @LENGTH@ 4
------INS Block@@ThenBody:{  c.setProperty(s,value);} @TO@ IfStatement@@if (value != null) {  c.setProperty(s,value);} @AT@ 59291 @LENGTH@ 56
---------INS ExpressionStatement@@MethodInvocation:c.setProperty(s,value) @TO@ Block@@ThenBody:{  c.setProperty(s,value);} @AT@ 59309 @LENGTH@ 24
------------MOV MethodInvocation@@c.setProperty(s,props.getProperty(s)) @TO@ ExpressionStatement@@MethodInvocation:c.setProperty(s,value) @AT@ 59066 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:setProperty:[s, props.getProperty(s)] @TO@ MethodName:setProperty:[s, value] @AT@ 59068 @LENGTH@ 36
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setProperty:[s, props.getProperty(s)] @AT@ 59326 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisifed() @TO@ MethodInvocation:assertMockEndpointsSatisfied() @AT@ 1787 @LENGTH@ 31
---UPD MethodInvocation@@MethodName:assertMockEndpointsSatisifed:[] @TO@ MethodName:assertMockEndpointsSatisfied:[] @AT@ 1787 @LENGTH@ 30


UPD FieldDeclaration@@protected, int, [maximumRedeliveries=6] @TO@ protected, int, [maximumRedeliveries=5] @AT@ 1852 @LENGTH@ 38
---UPD VariableDeclarationFragment@@maximumRedeliveries=6 @TO@ maximumRedeliveries=5 @AT@ 1866 @LENGTH@ 23
------UPD NumberLiteral@@6 @TO@ 5 @AT@ 1888 @LENGTH@ 1


UPD MethodDeclaration@@public, Map, MethodName:deserialize, String context,  @TO@ public, Map<String,Object>, MethodName:deserialize, String context,  @AT@ 753 @LENGTH@ 84
---DEL SimpleType@@Map @AT@ 760 @LENGTH@ 3
---UPD ReturnStatement@@CastExpression:(Map)xstream.fromXML(context) @TO@ CastExpression:(Map<String,Object>)xstream.fromXML(context) @AT@ 796 @LENGTH@ 38
------UPD CastExpression@@(Map)xstream.fromXML(context) @TO@ (Map<String,Object>)xstream.fromXML(context) @AT@ 803 @LENGTH@ 30
---------DEL SimpleType@@Map @AT@ 804 @LENGTH@ 3
---------INS ParameterizedType@@Map<String,Object> @TO@ CastExpression@@(Map)xstream.fromXML(context) @AT@ 868 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 868 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 872 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 880 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Object> @TO@ MethodDeclaration@@public, Map, MethodName:deserialize, String context,  @AT@ 808 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 808 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 812 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 820 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:assertTrue(result instanceof Order) @AT@ 4350 @LENGTH@ 36
---DEL MethodInvocation@@assertTrue(result instanceof Order) @AT@ 4350 @LENGTH@ 35
------DEL SimpleName@@MethodName:assertTrue:[result instanceof Order] @AT@ 4350 @LENGTH@ 35
---------DEL InstanceofExpression@@result instanceof Order @AT@ 4361 @LENGTH@ 23
------------DEL SimpleName@@result @AT@ 4361 @LENGTH@ 6
------------DEL Instanceof@@instanceof @AT@ 4368 @LENGTH@ 10
------------DEL SimpleType@@Order @AT@ 4379 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:lessFile=new File("ABC") @TO@ Assignment:lessFile=new File("abc") @AT@ 1983 @LENGTH@ 29
---UPD Assignment@@lessFile=new File("ABC") @TO@ lessFile=new File("abc") @AT@ 1983 @LENGTH@ 28
------UPD ClassInstanceCreation@@File["ABC"] @TO@ File["abc"] @AT@ 1996 @LENGTH@ 15
---------UPD StringLiteral@@"ABC" @TO@ "abc" @AT@ 2005 @LENGTH@ 5


UPD IfStatement@@if (version == null) {  version=new Integer(0);} else {  version=new Integer(version.intValue() + 1);} @TO@ if (version == null) {  version=0;} else {  version=version + 1;} @AT@ 1908 @LENGTH@ 116
---UPD Block@@ThenBody:{  version=new Integer(0);} @TO@ ThenBody:{  version=0;} @AT@ 1929 @LENGTH@ 34
------UPD ExpressionStatement@@Assignment:version=new Integer(0) @TO@ Assignment:version=0 @AT@ 1934 @LENGTH@ 25
---------UPD Assignment@@version=new Integer(0) @TO@ version=0 @AT@ 1934 @LENGTH@ 24
------------DEL ClassInstanceCreation@@Integer[0] @AT@ 1944 @LENGTH@ 14
---------------DEL New@@new @AT@ 1944 @LENGTH@ 3
---------------DEL SimpleType@@Integer @AT@ 1948 @LENGTH@ 7
---------------DEL NumberLiteral@@0 @AT@ 1956 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ Assignment@@version=new Integer(0) @AT@ 1944 @LENGTH@ 1
---UPD Block@@ElseBody:{  version=new Integer(version.intValue() + 1);} @TO@ ElseBody:{  version=version + 1;} @AT@ 1969 @LENGTH@ 55
------UPD ExpressionStatement@@Assignment:version=new Integer(version.intValue() + 1) @TO@ Assignment:version=version + 1 @AT@ 1974 @LENGTH@ 46
---------UPD Assignment@@version=new Integer(version.intValue() + 1) @TO@ version=version + 1 @AT@ 1974 @LENGTH@ 45
------------INS InfixExpression@@version + 1 @TO@ Assignment@@version=new Integer(version.intValue() + 1) @AT@ 1971 @LENGTH@ 11
---------------INS SimpleName@@version @TO@ InfixExpression@@version + 1 @AT@ 1971 @LENGTH@ 7
---------------MOV Operator@@+ @TO@ InfixExpression@@version + 1 @AT@ 2014 @LENGTH@ 1
---------------MOV NumberLiteral@@1 @TO@ InfixExpression@@version + 1 @AT@ 2017 @LENGTH@ 1
------------DEL ClassInstanceCreation@@Integer[version.intValue() + 1] @AT@ 1984 @LENGTH@ 35
---------------DEL New@@new @AT@ 1984 @LENGTH@ 3
---------------DEL SimpleType@@Integer @AT@ 1988 @LENGTH@ 7
---------------DEL InfixExpression@@version.intValue() + 1 @AT@ 1996 @LENGTH@ 22
------------------DEL MethodInvocation@@version.intValue() @AT@ 1996 @LENGTH@ 18
---------------------DEL SimpleName@@Name:version @AT@ 1996 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:intValue:[] @AT@ 2004 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(4,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count")) @TO@ MethodInvocation:assertEquals(4,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count")) @AT@ 4315 @LENGTH@ 119
---UPD MethodInvocation@@assertEquals(4,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count")) @TO@ assertEquals(4,executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count")) @AT@ 4315 @LENGTH@ 118
------UPD SimpleName@@MethodName:assertEquals:[4, executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count")] @TO@ MethodName:assertEquals:[4, executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count")] @AT@ 4315 @LENGTH@ 118
---------UPD MethodInvocation@@executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count") @TO@ executionContext.getLong(ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count") @AT@ 4331 @LENGTH@ 101
------------UPD SimpleName@@MethodName:getLong:[ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count"] @TO@ MethodName:getLong:[ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count"] @AT@ 4348 @LENGTH@ 84
---------------UPD InfixExpression@@ClassUtils.getShortName(FlatFileItemReader.class) + ".item.count" @TO@ ClassUtils.getShortName(FlatFileItemReader.class) + ".piece.count" @AT@ 4356 @LENGTH@ 75
------------------UPD StringLiteral@@".item.count" @TO@ ".piece.count" @AT@ 4418 @LENGTH@ 13


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiRecordType.xml"}), public]MultiRecordTypeFunctionalTests, AbstractJobTests @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/multiRecordType.xml"}), public]MultiRecordTypeFunctionalTests, AbstractJobTests @AT@ 1072 @LENGTH@ 674
---UPD NormalAnnotation@@@ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/iosampleJob.xml","/jobs/iosample/multiRecordType.xml"}) @TO@ @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/jobs/ioSampleJob.xml","/jobs/iosample/multiRecordType.xml"}) @AT@ 1112 @LENGTH@ 138


UPD ReturnStatement@@MethodInvocation:fieldError.getResult().getOriginalValue() @TO@ MethodInvocation:fieldError.getOriginalValue() @AT@ 4557 @LENGTH@ 49
---UPD MethodInvocation@@fieldError.getResult().getOriginalValue() @TO@ fieldError.getOriginalValue() @AT@ 4564 @LENGTH@ 41
------DEL MethodInvocation@@MethodName:getResult:[] @AT@ 4564 @LENGTH@ 22


UPD EnhancedForStatement@@for (ItemWrapper<T> item : inputs) {  contribution.incrementReadCount();  S output=doProcess(item);  if (output != null) {    outputs.add(output);  } else {    filtered++;  }} @TO@ for (ItemWrapper<T> item : inputs) {  S output=doProcess(item);  if (output != null) {    outputs.add(output);  } else {    filtered++;  }} @AT@ 6252 @LENGTH@ 200
---DEL ExpressionStatement@@MethodInvocation:contribution.incrementReadCount() @AT@ 6296 @LENGTH@ 34
------DEL MethodInvocation@@contribution.incrementReadCount() @AT@ 6296 @LENGTH@ 33
---------DEL SimpleName@@Name:contribution @AT@ 6296 @LENGTH@ 12
---------DEL SimpleName@@MethodName:incrementReadCount:[] @AT@ 6309 @LENGTH@ 20


UPD TypeDeclaration@@[private, static]OsgiUtil,  @TO@ [private, static, final]OsgiUtil,  @AT@ 13172 @LENGTH@ 1178
---INS Modifier@@final @TO@ TypeDeclaration@@[private, static]OsgiUtil,  @AT@ 13187 @LENGTH@ 5


INS MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @TO@ TypeDeclaration@@[public]HttpEndpoint, DefaultPollingEndpoint<HttpExchange> @AT@ 3894 @LENGTH@ 182
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 3894 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 3901 @LENGTH@ 7
---INS SimpleName@@MethodName:isLenientProperties @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 3909 @LENGTH@ 19
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:isLenientProperties,  @AT@ 4058 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4065 @LENGTH@ 4


UPD TypeDeclaration@@[private]JobExecutionRowMapper, [ParameterizedRowMapper<JobExecution>] @TO@ [private, static]JobExecutionRowMapper, [ParameterizedRowMapper<JobExecution>] @AT@ 11150 @LENGTH@ 973
---INS Modifier@@static @TO@ TypeDeclaration@@[private]JobExecutionRowMapper, [ParameterizedRowMapper<JobExecution>] @AT@ 11158 @LENGTH@ 6


UPD FieldDeclaration@@private, Class<?>, [type] @TO@ private, final, Class<?>, [type] @AT@ 1074 @LENGTH@ 22
---INS Modifier@@final @TO@ FieldDeclaration@@private, Class<?>, [type] @AT@ 1084 @LENGTH@ 5


UPD MethodDeclaration@@public, SpringIntegrationExchange, MethodName:createExchange,  @TO@ public, Exchange, MethodName:createExchange,  @AT@ 2626 @LENGTH@ 110
---UPD SimpleType@@SpringIntegrationExchange @TO@ Exchange @AT@ 2633 @LENGTH@ 25


UPD MethodDeclaration@@public, static, ByteBuffer, MethodName:toByteBuffer, final Message message, Exception,  @TO@ public, static, ByteBuffer, MethodName:toByteBuffer, final Message message, Exchange exchange, Exception,  @AT@ 1689 @LENGTH@ 2326
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, ByteBuffer, MethodName:toByteBuffer, final Message message, Exception,  @AT@ 1767 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1767 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1776 @LENGTH@ 8
---UPD IfStatement@@if (message instanceof TextMessage) {  final String text=((TextMessage)message).getText();  return NIOConverter.toByteBuffer(text);} @TO@ if (message instanceof TextMessage) {  final String text=((TextMessage)message).getText();  return NIOConverter.toByteBuffer(text,exchange);} @AT@ 1778 @LENGTH@ 165
------UPD Block@@ThenBody:{  final String text=((TextMessage)message).getText();  return NIOConverter.toByteBuffer(text);} @TO@ ThenBody:{  final String text=((TextMessage)message).getText();  return NIOConverter.toByteBuffer(text,exchange);} @AT@ 1814 @LENGTH@ 129
---------UPD ReturnStatement@@MethodInvocation:NIOConverter.toByteBuffer(text) @TO@ MethodInvocation:NIOConverter.toByteBuffer(text,exchange) @AT@ 1894 @LENGTH@ 39
------------UPD MethodInvocation@@NIOConverter.toByteBuffer(text) @TO@ NIOConverter.toByteBuffer(text,exchange) @AT@ 1901 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:toByteBuffer:[text] @TO@ MethodName:toByteBuffer:[text, exchange] @AT@ 1914 @LENGTH@ 18
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toByteBuffer:[text] @AT@ 1969 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:uri="file:target/test-rename-inbox?moveNamePrefix=foo/?consumer.recursive=true" @TO@ Assignment:params="?moveNamePrefix=foo/?consumer.recursive=true" @AT@ 1055 @LENGTH@ 82
---UPD Assignment@@uri="file:target/test-rename-inbox?moveNamePrefix=foo/?consumer.recursive=true" @TO@ params="?moveNamePrefix=foo/?consumer.recursive=true" @AT@ 1055 @LENGTH@ 81
------UPD SimpleName@@uri @TO@ params @AT@ 1055 @LENGTH@ 3
------UPD StringLiteral@@"file:target/test-rename-inbox?moveNamePrefix=foo/?consumer.recursive=true" @TO@ "?moveNamePrefix=foo/?consumer.recursive=true" @AT@ 1061 @LENGTH@ 75


UPD VariableDeclarationStatement@@Long newId=new Long(currentId++); @TO@ Long newId=currentId++; @AT@ 1212 @LENGTH@ 35
---UPD VariableDeclarationFragment@@newId=new Long(currentId++) @TO@ newId=currentId++ @AT@ 1217 @LENGTH@ 29
------DEL ClassInstanceCreation@@Long[currentId++] @AT@ 1225 @LENGTH@ 21
---------DEL New@@new @AT@ 1225 @LENGTH@ 3
---------DEL SimpleType@@Long @AT@ 1229 @LENGTH@ 4
---------DEL PostfixExpression@@currentId++ @AT@ 1234 @LENGTH@ 11
------INS PostfixExpression@@currentId++ @TO@ VariableDeclarationFragment@@newId=new Long(currentId++) @AT@ 1225 @LENGTH@ 11
---------MOV SimpleName@@currentId @TO@ PostfixExpression@@currentId++ @AT@ 1234 @LENGTH@ 9
---------MOV Operator@@++ @TO@ PostfixExpression@@currentId++ @AT@ 1244 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:delegate=new SimpleCompletionPolicy(new Long(jobParameters.getLong(keyName)).intValue()) @TO@ Assignment:delegate=new SimpleCompletionPolicy((int)jobParameters.getLong(keyName)) @AT@ 2785 @LENGTH@ 91
---UPD Assignment@@delegate=new SimpleCompletionPolicy(new Long(jobParameters.getLong(keyName)).intValue()) @TO@ delegate=new SimpleCompletionPolicy((int)jobParameters.getLong(keyName)) @AT@ 2785 @LENGTH@ 90
------DEL ClassInstanceCreation@@SimpleCompletionPolicy[new Long(jobParameters.getLong(keyName)).intValue()] @AT@ 2796 @LENGTH@ 79
---------DEL New@@new @AT@ 2796 @LENGTH@ 3
---------DEL SimpleType@@SimpleCompletionPolicy @AT@ 2800 @LENGTH@ 22
---------DEL MethodInvocation@@new Long(jobParameters.getLong(keyName)).intValue() @AT@ 2823 @LENGTH@ 51
------------DEL SimpleName@@MethodName:intValue:[] @AT@ 2864 @LENGTH@ 10
------MOV ClassInstanceCreation@@Long[jobParameters.getLong(keyName)] @TO@ Assignment@@delegate=new SimpleCompletionPolicy(new Long(jobParameters.getLong(keyName)).intValue()) @AT@ 2823 @LENGTH@ 40
---------INS CastExpression@@(int)jobParameters.getLong(keyName) @TO@ ClassInstanceCreation@@Long[jobParameters.getLong(keyName)] @AT@ 2823 @LENGTH@ 36
------------INS PrimitiveType@@int @TO@ CastExpression@@(int)jobParameters.getLong(keyName) @AT@ 2824 @LENGTH@ 3
------------MOV MethodInvocation@@jobParameters.getLong(keyName) @TO@ CastExpression@@(int)jobParameters.getLong(keyName) @AT@ 2832 @LENGTH@ 30
---------UPD SimpleType@@Long @TO@ SimpleCompletionPolicy @AT@ 2827 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertExpression("exchange.in.headers","{foo=abc, bar=123}") @TO@ MethodInvocation:assertExpression("exchange.in.headers","{foo=abc, bar=123}","{bar=123, foo=abc}") @AT@ 1060 @LENGTH@ 62
---UPD MethodInvocation@@assertExpression("exchange.in.headers","{foo=abc, bar=123}") @TO@ assertExpression("exchange.in.headers","{foo=abc, bar=123}","{bar=123, foo=abc}") @AT@ 1060 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertExpression:["exchange.in.headers", "{foo=abc, bar=123}"] @TO@ MethodName:assertExpression:["exchange.in.headers", "{foo=abc, bar=123}", "{bar=123, foo=abc}"] @AT@ 1060 @LENGTH@ 61
---------INS StringLiteral@@"{bar=123, foo=abc}" @TO@ SimpleName@@MethodName:assertExpression:["exchange.in.headers", "{foo=abc, bar=123}"] @AT@ 1193 @LENGTH@ 20


INS IfStatement@@if (!isSymlink(directory)) {  cleanDirectory(directory);} @TO@ MethodDeclaration@@public, static, void, MethodName:deleteDirectory, File directory, IOException,  @AT@ 41810 @LENGTH@ 77
---INS PrefixExpression@@!isSymlink(directory) @TO@ IfStatement@@if (!isSymlink(directory)) {  cleanDirectory(directory);} @AT@ 41814 @LENGTH@ 21
------INS Operator@@! @TO@ PrefixExpression@@!isSymlink(directory) @AT@ 41814 @LENGTH@ 1
------INS MethodInvocation@@isSymlink(directory) @TO@ PrefixExpression@@!isSymlink(directory) @AT@ 41815 @LENGTH@ 20
---------INS SimpleName@@MethodName:isSymlink:[directory] @TO@ MethodInvocation@@isSymlink(directory) @AT@ 41815 @LENGTH@ 20
------------INS SimpleName@@directory @TO@ SimpleName@@MethodName:isSymlink:[directory] @AT@ 41825 @LENGTH@ 9
---INS Block@@ThenBody:{  cleanDirectory(directory);} @TO@ IfStatement@@if (!isSymlink(directory)) {  cleanDirectory(directory);} @AT@ 41837 @LENGTH@ 50
------MOV ExpressionStatement@@MethodInvocation:cleanDirectory(directory) @TO@ Block@@ThenBody:{  cleanDirectory(directory);} @AT@ 41810 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodInvocation:Thread.sleep(900) @AT@ 2882 @LENGTH@ 19
---UPD MethodInvocation@@Thread.sleep(1000) @TO@ Thread.sleep(900) @AT@ 2882 @LENGTH@ 18
------UPD SimpleName@@MethodName:sleep:[1000] @TO@ MethodName:sleep:[900] @AT@ 2889 @LENGTH@ 11
---------UPD NumberLiteral@@1000 @TO@ 900 @AT@ 2895 @LENGTH@ 4
